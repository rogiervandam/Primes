GAS LISTING /tmp/ccFOD2R4.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccFOD2R4.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	continuePattern_smallSize:
  87              	.LVL0:
  88              	.LFB62:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // SIeve alogithm by Rogier van Dam
   2:sieve_extend.c **** 
   3:sieve_extend.c **** // TODO; Check why vector is not working with range > 1000000
   4:sieve_extend.c **** 
   5:sieve_extend.c **** #include <stdio.h>
   6:sieve_extend.c **** #include <stdlib.h>
   7:sieve_extend.c **** #include <stdint.h>
   8:sieve_extend.c **** #include <time.h>
   9:sieve_extend.c **** #include <math.h>
  10:sieve_extend.c **** #include <string.h>
  11:sieve_extend.c **** 
  12:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  13:sieve_extend.c **** #define option_runonce 0
  14:sieve_extend.c **** #define debug if (option_runonce)
  15:sieve_extend.c **** 
  16:sieve_extend.c **** // defaults
  17:sieve_extend.c **** #define default_sieve_limit 1000000
  18:sieve_extend.c **** #define default_blocksize (32*1024*8)
  19:sieve_extend.c **** #define default_sieve_duration 5
  20:sieve_extend.c **** #define default_sample_duration 0.1
  21:sieve_extend.c **** #define default_sample_max 5
  22:sieve_extend.c **** #define default_verbose_level 0
  23:sieve_extend.c **** #define default_tune_level 1
  24:sieve_extend.c **** #define default_check_level 1
  25:sieve_extend.c **** #define default_show_primes_on_error 100
  26:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
GAS LISTING /tmp/ccFOD2R4.s 			page 3


  27:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  28:sieve_extend.c **** 
  29:sieve_extend.c **** // helper functions
  30:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  31:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  32:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  33:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  34:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  35:sieve_extend.c **** 
  36:sieve_extend.c **** // types
  37:sieve_extend.c **** #define bitword_t uint64_t
  38:sieve_extend.c **** #define TYPE uint64_t
  39:sieve_extend.c **** #define counter_t TYPE
  40:sieve_extend.c **** #define bitshift_t TYPE
  41:sieve_extend.c **** 
  42:sieve_extend.c **** // masks and mask helpers
  43:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  44:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  45:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  46:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  47:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  48:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  49:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  50:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  51:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  52:sieve_extend.c **** 
  53:sieve_extend.c **** // types (II) - calculated
  54:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  55:sieve_extend.c **** 
  56:sieve_extend.c **** // globals for tuning
  57:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  58:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  59:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  60:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  61:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 64;
  62:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  63:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  64:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  65:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  66:sieve_extend.c **** 
  67:sieve_extend.c **** // Patterns based on types
  68:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  69:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  70:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  71:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  72:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  73:sieve_extend.c **** 
  74:sieve_extend.c **** // helpder functions for word/vector indexing
  75:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  76:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  77:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  78:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  79:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  80:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  81:sieve_extend.c **** #define wordinvector(index) ((counter_t)(index) & (counter_t)VECTORMASK)
  82:sieve_extend.c **** 
  83:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
GAS LISTING /tmp/ccFOD2R4.s 			page 4


  84:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  85:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  86:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  87:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  88:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  89:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  90:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  91:sieve_extend.c **** 
  92:sieve_extend.c **** struct sieve_t {
  93:sieve_extend.c ****     bitword_t* bitstorage;
  94:sieve_extend.c ****     counter_t  bits;
  95:sieve_extend.c ****     counter_t  size;
  96:sieve_extend.c **** };
  97:sieve_extend.c **** 
  98:sieve_extend.c **** #include "debugtools.h"
  99:sieve_extend.c **** 
 100:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 101:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 102:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 103:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 104:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 107:sieve_extend.c ****     sieve->size     = size;
 108:sieve_extend.c ****     return sieve;
 109:sieve_extend.c **** }
 110:sieve_extend.c **** 
 111:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 112:sieve_extend.c ****     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 117:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitstorage, register counter_t index) {
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 123:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitstorage, register counter_t index) {
 124:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 125:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 126:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 127:sieve_extend.c ****    index += distance;
 128:sieve_extend.c ****    distance += index_bit;
 129:sieve_extend.c **** 
 130:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 131:sieve_extend.c ****        index_word++;
 132:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 133:sieve_extend.c ****        index += distance;
 134:sieve_extend.c ****    }
 135:sieve_extend.c **** 
 136:sieve_extend.c ****    return index;
 137:sieve_extend.c **** }
 138:sieve_extend.c **** 
 139:sieve_extend.c **** static inline void applyMask_word(bitword_t* __restrict bitstorage, const counter_t step, const cou
 140:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
GAS LISTING /tmp/ccFOD2R4.s 			page 5


 141:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 142:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 143:sieve_extend.c **** 
 144:sieve_extend.c ****    //#pragma GCC unroll 10
 145:sieve_extend.c ****    #pragma GCC ivdep
 146:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 152:sieve_extend.c ****    }
 153:sieve_extend.c **** 
 154:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(rang
 155:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****    }
 158:sieve_extend.c **** 
 159:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 160:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 161:sieve_extend.c ****    }
 162:sieve_extend.c **** }
 163:sieve_extend.c **** 
 164:sieve_extend.c **** 
 165:sieve_extend.c **** static inline void applyMask_vector(bitvector_t* __restrict bitstorage, const counter_t step, const
 166:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 167:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 168:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 169:sieve_extend.c ****     
 170:sieve_extend.c ****     #pragma GCC ivdep
 171:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 176:sieve_extend.c ****     }
 177:sieve_extend.c ****     
 178:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(r
 179:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****     }
 182:sieve_extend.c **** }
 183:sieve_extend.c **** 
 184:sieve_extend.c **** 
 185:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 186:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 187:sieve_extend.c **** // This is especially true for small steps over long ranges
 188:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 189:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitstorage, const counter_t range_start, 
 190:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 191:sieve_extend.c **** 
 192:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 193:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 194:sieve_extend.c **** 
 195:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 196:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 197:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
GAS LISTING /tmp/ccFOD2R4.s 			page 6


 198:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 199:sieve_extend.c ****             bitstorage[index_word] |= mask;
 200:sieve_extend.c ****         }
 201:sieve_extend.c ****     }
 202:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 203:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 204:sieve_extend.c ****         
 205:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 206:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 207:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 208:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 209:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 210:sieve_extend.c ****         }
 211:sieve_extend.c ****     }
 212:sieve_extend.c **** }
 213:sieve_extend.c **** 
 214:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 215:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitstorage, const counter_t range_s
 216:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 217:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 218:sieve_extend.c **** 
 219:sieve_extend.c ****     #pragma GCC ivdep
 220:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 221:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 222:sieve_extend.c ****     }
 223:sieve_extend.c **** }
 224:sieve_extend.c **** 
 225:sieve_extend.c **** static inline void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_word, counter_t r
 226:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 227:sieve_extend.c **** 
 228:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 229:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 230:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 231:sieve_extend.c **** 
 232:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 233:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 234:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 235:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 236:sieve_extend.c ****             return;
 237:sieve_extend.c ****         }
 238:sieve_extend.c **** 
 239:sieve_extend.c ****         #pragma GCC ivdep 
 240:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 241:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 242:sieve_extend.c ****     }
 243:sieve_extend.c ****     
 244:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 245:sieve_extend.c **** 
 246:sieve_extend.c ****     debug printf("..building masks in range %ju-%ju\n", (uintmax_t)range_start, (uintmax_t)range_st
 247:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 248:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 249:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 250:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 251:sieve_extend.c ****         register bitvector_t quadmask = { };
 252:sieve_extend.c **** 
 253:sieve_extend.c ****         // build a quadmask
 254:sieve_extend.c ****         #pragma GCC ivdep 
GAS LISTING /tmp/ccFOD2R4.s 			page 7


 255:sieve_extend.c ****         do {
 256:sieve_extend.c ****             quadmask[word] |= markmask(index);
 257:sieve_extend.c ****             index += step;
 258:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 259:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 260:sieve_extend.c **** 
 261:sieve_extend.c ****         // use mask on all n*step multiples
 262:sieve_extend.c ****         // register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_W
 263:sieve_extend.c ****         bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitsto
 264:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 265:sieve_extend.c ****     }
 266:sieve_extend.c **** }
 267:sieve_extend.c **** 
 268:sieve_extend.c **** static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const counter_t source_star
  90              		.loc 1 268 159 view -0
  91              		.cfi_startproc
 269:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 269 5 view .LVU1
 270:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitstorage(bitstorage, 4); }
 271:sieve_extend.c **** 
 272:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 272 5 view .LVU2
 273:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
  94              		.loc 1 273 5 view .LVU3
  95              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 268 159 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:272:     const counter_t source_word = wordindex(source_start);
 272:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 102              		.loc 1 272 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 268 159 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 109              		.loc 1 273 138 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 268 159 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:272:     const counter_t source_word = wordindex(source_start);
 272:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 116              		.loc 1 272 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 120              		.loc 1 273 138 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
GAS LISTING /tmp/ccFOD2R4.s 			page 8


 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 268 159 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 126              		.loc 1 273 137 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 129              		.loc 1 273 171 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 268 159 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 135              		.loc 1 273 137 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 138              		.loc 1 273 171 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 268 159 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 148              		.loc 1 273 171 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 268 159 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 157              		.loc 1 273 60 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 161              		.loc 1 273 116 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 164              		.loc 1 273 60 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 167              		.loc 1 273 87 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:268: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 268:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
GAS LISTING /tmp/ccFOD2R4.s 			page 9


 170              		.loc 1 268 159 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:273:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 173              		.loc 1 273 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 274 5 is_stmt 1 view .LVU26
 177              	.LBB300:
 178              		.loc 1 274 10 view .LVU27
 179              		.loc 1 274 54 view .LVU28
 180              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 274 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 275:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 275 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 274 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 192              		.loc 1 275 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 195              		.loc 1 275 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 274 90 is_stmt 1 discriminator 3 view .LVU34
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 274 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 274 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 275 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 274 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 209              		.loc 1 275 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 212              		.loc 1 275 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
GAS LISTING /tmp/ccFOD2R4.s 			page 10


 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 274 90 is_stmt 1 view .LVU41
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 274 54 view .LVU42
 217              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 274 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 275 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 274 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 226              		.loc 1 275 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 229              		.loc 1 275 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 274 90 is_stmt 1 view .LVU48
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 274 54 view .LVU49
 234              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 274 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 275 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 274 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 243              		.loc 1 275 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 274 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 249              		.loc 1 275 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 274 90 is_stmt 1 view .LVU56
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 274 54 view .LVU57
 254              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 274 5 is_stmt 0 view .LVU58
GAS LISTING /tmp/ccFOD2R4.s 			page 11


 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 275 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 274 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 263              		.loc 1 275 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 274 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 269              		.loc 1 275 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 274 90 is_stmt 1 view .LVU64
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 274 54 view .LVU65
 274              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 274 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 275 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 274 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 283              		.loc 1 275 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 274 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 289              		.loc 1 275 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 274 90 is_stmt 1 view .LVU72
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 274 54 view .LVU73
 294              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 274 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 275 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccFOD2R4.s 			page 12


 300              		.loc 1 274 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 303              		.loc 1 275 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 274 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 309              		.loc 1 275 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 274 90 is_stmt 1 view .LVU80
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 274 54 view .LVU81
 314              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 274 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 275 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 274 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 323              		.loc 1 275 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:275:         pattern |= (pattern << pattern_size);
 326              		.loc 1 275 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 274 90 is_stmt 1 view .LVU87
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 274 54 view .LVU88
 331              	# sieve_extend.c:274:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 274 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 274:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 274 5 view .LVU90
 340              	.LBE300:
 276:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 13


 277:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 277 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:277:     const counter_t destination_start = source_start + size;
 343              		.loc 1 277 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 278:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 278 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:279:     counter_t destination_stop_word = wordindex(destination_stop);
 279:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 279 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:278:     counter_t destination_start_word = wordindex(destination_start);
 278:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 278 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 278:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 278 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 279 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:279:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 279 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 280:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 280 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 280 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:280:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 280 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 281:sieve_extend.c ****         bitstorage[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(d
 282:sieve_extend.c ****         return;
 283:sieve_extend.c ****     }
 284:sieve_extend.c **** 
 285:sieve_extend.c ****     bitstorage[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 285 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:285:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 378              		.loc 1 285 40 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:287:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 286:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 14


 287:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 287 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:285:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 285:sieve_extend.c **** 
 384              		.loc 1 285 40 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 287 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:287:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 287 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.131,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 288:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 288 5 is_stmt 1 view .LVU108
 289:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 289 5 view .LVU109
 290:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 290 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:290:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 290 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:289:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 289:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 289 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:290:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 290 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 291:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 291 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:288:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 288:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 288 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:289:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 289:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 289 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 289:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 289 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.132,
 421              	# sieve_extend.c:291:     destination_start_word++;
 422              		.loc 1 291 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB301:
GAS LISTING /tmp/ccFOD2R4.s 			page 15


 292:sieve_extend.c ****     
 293:sieve_extend.c ****     //#pragma GCC unroll 16
 294:sieve_extend.c ****     #pragma GCC ivdep
 295:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 295 10 is_stmt 1 view .LVU119
 427              		.loc 1 295 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.130,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE301:
 432              	# sieve_extend.c:288:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 288:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 288 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 288:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 288 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.132
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB302:
 296:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 443              		.loc 1 296 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 445              		.loc 1 296 74 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 449              		.loc 1 296 57 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 452              		.loc 1 296 129 view .LVU126
 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 455              		.loc 1 296 118 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 458              		.loc 1 295 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 460              		.loc 1 295 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.132,
 462              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 463              		.loc 1 295 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
 465 01da 7452     		je	.L7	#,
 466              		.loc 1 296 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccFOD2R4.s 			page 16


 468              		.loc 1 296 83 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 471              		.loc 1 296 74 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 474              		.loc 1 296 101 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 477              		.loc 1 296 74 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 479              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 480              		.loc 1 296 129 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 483              		.loc 1 296 57 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 486              		.loc 1 296 118 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 489              		.loc 1 295 40 is_stmt 1 view .LVU139
 490              	.LVL28:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 491              		.loc 1 295 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.132,
 493              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 494              		.loc 1 295 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 296 9 is_stmt 1 view .LVU142
 498              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 499              		.loc 1 296 83 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 502              		.loc 1 296 74 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 505              		.loc 1 296 101 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 508              		.loc 1 296 74 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 511              		.loc 1 296 129 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 514              		.loc 1 296 57 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
GAS LISTING /tmp/ccFOD2R4.s 			page 17


 516              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 517              		.loc 1 296 118 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 520              		.loc 1 295 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 522              		.loc 1 295 25 view .LVU151
 523              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 524              		.loc 1 295 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 528              		.loc 1 295 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.133, prolog_loop_niters.132
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.134, niters.133
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.134,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.152,
 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.137, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
 548      0000
 549              	.LVL31:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 550              		.loc 1 295 40 view .LVU154
 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.137, vect_vec_iv_.137
 552 029e 4883C640 		add	rsi, 64	# ivtmp.152,
 553              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccFOD2R4.s 			page 18


 554              		.loc 1 296 83 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.137, vect_vec_iv_.137, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.137, vect_vec_iv_.137, tmp496
 556      F0
 557              		.loc 1 296 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 559              		.loc 1 296 83 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.137, vect_vec_iv_.137,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.137, vect_vec_iv_.137,
 561      DA31
 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.139, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 296 83 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.140, vect__45.139, vect_cst__148
 569              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 570              		.loc 1 296 101 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.141, vect__47.140, tmp498
 571      C5
 572              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 573              		.loc 1 296 74 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.142, vect_cst__152, vect__48.141
 575              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 576              		.loc 1 296 118 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.141
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.142
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.142
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.141
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.143, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.145, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 586      D7
 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 587      DB
 588              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 589              		.loc 1 296 46 view .LVU162
 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.147
 590      C0
 591              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccFOD2R4.s 			page 19


 592              		.loc 1 296 118 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 593      CB
 594              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 595              		.loc 1 296 46 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.147
 596      E0
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 597              		.loc 1 295 40 is_stmt 1 view .LVU165
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 598              		.loc 1 295 25 view .LVU166
 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.152, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 605              		.loc 1 296 83 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.137, vect_vec_iv_.137, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.137, vect_vec_iv_.137, tmp496
 607      E0
 608              		.loc 1 296 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 610              		.loc 1 296 83 is_stmt 0 discriminator 3 view .LVU169
 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.137, vect_vec_iv_.137,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.137, vect_vec_iv_.137,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.152,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.139, vect_cst__146, tmp400
 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.140, vect__45.139, vect_cst__148
 619              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 620              		.loc 1 296 101 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.141, vect__47.140, tmp498
 621      FD
 622              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 623              		.loc 1 296 74 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.142, vect_cst__152, vect__48.141
 624      CF
 625              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 626              		.loc 1 296 118 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.141
 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.142
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 630      D6
GAS LISTING /tmp/ccFOD2R4.s 			page 20


 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.142
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.141
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.143, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.145, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 636      F1
 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 637      C2
 638              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 639              		.loc 1 296 46 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.147
 640      80
 641              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 642              		.loc 1 296 83 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.137, vect_vec_iv_.137, tmp497
 644              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 645              		.loc 1 296 118 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 647              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 648              		.loc 1 296 83 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.137, vect_vec_iv_.137,
 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.137, vect_vec_iv_.137, tmp496
 651      F0
 652              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 653              		.loc 1 296 46 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.147
 654      A0
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 655              		.loc 1 295 40 is_stmt 1 discriminator 3 view .LVU178
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 656              		.loc 1 295 25 discriminator 3 view .LVU179
 657              		.loc 1 296 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 659              		.loc 1 296 83 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.137, vect_vec_iv_.137,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.139, vect_cst__146, tmp517
 663      C2
 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.140, vect__45.139, vect_cst__148
 665              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 666              		.loc 1 296 101 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.141, vect__47.140, tmp498
 667      CD
 668              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 669              		.loc 1 296 74 discriminator 3 view .LVU183
GAS LISTING /tmp/ccFOD2R4.s 			page 21


 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.142, vect_cst__152, vect__48.141
 670      E1
 671              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 672              		.loc 1 296 118 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.141
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.142
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.142
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.141
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.143, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.145, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.144, vect_cst__156, vect_patt_139.143
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.146, vect_cst__156, vect_patt_137.145
 683      F9
 684              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 685              		.loc 1 296 46 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.147
 686      C0
 687              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 688              		.loc 1 296 118 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.147, vect_patt_138.144, vect_patt_136.146
 689      D7
 690              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 691              		.loc 1 296 46 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.147
 692      E0
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 693              		.loc 1 295 40 is_stmt 1 discriminator 3 view .LVU188
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 694              		.loc 1 295 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.152, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.135, niters.133
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.135,
 700 0442 4901F6   		add	r14, rsi	# tmp.136, niters_vector_mult_vf.135
 701 0445 4939F5   		cmp	r13, rsi	# niters.133, niters_vector_mult_vf.135
 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
 705              	.LVL33:
 706              		.loc 1 296 9 view .LVU190
 707              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccFOD2R4.s 			page 22


 708              		.loc 1 296 83 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 711              		.loc 1 296 74 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 714              		.loc 1 296 83 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.136
 716              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 717              		.loc 1 296 19 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 719              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 720              		.loc 1 296 83 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 723              		.loc 1 296 101 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 726              		.loc 1 296 129 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 729              		.loc 1 296 74 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 732              		.loc 1 295 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 735              		.loc 1 296 57 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 738              		.loc 1 296 118 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 741              		.loc 1 295 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 743              		.loc 1 295 25 view .LVU203
 744              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 745              		.loc 1 295 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 296 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 750              		.loc 1 296 83 is_stmt 0 view .LVU206
 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 753              		.loc 1 296 74 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 755              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 756              		.loc 1 296 83 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
GAS LISTING /tmp/ccFOD2R4.s 			page 23


 758              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 759              		.loc 1 296 19 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 763              		.loc 1 296 83 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 766              		.loc 1 296 101 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 769              		.loc 1 296 74 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 772              		.loc 1 296 129 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 775              		.loc 1 296 57 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 778              		.loc 1 296 118 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 781              		.loc 1 295 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 784              		.loc 1 295 25 view .LVU217
 785              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 786              		.loc 1 295 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
 789              		.loc 1 296 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 791              		.loc 1 296 83 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 794              		.loc 1 296 74 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 797              		.loc 1 296 83 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 800              		.loc 1 296 19 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 802              	.LVL37:
 803              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 804              		.loc 1 296 83 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
 806              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 807              		.loc 1 296 101 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
GAS LISTING /tmp/ccFOD2R4.s 			page 24


 809              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 810              		.loc 1 296 74 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 813              		.loc 1 296 129 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 816              		.loc 1 296 57 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
 818              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 819              		.loc 1 296 118 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 822              		.loc 1 295 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 825              		.loc 1 295 25 view .LVU231
 826              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 827              		.loc 1 295 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
 829      0000
 830              		.loc 1 296 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 832              		.loc 1 296 83 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 835              		.loc 1 296 74 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 838              		.loc 1 296 83 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 840              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 841              		.loc 1 296 19 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 845              		.loc 1 296 83 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 848              		.loc 1 296 101 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 851              		.loc 1 296 129 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 852      F0
 853              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 854              		.loc 1 296 74 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 856              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 857              		.loc 1 296 57 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
GAS LISTING /tmp/ccFOD2R4.s 			page 25


 858      E8
 859              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 860              		.loc 1 296 118 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 863              		.loc 1 295 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 866              		.loc 1 295 25 view .LVU245
 867              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 868              		.loc 1 295 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 296 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 873              		.loc 1 296 83 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 876              		.loc 1 296 74 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 879              		.loc 1 296 83 view .LVU250
 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 882              		.loc 1 296 19 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 886              		.loc 1 296 83 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 889              		.loc 1 296 101 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
 891              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 892              		.loc 1 296 129 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 895              		.loc 1 296 74 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 898              		.loc 1 296 57 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 901              		.loc 1 296 118 view .LVU257
 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 904              		.loc 1 295 40 is_stmt 1 view .LVU258
 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccFOD2R4.s 			page 26


 907              		.loc 1 295 25 view .LVU259
 908              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 909              		.loc 1 295 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 296 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 914              		.loc 1 296 83 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 916              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 917              		.loc 1 296 74 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 920              		.loc 1 296 83 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 923              		.loc 1 296 19 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 927              		.loc 1 296 83 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 930              		.loc 1 296 101 view .LVU267
 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 933              		.loc 1 296 129 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 936              		.loc 1 296 74 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 939              		.loc 1 296 57 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 940      E8
 941              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 942              		.loc 1 296 118 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 945              		.loc 1 295 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 948              		.loc 1 295 25 view .LVU273
 949              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 950              		.loc 1 295 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
 953              		.loc 1 296 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 955              		.loc 1 296 83 is_stmt 0 view .LVU276
GAS LISTING /tmp/ccFOD2R4.s 			page 27


 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 958              		.loc 1 296 74 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 961              		.loc 1 296 83 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 964              		.loc 1 296 19 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
 967              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 968              		.loc 1 296 83 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 971              		.loc 1 296 101 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 974              		.loc 1 296 129 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 977              		.loc 1 296 74 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 980              		.loc 1 296 57 view .LVU284
 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 983              		.loc 1 296 118 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 986              		.loc 1 295 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 989              		.loc 1 295 25 view .LVU287
 990              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 991              		.loc 1 295 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 296 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 996              		.loc 1 296 83 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 999              		.loc 1 296 74 view .LVU291
 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1002              		.loc 1 296 83 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1004              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1005              		.loc 1 296 19 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
GAS LISTING /tmp/ccFOD2R4.s 			page 28


 1007              	.LVL47:
 1008              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1009              		.loc 1 296 83 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1012              		.loc 1 296 101 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1015              		.loc 1 296 129 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
 1017              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1018              		.loc 1 296 74 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1021              		.loc 1 296 57 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1024              		.loc 1 296 118 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1027              		.loc 1 295 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1030              		.loc 1 295 25 view .LVU301
 1031              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1032              		.loc 1 295 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 296 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1037              		.loc 1 296 83 is_stmt 0 view .LVU304
 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1040              		.loc 1 296 74 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1043              		.loc 1 296 83 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1046              		.loc 1 296 19 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1050              		.loc 1 296 83 view .LVU308
 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1053              		.loc 1 296 101 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
 1055              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1056              		.loc 1 296 129 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
GAS LISTING /tmp/ccFOD2R4.s 			page 29


 1057      F0
 1058              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1059              		.loc 1 296 74 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1062              		.loc 1 296 57 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1065              		.loc 1 296 118 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1068              		.loc 1 295 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1071              		.loc 1 295 25 view .LVU315
 1072              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1073              		.loc 1 295 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 296 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1078              		.loc 1 296 83 is_stmt 0 view .LVU318
 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1081              		.loc 1 296 74 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1084              		.loc 1 296 83 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1087              		.loc 1 295 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
 1089              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1090              		.loc 1 296 19 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1094              		.loc 1 296 83 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1097              		.loc 1 296 101 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1100              		.loc 1 296 129 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1101      F0
 1102              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1103              		.loc 1 296 74 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1105              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1106              		.loc 1 296 57 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
GAS LISTING /tmp/ccFOD2R4.s 			page 30


 1107      E8
 1108              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1109              		.loc 1 296 118 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1112              		.loc 1 295 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1115              		.loc 1 296 118 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1117              		.loc 1 295 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1119              		.loc 1 295 25 view .LVU332
 1120              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1121              		.loc 1 295 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 296 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1125              		.loc 1 296 83 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1129              		.loc 1 296 19 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1132              		.loc 1 296 83 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1136              		.loc 1 296 101 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1139              		.loc 1 296 74 view .LVU339
 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1143              		.loc 1 296 57 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1146              		.loc 1 296 129 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:296:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1150              		.loc 1 296 118 view .LVU342
 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1153              		.loc 1 295 40 is_stmt 1 view .LVU343
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1154              		.loc 1 295 25 view .LVU344
 1155              	.L10:
GAS LISTING /tmp/ccFOD2R4.s 			page 31


 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1156              		.loc 1 295 25 is_stmt 0 view .LVU345
 1157              	.LBE302:
 297:sieve_extend.c ****     }
 298:sieve_extend.c ****     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 298 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:298:     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 298 39 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:299: }
 299:sieve_extend.c **** }
 1163              		.loc 1 299 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 299 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 281:sieve_extend.c ****         return;
 1181              		.loc 1 281 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:281:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 281:sieve_extend.c ****         return;
 1183              		.loc 1 281 88 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:281:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 281:sieve_extend.c ****         return;
 1186              		.loc 1 281 44 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 282:sieve_extend.c ****     }
 1189              		.loc 1 282 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:299: }
 1191              		.loc 1 299 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 299 1 view .LVU355
 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
GAS LISTING /tmp/ccFOD2R4.s 			page 32


 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 299 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB303:
 1213              	# sieve_extend.c:295:     for (counter_t i=0; i<=loop_range; ++i ) {
 295:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1214              		.loc 1 295 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.136
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE303:
 1222              		.cfi_endproc
 1223              	.LFE62:
 1225 06bd 0F1F00   		.p2align 4
 1226              		.globl	compare_tuning_result
 1228              	compare_tuning_result:
 1229              	.LVL62:
 1230              	.LFB76:
 300:sieve_extend.c **** 
 301:sieve_extend.c **** static void continuePattern_aligned(bitword_t* bitstorage, const counter_t source_start, const coun
 302:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 303:sieve_extend.c **** 
 304:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 305:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 306:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 307:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 308:sieve_extend.c ****     
 309:sieve_extend.c ****     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 310:sieve_extend.c **** 
 311:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 312:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 313:sieve_extend.c ****         copy_word += size;
 314:sieve_extend.c ****     }
 315:sieve_extend.c **** 
 316:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 317:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 318:sieve_extend.c ****         source_word++;
 319:sieve_extend.c ****         copy_word++;
 320:sieve_extend.c ****     }
 321:sieve_extend.c **** 
 322:sieve_extend.c **** }
 323:sieve_extend.c **** 
 324:sieve_extend.c **** static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const counter_t source_start, c
 325:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 326:sieve_extend.c ****    
 327:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 328:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccFOD2R4.s 			page 33


 329:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 330:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 331:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 332:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 333:sieve_extend.c **** 
 334:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstorage[copy_word] >> shift
 335:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 336:sieve_extend.c **** 
 337:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 338:sieve_extend.c **** 
 339:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 340:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 341:sieve_extend.c **** 
 342:sieve_extend.c ****         #pragma GCC ivdep
 343:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; ++i) {
 344:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 345:sieve_extend.c ****         }
 346:sieve_extend.c **** 
 347:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 348:sieve_extend.c ****     }
 349:sieve_extend.c **** 
 350:sieve_extend.c ****     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 351:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 352:sieve_extend.c ****     }
 353:sieve_extend.c **** }
 354:sieve_extend.c **** 
 355:sieve_extend.c **** 
 356:sieve_extend.c **** static inline counter_t continuePattern_shiftleft_unrolled(bitword_t* __restrict bitstorage, const 
 357:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 358:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 359:sieve_extend.c ****     counter_t distance = 0;
 360:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 361:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 362:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 363:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 364:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 365:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 366:sieve_extend.c ****         copy_word += 2;
 367:sieve_extend.c ****         source_word += 2;
 368:sieve_extend.c ****         distance += 2;
 369:sieve_extend.c ****     }
 370:sieve_extend.c ****     return distance;
 371:sieve_extend.c **** }
 372:sieve_extend.c **** 
 373:sieve_extend.c **** static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t source_start, const co
 374:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 375:sieve_extend.c **** 
 376:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 377:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 378:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 379:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 380:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 381:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 382:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 383:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 384:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 385:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 34


 386:sieve_extend.c ****     copy_word++;
 387:sieve_extend.c ****     source_word++;
 388:sieve_extend.c **** 
 389:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 390:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 391:sieve_extend.c ****     source_word += distance;
 392:sieve_extend.c ****     copy_word += distance;
 393:sieve_extend.c **** 
 394:sieve_extend.c ****     debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start - 
 395:sieve_extend.c **** 
 396:sieve_extend.c ****     #pragma GCC ivdep
 397:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 398:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 399:sieve_extend.c ****     }
 400:sieve_extend.c **** 
 401:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 402:sieve_extend.c **** 
 403:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 404:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 405:sieve_extend.c **** 
 406:sieve_extend.c ****     #pragma GCC ivdep
 407:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 408:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 409:sieve_extend.c **** 
 410:sieve_extend.c ****     #pragma GCC ivdep
 411:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 412:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 413:sieve_extend.c **** 
 414:sieve_extend.c **** 
 415:sieve_extend.c ****  }
 416:sieve_extend.c **** 
 417:sieve_extend.c **** static inline void continuePattern(bitword_t* bitstorage, const counter_t source_start, const count
 418:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 419:sieve_extend.c **** 
 420:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 421:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 422:sieve_extend.c **** 
 423:sieve_extend.c ****     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, source_start, size, dest
 424:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 425:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 426:sieve_extend.c **** }
 427:sieve_extend.c **** 
 428:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitstorage, const counter_t block_start, const counter_t 
 429:sieve_extend.c ****     counter_t prime = prime_start;
 430:sieve_extend.c ****     counter_t start = 0;
 431:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 432:sieve_extend.c **** 
 433:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 434:sieve_extend.c ****     
 435:sieve_extend.c ****     while (prime*step <= block_stop) {
 436:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 437:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 438:sieve_extend.c ****         else 
 439:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 440:sieve_extend.c **** 
 441:sieve_extend.c ****         if unlikely(step < VECTORSTEP_FASTER) {
 442:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
GAS LISTING /tmp/ccFOD2R4.s 			page 35


 443:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 444:sieve_extend.c ****         }
 445:sieve_extend.c ****         else {
 446:sieve_extend.c ****             setBitsTrue_largeRange(bitstorage, start, step, block_stop);
 447:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 448:sieve_extend.c ****         }
 449:sieve_extend.c **** 
 450:sieve_extend.c ****         step  = prime * 2 + 1;
 451:sieve_extend.c ****     }
 452:sieve_extend.c **** }
 453:sieve_extend.c **** 
 454:sieve_extend.c **** struct block {
 455:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 456:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 457:sieve_extend.c ****     counter_t prime; // next prime to be striped
 458:sieve_extend.c **** };
 459:sieve_extend.c **** 
 460:sieve_extend.c **** // returns prime that could not be handled:
 461:sieve_extend.c **** // start is too large
 462:sieve_extend.c **** // range is too big
 463:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
 464:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 465:sieve_extend.c ****     register counter_t prime   = 0;
 466:sieve_extend.c ****     counter_t patternsize_bits = 1;
 467:sieve_extend.c ****     counter_t pattern_start    = 0;
 468:sieve_extend.c ****     counter_t range_stop       = block_start;
 469:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 470:sieve_extend.c **** 
 471:sieve_extend.c ****     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first word has to be cleared
 472:sieve_extend.c ****     
 473:sieve_extend.c ****     for (;range_stop < block_stop;) {
 474:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 475:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 476:sieve_extend.c ****         if unlikely(start > block_stop) break;
 477:sieve_extend.c **** 
 478:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 479:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 480:sieve_extend.c **** 
 481:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 482:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 483:sieve_extend.c ****         block.pattern_start = pattern_start;
 484:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 485:sieve_extend.c **** 
 486:sieve_extend.c ****         if likely(patternsize_bits>1) {
 487:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 488:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 489:sieve_extend.c ****         }
 490:sieve_extend.c ****         patternsize_bits *= step;
 491:sieve_extend.c **** 
 492:sieve_extend.c ****         // totally weird: executing code below is faster than omitting it...
 493:sieve_extend.c ****         // printf("Smallstep: %ju, mediumstep: %ju\n",SMALLSTEP_FASTER,MEDIUMSTEP_FASTER);
 494:sieve_extend.c ****         // if (step < MEDIUMSTEP_FASTER)      setBitsTrue_mediumStep(bitstorage, start, step, range
 495:sieve_extend.c ****         if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, range_
 496:sieve_extend.c ****         else                          setBitsTrue_largeRange(bitstorage, start, step, range_stop);
 497:sieve_extend.c ****         block.prime = prime;
 498:sieve_extend.c ****     } 
 499:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 36


 500:sieve_extend.c ****     return block;
 501:sieve_extend.c **** }
 502:sieve_extend.c **** 
 503:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 504:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 505:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 506:sieve_extend.c **** 
 507:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 508:sieve_extend.c **** 
 509:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 510:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 511:sieve_extend.c ****     continuePattern(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 512:sieve_extend.c ****     counter_t startprime = block.prime;
 513:sieve_extend.c **** 
 514:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 515:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 516:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 517:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 518:sieve_extend.c ****     } 
 519:sieve_extend.c **** 
 520:sieve_extend.c ****     return sieve;
 521:sieve_extend.c **** }
 522:sieve_extend.c **** 
 523:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 524:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 525:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 526:sieve_extend.c ****         primeCount++;
 527:sieve_extend.c ****         if (factor < maxFactor/2) {
 528:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 529:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 530:sieve_extend.c ****         }
 531:sieve_extend.c ****     }
 532:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 533:sieve_extend.c **** }
 534:sieve_extend.c **** 
 535:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 536:sieve_extend.c ****     counter_t primeCount = 1;
 537:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 538:sieve_extend.c ****     return primeCount;
 539:sieve_extend.c **** }
 540:sieve_extend.c **** 
 541:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 542:sieve_extend.c ****     printf("DeepAnalyzing\n");
 543:sieve_extend.c ****     counter_t warn_prime = 0;
 544:sieve_extend.c ****     counter_t warn_nonprime = 0;
 545:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 546:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 547:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 548:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 549:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 550:sieve_extend.c ****                 }
 551:sieve_extend.c ****             }
 552:sieve_extend.c ****         }
 553:sieve_extend.c ****         else {
 554:sieve_extend.c ****             counter_t c_prime = 0;
 555:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 556:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccFOD2R4.s 			page 37


 557:sieve_extend.c ****             }
 558:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 559:sieve_extend.c ****         }
 560:sieve_extend.c ****     }
 561:sieve_extend.c **** }
 562:sieve_extend.c **** 
 563:sieve_extend.c **** 
 564:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 565:sieve_extend.c **** 
 566:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 567:sieve_extend.c ****     counter_t valid_primes = 0;
 568:sieve_extend.c ****     switch(sieve->size) {
 569:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 570:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 571:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 572:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 573:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 574:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 575:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 576:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 577:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 578:sieve_extend.c ****         default:            valid_primes= 0;
 579:sieve_extend.c ****     }
 580:sieve_extend.c **** 
 581:sieve_extend.c ****     int valid = (valid_primes == primecount);
 582:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 583:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 584:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 585:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 586:sieve_extend.c ****     }
 587:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 588:sieve_extend.c ****     return (valid);
 589:sieve_extend.c **** }
 590:sieve_extend.c **** 
 591:sieve_extend.c **** void usage(char *name) {
 592:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 593:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 594:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 595:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 596:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 597:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 598:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 599:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 600:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 601:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 602:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 603:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 604:sieve_extend.c ****     exit(1);
 605:sieve_extend.c **** }
 606:sieve_extend.c **** 
 607:sieve_extend.c **** typedef struct  {
 608:sieve_extend.c ****     counter_t maxints;
 609:sieve_extend.c ****     counter_t blocksize_bits;
 610:sieve_extend.c ****     counter_t blocksize_kb;
 611:sieve_extend.c ****     counter_t free_bits;
 612:sieve_extend.c ****     counter_t smallstep_faster;
 613:sieve_extend.c ****     counter_t mediumstep_faster;
GAS LISTING /tmp/ccFOD2R4.s 			page 38


 614:sieve_extend.c ****     counter_t vectorstep_faster;
 615:sieve_extend.c ****     counter_t sample_max;
 616:sieve_extend.c ****     double    sample_duration;
 617:sieve_extend.c ****     counter_t passes;
 618:sieve_extend.c ****     double    elapsed_time;
 619:sieve_extend.c ****     double    avg;
 620:sieve_extend.c **** } tuning_result_type;
 621:sieve_extend.c **** 
 622:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 1231              		.loc 1 622 57 is_stmt 1 view -0
 1232              		.cfi_startproc
 1233              		.loc 1 622 57 is_stmt 0 view .LVU359
 1234 06c0 F30F1EFA 		endbr64	
 623:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 1235              		.loc 1 623 5 is_stmt 1 view .LVU360
 1236              	.LVL63:
 624:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 1237              		.loc 1 624 5 view .LVU361
 625:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 1238              		.loc 1 625 5 view .LVU362
 1239              	# sieve_extend.c:625:     return (resultB->avg > resultA->avg ? 1 : -1);
 1240              		.loc 1 625 45 is_stmt 0 view .LVU363
 1241 06c4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 1241      58
 1242 06c9 31C0     		xor	eax, eax	# <retval>
 1243 06cb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 1243      58
 1244 06d0 0F97C0   		seta	al	#, <retval>
 1245 06d3 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 1246              	# sieve_extend.c:626: }
 626:sieve_extend.c **** }
 1247              		.loc 1 626 1 view .LVU364
 1248 06d7 C3       		ret	
 1249              		.cfi_endproc
 1250              	.LFE76:
 1252 06d8 0F1F8400 		.p2align 4
 1252      00000000 
 1254              	continuePattern_shiftright_ivdep:
 1255              	.LVL64:
 1256              	.LFB64:
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1257              		.loc 1 324 155 is_stmt 1 view -0
 1258              		.cfi_startproc
 325:sieve_extend.c ****    
 1259              		.loc 1 325 5 view .LVU366
 327:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1260              		.loc 1 327 5 view .LVU367
 1261              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1262              		.loc 1 324 155 is_stmt 0 view .LVU368
 1263 06e0 55       		push	rbp	#
 1264              		.cfi_def_cfa_offset 16
 1265              		.cfi_offset 6, -16
 1266              	# sieve_extend.c:328:     const counter_t copy_start = source_start + size;
 328:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1267              		.loc 1 328 21 view .LVU369
 1268 06e1 4C8D0C16 		lea	r9, [rsi+rdx]	# copy_start,
GAS LISTING /tmp/ccFOD2R4.s 			page 39


 1269              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1270              		.loc 1 329 67 view .LVU370
 1271 06e5 4889F0   		mov	rax, rsi	# _5, source_start
 1272              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1273              		.loc 1 324 155 view .LVU371
 1274 06e8 4889E5   		mov	rbp, rsp	#,
 1275              		.cfi_def_cfa_register 6
 1276              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1277              		.loc 1 329 67 view .LVU372
 1278 06eb 83E03F   		and	eax, 63	# _5,
 1279              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1280              		.loc 1 324 155 view .LVU373
 1281 06ee 4157     		push	r15	#
 1282              	# sieve_extend.c:331:     register counter_t source_word = wordindex(source_start);
 331:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1283              		.loc 1 331 24 view .LVU374
 1284 06f0 48C1EE06 		shr	rsi, 6	# source_word,
 1285              	.LVL65:
 1286              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1287              		.loc 1 324 155 view .LVU375
 1288 06f4 4156     		push	r14	#
 1289              	# sieve_extend.c:327:     const counter_t destination_stop_word = wordindex(destination_stop);
 327:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1290              		.loc 1 327 21 view .LVU376
 1291 06f6 48C1E906 		shr	rcx, 6	# destination_stop_word,
 1292              	.LVL66:
 328:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1293              		.loc 1 328 5 is_stmt 1 view .LVU377
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1294              		.loc 1 329 5 view .LVU378
 1295              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1296              		.loc 1 324 155 is_stmt 0 view .LVU379
 1297 06fa 4155     		push	r13	#
 1298 06fc 4154     		push	r12	#
 1299              		.cfi_offset 15, -24
 1300              		.cfi_offset 14, -32
 1301              		.cfi_offset 13, -40
 1302              		.cfi_offset 12, -48
 1303              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1304              		.loc 1 334 42 view .LVU380
 1305 06fe 4C8D24F5 		lea	r12, 0[0+rsi*8]	# _9,
 1305      00000000 
 1306              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1307              		.loc 1 324 155 view .LVU381
 1308 0706 53       		push	rbx	#
 1309              		.cfi_offset 3, -56
 1310              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 329 39 view .LVU382
GAS LISTING /tmp/ccFOD2R4.s 			page 40


 1312 0707 4C89CB   		mov	rbx, r9	# _4, copy_start
 1313              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1314              		.loc 1 334 42 view .LVU383
 1315 070a 4E8D0427 		lea	r8, [rdi+r12]	# _10,
 1316              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1317              		.loc 1 324 155 view .LVU384
 1318              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1319              		.loc 1 329 39 view .LVU385
 1320 070e 83E33F   		and	ebx, 63	# _4,
 1321              	.LVL67:
 330:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1322              		.loc 1 330 5 is_stmt 1 view .LVU386
 331:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1323              		.loc 1 331 5 view .LVU387
 332:sieve_extend.c **** 
 1324              		.loc 1 332 5 view .LVU388
 1325              	# sieve_extend.c:324: static void continuePattern_shiftright_ivdep(bitword_t* bitstorage, const cou
 324:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1326              		.loc 1 324 155 is_stmt 0 view .LVU389
 1327 0711 4883E4E0 		and	rsp, -32	#,
 1328              	# sieve_extend.c:332:     register counter_t copy_word = wordindex(copy_start);
 332:sieve_extend.c **** 
 1329              		.loc 1 332 24 view .LVU390
 1330 0715 49C1E906 		shr	r9, 6	# copy_word,
 1331              	.LVL68:
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1332              		.loc 1 334 5 is_stmt 1 view .LVU391
 1333              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1334              		.loc 1 329 31 is_stmt 0 view .LVU392
 1335 0719 4989DB   		mov	r11, rbx	# shift, _4
 1336              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1337              		.loc 1 334 27 view .LVU393
 1338 071c 4E8D2CCF 		lea	r13, [rdi+r9*8]	# _7,
 1339              	# sieve_extend.c:329:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 329:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1340              		.loc 1 329 31 view .LVU394
 1341 0720 4929C3   		sub	r11, rax	# shift, _5
 1342              	.LVL69:
 1343              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1344              		.loc 1 334 27 view .LVU395
 1345 0723 4D8B7500 		mov	r14, QWORD PTR 0[r13]	# _8, *_7
 1346              	# sieve_extend.c:330:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 330:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1347              		.loc 1 330 31 view .LVU396
 1348 0727 4883C040 		add	rax, 64	# tmp391,
 1349              	.LVL70:
 1350              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1351              		.loc 1 334 56 view .LVU397
 1352 072b C442A1F7 		shlx	r15, QWORD PTR [r8], r11	# tmp393, *_10, shift
 1352      38
GAS LISTING /tmp/ccFOD2R4.s 			page 41


 1353 0730 44895C24 		mov	DWORD PTR -4[rsp], r11d	# %sfp, shift
 1353      FC
 1354              	# sieve_extend.c:330:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 330:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1355              		.loc 1 330 31 view .LVU398
 1356 0735 4829D8   		sub	rax, rbx	# shift_flipped, _4
 1357              	.LVL71:
 1358              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1359              		.loc 1 334 92 view .LVU399
 1360 0738 C442FBF7 		shrx	r10, r14, rax	# tmp395, _8, shift_flipped
 1360      D6
 1361 073d 894424F8 		mov	DWORD PTR -8[rsp], eax	# %sfp, shift_flipped
 1362              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1363              		.loc 1 334 66 view .LVU400
 1364 0741 4D09FA   		or	r10, r15	# tmp396, tmp393
 1365              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1366              		.loc 1 334 113 view .LVU401
 1367 0744 49C7C7FF 		mov	r15, -1	# tmp399,
 1367      FFFFFF
 1368 074b C4C2E1F7 		shlx	rbx, r15, rbx	# tmp398, tmp399, _4
 1368      DF
 1369              	.LVL72:
 1370              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1371              		.loc 1 334 111 view .LVU402
 1372 0750 4C21D3   		and	rbx, r10	# tmp400, tmp396
 1373              	# sieve_extend.c:335:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 335:sieve_extend.c **** 
 1374              		.loc 1 335 8 view .LVU403
 1375 0753 4D8D5101 		lea	r10, 1[r9]	# copy_word,
 1376              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1377              		.loc 1 334 27 view .LVU404
 1378 0757 4909DE   		or	r14, rbx	# tmp401, tmp400
 1379              	# sieve_extend.c:335:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 335:sieve_extend.c **** 
 1380              		.loc 1 335 8 view .LVU405
 1381 075a 4C39D1   		cmp	rcx, r10	# destination_stop_word, copy_word
 1382              	# sieve_extend.c:334:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 334:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1383              		.loc 1 334 27 view .LVU406
 1384 075d 4D897500 		mov	QWORD PTR 0[r13], r14	# *_7, tmp401
 335:sieve_extend.c **** 
 1385              		.loc 1 335 5 is_stmt 1 view .LVU407
 1386              	.LVL73:
 1387              	# sieve_extend.c:335:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 335:sieve_extend.c **** 
 1388              		.loc 1 335 8 is_stmt 0 view .LVU408
 1389 0761 0F829306 		jb	.L210	#,
 1389      0000
 337:sieve_extend.c **** 
 1390              		.loc 1 337 5 is_stmt 1 view .LVU409
 339:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 1391              		.loc 1 339 5 view .LVU410
GAS LISTING /tmp/ccFOD2R4.s 			page 42


 1392              	# sieve_extend.c:339:     if (size >= WORD_SIZE_counter) {
 339:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 1393              		.loc 1 339 8 is_stmt 0 view .LVU411
 1394 0767 4883FA3F 		cmp	rdx, 63	# size,
 1395 076b 0F869F06 		jbe	.L56	#,
 1395      0000
 1396              	.LBB304:
 340:sieve_extend.c **** 
 1397              		.loc 1 340 9 is_stmt 1 view .LVU412
 1398              	.LVL74:
 1399              	.LBB305:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1400              		.loc 1 343 14 view .LVU413
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1401              		.loc 1 343 40 view .LVU414
 1402              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1403              		.loc 1 343 9 is_stmt 0 view .LVU415
 1404 0771 4989CF   		mov	r15, rcx	# loop_distance, destination_stop_word
 1405 0774 4D29D7   		sub	r15, r10	# loop_distance, copy_word
 1406              	.LVL75:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1407              		.loc 1 343 9 view .LVU416
 1408 0777 0F843704 		je	.L57	#,
 1408      0000
 1409 077d 4C89C2   		mov	rdx, r8	# tmp402, _10
 1410              	.LVL76:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1411              		.loc 1 343 9 view .LVU417
 1412 0780 41BE0500 		mov	r14d, 5	# tmp406,
 1412      0000
 1413 0786 48C1EA03 		shr	rdx, 3	# tmp402,
 1414 078a 4D8D6FFF 		lea	r13, -1[r15]	# tmp404,
 1415 078e 48F7DA   		neg	rdx	# tmp403
 1416 0791 83E203   		and	edx, 3	# prolog_loop_niters.185,
 1417 0794 488D5A03 		lea	rbx, 3[rdx]	# tmp405,
 1418 0798 4883FB05 		cmp	rbx, 5	# tmp405,
 1419 079c 490F42DE 		cmovb	rbx, r14	# tmp405,, tmp572, tmp406
 1420 07a0 4939DD   		cmp	r13, rbx	# tmp404, tmp572
 1421 07a3 0F82E50A 		jb	.L74	#,
 1421      0000
 1422 07a9 4885D2   		test	rdx, rdx	# prolog_loop_niters.185
 1423 07ac 0F84960A 		je	.L75	#,
 1423      0000
 344:sieve_extend.c ****         }
 1424              		.loc 1 344 13 is_stmt 1 view .LVU418
 1425              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1426              		.loc 1 344 115 is_stmt 0 view .LVU419
 1427 07b2 4E8B6427 		mov	r12, QWORD PTR 8[rdi+r12]	# *_416, *_416
 1427      08
 1428 07b7 C442A1F7 		shlx	r13, r12, r11	# tmp407, *_416, shift
 1428      EC
 1429              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1430              		.loc 1 344 66 view .LVU420
 1431 07bc 4D8B00   		mov	r8, QWORD PTR [r8]	# *_10, *_10
GAS LISTING /tmp/ccFOD2R4.s 			page 43


 1432 07bf C442FBF7 		shrx	r14, r8, rax	# tmp409, *_10, shift_flipped
 1432      F0
 1433              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1434              		.loc 1 344 84 view .LVU421
 1435 07c4 4D09EE   		or	r14, r13	# tmp411, tmp407
 1436 07c7 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.185,
 1437 07cb 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_421, tmp411
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1438              		.loc 1 343 58 is_stmt 1 view .LVU422
 1439              	.LVL77:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1440              		.loc 1 343 40 view .LVU423
 1441              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1442              		.loc 1 344 111 is_stmt 0 view .LVU424
 1443 07cf 488D5E01 		lea	rbx, 1[rsi]	# tmp553,
 1444              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1445              		.loc 1 343 58 view .LVU425
 1446 07d3 48C74424 		mov	QWORD PTR -16[rsp], 1	# %sfp,
 1446      F0010000 
 1446      00
 1447 07dc 7449     		je	.L59	#,
 344:sieve_extend.c ****         }
 1448              		.loc 1 344 13 is_stmt 1 view .LVU426
 1449              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1450              		.loc 1 344 115 is_stmt 0 view .LVU427
 1451 07de C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rbx*8], r11	# tmp413, *_436, shift
 1451      6CDF08
 1452              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1453              		.loc 1 344 66 view .LVU428
 1454 07e5 C462FBF7 		shrx	r12, QWORD PTR [rdi+rbx*8], rax	# tmp415, *_431, shift_flipped
 1454      24DF
 1455              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1456              		.loc 1 343 58 view .LVU429
 1457 07eb 48C74424 		mov	QWORD PTR -16[rsp], 2	# %sfp,
 1457      F0020000 
 1457      00
 1458              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1459              		.loc 1 344 84 view .LVU430
 1460 07f4 4D09E5   		or	r13, r12	# tmp417, tmp415
 1461 07f7 4E896CCF 		mov	QWORD PTR 16[rdi+r9*8], r13	# *_441, tmp417
 1461      10
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1462              		.loc 1 343 58 is_stmt 1 view .LVU431
 1463              	.LVL78:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1464              		.loc 1 343 40 view .LVU432
 1465 07fc 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.185,
 1466 0800 7525     		jne	.L59	#,
 344:sieve_extend.c ****         }
 1467              		.loc 1 344 13 view .LVU433
GAS LISTING /tmp/ccFOD2R4.s 			page 44


 1468              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1469              		.loc 1 343 58 is_stmt 0 view .LVU434
 1470 0802 48C74424 		mov	QWORD PTR -16[rsp], 3	# %sfp,
 1470      F0030000 
 1470      00
 1471              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1472              		.loc 1 344 62 view .LVU435
 1473 080b 4C8D7602 		lea	r14, 2[rsi]	# tmp418,
 1474              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1475              		.loc 1 344 66 view .LVU436
 1476 080f 4E8B2CF7 		mov	r13, QWORD PTR [rdi+r14*8]	# *_210, *_210
 1477              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1478              		.loc 1 344 115 view .LVU437
 1479 0813 C422A1F7 		shlx	r8, QWORD PTR 8[rdi+r14*8], r11	# tmp420, *_215, shift
 1479      44F708
 1480              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1481              		.loc 1 344 66 view .LVU438
 1482 081a C442FBF7 		shrx	r12, r13, rax	# tmp422, *_210, shift_flipped
 1482      E5
 1483              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1484              		.loc 1 344 84 view .LVU439
 1485 081f 4D09E0   		or	r8, r12	# tmp424, tmp422
 1486 0822 4E8944CF 		mov	QWORD PTR 24[rdi+r9*8], r8	# *_220, tmp424
 1486      18
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1487              		.loc 1 343 58 is_stmt 1 view .LVU440
 1488              	.LVL79:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1489              		.loc 1 343 40 view .LVU441
 1490              	.L59:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1491              		.loc 1 343 40 is_stmt 0 view .LVU442
 1492 0827 4D89FD   		mov	r13, r15	# niters.186, loop_distance
 1493 082a 4801D3   		add	rbx, rdx	# tmp428, prolog_loop_niters.185
 1494 082d 4929D5   		sub	r13, rdx	# niters.186, prolog_loop_niters.185
 1495 0830 4C8D0C16 		lea	r9, [rsi+rdx]	# tmp425,
 1496 0834 4D89EE   		mov	r14, r13	# bnd.187, niters.186
 1497 0837 4C01D2   		add	rdx, r10	# tmp430, copy_word
 1498 083a 49C1EE02 		shr	r14, 2	# bnd.187,
 1499 083e 4C8D24D7 		lea	r12, [rdi+rdx*8]	# vectp.200,
 1500 0842 49C1E605 		sal	r14, 5	# _458,
 1501              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1502              		.loc 1 343 33 view .LVU443
 1503 0846 31D2     		xor	edx, edx	# ivtmp.225
 1504 0848 4D8D46E0 		lea	r8, -32[r14]	# tmp562,
 1505 084c 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.191,
 1506 0850 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _14, %sfp
 1506      24F8
 1507 0856 488D1CDF 		lea	rbx, [rdi+rbx*8]	# vectp.195,
 1508 085a 49C1E805 		shr	r8, 5	# tmp560,
GAS LISTING /tmp/ccFOD2R4.s 			page 45


 1509 085e C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _12, %sfp
 1509      24FC
 1510 0864 4983C001 		add	r8, 1	# tmp563,
 1511 0868 4183E007 		and	r8d, 7	# tmp564,
 1512 086c 0F840301 		je	.L61	#,
 1512      0000
 1513 0872 4983F801 		cmp	r8, 1	# tmp564,
 1514 0876 0F84CE00 		je	.L152	#,
 1514      0000
 1515 087c 4983F802 		cmp	r8, 2	# tmp564,
 1516 0880 0F84A200 		je	.L153	#,
 1516      0000
 1517 0886 4983F803 		cmp	r8, 3	# tmp564,
 1518 088a 747B     		je	.L154	#,
 1519 088c 4983F804 		cmp	r8, 4	# tmp564,
 1520 0890 7453     		je	.L155	#,
 1521 0892 4983F805 		cmp	r8, 5	# tmp564,
 1522 0896 742C     		je	.L156	#,
 1523 0898 4983F806 		cmp	r8, 6	# tmp564,
 1524 089c 0F85C609 		jne	.L212	#,
 1524      0000
 1525              	.L157:
 344:sieve_extend.c ****         }
 1526              		.loc 1 344 13 is_stmt 1 view .LVU444
 1527              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1528              		.loc 1 344 66 is_stmt 0 view .LVU445
 1529 08a2 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r9+rdx]	# tmp924, MEM[base: vectp.191_259, index: ivtmp.225_456, offse
 1529      2411
 1530              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1531              		.loc 1 344 115 view .LVU446
 1532 08a8 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rbx+rdx]	# tmp925, MEM[base: vectp.195_266, index: ivtmp.225_456, offs
 1532      13
 1533              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1534              		.loc 1 344 66 view .LVU447
 1535 08ad C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__30.193, tmp924, _14
 1536              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1537              		.loc 1 344 115 view .LVU448
 1538 08b1 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__35.197, tmp925, _12
 1539              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1540              		.loc 1 344 84 view .LVU449
 1541 08b5 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__39.198, vect__30.193, vect__35.197
 1541      F7
 1542              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1543              		.loc 1 344 37 view .LVU450
 1544 08ba C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], 
 1544      3414
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1545              		.loc 1 343 58 is_stmt 1 view .LVU451
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1546              		.loc 1 343 40 view .LVU452
 1547 08c0 4883C220 		add	rdx, 32	# ivtmp.225,
GAS LISTING /tmp/ccFOD2R4.s 			page 46


 1548              	.L156:
 344:sieve_extend.c ****         }
 1549              		.loc 1 344 13 view .LVU453
 1550              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1551              		.loc 1 344 66 is_stmt 0 view .LVU454
 1552 08c4 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r9+rdx]	# tmp926, MEM[base: vectp.191_259, index: ivtmp.225_456, offset
 1552      1411
 1553              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1554              		.loc 1 344 115 view .LVU455
 1555 08ca C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rbx+rdx]	# tmp927, MEM[base: vectp.195_266, index: ivtmp.225_456, offse
 1555      13
 1556              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1557              		.loc 1 344 66 view .LVU456
 1558 08cf C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__30.193, tmp926, _14
 1559              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1560              		.loc 1 344 115 view .LVU457
 1561 08d3 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__35.197, tmp927, _12
 1562              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1563              		.loc 1 344 84 view .LVU458
 1564 08d7 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__39.198, vect__30.193, vect__35.197
 1565              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1566              		.loc 1 344 37 view .LVU459
 1567 08db C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm8	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], 
 1567      0414
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1568              		.loc 1 343 58 is_stmt 1 view .LVU460
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1569              		.loc 1 343 40 view .LVU461
 1570 08e1 4883C220 		add	rdx, 32	# ivtmp.225,
 1571              	.L155:
 344:sieve_extend.c ****         }
 1572              		.loc 1 344 13 view .LVU462
 1573              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1574              		.loc 1 344 66 is_stmt 0 view .LVU463
 1575 08e5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r9+rdx]	# tmp928, MEM[base: vectp.191_259, index: ivtmp.225_456, offset
 1575      0C11
 1576              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1577              		.loc 1 344 115 view .LVU464
 1578 08eb C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp929, MEM[base: vectp.195_266, index: ivtmp.225_456, offse
 1578      13
 1579              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1580              		.loc 1 344 66 view .LVU465
 1581 08f0 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__30.193, tmp928, _14
 1582              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1583              		.loc 1 344 115 view .LVU466
 1584 08f4 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__35.197, tmp929, _12
 1585              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccFOD2R4.s 			page 47


 344:sieve_extend.c ****         }
 1586              		.loc 1 344 84 view .LVU467
 1587 08f8 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__39.198, vect__30.193, vect__35.197
 1587      E3
 1588              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1589              		.loc 1 344 37 view .LVU468
 1590 08fd C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm12	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B],
 1590      2414
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1591              		.loc 1 343 58 is_stmt 1 view .LVU469
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1592              		.loc 1 343 40 view .LVU470
 1593 0903 4883C220 		add	rdx, 32	# ivtmp.225,
 1594              	.L154:
 344:sieve_extend.c ****         }
 1595              		.loc 1 344 13 view .LVU471
 1596              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1597              		.loc 1 344 66 is_stmt 0 view .LVU472
 1598 0907 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rdx]	# tmp930, MEM[base: vectp.191_259, index: ivtmp.225_456, offse
 1598      2C11
 1599              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1600              		.loc 1 344 115 view .LVU473
 1601 090d C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rbx+rdx]	# tmp931, MEM[base: vectp.195_266, index: ivtmp.225_456, offs
 1601      13
 1602              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1603              		.loc 1 344 66 view .LVU474
 1604 0912 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__30.193, tmp930, _14
 1605              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1606              		.loc 1 344 115 view .LVU475
 1607 0916 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__35.197, tmp931, _12
 1608              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1609              		.loc 1 344 84 view .LVU476
 1610 091a C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__39.198, vect__30.193, vect__35.197
 1611              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1612              		.loc 1 344 37 view .LVU477
 1613 091e C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], 
 1613      1414
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1614              		.loc 1 343 58 is_stmt 1 view .LVU478
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1615              		.loc 1 343 40 view .LVU479
 1616 0924 4883C220 		add	rdx, 32	# ivtmp.225,
 1617              	.L153:
 344:sieve_extend.c ****         }
 1618              		.loc 1 344 13 view .LVU480
 1619              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1620              		.loc 1 344 66 is_stmt 0 view .LVU481
 1621 0928 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r9+rdx]	# tmp932, MEM[base: vectp.191_259, index: ivtmp.225_456, offset
 1621      3C11
GAS LISTING /tmp/ccFOD2R4.s 			page 48


 1622              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1623              		.loc 1 344 115 view .LVU482
 1624 092e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rbx+rdx]	# tmp933, MEM[base: vectp.195_266, index: ivtmp.225_456, offse
 1624      13
 1625              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1626              		.loc 1 344 66 view .LVU483
 1627 0933 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__30.193, tmp932, _14
 1628              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1629              		.loc 1 344 115 view .LVU484
 1630 0937 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__35.197, tmp933, _12
 1631              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1632              		.loc 1 344 84 view .LVU485
 1633 093b C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__39.198, vect__30.193, vect__35.197
 1633      C8
 1634              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1635              		.loc 1 344 37 view .LVU486
 1636 0940 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm9	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], 
 1636      0C14
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1637              		.loc 1 343 58 is_stmt 1 view .LVU487
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1638              		.loc 1 343 40 view .LVU488
 1639 0946 4883C220 		add	rdx, 32	# ivtmp.225,
 1640              	.L152:
 344:sieve_extend.c ****         }
 1641              		.loc 1 344 13 view .LVU489
 1642              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1643              		.loc 1 344 66 is_stmt 0 view .LVU490
 1644 094a C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r9+rdx]	# tmp934, MEM[base: vectp.191_259, index: ivtmp.225_456, offse
 1644      1411
 1645              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1646              		.loc 1 344 115 view .LVU491
 1647 0950 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp935, MEM[base: vectp.195_266, index: ivtmp.225_456, offse
 1647      13
 1648              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1649              		.loc 1 344 66 view .LVU492
 1650 0955 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__30.193, tmp934, _14
 1651              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1652              		.loc 1 344 115 view .LVU493
 1653 0959 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__35.197, tmp935, _12
 1654              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1655              		.loc 1 344 84 view .LVU494
 1656 095d C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__39.198, vect__30.193, vect__35.197
 1656      EC
 1657              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1658              		.loc 1 344 37 view .LVU495
GAS LISTING /tmp/ccFOD2R4.s 			page 49


 1659 0962 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm13	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B],
 1659      2C14
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1660              		.loc 1 343 58 is_stmt 1 view .LVU496
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1661              		.loc 1 343 40 view .LVU497
 1662 0968 4883C220 		add	rdx, 32	# ivtmp.225,
 1663 096c 4C39F2   		cmp	rdx, r14	# ivtmp.225, _458
 1664 096f 0F843601 		je	.L199	#,
 1664      0000
 1665              	.L61:
 344:sieve_extend.c ****         }
 1666              		.loc 1 344 13 discriminator 3 view .LVU498
 1667              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1668              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU499
 1669 0975 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rdx]	# tmp865, MEM[base: vectp.191_259, index: ivtmp.225_456, offse
 1669      3411
 1670              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1671              		.loc 1 344 115 discriminator 3 view .LVU500
 1672 097b C5FE6F34 		vmovdqu	ymm6, YMMWORD PTR [rbx+rdx]	# tmp866, MEM[base: vectp.195_266, index: ivtmp.225_456, offse
 1672      13
 1673              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1674              		.loc 1 344 66 discriminator 3 view .LVU501
 1675 0980 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__30.193, tmp865, _14
 1676              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1677              		.loc 1 344 115 discriminator 3 view .LVU502
 1678 0984 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__35.197, tmp866, _12
 1679              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1680              		.loc 1 344 84 discriminator 3 view .LVU503
 1681 0988 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__39.198, vect__30.193, vect__35.197
 1682              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1683              		.loc 1 344 37 discriminator 3 view .LVU504
 1684 098c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], 
 1684      3C14
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1685              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU505
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1686              		.loc 1 343 40 discriminator 3 view .LVU506
 344:sieve_extend.c ****         }
 1687              		.loc 1 344 13 discriminator 3 view .LVU507
 1688              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1689              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU508
 1690 0992 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r9+rdx]	# tmp867, MEM[base: vectp.191_259, index: ivtmp.225_456, offs
 1690      641120
 1691              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1692              		.loc 1 344 115 discriminator 3 view .LVU509
 1693 0999 C57E6F44 		vmovdqu	ymm8, YMMWORD PTR 32[rbx+rdx]	# tmp868, MEM[base: vectp.195_266, index: ivtmp.225_456, off
 1693      1320
 1694              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccFOD2R4.s 			page 50


 344:sieve_extend.c ****         }
 1695              		.loc 1 344 66 discriminator 3 view .LVU510
 1696 099f C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__30.193, tmp867, _14
 1697              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1698              		.loc 1 344 115 discriminator 3 view .LVU511
 1699 09a3 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__35.197, tmp868, _12
 1700              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1701              		.loc 1 344 84 discriminator 3 view .LVU512
 1702 09a7 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__39.198, vect__30.193, vect__35.197
 1702      D1
 1703              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1704              		.loc 1 344 37 discriminator 3 view .LVU513
 1705 09ac C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm10	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B
 1705      541420
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1706              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU514
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1707              		.loc 1 343 40 discriminator 3 view .LVU515
 344:sieve_extend.c ****         }
 1708              		.loc 1 344 13 discriminator 3 view .LVU516
 1709              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1710              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU517
 1711 09b3 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r9+rdx]	# tmp869, MEM[base: vectp.191_259, index: ivtmp.225_456, off
 1711      5C1140
 1712              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1713              		.loc 1 344 115 discriminator 3 view .LVU518
 1714 09ba C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rbx+rdx]	# tmp870, MEM[base: vectp.195_266, index: ivtmp.225_456, off
 1714      1340
 1715              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1716              		.loc 1 344 66 discriminator 3 view .LVU519
 1717 09c0 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__30.193, tmp869, _14
 1718              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1719              		.loc 1 344 115 discriminator 3 view .LVU520
 1720 09c4 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__35.197, tmp870, _12
 1721              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1722              		.loc 1 344 84 discriminator 3 view .LVU521
 1723 09c8 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__39.198, vect__30.193, vect__35.197
 1723      F5
 1724              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1725              		.loc 1 344 37 discriminator 3 view .LVU522
 1726 09cd C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm14	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B
 1726      741440
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1727              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU523
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1728              		.loc 1 343 40 discriminator 3 view .LVU524
 344:sieve_extend.c ****         }
 1729              		.loc 1 344 13 discriminator 3 view .LVU525
GAS LISTING /tmp/ccFOD2R4.s 			page 51


 1730              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1731              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU526
 1732 09d4 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r9+rdx]	# tmp871, MEM[base: vectp.191_259, index: ivtmp.225_456, off
 1732      7C1160
 1733              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1734              		.loc 1 344 115 discriminator 3 view .LVU527
 1735 09db C5FE6F54 		vmovdqu	ymm2, YMMWORD PTR 96[rbx+rdx]	# tmp872, MEM[base: vectp.195_266, index: ivtmp.225_456, off
 1735      1360
 1736              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1737              		.loc 1 344 66 discriminator 3 view .LVU528
 1738 09e1 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__30.193, tmp871, _14
 1739              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1740              		.loc 1 344 115 discriminator 3 view .LVU529
 1741 09e5 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__35.197, tmp872, _12
 1742              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1743              		.loc 1 344 84 discriminator 3 view .LVU530
 1744 09e9 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__39.198, vect__30.193, vect__35.197
 1745              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1746              		.loc 1 344 37 discriminator 3 view .LVU531
 1747 09ed C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm4	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B]
 1747      641460
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1748              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU532
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1749              		.loc 1 343 40 discriminator 3 view .LVU533
 344:sieve_extend.c ****         }
 1750              		.loc 1 344 13 discriminator 3 view .LVU534
 1751              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1752              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU535
 1753 09f4 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 128[r9+rdx]	# tmp873, MEM[base: vectp.191_259, index: ivtmp.225_456, off
 1753      AC118000 
 1753      0000
 1754              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1755              		.loc 1 344 115 discriminator 3 view .LVU536
 1756 09fe C57E6F8C 		vmovdqu	ymm9, YMMWORD PTR 128[rbx+rdx]	# tmp874, MEM[base: vectp.195_266, index: ivtmp.225_456, of
 1756      13800000 
 1756      00
 1757              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1758              		.loc 1 344 66 discriminator 3 view .LVU537
 1759 0a07 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__30.193, tmp873, _14
 1760              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1761              		.loc 1 344 115 discriminator 3 view .LVU538
 1762 0a0b C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__35.197, tmp874, _12
 1763              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1764              		.loc 1 344 84 discriminator 3 view .LVU539
 1765 0a0f C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__39.198, vect__30.193, vect__35.197
GAS LISTING /tmp/ccFOD2R4.s 			page 52


 1765      DA
 1766              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1767              		.loc 1 344 37 discriminator 3 view .LVU540
 1768 0a14 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0
 1768      9C148000 
 1768      0000
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1769              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU541
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1770              		.loc 1 343 40 discriminator 3 view .LVU542
 344:sieve_extend.c ****         }
 1771              		.loc 1 344 13 discriminator 3 view .LVU543
 1772              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1773              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU544
 1774 0a1e C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rdx]	# tmp875, MEM[base: vectp.191_259, index: ivtmp.225_456, of
 1774      A411A000 
 1774      0000
 1775              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1776              		.loc 1 344 115 discriminator 3 view .LVU545
 1777 0a28 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rbx+rdx]	# tmp876, MEM[base: vectp.195_266, index: ivtmp.225_456, of
 1777      13A00000 
 1777      00
 1778              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1779              		.loc 1 344 66 discriminator 3 view .LVU546
 1780 0a31 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__30.193, tmp875, _14
 1781              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1782              		.loc 1 344 115 discriminator 3 view .LVU547
 1783 0a35 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__35.197, tmp876, _12
 1784              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1785              		.loc 1 344 84 discriminator 3 view .LVU548
 1786 0a39 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__39.198, vect__30.193, vect__35.197
 1786      FE
 1787              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1788              		.loc 1 344 37 discriminator 3 view .LVU549
 1789 0a3e C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm15	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0
 1789      BC14A000 
 1789      0000
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1790              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU550
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1791              		.loc 1 343 40 discriminator 3 view .LVU551
 344:sieve_extend.c ****         }
 1792              		.loc 1 344 13 discriminator 3 view .LVU552
 1793              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1794              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU553
 1795 0a48 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r9+rdx]	# tmp877, MEM[base: vectp.191_259, index: ivtmp.225_456, off
 1795      B411C000 
 1795      0000
 1796              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccFOD2R4.s 			page 53


 344:sieve_extend.c ****         }
 1797              		.loc 1 344 115 discriminator 3 view .LVU554
 1798 0a52 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 192[rbx+rdx]	# tmp878, MEM[base: vectp.195_266, index: ivtmp.225_456, of
 1798      13C00000 
 1798      00
 1799              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1800              		.loc 1 344 66 discriminator 3 view .LVU555
 1801 0a5b C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__30.193, tmp877, _14
 1802              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1803              		.loc 1 344 115 discriminator 3 view .LVU556
 1804 0a5f C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__35.197, tmp878, _12
 1805              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1806              		.loc 1 344 84 discriminator 3 view .LVU557
 1807 0a63 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__39.198, vect__30.193, vect__35.197
 1808              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1809              		.loc 1 344 37 discriminator 3 view .LVU558
 1810 0a67 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm5	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B
 1810      AC14C000 
 1810      0000
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1811              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU559
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1812              		.loc 1 343 40 discriminator 3 view .LVU560
 344:sieve_extend.c ****         }
 1813              		.loc 1 344 13 discriminator 3 view .LVU561
 1814              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1815              		.loc 1 344 66 is_stmt 0 discriminator 3 view .LVU562
 1816 0a71 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 224[r9+rdx]	# tmp879, MEM[base: vectp.191_259, index: ivtmp.225_456, off
 1816      8411E000 
 1816      0000
 1817              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1818              		.loc 1 344 115 discriminator 3 view .LVU563
 1819 0a7b C57E6F94 		vmovdqu	ymm10, YMMWORD PTR 224[rbx+rdx]	# tmp880, MEM[base: vectp.195_266, index: ivtmp.225_456, o
 1819      13E00000 
 1819      00
 1820              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1821              		.loc 1 344 66 discriminator 3 view .LVU564
 1822 0a84 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__30.193, tmp879, _14
 1823              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1824              		.loc 1 344 115 discriminator 3 view .LVU565
 1825 0a88 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__35.197, tmp880, _12
 1826              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1827              		.loc 1 344 84 discriminator 3 view .LVU566
 1828 0a8c C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__39.198, vect__30.193, vect__35.197
 1828      E3
 1829              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1830              		.loc 1 344 37 discriminator 3 view .LVU567
GAS LISTING /tmp/ccFOD2R4.s 			page 54


 1831 0a91 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm12	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0
 1831      A414E000 
 1831      0000
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1832              		.loc 1 343 58 is_stmt 1 discriminator 3 view .LVU568
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1833              		.loc 1 343 40 discriminator 3 view .LVU569
 1834 0a9b 4881C200 		add	rdx, 256	# ivtmp.225,
 1834      010000
 1835 0aa2 4C39F2   		cmp	rdx, r14	# ivtmp.225, _458
 1836 0aa5 0F85CAFE 		jne	.L61	#,
 1836      FFFF
 1837              	.L199:
 1838 0aab 4C8B6424 		mov	r12, QWORD PTR -16[rsp]	# i, %sfp
 1838      F0
 1839 0ab0 4D89E9   		mov	r9, r13	# niters_vector_mult_vf.188, niters.186
 1840 0ab3 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.188,
 1841 0ab7 4D01CC   		add	r12, r9	# i, niters_vector_mult_vf.188
 1842 0aba 4D39CD   		cmp	r13, r9	# niters.186, niters_vector_mult_vf.188
 1843 0abd 0F849D07 		je	.L213	#,
 1843      0000
 1844 0ac3 C5F877   		vzeroupper
 1845              	.L58:
 1846              	.LVL80:
 344:sieve_extend.c ****         }
 1847              		.loc 1 344 13 view .LVU570
 1848              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1849              		.loc 1 344 62 is_stmt 0 view .LVU571
 1850 0ac6 4E8D2C26 		lea	r13, [rsi+r12]	# tmp440,
 1851              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1852              		.loc 1 344 115 view .LVU572
 1853 0aca C422A1F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r11	# tmp442, *_325, shift
 1853      74EF08
 1854              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1855              		.loc 1 344 66 view .LVU573
 1856 0ad1 4E8B04EF 		mov	r8, QWORD PTR [rdi+r13*8]	# *_320, *_320
 1857              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1858              		.loc 1 343 58 view .LVU574
 1859 0ad5 4D8D6C24 		lea	r13, 1[r12]	# i,
 1859      01
 1860              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1861              		.loc 1 344 23 view .LVU575
 1862 0ada 4B8D1C22 		lea	rbx, [r10+r12]	# tmp441,
 1863              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1864              		.loc 1 344 66 view .LVU576
 1865 0ade C4C2FBF7 		shrx	rdx, r8, rax	# tmp444, *_320, shift_flipped
 1865      D0
 1866              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1867              		.loc 1 344 84 view .LVU577
 1868 0ae3 4909D6   		or	r14, rdx	# tmp446, tmp444
GAS LISTING /tmp/ccFOD2R4.s 			page 55


 1869              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1870              		.loc 1 343 9 view .LVU578
 1871 0ae6 4D39EF   		cmp	r15, r13	# loop_distance, i
 1872              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1873              		.loc 1 344 84 view .LVU579
 1874 0ae9 4C8934DF 		mov	QWORD PTR [rdi+rbx*8], r14	# *_330, tmp446
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1875              		.loc 1 343 58 is_stmt 1 view .LVU580
 1876              	.LVL81:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1877              		.loc 1 343 40 view .LVU581
 1878              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1879              		.loc 1 343 9 is_stmt 0 view .LVU582
 1880 0aed 0F86C100 		jbe	.L57	#,
 1880      0000
 344:sieve_extend.c ****         }
 1881              		.loc 1 344 13 is_stmt 1 view .LVU583
 1882              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1883              		.loc 1 344 62 is_stmt 0 view .LVU584
 1884 0af3 4A8D1C2E 		lea	rbx, [rsi+r13]	# tmp447,
 1885              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1886              		.loc 1 343 58 view .LVU585
 1887 0af7 498D5424 		lea	rdx, 2[r12]	# i,
 1887      02
 1888              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1889              		.loc 1 344 66 view .LVU586
 1890 0afc 4C8B34DF 		mov	r14, QWORD PTR [rdi+rbx*8]	# *_338, *_338
 1891              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1892              		.loc 1 344 23 view .LVU587
 1893 0b00 4D01D5   		add	r13, r10	# tmp448, copy_word
 1894              	.LVL82:
 1895              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1896              		.loc 1 344 115 view .LVU588
 1897 0b03 C462A1F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r11	# tmp449, *_343, shift
 1897      4CDF08
 1898              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1899              		.loc 1 344 66 view .LVU589
 1900 0b0a C442FBF7 		shrx	r8, r14, rax	# tmp451, *_338, shift_flipped
 1900      C6
 1901              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1902              		.loc 1 344 84 view .LVU590
 1903 0b0f 4D09C1   		or	r9, r8	# tmp453, tmp451
 1904              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1905              		.loc 1 343 9 view .LVU591
 1906 0b12 4939D7   		cmp	r15, rdx	# loop_distance, i
 1907              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccFOD2R4.s 			page 56


 344:sieve_extend.c ****         }
 1908              		.loc 1 344 84 view .LVU592
 1909 0b15 4E890CEF 		mov	QWORD PTR [rdi+r13*8], r9	# *_348, tmp453
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1910              		.loc 1 343 58 is_stmt 1 view .LVU593
 1911              	.LVL83:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1912              		.loc 1 343 40 view .LVU594
 1913              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1914              		.loc 1 343 9 is_stmt 0 view .LVU595
 1915 0b19 0F869500 		jbe	.L57	#,
 1915      0000
 344:sieve_extend.c ****         }
 1916              		.loc 1 344 13 is_stmt 1 view .LVU596
 1917              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1918              		.loc 1 344 62 is_stmt 0 view .LVU597
 1919 0b1f 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp454,
 1920              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1921              		.loc 1 343 58 view .LVU598
 1922 0b23 4D8D4424 		lea	r8, 3[r12]	# i,
 1922      03
 1923              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1924              		.loc 1 344 66 view .LVU599
 1925 0b28 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_356, *_356
 1926              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1927              		.loc 1 344 23 view .LVU600
 1928 0b2c 4C01D2   		add	rdx, r10	# tmp455, copy_word
 1929              	.LVL84:
 1930              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1931              		.loc 1 344 115 view .LVU601
 1932 0b2f C422A1F7 		shlx	r9, QWORD PTR 8[rdi+r13*8], r11	# tmp456, *_361, shift
 1932      4CEF08
 1933              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1934              		.loc 1 344 66 view .LVU602
 1935 0b36 C462FBF7 		shrx	r14, rbx, rax	# tmp458, *_356, shift_flipped
 1935      F3
 1936              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1937              		.loc 1 344 84 view .LVU603
 1938 0b3b 4D09F1   		or	r9, r14	# tmp460, tmp458
 1939              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1940              		.loc 1 343 9 view .LVU604
 1941 0b3e 4D39C7   		cmp	r15, r8	# loop_distance, i
 1942              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1943              		.loc 1 344 84 view .LVU605
 1944 0b41 4C890CD7 		mov	QWORD PTR [rdi+rdx*8], r9	# *_366, tmp460
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1945              		.loc 1 343 58 is_stmt 1 view .LVU606
GAS LISTING /tmp/ccFOD2R4.s 			page 57


 1946              	.LVL85:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1947              		.loc 1 343 40 view .LVU607
 1948              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1949              		.loc 1 343 9 is_stmt 0 view .LVU608
 1950 0b45 766D     		jbe	.L57	#,
 344:sieve_extend.c ****         }
 1951              		.loc 1 344 13 is_stmt 1 view .LVU609
 1952              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1953              		.loc 1 344 62 is_stmt 0 view .LVU610
 1954 0b47 4A8D1406 		lea	rdx, [rsi+r8]	# tmp461,
 1955              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1956              		.loc 1 343 58 view .LVU611
 1957 0b4b 4D8D7424 		lea	r14, 4[r12]	# i,
 1957      04
 1958              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1959              		.loc 1 344 66 view .LVU612
 1960 0b50 4C8B0CD7 		mov	r9, QWORD PTR [rdi+rdx*8]	# *_374, *_374
 1961              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1962              		.loc 1 344 23 view .LVU613
 1963 0b54 4D01D0   		add	r8, r10	# tmp462, copy_word
 1964              	.LVL86:
 1965              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1966              		.loc 1 344 115 view .LVU614
 1967 0b57 C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r11	# tmp463, *_379, shift
 1967      6CD708
 1968              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1969              		.loc 1 344 66 view .LVU615
 1970 0b5e C4C2FBF7 		shrx	rbx, r9, rax	# tmp465, *_374, shift_flipped
 1970      D9
 1971              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1972              		.loc 1 344 84 view .LVU616
 1973 0b63 4909DD   		or	r13, rbx	# tmp467, tmp465
 1974              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1975              		.loc 1 343 9 view .LVU617
 1976 0b66 4D39F7   		cmp	r15, r14	# loop_distance, i
 1977              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1978              		.loc 1 344 84 view .LVU618
 1979 0b69 4E892CC7 		mov	QWORD PTR [rdi+r8*8], r13	# *_384, tmp467
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1980              		.loc 1 343 58 is_stmt 1 view .LVU619
 1981              	.LVL87:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1982              		.loc 1 343 40 view .LVU620
 1983              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1984              		.loc 1 343 9 is_stmt 0 view .LVU621
GAS LISTING /tmp/ccFOD2R4.s 			page 58


 1985 0b6d 7645     		jbe	.L57	#,
 344:sieve_extend.c ****         }
 1986              		.loc 1 344 13 is_stmt 1 view .LVU622
 1987              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1988              		.loc 1 344 62 is_stmt 0 view .LVU623
 1989 0b6f 4E8D0436 		lea	r8, [rsi+r14]	# tmp468,
 1990              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1991              		.loc 1 343 58 view .LVU624
 1992 0b73 4983C405 		add	r12, 5	# i,
 1993              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1994              		.loc 1 344 66 view .LVU625
 1995 0b77 4E8B2CC7 		mov	r13, QWORD PTR [rdi+r8*8]	# *_392, *_392
 1996              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 1997              		.loc 1 344 23 view .LVU626
 1998 0b7b 4D01D6   		add	r14, r10	# tmp469, copy_word
 1999              	.LVL88:
 2000              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2001              		.loc 1 344 115 view .LVU627
 2002 0b7e C4A2A1F7 		shlx	rdx, QWORD PTR 8[rdi+r8*8], r11	# tmp470, *_397, shift
 2002      54C708
 2003              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2004              		.loc 1 344 66 view .LVU628
 2005 0b85 C442FBF7 		shrx	r9, r13, rax	# tmp472, *_392, shift_flipped
 2005      CD
 2006              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2007              		.loc 1 344 84 view .LVU629
 2008 0b8a 4C09CA   		or	rdx, r9	# tmp474, tmp472
 2009              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2010              		.loc 1 343 9 view .LVU630
 2011 0b8d 4D39E7   		cmp	r15, r12	# loop_distance, i
 2012              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2013              		.loc 1 344 84 view .LVU631
 2014 0b90 4A8914F7 		mov	QWORD PTR [rdi+r14*8], rdx	# *_402, tmp474
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2015              		.loc 1 343 58 is_stmt 1 view .LVU632
 2016              	.LVL89:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2017              		.loc 1 343 40 view .LVU633
 2018              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2019              		.loc 1 343 9 is_stmt 0 view .LVU634
 2020 0b94 761E     		jbe	.L57	#,
 344:sieve_extend.c ****         }
 2021              		.loc 1 344 13 is_stmt 1 view .LVU635
 2022              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2023              		.loc 1 344 62 is_stmt 0 view .LVU636
 2024 0b96 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp475,
GAS LISTING /tmp/ccFOD2R4.s 			page 59


 2025              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2026              		.loc 1 344 23 view .LVU637
 2027 0b9a 4D01D4   		add	r12, r10	# tmp476, copy_word
 2028              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2029              		.loc 1 344 115 view .LVU638
 2030 0b9d C462A1F7 		shlx	r10, QWORD PTR 8[rdi+rbx*8], r11	# tmp477, *_240, shift
 2030      54DF08
 2031              	.LVL90:
 2032              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2033              		.loc 1 344 66 view .LVU639
 2034 0ba4 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_235, *_235
 2035              	.LVL91:
 344:sieve_extend.c ****         }
 2036              		.loc 1 344 66 view .LVU640
 2037 0ba8 C4C2FBF7 		shrx	rax, r11, rax	# tmp479, *_235, shift_flipped
 2037      C3
 2038              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2039              		.loc 1 344 84 view .LVU641
 2040 0bad 4C09D0   		or	rax, r10	# tmp481, tmp477
 2041 0bb0 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_245, tmp481
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2042              		.loc 1 343 58 is_stmt 1 view .LVU642
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2043              		.loc 1 343 40 view .LVU643
 2044              	.L57:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2045              		.loc 1 343 40 is_stmt 0 view .LVU644
 2046              	.LBE305:
 347:sieve_extend.c ****     }
 2047              		.loc 1 347 9 is_stmt 1 view .LVU645
 2048              	.LVL92:
 347:sieve_extend.c ****     }
 2049              		.loc 1 347 39 view .LVU646
 347:sieve_extend.c ****     }
 2050              		.loc 1 347 39 is_stmt 0 view .LVU647
 2051              	.LBE304:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2052              		.loc 1 350 12 is_stmt 1 view .LVU648
 2053              	.LBB307:
 2054              	# sieve_extend.c:347:         source_word += loop_distance; copy_word+= loop_distance;
 347:sieve_extend.c ****     }
 2055              		.loc 1 347 21 is_stmt 0 view .LVU649
 2056 0bb4 4C01FE   		add	rsi, r15	# source_word, loop_distance
 2057              	.LVL93:
 347:sieve_extend.c ****     }
 2058              		.loc 1 347 21 view .LVU650
 2059 0bb7 4989CA   		mov	r10, rcx	# copy_word, destination_stop_word
 2060 0bba 4C8D2CF5 		lea	r13, 40[0+rsi*8]	# _271,
 2060      28000000 
 2061              	.LVL94:
 2062              	.L63:
 347:sieve_extend.c ****     }
 2063              		.loc 1 347 21 view .LVU651
GAS LISTING /tmp/ccFOD2R4.s 			page 60


 2064 0bc2 4889CE   		mov	rsi, rcx	# tmp556, destination_stop_word
 2065 0bc5 4E8D7C2F 		lea	r15, -40[rdi+r13]	# ivtmp.207,
 2065      D8
 2066              	.LBE307:
 2067              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2068              		.loc 1 351 105 view .LVU652
 2069 0bca 440FB664 		movzx	r12d, BYTE PTR -4[rsp]	# tmp884, %sfp
 2069      24FC
 2070 0bd0 4C29D6   		sub	rsi, r10	# tmp556, copy_word
 2071 0bd3 C44299F7 		shlx	r14, QWORD PTR 8[r15], r12	# tmp500, MEM[base: _451, offset: 8B], tmp884
 2071      7708
 2072              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2073              		.loc 1 350 48 view .LVU653
 2074 0bd9 4D8D6201 		lea	r12, 1[r10]	# copy_word,
 2075              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2076              		.loc 1 351 58 view .LVU654
 2077 0bdd 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp885, %sfp
 2077      24F8
 2078 0be3 83E607   		and	esi, 7	# tmp557,
 351:sieve_extend.c ****     }
 2079              		.loc 1 351 9 is_stmt 1 view .LVU655
 2080              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2081              		.loc 1 351 58 is_stmt 0 view .LVU656
 2082 0be6 C4C2BBF7 		shrx	rdx, QWORD PTR [r15], r8	# tmp502, MEM[base: _451, offset: 0B], tmp885
 2082      17
 2083              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2084              		.loc 1 351 76 view .LVU657
 2085 0beb 4909D6   		or	r14, rdx	# tmp504, tmp502
 2086              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2087              		.loc 1 350 5 view .LVU658
 2088 0bee 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2089 0bf1 498D4708 		lea	rax, 8[r15]	# ivtmp.207,
 2090              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2091              		.loc 1 351 76 view .LVU659
 2092 0bf5 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2093              		.loc 1 350 48 is_stmt 1 view .LVU660
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2094              		.loc 1 350 12 view .LVU661
 2095              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2096              		.loc 1 350 5 is_stmt 0 view .LVU662
 2097 0bf9 0F82FB01 		jb	.L210	#,
 2097      0000
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2098              		.loc 1 350 5 view .LVU663
 2099 0bff 4885F6   		test	rsi, rsi	# tmp557
 2100 0c02 0F843B01 		je	.L204	#,
 2100      0000
 2101 0c08 4883FE01 		cmp	rsi, 1	# tmp557,
GAS LISTING /tmp/ccFOD2R4.s 			page 61


 2102 0c0c 0F840301 		je	.L165	#,
 2102      0000
 2103 0c12 4883FE02 		cmp	rsi, 2	# tmp557,
 2104 0c16 0F84D400 		je	.L166	#,
 2104      0000
 2105 0c1c 4883FE03 		cmp	rsi, 3	# tmp557,
 2106 0c20 0F84A500 		je	.L167	#,
 2106      0000
 2107 0c26 4883FE04 		cmp	rsi, 4	# tmp557,
 2108 0c2a 747A     		je	.L168	#,
 2109 0c2c 4883FE05 		cmp	rsi, 5	# tmp557,
 2110 0c30 744E     		je	.L169	#,
 2111 0c32 4883FE06 		cmp	rsi, 6	# tmp557,
 2112 0c36 7423     		je	.L170	#,
 351:sieve_extend.c ****     }
 2113              		.loc 1 351 9 is_stmt 1 view .LVU664
 2114              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2115              		.loc 1 351 58 is_stmt 0 view .LVU665
 2116 0c38 488B18   		mov	rbx, QWORD PTR [rax]	# MEM[base: _451, offset: 0B], MEM[base: _451, offset: 0B]
 2117 0c3b C462BBF7 		shrx	r11, rbx, r8	# tmp719, MEM[base: _451, offset: 0B], tmp909
 2117      DB
 2118              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2119              		.loc 1 351 105 view .LVU666
 2120 0c40 440FB66C 		movzx	r13d, BYTE PTR -4[rsp]	# tmp908, %sfp
 2120      24FC
 2121 0c46 C46291F7 		shlx	r9, QWORD PTR 8[rax], r13	# tmp717, MEM[base: _451, offset: 8B], tmp908
 2121      4808
 2122              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2123              		.loc 1 351 76 view .LVU667
 2124 0c4c 4D09CB   		or	r11, r9	# tmp720, tmp717
 2125 0c4f 498D4710 		lea	rax, 16[r15]	# ivtmp.207,
 2126 0c53 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2127              		.loc 1 350 48 is_stmt 1 view .LVU668
 2128 0c57 4D8D6202 		lea	r12, 2[r10]	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2129              		.loc 1 350 12 view .LVU669
 2130              	.L170:
 351:sieve_extend.c ****     }
 2131              		.loc 1 351 9 view .LVU670
 2132              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2133              		.loc 1 351 105 is_stmt 0 view .LVU671
 2134 0c5b 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp910, %sfp
 2134      24FC
 2135              	.LVL95:
 351:sieve_extend.c ****     }
 2136              		.loc 1 351 105 view .LVU672
 2137 0c61 C462A9F7 		shlx	r15, QWORD PTR 8[rax], r10	# tmp722, MEM[base: _451, offset: 8B], tmp910
 2137      7808
 2138              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2139              		.loc 1 351 58 view .LVU673
 2140 0c67 0FB67424 		movzx	esi, BYTE PTR -8[rsp]	# tmp911, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 62


 2140      F8
 2141 0c6c C462CBF7 		shrx	r14, QWORD PTR [rax], rsi	# tmp724, MEM[base: _451, offset: 0B], tmp911
 2141      30
 2142              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2143              		.loc 1 351 76 view .LVU674
 2144 0c71 4D09F7   		or	r15, r14	# tmp725, tmp724
 2145 0c74 4883C008 		add	rax, 8	# ivtmp.207,
 2146 0c78 4E893CE7 		mov	QWORD PTR [rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2147              		.loc 1 350 48 is_stmt 1 view .LVU675
 2148 0c7c 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2149              		.loc 1 350 12 view .LVU676
 2150              	.L169:
 351:sieve_extend.c ****     }
 2151              		.loc 1 351 9 view .LVU677
 2152              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2153              		.loc 1 351 105 is_stmt 0 view .LVU678
 2154 0c80 440FB644 		movzx	r8d, BYTE PTR -4[rsp]	# tmp912, %sfp
 2154      24FC
 2155 0c86 C4E2B9F7 		shlx	rdx, QWORD PTR 8[rax], r8	# tmp727, MEM[base: _451, offset: 8B], tmp912
 2155      5008
 2156              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2157              		.loc 1 351 58 view .LVU679
 2158 0c8c 440FB66C 		movzx	r13d, BYTE PTR -8[rsp]	# tmp913, %sfp
 2158      24F8
 2159 0c92 C46293F7 		shrx	r9, QWORD PTR [rax], r13	# tmp729, MEM[base: _451, offset: 0B], tmp913
 2159      08
 2160              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2161              		.loc 1 351 76 view .LVU680
 2162 0c97 4C09CA   		or	rdx, r9	# tmp730, tmp729
 2163 0c9a 4883C008 		add	rax, 8	# ivtmp.207,
 2164 0c9e 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2165              		.loc 1 350 48 is_stmt 1 view .LVU681
 2166 0ca2 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2167              		.loc 1 350 12 view .LVU682
 2168              	.L168:
 351:sieve_extend.c ****     }
 2169              		.loc 1 351 9 view .LVU683
 2170              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2171              		.loc 1 351 105 is_stmt 0 view .LVU684
 2172 0ca6 0FB65C24 		movzx	ebx, BYTE PTR -4[rsp]	# tmp914, %sfp
 2172      FC
 2173 0cab C462E1F7 		shlx	r11, QWORD PTR 8[rax], rbx	# tmp732, MEM[base: _451, offset: 8B], tmp914
 2173      5808
 2174              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2175              		.loc 1 351 58 view .LVU685
 2176 0cb1 440FB654 		movzx	r10d, BYTE PTR -8[rsp]	# tmp915, %sfp
 2176      24F8
GAS LISTING /tmp/ccFOD2R4.s 			page 63


 2177 0cb7 C462ABF7 		shrx	r15, QWORD PTR [rax], r10	# tmp734, MEM[base: _451, offset: 0B], tmp915
 2177      38
 2178              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2179              		.loc 1 351 76 view .LVU686
 2180 0cbc 4D09FB   		or	r11, r15	# tmp735, tmp734
 2181 0cbf 4883C008 		add	rax, 8	# ivtmp.207,
 2182 0cc3 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2183              		.loc 1 350 48 is_stmt 1 view .LVU687
 2184 0cc7 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2185              		.loc 1 350 12 view .LVU688
 2186              	.L167:
 351:sieve_extend.c ****     }
 2187              		.loc 1 351 9 view .LVU689
 2188              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2189              		.loc 1 351 105 is_stmt 0 view .LVU690
 2190 0ccb 0FB67424 		movzx	esi, BYTE PTR -4[rsp]	# tmp916, %sfp
 2190      FC
 2191 0cd0 C462C9F7 		shlx	r14, QWORD PTR 8[rax], rsi	# tmp737, MEM[base: _451, offset: 8B], tmp916
 2191      7008
 2192              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2193              		.loc 1 351 58 view .LVU691
 2194 0cd6 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp917, %sfp
 2194      24F8
 2195 0cdc C4E2BBF7 		shrx	rdx, QWORD PTR [rax], r8	# tmp739, MEM[base: _451, offset: 0B], tmp917
 2195      10
 2196              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2197              		.loc 1 351 76 view .LVU692
 2198 0ce1 4909D6   		or	r14, rdx	# tmp740, tmp739
 2199 0ce4 4883C008 		add	rax, 8	# ivtmp.207,
 2200 0ce8 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2201              		.loc 1 350 48 is_stmt 1 view .LVU693
 2202 0cec 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2203              		.loc 1 350 12 view .LVU694
 2204              	.L166:
 351:sieve_extend.c ****     }
 2205              		.loc 1 351 9 view .LVU695
 2206              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2207              		.loc 1 351 105 is_stmt 0 view .LVU696
 2208 0cf0 440FB66C 		movzx	r13d, BYTE PTR -4[rsp]	# tmp918, %sfp
 2208      24FC
 2209 0cf6 C46291F7 		shlx	r9, QWORD PTR 8[rax], r13	# tmp742, MEM[base: _451, offset: 8B], tmp918
 2209      4808
 2210              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2211              		.loc 1 351 58 view .LVU697
 2212 0cfc 0FB65C24 		movzx	ebx, BYTE PTR -8[rsp]	# tmp919, %sfp
 2212      F8
 2213 0d01 C462E3F7 		shrx	r11, QWORD PTR [rax], rbx	# tmp744, MEM[base: _451, offset: 0B], tmp919
GAS LISTING /tmp/ccFOD2R4.s 			page 64


 2213      18
 2214              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2215              		.loc 1 351 76 view .LVU698
 2216 0d06 4D09D9   		or	r9, r11	# tmp745, tmp744
 2217 0d09 4883C008 		add	rax, 8	# ivtmp.207,
 2218 0d0d 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2219              		.loc 1 350 48 is_stmt 1 view .LVU699
 2220 0d11 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2221              		.loc 1 350 12 view .LVU700
 2222              	.L165:
 351:sieve_extend.c ****     }
 2223              		.loc 1 351 9 view .LVU701
 2224              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2225              		.loc 1 351 105 is_stmt 0 view .LVU702
 2226 0d15 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp920, %sfp
 2226      24FC
 2227 0d1b C462A9F7 		shlx	r15, QWORD PTR 8[rax], r10	# tmp747, MEM[base: _451, offset: 8B], tmp920
 2227      7808
 2228              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2229              		.loc 1 351 58 view .LVU703
 2230 0d21 0FB67424 		movzx	esi, BYTE PTR -8[rsp]	# tmp921, %sfp
 2230      F8
 2231 0d26 C462CBF7 		shrx	r14, QWORD PTR [rax], rsi	# tmp749, MEM[base: _451, offset: 0B], tmp921
 2231      30
 2232              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2233              		.loc 1 351 76 view .LVU704
 2234 0d2b 4D09F7   		or	r15, r14	# tmp750, tmp749
 2235 0d2e 4883C008 		add	rax, 8	# ivtmp.207,
 2236 0d32 4E893CE7 		mov	QWORD PTR [rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2237              		.loc 1 350 48 is_stmt 1 view .LVU705
 2238 0d36 4983C401 		add	r12, 1	# copy_word,
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2239              		.loc 1 350 12 view .LVU706
 2240              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2241              		.loc 1 350 5 is_stmt 0 view .LVU707
 2242 0d3a 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2243 0d3d 0F82B700 		jb	.L210	#,
 2243      0000
 2244              	.L204:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2245              		.loc 1 350 5 view .LVU708
 2246 0d43 8B5424FC 		mov	edx, DWORD PTR -4[rsp]	# _12, %sfp
 2247 0d47 448B4424 		mov	r8d, DWORD PTR -8[rsp]	# _14, %sfp
 2247      F8
 2248              	.L65:
 351:sieve_extend.c ****     }
 2249              		.loc 1 351 9 is_stmt 1 view .LVU709
 2250              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 65


 2251              		.loc 1 351 58 is_stmt 0 view .LVU710
 2252 0d4c C462BBF7 		shrx	r9, QWORD PTR [rax], r8	# tmp620, MEM[base: _451, offset: 0B], _14
 2252      08
 2253              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2254              		.loc 1 351 105 view .LVU711
 2255 0d51 C462E9F7 		shlx	r13, QWORD PTR 8[rax], rdx	# tmp618, MEM[base: _451, offset: 8B], _12
 2255      6808
 2256              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2257              		.loc 1 351 76 view .LVU712
 2258 0d57 4D09CD   		or	r13, r9	# tmp621, tmp620
 2259 0d5a 4883C040 		add	rax, 64	# ivtmp.207,
 2260 0d5e 4E892CE7 		mov	QWORD PTR [rdi+r12*8], r13	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2261              		.loc 1 350 48 is_stmt 1 view .LVU713
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2262              		.loc 1 350 12 view .LVU714
 351:sieve_extend.c ****     }
 2263              		.loc 1 351 9 view .LVU715
 2264              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2265              		.loc 1 351 58 is_stmt 0 view .LVU716
 2266 0d62 C462BBF7 		shrx	r11, QWORD PTR -56[rax], r8	# tmp627, MEM[base: _451, offset: 0B], _14
 2266      58C8
 2267              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2268              		.loc 1 351 105 view .LVU717
 2269 0d68 C4E2E9F7 		shlx	rbx, QWORD PTR -48[rax], rdx	# tmp625, MEM[base: _451, offset: 8B], _12
 2269      58D0
 2270              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2271              		.loc 1 351 76 view .LVU718
 2272 0d6e 4C09DB   		or	rbx, r11	# tmp628, tmp627
 2273 0d71 4A895CE7 		mov	QWORD PTR 8[rdi+r12*8], rbx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offse
 2273      08
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2274              		.loc 1 350 48 is_stmt 1 view .LVU719
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2275              		.loc 1 350 12 view .LVU720
 351:sieve_extend.c ****     }
 2276              		.loc 1 351 9 view .LVU721
 2277              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2278              		.loc 1 351 58 is_stmt 0 view .LVU722
 2279 0d76 C462BBF7 		shrx	r10, QWORD PTR -48[rax], r8	# tmp634, MEM[base: _451, offset: 0B], _14
 2279      50D0
 2280              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2281              		.loc 1 351 105 view .LVU723
 2282 0d7c C462E9F7 		shlx	r15, QWORD PTR -40[rax], rdx	# tmp632, MEM[base: _451, offset: 8B], _12
 2282      78D8
 2283              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2284              		.loc 1 351 76 view .LVU724
 2285 0d82 4D09D7   		or	r15, r10	# tmp635, tmp634
 2286 0d85 4E897CE7 		mov	QWORD PTR 16[rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
GAS LISTING /tmp/ccFOD2R4.s 			page 66


 2286      10
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2287              		.loc 1 350 48 is_stmt 1 view .LVU725
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2288              		.loc 1 350 12 view .LVU726
 351:sieve_extend.c ****     }
 2289              		.loc 1 351 9 view .LVU727
 2290              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2291              		.loc 1 351 58 is_stmt 0 view .LVU728
 2292 0d8a C462BBF7 		shrx	r14, QWORD PTR -40[rax], r8	# tmp641, MEM[base: _451, offset: 0B], _14
 2292      70D8
 2293              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2294              		.loc 1 351 105 view .LVU729
 2295 0d90 C4E2E9F7 		shlx	rsi, QWORD PTR -32[rax], rdx	# tmp639, MEM[base: _451, offset: 8B], _12
 2295      70E0
 2296              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2297              		.loc 1 351 76 view .LVU730
 2298 0d96 4C09F6   		or	rsi, r14	# tmp642, tmp641
 2299 0d99 4A8974E7 		mov	QWORD PTR 24[rdi+r12*8], rsi	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2299      18
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2300              		.loc 1 350 48 is_stmt 1 view .LVU731
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2301              		.loc 1 350 12 view .LVU732
 351:sieve_extend.c ****     }
 2302              		.loc 1 351 9 view .LVU733
 2303              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2304              		.loc 1 351 105 is_stmt 0 view .LVU734
 2305 0d9e C462E9F7 		shlx	r13, QWORD PTR -24[rax], rdx	# tmp646, MEM[base: _451, offset: 8B], _12
 2305      68E8
 2306              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2307              		.loc 1 351 58 view .LVU735
 2308 0da4 C462BBF7 		shrx	r9, QWORD PTR -32[rax], r8	# tmp648, MEM[base: _451, offset: 0B], _14
 2308      48E0
 2309              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2310              		.loc 1 351 76 view .LVU736
 2311 0daa 4D09CD   		or	r13, r9	# tmp649, tmp648
 2312 0dad 4E896CE7 		mov	QWORD PTR 32[rdi+r12*8], r13	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2312      20
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2313              		.loc 1 350 48 is_stmt 1 view .LVU737
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2314              		.loc 1 350 12 view .LVU738
 351:sieve_extend.c ****     }
 2315              		.loc 1 351 9 view .LVU739
 2316              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2317              		.loc 1 351 105 is_stmt 0 view .LVU740
 2318 0db2 C4E2E9F7 		shlx	rbx, QWORD PTR -16[rax], rdx	# tmp653, MEM[base: _451, offset: 8B], _12
 2318      58F0
 2319              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccFOD2R4.s 			page 67


 351:sieve_extend.c ****     }
 2320              		.loc 1 351 58 view .LVU741
 2321 0db8 C462BBF7 		shrx	r11, QWORD PTR -24[rax], r8	# tmp655, MEM[base: _451, offset: 0B], _14
 2321      58E8
 2322              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2323              		.loc 1 351 76 view .LVU742
 2324 0dbe 4C09DB   		or	rbx, r11	# tmp656, tmp655
 2325 0dc1 4A895CE7 		mov	QWORD PTR 40[rdi+r12*8], rbx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2325      28
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2326              		.loc 1 350 48 is_stmt 1 view .LVU743
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2327              		.loc 1 350 12 view .LVU744
 351:sieve_extend.c ****     }
 2328              		.loc 1 351 9 view .LVU745
 2329              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2330              		.loc 1 351 105 is_stmt 0 view .LVU746
 2331 0dc6 C462E9F7 		shlx	r15, QWORD PTR -8[rax], rdx	# tmp660, MEM[base: _451, offset: 8B], _12
 2331      78F8
 2332              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2333              		.loc 1 351 58 view .LVU747
 2334 0dcc C462BBF7 		shrx	r10, QWORD PTR -16[rax], r8	# tmp662, MEM[base: _451, offset: 0B], _14
 2334      50F0
 2335              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2336              		.loc 1 351 76 view .LVU748
 2337 0dd2 4D09D7   		or	r15, r10	# tmp663, tmp662
 2338 0dd5 4E897CE7 		mov	QWORD PTR 48[rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2338      30
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2339              		.loc 1 350 48 is_stmt 1 view .LVU749
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2340              		.loc 1 350 12 view .LVU750
 351:sieve_extend.c ****     }
 2341              		.loc 1 351 9 view .LVU751
 2342              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2343              		.loc 1 351 105 is_stmt 0 view .LVU752
 2344 0dda C4E2E9F7 		shlx	rsi, QWORD PTR [rax], rdx	# tmp667, MEM[base: _451, offset: 8B], _12
 2344      30
 2345              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2346              		.loc 1 351 58 view .LVU753
 2347 0ddf C462BBF7 		shrx	r14, QWORD PTR -8[rax], r8	# tmp669, MEM[base: _451, offset: 0B], _14
 2347      70F8
 2348              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2349              		.loc 1 351 76 view .LVU754
 2350 0de5 4C09F6   		or	rsi, r14	# tmp670, tmp669
 2351 0de8 4A8974E7 		mov	QWORD PTR 56[rdi+r12*8], rsi	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2351      38
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2352              		.loc 1 350 48 is_stmt 1 view .LVU755
 2353 0ded 4983C408 		add	r12, 8	# copy_word,
GAS LISTING /tmp/ccFOD2R4.s 			page 68


 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2354              		.loc 1 350 12 view .LVU756
 2355              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2356              		.loc 1 350 5 is_stmt 0 view .LVU757
 2357 0df1 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2358 0df4 0F8352FF 		jnb	.L65	#,
 2358      FFFF
 2359              	.L210:
 2360              	# sieve_extend.c:353: }
 353:sieve_extend.c **** 
 2361              		.loc 1 353 1 view .LVU758
 2362 0dfa 488D65D8 		lea	rsp, -40[rbp]	#,
 2363 0dfe 5B       		pop	rbx	#
 2364 0dff 415C     		pop	r12	#
 2365 0e01 415D     		pop	r13	#
 2366 0e03 415E     		pop	r14	#
 2367 0e05 415F     		pop	r15	#
 2368 0e07 5D       		pop	rbp	#
 2369              		.cfi_remember_state
 2370              		.cfi_def_cfa 7, 8
 2371 0e08 C3       		ret	
 2372              	.LVL96:
 2373 0e09 0F1F8000 		.p2align 4,,7
 2373      000000
 2374              		.p2align 3
 2375              	.L56:
 2376              		.cfi_restore_state
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2377              		.loc 1 350 12 is_stmt 1 view .LVU759
 2378 0e10 4A8D14CD 		lea	rdx, 40[0+r9*8]	# _135,
 2378      28000000 
 2379              	.LVL97:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2380              		.loc 1 350 12 is_stmt 0 view .LVU760
 2381 0e18 4D8D6C24 		lea	r13, 40[r12]	# _271,
 2381      28
 2382 0e1d 4C8D7AE0 		lea	r15, -32[rdx]	# tmp541,
 2383 0e21 4C8D7101 		lea	r14, 1[rcx]	# _82,
 2384 0e25 4D39EF   		cmp	r15, r13	# tmp541, _271
 2385 0e28 498D5902 		lea	rbx, 2[r9]	# copy_word,
 2386 0e2c 410F9DC7 		setge	r15b	#, tmp543
 2387 0e30 4939D4   		cmp	r12, rdx	# _9, _135
 2388 0e33 0F9DC2   		setge	dl	#, tmp545
 2389 0e36 4108D7   		or	r15b, dl	# tmp543, tmp545
 2390 0e39 0F8483FD 		je	.L63	#,
 2390      FFFF
 2391 0e3f 4989CF   		mov	r15, rcx	# tmp547, destination_stop_word
 2392 0e42 4D29D7   		sub	r15, r10	# tmp547, copy_word
 2393 0e45 4983FF05 		cmp	r15, 5	# tmp547,
 2394 0e49 410F97C7 		seta	r15b	#, tmp549
 2395 0e4d 4939DE   		cmp	r14, rbx	# _82, copy_word
 2396 0e50 0F93C2   		setnb	dl	#, tmp551
 2397 0e53 4184D7   		test	r15b, dl	# tmp549, tmp551
 2398 0e56 0F8466FD 		je	.L63	#,
 2398      FFFF
 2399 0e5c 4989CD   		mov	r13, rcx	# tmp505, destination_stop_word
GAS LISTING /tmp/ccFOD2R4.s 			page 69


 2400 0e5f 4C89C2   		mov	rdx, r8	# _10, _10
 2401 0e62 4D29CD   		sub	r13, r9	# tmp505, copy_word
 2402 0e65 4939DE   		cmp	r14, rbx	# _82, copy_word
 2403 0e68 41BE0100 		mov	r14d, 1	# tmp506,
 2403      0000
 2404 0e6e 4D0F42EE 		cmovb	r13, r14	# tmp505,, niters.164, tmp506
 2405 0e72 48C1EA03 		shr	rdx, 3	# _10,
 2406 0e76 48F7DA   		neg	rdx	# tmp509
 2407 0e79 83E203   		and	edx, 3	# prolog_loop_niters.166,
 2408 0e7c 0F84B603 		je	.L78	#,
 2408      0000
 351:sieve_extend.c ****     }
 2409              		.loc 1 351 9 is_stmt 1 view .LVU761
 2410              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2411              		.loc 1 351 105 is_stmt 0 view .LVU762
 2412 0e82 4E8B6427 		mov	r12, QWORD PTR 8[rdi+r12]	# *_288, *_288
 2412      08
 2413              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2414              		.loc 1 351 58 view .LVU763
 2415 0e87 C462FBF7 		shrx	r15, QWORD PTR [rdi+rsi*8], rax	# tmp512, *_283, shift_flipped
 2415      3CF7
 2416              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2417              		.loc 1 351 89 view .LVU764
 2418 0e8d 4C8D7601 		lea	r14, 1[rsi]	# tmp671,
 2419              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2420              		.loc 1 351 105 view .LVU765
 2421 0e91 C442A1F7 		shlx	r12, r12, r11	# tmp510, *_288, shift
 2421      E4
 2422              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2423              		.loc 1 351 76 view .LVU766
 2424 0e96 4D09FC   		or	r12, r15	# tmp514, tmp512
 2425 0e99 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.166,
 2426 0e9d 4E8924D7 		mov	QWORD PTR [rdi+r10*8], r12	# *_292, tmp514
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2427              		.loc 1 350 48 is_stmt 1 view .LVU767
 2428              	.LVL98:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2429              		.loc 1 350 12 view .LVU768
 2430              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2431              		.loc 1 351 89 is_stmt 0 view .LVU769
 2432 0ea1 4D89F0   		mov	r8, r14	# source_word, tmp671
 2433 0ea4 7454     		je	.L67	#,
 351:sieve_extend.c ****     }
 2434              		.loc 1 351 9 is_stmt 1 view .LVU770
 2435              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2436              		.loc 1 351 44 is_stmt 0 view .LVU771
 2437 0ea6 4E8D3CF5 		lea	r15, 0[0+r14*8]	# _301,
 2437      00000000 
 2438              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 70


 2439              		.loc 1 351 105 view .LVU772
 2440 0eae C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r15], r11	# tmp515, *_307, shift
 2440      643F08
 2441              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2442              		.loc 1 351 58 view .LVU773
 2443 0eb5 4E8B3C3F 		mov	r15, QWORD PTR [rdi+r15]	# *_302, *_302
 2444 0eb9 C442FBF7 		shrx	r15, r15, rax	# tmp517, *_302, shift_flipped
 2444      FF
 2445              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2446              		.loc 1 351 76 view .LVU774
 2447 0ebe 4D09FC   		or	r12, r15	# tmp519, tmp517
 2448 0ec1 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.166,
 2449 0ec5 4C8924DF 		mov	QWORD PTR [rdi+rbx*8], r12	# *_311, tmp519
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2450              		.loc 1 350 48 is_stmt 1 view .LVU775
 2451              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2452              		.loc 1 351 89 is_stmt 0 view .LVU776
 2453 0ec9 4C8D4602 		lea	r8, 2[rsi]	# source_word,
 2454              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2455              		.loc 1 350 48 view .LVU777
 2456 0ecd 498D5903 		lea	rbx, 3[r9]	# copy_word,
 2457              	.LVL99:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2458              		.loc 1 350 12 is_stmt 1 view .LVU778
 2459 0ed1 7527     		jne	.L67	#,
 351:sieve_extend.c ****     }
 2460              		.loc 1 351 9 view .LVU779
 2461              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2462              		.loc 1 351 44 is_stmt 0 view .LVU780
 2463 0ed3 4E8D3CC5 		lea	r15, 0[0+r8*8]	# _86,
 2463      00000000 
 2464              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2465              		.loc 1 351 105 view .LVU781
 2466 0edb C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r15], r11	# tmp520, *_74, shift
 2466      643F08
 2467              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2468              		.loc 1 351 58 view .LVU782
 2469 0ee2 4E8B3C3F 		mov	r15, QWORD PTR [rdi+r15]	# *_85, *_85
 2470 0ee6 C442FBF7 		shrx	r15, r15, rax	# tmp522, *_85, shift_flipped
 2470      FF
 2471              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2472              		.loc 1 351 76 view .LVU783
 2473 0eeb 4D09FC   		or	r12, r15	# tmp524, tmp522
 2474              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2475              		.loc 1 351 89 view .LVU784
 2476 0eee 4C8D4603 		lea	r8, 3[rsi]	# source_word,
 2477              	.LVL100:
 2478              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccFOD2R4.s 			page 71


 351:sieve_extend.c ****     }
 2479              		.loc 1 351 76 view .LVU785
 2480 0ef2 4C8924DF 		mov	QWORD PTR [rdi+rbx*8], r12	# *_3, tmp524
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2481              		.loc 1 350 48 is_stmt 1 view .LVU786
 2482 0ef6 498D5904 		lea	rbx, 4[r9]	# copy_word,
 2483              	.LVL101:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2484              		.loc 1 350 12 view .LVU787
 2485              	.L67:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2486              		.loc 1 350 12 is_stmt 0 view .LVU788
 2487 0efa 4929D5   		sub	r13, rdx	# niters.167, prolog_loop_niters.166
 2488 0efd 4901D6   		add	r14, rdx	# tmp528, prolog_loop_niters.166
 2489 0f00 4D89EC   		mov	r12, r13	# bnd.168, niters.167
 2490 0f03 4E8D0CF7 		lea	r9, [rdi+r14*8]	# vectp.177,
 2491 0f07 49C1EC02 		shr	r12, 2	# bnd.168,
 2492 0f0b 4801D6   		add	rsi, rdx	# tmp525, prolog_loop_niters.166
 2493 0f0e 49C1E405 		sal	r12, 5	# _455,
 2494 0f12 4C01D2   		add	rdx, r10	# tmp530, copy_word
 2495 0f15 4D8D7424 		lea	r14, -32[r12]	# tmp568,
 2495      E0
 2496 0f1a 4C8D14D7 		lea	r10, [rdi+rdx*8]	# vectp.182,
 2497              	# sieve_extend.c:339:     if (size >= WORD_SIZE_counter) {
 339:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 2498              		.loc 1 339 8 view .LVU789
 2499 0f1e 31D2     		xor	edx, edx	# ivtmp.215
 2500 0f20 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.173,
 2501 0f24 49C1EE05 		shr	r14, 5	# tmp566,
 2502 0f28 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _14, %sfp
 2502      24F8
 2503 0f2e 4983C601 		add	r14, 1	# tmp569,
 2504 0f32 C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _12, %sfp
 2504      24FC
 2505 0f38 4183E607 		and	r14d, 7	# tmp570,
 2506 0f3c 0F842101 		je	.L69	#,
 2506      0000
 2507 0f42 4983FE01 		cmp	r14, 1	# tmp570,
 2508 0f46 0F84ED00 		je	.L159	#,
 2508      0000
 2509 0f4c 4983FE02 		cmp	r14, 2	# tmp570,
 2510 0f50 0F84C200 		je	.L160	#,
 2510      0000
 2511 0f56 4983FE03 		cmp	r14, 3	# tmp570,
 2512 0f5a 0F849600 		je	.L161	#,
 2512      0000
 2513 0f60 4983FE04 		cmp	r14, 4	# tmp570,
 2514 0f64 746F     		je	.L162	#,
 2515 0f66 4983FE05 		cmp	r14, 5	# tmp570,
 2516 0f6a 7447     		je	.L163	#,
 2517 0f6c 4983FE06 		cmp	r14, 6	# tmp570,
 2518 0f70 741F     		je	.L164	#,
 351:sieve_extend.c ****     }
 2519              		.loc 1 351 9 is_stmt 1 view .LVU790
 2520              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2521              		.loc 1 351 58 is_stmt 0 view .LVU791
GAS LISTING /tmp/ccFOD2R4.s 			page 72


 2522 0f72 C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp936, MEM[base: vectp.173_175, index: ivtmp.215_453, offset: 0
 2523 0f76 BA200000 		mov	edx, 32	# ivtmp.215,
 2523      00
 2524              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2525              		.loc 1 351 105 view .LVU792
 2526 0f7b C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r9]	# tmp937, MEM[base: vectp.177_182, index: ivtmp.215_453, offset: 0B
 2526      39
 2527              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2528              		.loc 1 351 58 view .LVU793
 2529 0f80 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__43.175, tmp936, _14
 2530              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2531              		.loc 1 351 105 view .LVU794
 2532 0f84 C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__48.179, tmp937, _12
 2533              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2534              		.loc 1 351 76 view .LVU795
 2535 0f88 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__51.180, vect__43.175, vect__48.179
 2536              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2537              		.loc 1 351 31 view .LVU796
 2538 0f8c C4C17E7F 		vmovdqu	YMMWORD PTR [r10], ymm4	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B], vect
 2538      22
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2539              		.loc 1 350 48 is_stmt 1 view .LVU797
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2540              		.loc 1 350 12 view .LVU798
 2541              	.L164:
 351:sieve_extend.c ****     }
 2542              		.loc 1 351 9 view .LVU799
 2543              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2544              		.loc 1 351 58 is_stmt 0 view .LVU800
 2545 0f91 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp938, MEM[base: vectp.173_175, index: ivtmp.215_453, offse
 2545      16
 2546              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2547              		.loc 1 351 105 view .LVU801
 2548 0f96 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r9+rdx]	# tmp939, MEM[base: vectp.177_182, index: ivtmp.215_453, offset
 2548      0C11
 2549              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2550              		.loc 1 351 58 view .LVU802
 2551 0f9c C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__43.175, tmp938, _14
 2552              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2553              		.loc 1 351 105 view .LVU803
 2554 0fa0 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__48.179, tmp939, _12
 2555              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2556              		.loc 1 351 76 view .LVU804
 2557 0fa4 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__51.180, vect__43.175, vect__48.179
 2557      DA
 2558              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 73


 2559              		.loc 1 351 31 view .LVU805
 2560 0fa9 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm11	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B],
 2560      1C12
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2561              		.loc 1 350 48 is_stmt 1 view .LVU806
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2562              		.loc 1 350 12 view .LVU807
 2563 0faf 4883C220 		add	rdx, 32	# ivtmp.215,
 2564              	.L163:
 351:sieve_extend.c ****     }
 2565              		.loc 1 351 9 view .LVU808
 2566              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2567              		.loc 1 351 58 is_stmt 0 view .LVU809
 2568 0fb3 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp940, MEM[base: vectp.173_175, index: ivtmp.215_453, offs
 2568      16
 2569              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2570              		.loc 1 351 105 view .LVU810
 2571 0fb8 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r9+rdx]	# tmp941, MEM[base: vectp.177_182, index: ivtmp.215_453, offse
 2571      3411
 2572              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2573              		.loc 1 351 58 view .LVU811
 2574 0fbe C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__43.175, tmp940, _14
 2575              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2576              		.loc 1 351 105 view .LVU812
 2577 0fc2 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__48.179, tmp941, _12
 2578              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2579              		.loc 1 351 76 view .LVU813
 2580 0fc6 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__51.180, vect__43.175, vect__48.179
 2580      F7
 2581              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2582              		.loc 1 351 31 view .LVU814
 2583 0fcb C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm6	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B], 
 2583      3412
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2584              		.loc 1 350 48 is_stmt 1 view .LVU815
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2585              		.loc 1 350 12 view .LVU816
 2586 0fd1 4883C220 		add	rdx, 32	# ivtmp.215,
 2587              	.L162:
 351:sieve_extend.c ****     }
 2588              		.loc 1 351 9 view .LVU817
 2589              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2590              		.loc 1 351 58 is_stmt 0 view .LVU818
 2591 0fd5 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp942, MEM[base: vectp.173_175, index: ivtmp.215_453, offse
 2591      16
 2592              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2593              		.loc 1 351 105 view .LVU819
 2594 0fda C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp943, MEM[base: vectp.177_182, index: ivtmp.215_453, offset
 2594      1C11
GAS LISTING /tmp/ccFOD2R4.s 			page 74


 2595              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2596              		.loc 1 351 58 view .LVU820
 2597 0fe0 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__43.175, tmp942, _14
 2598              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2599              		.loc 1 351 105 view .LVU821
 2600 0fe4 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__48.179, tmp943, _12
 2601              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2602              		.loc 1 351 76 view .LVU822
 2603 0fe8 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__51.180, vect__43.175, vect__48.179
 2604              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2605              		.loc 1 351 31 view .LVU823
 2606 0fec C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm5	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B], 
 2606      2C12
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2607              		.loc 1 350 48 is_stmt 1 view .LVU824
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2608              		.loc 1 350 12 view .LVU825
 2609 0ff2 4883C220 		add	rdx, 32	# ivtmp.215,
 2610              	.L161:
 351:sieve_extend.c ****     }
 2611              		.loc 1 351 9 view .LVU826
 2612              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2613              		.loc 1 351 58 is_stmt 0 view .LVU827
 2614 0ff6 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp944, MEM[base: vectp.173_175, index: ivtmp.215_453, offse
 2614      16
 2615              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2616              		.loc 1 351 105 view .LVU828
 2617 0ffb C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r9+rdx]	# tmp945, MEM[base: vectp.177_182, index: ivtmp.215_453, offse
 2617      1411
 2618              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2619              		.loc 1 351 58 view .LVU829
 2620 1001 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__43.175, tmp944, _14
 2621              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2622              		.loc 1 351 105 view .LVU830
 2623 1005 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__48.179, tmp945, _12
 2624              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2625              		.loc 1 351 76 view .LVU831
 2626 1009 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__51.180, vect__43.175, vect__48.179
 2626      E3
 2627              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2628              		.loc 1 351 31 view .LVU832
 2629 100e C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm12	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B],
 2629      2412
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2630              		.loc 1 350 48 is_stmt 1 view .LVU833
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2631              		.loc 1 350 12 view .LVU834
GAS LISTING /tmp/ccFOD2R4.s 			page 75


 2632 1014 4883C220 		add	rdx, 32	# ivtmp.215,
 2633              	.L160:
 351:sieve_extend.c ****     }
 2634              		.loc 1 351 9 view .LVU835
 2635              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2636              		.loc 1 351 58 is_stmt 0 view .LVU836
 2637 1018 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp946, MEM[base: vectp.173_175, index: ivtmp.215_453, offs
 2637      16
 2638              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2639              		.loc 1 351 105 view .LVU837
 2640 101d C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r9+rdx]	# tmp947, MEM[base: vectp.177_182, index: ivtmp.215_453, offse
 2640      3C11
 2641              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2642              		.loc 1 351 58 view .LVU838
 2643 1023 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__43.175, tmp946, _14
 2644              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2645              		.loc 1 351 105 view .LVU839
 2646 1027 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__48.179, tmp947, _12
 2647              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2648              		.loc 1 351 76 view .LVU840
 2649 102b C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__51.180, vect__43.175, vect__48.179
 2650              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2651              		.loc 1 351 31 view .LVU841
 2652 102f C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm2	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B], 
 2652      1412
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2653              		.loc 1 350 48 is_stmt 1 view .LVU842
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2654              		.loc 1 350 12 view .LVU843
 2655 1035 4883C220 		add	rdx, 32	# ivtmp.215,
 2656              	.L159:
 351:sieve_extend.c ****     }
 2657              		.loc 1 351 9 view .LVU844
 2658              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2659              		.loc 1 351 58 is_stmt 0 view .LVU845
 2660 1039 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp948, MEM[base: vectp.173_175, index: ivtmp.215_453, offse
 2660      16
 2661              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2662              		.loc 1 351 105 view .LVU846
 2663 103e C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp949, MEM[base: vectp.177_182, index: ivtmp.215_453, offset
 2663      1C11
 2664              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2665              		.loc 1 351 58 view .LVU847
 2666 1044 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__43.175, tmp948, _14
 2667              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2668              		.loc 1 351 105 view .LVU848
 2669 1048 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__48.179, tmp949, _12
GAS LISTING /tmp/ccFOD2R4.s 			page 76


 2670              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2671              		.loc 1 351 76 view .LVU849
 2672 104c C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__51.180, vect__43.175, vect__48.179
 2673              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2674              		.loc 1 351 31 view .LVU850
 2675 1050 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm8	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B], 
 2675      0412
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2676              		.loc 1 350 48 is_stmt 1 view .LVU851
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2677              		.loc 1 350 12 view .LVU852
 2678 1056 4883C220 		add	rdx, 32	# ivtmp.215,
 2679 105a 4C39E2   		cmp	rdx, r12	# ivtmp.215, _455
 2680 105d 0F843601 		je	.L200	#,
 2680      0000
 2681              	.L69:
 351:sieve_extend.c ****     }
 2682              		.loc 1 351 9 discriminator 2 view .LVU853
 2683              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2684              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU854
 2685 1063 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp889, MEM[base: vectp.173_175, index: ivtmp.215_453, offse
 2685      16
 2686              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2687              		.loc 1 351 105 discriminator 2 view .LVU855
 2688 1068 C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r9+rdx]	# tmp890, MEM[base: vectp.177_182, index: ivtmp.215_453, offse
 2688      1C11
 2689              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2690              		.loc 1 351 58 discriminator 2 view .LVU856
 2691 106e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__43.175, tmp889, _14
 2692              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2693              		.loc 1 351 105 discriminator 2 view .LVU857
 2694 1072 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__48.179, tmp890, _12
 2695              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2696              		.loc 1 351 76 discriminator 2 view .LVU858
 2697 1076 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__51.180, vect__43.175, vect__48.179
 2697      EC
 2698              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2699              		.loc 1 351 31 discriminator 2 view .LVU859
 2700 107b C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm13	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B],
 2700      2C12
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2701              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU860
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2702              		.loc 1 350 12 discriminator 2 view .LVU861
 351:sieve_extend.c ****     }
 2703              		.loc 1 351 9 discriminator 2 view .LVU862
 2704              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2705              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU863
GAS LISTING /tmp/ccFOD2R4.s 			page 77


 2706 1081 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp891, MEM[base: vectp.173_175, index: ivtmp.215_453, of
 2706      1620
 2707              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2708              		.loc 1 351 105 discriminator 2 view .LVU864
 2709 1087 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r9+rdx]	# tmp892, MEM[base: vectp.177_182, index: ivtmp.215_453, offs
 2709      741120
 2710              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2711              		.loc 1 351 58 discriminator 2 view .LVU865
 2712 108e C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__43.175, tmp891, _14
 2713              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2714              		.loc 1 351 105 discriminator 2 view .LVU866
 2715 1092 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__48.179, tmp892, _12
 2716              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2717              		.loc 1 351 76 discriminator 2 view .LVU867
 2718 1096 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__51.180, vect__43.175, vect__48.179
 2719              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2720              		.loc 1 351 31 discriminator 2 view .LVU868
 2721 109a C4C17E7F 		vmovdqu	YMMWORD PTR 32[r10+rdx], ymm7	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B]
 2721      7C1220
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2722              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU869
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2723              		.loc 1 350 12 discriminator 2 view .LVU870
 351:sieve_extend.c ****     }
 2724              		.loc 1 351 9 discriminator 2 view .LVU871
 2725              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2726              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU872
 2727 10a1 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp893, MEM[base: vectp.173_175, index: ivtmp.215_453, off
 2727      1640
 2728              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2729              		.loc 1 351 105 discriminator 2 view .LVU873
 2730 10a7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r9+rdx]	# tmp894, MEM[base: vectp.177_182, index: ivtmp.215_453, offs
 2730      5C1140
 2731              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2732              		.loc 1 351 58 discriminator 2 view .LVU874
 2733 10ae C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__43.175, tmp893, _14
 2734              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2735              		.loc 1 351 105 discriminator 2 view .LVU875
 2736 10b2 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__48.179, tmp894, _12
 2737              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2738              		.loc 1 351 76 discriminator 2 view .LVU876
 2739 10b6 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__51.180, vect__43.175, vect__48.179
 2739      C8
 2740              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2741              		.loc 1 351 31 discriminator 2 view .LVU877
 2742 10bb C4417E7F 		vmovdqu	YMMWORD PTR 64[r10+rdx], ymm9	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B]
GAS LISTING /tmp/ccFOD2R4.s 			page 78


 2742      4C1240
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2743              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU878
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2744              		.loc 1 350 12 discriminator 2 view .LVU879
 351:sieve_extend.c ****     }
 2745              		.loc 1 351 9 discriminator 2 view .LVU880
 2746              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2747              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU881
 2748 10c2 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp895, MEM[base: vectp.173_175, index: ivtmp.215_453, of
 2748      1660
 2749              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2750              		.loc 1 351 105 discriminator 2 view .LVU882
 2751 10c8 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r9+rdx]	# tmp896, MEM[base: vectp.177_182, index: ivtmp.215_453, off
 2751      641160
 2752              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2753              		.loc 1 351 58 discriminator 2 view .LVU883
 2754 10cf C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__43.175, tmp895, _14
 2755              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2756              		.loc 1 351 105 discriminator 2 view .LVU884
 2757 10d3 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__48.179, tmp896, _12
 2758              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2759              		.loc 1 351 76 discriminator 2 view .LVU885
 2760 10d7 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__51.180, vect__43.175, vect__48.179
 2760      F5
 2761              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2762              		.loc 1 351 31 discriminator 2 view .LVU886
 2763 10dc C4417E7F 		vmovdqu	YMMWORD PTR 96[r10+rdx], ymm14	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B
 2763      741260
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2764              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU887
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2765              		.loc 1 350 12 discriminator 2 view .LVU888
 351:sieve_extend.c ****     }
 2766              		.loc 1 351 9 discriminator 2 view .LVU889
 2767              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2768              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU890
 2769 10e3 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp897, MEM[base: vectp.173_175, index: ivtmp.215_453, o
 2769      16800000 
 2769      00
 2770              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2771              		.loc 1 351 105 discriminator 2 view .LVU891
 2772 10ec C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r9+rdx]	# tmp898, MEM[base: vectp.177_182, index: ivtmp.215_453, off
 2772      94118000 
 2772      0000
 2773              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2774              		.loc 1 351 58 discriminator 2 view .LVU892
 2775 10f6 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__43.175, tmp897, _14
GAS LISTING /tmp/ccFOD2R4.s 			page 79


 2776              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2777              		.loc 1 351 105 discriminator 2 view .LVU893
 2778 10fa C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__48.179, tmp898, _12
 2779              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2780              		.loc 1 351 76 discriminator 2 view .LVU894
 2781 10fe C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__51.180, vect__43.175, vect__48.179
 2782              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2783              		.loc 1 351 31 discriminator 2 view .LVU895
 2784 1102 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r10+rdx], ymm4	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B
 2784      A4128000 
 2784      0000
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2785              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU896
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2786              		.loc 1 350 12 discriminator 2 view .LVU897
 351:sieve_extend.c ****     }
 2787              		.loc 1 351 9 discriminator 2 view .LVU898
 2788              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2789              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU899
 2790 110c C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp899, MEM[base: vectp.173_175, index: ivtmp.215_453, of
 2790      16A00000 
 2790      00
 2791              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2792              		.loc 1 351 105 discriminator 2 view .LVU900
 2793 1115 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r9+rdx]	# tmp900, MEM[base: vectp.177_182, index: ivtmp.215_453, off
 2793      9C11A000 
 2793      0000
 2794              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2795              		.loc 1 351 58 discriminator 2 view .LVU901
 2796 111f C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__43.175, tmp899, _14
 2797              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2798              		.loc 1 351 105 discriminator 2 view .LVU902
 2799 1123 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__48.179, tmp900, _12
 2800              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2801              		.loc 1 351 76 discriminator 2 view .LVU903
 2802 1127 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__51.180, vect__43.175, vect__48.179
 2802      D1
 2803              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2804              		.loc 1 351 31 discriminator 2 view .LVU904
 2805 112c C4417E7F 		vmovdqu	YMMWORD PTR 160[r10+rdx], ymm10	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0
 2805      9412A000 
 2805      0000
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2806              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU905
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2807              		.loc 1 350 12 discriminator 2 view .LVU906
 351:sieve_extend.c ****     }
 2808              		.loc 1 351 9 discriminator 2 view .LVU907
GAS LISTING /tmp/ccFOD2R4.s 			page 80


 2809              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2810              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU908
 2811 1136 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp901, MEM[base: vectp.173_175, index: ivtmp.215_453, o
 2811      16C00000 
 2811      00
 2812              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2813              		.loc 1 351 105 discriminator 2 view .LVU909
 2814 113f C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r9+rdx]	# tmp902, MEM[base: vectp.177_182, index: ivtmp.215_453, of
 2814      AC11C000 
 2814      0000
 2815              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2816              		.loc 1 351 58 discriminator 2 view .LVU910
 2817 1149 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__43.175, tmp901, _14
 2818              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2819              		.loc 1 351 105 discriminator 2 view .LVU911
 2820 114d C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__48.179, tmp902, _12
 2821              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2822              		.loc 1 351 76 discriminator 2 view .LVU912
 2823 1151 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__51.180, vect__43.175, vect__48.179
 2823      FE
 2824              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2825              		.loc 1 351 31 discriminator 2 view .LVU913
 2826 1156 C4417E7F 		vmovdqu	YMMWORD PTR 192[r10+rdx], ymm15	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0
 2826      BC12C000 
 2826      0000
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2827              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU914
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2828              		.loc 1 350 12 discriminator 2 view .LVU915
 351:sieve_extend.c ****     }
 2829              		.loc 1 351 9 discriminator 2 view .LVU916
 2830              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2831              		.loc 1 351 58 is_stmt 0 discriminator 2 view .LVU917
 2832 1160 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp903, MEM[base: vectp.173_175, index: ivtmp.215_453, of
 2832      16E00000 
 2832      00
 2833              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2834              		.loc 1 351 105 discriminator 2 view .LVU918
 2835 1169 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r9+rdx]	# tmp904, MEM[base: vectp.177_182, index: ivtmp.215_453, off
 2835      BC11E000 
 2835      0000
 2836              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2837              		.loc 1 351 58 discriminator 2 view .LVU919
 2838 1173 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__43.175, tmp903, _14
 2839              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2840              		.loc 1 351 105 discriminator 2 view .LVU920
 2841 1177 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__48.179, tmp904, _12
GAS LISTING /tmp/ccFOD2R4.s 			page 81


 2842              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2843              		.loc 1 351 76 discriminator 2 view .LVU921
 2844 117b C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__51.180, vect__43.175, vect__48.179
 2845              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2846              		.loc 1 351 31 discriminator 2 view .LVU922
 2847 117f C4C17E7F 		vmovdqu	YMMWORD PTR 224[r10+rdx], ymm5	# MEM[base: vectp.182_191, index: ivtmp.215_453, offset: 0B
 2847      AC12E000 
 2847      0000
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2848              		.loc 1 350 48 is_stmt 1 discriminator 2 view .LVU923
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2849              		.loc 1 350 12 discriminator 2 view .LVU924
 2850 1189 4881C200 		add	rdx, 256	# ivtmp.215,
 2850      010000
 2851 1190 4C39E2   		cmp	rdx, r12	# ivtmp.215, _455
 2852 1193 0F85CAFE 		jne	.L69	#,
 2852      FFFF
 2853              	.L200:
 2854 1199 4D89EF   		mov	r15, r13	# niters_vector_mult_vf.169, niters.167
 2855 119c 4983E7FC 		and	r15, -4	# niters_vector_mult_vf.169,
 2856 11a0 4C01FB   		add	rbx, r15	# tmp.170, niters_vector_mult_vf.169
 2857 11a3 4D01F8   		add	r8, r15	# tmp.171, niters_vector_mult_vf.169
 2858 11a6 4D39FD   		cmp	r13, r15	# niters.167, niters_vector_mult_vf.169
 2859 11a9 7475     		je	.L209	#,
 2860              	.LVL102:
 351:sieve_extend.c ****     }
 2861              		.loc 1 351 9 view .LVU925
 2862              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2863              		.loc 1 350 48 is_stmt 0 view .LVU926
 2864 11ab 4C8D5301 		lea	r10, 1[rbx]	# copy_word,
 2865              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2866              		.loc 1 351 105 view .LVU927
 2867 11af C422A1F7 		shlx	r9, QWORD PTR 8[rdi+r8*8], r11	# tmp484, *_47, shift
 2867      4CC708
 2868              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2869              		.loc 1 351 58 view .LVU928
 2870 11b6 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r8*8], rax	# tmp486, *_42, shift_flipped
 2870      34C7
 2871              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2872              		.loc 1 351 76 view .LVU929
 2873 11bc 4909F1   		or	r9, rsi	# tmp488, tmp486
 2874              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2875              		.loc 1 350 5 view .LVU930
 2876 11bf 4C39D1   		cmp	rcx, r10	# destination_stop_word, copy_word
 2877              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2878              		.loc 1 351 89 view .LVU931
 2879 11c2 4D8D6801 		lea	r13, 1[r8]	# _45,
 2880              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 82


 2881              		.loc 1 351 76 view .LVU932
 2882 11c6 4C890CDF 		mov	QWORD PTR [rdi+rbx*8], r9	# *_51, tmp488
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2883              		.loc 1 350 48 is_stmt 1 view .LVU933
 2884              	.LVL103:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2885              		.loc 1 350 12 view .LVU934
 2886              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2887              		.loc 1 350 5 is_stmt 0 view .LVU935
 2888 11ca 7254     		jb	.L209	#,
 351:sieve_extend.c ****     }
 2889              		.loc 1 351 9 is_stmt 1 view .LVU936
 2890              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2891              		.loc 1 350 48 is_stmt 0 view .LVU937
 2892 11cc 4883C302 		add	rbx, 2	# copy_word,
 2893              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2894              		.loc 1 351 105 view .LVU938
 2895 11d0 C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r13*8], r11	# tmp489, *_34, shift
 2895      64EF08
 2896              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2897              		.loc 1 351 58 view .LVU939
 2898 11d7 4E8B34EF 		mov	r14, QWORD PTR [rdi+r13*8]	# *_29, *_29
 2899              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2900              		.loc 1 351 89 view .LVU940
 2901 11db 4983C002 		add	r8, 2	# _32,
 2902              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2903              		.loc 1 351 58 view .LVU941
 2904 11df C4C2FBF7 		shrx	rdx, r14, rax	# tmp491, *_29, shift_flipped
 2904      D6
 2905              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2906              		.loc 1 351 76 view .LVU942
 2907 11e4 4909D4   		or	r12, rdx	# tmp493, tmp491
 2908 11e7 4E8924D7 		mov	QWORD PTR [rdi+r10*8], r12	# *_38, tmp493
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2909              		.loc 1 350 48 is_stmt 1 view .LVU943
 2910              	.LVL104:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2911              		.loc 1 350 12 view .LVU944
 2912              	# sieve_extend.c:350:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2913              		.loc 1 350 5 is_stmt 0 view .LVU945
 2914 11eb 4839D9   		cmp	rcx, rbx	# destination_stop_word, copy_word
 2915 11ee 7230     		jb	.L209	#,
 351:sieve_extend.c ****     }
 2916              		.loc 1 351 9 is_stmt 1 view .LVU946
 2917              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2918              		.loc 1 351 105 is_stmt 0 view .LVU947
 2919 11f0 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r8*8], r11	# tmp494, *_161, shift
 2919      4CC708
GAS LISTING /tmp/ccFOD2R4.s 			page 83


 2920              	.LVL105:
 2921              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2922              		.loc 1 351 58 view .LVU948
 2923 11f7 4E8B1CC7 		mov	r11, QWORD PTR [rdi+r8*8]	# *_156, *_156
 2924              	.LVL106:
 351:sieve_extend.c ****     }
 2925              		.loc 1 351 58 view .LVU949
 2926 11fb C4C2FBF7 		shrx	rax, r11, rax	# tmp496, *_156, shift_flipped
 2926      C3
 2927              	# sieve_extend.c:351:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 351:sieve_extend.c ****     }
 2928              		.loc 1 351 76 view .LVU950
 2929 1200 4809C8   		or	rax, rcx	# tmp498, tmp494
 2930 1203 488904DF 		mov	QWORD PTR [rdi+rbx*8], rax	# *_165, tmp498
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2931              		.loc 1 350 48 is_stmt 1 view .LVU951
 2932              	.LVL107:
 350:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2933              		.loc 1 350 12 view .LVU952
 2934 1207 C5F877   		vzeroupper
 2935              	# sieve_extend.c:353: }
 353:sieve_extend.c **** 
 2936              		.loc 1 353 1 is_stmt 0 view .LVU953
 2937 120a 488D65D8 		lea	rsp, -40[rbp]	#,
 2938 120e 5B       		pop	rbx	#
 2939 120f 415C     		pop	r12	#
 2940 1211 415D     		pop	r13	#
 2941 1213 415E     		pop	r14	#
 2942 1215 415F     		pop	r15	#
 2943 1217 5D       		pop	rbp	#
 2944              		.cfi_remember_state
 2945              		.cfi_def_cfa 7, 8
 2946 1218 C3       		ret	
 2947              	.LVL108:
 2948 1219 0F1F8000 		.p2align 4,,7
 2948      000000
 2949              		.p2align 3
 2950              	.L209:
 2951              		.cfi_restore_state
 353:sieve_extend.c **** 
 2952              		.loc 1 353 1 view .LVU954
 2953 1220 C5F877   		vzeroupper
 2954 1223 488D65D8 		lea	rsp, -40[rbp]	#,
 2955 1227 5B       		pop	rbx	#
 2956 1228 415C     		pop	r12	#
 2957 122a 415D     		pop	r13	#
 2958 122c 415E     		pop	r14	#
 2959 122e 415F     		pop	r15	#
 2960 1230 5D       		pop	rbp	#
 2961              		.cfi_remember_state
 2962              		.cfi_def_cfa 7, 8
 2963 1231 C3       		ret	
 2964              	.LVL109:
 2965              		.p2align 4,,7
 2966 1232 660F1F44 		.p2align 3
 2966      0000
GAS LISTING /tmp/ccFOD2R4.s 			page 84


 2967              	.L78:
 2968              		.cfi_restore_state
 2969              	# sieve_extend.c:331:     register counter_t source_word = wordindex(source_start);
 331:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2970              		.loc 1 331 24 view .LVU955
 2971 1238 4989F0   		mov	r8, rsi	# source_word, source_word
 2972              	# sieve_extend.c:339:     if (size >= WORD_SIZE_counter) {
 339:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 2973              		.loc 1 339 8 view .LVU956
 2974 123b 4C89D3   		mov	rbx, r10	# copy_word, copy_word
 2975 123e 4C8D7601 		lea	r14, 1[rsi]	# tmp671,
 2976 1242 E9B3FCFF 		jmp	.L67	#
 2976      FF
 2977              	.LVL110:
 2978              		.p2align 4,,7
 2979 1247 90       		.p2align 3
 2980              	.L75:
 2981              	.LBB308:
 2982              	.LBB306:
 2983              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2984              		.loc 1 343 33 view .LVU957
 2985 1248 48C74424 		mov	QWORD PTR -16[rsp], 0	# %sfp,
 2985      F0000000 
 2985      00
 2986 1251 488D5E01 		lea	rbx, 1[rsi]	# tmp553,
 2987 1255 E9CDF5FF 		jmp	.L59	#
 2987      FF
 2988              	.LVL111:
 2989 125a 660F1F44 		.p2align 4,,7
 2989      0000
 2990              		.p2align 3
 2991              	.L213:
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2992              		.loc 1 343 33 view .LVU958
 2993 1260 C5F877   		vzeroupper
 2994 1263 E94CF9FF 		jmp	.L57	#
 2994      FF
 2995              	.L212:
 344:sieve_extend.c ****         }
 2996              		.loc 1 344 13 is_stmt 1 view .LVU959
 2997              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 2998              		.loc 1 344 66 is_stmt 0 view .LVU960
 2999 1268 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r9]	# tmp922, MEM[base: vectp.191_259, index: ivtmp.225_456, offset: 0B
 2999      01
 3000 126d BA200000 		mov	edx, 32	# ivtmp.225,
 3000      00
 3001              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 3002              		.loc 1 344 115 view .LVU961
 3003 1272 C5FE6F1B 		vmovdqu	ymm3, YMMWORD PTR [rbx]	# tmp923, MEM[base: vectp.195_266, index: ivtmp.225_456, offset: 0
 3004              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 3005              		.loc 1 344 66 view .LVU962
 3006 1276 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__30.193, tmp922, _14
 3007              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccFOD2R4.s 			page 85


 344:sieve_extend.c ****         }
 3008              		.loc 1 344 115 view .LVU963
 3009 127a C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__35.197, tmp923, _12
 3010              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 3011              		.loc 1 344 84 view .LVU964
 3012 127e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__39.198, vect__30.193, vect__35.197
 3012      DA
 3013              	# sieve_extend.c:344:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 344:sieve_extend.c ****         }
 3014              		.loc 1 344 37 view .LVU965
 3015 1283 C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm11	# MEM[base: vectp.200_275, index: ivtmp.225_456, offset: 0B], vec
 3015      1C24
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3016              		.loc 1 343 58 is_stmt 1 view .LVU966
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3017              		.loc 1 343 40 view .LVU967
 3018 1289 E914F6FF 		jmp	.L157	#
 3018      FF
 3019              	.LVL112:
 3020              	.L74:
 3021              	# sieve_extend.c:343:         for (register counter_t i = 0; i <loop_distance; ++i) {
 343:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3022              		.loc 1 343 33 is_stmt 0 view .LVU968
 3023 128e 4531E4   		xor	r12d, r12d	# tmp.189
 3024 1291 E930F8FF 		jmp	.L58	#
 3024      FF
 3025              	.LBE306:
 3026              	.LBE308:
 3027              		.cfi_endproc
 3028              	.LFE64:
 3030 1296 662E0F1F 		.p2align 4
 3030      84000000 
 3030      0000
 3032              	continuePattern_aligned:
 3033              	.LVL113:
 3034              	.LFB63:
 301:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3035              		.loc 1 301 146 is_stmt 1 view -0
 3036              		.cfi_startproc
 302:sieve_extend.c **** 
 3037              		.loc 1 302 5 view .LVU970
 304:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3038              		.loc 1 304 5 view .LVU971
 3039              	# sieve_extend.c:301: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 301:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3040              		.loc 1 301 146 is_stmt 0 view .LVU972
 3041 12a0 55       		push	rbp	#
 3042              		.cfi_def_cfa_offset 16
 3043              		.cfi_offset 6, -16
 3044 12a1 4889E5   		mov	rbp, rsp	#,
 3045              		.cfi_def_cfa_register 6
 3046 12a4 4157     		push	r15	#
 3047 12a6 4156     		push	r14	#
 3048 12a8 4155     		push	r13	#
 3049              		.cfi_offset 15, -24
 3050              		.cfi_offset 14, -32
GAS LISTING /tmp/ccFOD2R4.s 			page 86


 3051              		.cfi_offset 13, -40
 3052 12aa 4989FD   		mov	r13, rdi	# bitstorage, tmp295
 3053 12ad 4154     		push	r12	#
 3054              		.cfi_offset 12, -48
 3055 12af 4989D4   		mov	r12, rdx	# size, tmp297
 3056 12b2 53       		push	rbx	#
 3057              		.cfi_offset 3, -56
 3058              	# sieve_extend.c:304:     const counter_t destination_stop_word = wordindex(destination_stop);
 304:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3059              		.loc 1 304 21 view .LVU973
 3060 12b3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 3061              	# sieve_extend.c:305:     const counter_t copy_start = source_start + size;
 305:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 3062              		.loc 1 305 21 view .LVU974
 3063 12b6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 3064              	.LVL114:
 3065              	# sieve_extend.c:301: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 301:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3066              		.loc 1 301 146 view .LVU975
 3067 12ba 4883E4E0 		and	rsp, -32	#,
 3068              	# sieve_extend.c:307:     counter_t copy_word = wordindex(copy_start);
 307:sieve_extend.c ****     
 3069              		.loc 1 307 15 view .LVU976
 3070 12be 4889C8   		mov	rax, rcx	# ivtmp.270, copy_start
 3071              	# sieve_extend.c:306:     counter_t source_word = wordindex(source_start);
 306:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3072              		.loc 1 306 15 view .LVU977
 3073 12c1 48C1EE06 		shr	rsi, 6	# source_start,
 3074              	.LVL115:
 3075              	# sieve_extend.c:301: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 301:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 3076              		.loc 1 301 146 view .LVU978
 3077 12c5 488D6424 		lea	rsp, -32[rsp]	#,
 3077      E0
 3078              	# sieve_extend.c:307:     counter_t copy_word = wordindex(copy_start);
 307:sieve_extend.c ****     
 3079              		.loc 1 307 15 view .LVU979
 3080 12ca 48C1E806 		shr	rax, 6	# ivtmp.270,
 3081              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3082              		.loc 1 309 39 view .LVU980
 3083 12ce 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 3083      00000000 
 3084              	.LVL116:
 3085              	# sieve_extend.c:304:     const counter_t destination_stop_word = wordindex(destination_stop);
 304:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3086              		.loc 1 304 21 view .LVU981
 3087 12d6 48C1EB06 		shr	rbx, 6	# tmp298,
 3088              	.LVL117:
 305:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 3089              		.loc 1 305 5 is_stmt 1 view .LVU982
 306:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3090              		.loc 1 306 5 view .LVU983
 3091              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3092              		.loc 1 309 39 is_stmt 0 view .LVU984
 3093 12da 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
GAS LISTING /tmp/ccFOD2R4.s 			page 87


 3093      00
 3094              	# sieve_extend.c:306:     counter_t source_word = wordindex(source_start);
 306:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3095              		.loc 1 306 15 view .LVU985
 3096 12df 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 3096      08
 3097              	.LVL118:
 307:sieve_extend.c ****     
 3098              		.loc 1 307 5 is_stmt 1 view .LVU986
 309:sieve_extend.c **** 
 3099              		.loc 1 309 5 view .LVU987
 3100              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3101              		.loc 1 309 56 is_stmt 0 view .LVU988
 3102 12e4 89CE     		mov	esi, ecx	# tmp183, copy_start
 3103              	.LVL119:
 3104              	# sieve_extend.c:311:     while (copy_word + size <= destination_stop_word) {
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3105              		.loc 1 311 22 view .LVU989
 3106 12e6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.270,
 3107              	.LVL120:
 3108              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3109              		.loc 1 309 56 view .LVU990
 3110 12ea F7D6     		not	esi	# tmp183
 3111              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3112              		.loc 1 309 39 view .LVU991
 3113 12ec 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 3114              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3115              		.loc 1 309 56 view .LVU992
 3116 12f0 48C7C2FF 		mov	rdx, -1	# tmp186,
 3116      FFFFFF
 3117              	.LVL121:
 309:sieve_extend.c **** 
 3118              		.loc 1 309 56 view .LVU993
 3119 12f7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 3119      C2
 3120              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3121              		.loc 1 309 53 view .LVU994
 3122 12fc C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 3122      0E
 3123              	# sieve_extend.c:309:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 309:sieve_extend.c **** 
 3124              		.loc 1 309 27 view .LVU995
 3125 1301 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 3125      00
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3126              		.loc 1 311 5 is_stmt 1 view .LVU996
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3127              		.loc 1 311 11 view .LVU997
 3128 1306 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.270
 3129 1309 0F827101 		jb	.L215	#,
 3129      0000
 3130 130f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
GAS LISTING /tmp/ccFOD2R4.s 			page 88


 3130      00000000 
 3131 1317 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 3131      00000000 
 3132              	.LVL122:
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3133              		.loc 1 311 11 is_stmt 0 view .LVU998
 3134 131f 4D01EA   		add	r10, r13	# tmp190, bitstorage
 3135              	# sieve_extend.c:312:         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)s
 312:sieve_extend.c ****         copy_word += size;
 3136              		.loc 1 312 9 view .LVU999
 3137 1322 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 3137      00000000 
 3138 132a 4929C2   		sub	r10, rax	# tmp190, tmp191
 3139 132d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 3139      18
 3140              	.LVL123:
 3141              	.L216:
 312:sieve_extend.c ****         copy_word += size;
 3142              		.loc 1 312 9 is_stmt 1 view .LVU1000
 3143              	.LBB309:
 3144              	.LBI309:
 3145              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 3146              		.loc 2 31 1 view .LVU1001
 3147              	.LBB310:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
GAS LISTING /tmp/ccFOD2R4.s 			page 89


  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 3148              		.loc 2 34 3 view .LVU1002
 3149              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3150              		.loc 2 34 10 is_stmt 0 view .LVU1003
 3151 1332 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 3151      18
 3152 1337 4C89FA   		mov	rdx, r15	#, _15
 3153 133a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.270
 3153      10
 3154 133f 4C89F6   		mov	rsi, r14	#, _5
 3155 1342 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 3156 1346 E8000000 		call	memcpy@PLT	#
 3156      00
 3157              	.LVL124:
 3158              		.loc 2 34 10 view .LVU1004
 3159              	.LBE310:
 3160              	.LBE309:
 313:sieve_extend.c ****     }
 3161              		.loc 1 313 9 is_stmt 1 view .LVU1005
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3162              		.loc 1 311 11 view .LVU1006
 3163 134b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3163      10
 3164 1350 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.270,
 3165 1354 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.270
 3166 1357 0F822301 		jb	.L215	#,
 3166      0000
 312:sieve_extend.c ****         copy_word += size;
 3167              		.loc 1 312 9 view .LVU1007
 3168              	.LVL125:
 3169              	.LBB318:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3170              		.loc 2 31 1 view .LVU1008
 3171              	.LBB311:
 3172              		.loc 2 34 3 view .LVU1009
 3173              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3174              		.loc 2 34 10 is_stmt 0 view .LVU1010
 3175 135d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 3175      18
 3176 1362 4C89F6   		mov	rsi, r14	#, _5
 3177 1365 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.270
 3177      10
 3178              	.LVL126:
 3179              		.loc 2 34 10 view .LVU1011
 3180 136a 4C89FA   		mov	rdx, r15	#, _15
 3181 136d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 3182 1371 E8000000 		call	memcpy@PLT	#
 3182      00
 3183              	.LVL127:
 3184              		.loc 2 34 10 view .LVU1012
 3185              	.LBE311:
 3186              	.LBE318:
 313:sieve_extend.c ****     }
 3187              		.loc 1 313 9 is_stmt 1 view .LVU1013
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3188              		.loc 1 311 11 view .LVU1014
 3189 1376 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 90


 3189      10
 3190 137b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.270,
 3191 137f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.270
 3192 1382 0F82F800 		jb	.L215	#,
 3192      0000
 312:sieve_extend.c ****         copy_word += size;
 3193              		.loc 1 312 9 view .LVU1015
 3194              	.LVL128:
 3195              	.LBB319:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3196              		.loc 2 31 1 view .LVU1016
 3197              	.LBB312:
 3198              		.loc 2 34 3 view .LVU1017
 3199              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3200              		.loc 2 34 10 is_stmt 0 view .LVU1018
 3201 1388 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 3201      18
 3202 138d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.270
 3202      10
 3203 1392 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 3204 1396 4C89FA   		mov	rdx, r15	#, _15
 3205 1399 4C89F6   		mov	rsi, r14	#, _5
 3206 139c E8000000 		call	memcpy@PLT	#
 3206      00
 3207              	.LVL129:
 3208              		.loc 2 34 10 view .LVU1019
 3209              	.LBE312:
 3210              	.LBE319:
 313:sieve_extend.c ****     }
 3211              		.loc 1 313 9 is_stmt 1 view .LVU1020
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3212              		.loc 1 311 11 view .LVU1021
 3213 13a1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3213      10
 3214 13a6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.270,
 3215 13aa 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.270
 3216 13ad 0F82CD00 		jb	.L215	#,
 3216      0000
 312:sieve_extend.c ****         copy_word += size;
 3217              		.loc 1 312 9 view .LVU1022
 3218              	.LVL130:
 3219              	.LBB320:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3220              		.loc 2 31 1 view .LVU1023
 3221              	.LBB313:
 3222              		.loc 2 34 3 view .LVU1024
 3223              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3224              		.loc 2 34 10 is_stmt 0 view .LVU1025
 3225 13b3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 3225      18
 3226 13b8 4C89FA   		mov	rdx, r15	#, _15
 3227 13bb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.270
 3227      10
 3228 13c0 4C89F6   		mov	rsi, r14	#, _5
 3229 13c3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 3230 13c7 E8000000 		call	memcpy@PLT	#
 3230      00
GAS LISTING /tmp/ccFOD2R4.s 			page 91


 3231              	.LVL131:
 3232              		.loc 2 34 10 view .LVU1026
 3233              	.LBE313:
 3234              	.LBE320:
 313:sieve_extend.c ****     }
 3235              		.loc 1 313 9 is_stmt 1 view .LVU1027
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3236              		.loc 1 311 11 view .LVU1028
 3237 13cc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3237      10
 3238 13d1 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.270,
 3239 13d5 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.270
 3240 13d8 0F82A200 		jb	.L215	#,
 3240      0000
 312:sieve_extend.c ****         copy_word += size;
 3241              		.loc 1 312 9 view .LVU1029
 3242              	.LVL132:
 3243              	.LBB321:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3244              		.loc 2 31 1 view .LVU1030
 3245              	.LBB314:
 3246              		.loc 2 34 3 view .LVU1031
 3247              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3248              		.loc 2 34 10 is_stmt 0 view .LVU1032
 3249 13de 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 3249      18
 3250 13e3 4C89FA   		mov	rdx, r15	#, _15
 3251 13e6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.270
 3251      10
 3252 13eb 4C89F6   		mov	rsi, r14	#, _5
 3253 13ee 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 3254 13f2 E8000000 		call	memcpy@PLT	#
 3254      00
 3255              	.LVL133:
 3256              		.loc 2 34 10 view .LVU1033
 3257              	.LBE314:
 3258              	.LBE321:
 313:sieve_extend.c ****     }
 3259              		.loc 1 313 9 is_stmt 1 view .LVU1034
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3260              		.loc 1 311 11 view .LVU1035
 3261 13f7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3261      10
 3262 13fc 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.270,
 3263 1400 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.270
 3264 1403 727B     		jb	.L215	#,
 312:sieve_extend.c ****         copy_word += size;
 3265              		.loc 1 312 9 view .LVU1036
 3266              	.LVL134:
 3267              	.LBB322:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3268              		.loc 2 31 1 view .LVU1037
 3269              	.LBB315:
 3270              		.loc 2 34 3 view .LVU1038
 3271              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3272              		.loc 2 34 10 is_stmt 0 view .LVU1039
 3273 1405 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 92


 3273      18
 3274 140a 4C89F6   		mov	rsi, r14	#, _5
 3275 140d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.270
 3275      10
 3276 1412 4C89FA   		mov	rdx, r15	#, _15
 3277 1415 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 3278 1419 E8000000 		call	memcpy@PLT	#
 3278      00
 3279              	.LVL135:
 3280              		.loc 2 34 10 view .LVU1040
 3281              	.LBE315:
 3282              	.LBE322:
 313:sieve_extend.c ****     }
 3283              		.loc 1 313 9 is_stmt 1 view .LVU1041
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3284              		.loc 1 311 11 view .LVU1042
 3285 141e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3285      10
 3286 1423 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.270,
 3287 1427 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.270
 3288 142a 7254     		jb	.L215	#,
 312:sieve_extend.c ****         copy_word += size;
 3289              		.loc 1 312 9 view .LVU1043
 3290              	.LVL136:
 3291              	.LBB323:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3292              		.loc 2 31 1 view .LVU1044
 3293              	.LBB316:
 3294              		.loc 2 34 3 view .LVU1045
 3295              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3296              		.loc 2 34 10 is_stmt 0 view .LVU1046
 3297 142c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 3297      18
 3298 1431 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.270
 3298      10
 3299 1436 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 3300 143a 4C89FA   		mov	rdx, r15	#, _15
 3301 143d 4C89F6   		mov	rsi, r14	#, _5
 3302 1440 E8000000 		call	memcpy@PLT	#
 3302      00
 3303              	.LVL137:
 3304              		.loc 2 34 10 view .LVU1047
 3305              	.LBE316:
 3306              	.LBE323:
 313:sieve_extend.c ****     }
 3307              		.loc 1 313 9 is_stmt 1 view .LVU1048
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3308              		.loc 1 311 11 view .LVU1049
 3309 1445 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3309      10
 3310 144a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.270,
 3311 144e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.270
 3312 1451 722D     		jb	.L215	#,
 312:sieve_extend.c ****         copy_word += size;
 3313              		.loc 1 312 9 view .LVU1050
 3314              	.LVL138:
 3315              	.LBB324:
GAS LISTING /tmp/ccFOD2R4.s 			page 93


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3316              		.loc 2 31 1 view .LVU1051
 3317              	.LBB317:
 3318              		.loc 2 34 3 view .LVU1052
 3319              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3320              		.loc 2 34 10 is_stmt 0 view .LVU1053
 3321 1453 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 3321      18
 3322 1458 4C89FA   		mov	rdx, r15	#, _15
 3323 145b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.270
 3323      10
 3324 1460 4C89F6   		mov	rsi, r14	#, _5
 3325 1463 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 3326 1467 E8000000 		call	memcpy@PLT	#
 3326      00
 3327              	.LVL139:
 3328              		.loc 2 34 10 view .LVU1054
 3329              	.LBE317:
 3330              	.LBE324:
 313:sieve_extend.c ****     }
 3331              		.loc 1 313 9 is_stmt 1 view .LVU1055
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3332              		.loc 1 311 11 view .LVU1056
 3333 146c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.270, %sfp
 3333      10
 3334              	.LVL140:
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3335              		.loc 1 311 11 is_stmt 0 view .LVU1057
 3336 1471 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.270,
 3337              	.LVL141:
 311:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 3338              		.loc 1 311 11 view .LVU1058
 3339 1475 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.270
 3340 1478 0F83B4FE 		jnb	.L216	#,
 3340      FFFF
 3341              	.LVL142:
 3342 147e 6690     		.p2align 4
 3343              		.p2align 3
 3344              	.L215:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3345              		.loc 1 316 10 is_stmt 1 view .LVU1059
 3346 1480 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.270
 3347 1483 0F864902 		jbe	.L326	#,
 3347      0000
 3348 1489 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 3349 148d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 3349      00000000 
 3350              	.LVL143:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3351              		.loc 1 316 10 is_stmt 0 view .LVU1060
 3352 1495 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 3352      20
 3353 149a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 3354 149e 4D39FA   		cmp	r10, r15	# _4, tmp199
 3355 14a1 410F9DC3 		setge	r11b	#, tmp201
 3356 14a5 4939FC   		cmp	r12, rdi	# _41, tmp202
 3357 14a8 400F9DC6 		setge	sil	#, tmp204
GAS LISTING /tmp/ccFOD2R4.s 			page 94


 3358 14ac 4108F3   		or	r11b, sil	# tmp201, tmp204
 3359 14af 0F844B02 		je	.L218	#,
 3359      0000
 3360 14b5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 3361 14b9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.270
 3362 14bc 4883FA05 		cmp	rdx, 5	# tmp207,
 3363 14c0 0F863A02 		jbe	.L218	#,
 3363      0000
 3364 14c6 4D89F7   		mov	r15, r14	# tmp210, _5
 3365 14c9 49C1EF03 		shr	r15, 3	# tmp210,
 3366 14cd 49F7DF   		neg	r15	# tmp211
 3367 14d0 4183E703 		and	r15d, 3	# prolog_loop_niters.238,
 3368 14d4 0F842E03 		je	.L225	#,
 3368      0000
 317:sieve_extend.c ****         source_word++;
 3369              		.loc 1 317 9 is_stmt 1 view .LVU1061
 3370              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3371              		.loc 1 317 43 is_stmt 0 view .LVU1062
 3372 14da 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 3373 14dd 4983FF01 		cmp	r15, 1	# prolog_loop_niters.238,
 3374              	# sieve_extend.c:318:         source_word++;
 318:sieve_extend.c ****         copy_word++;
 3375              		.loc 1 318 20 view .LVU1063
 3376 14e1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 3376      08
 3377              	# sieve_extend.c:319:         copy_word++;
 319:sieve_extend.c ****     }
 3378              		.loc 1 319 18 view .LVU1064
 3379 14e6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 3380              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3381              		.loc 1 317 31 view .LVU1065
 3382 14ea 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 3382      00
 318:sieve_extend.c ****         copy_word++;
 3383              		.loc 1 318 9 is_stmt 1 view .LVU1066
 3384              	# sieve_extend.c:318:         source_word++;
 318:sieve_extend.c ****         copy_word++;
 3385              		.loc 1 318 20 is_stmt 0 view .LVU1067
 3386 14ef 4D8D6101 		lea	r12, 1[r9]	# source_word,
 3387              	.LVL144:
 319:sieve_extend.c ****     }
 3388              		.loc 1 319 9 is_stmt 1 view .LVU1068
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3389              		.loc 1 316 10 view .LVU1069
 3390 14f3 742A     		je	.L219	#,
 317:sieve_extend.c ****         source_word++;
 3391              		.loc 1 317 9 view .LVU1070
 3392              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3393              		.loc 1 317 43 is_stmt 0 view .LVU1071
 3394 14f5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 3394      00
 3395 14fa 4983FF03 		cmp	r15, 3	# prolog_loop_niters.238,
 3396              	# sieve_extend.c:318:         source_word++;
 318:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccFOD2R4.s 			page 95


 3397              		.loc 1 318 20 view .LVU1072
 3398 14fe 4D8D6102 		lea	r12, 2[r9]	# source_word,
 3399              	.LVL145:
 3400              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3401              		.loc 1 317 31 view .LVU1073
 3402 1502 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 3402      00
 318:sieve_extend.c ****         copy_word++;
 3403              		.loc 1 318 9 is_stmt 1 view .LVU1074
 3404              	.LVL146:
 319:sieve_extend.c ****     }
 3405              		.loc 1 319 9 view .LVU1075
 3406              	# sieve_extend.c:319:         copy_word++;
 319:sieve_extend.c ****     }
 3407              		.loc 1 319 18 is_stmt 0 view .LVU1076
 3408 1507 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 3409              	.LVL147:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3410              		.loc 1 316 10 is_stmt 1 view .LVU1077
 3411 150b 7512     		jne	.L219	#,
 317:sieve_extend.c ****         source_word++;
 3412              		.loc 1 317 9 view .LVU1078
 3413              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3414              		.loc 1 317 43 is_stmt 0 view .LVU1079
 3415 150d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 3415      00
 3416              	# sieve_extend.c:318:         source_word++;
 318:sieve_extend.c ****         copy_word++;
 3417              		.loc 1 318 20 view .LVU1080
 3418 1512 4D8D6103 		lea	r12, 3[r9]	# source_word,
 3419              	.LVL148:
 3420              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3421              		.loc 1 317 31 view .LVU1081
 3422 1516 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 3422      00
 318:sieve_extend.c ****         copy_word++;
 3423              		.loc 1 318 9 is_stmt 1 view .LVU1082
 3424              	.LVL149:
 319:sieve_extend.c ****     }
 3425              		.loc 1 319 9 view .LVU1083
 3426              	# sieve_extend.c:319:         copy_word++;
 319:sieve_extend.c ****     }
 3427              		.loc 1 319 18 is_stmt 0 view .LVU1084
 3428 151b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 3429              	.LVL150:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3430              		.loc 1 316 10 is_stmt 1 view .LVU1085
 3431              	.L219:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3432              		.loc 1 316 10 is_stmt 0 view .LVU1086
 3433 151f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 3433      08
 3434 1524 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 3435 1527 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.238
GAS LISTING /tmp/ccFOD2R4.s 			page 96


 3436 152a 4929C3   		sub	r11, rax	# niters.239, ivtmp.270
 3437 152d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.238
 3438 1530 4D89D8   		mov	r8, r11	# bnd.240, niters.239
 3439 1533 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.238
 3440 1536 49C1E802 		shr	r8, 2	# bnd.240,
 3441 153a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.248,
 3441      00
 3442 153f 49C1E005 		sal	r8, 5	# _182,
 3443              	# sieve_extend.c:306:     counter_t source_word = wordindex(source_start);
 306:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3444              		.loc 1 306 15 view .LVU1087
 3445 1543 31C0     		xor	eax, eax	# ivtmp.261
 3446 1545 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 3447 1549 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.245,
 3447      00
 3448 154e 48C1EA05 		shr	rdx, 5	# tmp226,
 3449 1552 4883C201 		add	rdx, 1	# tmp229,
 3450 1556 83E207   		and	edx, 7	# tmp230,
 3451 1559 0F849500 		je	.L221	#,
 3451      0000
 3452 155f 4883FA01 		cmp	rdx, 1	# tmp230,
 3453 1563 7477     		je	.L285	#,
 3454 1565 4883FA02 		cmp	rdx, 2	# tmp230,
 3455 1569 7462     		je	.L286	#,
 3456 156b 4883FA03 		cmp	rdx, 3	# tmp230,
 3457 156f 744D     		je	.L287	#,
 3458 1571 4883FA04 		cmp	rdx, 4	# tmp230,
 3459 1575 7438     		je	.L288	#,
 3460 1577 4883FA05 		cmp	rdx, 5	# tmp230,
 3461 157b 7423     		je	.L289	#,
 3462 157d 4883FA06 		cmp	rdx, 6	# tmp230,
 3463 1581 740E     		je	.L290	#,
 317:sieve_extend.c ****         source_word++;
 3464              		.loc 1 317 9 is_stmt 1 view .LVU1088
 3465              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3466              		.loc 1 317 31 is_stmt 0 view .LVU1089
 3467 1583 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.245_119, index: ivtmp.261_180, offset: 0
 3468 1587 B8200000 		mov	eax, 32	# ivtmp.261,
 3468      00
 3469 158c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], tmp3
 3469      0F
 318:sieve_extend.c ****         copy_word++;
 3470              		.loc 1 318 9 is_stmt 1 view .LVU1090
 319:sieve_extend.c ****     }
 3471              		.loc 1 319 9 view .LVU1091
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3472              		.loc 1 316 10 view .LVU1092
 3473              	.L290:
 317:sieve_extend.c ****         source_word++;
 3474              		.loc 1 317 9 view .LVU1093
 3475              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3476              		.loc 1 317 31 is_stmt 0 view .LVU1094
 3477 1591 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3477      06
 3478 1596 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
GAS LISTING /tmp/ccFOD2R4.s 			page 97


 3478      3C07
 318:sieve_extend.c ****         copy_word++;
 3479              		.loc 1 318 9 is_stmt 1 view .LVU1095
 319:sieve_extend.c ****     }
 3480              		.loc 1 319 9 view .LVU1096
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3481              		.loc 1 316 10 view .LVU1097
 3482 159c 4883C020 		add	rax, 32	# ivtmp.261,
 3483              	.L289:
 317:sieve_extend.c ****         source_word++;
 3484              		.loc 1 317 9 view .LVU1098
 3485              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3486              		.loc 1 317 31 is_stmt 0 view .LVU1099
 3487 15a0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3487      06
 3488 15a5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3488      3407
 318:sieve_extend.c ****         copy_word++;
 3489              		.loc 1 318 9 is_stmt 1 view .LVU1100
 319:sieve_extend.c ****     }
 3490              		.loc 1 319 9 view .LVU1101
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3491              		.loc 1 316 10 view .LVU1102
 3492 15ab 4883C020 		add	rax, 32	# ivtmp.261,
 3493              	.L288:
 317:sieve_extend.c ****         source_word++;
 3494              		.loc 1 317 9 view .LVU1103
 3495              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3496              		.loc 1 317 31 is_stmt 0 view .LVU1104
 3497 15af C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3497      06
 3498 15b4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3498      2C07
 318:sieve_extend.c ****         copy_word++;
 3499              		.loc 1 318 9 is_stmt 1 view .LVU1105
 319:sieve_extend.c ****     }
 3500              		.loc 1 319 9 view .LVU1106
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3501              		.loc 1 316 10 view .LVU1107
 3502 15ba 4883C020 		add	rax, 32	# ivtmp.261,
 3503              	.L287:
 317:sieve_extend.c ****         source_word++;
 3504              		.loc 1 317 9 view .LVU1108
 3505              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3506              		.loc 1 317 31 is_stmt 0 view .LVU1109
 3507 15be C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3507      06
 3508 15c3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3508      2407
 318:sieve_extend.c ****         copy_word++;
 3509              		.loc 1 318 9 is_stmt 1 view .LVU1110
 319:sieve_extend.c ****     }
 3510              		.loc 1 319 9 view .LVU1111
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccFOD2R4.s 			page 98


 3511              		.loc 1 316 10 view .LVU1112
 3512 15c9 4883C020 		add	rax, 32	# ivtmp.261,
 3513              	.L286:
 317:sieve_extend.c ****         source_word++;
 3514              		.loc 1 317 9 view .LVU1113
 3515              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3516              		.loc 1 317 31 is_stmt 0 view .LVU1114
 3517 15cd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3517      06
 3518 15d2 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3518      0407
 318:sieve_extend.c ****         copy_word++;
 3519              		.loc 1 318 9 is_stmt 1 view .LVU1115
 319:sieve_extend.c ****     }
 3520              		.loc 1 319 9 view .LVU1116
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3521              		.loc 1 316 10 view .LVU1117
 3522 15d8 4883C020 		add	rax, 32	# ivtmp.261,
 3523              	.L285:
 317:sieve_extend.c ****         source_word++;
 3524              		.loc 1 317 9 view .LVU1118
 3525              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3526              		.loc 1 317 31 is_stmt 0 view .LVU1119
 3527 15dc C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3527      06
 3528 15e1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3528      1407
 318:sieve_extend.c ****         copy_word++;
 3529              		.loc 1 318 9 is_stmt 1 view .LVU1120
 319:sieve_extend.c ****     }
 3530              		.loc 1 319 9 view .LVU1121
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3531              		.loc 1 316 10 view .LVU1122
 3532 15e7 4883C020 		add	rax, 32	# ivtmp.261,
 3533 15eb 4C39C0   		cmp	rax, r8	# ivtmp.261, _182
 3534 15ee 0F848D00 		je	.L322	#,
 3534      0000
 3535              	.L221:
 317:sieve_extend.c ****         source_word++;
 3536              		.loc 1 317 9 view .LVU1123
 3537              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3538              		.loc 1 317 31 is_stmt 0 view .LVU1124
 3539 15f4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.245_119, index: ivtmp.261_180, offse
 3539      06
 3540 15f9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B], 
 3540      1C07
 318:sieve_extend.c ****         copy_word++;
 3541              		.loc 1 318 9 is_stmt 1 view .LVU1125
 319:sieve_extend.c ****     }
 3542              		.loc 1 319 9 view .LVU1126
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3543              		.loc 1 316 10 view .LVU1127
 317:sieve_extend.c ****         source_word++;
 3544              		.loc 1 317 9 view .LVU1128
GAS LISTING /tmp/ccFOD2R4.s 			page 99


 3545              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3546              		.loc 1 317 31 is_stmt 0 view .LVU1129
 3547 15ff C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.245_119, index: ivtmp.261_180, off
 3547      0620
 3548 1605 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B]
 3548      440720
 318:sieve_extend.c ****         copy_word++;
 3549              		.loc 1 318 9 is_stmt 1 view .LVU1130
 319:sieve_extend.c ****     }
 3550              		.loc 1 319 9 view .LVU1131
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3551              		.loc 1 316 10 view .LVU1132
 317:sieve_extend.c ****         source_word++;
 3552              		.loc 1 317 9 view .LVU1133
 3553              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3554              		.loc 1 317 31 is_stmt 0 view .LVU1134
 3555 160c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.245_119, index: ivtmp.261_180, off
 3555      0640
 3556 1612 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B]
 3556      4C0740
 318:sieve_extend.c ****         copy_word++;
 3557              		.loc 1 318 9 is_stmt 1 view .LVU1135
 319:sieve_extend.c ****     }
 3558              		.loc 1 319 9 view .LVU1136
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3559              		.loc 1 316 10 view .LVU1137
 317:sieve_extend.c ****         source_word++;
 3560              		.loc 1 317 9 view .LVU1138
 3561              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3562              		.loc 1 317 31 is_stmt 0 view .LVU1139
 3563 1619 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.245_119, index: ivtmp.261_180, of
 3563      0660
 3564 161f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0B
 3564      540760
 318:sieve_extend.c ****         copy_word++;
 3565              		.loc 1 318 9 is_stmt 1 view .LVU1140
 319:sieve_extend.c ****     }
 3566              		.loc 1 319 9 view .LVU1141
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3567              		.loc 1 316 10 view .LVU1142
 317:sieve_extend.c ****         source_word++;
 3568              		.loc 1 317 9 view .LVU1143
 3569              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3570              		.loc 1 317 31 is_stmt 0 view .LVU1144
 3571 1626 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.245_119, index: ivtmp.261_180, o
 3571      06800000 
 3571      00
 3572 162f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0
 3572      9C078000 
 3572      0000
 318:sieve_extend.c ****         copy_word++;
 3573              		.loc 1 318 9 is_stmt 1 view .LVU1145
 319:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 100


 3574              		.loc 1 319 9 view .LVU1146
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3575              		.loc 1 316 10 view .LVU1147
 317:sieve_extend.c ****         source_word++;
 3576              		.loc 1 317 9 view .LVU1148
 3577              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3578              		.loc 1 317 31 is_stmt 0 view .LVU1149
 3579 1639 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.245_119, index: ivtmp.261_180, o
 3579      06A00000 
 3579      00
 3580 1642 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0
 3580      A407A000 
 3580      0000
 318:sieve_extend.c ****         copy_word++;
 3581              		.loc 1 318 9 is_stmt 1 view .LVU1150
 319:sieve_extend.c ****     }
 3582              		.loc 1 319 9 view .LVU1151
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3583              		.loc 1 316 10 view .LVU1152
 317:sieve_extend.c ****         source_word++;
 3584              		.loc 1 317 9 view .LVU1153
 3585              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3586              		.loc 1 317 31 is_stmt 0 view .LVU1154
 3587 164c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.245_119, index: ivtmp.261_180, o
 3587      06C00000 
 3587      00
 3588 1655 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0
 3588      AC07C000 
 3588      0000
 318:sieve_extend.c ****         copy_word++;
 3589              		.loc 1 318 9 is_stmt 1 view .LVU1155
 319:sieve_extend.c ****     }
 3590              		.loc 1 319 9 view .LVU1156
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3591              		.loc 1 316 10 view .LVU1157
 317:sieve_extend.c ****         source_word++;
 3592              		.loc 1 317 9 view .LVU1158
 3593              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3594              		.loc 1 317 31 is_stmt 0 view .LVU1159
 3595 165f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.245_119, index: ivtmp.261_180, o
 3595      06E00000 
 3595      00
 3596 1668 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.248_125, index: ivtmp.261_180, offset: 0
 3596      B407E000 
 3596      0000
 318:sieve_extend.c ****         copy_word++;
 3597              		.loc 1 318 9 is_stmt 1 view .LVU1160
 319:sieve_extend.c ****     }
 3598              		.loc 1 319 9 view .LVU1161
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3599              		.loc 1 316 10 view .LVU1162
 3600 1672 48050001 		add	rax, 256	# ivtmp.261,
 3600      0000
 3601 1678 4C39C0   		cmp	rax, r8	# ivtmp.261, _182
GAS LISTING /tmp/ccFOD2R4.s 			page 101


 3602 167b 0F8573FF 		jne	.L221	#,
 3602      FFFF
 3603              	.L322:
 3604 1681 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.241, niters.239
 3605 1684 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.241,
 3606 1688 4D01CC   		add	r12, r9	# tmp.242, niters_vector_mult_vf.241
 3607 168b 4D01CE   		add	r14, r9	# tmp.243, niters_vector_mult_vf.241
 3608 168e 4D39CB   		cmp	r11, r9	# niters.239, niters_vector_mult_vf.241
 3609 1691 7455     		je	.L325	#,
 3610              	.LVL151:
 317:sieve_extend.c ****         source_word++;
 3611              		.loc 1 317 9 view .LVU1163
 3612              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3613              		.loc 1 317 43 is_stmt 0 view .LVU1164
 3614 1693 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 3614      00
 3615              	# sieve_extend.c:319:         copy_word++;
 319:sieve_extend.c ****     }
 3616              		.loc 1 319 18 view .LVU1165
 3617 1698 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 3618              	# sieve_extend.c:318:         source_word++;
 318:sieve_extend.c ****         copy_word++;
 3619              		.loc 1 318 20 view .LVU1166
 3620 169c 4983C401 		add	r12, 1	# source_word,
 3621              	.LVL152:
 3622              	# sieve_extend.c:316:    while (copy_word < destination_stop_word) {
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3623              		.loc 1 316 10 view .LVU1167
 3624 16a0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 3625              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3626              		.loc 1 317 31 view .LVU1168
 3627 16a3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 3627      00
 318:sieve_extend.c ****         copy_word++;
 3628              		.loc 1 318 9 is_stmt 1 view .LVU1169
 3629              	.LVL153:
 319:sieve_extend.c ****     }
 3630              		.loc 1 319 9 view .LVU1170
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3631              		.loc 1 316 10 view .LVU1171
 3632 16a8 763E     		jbe	.L325	#,
 317:sieve_extend.c ****         source_word++;
 3633              		.loc 1 317 9 view .LVU1172
 3634              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3635              		.loc 1 317 43 is_stmt 0 view .LVU1173
 3636 16aa 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 3636      00000000 
 3637              	# sieve_extend.c:319:         copy_word++;
 319:sieve_extend.c ****     }
 3638              		.loc 1 319 18 view .LVU1174
 3639 16b2 4983C602 		add	r14, 2	# copy_word,
 3640              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3641              		.loc 1 317 43 view .LVU1175
GAS LISTING /tmp/ccFOD2R4.s 			page 102


 3642 16b6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 3642      00
 3643              	# sieve_extend.c:316:    while (copy_word < destination_stop_word) {
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3644              		.loc 1 316 10 view .LVU1176
 3645 16bb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 3646              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3647              		.loc 1 317 31 view .LVU1177
 3648 16be 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 3648      00
 318:sieve_extend.c ****         copy_word++;
 3649              		.loc 1 318 9 is_stmt 1 view .LVU1178
 319:sieve_extend.c ****     }
 3650              		.loc 1 319 9 view .LVU1179
 3651              	.LVL154:
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3652              		.loc 1 316 10 view .LVU1180
 3653 16c3 7623     		jbe	.L325	#,
 317:sieve_extend.c ****         source_word++;
 3654              		.loc 1 317 9 view .LVU1181
 3655              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3656              		.loc 1 317 43 is_stmt 0 view .LVU1182
 3657 16c5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 3657      08
 3658              	.LVL155:
 3659              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3660              		.loc 1 317 31 view .LVU1183
 3661 16ca 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 3661      00
 318:sieve_extend.c ****         copy_word++;
 3662              		.loc 1 318 9 is_stmt 1 view .LVU1184
 319:sieve_extend.c ****     }
 3663              		.loc 1 319 9 view .LVU1185
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3664              		.loc 1 316 10 view .LVU1186
 3665 16cf C5F877   		vzeroupper
 3666              	.LVL156:
 3667              	.L326:
 3668              	# sieve_extend.c:322: }
 322:sieve_extend.c **** 
 3669              		.loc 1 322 1 is_stmt 0 view .LVU1187
 3670 16d2 488D65D8 		lea	rsp, -40[rbp]	#,
 3671 16d6 5B       		pop	rbx	#
 3672 16d7 415C     		pop	r12	#
 3673 16d9 415D     		pop	r13	#
 3674 16db 415E     		pop	r14	#
 3675 16dd 415F     		pop	r15	#
 3676 16df 5D       		pop	rbp	#
 3677              		.cfi_remember_state
 3678              		.cfi_def_cfa 7, 8
 3679 16e0 C3       		ret	
 3680              	.LVL157:
 3681              		.p2align 4,,7
 3682 16e1 0F1F8000 		.p2align 3
GAS LISTING /tmp/ccFOD2R4.s 			page 103


 3682      000000
 3683              	.L325:
 3684              		.cfi_restore_state
 322:sieve_extend.c **** 
 3685              		.loc 1 322 1 view .LVU1188
 3686 16e8 C5F877   		vzeroupper
 3687 16eb 488D65D8 		lea	rsp, -40[rbp]	#,
 3688 16ef 5B       		pop	rbx	#
 3689              	.LVL158:
 322:sieve_extend.c **** 
 3690              		.loc 1 322 1 view .LVU1189
 3691 16f0 415C     		pop	r12	#
 3692 16f2 415D     		pop	r13	#
 3693              	.LVL159:
 322:sieve_extend.c **** 
 3694              		.loc 1 322 1 view .LVU1190
 3695 16f4 415E     		pop	r14	#
 3696 16f6 415F     		pop	r15	#
 3697 16f8 5D       		pop	rbp	#
 3698              		.cfi_remember_state
 3699              		.cfi_def_cfa 7, 8
 3700 16f9 C3       		ret	
 3701              	.LVL160:
 3702 16fa 660F1F44 		.p2align 4,,7
 3702      0000
 3703              		.p2align 3
 3704              	.L218:
 3705              		.cfi_restore_state
 3706              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3707              		.loc 1 317 43 view .LVU1191
 3708 1700 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 3708      08
 3709 1705 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.256,
 3709      00
 3710 170a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 3710      00
 3711              	.LVL161:
 317:sieve_extend.c ****         source_word++;
 3712              		.loc 1 317 43 view .LVU1192
 3713 170f 4C89EE   		mov	rsi, r13	# tmp221, _179
 3714 1712 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.256
 3715 1715 4829C7   		sub	rdi, rax	# source_word, ivtmp.270
 3716 1718 4883EE08 		sub	rsi, 8	# tmp222,
 3717 171c 48C1EE03 		shr	rsi, 3	# tmp220,
 3718 1720 4883C601 		add	rsi, 1	# tmp223,
 3719 1724 83E607   		and	esi, 7	# tmp224,
 3720 1727 0F848100 		je	.L223	#,
 3720      0000
 3721 172d 4883FE01 		cmp	rsi, 1	# tmp224,
 3722 1731 7466     		je	.L291	#,
 3723 1733 4883FE02 		cmp	rsi, 2	# tmp224,
 3724 1737 7454     		je	.L292	#,
 3725 1739 4883FE03 		cmp	rsi, 3	# tmp224,
 3726 173d 7442     		je	.L293	#,
 3727 173f 4883FE04 		cmp	rsi, 4	# tmp224,
 3728 1743 7430     		je	.L294	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 104


 3729 1745 4883FE05 		cmp	rsi, 5	# tmp224,
 3730 1749 741E     		je	.L295	#,
 3731 174b 4883FE06 		cmp	rsi, 6	# tmp224,
 3732 174f 740C     		je	.L296	#,
 3733              	.LVL162:
 317:sieve_extend.c ****         source_word++;
 3734              		.loc 1 317 9 is_stmt 1 view .LVU1193
 3735              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3736              		.loc 1 317 43 is_stmt 0 view .LVU1194
 3737 1751 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3738 1755 4983C608 		add	r14, 8	# ivtmp.256,
 3739              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3740              		.loc 1 317 31 view .LVU1195
 3741 1759 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3742              		.loc 1 318 9 is_stmt 1 view .LVU1196
 319:sieve_extend.c ****     }
 3743              		.loc 1 319 9 view .LVU1197
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3744              		.loc 1 316 10 view .LVU1198
 3745              	.L296:
 317:sieve_extend.c ****         source_word++;
 3746              		.loc 1 317 9 view .LVU1199
 3747              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3748              		.loc 1 317 43 is_stmt 0 view .LVU1200
 3749 175d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3750 1761 4983C608 		add	r14, 8	# ivtmp.256,
 3751              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3752              		.loc 1 317 31 view .LVU1201
 3753 1765 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3754              		.loc 1 318 9 is_stmt 1 view .LVU1202
 319:sieve_extend.c ****     }
 3755              		.loc 1 319 9 view .LVU1203
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3756              		.loc 1 316 10 view .LVU1204
 3757              	.L295:
 317:sieve_extend.c ****         source_word++;
 3758              		.loc 1 317 9 view .LVU1205
 3759              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3760              		.loc 1 317 43 is_stmt 0 view .LVU1206
 3761 1769 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3762 176d 4983C608 		add	r14, 8	# ivtmp.256,
 3763              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3764              		.loc 1 317 31 view .LVU1207
 3765 1771 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3766              		.loc 1 318 9 is_stmt 1 view .LVU1208
 319:sieve_extend.c ****     }
 3767              		.loc 1 319 9 view .LVU1209
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccFOD2R4.s 			page 105


 3768              		.loc 1 316 10 view .LVU1210
 3769              	.L294:
 317:sieve_extend.c ****         source_word++;
 3770              		.loc 1 317 9 view .LVU1211
 3771              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3772              		.loc 1 317 43 is_stmt 0 view .LVU1212
 3773 1775 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3774 1779 4983C608 		add	r14, 8	# ivtmp.256,
 3775              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3776              		.loc 1 317 31 view .LVU1213
 3777 177d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3778              		.loc 1 318 9 is_stmt 1 view .LVU1214
 319:sieve_extend.c ****     }
 3779              		.loc 1 319 9 view .LVU1215
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3780              		.loc 1 316 10 view .LVU1216
 3781              	.L293:
 317:sieve_extend.c ****         source_word++;
 3782              		.loc 1 317 9 view .LVU1217
 3783              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3784              		.loc 1 317 43 is_stmt 0 view .LVU1218
 3785 1781 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3786 1785 4983C608 		add	r14, 8	# ivtmp.256,
 3787              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3788              		.loc 1 317 31 view .LVU1219
 3789 1789 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3790              		.loc 1 318 9 is_stmt 1 view .LVU1220
 319:sieve_extend.c ****     }
 3791              		.loc 1 319 9 view .LVU1221
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3792              		.loc 1 316 10 view .LVU1222
 3793              	.L292:
 317:sieve_extend.c ****         source_word++;
 3794              		.loc 1 317 9 view .LVU1223
 3795              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3796              		.loc 1 317 43 is_stmt 0 view .LVU1224
 3797 178d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3798 1791 4983C608 		add	r14, 8	# ivtmp.256,
 3799              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3800              		.loc 1 317 31 view .LVU1225
 3801 1795 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3802              		.loc 1 318 9 is_stmt 1 view .LVU1226
 319:sieve_extend.c ****     }
 3803              		.loc 1 319 9 view .LVU1227
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3804              		.loc 1 316 10 view .LVU1228
 3805              	.L291:
 317:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccFOD2R4.s 			page 106


 3806              		.loc 1 317 9 view .LVU1229
 3807              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3808              		.loc 1 317 43 is_stmt 0 view .LVU1230
 3809 1799 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3810 179d 4983C608 		add	r14, 8	# ivtmp.256,
 3811              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3812              		.loc 1 317 31 view .LVU1231
 3813 17a1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3814              		.loc 1 318 9 is_stmt 1 view .LVU1232
 319:sieve_extend.c ****     }
 3815              		.loc 1 319 9 view .LVU1233
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3816              		.loc 1 316 10 view .LVU1234
 3817 17a5 4D39EE   		cmp	r14, r13	# ivtmp.256, _179
 3818 17a8 0F8424FF 		je	.L326	#,
 3818      FFFF
 3819              	.LVL163:
 3820              	.L223:
 317:sieve_extend.c ****         source_word++;
 3821              		.loc 1 317 9 view .LVU1235
 3822              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3823              		.loc 1 317 43 is_stmt 0 view .LVU1236
 3824 17ae 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3825              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3826              		.loc 1 317 31 view .LVU1237
 3827 17b2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3828              		.loc 1 318 9 is_stmt 1 view .LVU1238
 319:sieve_extend.c ****     }
 3829              		.loc 1 319 9 view .LVU1239
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3830              		.loc 1 316 10 view .LVU1240
 317:sieve_extend.c ****         source_word++;
 3831              		.loc 1 317 9 view .LVU1241
 3832              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3833              		.loc 1 317 43 is_stmt 0 view .LVU1242
 3834 17b5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3834      08
 3835              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3836              		.loc 1 317 31 view .LVU1243
 3837 17ba 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3838              		.loc 1 318 9 is_stmt 1 view .LVU1244
 319:sieve_extend.c ****     }
 3839              		.loc 1 319 9 view .LVU1245
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3840              		.loc 1 316 10 view .LVU1246
 317:sieve_extend.c ****         source_word++;
 3841              		.loc 1 317 9 view .LVU1247
 3842              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccFOD2R4.s 			page 107


 317:sieve_extend.c ****         source_word++;
 3843              		.loc 1 317 43 is_stmt 0 view .LVU1248
 3844 17be 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3844      10
 3845              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3846              		.loc 1 317 31 view .LVU1249
 3847 17c3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3848              		.loc 1 318 9 is_stmt 1 view .LVU1250
 319:sieve_extend.c ****     }
 3849              		.loc 1 319 9 view .LVU1251
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3850              		.loc 1 316 10 view .LVU1252
 317:sieve_extend.c ****         source_word++;
 3851              		.loc 1 317 9 view .LVU1253
 3852              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3853              		.loc 1 317 43 is_stmt 0 view .LVU1254
 3854 17c7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3854      18
 3855              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3856              		.loc 1 317 31 view .LVU1255
 3857 17cc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3858              		.loc 1 318 9 is_stmt 1 view .LVU1256
 319:sieve_extend.c ****     }
 3859              		.loc 1 319 9 view .LVU1257
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3860              		.loc 1 316 10 view .LVU1258
 317:sieve_extend.c ****         source_word++;
 3861              		.loc 1 317 9 view .LVU1259
 3862              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3863              		.loc 1 317 43 is_stmt 0 view .LVU1260
 3864 17d0 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3864      20
 3865              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3866              		.loc 1 317 31 view .LVU1261
 3867 17d5 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3868              		.loc 1 318 9 is_stmt 1 view .LVU1262
 319:sieve_extend.c ****     }
 3869              		.loc 1 319 9 view .LVU1263
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3870              		.loc 1 316 10 view .LVU1264
 317:sieve_extend.c ****         source_word++;
 3871              		.loc 1 317 9 view .LVU1265
 3872              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3873              		.loc 1 317 43 is_stmt 0 view .LVU1266
 3874 17d9 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3874      28
 3875              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccFOD2R4.s 			page 108


 3876              		.loc 1 317 31 view .LVU1267
 3877 17de 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3878              		.loc 1 318 9 is_stmt 1 view .LVU1268
 319:sieve_extend.c ****     }
 3879              		.loc 1 319 9 view .LVU1269
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3880              		.loc 1 316 10 view .LVU1270
 317:sieve_extend.c ****         source_word++;
 3881              		.loc 1 317 9 view .LVU1271
 3882              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3883              		.loc 1 317 43 is_stmt 0 view .LVU1272
 3884 17e2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3884      30
 3885              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3886              		.loc 1 317 31 view .LVU1273
 3887 17e7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3888              		.loc 1 318 9 is_stmt 1 view .LVU1274
 319:sieve_extend.c ****     }
 3889              		.loc 1 319 9 view .LVU1275
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3890              		.loc 1 316 10 view .LVU1276
 317:sieve_extend.c ****         source_word++;
 3891              		.loc 1 317 9 view .LVU1277
 3892              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3893              		.loc 1 317 43 is_stmt 0 view .LVU1278
 3894 17eb 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 3894      38
 3895 17f0 4983C640 		add	r14, 64	# ivtmp.256,
 3896              	# sieve_extend.c:317:         bitstorage[copy_word] = bitstorage[source_word];
 317:sieve_extend.c ****         source_word++;
 3897              		.loc 1 317 31 view .LVU1279
 3898 17f4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 318:sieve_extend.c ****         copy_word++;
 3899              		.loc 1 318 9 is_stmt 1 view .LVU1280
 319:sieve_extend.c ****     }
 3900              		.loc 1 319 9 view .LVU1281
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3901              		.loc 1 316 10 view .LVU1282
 3902 17f8 4D39EE   		cmp	r14, r13	# ivtmp.256, _179
 3903 17fb 75B1     		jne	.L223	#,
 3904 17fd E9D0FEFF 		jmp	.L326	#
 3904      FF
 3905              	.LVL164:
 3906              		.p2align 4,,7
 3907 1802 660F1F44 		.p2align 3
 3907      0000
 3908              	.L225:
 3909              	# sieve_extend.c:306:     counter_t source_word = wordindex(source_start);
 306:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 3910              		.loc 1 306 15 is_stmt 0 view .LVU1283
 3911 1808 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 3911      08
GAS LISTING /tmp/ccFOD2R4.s 			page 109


 3912              	# sieve_extend.c:316:    while (copy_word < destination_stop_word) {
 316:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 3913              		.loc 1 316 10 view .LVU1284
 3914 180d 4989C6   		mov	r14, rax	# copy_word, ivtmp.270
 3915 1810 E90AFDFF 		jmp	.L219	#
 3915      FF
 3916              		.cfi_endproc
 3917              	.LFE63:
 3919 1815 66662E0F 		.p2align 4
 3919      1F840000 
 3919      000000
 3921              	continuePattern_shiftleft:
 3922              	.LVL165:
 3923              	.LFB66:
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3924              		.loc 1 373 148 is_stmt 1 view -0
 3925              		.cfi_startproc
 374:sieve_extend.c **** 
 3926              		.loc 1 374 5 view .LVU1286
 376:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3927              		.loc 1 376 5 view .LVU1287
 3928              	# sieve_extend.c:373: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3929              		.loc 1 373 148 is_stmt 0 view .LVU1288
 3930 1820 55       		push	rbp	#
 3931              		.cfi_def_cfa_offset 16
 3932              		.cfi_offset 6, -16
 3933              	# sieve_extend.c:376:     const counter_t destination_stop_word = wordindex(destination_stop);
 376:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3934              		.loc 1 376 21 view .LVU1289
 3935 1821 48C1E906 		shr	rcx, 6	# tmp1104,
 3936              	.LVL166:
 3937              	# sieve_extend.c:377:     const counter_t copy_start = source_start + size;
 377:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3938              		.loc 1 377 21 view .LVU1290
 3939 1825 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 3940              	# sieve_extend.c:373: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3941              		.loc 1 373 148 view .LVU1291
 3942 1829 4889E5   		mov	rbp, rsp	#,
 3943              		.cfi_def_cfa_register 6
 3944 182c 4989D2   		mov	r10, rdx	# size, tmp1103
 3945 182f 4157     		push	r15	#
 3946              	# sieve_extend.c:381:     register counter_t copy_word = wordindex(copy_start);
 381:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 3947              		.loc 1 381 24 view .LVU1292
 3948 1831 4D89C3   		mov	r11, r8	# copy_word, copy_start
 3949              	# sieve_extend.c:373: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3950              		.loc 1 373 148 view .LVU1293
 3951 1834 4156     		push	r14	#
 3952              	# sieve_extend.c:381:     register counter_t copy_word = wordindex(copy_start);
 381:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 3953              		.loc 1 381 24 view .LVU1294
 3954 1836 49C1EB06 		shr	r11, 6	# copy_word,
 3955              		.cfi_offset 15, -24
 3956              		.cfi_offset 14, -32
GAS LISTING /tmp/ccFOD2R4.s 			page 110


 3957              	# sieve_extend.c:376:     const counter_t destination_stop_word = wordindex(destination_stop);
 376:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3958              		.loc 1 376 21 view .LVU1295
 3959 183a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 3960              	# sieve_extend.c:373: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3961              		.loc 1 373 148 view .LVU1296
 3962 183d 4155     		push	r13	#
 3963 183f 4154     		push	r12	#
 3964 1841 53       		push	rbx	#
 3965              		.cfi_offset 13, -40
 3966              		.cfi_offset 12, -48
 3967              		.cfi_offset 3, -56
 3968 1842 4889FB   		mov	rbx, rdi	# bitstorage, tmp1101
 3969 1845 4883E4E0 		and	rsp, -32	#,
 3970 1849 488D6424 		lea	rsp, -96[rsp]	#,
 3970      A0
 3971              	# sieve_extend.c:376:     const counter_t destination_stop_word = wordindex(destination_stop);
 376:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3972              		.loc 1 376 21 view .LVU1297
 3973 184e 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 3973      58
 3974              	.LVL167:
 377:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3975              		.loc 1 377 5 is_stmt 1 view .LVU1298
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3976              		.loc 1 378 5 view .LVU1299
 3977              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3978              		.loc 1 378 39 is_stmt 0 view .LVU1300
 3979 1853 4889F1   		mov	rcx, rsi	# _4, source_start
 3980              	.LVL168:
 3981              	# sieve_extend.c:380:     register counter_t source_word = wordindex(source_start);
 380:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3982              		.loc 1 380 24 view .LVU1301
 3983 1856 48C1EE06 		shr	rsi, 6	# source_start,
 3984              	.LVL169:
 3985              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3986              		.loc 1 378 39 view .LVU1302
 3987 185a 83E13F   		and	ecx, 63	# _4,
 3988              	.LVL170:
 3989              	# sieve_extend.c:373: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 373:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3990              		.loc 1 373 148 view .LVU1303
 3991 185d 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 3991      18
 3992              	# sieve_extend.c:380:     register counter_t source_word = wordindex(source_start);
 380:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3993              		.loc 1 380 24 view .LVU1304
 3994 1862 4989F1   		mov	r9, rsi	# source_word, source_start
 3995              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3996              		.loc 1 378 69 view .LVU1305
 3997 1865 4C89C2   		mov	rdx, r8	# _5, copy_start
 3998              	.LVL171:
 3999              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
GAS LISTING /tmp/ccFOD2R4.s 			page 111


 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4000              		.loc 1 378 31 view .LVU1306
 4001 1868 4989CF   		mov	r15, rcx	# shift, _4
 4002              	# sieve_extend.c:383:                              | (bitstorage[source_word+1] << shift_flipped))
 383:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4003              		.loc 1 383 43 view .LVU1307
 4004 186b 4D8D6101 		lea	r12, 1[r9]	# tmp.297,
 4005              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4006              		.loc 1 378 69 view .LVU1308
 4007 186f 83E23F   		and	edx, 63	# _5,
 4008              	.LVL172:
 379:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 4009              		.loc 1 379 5 is_stmt 1 view .LVU1309
 380:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 4010              		.loc 1 380 5 view .LVU1310
 381:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 4011              		.loc 1 381 5 view .LVU1311
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4012              		.loc 1 382 5 view .LVU1312
 4013              	# sieve_extend.c:378:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 378:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4014              		.loc 1 378 31 is_stmt 0 view .LVU1313
 4015 1872 4929D7   		sub	r15, rdx	# shift, _5
 4016              	.LVL173:
 4017              	# sieve_extend.c:389:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 389:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 4018              		.loc 1 389 41 view .LVU1314
 4019 1875 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
 4020              	.LVL174:
 4021              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4022              		.loc 1 382 27 view .LVU1315
 4023 1879 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 4023      00000000 
 4024              	# sieve_extend.c:379:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 379:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 4025              		.loc 1 379 31 view .LVU1316
 4026 1881 4829CA   		sub	rdx, rcx	# tmp550, _4
 4027              	.LVL175:
 4028              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4029              		.loc 1 382 42 view .LVU1317
 4030 1884 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 4030      00000000 
 4031              	# sieve_extend.c:379:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 379:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 4032              		.loc 1 379 31 view .LVU1318
 4033 188c 4883C240 		add	rdx, 64	# shift_flipped,
 4034              	.LVL176:
 4035              	# sieve_extend.c:384:                              & ~chopmask(copy_start); // because this is the 
 384:sieve_extend.c **** 
 4036              		.loc 1 384 33 view .LVU1319
 4037 1890 41F7D0   		not	r8d	# tmp557
 4038              	.LVL177:
 4039              	# sieve_extend.c:383:                              | (bitstorage[source_word+1] << shift_flipped))
 383:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
GAS LISTING /tmp/ccFOD2R4.s 			page 112


 4040              		.loc 1 383 59 view .LVU1320
 4041 1893 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 4041      6C0708
 4042              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4043              		.loc 1 382 56 view .LVU1321
 4044 189a 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 4045              	.LVL178:
 4046              	# sieve_extend.c:384:                              & ~chopmask(copy_start); // because this is the 
 384:sieve_extend.c **** 
 4047              		.loc 1 384 33 view .LVU1322
 4048 189e 48C7C1FF 		mov	rcx, -1	# tmp560,
 4048      FFFFFF
 4049              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4050              		.loc 1 382 56 view .LVU1323
 4051 18a5 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 4051      CF
 4052              	# sieve_extend.c:384:                              & ~chopmask(copy_start); // because this is the 
 384:sieve_extend.c **** 
 4053              		.loc 1 384 33 view .LVU1324
 4054 18aa C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 4054      C1
 4055              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4056              		.loc 1 382 56 view .LVU1325
 4057 18af 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 4057      48
 4058              	# sieve_extend.c:383:                              | (bitstorage[source_word+1] << shift_flipped))
 383:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4059              		.loc 1 383 30 view .LVU1326
 4060 18b4 4D09E9   		or	r9, r13	# tmp556, tmp552
 4061              	# sieve_extend.c:384:                              & ~chopmask(copy_start); // because this is the 
 384:sieve_extend.c **** 
 4062              		.loc 1 384 30 view .LVU1327
 4063 18b7 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 4063      E9
 4064              	# sieve_extend.c:382:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 382:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 4065              		.loc 1 382 27 view .LVU1328
 4066 18bc 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 386:sieve_extend.c ****     source_word++;
 4067              		.loc 1 386 5 is_stmt 1 view .LVU1329
 4068              	# sieve_extend.c:389:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 389:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 4069              		.loc 1 389 21 is_stmt 0 view .LVU1330
 4070 18c0 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 4071              	.LBB330:
 4072              	.LBB331:
 4073              	# sieve_extend.c:357:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 357:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4074              		.loc 1 357 91 view .LVU1331
 4075 18c3 41B90200 		mov	r9d, 2	# tmp564,
 4075      0000
 4076              	.LBE331:
 4077              	.LBE330:
 4078              	# sieve_extend.c:383:                              | (bitstorage[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccFOD2R4.s 			page 113


 383:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 4079              		.loc 1 383 59 view .LVU1332
 4080 18c9 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 4081              	# sieve_extend.c:386:     copy_word++;
 386:sieve_extend.c ****     source_word++;
 4082              		.loc 1 386 14 view .LVU1333
 4083 18cd 4D8D6B01 		lea	r13, 1[r11]	# tmp.298,
 4084              	.LVL179:
 387:sieve_extend.c **** 
 4085              		.loc 1 387 5 is_stmt 1 view .LVU1334
 389:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 4086              		.loc 1 389 5 view .LVU1335
 4087              	# sieve_extend.c:389:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 389:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 4088              		.loc 1 389 21 is_stmt 0 view .LVU1336
 4089 18d1 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 4090 18d5 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 4090      50
 4091              	.LVL180:
 390:sieve_extend.c ****     source_word += distance;
 4092              		.loc 1 390 5 is_stmt 1 view .LVU1337
 4093              	.LBB356:
 4094              	.LBI330:
 356:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 4095              		.loc 1 356 25 view .LVU1338
 4096              	.LBB353:
 357:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4097              		.loc 1 357 5 view .LVU1339
 4098              	# sieve_extend.c:357:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 357:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4099              		.loc 1 357 91 is_stmt 0 view .LVU1340
 4100 18da 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 4101 18de 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 4102              	# sieve_extend.c:357:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 357:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 4103              		.loc 1 357 21 view .LVU1341
 4104 18e2 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 4105 18e6 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 4105      30
 4106              	.LVL181:
 358:sieve_extend.c ****     counter_t distance = 0;
 4107              		.loc 1 358 5 is_stmt 1 view .LVU1342
 359:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 4108              		.loc 1 359 5 view .LVU1343
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4109              		.loc 1 360 5 view .LVU1344
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4110              		.loc 1 360 11 view .LVU1345
 4111 18eb 4939FD   		cmp	r13, rdi	# tmp.298, fast_loop_stop_word
 4112 18ee 0F83A004 		jnb	.L329	#,
 4112      0000
 4113 18f4 4D29D9   		sub	r9, r11	# tmp565, copy_word
 4114 18f7 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 4115              	.LVL182:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4116              		.loc 1 360 11 is_stmt 0 view .LVU1346
 4117 18fb 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
GAS LISTING /tmp/ccFOD2R4.s 			page 114


 4118 18ff 498D49FC 		lea	rcx, -4[r9]	# _282,
 4119 1903 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 4120              	.LVL183:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4121              		.loc 1 360 11 view .LVU1347
 4122 1907 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 4123 190a 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 4123      38
 4124 190f 488D4808 		lea	rcx, 8[rax]	# tmp787,
 4125 1913 410F9EC1 		setle	r9b	#, tmp570
 4126 1917 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 4127 191a 400F9EC7 		setle	dil	#, tmp574
 4128              	.LVL184:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4129              		.loc 1 360 11 view .LVU1348
 4130 191e 4109F9   		or	r9d, edi	# tmp575, tmp574
 4131 1921 488D7850 		lea	rdi, 80[rax]	# tmp576,
 4132 1925 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 4132      28
 4133 192a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 4134 192d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 4134      27
 4135 1932 4883C010 		add	rax, 16	# tmp581,
 4136 1936 4939C6   		cmp	r14, rax	# tmp571, tmp581
 4137 1939 400F9EC7 		setle	dil	#, tmp583
 4138 193d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 4138      27
 4139 1942 4421CF   		and	edi, r9d	# tmp585, tmp575
 4140 1945 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 4140      380B
 4141 194b 410F97C1 		seta	r9b	#, tmp587
 4142 194f 4421CF   		and	edi, r9d	# tmp588, tmp587
 4143 1952 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 4144 1956 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 4145 1959 410F9EC2 		setle	r10b	#, tmp592
 4146 195d 4883C640 		add	rsi, 64	# tmp593,
 4147 1961 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 4148 1964 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 4148      27
 4149 1969 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 4149      27
 4150 196e 4421D7   		and	edi, r10d	# tmp598, tmp597
 4151 1971 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
 4151      28
 4152 1976 410F9EC2 		setle	r10b	#, tmp602
 4153 197a 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 4154 197d 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 4154      28
 4155 1982 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 4155      28
 4156 1987 4484D7   		test	dil, r10b	# tmp598, tmp607
 4157 198a 0F84E80C 		je	.L330	#,
 4157      0000
 4158 1990 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 4159 1993 410F9EC6 		setle	r14b	#, tmp612
 4160 1997 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 4161 199a 400F9EC6 		setle	sil	#, tmp616
GAS LISTING /tmp/ccFOD2R4.s 			page 115


 4162 199e 4108F6   		or	r14b, sil	# tmp612, tmp616
 4163 19a1 0F84D10C 		je	.L330	#,
 4163      0000
 4164 19a7 4801D9   		add	rcx, rbx	# vectp.319, bitstorage
 4165 19aa 4801D8   		add	rax, rbx	# vectp.323, bitstorage
 4166              	.LBB332:
 4167              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4168              		.loc 1 362 19 view .LVU1349
 4169 19ad C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B], MEM[
 4170 19b1 C4C1796E 		vmovd	xmm3, r15d	# _12,
 4170      DF
 4171 19b6 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 32B], M
 4171      20
 4172 19bb C5F96EE2 		vmovd	xmm4, edx	# _18,
 4173              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4174              		.loc 1 361 19 view .LVU1350
 4175 19bf C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.319_440, index: ivtmp.374_748, offset: 
 4176              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4177              		.loc 1 362 19 view .LVU1351
 4178 19c3 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B],
 4179 19c7 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B]
 4180              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4181              		.loc 1 361 19 view .LVU1352
 4182 19cb C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.319_440, index: ivt
 4182      20
 4183 19d0 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 4183      38
 4184              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4185              		.loc 1 362 19 view .LVU1353
 4186 19d5 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 4186      C5D8
 4187              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4188              		.loc 1 361 19 view .LVU1354
 4189 19db C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 4189      F2D8
 4190              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4191              		.loc 1 362 19 view .LVU1355
 4192 19e1 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 4192      FED8
 4193              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4194              		.loc 1 363 65 view .LVU1356
 4195 19e7 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.327, vect_perm_even_457, _18
 4196              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4197              		.loc 1 363 44 view .LVU1357
 4198 19eb C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.326, tmp627, _12
 4199              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4200              		.loc 1 365 44 view .LVU1358
GAS LISTING /tmp/ccFOD2R4.s 			page 116


 4201 19ef C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.329, vect_perm_even_457, _12
 4202              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4203              		.loc 1 365 65 view .LVU1359
 4204 19f3 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.330, tmp641, _18
 4205 19f7 49C1EE03 		shr	r14, 3	# _282,
 4206              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4207              		.loc 1 363 54 view .LVU1360
 4208 19fb C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.328, vect__98.326, vect__100.327
 4208      DA
 4209              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4210              		.loc 1 365 54 view .LVU1361
 4211 1a00 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.331, vect__110.330, vect__109.329
 4212 1a04 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 4213              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4214              		.loc 1 363 33 view .LVU1362
 4215 1a08 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.328
 4215      DD01
 4216 1a0e 4183E201 		and	r10d, 1	# tmp811,
 4217              	.LVL185:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4218              		.loc 1 361 9 is_stmt 1 view .LVU1363
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4219              		.loc 1 362 9 view .LVU1364
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4220              		.loc 1 363 9 view .LVU1365
 4221              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4222              		.loc 1 365 33 is_stmt 0 view .LVU1366
 4223 1a12 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.331
 4223      EF01
 4224 1a18 4983FE01 		cmp	r14, 1	# bnd.312,
 4225              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4226              		.loc 1 363 33 view .LVU1367
 4227 1a1c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.374_748, offset: 0B], tmp634
 4227      1C0B
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4228              		.loc 1 363 33 view .LVU1368
 4229 1a22 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
 4230 1a26 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 16B], tmp63
 4230      5C0B1001 
 4231 1a2e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 4232 1a32 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.374_748, offset: 32B], tmp638
 4232      6C0B20
 4233 1a39 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 48B], tmp63
 4233      6C0B3001 
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4234              		.loc 1 364 9 is_stmt 1 view .LVU1369
 4235              	.LVL186:
 365:sieve_extend.c ****         copy_word += 2;
 4236              		.loc 1 365 9 view .LVU1370
 4237 1a41 41B90100 		mov	r9d, 1	# ivtmp.372,
 4237      0000
GAS LISTING /tmp/ccFOD2R4.s 			page 117


 4238              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4239              		.loc 1 365 33 is_stmt 0 view .LVU1371
 4240 1a47 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.374_748, offset: 0B], tmp648
 4240      2C03
 365:sieve_extend.c ****         copy_word += 2;
 4241              		.loc 1 365 33 view .LVU1372
 4242 1a4d C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 16B], tmp648
 4242      6C031001 
 4243 1a55 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.374_748, offset: 32B], tmp652
 4243      7C0320
 4244 1a5c C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 48B], tmp652
 4244      7C033001 
 366:sieve_extend.c ****         source_word += 2;
 4245              		.loc 1 366 9 is_stmt 1 view .LVU1373
 367:sieve_extend.c ****         distance += 2;
 4246              		.loc 1 367 9 view .LVU1374
 368:sieve_extend.c ****     }
 4247              		.loc 1 368 9 view .LVU1375
 368:sieve_extend.c ****     }
 4248              		.loc 1 368 9 is_stmt 0 view .LVU1376
 4249              	.LBE332:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4250              		.loc 1 360 11 is_stmt 1 view .LVU1377
 4251 1a64 41B84000 		mov	r8d, 64	# ivtmp.374,
 4251      0000
 4252 1a6a 0F86EC01 		jbe	.L475	#,
 4252      0000
 4253 1a70 4D85D2   		test	r10, r10	# tmp811
 4254 1a73 0F84A700 		je	.L331	#,
 4254      0000
 4255              	.LBB333:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4256              		.loc 1 361 9 view .LVU1378
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4257              		.loc 1 362 9 view .LVU1379
 4258              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4259              		.loc 1 362 19 is_stmt 0 view .LVU1380
 4260 1a79 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B], ME
 4260      40
 4261 1a7e 4983FE02 		cmp	r14, 2	# bnd.312,
 4262 1a82 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 32B], 
 4262      60
 4263 1a87 41B90200 		mov	r9d, 2	# ivtmp.372,
 4263      0000
 4264              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4265              		.loc 1 361 19 view .LVU1381
 4266 1a8d C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.319_440, index: ivtmp.374_748, offset
 4266      40
 4267              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4268              		.loc 1 362 19 view .LVU1382
 4269 1a92 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B
 4269      D2
 4270 1a97 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B
GAS LISTING /tmp/ccFOD2R4.s 			page 118


 4270      C2
 4271              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4272              		.loc 1 361 19 view .LVU1383
 4273 1a9c C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.319_440, index: i
 4273      60
 4274              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4275              		.loc 1 362 19 view .LVU1384
 4276 1aa1 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
 4276      DAD8
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4277              		.loc 1 363 9 is_stmt 1 view .LVU1385
 4278              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4279              		.loc 1 361 19 is_stmt 0 view .LVU1386
 4280 1aa7 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 4280      ECD8
 4281              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4282              		.loc 1 362 19 view .LVU1387
 4283 1aad C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 4283      F8D8
 4284 1ab3 41B88000 		mov	r8d, 128	# ivtmp.374,
 4284      0000
 4285              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4286              		.loc 1 363 44 view .LVU1388
 4287 1ab9 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.326, tmp1080, _12
 4288              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4289              		.loc 1 363 65 view .LVU1389
 4290 1abd C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.327, vect_perm_even_457, _18
 4291              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4292              		.loc 1 365 44 view .LVU1390
 4293 1ac1 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.329, vect_perm_even_457, _12
 4294              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4295              		.loc 1 365 65 view .LVU1391
 4296 1ac5 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.330, tmp1091, _18
 4297              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4298              		.loc 1 363 54 view .LVU1392
 4299 1ac9 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.328, vect__98.326, vect__100.327
 4299      CF
 4300              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4301              		.loc 1 365 54 view .LVU1393
 4302 1ace C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.331, vect__110.330, vect__109.329
 4302      D2
 4303              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4304              		.loc 1 363 33 view .LVU1394
 4305 1ad3 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.328
 4305      CD01
 4306              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccFOD2R4.s 			page 119


 365:sieve_extend.c ****         copy_word += 2;
 4307              		.loc 1 365 33 view .LVU1395
 4308 1ad9 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.331
 4308      D601
 4309              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4310              		.loc 1 363 33 view .LVU1396
 4311 1adf C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.374_748, offset: 0B], tmp1084
 4311      4B40
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4312              		.loc 1 363 33 view .LVU1397
 4313 1ae5 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 16B], tmp1084
 4313      4B5001
 4314 1aec C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.374_748, offset: 32B], tmp1087
 4314      6B60
 4315 1af2 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 48B], tmp1087
 4315      6B7001
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4316              		.loc 1 364 9 is_stmt 1 view .LVU1398
 365:sieve_extend.c ****         copy_word += 2;
 4317              		.loc 1 365 9 view .LVU1399
 4318              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4319              		.loc 1 365 33 is_stmt 0 view .LVU1400
 4320 1af9 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.374_748, offset: 0B], tmp1095
 4320      40
 365:sieve_extend.c ****         copy_word += 2;
 4321              		.loc 1 365 33 view .LVU1401
 4322 1afe C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 16B], tmp1095
 4322      575001
 4323 1b05 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.374_748, offset: 32B], tmp1098
 4323      60
 4324 1b0a C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 48B], tmp1098
 4324      777001
 366:sieve_extend.c ****         source_word += 2;
 4325              		.loc 1 366 9 is_stmt 1 view .LVU1402
 367:sieve_extend.c ****         distance += 2;
 4326              		.loc 1 367 9 view .LVU1403
 368:sieve_extend.c ****     }
 4327              		.loc 1 368 9 view .LVU1404
 368:sieve_extend.c ****     }
 4328              		.loc 1 368 9 is_stmt 0 view .LVU1405
 4329              	.LBE333:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4330              		.loc 1 360 11 is_stmt 1 view .LVU1406
 4331 1b11 0F864501 		jbe	.L475	#,
 4331      0000
 4332 1b17 660F1F84 		.p2align 4
 4332      00000000 
 4332      00
 4333              		.p2align 3
 4334              	.L331:
 4335              	.LBB334:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4336              		.loc 1 361 9 view .LVU1407
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4337              		.loc 1 362 9 view .LVU1408
GAS LISTING /tmp/ccFOD2R4.s 			page 120


 4338              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4339              		.loc 1 362 19 is_stmt 0 view .LVU1409
 4340 1b20 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B], 
 4340      2400
 4341 1b26 4983C102 		add	r9, 2	# ivtmp.372,
 4342 1b2a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 32B
 4342      6C0020
 4343              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4344              		.loc 1 361 19 view .LVU1410
 4345 1b31 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.319_440, index: ivtmp.374_748, offse
 4345      0C01
 4346              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4347              		.loc 1 362 19 view .LVU1411
 4348 1b37 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0
 4348      F5
 4349 1b3c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0
 4349      DD
 4350              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4351              		.loc 1 361 19 view .LVU1412
 4352 1b41 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.319_440, index: 
 4352      440120
 4353              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4354              		.loc 1 362 19 view .LVU1413
 4355 1b48 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
 4355      FED8
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4356              		.loc 1 363 9 is_stmt 1 view .LVU1414
 4357              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4358              		.loc 1 361 19 is_stmt 0 view .LVU1415
 4359 1b4e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 4359      E8D8
 4360              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4361              		.loc 1 362 19 view .LVU1416
 4362 1b54 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 4362      F3D8
 4363              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4364              		.loc 1 363 44 view .LVU1417
 4365 1b5a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.326, tmp823, _12
 4366              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4367              		.loc 1 363 65 view .LVU1418
 4368 1b5e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.327, vect_perm_even_457, _18
 4369              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4370              		.loc 1 365 44 view .LVU1419
 4371 1b62 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.329, vect_perm_even_457, _12
 4372              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4373              		.loc 1 365 65 view .LVU1420
GAS LISTING /tmp/ccFOD2R4.s 			page 121


 4374 1b66 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.330, tmp834, _18
 4375              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4376              		.loc 1 363 54 view .LVU1421
 4377 1b6a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.328, vect__98.326, vect__100.327
 4378              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4379              		.loc 1 365 54 view .LVU1422
 4380 1b6e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.331, vect__110.330, vect__109.329
 4380      F5
 4381              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4382              		.loc 1 363 33 view .LVU1423
 4383 1b73 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.328
 4383      CA01
 4384              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4385              		.loc 1 365 33 view .LVU1424
 4386 1b79 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.331
 4386      F101
 4387              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4388              		.loc 1 363 33 view .LVU1425
 4389 1b7f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.374_748, offset: 0B], tmp827
 4389      0C03
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4390              		.loc 1 363 33 view .LVU1426
 4391 1b85 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 16B], tmp827
 4391      4C031001 
 4392 1b8d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.374_748, offset: 32B], tmp830
 4392      540320
 4393 1b94 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 48B], tmp830
 4393      54033001 
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4394              		.loc 1 364 9 is_stmt 1 view .LVU1427
 365:sieve_extend.c ****         copy_word += 2;
 4395              		.loc 1 365 9 view .LVU1428
 4396              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4397              		.loc 1 365 33 is_stmt 0 view .LVU1429
 4398 1b9c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.374_748, offset: 0B], tmp838
 4398      3407
 365:sieve_extend.c ****         copy_word += 2;
 4399              		.loc 1 365 33 view .LVU1430
 4400 1ba2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 16B], tmp83
 4400      74071001 
 4401 1baa C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.374_748, offset: 32B], tmp841
 4401      4C0720
 4402 1bb1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 48B], tmp841
 4402      4C073001 
 366:sieve_extend.c ****         source_word += 2;
 4403              		.loc 1 366 9 is_stmt 1 view .LVU1431
 367:sieve_extend.c ****         distance += 2;
 4404              		.loc 1 367 9 view .LVU1432
 368:sieve_extend.c ****     }
 4405              		.loc 1 368 9 view .LVU1433
 368:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 122


 4406              		.loc 1 368 9 is_stmt 0 view .LVU1434
 4407              	.LBE334:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4408              		.loc 1 360 11 is_stmt 1 view .LVU1435
 4409              	.LBB335:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4410              		.loc 1 361 9 view .LVU1436
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4411              		.loc 1 362 9 view .LVU1437
 4412              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4413              		.loc 1 362 19 is_stmt 0 view .LVU1438
 4414 1bb9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B],
 4414      440040
 4415 1bc0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 32B]
 4415      440060
 4416              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4417              		.loc 1 361 19 view .LVU1439
 4418 1bc7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.319_440, index: ivtmp.374_748, off
 4418      7C0140
 4419              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4420              		.loc 1 362 19 view .LVU1440
 4421 1bce C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B],
 4422 1bd2 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.323_449, index: ivtmp.374_748, offset: 0B]
 4423              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4424              		.loc 1 361 19 view .LVU1441
 4425 1bd6 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.319_440, index:
 4425      540160
 4426              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4427              		.loc 1 362 19 view .LVU1442
 4428 1bdd C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 4428      CDD8
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4429              		.loc 1 363 9 is_stmt 1 view .LVU1443
 4430              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4431              		.loc 1 361 19 is_stmt 0 view .LVU1444
 4432 1be3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 4432      D2D8
 4433              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4434              		.loc 1 362 19 view .LVU1445
 4435 1be9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 4435      CFD8
 4436              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4437              		.loc 1 363 44 view .LVU1446
 4438 1bef C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.326, tmp853, _12
 4439              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4440              		.loc 1 363 65 view .LVU1447
 4441 1bf3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.327, vect_perm_even_457, _18
 4442              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccFOD2R4.s 			page 123


 365:sieve_extend.c ****         copy_word += 2;
 4443              		.loc 1 365 44 view .LVU1448
 4444 1bf7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.329, vect_perm_even_457, _12
 4445              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4446              		.loc 1 365 65 view .LVU1449
 4447 1bfb C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.330, tmp864, _18
 4448              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4449              		.loc 1 363 54 view .LVU1450
 4450 1bff C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.328, vect__98.326, vect__100.327
 4451              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4452              		.loc 1 365 54 view .LVU1451
 4453 1c03 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.331, vect__110.330, vect__109.329
 4454              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4455              		.loc 1 363 33 view .LVU1452
 4456 1c07 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.328
 4456      E601
 4457              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4458              		.loc 1 365 33 view .LVU1453
 4459 1c0d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.331
 4459      EF01
 4460              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4461              		.loc 1 363 33 view .LVU1454
 4462 1c13 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.374_748, offset: 0B], tmp857
 4462      640340
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4463              		.loc 1 363 33 view .LVU1455
 4464 1c1a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 16B], tmp85
 4464      64035001 
 4465 1c22 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.374_748, offset: 32B], tmp860
 4465      740360
 4466 1c29 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.374_748, offset: 48B], tmp8
 4466      74037001 
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4467              		.loc 1 364 9 is_stmt 1 view .LVU1456
 365:sieve_extend.c ****         copy_word += 2;
 4468              		.loc 1 365 9 view .LVU1457
 4469              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4470              		.loc 1 365 33 is_stmt 0 view .LVU1458
 4471 1c31 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.374_748, offset: 0B], tmp868
 4471      6C0740
 365:sieve_extend.c ****         copy_word += 2;
 4472              		.loc 1 365 33 view .LVU1459
 4473 1c38 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 16B], tmp868
 4473      6C075001 
 4474 1c40 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.374_748, offset: 32B], tmp871
 4474      7C0760
 4475 1c47 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.374_748, offset: 48B], tmp87
 4475      7C077001 
 366:sieve_extend.c ****         source_word += 2;
 4476              		.loc 1 366 9 is_stmt 1 view .LVU1460
GAS LISTING /tmp/ccFOD2R4.s 			page 124


 367:sieve_extend.c ****         distance += 2;
 4477              		.loc 1 367 9 view .LVU1461
 368:sieve_extend.c ****     }
 4478              		.loc 1 368 9 view .LVU1462
 368:sieve_extend.c ****     }
 4479              		.loc 1 368 9 is_stmt 0 view .LVU1463
 4480              	.LBE335:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4481              		.loc 1 360 11 is_stmt 1 view .LVU1464
 4482 1c4f 4983E880 		sub	r8, -128	# ivtmp.374,
 4483 1c53 4D39CE   		cmp	r14, r9	# bnd.312, ivtmp.372
 4484 1c56 0F87C4FE 		ja	.L331	#,
 4484      FFFF
 4485              	.L475:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4486              		.loc 1 360 11 is_stmt 0 view .LVU1465
 4487 1c5c 49C1E603 		sal	r14, 3	# _433,
 4488 1c60 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.314,
 4489 1c64 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.315,
 4489      00
 4490              	.LVL187:
 4491              	.LBB336:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4492              		.loc 1 361 9 is_stmt 1 view .LVU1466
 4493              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4494              		.loc 1 361 39 is_stmt 0 view .LVU1467
 4495 1c69 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 4495      00000000 
 4496              	.LVL188:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4497              		.loc 1 362 9 is_stmt 1 view .LVU1468
 4498              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4499              		.loc 1 363 44 is_stmt 0 view .LVU1469
 4500 1c71 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 4500      34CB
 4501              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4502              		.loc 1 362 19 view .LVU1470
 4503 1c77 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 4503      08
 4504              	.LVL189:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4505              		.loc 1 363 9 is_stmt 1 view .LVU1471
 4506              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4507              		.loc 1 363 65 is_stmt 0 view .LVU1472
 4508 1c7c C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 4508      D7
 4509              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4510              		.loc 1 363 54 view .LVU1473
 4511 1c81 4C09D6   		or	rsi, r10	# tmp659, tmp658
 4512              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4513              		.loc 1 365 44 view .LVU1474
GAS LISTING /tmp/ccFOD2R4.s 			page 125


 4514 1c84 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 4514      FF
 4515              	.LVL190:
 4516              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4517              		.loc 1 363 54 view .LVU1475
 4518 1c89 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 4519              	.LVL191:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4520              		.loc 1 364 9 is_stmt 1 view .LVU1476
 4521              	# sieve_extend.c:364:         bitword_t source2 = bitstorage[source_word+2];
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4522              		.loc 1 364 39 is_stmt 0 view .LVU1477
 4523 1c8d 4C8D4902 		lea	r9, 2[rcx]	# _652,
 4524              	.LVL192:
 365:sieve_extend.c ****         copy_word += 2;
 4525              		.loc 1 365 9 is_stmt 1 view .LVU1478
 4526              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4527              		.loc 1 365 65 is_stmt 0 view .LVU1479
 4528 1c91 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 4528      10
 4529 1c96 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 4529      D8
 4530              	.LVL193:
 4531              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4532              		.loc 1 365 54 view .LVU1480
 4533 1c9b 4C09DF   		or	rdi, r11	# tmp663, tmp660
 4534              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 4535              		.loc 1 366 19 view .LVU1481
 4536 1c9e 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 4537              	.LVL194:
 366:sieve_extend.c ****         source_word += 2;
 4538              		.loc 1 366 19 view .LVU1482
 4539              	.LBE336:
 4540              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4541              		.loc 1 360 11 view .LVU1483
 4542 1ca2 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 4542      30
 4543              	.LBB337:
 4544              	# sieve_extend.c:368:         distance += 2;
 368:sieve_extend.c ****     }
 4545              		.loc 1 368 18 view .LVU1484
 4546 1ca7 4D8D5602 		lea	r10, 2[r14]	# distance,
 4547              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4548              		.loc 1 365 54 view .LVU1485
 4549 1cab 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 4549      08
 4550              	.LVL195:
 366:sieve_extend.c ****         source_word += 2;
 4551              		.loc 1 366 9 is_stmt 1 view .LVU1486
 367:sieve_extend.c ****         distance += 2;
 4552              		.loc 1 367 9 view .LVU1487
GAS LISTING /tmp/ccFOD2R4.s 			page 126


 368:sieve_extend.c ****     }
 4553              		.loc 1 368 9 view .LVU1488
 368:sieve_extend.c ****     }
 4554              		.loc 1 368 9 is_stmt 0 view .LVU1489
 4555              	.LBE337:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4556              		.loc 1 360 11 is_stmt 1 view .LVU1490
 4557 1cb0 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 4558 1cb3 0F86D500 		jbe	.L334	#,
 4558      0000
 4559              	.LBB338:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4560              		.loc 1 361 9 view .LVU1491
 4561              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4562              		.loc 1 363 44 is_stmt 0 view .LVU1492
 4563 1cb9 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 4564              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4565              		.loc 1 361 39 view .LVU1493
 4566 1cbd 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 4566      00000000 
 4567              	.LVL196:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4568              		.loc 1 362 9 is_stmt 1 view .LVU1494
 4569              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4570              		.loc 1 362 19 is_stmt 0 view .LVU1495
 4571 1cc5 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
 4571      08
 4572              	.LVL197:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4573              		.loc 1 363 9 is_stmt 1 view .LVU1496
 4574              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4575              		.loc 1 363 44 is_stmt 0 view .LVU1497
 4576 1cca C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 4576      F6
 4577              	.LVL198:
 4578              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4579              		.loc 1 363 65 view .LVU1498
 4580 1ccf C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
 4580      CF
 4581              	.LVL199:
 4582              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4583              		.loc 1 363 54 view .LVU1499
 4584 1cd4 4C09CE   		or	rsi, r9	# tmp667, tmp666
 4585 1cd7 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 4586              	.LVL200:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4587              		.loc 1 364 9 is_stmt 1 view .LVU1500
 4588              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4589              		.loc 1 365 44 is_stmt 0 view .LVU1501
 4590 1cdb C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
GAS LISTING /tmp/ccFOD2R4.s 			page 127


 4590      FF
 4591              	.LVL201:
 4592              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4593              		.loc 1 365 65 view .LVU1502
 4594 1ce0 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 4594      10
 4595 1ce5 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
 4595      F2
 4596              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4597              		.loc 1 365 54 view .LVU1503
 4598 1cea 4809F7   		or	rdi, rsi	# tmp671, tmp668
 4599              	# sieve_extend.c:364:         bitword_t source2 = bitstorage[source_word+2];
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4600              		.loc 1 364 39 view .LVU1504
 4601 1ced 4C8D4904 		lea	r9, 4[rcx]	# _682,
 365:sieve_extend.c ****         copy_word += 2;
 4602              		.loc 1 365 9 is_stmt 1 view .LVU1505
 4603              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4604              		.loc 1 365 54 is_stmt 0 view .LVU1506
 4605 1cf1 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 4605      08
 366:sieve_extend.c ****         source_word += 2;
 4606              		.loc 1 366 9 is_stmt 1 view .LVU1507
 4607              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 4608              		.loc 1 366 19 is_stmt 0 view .LVU1508
 4609 1cf6 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 4610              	.LVL202:
 367:sieve_extend.c ****         distance += 2;
 4611              		.loc 1 367 9 is_stmt 1 view .LVU1509
 368:sieve_extend.c ****     }
 4612              		.loc 1 368 9 view .LVU1510
 368:sieve_extend.c ****     }
 4613              		.loc 1 368 9 is_stmt 0 view .LVU1511
 4614              	.LBE338:
 4615              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4616              		.loc 1 360 11 view .LVU1512
 4617 1cfa 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 4618              	.LBB339:
 4619              	# sieve_extend.c:368:         distance += 2;
 368:sieve_extend.c ****     }
 4620              		.loc 1 368 18 view .LVU1513
 4621 1cfd 4D8D5604 		lea	r10, 4[r14]	# distance,
 4622              	.LVL203:
 368:sieve_extend.c ****     }
 4623              		.loc 1 368 18 view .LVU1514
 4624              	.LBE339:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4625              		.loc 1 360 11 is_stmt 1 view .LVU1515
 4626 1d01 0F868700 		jbe	.L334	#,
 4626      0000
 4627              	.LBB340:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
GAS LISTING /tmp/ccFOD2R4.s 			page 128


 4628              		.loc 1 361 9 view .LVU1516
 4629              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4630              		.loc 1 361 39 is_stmt 0 view .LVU1517
 4631 1d07 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 4631      00000000 
 4632              	.LVL204:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4633              		.loc 1 362 9 is_stmt 1 view .LVU1518
 4634              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 4635              		.loc 1 366 19 is_stmt 0 view .LVU1519
 4636 1d0f 4883C006 		add	rax, 6	# copy_word,
 4637              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4638              		.loc 1 362 19 view .LVU1520
 4639 1d13 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 4639      08
 4640              	.LVL205:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4641              		.loc 1 363 9 is_stmt 1 view .LVU1521
 4642              	# sieve_extend.c:364:         bitword_t source2 = bitstorage[source_word+2];
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4643              		.loc 1 364 39 is_stmt 0 view .LVU1522
 4644 1d18 4883C106 		add	rcx, 6	# _712,
 4645              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4646              		.loc 1 363 44 view .LVU1523
 4647 1d1c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
 4648              	.LVL206:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4649              		.loc 1 363 44 view .LVU1524
 4650 1d20 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 4650      F1
 4651              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4652              		.loc 1 363 65 view .LVU1525
 4653 1d25 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 4653      CF
 4654              	.LVL207:
 4655              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4656              		.loc 1 363 54 view .LVU1526
 4657 1d2a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 4658 1d2d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 4659              	.LVL208:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4660              		.loc 1 364 9 is_stmt 1 view .LVU1527
 365:sieve_extend.c ****         copy_word += 2;
 4661              		.loc 1 365 9 view .LVU1528
 4662              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4663              		.loc 1 365 44 is_stmt 0 view .LVU1529
 4664 1d31 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 4664      FF
 4665              	.LVL209:
 4666              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccFOD2R4.s 			page 129


 365:sieve_extend.c ****         copy_word += 2;
 4667              		.loc 1 365 65 view .LVU1530
 4668 1d36 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 4668      10
 4669              	.LVL210:
 365:sieve_extend.c ****         copy_word += 2;
 4670              		.loc 1 365 65 view .LVU1531
 4671 1d3b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
 4671      F2
 4672              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4673              		.loc 1 365 54 view .LVU1532
 4674 1d40 4809F7   		or	rdi, rsi	# tmp679, tmp676
 4675              	.LBE340:
 4676              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4677              		.loc 1 360 11 view .LVU1533
 4678 1d43 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 4679              	.LBB341:
 4680              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4681              		.loc 1 365 54 view .LVU1534
 4682 1d46 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 4682      08
 366:sieve_extend.c ****         source_word += 2;
 4683              		.loc 1 366 9 is_stmt 1 view .LVU1535
 4684              	.LVL211:
 367:sieve_extend.c ****         distance += 2;
 4685              		.loc 1 367 9 view .LVU1536
 368:sieve_extend.c ****     }
 4686              		.loc 1 368 9 view .LVU1537
 4687              	# sieve_extend.c:368:         distance += 2;
 368:sieve_extend.c ****     }
 4688              		.loc 1 368 18 is_stmt 0 view .LVU1538
 4689 1d4b 4D8D5606 		lea	r10, 6[r14]	# distance,
 4690              	.LVL212:
 368:sieve_extend.c ****     }
 4691              		.loc 1 368 18 view .LVU1539
 4692              	.LBE341:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4693              		.loc 1 360 11 is_stmt 1 view .LVU1540
 4694 1d4f 763D     		jbe	.L334	#,
 4695              	.LBB342:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4696              		.loc 1 361 9 view .LVU1541
 4697              	# sieve_extend.c:361:         bitword_t source0 = bitstorage[source_word  ];
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4698              		.loc 1 361 39 is_stmt 0 view .LVU1542
 4699 1d51 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 4699      00000000 
 4700              	.LVL213:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4701              		.loc 1 362 9 is_stmt 1 view .LVU1543
 4702              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4703              		.loc 1 362 19 is_stmt 0 view .LVU1544
 4704 1d59 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
GAS LISTING /tmp/ccFOD2R4.s 			page 130


 4704      08
 4705              	.LVL214:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4706              		.loc 1 363 9 is_stmt 1 view .LVU1545
 4707              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4708              		.loc 1 363 65 is_stmt 0 view .LVU1546
 4709 1d5e C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
 4709      C1
 4710              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4711              		.loc 1 363 44 view .LVU1547
 4712 1d63 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 4713              	.LVL215:
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4714              		.loc 1 363 44 view .LVU1548
 4715 1d67 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 4715      D1
 4716              	.LVL216:
 4717              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4718              		.loc 1 363 54 view .LVU1549
 4719 1d6c 4D09C2   		or	r10, r8	# tmp683, tmp682
 4720 1d6f 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4721              		.loc 1 364 9 is_stmt 1 view .LVU1550
 4722              	.LVL217:
 365:sieve_extend.c ****         copy_word += 2;
 4723              		.loc 1 365 9 view .LVU1551
 4724              	# sieve_extend.c:368:         distance += 2;
 368:sieve_extend.c ****     }
 4725              		.loc 1 368 18 is_stmt 0 view .LVU1552
 4726 1d73 4D8D5608 		lea	r10, 8[r14]	# distance,
 4727              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4728              		.loc 1 365 65 view .LVU1553
 4729 1d77 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 4729      10
 4730              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4731              		.loc 1 365 44 view .LVU1554
 4732 1d7c C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 4732      D9
 4733              	.LVL218:
 4734              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4735              		.loc 1 365 65 view .LVU1555
 4736 1d81 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 4736      FE
 4737              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 4738              		.loc 1 365 54 view .LVU1556
 4739 1d86 4909FB   		or	r11, rdi	# tmp687, tmp684
 4740 1d89 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 4740      08
 366:sieve_extend.c ****         source_word += 2;
 4741              		.loc 1 366 9 is_stmt 1 view .LVU1557
GAS LISTING /tmp/ccFOD2R4.s 			page 131


 367:sieve_extend.c ****         distance += 2;
 4742              		.loc 1 367 9 view .LVU1558
 368:sieve_extend.c ****     }
 4743              		.loc 1 368 9 view .LVU1559
 4744              	.LVL219:
 368:sieve_extend.c ****     }
 4745              		.loc 1 368 9 is_stmt 0 view .LVU1560
 4746              	.LBE342:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4747              		.loc 1 360 11 is_stmt 1 view .LVU1561
 4748              	.L334:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4749              		.loc 1 360 11 is_stmt 0 view .LVU1562
 4750 1d8e 4D01D4   		add	r12, r10	# tmp.297, distance
 4751 1d91 4D01D5   		add	r13, r10	# tmp.298, distance
 4752              	.LVL220:
 4753              	.L329:
 370:sieve_extend.c **** }
 4754              		.loc 1 370 5 is_stmt 1 view .LVU1563
 370:sieve_extend.c **** }
 4755              		.loc 1 370 5 is_stmt 0 view .LVU1564
 4756              	.LBE353:
 4757              	.LBE356:
 391:sieve_extend.c ****     copy_word += distance;
 4758              		.loc 1 391 5 is_stmt 1 view .LVU1565
 392:sieve_extend.c **** 
 4759              		.loc 1 392 5 view .LVU1566
 394:sieve_extend.c **** 
 4760              		.loc 1 394 5 view .LVU1567
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4761              		.loc 1 397 11 view .LVU1568
 4762              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4763              		.loc 1 397 5 is_stmt 0 view .LVU1569
 4764 1d94 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 4764      50
 4765 1d99 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.298
 4766 1d9c 0F82BE0A 		jb	.L351	#,
 4766      0000
 4767 1da2 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 4767      00000000 
 4768 1daa 498D4B01 		lea	rcx, 1[r11]	# tmp.285,
 4769 1dae 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.292,
 4770 1db2 4989C8   		mov	r8, rcx	# niters.291, tmp.285
 4771 1db5 4889F8   		mov	rax, rdi	# tmp698, vectp.292
 4772 1db8 4D29EB   		sub	r11, r13	# tmp700, tmp.298
 4773 1dbb 48C1E803 		shr	rax, 3	# tmp698,
 4774 1dbf 4D29E8   		sub	r8, r13	# niters.291, tmp.298
 4775 1dc2 48F7D8   		neg	rax	# tmp699
 4776 1dc5 41B90500 		mov	r9d, 5	# tmp702,
 4776      0000
 4777 1dcb 83E003   		and	eax, 3	# prolog_loop_niters.293,
 4778 1dce 488D7003 		lea	rsi, 3[rax]	# tmp701,
 4779 1dd2 4883FE05 		cmp	rsi, 5	# tmp701,
 4780 1dd6 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 4781 1dda 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 4782 1ddd 0F823F03 		jb	.L336	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 132


 4782      0000
 4783 1de3 4885C0   		test	rax, rax	# prolog_loop_niters.293
 4784 1de6 0F844408 		je	.L352	#,
 4784      0000
 4785              	.LVL221:
 398:sieve_extend.c ****     }
 4786              		.loc 1 398 9 is_stmt 1 view .LVU1570
 4787              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4788              		.loc 1 398 100 is_stmt 0 view .LVU1571
 4789 1dec 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 4789      08
 4790              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4791              		.loc 1 398 83 view .LVU1572
 4792 1df1 498D7424 		lea	rsi, 1[r12]	# tmp788,
 4792      01
 4793              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4794              		.loc 1 398 60 view .LVU1573
 4795 1df6 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.292_27], MEM[(uint64_t *)vectp.292_27]
 4796              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4797              		.loc 1 398 100 view .LVU1574
 4798 1df9 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 4798      CB
 4799              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4800              		.loc 1 398 60 view .LVU1575
 4801 1dfe C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.292_27], shift
 4801      F7
 4802              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4803              		.loc 1 398 70 view .LVU1576
 4804 1e03 4D09F1   		or	r9, r14	# tmp707, tmp705
 4805 1e06 4883F801 		cmp	rax, 1	# prolog_loop_niters.293,
 4806              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4807              		.loc 1 398 83 view .LVU1577
 4808 1e0a 4989F2   		mov	r10, rsi	# source_word, tmp788
 4809              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4810              		.loc 1 398 70 view .LVU1578
 4811 1e0d 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4812              		.loc 1 397 43 is_stmt 1 view .LVU1579
 4813              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4814              		.loc 1 397 52 is_stmt 0 view .LVU1580
 4815 1e11 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 4816              	.LVL222:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4817              		.loc 1 397 11 is_stmt 1 view .LVU1581
 4818 1e15 7456     		je	.L337	#,
 398:sieve_extend.c ****     }
 4819              		.loc 1 398 9 view .LVU1582
 4820              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccFOD2R4.s 			page 133


 398:sieve_extend.c ****     }
 4821              		.loc 1 398 44 is_stmt 0 view .LVU1583
 4822 1e17 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 4822      00000000 
 4823              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4824              		.loc 1 398 100 view .LVU1584
 4825 1e1f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
 4825      4C1B08
 4826              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4827              		.loc 1 398 60 view .LVU1585
 4828 1e26 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 4829 1e2a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 4829      DF
 4830              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4831              		.loc 1 398 70 view .LVU1586
 4832 1e2f 4D09D9   		or	r9, r11	# tmp712, tmp710
 4833 1e32 4883F803 		cmp	rax, 3	# prolog_loop_niters.293,
 4834 1e36 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4835              		.loc 1 397 43 is_stmt 1 view .LVU1587
 4836              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4837              		.loc 1 398 83 is_stmt 0 view .LVU1588
 4838 1e3a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 4838      02
 4839              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4840              		.loc 1 397 52 view .LVU1589
 4841 1e3f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 4842              	.LVL223:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4843              		.loc 1 397 11 is_stmt 1 view .LVU1590
 4844 1e43 7528     		jne	.L337	#,
 398:sieve_extend.c ****     }
 4845              		.loc 1 398 9 view .LVU1591
 4846              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4847              		.loc 1 398 44 is_stmt 0 view .LVU1592
 4848 1e45 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 4848      00000000 
 4849              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4850              		.loc 1 398 100 view .LVU1593
 4851 1e4d C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 4851      7C0B08
 4852              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4853              		.loc 1 398 60 view .LVU1594
 4854 1e54 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 4855 1e58 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 4855      CB
 4856              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4857              		.loc 1 398 70 view .LVU1595
GAS LISTING /tmp/ccFOD2R4.s 			page 134


 4858 1e5d 4C09CF   		or	rdi, r9	# tmp717, tmp715
 4859              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4860              		.loc 1 398 83 view .LVU1596
 4861 1e60 4D8D5424 		lea	r10, 3[r12]	# source_word,
 4861      03
 4862              	.LVL224:
 4863              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4864              		.loc 1 398 70 view .LVU1597
 4865 1e65 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4866              		.loc 1 397 43 is_stmt 1 view .LVU1598
 4867              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4868              		.loc 1 397 52 is_stmt 0 view .LVU1599
 4869 1e69 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 4870              	.LVL225:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4871              		.loc 1 397 11 is_stmt 1 view .LVU1600
 4872              	.L337:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4873              		.loc 1 397 11 is_stmt 0 view .LVU1601
 4874 1e6d 4929C0   		sub	r8, rax	# niters.294, prolog_loop_niters.293
 4875 1e70 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.293
 4876 1e73 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 4877 1e77 4C01E8   		add	rax, r13	# tmp723, tmp.298
 4878 1e7a 4D89C5   		mov	r13, r8	# bnd.295, niters.294
 4879 1e7d 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.304,
 4880 1e81 49C1ED02 		shr	r13, 2	# bnd.295,
 4881 1e85 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.309,
 4882 1e89 49C1E505 		sal	r13, 5	# _733,
 4883              	# sieve_extend.c:391:     source_word += distance;
 391:sieve_extend.c ****     copy_word += distance;
 4884              		.loc 1 391 17 view .LVU1602
 4885 1e8d 31C0     		xor	eax, eax	# ivtmp.350
 4886 1e8f 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 4887 1e93 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.300,
 4888 1e97 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 4888      2448
 4889 1e9d 48C1EE05 		shr	rsi, 5	# tmp797,
 4890 1ea1 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 4890      2440
 4891 1ea7 4883C601 		add	rsi, 1	# tmp800,
 4892 1eab 83E607   		and	esi, 7	# tmp801,
 4893 1eae 0F841201 		je	.L339	#,
 4893      0000
 4894 1eb4 4883FE01 		cmp	rsi, 1	# tmp801,
 4895 1eb8 0F84DB00 		je	.L432	#,
 4895      0000
 4896 1ebe 4883FE02 		cmp	rsi, 2	# tmp801,
 4897 1ec2 0F84AE00 		je	.L433	#,
 4897      0000
 4898 1ec8 4883FE03 		cmp	rsi, 3	# tmp801,
 4899 1ecc 0F848000 		je	.L434	#,
 4899      0000
 4900 1ed2 4883FE04 		cmp	rsi, 4	# tmp801,
GAS LISTING /tmp/ccFOD2R4.s 			page 135


 4901 1ed6 7456     		je	.L435	#,
 4902 1ed8 4883FE05 		cmp	rsi, 5	# tmp801,
 4903 1edc 742D     		je	.L436	#,
 4904 1ede 4883FE06 		cmp	rsi, 6	# tmp801,
 4905 1ee2 0F856807 		jne	.L504	#,
 4905      0000
 4906              	.L437:
 398:sieve_extend.c ****     }
 4907              		.loc 1 398 9 is_stmt 1 view .LVU1603
 4908              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4909              		.loc 1 398 60 is_stmt 0 view .LVU1604
 4910 1ee8 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.300_257, index: ivtmp.350_731, off
 4910      2C03
 4911              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4912              		.loc 1 398 100 view .LVU1605
 4913 1eee C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.304_264, index: ivtmp.350_731, off
 4913      07
 4914              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4915              		.loc 1 398 60 view .LVU1606
 4916 1ef3 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.302, tmp1262, _12
 4916      F2
 4917              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4918              		.loc 1 398 100 view .LVU1607
 4919 1ef8 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.306, tmp1263, _18
 4919      CB
 4920              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4921              		.loc 1 398 70 view .LVU1608
 4922 1efd C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.307, vect__38.302, vect__43.306
 4923              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4924              		.loc 1 398 31 view .LVU1609
 4925 1f01 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], v
 4925      0401
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4926              		.loc 1 397 43 is_stmt 1 view .LVU1610
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4927              		.loc 1 397 11 view .LVU1611
 4928 1f07 4883C020 		add	rax, 32	# ivtmp.350,
 4929              	.L436:
 398:sieve_extend.c ****     }
 4930              		.loc 1 398 9 view .LVU1612
 4931              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4932              		.loc 1 398 60 is_stmt 0 view .LVU1613
 4933 1f0b C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.300_257, index: ivtmp.350_731, offs
 4933      0403
 4934              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4935              		.loc 1 398 100 view .LVU1614
 4936 1f11 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 4936      07
 4937              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccFOD2R4.s 			page 136


 398:sieve_extend.c ****     }
 4938              		.loc 1 398 60 view .LVU1615
 4939 1f16 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.302, tmp1264, _12
 4939      EA
 4940              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4941              		.loc 1 398 100 view .LVU1616
 4942 1f1b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.306, tmp1265, _18
 4942      FB
 4943              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4944              		.loc 1 398 70 view .LVU1617
 4945 1f20 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.307, vect__38.302, vect__43.306
 4946              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4947              		.loc 1 398 31 view .LVU1618
 4948 1f24 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], v
 4948      1C01
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4949              		.loc 1 397 43 is_stmt 1 view .LVU1619
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4950              		.loc 1 397 11 view .LVU1620
 4951 1f2a 4883C020 		add	rax, 32	# ivtmp.350,
 4952              	.L435:
 398:sieve_extend.c ****     }
 4953              		.loc 1 398 9 view .LVU1621
 4954              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4955              		.loc 1 398 60 is_stmt 0 view .LVU1622
 4956 1f2e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.300_257, index: ivtmp.350_731, offs
 4956      1403
 4957              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4958              		.loc 1 398 100 view .LVU1623
 4959 1f34 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 4959      07
 4960              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4961              		.loc 1 398 60 view .LVU1624
 4962 1f39 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.302, tmp1266, _12
 4962      F2
 4963              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4964              		.loc 1 398 100 view .LVU1625
 4965 1f3e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.306, tmp1267, _18
 4965      E3
 4966              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4967              		.loc 1 398 70 view .LVU1626
 4968 1f43 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.307, vect__38.302, vect__43.306
 4968      EC
 4969              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4970              		.loc 1 398 31 view .LVU1627
 4971 1f48 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], 
 4971      2C01
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccFOD2R4.s 			page 137


 4972              		.loc 1 397 43 is_stmt 1 view .LVU1628
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4973              		.loc 1 397 11 view .LVU1629
 4974 1f4e 4883C020 		add	rax, 32	# ivtmp.350,
 4975              	.L434:
 398:sieve_extend.c ****     }
 4976              		.loc 1 398 9 view .LVU1630
 4977              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4978              		.loc 1 398 60 is_stmt 0 view .LVU1631
 4979 1f52 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.300_257, index: ivtmp.350_731, off
 4979      3403
 4980              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4981              		.loc 1 398 100 view .LVU1632
 4982 1f58 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 4982      07
 4983              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4984              		.loc 1 398 60 view .LVU1633
 4985 1f5d C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.302, tmp1268, _12
 4985      FA
 4986              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4987              		.loc 1 398 100 view .LVU1634
 4988 1f62 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.306, tmp1269, _18
 4988      C3
 4989              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4990              		.loc 1 398 70 view .LVU1635
 4991 1f67 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.307, vect__38.302, vect__43.306
 4991      C0
 4992              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 4993              		.loc 1 398 31 view .LVU1636
 4994 1f6c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], v
 4994      0401
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4995              		.loc 1 397 43 is_stmt 1 view .LVU1637
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4996              		.loc 1 397 11 view .LVU1638
 4997 1f72 4883C020 		add	rax, 32	# ivtmp.350,
 4998              	.L433:
 398:sieve_extend.c ****     }
 4999              		.loc 1 398 9 view .LVU1639
 5000              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5001              		.loc 1 398 60 is_stmt 0 view .LVU1640
 5002 1f76 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.300_257, index: ivtmp.350_731, offs
 5002      2C03
 5003              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5004              		.loc 1 398 100 view .LVU1641
 5005 1f7c C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 5005      07
 5006              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 138


 5007              		.loc 1 398 60 view .LVU1642
 5008 1f81 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.302, tmp1270, _12
 5008      CA
 5009              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5010              		.loc 1 398 100 view .LVU1643
 5011 1f86 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.306, tmp1271, _18
 5011      DB
 5012              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5013              		.loc 1 398 70 view .LVU1644
 5014 1f8b C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.307, vect__38.302, vect__43.306
 5015              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5016              		.loc 1 398 31 view .LVU1645
 5017 1f8f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], v
 5017      1401
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5018              		.loc 1 397 43 is_stmt 1 view .LVU1646
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5019              		.loc 1 397 11 view .LVU1647
 5020 1f95 4883C020 		add	rax, 32	# ivtmp.350,
 5021              	.L432:
 398:sieve_extend.c ****     }
 5022              		.loc 1 398 9 view .LVU1648
 5023              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5024              		.loc 1 398 60 is_stmt 0 view .LVU1649
 5025 1f99 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.300_257, index: ivtmp.350_731, offs
 5025      3403
 5026              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5027              		.loc 1 398 100 view .LVU1650
 5028 1f9f C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 5028      07
 5029              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5030              		.loc 1 398 60 view .LVU1651
 5031 1fa4 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.302, tmp1272, _12
 5031      E2
 5032              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5033              		.loc 1 398 100 view .LVU1652
 5034 1fa9 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.306, tmp1273, _18
 5034      EB
 5035              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5036              		.loc 1 398 70 view .LVU1653
 5037 1fae C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.307, vect__38.302, vect__43.306
 5037      F5
 5038              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5039              		.loc 1 398 31 view .LVU1654
 5040 1fb3 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], 
 5040      3401
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5041              		.loc 1 397 43 is_stmt 1 view .LVU1655
GAS LISTING /tmp/ccFOD2R4.s 			page 139


 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5042              		.loc 1 397 11 view .LVU1656
 5043 1fb9 4883C020 		add	rax, 32	# ivtmp.350,
 5044 1fbd 4C39E8   		cmp	rax, r13	# ivtmp.350, _733
 5045 1fc0 0F844401 		je	.L480	#,
 5045      0000
 5046              	.L339:
 398:sieve_extend.c ****     }
 5047              		.loc 1 398 9 discriminator 2 view .LVU1657
 5048              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5049              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1658
 5050 1fc6 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.300_257, index: ivtmp.350_731, off
 5050      3C03
 5051              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5052              		.loc 1 398 100 discriminator 2 view .LVU1659
 5053 1fcc C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.304_264, index: ivtmp.350_731, offs
 5053      07
 5054              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5055              		.loc 1 398 60 discriminator 2 view .LVU1660
 5056 1fd1 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.302, tmp1206, _12
 5056      CA
 5057              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5058              		.loc 1 398 100 discriminator 2 view .LVU1661
 5059 1fd6 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.306, tmp1207, _18
 5059      C3
 5060              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5061              		.loc 1 398 70 discriminator 2 view .LVU1662
 5062 1fdb C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.307, vect__38.302, vect__43.306
 5063              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5064              		.loc 1 398 31 discriminator 2 view .LVU1663
 5065 1fdf C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], v
 5065      2C01
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5066              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1664
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5067              		.loc 1 397 11 discriminator 2 view .LVU1665
 398:sieve_extend.c ****     }
 5068              		.loc 1 398 9 discriminator 2 view .LVU1666
 5069              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5070              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1667
 5071 1fe5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.300_257, index: ivtmp.350_731, of
 5071      4C0320
 5072              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5073              		.loc 1 398 100 discriminator 2 view .LVU1668
 5074 1fec C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.304_264, index: ivtmp.350_731, of
 5074      0720
 5075              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5076              		.loc 1 398 60 discriminator 2 view .LVU1669
GAS LISTING /tmp/ccFOD2R4.s 			page 140


 5077 1ff2 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.302, tmp1208, _12
 5077      FA
 5078              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5079              		.loc 1 398 100 discriminator 2 view .LVU1670
 5080 1ff7 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.306, tmp1209, _18
 5080      D3
 5081              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5082              		.loc 1 398 70 discriminator 2 view .LVU1671
 5083 1ffc C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.307, vect__38.302, vect__43.306
 5084              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5085              		.loc 1 398 31 discriminator 2 view .LVU1672
 5086 2000 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B],
 5086      740120
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5087              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1673
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5088              		.loc 1 397 11 discriminator 2 view .LVU1674
 398:sieve_extend.c ****     }
 5089              		.loc 1 398 9 discriminator 2 view .LVU1675
 5090              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5091              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1676
 5092 2007 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.300_257, index: ivtmp.350_731, o
 5092      640340
 5093              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5094              		.loc 1 398 100 discriminator 2 view .LVU1677
 5095 200e C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.304_264, index: ivtmp.350_731, of
 5095      0740
 5096              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5097              		.loc 1 398 60 discriminator 2 view .LVU1678
 5098 2014 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.302, tmp1210, _12
 5098      EA
 5099              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5100              		.loc 1 398 100 discriminator 2 view .LVU1679
 5101 2019 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.306, tmp1211, _18
 5101      F3
 5102              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5103              		.loc 1 398 70 discriminator 2 view .LVU1680
 5104 201e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.307, vect__38.302, vect__43.306
 5104      FE
 5105              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5106              		.loc 1 398 31 discriminator 2 view .LVU1681
 5107 2023 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B]
 5107      7C0140
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5108              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1682
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5109              		.loc 1 397 11 discriminator 2 view .LVU1683
 398:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 141


 5110              		.loc 1 398 9 discriminator 2 view .LVU1684
 5111              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5112              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1685
 5113 202a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.300_257, index: ivtmp.350_731, of
 5113      4C0360
 5114              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5115              		.loc 1 398 100 discriminator 2 view .LVU1686
 5116 2031 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.304_264, index: ivtmp.350_731, of
 5116      0760
 5117              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5118              		.loc 1 398 60 discriminator 2 view .LVU1687
 5119 2037 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.302, tmp1212, _12
 5119      C2
 5120              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5121              		.loc 1 398 100 discriminator 2 view .LVU1688
 5122 203c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.306, tmp1213, _18
 5122      EB
 5123              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5124              		.loc 1 398 70 discriminator 2 view .LVU1689
 5125 2041 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.307, vect__38.302, vect__43.306
 5126              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5127              		.loc 1 398 31 discriminator 2 view .LVU1690
 5128 2045 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B],
 5128      4C0160
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5129              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1691
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5130              		.loc 1 397 11 discriminator 2 view .LVU1692
 398:sieve_extend.c ****     }
 5131              		.loc 1 398 9 discriminator 2 view .LVU1693
 5132              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5133              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1694
 5134 204c C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.300_257, index: ivtmp.350_731, o
 5134      BC038000 
 5134      0000
 5135              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5136              		.loc 1 398 100 discriminator 2 view .LVU1695
 5137 2056 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.304_264, index: ivtmp.350_731, o
 5137      07800000 
 5137      00
 5138              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5139              		.loc 1 398 60 discriminator 2 view .LVU1696
 5140 205f C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.302, tmp1214, _12
 5140      D2
 5141              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5142              		.loc 1 398 100 discriminator 2 view .LVU1697
 5143 2064 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.306, tmp1215, _18
GAS LISTING /tmp/ccFOD2R4.s 			page 142


 5143      F3
 5144              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5145              		.loc 1 398 70 discriminator 2 view .LVU1698
 5146 2069 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.307, vect__38.302, vect__43.306
 5147              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5148              		.loc 1 398 31 discriminator 2 view .LVU1699
 5149 206d C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B
 5149      A4018000 
 5149      0000
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5150              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1700
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5151              		.loc 1 397 11 discriminator 2 view .LVU1701
 398:sieve_extend.c ****     }
 5152              		.loc 1 398 9 discriminator 2 view .LVU1702
 5153              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5154              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1703
 5155 2077 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.300_257, index: ivtmp.350_731, 
 5155      AC03A000 
 5155      0000
 5156              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5157              		.loc 1 398 100 discriminator 2 view .LVU1704
 5158 2081 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.304_264, index: ivtmp.350_731, o
 5158      07A00000 
 5158      00
 5159              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5160              		.loc 1 398 60 discriminator 2 view .LVU1705
 5161 208a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.302, tmp1216, _12
 5161      F2
 5162              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5163              		.loc 1 398 100 discriminator 2 view .LVU1706
 5164 208f C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.306, tmp1217, _18
 5164      FB
 5165              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5166              		.loc 1 398 70 discriminator 2 view .LVU1707
 5167 2094 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.307, vect__38.302, vect__43.306
 5167      CF
 5168              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5169              		.loc 1 398 31 discriminator 2 view .LVU1708
 5170 2099 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B]
 5170      8C01A000 
 5170      0000
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5171              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1709
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5172              		.loc 1 397 11 discriminator 2 view .LVU1710
 398:sieve_extend.c ****     }
 5173              		.loc 1 398 9 discriminator 2 view .LVU1711
 5174              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccFOD2R4.s 			page 143


 398:sieve_extend.c ****     }
 5175              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1712
 5176 20a3 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.300_257, index: ivtmp.350_731, o
 5176      8403C000 
 5176      0000
 5177              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5178              		.loc 1 398 100 discriminator 2 view .LVU1713
 5179 20ad C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.304_264, index: ivtmp.350_731, o
 5179      07C00000 
 5179      00
 5180              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5181              		.loc 1 398 60 discriminator 2 view .LVU1714
 5182 20b6 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.302, tmp1218, _12
 5182      C2
 5183              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5184              		.loc 1 398 100 discriminator 2 view .LVU1715
 5185 20bb C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.306, tmp1219, _18
 5185      CB
 5186              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5187              		.loc 1 398 70 discriminator 2 view .LVU1716
 5188 20c0 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.307, vect__38.302, vect__43.306
 5188      F9
 5189              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5190              		.loc 1 398 31 discriminator 2 view .LVU1717
 5191 20c5 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B]
 5191      BC01C000 
 5191      0000
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5192              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1718
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5193              		.loc 1 397 11 discriminator 2 view .LVU1719
 398:sieve_extend.c ****     }
 5194              		.loc 1 398 9 discriminator 2 view .LVU1720
 5195              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5196              		.loc 1 398 60 is_stmt 0 discriminator 2 view .LVU1721
 5197 20cf C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.300_257, index: ivtmp.350_731, o
 5197      9403E000 
 5197      0000
 5198              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5199              		.loc 1 398 100 discriminator 2 view .LVU1722
 5200 20d9 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.304_264, index: ivtmp.350_731, o
 5200      07E00000 
 5200      00
 5201              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5202              		.loc 1 398 60 discriminator 2 view .LVU1723
 5203 20e2 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.302, tmp1220, _12
 5203      F2
 5204              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 144


 5205              		.loc 1 398 100 discriminator 2 view .LVU1724
 5206 20e7 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.306, tmp1221, _18
 5206      E3
 5207              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5208              		.loc 1 398 70 discriminator 2 view .LVU1725
 5209 20ec C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.307, vect__38.302, vect__43.306
 5209      EC
 5210              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5211              		.loc 1 398 31 discriminator 2 view .LVU1726
 5212 20f1 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B
 5212      AC01E000 
 5212      0000
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5213              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU1727
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5214              		.loc 1 397 11 discriminator 2 view .LVU1728
 5215 20fb 48050001 		add	rax, 256	# ivtmp.350,
 5215      0000
 5216 2101 4C39E8   		cmp	rax, r13	# ivtmp.350, _733
 5217 2104 0F85BCFE 		jne	.L339	#,
 5217      FFFF
 5218              	.L480:
 5219 210a 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.296, niters.294
 5220 210d 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.296,
 5221 2111 4D39D8   		cmp	r8, r11	# niters.294, niters_vector_mult_vf.296
 5222 2114 4F8D241A 		lea	r12, [r10+r11]	# tmp.297,
 5223 2118 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.298,
 5224 211c 0F84DA00 		je	.L335	#,
 5224      0000
 5225              	.L336:
 5226              	.LVL226:
 398:sieve_extend.c ****     }
 5227              		.loc 1 398 9 view .LVU1729
 5228              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5229              		.loc 1 397 5 is_stmt 0 view .LVU1730
 5230 2122 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 5230      50
 5231              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5232              		.loc 1 397 52 view .LVU1731
 5233 2127 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 5234              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5235              		.loc 1 398 100 view .LVU1732
 5236 212b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 5236      44E308
 5237              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5238              		.loc 1 398 60 view .LVU1733
 5239 2132 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 5239      34E3
 5240              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5241              		.loc 1 398 70 view .LVU1734
GAS LISTING /tmp/ccFOD2R4.s 			page 145


 5242 2138 4D09F0   		or	r8, r14	# tmp737, tmp735
 5243              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5244              		.loc 1 398 83 view .LVU1735
 5245 213b 4D8D5424 		lea	r10, 1[r12]	# _519,
 5245      01
 5246              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5247              		.loc 1 398 70 view .LVU1736
 5248 2140 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5249              		.loc 1 397 43 is_stmt 1 view .LVU1737
 5250              	.LVL227:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5251              		.loc 1 397 11 view .LVU1738
 5252              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5253              		.loc 1 397 5 is_stmt 0 view .LVU1739
 5254 2144 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
 5255 2147 0F82AF00 		jb	.L335	#,
 5255      0000
 398:sieve_extend.c ****     }
 5256              		.loc 1 398 9 is_stmt 1 view .LVU1740
 5257              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5258              		.loc 1 398 60 is_stmt 0 view .LVU1741
 5259 214d 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 5260              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5261              		.loc 1 398 100 view .LVU1742
 5262 2151 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 5262      74D308
 5263              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5264              		.loc 1 397 52 view .LVU1743
 5265 2158 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 5266              	.LVL228:
 5267              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5268              		.loc 1 398 60 view .LVU1744
 5269 215c C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 5269      C7
 5270              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5271              		.loc 1 398 70 view .LVU1745
 5272 2161 4809C6   		or	rsi, rax	# tmp742, tmp740
 5273              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5274              		.loc 1 397 5 view .LVU1746
 5275 2164 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 5276              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5277              		.loc 1 398 70 view .LVU1747
 5278 2167 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5279              		.loc 1 397 43 is_stmt 1 view .LVU1748
 5280              	.LVL229:
GAS LISTING /tmp/ccFOD2R4.s 			page 146


 5281              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5282              		.loc 1 398 83 is_stmt 0 view .LVU1749
 5283 216b 4D8D4424 		lea	r8, 2[r12]	# _536,
 5283      02
 5284              	.LVL230:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5285              		.loc 1 397 11 is_stmt 1 view .LVU1750
 5286              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5287              		.loc 1 397 5 is_stmt 0 view .LVU1751
 5288 2170 0F828600 		jb	.L335	#,
 5288      0000
 398:sieve_extend.c ****     }
 5289              		.loc 1 398 9 is_stmt 1 view .LVU1752
 5290              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5291              		.loc 1 398 100 is_stmt 0 view .LVU1753
 5292 2176 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
 5292      4CC308
 5293              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5294              		.loc 1 398 60 view .LVU1754
 5295 217d 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 5296              	.LVL231:
 398:sieve_extend.c ****     }
 5297              		.loc 1 398 60 view .LVU1755
 5298 2181 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 5298      F0
 5299              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5300              		.loc 1 398 70 view .LVU1756
 5301 2186 4909F1   		or	r9, rsi	# tmp747, tmp745
 5302 2189 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5303              		.loc 1 397 43 is_stmt 1 view .LVU1757
 5304              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5305              		.loc 1 397 52 is_stmt 0 view .LVU1758
 5306 218d 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 5307              	.LVL232:
 5308              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5309              		.loc 1 397 5 view .LVU1759
 5310 2191 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 5311              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5312              		.loc 1 398 83 view .LVU1760
 5313 2194 4D8D7424 		lea	r14, 3[r12]	# _553,
 5313      03
 5314              	.LVL233:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5315              		.loc 1 397 11 is_stmt 1 view .LVU1761
 5316              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5317              		.loc 1 397 5 is_stmt 0 view .LVU1762
 5318 2199 7261     		jb	.L335	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 147


 398:sieve_extend.c ****     }
 5319              		.loc 1 398 9 is_stmt 1 view .LVU1763
 5320              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5321              		.loc 1 398 100 is_stmt 0 view .LVU1764
 5322 219b C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 5322      44F308
 5323              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5324              		.loc 1 398 60 view .LVU1765
 5325 21a2 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 5326 21a6 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 5326      F7
 5327              	.LVL234:
 5328              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5329              		.loc 1 398 70 view .LVU1766
 5330 21ab 4C09F0   		or	rax, r14	# tmp752, tmp750
 5331 21ae 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5332              		.loc 1 397 43 is_stmt 1 view .LVU1767
 5333              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5334              		.loc 1 397 52 is_stmt 0 view .LVU1768
 5335 21b2 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 5336              	.LVL235:
 5337              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5338              		.loc 1 397 5 view .LVU1769
 5339 21b6 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 5340              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5341              		.loc 1 398 83 view .LVU1770
 5342 21b9 4D8D4C24 		lea	r9, 4[r12]	# _570,
 5342      04
 5343              	.LVL236:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5344              		.loc 1 397 11 is_stmt 1 view .LVU1771
 5345              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5346              		.loc 1 397 5 is_stmt 0 view .LVU1772
 5347 21be 723C     		jb	.L335	#,
 398:sieve_extend.c ****     }
 5348              		.loc 1 398 9 is_stmt 1 view .LVU1773
 5349              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5350              		.loc 1 397 52 is_stmt 0 view .LVU1774
 5351 21c0 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 5352              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5353              		.loc 1 398 100 view .LVU1775
 5354 21c4 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 5354      44CB08
 5355              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5356              		.loc 1 398 60 view .LVU1776
 5357 21cb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
GAS LISTING /tmp/ccFOD2R4.s 			page 148


 5358 21cf C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 5358      CE
 5359              	.LVL237:
 5360              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5361              		.loc 1 398 70 view .LVU1777
 5362 21d4 4D09C8   		or	r8, r9	# tmp757, tmp755
 5363              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5364              		.loc 1 397 5 view .LVU1778
 5365 21d7 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 5366              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5367              		.loc 1 398 70 view .LVU1779
 5368 21da 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5369              		.loc 1 397 43 is_stmt 1 view .LVU1780
 5370              	.LVL238:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5371              		.loc 1 397 11 view .LVU1781
 5372              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5373              		.loc 1 398 83 is_stmt 0 view .LVU1782
 5374 21de 4D8D6424 		lea	r12, 5[r12]	# _587,
 5374      05
 5375              	.LVL239:
 5376              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5377              		.loc 1 397 5 view .LVU1783
 5378 21e3 7217     		jb	.L335	#,
 398:sieve_extend.c ****     }
 5379              		.loc 1 398 9 is_stmt 1 view .LVU1784
 5380              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5381              		.loc 1 398 60 is_stmt 0 view .LVU1785
 5382 21e5 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 5383              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5384              		.loc 1 398 100 view .LVU1786
 5385 21e9 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 5385      54E308
 5386              	.LVL240:
 5387              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5388              		.loc 1 398 60 view .LVU1787
 5389 21f0 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 5389      FB
 5390              	.LVL241:
 5391              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 5392              		.loc 1 398 70 view .LVU1788
 5393 21f5 4C09FA   		or	rdx, r15	# tmp762, tmp760
 5394 21f8 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 5395              		.loc 1 397 43 is_stmt 1 view .LVU1789
 5396              	.LVL242:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccFOD2R4.s 			page 149


 5397              		.loc 1 397 11 view .LVU1790
 5398              	.L335:
 401:sieve_extend.c **** 
 5399              		.loc 1 401 5 view .LVU1791
 5400              	# sieve_extend.c:401:     if (copy_word >= destination_stop_word) return;
 401:sieve_extend.c **** 
 5401              		.loc 1 401 8 is_stmt 0 view .LVU1792
 5402 21fc 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 5402      58
 5403 2201 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.285
 5404 2204 0F860E04 		jbe	.L501	#,
 5404      0000
 403:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5405              		.loc 1 403 5 is_stmt 1 view .LVU1793
 5406              	# sieve_extend.c:403:     source_word = copy_word - size; // recalibrate
 403:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5407              		.loc 1 403 17 is_stmt 0 view .LVU1794
 5408 220a 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 5408      18
 5409 220f 4989CC   		mov	r12, rcx	# tmp.284, tmp.285
 5410              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5411              		.loc 1 407 21 view .LVU1795
 5412 2212 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.345,
 5413              	# sieve_extend.c:403:     source_word = copy_word - size; // recalibrate
 403:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5414              		.loc 1 403 17 view .LVU1796
 5415 2216 4929FC   		sub	r12, rdi	# tmp.284, size
 5416              	.LVL243:
 404:sieve_extend.c **** 
 5417              		.loc 1 404 5 is_stmt 1 view .LVU1797
 5418              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5419              		.loc 1 407 5 is_stmt 0 view .LVU1798
 5420 2219 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.345
 5421              	# sieve_extend.c:404:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 404:sieve_extend.c **** 
 5422              		.loc 1 404 18 view .LVU1799
 5423 221c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 5423      00000000 
 5424              	.LVL244:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5425              		.loc 1 407 11 is_stmt 1 view .LVU1800
 5426              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5427              		.loc 1 407 5 is_stmt 0 view .LVU1801
 5428 2224 0F826B01 		jb	.L342	#,
 5428      0000
 5429 222a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 5430 222e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 5430      00000000 
 5431              	.LVL245:
 5432              	# sieve_extend.c:408:         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 408:sieve_extend.c **** 
 5433              		.loc 1 408 40 view .LVU1802
 5434 2236 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 5435 223a 4929CD   		sub	r13, rcx	# _437, tmp766
GAS LISTING /tmp/ccFOD2R4.s 			page 150


 5436 223d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.284
 5436      48
 5437 2242 4989FC   		mov	r12, rdi	# size, size
 5438              	.LVL246:
 408:sieve_extend.c **** 
 5439              		.loc 1 408 40 view .LVU1803
 5440 2245 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitstorage
 5440      40
 5441 224a 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 5442              	.LVL247:
 408:sieve_extend.c **** 
 5443              		.loc 1 408 40 view .LVU1804
 5444 224d C5F877   		vzeroupper
 5445              	.LVL248:
 5446              	.L343:
 408:sieve_extend.c **** 
 5447              		.loc 1 408 9 is_stmt 1 discriminator 2 view .LVU1805
 5448              	.LBB357:
 5449              	.LBI357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5450              		.loc 2 31 1 discriminator 2 view .LVU1806
 5451              	.LBB358:
 5452              		.loc 2 34 3 discriminator 2 view .LVU1807
 5453              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5454              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1808
 5455 2250 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 5455      00
 5456 2255 4C89F2   		mov	rdx, r14	#, memsize
 5457 2258 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.345
 5457      50
 5458 225d 4C89FE   		mov	rsi, r15	#, _48
 5459 2260 E8000000 		call	memcpy@PLT	#
 5459      00
 5460              	.LVL249:
 5461              		.loc 2 34 10 discriminator 2 view .LVU1809
 5462              	.LBE358:
 5463              	.LBE357:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5464              		.loc 1 407 54 is_stmt 1 discriminator 2 view .LVU1810
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5465              		.loc 1 407 11 discriminator 2 view .LVU1811
 5466 2265 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5466      50
 5467 226a 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.345,
 5468              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5469              		.loc 1 407 5 is_stmt 0 discriminator 2 view .LVU1812
 5470 226e 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.345
 5471 2271 0F820901 		jb	.L489	#,
 5471      0000
 408:sieve_extend.c **** 
 5472              		.loc 1 408 9 is_stmt 1 view .LVU1813
 5473              	.LVL250:
 5474              	.LBB366:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5475              		.loc 2 31 1 view .LVU1814
 5476              	.LBB359:
GAS LISTING /tmp/ccFOD2R4.s 			page 151


 5477              		.loc 2 34 3 view .LVU1815
 5478              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5479              		.loc 2 34 10 is_stmt 0 view .LVU1816
 5480 2277 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 5480      00
 5481 227c 4C89F2   		mov	rdx, r14	#, memsize
 5482 227f 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.345
 5482      50
 5483              	.LVL251:
 5484              		.loc 2 34 10 view .LVU1817
 5485 2284 4C89FE   		mov	rsi, r15	#, _48
 5486 2287 E8000000 		call	memcpy@PLT	#
 5486      00
 5487              	.LVL252:
 5488              		.loc 2 34 10 view .LVU1818
 5489              	.LBE359:
 5490              	.LBE366:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5491              		.loc 1 407 54 is_stmt 1 view .LVU1819
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5492              		.loc 1 407 11 view .LVU1820
 5493 228c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5493      50
 5494 2291 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.345,
 5495              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5496              		.loc 1 407 5 is_stmt 0 view .LVU1821
 5497 2295 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.345
 5498 2298 0F82E200 		jb	.L489	#,
 5498      0000
 408:sieve_extend.c **** 
 5499              		.loc 1 408 9 is_stmt 1 view .LVU1822
 5500              	.LVL253:
 5501              	.LBB367:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5502              		.loc 2 31 1 view .LVU1823
 5503              	.LBB360:
 5504              		.loc 2 34 3 view .LVU1824
 5505              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5506              		.loc 2 34 10 is_stmt 0 view .LVU1825
 5507 229e 4C89FE   		mov	rsi, r15	#, _48
 5508 22a1 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 5508      00
 5509 22a6 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.345
 5509      50
 5510 22ab 4C89F2   		mov	rdx, r14	#, memsize
 5511 22ae E8000000 		call	memcpy@PLT	#
 5511      00
 5512              	.LVL254:
 5513              		.loc 2 34 10 view .LVU1826
 5514              	.LBE360:
 5515              	.LBE367:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5516              		.loc 1 407 54 is_stmt 1 view .LVU1827
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5517              		.loc 1 407 11 view .LVU1828
 5518 22b3 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 152


 5518      50
 5519 22b8 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.345,
 5520              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5521              		.loc 1 407 5 is_stmt 0 view .LVU1829
 5522 22bc 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.345
 5523 22bf 0F82BB00 		jb	.L489	#,
 5523      0000
 408:sieve_extend.c **** 
 5524              		.loc 1 408 9 is_stmt 1 view .LVU1830
 5525              	.LVL255:
 5526              	.LBB368:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5527              		.loc 2 31 1 view .LVU1831
 5528              	.LBB361:
 5529              		.loc 2 34 3 view .LVU1832
 5530              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5531              		.loc 2 34 10 is_stmt 0 view .LVU1833
 5532 22c5 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
 5532      00
 5533 22ca 4C89F2   		mov	rdx, r14	#, memsize
 5534 22cd 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.345
 5534      50
 5535 22d2 4C89FE   		mov	rsi, r15	#, _48
 5536 22d5 E8000000 		call	memcpy@PLT	#
 5536      00
 5537              	.LVL256:
 5538              		.loc 2 34 10 view .LVU1834
 5539              	.LBE361:
 5540              	.LBE368:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5541              		.loc 1 407 54 is_stmt 1 view .LVU1835
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5542              		.loc 1 407 11 view .LVU1836
 5543 22da 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5543      50
 5544 22df 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.345,
 5545              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5546              		.loc 1 407 5 is_stmt 0 view .LVU1837
 5547 22e3 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.345
 5548 22e6 0F829400 		jb	.L489	#,
 5548      0000
 408:sieve_extend.c **** 
 5549              		.loc 1 408 9 is_stmt 1 view .LVU1838
 5550              	.LVL257:
 5551              	.LBB369:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5552              		.loc 2 31 1 view .LVU1839
 5553              	.LBB362:
 5554              		.loc 2 34 3 view .LVU1840
 5555              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5556              		.loc 2 34 10 is_stmt 0 view .LVU1841
 5557 22ec 4C89F2   		mov	rdx, r14	#, memsize
 5558 22ef 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 5558      00
 5559 22f4 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.345
GAS LISTING /tmp/ccFOD2R4.s 			page 153


 5559      50
 5560 22f9 4C89FE   		mov	rsi, r15	#, _48
 5561 22fc E8000000 		call	memcpy@PLT	#
 5561      00
 5562              	.LVL258:
 5563              		.loc 2 34 10 view .LVU1842
 5564              	.LBE362:
 5565              	.LBE369:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5566              		.loc 1 407 54 is_stmt 1 view .LVU1843
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5567              		.loc 1 407 11 view .LVU1844
 5568 2301 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5568      50
 5569 2306 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.345,
 5570              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5571              		.loc 1 407 5 is_stmt 0 view .LVU1845
 5572 230a 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.345
 5573 230d 7271     		jb	.L489	#,
 408:sieve_extend.c **** 
 5574              		.loc 1 408 9 is_stmt 1 view .LVU1846
 5575              	.LVL259:
 5576              	.LBB370:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5577              		.loc 2 31 1 view .LVU1847
 5578              	.LBB363:
 5579              		.loc 2 34 3 view .LVU1848
 5580              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5581              		.loc 2 34 10 is_stmt 0 view .LVU1849
 5582 230f 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 5582      00
 5583 2314 4C89FE   		mov	rsi, r15	#, _48
 5584 2317 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.345
 5584      50
 5585 231c 4C89F2   		mov	rdx, r14	#, memsize
 5586 231f E8000000 		call	memcpy@PLT	#
 5586      00
 5587              	.LVL260:
 5588              		.loc 2 34 10 view .LVU1850
 5589              	.LBE363:
 5590              	.LBE370:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5591              		.loc 1 407 54 is_stmt 1 view .LVU1851
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5592              		.loc 1 407 11 view .LVU1852
 5593 2324 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5593      50
 5594 2329 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.345,
 5595              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5596              		.loc 1 407 5 is_stmt 0 view .LVU1853
 5597 232d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.345
 5598 2330 724E     		jb	.L489	#,
 408:sieve_extend.c **** 
 5599              		.loc 1 408 9 is_stmt 1 view .LVU1854
 5600              	.LVL261:
GAS LISTING /tmp/ccFOD2R4.s 			page 154


 5601              	.LBB371:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5602              		.loc 2 31 1 view .LVU1855
 5603              	.LBB364:
 5604              		.loc 2 34 3 view .LVU1856
 5605              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5606              		.loc 2 34 10 is_stmt 0 view .LVU1857
 5607 2332 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
 5607      00
 5608 2337 4C89F2   		mov	rdx, r14	#, memsize
 5609 233a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.345
 5609      50
 5610 233f 4C89FE   		mov	rsi, r15	#, _48
 5611 2342 E8000000 		call	memcpy@PLT	#
 5611      00
 5612              	.LVL262:
 5613              		.loc 2 34 10 view .LVU1858
 5614              	.LBE364:
 5615              	.LBE371:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5616              		.loc 1 407 54 is_stmt 1 view .LVU1859
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5617              		.loc 1 407 11 view .LVU1860
 5618 2347 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5618      50
 5619 234c 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.345,
 5620              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5621              		.loc 1 407 5 is_stmt 0 view .LVU1861
 5622 2350 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.345
 5623 2353 722B     		jb	.L489	#,
 408:sieve_extend.c **** 
 5624              		.loc 1 408 9 is_stmt 1 view .LVU1862
 5625              	.LVL263:
 5626              	.LBB372:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5627              		.loc 2 31 1 view .LVU1863
 5628              	.LBB365:
 5629              		.loc 2 34 3 view .LVU1864
 5630              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5631              		.loc 2 34 10 is_stmt 0 view .LVU1865
 5632 2355 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 5632      00
 5633 235a 4C89F2   		mov	rdx, r14	#, memsize
 5634 235d 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.345
 5634      50
 5635 2362 4C89FE   		mov	rsi, r15	#, _48
 5636 2365 E8000000 		call	memcpy@PLT	#
 5636      00
 5637              	.LVL264:
 5638              		.loc 2 34 10 view .LVU1866
 5639              	.LBE365:
 5640              	.LBE372:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5641              		.loc 1 407 54 is_stmt 1 view .LVU1867
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5642              		.loc 1 407 11 view .LVU1868
GAS LISTING /tmp/ccFOD2R4.s 			page 155


 5643 236a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.345, %sfp
 5643      50
 5644              	.LVL265:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5645              		.loc 1 407 11 is_stmt 0 view .LVU1869
 5646 236f 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.345,
 5647              	.LVL266:
 5648              	# sieve_extend.c:407:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5649              		.loc 1 407 5 view .LVU1870
 5650 2373 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.345
 5651 2376 0F83D4FE 		jnb	.L343	#,
 5651      FFFF
 5652              	.LVL267:
 5653 237c 0F1F4000 		.p2align 4
 5654              		.p2align 3
 5655              	.L489:
 407:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 5656              		.loc 1 407 5 view .LVU1871
 5657 2380 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.284, %sfp
 5657      48
 5658              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5659              		.loc 1 411 5 view .LVU1872
 5660 2385 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.285
 5660      58
 5661 238a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitstorage, %sfp
 5661      40
 5662              	.LVL268:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5663              		.loc 1 411 11 is_stmt 1 view .LVU1873
 5664              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5665              		.loc 1 411 5 is_stmt 0 view .LVU1874
 5666 238f 0F827402 		jb	.L502	#,
 5666      0000
 5667              	.LVL269:
 5668              	.L342:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5669              		.loc 1 411 5 view .LVU1875
 5670 2395 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.279,
 5671 2399 41B80500 		mov	r8d, 5	# tmp778,
 5671      0000
 5672 239f 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 5672      58
 5673              	.LVL270:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5674              		.loc 1 411 5 view .LVU1876
 5675 23a4 4989FD   		mov	r13, rdi	# tmp775, vectp.279
 5676 23a7 49C1ED03 		shr	r13, 3	# tmp775,
 5677 23ab 49F7DD   		neg	r13	# tmp776
 5678 23ae 4183E503 		and	r13d, 3	# prolog_loop_niters.280,
 5679 23b2 4D8D7E01 		lea	r15, 1[r14]	# _49,
 5680 23b6 498D7503 		lea	rsi, 3[r13]	# tmp777,
 5681 23ba 4883FE05 		cmp	rsi, 5	# tmp777,
 5682 23be 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 5683 23c2 4929CE   		sub	r14, rcx	# tmp779, tmp.285
GAS LISTING /tmp/ccFOD2R4.s 			page 156


 5684 23c5 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 5685 23c8 0F87BA01 		ja	.L345	#,
 5685      0000
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5686              		.loc 1 411 5 view .LVU1877
 5687 23ce 4D85ED   		test	r13, r13	# prolog_loop_niters.280
 5688 23d1 0F846902 		je	.L353	#,
 5688      0000
 412:sieve_extend.c **** 
 5689              		.loc 1 412 9 is_stmt 1 view .LVU1878
 5690              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5691              		.loc 1 412 43 is_stmt 0 view .LVU1879
 5692 23d7 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.279_198]
 5693 23da 4983FD01 		cmp	r13, 1	# prolog_loop_niters.280,
 5694              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5695              		.loc 1 411 57 view .LVU1880
 5696 23de 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
 5697              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5698              		.loc 1 411 71 view .LVU1881
 5699 23e2 4D8D7424 		lea	r14, 1[r12]	# source_word,
 5699      01
 5700              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5701              		.loc 1 412 31 view .LVU1882
 5702 23e7 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5703              		.loc 1 411 48 is_stmt 1 view .LVU1883
 5704              	.LVL271:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5705              		.loc 1 411 11 view .LVU1884
 5706 23eb 7428     		je	.L346	#,
 412:sieve_extend.c **** 
 5707              		.loc 1 412 9 view .LVU1885
 5708              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5709              		.loc 1 412 43 is_stmt 0 view .LVU1886
 5710 23ed 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 5711 23f1 4983FD03 		cmp	r13, 3	# prolog_loop_niters.280,
 5712              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5713              		.loc 1 411 71 view .LVU1887
 5714 23f5 4D8D7424 		lea	r14, 2[r12]	# source_word,
 5714      02
 5715              	.LVL272:
 5716              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5717              		.loc 1 412 31 view .LVU1888
 5718 23fa 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5719              		.loc 1 411 48 is_stmt 1 view .LVU1889
 5720              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5721              		.loc 1 411 57 is_stmt 0 view .LVU1890
 5722 23fe 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
GAS LISTING /tmp/ccFOD2R4.s 			page 157


 5723              	.LVL273:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5724              		.loc 1 411 11 is_stmt 1 view .LVU1891
 5725 2402 7511     		jne	.L346	#,
 412:sieve_extend.c **** 
 5726              		.loc 1 412 9 view .LVU1892
 5727              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5728              		.loc 1 412 43 is_stmt 0 view .LVU1893
 5729 2404 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
 5730              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5731              		.loc 1 411 71 view .LVU1894
 5732 2408 4D8D7424 		lea	r14, 3[r12]	# source_word,
 5732      03
 5733              	.LVL274:
 5734              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5735              		.loc 1 412 31 view .LVU1895
 5736 240d 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5737              		.loc 1 411 48 is_stmt 1 view .LVU1896
 5738              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5739              		.loc 1 411 57 is_stmt 0 view .LVU1897
 5740 2411 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 5741              	.LVL275:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5742              		.loc 1 411 11 is_stmt 1 view .LVU1898
 5743              	.L346:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5744              		.loc 1 411 11 is_stmt 0 view .LVU1899
 5745 2415 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.280
 5746 2418 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.280
 5747 241b 4929CF   		sub	r15, rcx	# niters.281, tmp.285
 5748 241e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.280
 5749 2421 4C89FF   		mov	rdi, r15	# bnd.282, niters.281
 5750              	# sieve_extend.c:403:     source_word = copy_word - size; // recalibrate
 403:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 5751              		.loc 1 403 17 view .LVU1900
 5752 2424 31F6     		xor	esi, esi	# ivtmp.337
 5753 2426 48C1EF02 		shr	rdi, 2	# bnd.282,
 5754 242a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.287,
 5755 242e 48C1E705 		sal	rdi, 5	# _635,
 5756 2432 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.290,
 5757 2436 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 5758 243a 49C1ED05 		shr	r13, 5	# tmp791,
 5759 243e 4983C501 		add	r13, 1	# tmp794,
 5760 2442 4183E507 		and	r13d, 7	# tmp795,
 5761 2446 0F849600 		je	.L348	#,
 5761      0000
 5762 244c 4983FD01 		cmp	r13, 1	# tmp795,
 5763 2450 7478     		je	.L439	#,
 5764 2452 4983FD02 		cmp	r13, 2	# tmp795,
 5765 2456 7463     		je	.L440	#,
 5766 2458 4983FD03 		cmp	r13, 3	# tmp795,
 5767 245c 744E     		je	.L441	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 158


 5768 245e 4983FD04 		cmp	r13, 4	# tmp795,
 5769 2462 7439     		je	.L442	#,
 5770 2464 4983FD05 		cmp	r13, 5	# tmp795,
 5771 2468 7424     		je	.L443	#,
 5772 246a 4983FD06 		cmp	r13, 6	# tmp795,
 5773 246e 740F     		je	.L444	#,
 5774              	.LVL276:
 412:sieve_extend.c **** 
 5775              		.loc 1 412 9 is_stmt 1 view .LVU1901
 5776              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5777              		.loc 1 412 31 is_stmt 0 view .LVU1902
 5778 2470 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.287_120, index: ivtmp.337_513, offset:
 5778      1424
 5779 2476 BE200000 		mov	esi, 32	# ivtmp.337,
 5779      00
 5780 247b C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], tmp1
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5781              		.loc 1 411 48 is_stmt 1 view .LVU1903
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5782              		.loc 1 411 11 view .LVU1904
 5783              	.L444:
 412:sieve_extend.c **** 
 5784              		.loc 1 412 9 view .LVU1905
 5785              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5786              		.loc 1 412 31 is_stmt 0 view .LVU1906
 5787 247f C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.287_120, index: ivtmp.337_513, off
 5787      1C34
 5788 2485 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], 
 5788      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5789              		.loc 1 411 48 is_stmt 1 view .LVU1907
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5790              		.loc 1 411 11 view .LVU1908
 5791 248a 4883C620 		add	rsi, 32	# ivtmp.337,
 5792              	.L443:
 412:sieve_extend.c **** 
 5793              		.loc 1 412 9 view .LVU1909
 5794              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5795              		.loc 1 412 31 is_stmt 0 view .LVU1910
 5796 248e C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.287_120, index: ivtmp.337_513, off
 5796      3434
 5797 2494 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], 
 5797      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5798              		.loc 1 411 48 is_stmt 1 view .LVU1911
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5799              		.loc 1 411 11 view .LVU1912
 5800 2499 4883C620 		add	rsi, 32	# ivtmp.337,
 5801              	.L442:
 412:sieve_extend.c **** 
 5802              		.loc 1 412 9 view .LVU1913
 5803              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5804              		.loc 1 412 31 is_stmt 0 view .LVU1914
GAS LISTING /tmp/ccFOD2R4.s 			page 159


 5805 249d C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.287_120, index: ivtmp.337_513, offs
 5805      2434
 5806 24a3 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], t
 5806      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5807              		.loc 1 411 48 is_stmt 1 view .LVU1915
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5808              		.loc 1 411 11 view .LVU1916
 5809 24a8 4883C620 		add	rsi, 32	# ivtmp.337,
 5810              	.L441:
 412:sieve_extend.c **** 
 5811              		.loc 1 412 9 view .LVU1917
 5812              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5813              		.loc 1 412 31 is_stmt 0 view .LVU1918
 5814 24ac C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.287_120, index: ivtmp.337_513, off
 5814      3C34
 5815 24b2 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], 
 5815      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5816              		.loc 1 411 48 is_stmt 1 view .LVU1919
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5817              		.loc 1 411 11 view .LVU1920
 5818 24b7 4883C620 		add	rsi, 32	# ivtmp.337,
 5819              	.L440:
 412:sieve_extend.c **** 
 5820              		.loc 1 412 9 view .LVU1921
 5821              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5822              		.loc 1 412 31 is_stmt 0 view .LVU1922
 5823 24bb C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.287_120, index: ivtmp.337_513, offs
 5823      0C34
 5824 24c1 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], t
 5824      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5825              		.loc 1 411 48 is_stmt 1 view .LVU1923
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5826              		.loc 1 411 11 view .LVU1924
 5827 24c6 4883C620 		add	rsi, 32	# ivtmp.337,
 5828              	.L439:
 412:sieve_extend.c **** 
 5829              		.loc 1 412 9 view .LVU1925
 5830              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5831              		.loc 1 412 31 is_stmt 0 view .LVU1926
 5832 24ca C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.287_120, index: ivtmp.337_513, offs
 5832      0434
 5833 24d0 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], t
 5833      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5834              		.loc 1 411 48 is_stmt 1 view .LVU1927
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5835              		.loc 1 411 11 view .LVU1928
 5836 24d5 4883C620 		add	rsi, 32	# ivtmp.337,
 5837 24d9 4839FE   		cmp	rsi, rdi	# ivtmp.337, _635
 5838 24dc 0F848E00 		je	.L478	#,
 5838      0000
GAS LISTING /tmp/ccFOD2R4.s 			page 160


 5839              	.L348:
 412:sieve_extend.c **** 
 5840              		.loc 1 412 9 discriminator 2 view .LVU1929
 5841              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5842              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1930
 5843 24e2 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.287_120, index: ivtmp.337_513, offs
 5843      0434
 5844 24e8 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B], t
 5844      31
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5845              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1931
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5846              		.loc 1 411 11 discriminator 2 view .LVU1932
 412:sieve_extend.c **** 
 5847              		.loc 1 412 9 discriminator 2 view .LVU1933
 5848              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5849              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1934
 5850 24ed C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.287_120, index: ivtmp.337_513, of
 5850      6C3420
 5851 24f4 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B],
 5851      3120
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5852              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1935
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5853              		.loc 1 411 11 discriminator 2 view .LVU1936
 412:sieve_extend.c **** 
 5854              		.loc 1 412 9 discriminator 2 view .LVU1937
 5855              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5856              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1938
 5857 24fa C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.287_120, index: ivtmp.337_513, of
 5857      4C3440
 5858 2501 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B],
 5858      3140
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5859              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1939
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5860              		.loc 1 411 11 discriminator 2 view .LVU1940
 412:sieve_extend.c **** 
 5861              		.loc 1 412 9 discriminator 2 view .LVU1941
 5862              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5863              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1942
 5864 2507 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.287_120, index: ivtmp.337_513, of
 5864      7C3460
 5865 250e C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B],
 5865      3160
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5866              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1943
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5867              		.loc 1 411 11 discriminator 2 view .LVU1944
 412:sieve_extend.c **** 
 5868              		.loc 1 412 9 discriminator 2 view .LVU1945
 5869              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 161


 5870              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1946
 5871 2514 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.287_120, index: ivtmp.337_513, o
 5871      94348000 
 5871      0000
 5872 251e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B]
 5872      31800000 
 5872      00
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5873              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1947
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5874              		.loc 1 411 11 discriminator 2 view .LVU1948
 412:sieve_extend.c **** 
 5875              		.loc 1 412 9 discriminator 2 view .LVU1949
 5876              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5877              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1950
 5878 2527 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.287_120, index: ivtmp.337_513, o
 5878      B434A000 
 5878      0000
 5879 2531 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B]
 5879      31A00000 
 5879      00
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5880              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1951
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5881              		.loc 1 411 11 discriminator 2 view .LVU1952
 412:sieve_extend.c **** 
 5882              		.loc 1 412 9 discriminator 2 view .LVU1953
 5883              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5884              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1954
 5885 253a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.287_120, index: ivtmp.337_513, o
 5885      9C34C000 
 5885      0000
 5886 2544 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B]
 5886      31C00000 
 5886      00
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5887              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1955
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5888              		.loc 1 411 11 discriminator 2 view .LVU1956
 412:sieve_extend.c **** 
 5889              		.loc 1 412 9 discriminator 2 view .LVU1957
 5890              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5891              		.loc 1 412 31 is_stmt 0 discriminator 2 view .LVU1958
 5892 254d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.287_120, index: ivtmp.337_513, 
 5892      A434E000 
 5892      0000
 5893 2557 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.290_97, index: ivtmp.337_513, offset: 0B
 5893      31E00000 
 5893      00
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5894              		.loc 1 411 48 is_stmt 1 discriminator 2 view .LVU1959
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5895              		.loc 1 411 11 discriminator 2 view .LVU1960
 5896 2560 4881C600 		add	rsi, 256	# ivtmp.337,
GAS LISTING /tmp/ccFOD2R4.s 			page 162


 5896      010000
 5897 2567 4839FE   		cmp	rsi, rdi	# ivtmp.337, _635
 5898 256a 0F8572FF 		jne	.L348	#,
 5898      FFFF
 5899              	.L478:
 5900 2570 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.283, niters.281
 5901 2573 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.283,
 5902 2577 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.283, niters.281
 5903 257a 4F8D2430 		lea	r12, [r8+r14]	# tmp.284,
 5904 257e 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.285,
 5905 2582 0F849000 		je	.L501	#,
 5905      0000
 5906              	.L345:
 5907              	.LVL277:
 412:sieve_extend.c **** 
 5908              		.loc 1 412 9 view .LVU1961
 5909              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5910              		.loc 1 411 5 is_stmt 0 view .LVU1962
 5911 2588 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 5911      58
 5912              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5913              		.loc 1 411 57 view .LVU1963
 5914 258d 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 5915              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5916              		.loc 1 412 43 view .LVU1964
 5917 2591 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
 5918              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5919              		.loc 1 411 71 view .LVU1965
 5920 2595 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 5920      01
 5921              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5922              		.loc 1 411 5 view .LVU1966
 5923 259a 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 5924              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5925              		.loc 1 412 31 view .LVU1967
 5926 259d 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5927              		.loc 1 411 48 is_stmt 1 view .LVU1968
 5928              	.LVL278:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5929              		.loc 1 411 11 view .LVU1969
 5930              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5931              		.loc 1 411 5 is_stmt 0 view .LVU1970
 5932 25a1 7275     		jb	.L501	#,
 412:sieve_extend.c **** 
 5933              		.loc 1 412 9 is_stmt 1 view .LVU1971
 5934              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5935              		.loc 1 412 43 is_stmt 0 view .LVU1972
 5936 25a3 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
GAS LISTING /tmp/ccFOD2R4.s 			page 163


 5937              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5938              		.loc 1 411 57 view .LVU1973
 5939 25a7 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 5940              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5941              		.loc 1 411 5 view .LVU1974
 5942 25ab 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
 5943              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5944              		.loc 1 411 71 view .LVU1975
 5945 25ae 498D4424 		lea	rax, 2[r12]	# source_word,
 5945      02
 5946              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5947              		.loc 1 412 31 view .LVU1976
 5948 25b3 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5949              		.loc 1 411 48 is_stmt 1 view .LVU1977
 5950              	.LVL279:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5951              		.loc 1 411 11 view .LVU1978
 5952              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5953              		.loc 1 411 5 is_stmt 0 view .LVU1979
 5954 25b7 725F     		jb	.L501	#,
 412:sieve_extend.c **** 
 5955              		.loc 1 412 9 is_stmt 1 view .LVU1980
 5956              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5957              		.loc 1 412 43 is_stmt 0 view .LVU1981
 5958 25b9 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 5959              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5960              		.loc 1 411 57 view .LVU1982
 5961 25bd 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 5962              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5963              		.loc 1 411 5 view .LVU1983
 5964 25c1 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 5965              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5966              		.loc 1 411 71 view .LVU1984
 5967 25c4 498D7424 		lea	rsi, 3[r12]	# source_word,
 5967      03
 5968              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5969              		.loc 1 412 31 view .LVU1985
 5970 25c9 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5971              		.loc 1 411 48 is_stmt 1 view .LVU1986
 5972              	.LVL280:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5973              		.loc 1 411 11 view .LVU1987
 5974              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5975              		.loc 1 411 5 is_stmt 0 view .LVU1988
GAS LISTING /tmp/ccFOD2R4.s 			page 164


 5976 25cd 7249     		jb	.L501	#,
 412:sieve_extend.c **** 
 5977              		.loc 1 412 9 is_stmt 1 view .LVU1989
 5978              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5979              		.loc 1 412 43 is_stmt 0 view .LVU1990
 5980 25cf 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 5981              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5982              		.loc 1 411 57 view .LVU1991
 5983 25d3 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 5984              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5985              		.loc 1 411 71 view .LVU1992
 5986 25d7 4983C404 		add	r12, 4	# source_word,
 5987              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5988              		.loc 1 411 5 view .LVU1993
 5989 25db 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
 5990              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 5991              		.loc 1 412 31 view .LVU1994
 5992 25de 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5993              		.loc 1 411 48 is_stmt 1 view .LVU1995
 5994              	.LVL281:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5995              		.loc 1 411 11 view .LVU1996
 5996              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5997              		.loc 1 411 5 is_stmt 0 view .LVU1997
 5998 25e2 7734     		ja	.L501	#,
 412:sieve_extend.c **** 
 5999              		.loc 1 412 9 is_stmt 1 view .LVU1998
 6000              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 6001              		.loc 1 412 43 is_stmt 0 view .LVU1999
 6002 25e4 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 6002      00000000 
 6003              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6004              		.loc 1 411 57 view .LVU2000
 6005 25ec 4883C105 		add	rcx, 5	# copy_word,
 6006              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 6007              		.loc 1 412 43 view .LVU2001
 6008 25f0 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 6009              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6010              		.loc 1 411 5 view .LVU2002
 6011 25f4 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 6012              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 6013              		.loc 1 412 31 view .LVU2003
 6014 25f7 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6015              		.loc 1 411 48 is_stmt 1 view .LVU2004
GAS LISTING /tmp/ccFOD2R4.s 			page 165


 6016              	.LVL282:
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6017              		.loc 1 411 11 view .LVU2005
 6018              	# sieve_extend.c:411:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6019              		.loc 1 411 5 is_stmt 0 view .LVU2006
 6020 25fb 721B     		jb	.L501	#,
 412:sieve_extend.c **** 
 6021              		.loc 1 412 9 is_stmt 1 view .LVU2007
 6022              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 6023              		.loc 1 412 43 is_stmt 0 view .LVU2008
 6024 25fd 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 6024      08
 6025              	# sieve_extend.c:412:         bitstorage[copy_word] = bitstorage[source_word];
 412:sieve_extend.c **** 
 6026              		.loc 1 412 31 view .LVU2009
 6027 2602 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6028              		.loc 1 411 48 is_stmt 1 view .LVU2010
 411:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 6029              		.loc 1 411 11 view .LVU2011
 6030 2606 C5F877   		vzeroupper
 6031              	.L502:
 6032              	# sieve_extend.c:415:  }
 415:sieve_extend.c **** 
 6033              		.loc 1 415 2 is_stmt 0 view .LVU2012
 6034 2609 488D65D8 		lea	rsp, -40[rbp]	#,
 6035              	.LVL283:
 415:sieve_extend.c **** 
 6036              		.loc 1 415 2 view .LVU2013
 6037 260d 5B       		pop	rbx	#
 6038 260e 415C     		pop	r12	#
 6039 2610 415D     		pop	r13	#
 6040 2612 415E     		pop	r14	#
 6041 2614 415F     		pop	r15	#
 6042 2616 5D       		pop	rbp	#
 6043              		.cfi_remember_state
 6044              		.cfi_def_cfa 7, 8
 6045              	.LVL284:
 415:sieve_extend.c **** 
 6046              		.loc 1 415 2 view .LVU2014
 6047 2617 C3       		ret	
 6048              	.LVL285:
 6049              		.p2align 4,,7
 6050              		.p2align 3
 6051              	.L501:
 6052              		.cfi_restore_state
 415:sieve_extend.c **** 
 6053              		.loc 1 415 2 view .LVU2015
 6054 2618 C5F877   		vzeroupper
 6055 261b 488D65D8 		lea	rsp, -40[rbp]	#,
 6056              	.LVL286:
 415:sieve_extend.c **** 
 6057              		.loc 1 415 2 view .LVU2016
 6058 261f 5B       		pop	rbx	#
 6059 2620 415C     		pop	r12	#
GAS LISTING /tmp/ccFOD2R4.s 			page 166


 6060 2622 415D     		pop	r13	#
 6061 2624 415E     		pop	r14	#
 6062 2626 415F     		pop	r15	#
 6063 2628 5D       		pop	rbp	#
 6064              		.cfi_remember_state
 6065              		.cfi_def_cfa 7, 8
 6066              	.LVL287:
 415:sieve_extend.c **** 
 6067              		.loc 1 415 2 view .LVU2017
 6068 2629 C3       		ret	
 6069              	.LVL288:
 6070 262a 660F1F44 		.p2align 4,,7
 6070      0000
 6071              		.p2align 3
 6072              	.L352:
 6073              		.cfi_restore_state
 6074              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6075              		.loc 1 397 5 view .LVU2018
 6076 2630 4D89EE   		mov	r14, r13	# copy_word, tmp.298
 6077              	# sieve_extend.c:391:     source_word += distance;
 391:sieve_extend.c ****     copy_word += distance;
 6078              		.loc 1 391 17 view .LVU2019
 6079 2633 4D89E2   		mov	r10, r12	# source_word, tmp.297
 6080 2636 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6080      01
 6081 263b E92DF8FF 		jmp	.L337	#
 6081      FF
 6082              	.LVL289:
 6083              		.p2align 4,,7
 6084              		.p2align 3
 6085              	.L353:
 6086              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6087              		.loc 1 397 5 view .LVU2020
 6088 2640 4989CB   		mov	r11, rcx	# copy_word, tmp.285
 6089              	# sieve_extend.c:403:     source_word = copy_word - size; // recalibrate
 403:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6090              		.loc 1 403 17 view .LVU2021
 6091 2643 4D89E6   		mov	r14, r12	# source_word, tmp.284
 6092 2646 E9CAFDFF 		jmp	.L346	#
 6092      FF
 6093              	.LVL290:
 6094 264b 0F1F4400 		.p2align 4,,7
 6094      00
 6095              		.p2align 3
 6096              	.L504:
 398:sieve_extend.c ****     }
 6097              		.loc 1 398 9 is_stmt 1 view .LVU2022
 6098              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 6099              		.loc 1 398 60 is_stmt 0 view .LVU2023
 6100 2650 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.300_257, index: ivtmp.350_731, offset: 
 6100      1B
 6101 2655 B8200000 		mov	eax, 32	# ivtmp.350,
 6101      00
 6102              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccFOD2R4.s 			page 167


 398:sieve_extend.c ****     }
 6103              		.loc 1 398 100 view .LVU2024
 6104 265a C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.304_264, index: ivtmp.350_731, offset: 
 6105              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 6106              		.loc 1 398 60 view .LVU2025
 6107 265e C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.302, tmp1260, _12
 6107      D2
 6108              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 6109              		.loc 1 398 100 view .LVU2026
 6110 2663 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.306, tmp1261, _18
 6110      F3
 6111              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 6112              		.loc 1 398 70 view .LVU2027
 6113 2668 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.307, vect__38.302, vect__43.306
 6114              	# sieve_extend.c:398:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 398:sieve_extend.c ****     }
 6115              		.loc 1 398 31 view .LVU2028
 6116 266c C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.309_273, index: ivtmp.350_731, offset: 0B], vect
 6116      21
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6117              		.loc 1 397 43 is_stmt 1 view .LVU2029
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6118              		.loc 1 397 11 view .LVU2030
 6119 2671 E972F8FF 		jmp	.L437	#
 6119      FF
 6120              	.LVL291:
 6121              		.p2align 4,,7
 6122 2676 6690     		.p2align 3
 6123              	.L330:
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6124              		.loc 1 397 11 is_stmt 0 view .LVU2031
 6125 2678 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6125      30
 6126 267d 4D89E8   		mov	r8, r13	# tmp804, tmp.298
 6127 2680 49F7D0   		not	r8	# tmp804
 6128 2683 4801D9   		add	rcx, rbx	# ivtmp.365, bitstorage
 6129              	.LBB373:
 6130              	.LBB354:
 6131              	.LBB343:
 6132              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6133              		.loc 1 363 44 view .LVU2032
 6134 2686 4489F8   		mov	eax, r15d	# tmp1194, _12
 6135              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6136              		.loc 1 363 65 view .LVU2033
 6137 2689 89D7     		mov	edi, edx	# tmp1195, _18
 6138 268b 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 6139              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6140              		.loc 1 363 44 view .LVU2034
 6141 268e C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 6141      01
 6142              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
GAS LISTING /tmp/ccFOD2R4.s 			page 168


 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6143              		.loc 1 362 19 view .LVU2035
 6144 2693 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 6145              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6146              		.loc 1 363 65 view .LVU2036
 6147 2697 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 6147      FE
 6148 269c 49D1E8   		shr	r8	# tmp803
 6149              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6150              		.loc 1 363 54 view .LVU2037
 6151 269f 4809F8   		or	rax, rdi	# tmp692, tmp691
 6152              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6153              		.loc 1 366 19 view .LVU2038
 6154 26a2 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 6155              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6156              		.loc 1 363 65 view .LVU2039
 6157 26a6 4189D2   		mov	r10d, edx	# _18, shift_flipped
 6158 26a9 49F7D3   		not	r11	# tmp790
 6159 26ac 4183E003 		and	r8d, 3	# tmp806,
 6160              	.LVL292:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6161              		.loc 1 361 9 is_stmt 1 view .LVU2040
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6162              		.loc 1 362 9 view .LVU2041
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6163              		.loc 1 363 9 view .LVU2042
 6164              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6165              		.loc 1 363 54 is_stmt 0 view .LVU2043
 6166 26b0 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6167              	.LVL293:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6168              		.loc 1 364 9 is_stmt 1 view .LVU2044
 365:sieve_extend.c ****         copy_word += 2;
 6169              		.loc 1 365 9 view .LVU2045
 6170              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6171              		.loc 1 363 44 is_stmt 0 view .LVU2046
 6172 26b4 4589F9   		mov	r9d, r15d	# _12, shift
 6173              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6174              		.loc 1 365 65 view .LVU2047
 6175 26b7 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 6175      4110
 6176              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6177              		.loc 1 365 44 view .LVU2048
 6178 26bd C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 6178      F6
 6179              	.LVL294:
 6180              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6181              		.loc 1 365 54 view .LVU2049
GAS LISTING /tmp/ccFOD2R4.s 			page 169


 6182 26c2 4809C6   		or	rsi, rax	# tmp696, tmp693
 6183              	.LBE343:
 6184              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6185              		.loc 1 360 11 view .LVU2050
 6186 26c5 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 6187 26c8 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 6188 26cc 488D4110 		lea	rax, 16[rcx]	# ivtmp.365,
 6189              	.LBB344:
 6190              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6191              		.loc 1 365 54 view .LVU2051
 6192 26d0 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 6192      08
 6193              	.LVL295:
 366:sieve_extend.c ****         source_word += 2;
 6194              		.loc 1 366 9 is_stmt 1 view .LVU2052
 367:sieve_extend.c ****         distance += 2;
 6195              		.loc 1 367 9 view .LVU2053
 368:sieve_extend.c ****     }
 6196              		.loc 1 368 9 view .LVU2054
 368:sieve_extend.c ****     }
 6197              		.loc 1 368 9 is_stmt 0 view .LVU2055
 6198              	.LBE344:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6199              		.loc 1 360 11 is_stmt 1 view .LVU2056
 6200 26d5 0F86B3F6 		jbe	.L334	#,
 6200      FFFF
 6201 26db 4D85C0   		test	r8, r8	# tmp806
 6202 26de 0F849700 		je	.L492	#,
 6202      0000
 6203 26e4 4983F801 		cmp	r8, 1	# tmp806,
 6204 26e8 7446     		je	.L451	#,
 6205 26ea 4983F802 		cmp	r8, 2	# tmp806,
 6206 26ee 0F857401 		jne	.L505	#,
 6206      0000
 6207              	.LVL296:
 6208              	.L452:
 6209              	.LBB345:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6210              		.loc 1 361 9 view .LVU2057
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6211              		.loc 1 362 9 view .LVU2058
 6212              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6213              		.loc 1 362 19 is_stmt 0 view .LVU2059
 6214 26f4 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6215              		.loc 1 363 9 is_stmt 1 view .LVU2060
 6216              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6217              		.loc 1 363 44 is_stmt 0 view .LVU2061
 6218 26f8 4489F9   		mov	ecx, r15d	# tmp1278, _12
 6219              	.LVL297:
 6220              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6221              		.loc 1 363 65 view .LVU2062
GAS LISTING /tmp/ccFOD2R4.s 			page 170


 6222 26fb 4189D0   		mov	r8d, edx	# tmp1279, _18
 6223              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6224              		.loc 1 363 44 view .LVU2063
 6225 26fe C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 6225      08
 6226              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6227              		.loc 1 363 65 view .LVU2064
 6228 2703 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
 6228      CE
 6229              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6230              		.loc 1 363 54 view .LVU2065
 6231 2708 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 6232              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6233              		.loc 1 363 44 view .LVU2066
 6234 270b 4589FA   		mov	r10d, r15d	# _12, shift
 6235              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6236              		.loc 1 363 65 view .LVU2067
 6237 270e 4189D6   		mov	r14d, edx	# _18, shift_flipped
 6238              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6239              		.loc 1 363 54 view .LVU2068
 6240 2711 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6241              	.LVL298:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6242              		.loc 1 364 9 is_stmt 1 view .LVU2069
 365:sieve_extend.c ****         copy_word += 2;
 6243              		.loc 1 365 9 view .LVU2070
 6244              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6245              		.loc 1 365 44 is_stmt 0 view .LVU2071
 6246 2715 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 6246      F6
 6247              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6248              		.loc 1 365 65 view .LVU2072
 6249 271a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 6249      4810
 6250              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6251              		.loc 1 365 54 view .LVU2073
 6252 2720 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 6253 2723 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 6253      08
 6254              	.LVL299:
 366:sieve_extend.c ****         source_word += 2;
 6255              		.loc 1 366 9 is_stmt 1 view .LVU2074
 6256 2728 4883C010 		add	rax, 16	# ivtmp.365,
 6257              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6258              		.loc 1 366 19 is_stmt 0 view .LVU2075
 6259 272c 4883C702 		add	rdi, 2	# copy_word,
 367:sieve_extend.c ****         distance += 2;
GAS LISTING /tmp/ccFOD2R4.s 			page 171


 6260              		.loc 1 367 9 is_stmt 1 view .LVU2076
 368:sieve_extend.c ****     }
 6261              		.loc 1 368 9 view .LVU2077
 368:sieve_extend.c ****     }
 6262              		.loc 1 368 9 is_stmt 0 view .LVU2078
 6263              	.LBE345:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6264              		.loc 1 360 11 is_stmt 1 view .LVU2079
 6265              	.LVL300:
 6266              	.L451:
 6267              	.LBB346:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6268              		.loc 1 361 9 view .LVU2080
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6269              		.loc 1 362 9 view .LVU2081
 6270              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6271              		.loc 1 362 19 is_stmt 0 view .LVU2082
 6272 2730 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6273              		.loc 1 363 9 is_stmt 1 view .LVU2083
 6274              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6275              		.loc 1 363 44 is_stmt 0 view .LVU2084
 6276 2734 4589F8   		mov	r8d, r15d	# tmp1282, _12
 6277              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6278              		.loc 1 363 65 view .LVU2085
 6279 2737 4189D1   		mov	r9d, edx	# tmp1283, _18
 6280              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6281              		.loc 1 363 44 view .LVU2086
 6282 273a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 6282      08
 6283              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6284              		.loc 1 363 65 view .LVU2087
 6285 273f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 6285      C6
 6286              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6287              		.loc 1 363 54 view .LVU2088
 6288 2744 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
 6289              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6290              		.loc 1 363 44 view .LVU2089
 6291 2747 4589FA   		mov	r10d, r15d	# _12, shift
 6292              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6293              		.loc 1 363 65 view .LVU2090
 6294 274a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 6295              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6296              		.loc 1 363 54 view .LVU2091
 6297 274d 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6298              	.LVL301:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/ccFOD2R4.s 			page 172


 6299              		.loc 1 364 9 is_stmt 1 view .LVU2092
 365:sieve_extend.c ****         copy_word += 2;
 6300              		.loc 1 365 9 view .LVU2093
 6301              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6302              		.loc 1 365 44 is_stmt 0 view .LVU2094
 6303 2751 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 6303      F6
 6304              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6305              		.loc 1 365 65 view .LVU2095
 6306 2756 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 6306      4810
 6307              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6308              		.loc 1 365 54 view .LVU2096
 6309 275c 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 6310 275f 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 6310      08
 6311              	.LVL302:
 366:sieve_extend.c ****         source_word += 2;
 6312              		.loc 1 366 9 is_stmt 1 view .LVU2097
 6313              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6314              		.loc 1 366 19 is_stmt 0 view .LVU2098
 6315 2764 4883C702 		add	rdi, 2	# copy_word,
 367:sieve_extend.c ****         distance += 2;
 6316              		.loc 1 367 9 is_stmt 1 view .LVU2099
 368:sieve_extend.c ****     }
 6317              		.loc 1 368 9 view .LVU2100
 6318 2768 4883C010 		add	rax, 16	# ivtmp.365,
 6319              	.LBE346:
 6320              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6321              		.loc 1 360 11 is_stmt 0 view .LVU2101
 6322 276c 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 6322      30
 6323 2771 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6324              		.loc 1 360 11 is_stmt 1 view .LVU2102
 6325 2775 0F8613F6 		jbe	.L334	#,
 6325      FFFF
 6326              	.LVL303:
 6327              	.L492:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6328              		.loc 1 360 11 is_stmt 0 view .LVU2103
 6329 277b 4489F9   		mov	ecx, r15d	# _12, shift
 6330 277e 4189D0   		mov	r8d, edx	# _18, shift_flipped
 6331 2781 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.297
 6331      38
 6332              	.LVL304:
 6333              	.L333:
 6334              	.LBB347:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6335              		.loc 1 361 9 is_stmt 1 view .LVU2104
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6336              		.loc 1 362 9 view .LVU2105
GAS LISTING /tmp/ccFOD2R4.s 			page 173


 6337              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6338              		.loc 1 362 19 is_stmt 0 view .LVU2106
 6339 2786 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6340              		.loc 1 363 9 is_stmt 1 view .LVU2107
 6341              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6342              		.loc 1 363 44 is_stmt 0 view .LVU2108
 6343 278a C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
 6343      08
 6344              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6345              		.loc 1 363 65 view .LVU2109
 6346 278f C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 6346      F4
 6347              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6348              		.loc 1 363 54 view .LVU2110
 6349 2794 4D09F1   		or	r9, r14	# tmp880, tmp879
 6350              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6351              		.loc 1 365 44 view .LVU2111
 6352 2797 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 6352      D4
 6353              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6354              		.loc 1 363 54 view .LVU2112
 6355 279c 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset:
 6356              	.LVL305:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6357              		.loc 1 364 9 is_stmt 1 view .LVU2113
 365:sieve_extend.c ****         copy_word += 2;
 6358              		.loc 1 365 9 view .LVU2114
 6359              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6360              		.loc 1 365 65 is_stmt 0 view .LVU2115
 6361 27a0 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 6361      7010
 6362              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6363              		.loc 1 365 54 view .LVU2116
 6364 27a6 4C09D6   		or	rsi, r10	# tmp884, tmp883
 6365 27a9 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 6365      08
 6366              	.LVL306:
 366:sieve_extend.c ****         source_word += 2;
 6367              		.loc 1 366 9 is_stmt 1 view .LVU2117
 6368              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6369              		.loc 1 366 19 is_stmt 0 view .LVU2118
 6370 27ae 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 367:sieve_extend.c ****         distance += 2;
 6371              		.loc 1 367 9 is_stmt 1 view .LVU2119
 368:sieve_extend.c ****     }
 6372              		.loc 1 368 9 view .LVU2120
 368:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 174


 6373              		.loc 1 368 9 is_stmt 0 view .LVU2121
 6374              	.LBE347:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6375              		.loc 1 360 11 is_stmt 1 view .LVU2122
 6376              	.LBB348:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6377              		.loc 1 361 9 view .LVU2123
 6378              	.LVL307:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6379              		.loc 1 362 9 view .LVU2124
 6380              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6381              		.loc 1 362 19 is_stmt 0 view .LVU2125
 6382 27b2 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6383              		.loc 1 363 9 is_stmt 1 view .LVU2126
 6384              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6385              		.loc 1 363 44 is_stmt 0 view .LVU2127
 6386 27b6 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 6386      7010
 6387              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6388              		.loc 1 363 65 view .LVU2128
 6389 27bc C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 6389      F1
 6390              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6391              		.loc 1 363 54 view .LVU2129
 6392 27c1 4C09F6   		or	rsi, r14	# tmp892, tmp891
 6393 27c4 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6394              	.LVL308:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6395              		.loc 1 364 9 is_stmt 1 view .LVU2130
 365:sieve_extend.c ****         copy_word += 2;
 6396              		.loc 1 365 9 view .LVU2131
 6397              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6398              		.loc 1 365 44 is_stmt 0 view .LVU2132
 6399 27c8 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 6399      C9
 6400              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6401              		.loc 1 365 65 view .LVU2133
 6402 27cd 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 6403 27d1 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 6403      F2
 6404              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6405              		.loc 1 365 54 view .LVU2134
 6406 27d6 4909F1   		or	r9, rsi	# tmp896, tmp894
 6407 27d9 4883C040 		add	rax, 64	# ivtmp.365,
 6408 27dd 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6408      08
 6409              	.LVL309:
 366:sieve_extend.c ****         source_word += 2;
 6410              		.loc 1 366 9 is_stmt 1 view .LVU2135
GAS LISTING /tmp/ccFOD2R4.s 			page 175


 6411              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6412              		.loc 1 366 19 is_stmt 0 view .LVU2136
 6413 27e2 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 367:sieve_extend.c ****         distance += 2;
 6414              		.loc 1 367 9 is_stmt 1 view .LVU2137
 368:sieve_extend.c ****     }
 6415              		.loc 1 368 9 view .LVU2138
 368:sieve_extend.c ****     }
 6416              		.loc 1 368 9 is_stmt 0 view .LVU2139
 6417              	.LBE348:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6418              		.loc 1 360 11 is_stmt 1 view .LVU2140
 6419              	.LBB349:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6420              		.loc 1 361 9 view .LVU2141
 6421              	.LVL310:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6422              		.loc 1 362 9 view .LVU2142
 6423              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6424              		.loc 1 362 19 is_stmt 0 view .LVU2143
 6425 27e6 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6426              		.loc 1 363 9 is_stmt 1 view .LVU2144
 6427              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6428              		.loc 1 363 44 is_stmt 0 view .LVU2145
 6429 27ea C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
 6429      70E0
 6430              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6431              		.loc 1 363 65 view .LVU2146
 6432 27f0 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 6432      F2
 6433              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6434              		.loc 1 363 54 view .LVU2147
 6435 27f5 4C09F6   		or	rsi, r14	# tmp904, tmp903
 6436 27f8 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6437              	.LVL311:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6438              		.loc 1 364 9 is_stmt 1 view .LVU2148
 365:sieve_extend.c ****         copy_word += 2;
 6439              		.loc 1 365 9 view .LVU2149
 6440              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6441              		.loc 1 365 44 is_stmt 0 view .LVU2150
 6442 27fc C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 6442      D2
 6443              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6444              		.loc 1 365 65 view .LVU2151
 6445 2801 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 6446 2805 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 6446      F1
 6447              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccFOD2R4.s 			page 176


 365:sieve_extend.c ****         copy_word += 2;
 6448              		.loc 1 365 54 view .LVU2152
 6449 280a 4909F2   		or	r10, rsi	# tmp908, tmp906
 6450 280d 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 6450      08
 6451              	.LVL312:
 366:sieve_extend.c ****         source_word += 2;
 6452              		.loc 1 366 9 is_stmt 1 view .LVU2153
 6453              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6454              		.loc 1 366 19 is_stmt 0 view .LVU2154
 6455 2812 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 367:sieve_extend.c ****         distance += 2;
 6456              		.loc 1 367 9 is_stmt 1 view .LVU2155
 368:sieve_extend.c ****     }
 6457              		.loc 1 368 9 view .LVU2156
 368:sieve_extend.c ****     }
 6458              		.loc 1 368 9 is_stmt 0 view .LVU2157
 6459              	.LBE349:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6460              		.loc 1 360 11 is_stmt 1 view .LVU2158
 6461              	.LBB350:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6462              		.loc 1 361 9 view .LVU2159
 6463              	.LVL313:
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6464              		.loc 1 362 9 view .LVU2160
 6465              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6466              		.loc 1 362 19 is_stmt 0 view .LVU2161
 6467 2816 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6468              		.loc 1 363 9 is_stmt 1 view .LVU2162
 6469              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6470              		.loc 1 363 44 is_stmt 0 view .LVU2163
 6471 281a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 6471      70F0
 6472              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6473              		.loc 1 363 65 view .LVU2164
 6474 2820 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 6474      F1
 6475              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6476              		.loc 1 363 54 view .LVU2165
 6477 2825 4C09F6   		or	rsi, r14	# tmp916, tmp915
 6478 2828 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6479              	.LVL314:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6480              		.loc 1 364 9 is_stmt 1 view .LVU2166
 365:sieve_extend.c ****         copy_word += 2;
 6481              		.loc 1 365 9 view .LVU2167
 6482              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6483              		.loc 1 366 19 is_stmt 0 view .LVU2168
 6484 282c 4883C708 		add	rdi, 8	# copy_word,
GAS LISTING /tmp/ccFOD2R4.s 			page 177


 6485              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6486              		.loc 1 365 44 view .LVU2169
 6487 2830 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 6487      C9
 6488              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6489              		.loc 1 365 65 view .LVU2170
 6490 2835 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 6491 2838 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
 6491      F2
 6492              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6493              		.loc 1 365 54 view .LVU2171
 6494 283d 4909F1   		or	r9, rsi	# tmp920, tmp918
 6495              	.LBE350:
 6496              	# sieve_extend.c:360:     while (copy_word < fast_loop_stop_word) {
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6497              		.loc 1 360 11 view .LVU2172
 6498 2840 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 6498      30
 6499 2845 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 6500              	.LBB351:
 6501              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6502              		.loc 1 365 54 view .LVU2173
 6503 2849 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6503      08
 6504              	.LVL315:
 366:sieve_extend.c ****         source_word += 2;
 6505              		.loc 1 366 9 is_stmt 1 view .LVU2174
 367:sieve_extend.c ****         distance += 2;
 6506              		.loc 1 367 9 view .LVU2175
 368:sieve_extend.c ****     }
 6507              		.loc 1 368 9 view .LVU2176
 368:sieve_extend.c ****     }
 6508              		.loc 1 368 9 is_stmt 0 view .LVU2177
 6509              	.LBE351:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6510              		.loc 1 360 11 is_stmt 1 view .LVU2178
 6511 284e 0F8732FF 		ja	.L333	#,
 6511      FFFF
 6512 2854 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.297, %sfp
 6512      38
 6513 2859 E930F5FF 		jmp	.L334	#
 6513      FF
 6514              	.LVL316:
 6515 285e 6690     		.p2align 4,,7
 6516              		.p2align 3
 6517              	.L351:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6518              		.loc 1 360 11 is_stmt 0 view .LVU2179
 6519              	.LBE354:
 6520              	.LBE373:
 6521              	# sieve_extend.c:397:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 397:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6522              		.loc 1 397 5 view .LVU2180
GAS LISTING /tmp/ccFOD2R4.s 			page 178


 6523 2860 4C89E9   		mov	rcx, r13	# tmp.285, tmp.298
 6524 2863 E994F9FF 		jmp	.L335	#
 6524      FF
 6525              	.LVL317:
 6526              	.L505:
 6527              	.LBB374:
 6528              	.LBB355:
 6529              	.LBB352:
 361:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6530              		.loc 1 361 9 is_stmt 1 view .LVU2181
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6531              		.loc 1 362 9 view .LVU2182
 6532              	# sieve_extend.c:362:         bitword_t source1 = bitstorage[source_word+1];
 362:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6533              		.loc 1 362 19 is_stmt 0 view .LVU2183
 6534 2868 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6535              		.loc 1 363 9 is_stmt 1 view .LVU2184
 6536              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6537              		.loc 1 363 44 is_stmt 0 view .LVU2185
 6538 286c 4589F8   		mov	r8d, r15d	# tmp1274, _12
 6539 286f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 6539      30
 6540              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6541              		.loc 1 363 65 view .LVU2186
 6542 2874 4189D0   		mov	r8d, edx	# tmp1275, _18
 6543 2877 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
 6543      C1
 6544              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6545              		.loc 1 363 54 view .LVU2187
 6546 287c 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 6547 287f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6548              	.LVL318:
 364:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6549              		.loc 1 364 9 is_stmt 1 view .LVU2188
 365:sieve_extend.c ****         copy_word += 2;
 6550              		.loc 1 365 9 view .LVU2189
 6551              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6552              		.loc 1 363 44 is_stmt 0 view .LVU2190
 6553 2883 4589FA   		mov	r10d, r15d	# _12, shift
 6554              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6555              		.loc 1 365 65 view .LVU2191
 6556 2886 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 6557              	# sieve_extend.c:363:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 363:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6558              		.loc 1 363 65 view .LVU2192
 6559 288a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 6560              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6561              		.loc 1 365 44 view .LVU2193
 6562 288d C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 6562      C9
GAS LISTING /tmp/ccFOD2R4.s 			page 179


 6563              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6564              		.loc 1 365 65 view .LVU2194
 6565 2892 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 6565      C0
 6566              	# sieve_extend.c:365:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 365:sieve_extend.c ****         copy_word += 2;
 6567              		.loc 1 365 54 view .LVU2195
 6568 2897 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 6569 289a 488D4120 		lea	rax, 32[rcx]	# ivtmp.365,
 6570 289e 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 6570      08
 6571              	.LVL319:
 366:sieve_extend.c ****         source_word += 2;
 6572              		.loc 1 366 9 is_stmt 1 view .LVU2196
 6573              	# sieve_extend.c:366:         copy_word += 2;
 366:sieve_extend.c ****         source_word += 2;
 6574              		.loc 1 366 19 is_stmt 0 view .LVU2197
 6575 28a3 498D7D04 		lea	rdi, 4[r13]	# copy_word,
 367:sieve_extend.c ****         distance += 2;
 6576              		.loc 1 367 9 is_stmt 1 view .LVU2198
 368:sieve_extend.c ****     }
 6577              		.loc 1 368 9 view .LVU2199
 368:sieve_extend.c ****     }
 6578              		.loc 1 368 9 is_stmt 0 view .LVU2200
 6579              	.LBE352:
 360:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6580              		.loc 1 360 11 is_stmt 1 view .LVU2201
 6581 28a7 E948FEFF 		jmp	.L452	#
 6581      FF
 6582              	.LBE355:
 6583              	.LBE374:
 6584              		.cfi_endproc
 6585              	.LFE66:
 6587              		.section	.rodata.str1.1,"aMS",@progbits,1
 6588              	.LC4:
 6589 0000 25336A75 		.string	"%3ju "
 6589      2000
 6590              	.LC5:
 6591 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 6591      6E642025 
 6591      6A752070 
 6591      72696D65 
 6591      7320756E 
 6592              		.text
 6593 28ac 0F1F4000 		.p2align 4
 6595              	show_primes.isra.0:
 6596              	.LVL320:
 6597              	.LFB81:
 523:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6598              		.loc 1 523 13 view -0
 6599              		.cfi_startproc
 6600              	.LBB375:
 525:sieve_extend.c ****         primeCount++;
 6601              		.loc 1 525 30 view .LVU2203
 6602              	.LBE375:
 6603              	# sieve_extend.c:523: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
GAS LISTING /tmp/ccFOD2R4.s 			page 180


 523:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6604              		.loc 1 523 13 is_stmt 0 view .LVU2204
 6605 28b0 4157     		push	r15	#
 6606              		.cfi_def_cfa_offset 16
 6607              		.cfi_offset 15, -16
 6608 28b2 4156     		push	r14	#
 6609              		.cfi_def_cfa_offset 24
 6610              		.cfi_offset 14, -24
 6611 28b4 4155     		push	r13	#
 6612              		.cfi_def_cfa_offset 32
 6613              		.cfi_offset 13, -32
 6614 28b6 4154     		push	r12	#
 6615              		.cfi_def_cfa_offset 40
 6616              		.cfi_offset 12, -40
 6617 28b8 4989F4   		mov	r12, rsi	# ISRA.69, tmp168
 6618 28bb 55       		push	rbp	#
 6619              		.cfi_def_cfa_offset 48
 6620              		.cfi_offset 6, -48
 6621 28bc 53       		push	rbx	#
 6622              		.cfi_def_cfa_offset 56
 6623              		.cfi_offset 3, -56
 6624 28bd 488D6424 		lea	rsp, -8[rsp]	#,
 6624      F8
 6625              		.cfi_def_cfa_offset 64
 6626              	.LBB392:
 6627              	# sieve_extend.c:525:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 525:sieve_extend.c ****         primeCount++;
 6628              		.loc 1 525 44 view .LVU2205
 6629 28c2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.69_32(D)
 6630              	# sieve_extend.c:525:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 525:sieve_extend.c ****         primeCount++;
 6631              		.loc 1 525 5 view .LVU2206
 6632 28c5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 6633 28c9 0F867501 		jbe	.L513	#,
 6633      0000
 6634              	# sieve_extend.c:527:         if (factor < maxFactor/2) {
 527:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6635              		.loc 1 527 31 view .LVU2207
 6636 28cf 48D1EA   		shr	rdx	# maxFactor
 6637              	.LVL321:
 527:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6638              		.loc 1 527 31 view .LVU2208
 6639 28d2 4989FD   		mov	r13, rdi	# ISRA.68, tmp167
 6640              	# sieve_extend.c:525:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 525:sieve_extend.c ****         primeCount++;
 6641              		.loc 1 525 20 view .LVU2209
 6642 28d5 BB010000 		mov	ebx, 1	# factor,
 6642      00
 6643              	# sieve_extend.c:527:         if (factor < maxFactor/2) {
 527:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6644              		.loc 1 527 31 view .LVU2210
 6645 28da 4889D5   		mov	rbp, rdx	# _4, maxFactor
 6646              	.LBE392:
 6647              	# sieve_extend.c:524:     counter_t primeCount = 1;    // We already have 2
 524:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 6648              		.loc 1 524 15 view .LVU2211
 6649 28dd 41BF0100 		mov	r15d, 1	# primeCount,
GAS LISTING /tmp/ccFOD2R4.s 			page 181


 6649      0000
 6650              	.LBB393:
 6651              	.LBB376:
 6652              	.LBB377:
 6653              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6654              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
GAS LISTING /tmp/ccFOD2R4.s 			page 182


  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 6655              		.loc 3 107 10 view .LVU2212
GAS LISTING /tmp/ccFOD2R4.s 			page 183


 6656 28e3 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 6656      CCCCCCCC 
 6656      CCCC
 6657              	.LVL322:
 6658 28ed 0F1F00   		.p2align 4
 6659              		.p2align 3
 6660              	.L512:
 6661              		.loc 3 107 10 view .LVU2213
 6662              	.LBE377:
 6663              	.LBE376:
 526:sieve_extend.c ****         if (factor < maxFactor/2) {
 6664              		.loc 1 526 9 is_stmt 1 view .LVU2214
 6665              	# sieve_extend.c:526:         primeCount++;
 526:sieve_extend.c ****         if (factor < maxFactor/2) {
 6666              		.loc 1 526 19 is_stmt 0 view .LVU2215
 6667 28f0 4983C701 		add	r15, 1	# primeCount,
 6668              	.LVL323:
 527:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6669              		.loc 1 527 9 is_stmt 1 view .LVU2216
 6670              	# sieve_extend.c:527:         if (factor < maxFactor/2) {
 527:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6671              		.loc 1 527 12 is_stmt 0 view .LVU2217
 6672 28f4 4839DD   		cmp	rbp, rbx	# _4, factor
 6673 28f7 0F87FB00 		ja	.L536	#,
 6673      0000
 6674              	.L508:
 525:sieve_extend.c ****         primeCount++;
 6675              		.loc 1 525 52 is_stmt 1 view .LVU2218
 6676              	.LVL324:
 6677              	# sieve_extend.c:525:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 525:sieve_extend.c ****         primeCount++;
 6678              		.loc 1 525 61 is_stmt 0 view .LVU2219
 6679 28fd 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.68_33(D)
 6680 2901 4883C301 		add	rbx, 1	# factor,
 6681              	.LVL325:
 6682              	.L535:
 6683              	.LBB382:
 6684              	.LBI382:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 6685              		.loc 1 117 25 is_stmt 1 view .LVU2220
 6686              	.LBB383:
 118:sieve_extend.c ****     return index;
 6687              		.loc 1 118 5 view .LVU2221
 118:sieve_extend.c ****     return index;
 6688              		.loc 1 118 11 view .LVU2222
 6689              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6690              		.loc 1 118 23 is_stmt 0 view .LVU2223
 6691 2905 4889D9   		mov	rcx, rbx	# tmp124, factor
 6692 2908 48C1E906 		shr	rcx, 6	# tmp124,
 6693              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6694              		.loc 1 118 12 view .LVU2224
 6695 290c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 6696              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6697              		.loc 1 118 11 view .LVU2225
GAS LISTING /tmp/ccFOD2R4.s 			page 184


 6698 2910 490FA3D9 		bt	r9, rbx	# *_39, factor
 6699 2914 0F83A600 		jnc	.L510	#,
 6699      0000
 118:sieve_extend.c ****     return index;
 6700              		.loc 1 118 60 is_stmt 1 view .LVU2226
 6701              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6702              		.loc 1 118 65 is_stmt 0 view .LVU2227
 6703 291a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 6704              	.LVL326:
 6705              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6706              		.loc 1 118 23 view .LVU2228
 6707 291e 4D89D3   		mov	r11, r10	# tmp129, factor
 6708              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6709              		.loc 1 118 65 view .LVU2229
 6710 2921 4C89D3   		mov	rbx, r10	# factor, tmp138
 118:sieve_extend.c ****     return index;
 6711              		.loc 1 118 11 is_stmt 1 view .LVU2230
 6712              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6713              		.loc 1 118 23 is_stmt 0 view .LVU2231
 6714 2924 49C1EB06 		shr	r11, 6	# tmp129,
 6715              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6716              		.loc 1 118 12 view .LVU2232
 6717 2928 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6718              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6719              		.loc 1 118 11 view .LVU2233
 6720 292c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 6721 2930 0F838A00 		jnc	.L510	#,
 6721      0000
 118:sieve_extend.c ****     return index;
 6722              		.loc 1 118 60 is_stmt 1 view .LVU2234
 6723              	.LVL327:
 6724              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6725              		.loc 1 118 65 is_stmt 0 view .LVU2235
 6726 2936 4883C301 		add	rbx, 1	# factor,
 6727              	.LVL328:
 118:sieve_extend.c ****     return index;
 6728              		.loc 1 118 11 is_stmt 1 view .LVU2236
 6729              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6730              		.loc 1 118 23 is_stmt 0 view .LVU2237
 6731 293a 4889DA   		mov	rdx, rbx	# tmp139, factor
 6732 293d 48C1EA06 		shr	rdx, 6	# tmp139,
 6733              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6734              		.loc 1 118 12 view .LVU2238
 6735 2941 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6736              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6737              		.loc 1 118 11 view .LVU2239
 6738 2945 480FA3DF 		bt	rdi, rbx	# *_16, factor
GAS LISTING /tmp/ccFOD2R4.s 			page 185


 6739 2949 7375     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6740              		.loc 1 118 60 is_stmt 1 view .LVU2240
 6741              	.LVL329:
 6742              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6743              		.loc 1 118 65 is_stmt 0 view .LVU2241
 6744 294b 498D5A02 		lea	rbx, 2[r10]	# factor,
 6745              	.LVL330:
 118:sieve_extend.c ****     return index;
 6746              		.loc 1 118 11 is_stmt 1 view .LVU2242
 6747              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6748              		.loc 1 118 23 is_stmt 0 view .LVU2243
 6749 294f 4889D9   		mov	rcx, rbx	# tmp143, factor
 6750 2952 48C1E906 		shr	rcx, 6	# tmp143,
 6751              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6752              		.loc 1 118 12 view .LVU2244
 6753 2956 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6754              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6755              		.loc 1 118 11 view .LVU2245
 6756 295a 490FA3D9 		bt	r9, rbx	# *_16, factor
 6757 295e 7360     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6758              		.loc 1 118 60 is_stmt 1 view .LVU2246
 6759              	.LVL331:
 6760              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6761              		.loc 1 118 65 is_stmt 0 view .LVU2247
 6762 2960 498D5A03 		lea	rbx, 3[r10]	# factor,
 6763              	.LVL332:
 118:sieve_extend.c ****     return index;
 6764              		.loc 1 118 11 is_stmt 1 view .LVU2248
 6765              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6766              		.loc 1 118 23 is_stmt 0 view .LVU2249
 6767 2964 4989DB   		mov	r11, rbx	# tmp147, factor
 6768 2967 49C1EB06 		shr	r11, 6	# tmp147,
 6769              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6770              		.loc 1 118 12 view .LVU2250
 6771 296b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6772              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6773              		.loc 1 118 11 view .LVU2251
 6774 296f 480FA3D8 		bt	rax, rbx	# *_16, factor
 6775 2973 734B     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6776              		.loc 1 118 60 is_stmt 1 view .LVU2252
 6777              	.LVL333:
 6778              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6779              		.loc 1 118 65 is_stmt 0 view .LVU2253
 6780 2975 498D5A04 		lea	rbx, 4[r10]	# factor,
 6781              	.LVL334:
GAS LISTING /tmp/ccFOD2R4.s 			page 186


 118:sieve_extend.c ****     return index;
 6782              		.loc 1 118 11 is_stmt 1 view .LVU2254
 6783              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6784              		.loc 1 118 23 is_stmt 0 view .LVU2255
 6785 2979 4889DA   		mov	rdx, rbx	# tmp151, factor
 6786 297c 48C1EA06 		shr	rdx, 6	# tmp151,
 6787              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6788              		.loc 1 118 12 view .LVU2256
 6789 2980 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6790              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6791              		.loc 1 118 11 view .LVU2257
 6792 2984 480FA3DF 		bt	rdi, rbx	# *_16, factor
 6793 2988 7336     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6794              		.loc 1 118 60 is_stmt 1 view .LVU2258
 6795              	.LVL335:
 6796              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6797              		.loc 1 118 65 is_stmt 0 view .LVU2259
 6798 298a 498D5A05 		lea	rbx, 5[r10]	# factor,
 6799              	.LVL336:
 118:sieve_extend.c ****     return index;
 6800              		.loc 1 118 11 is_stmt 1 view .LVU2260
 6801              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6802              		.loc 1 118 23 is_stmt 0 view .LVU2261
 6803 298e 4889D9   		mov	rcx, rbx	# tmp155, factor
 6804 2991 48C1E906 		shr	rcx, 6	# tmp155,
 6805              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6806              		.loc 1 118 12 view .LVU2262
 6807 2995 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6808              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6809              		.loc 1 118 11 view .LVU2263
 6810 2999 490FA3D9 		bt	r9, rbx	# *_16, factor
 6811 299d 7321     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6812              		.loc 1 118 60 is_stmt 1 view .LVU2264
 6813              	.LVL337:
 6814              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6815              		.loc 1 118 65 is_stmt 0 view .LVU2265
 6816 299f 498D5A06 		lea	rbx, 6[r10]	# factor,
 6817              	.LVL338:
 118:sieve_extend.c ****     return index;
 6818              		.loc 1 118 11 is_stmt 1 view .LVU2266
 6819              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6820              		.loc 1 118 23 is_stmt 0 view .LVU2267
 6821 29a3 4989DB   		mov	r11, rbx	# tmp159, factor
 6822 29a6 49C1EB06 		shr	r11, 6	# tmp159,
 6823              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccFOD2R4.s 			page 187


 6824              		.loc 1 118 12 view .LVU2268
 6825 29aa 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6826              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6827              		.loc 1 118 11 view .LVU2269
 6828 29ae 480FA3D8 		bt	rax, rbx	# *_16, factor
 6829 29b2 730C     		jnc	.L510	#,
 118:sieve_extend.c ****     return index;
 6830              		.loc 1 118 60 is_stmt 1 view .LVU2270
 6831              	.LVL339:
 6832              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 6833              		.loc 1 118 65 is_stmt 0 view .LVU2271
 6834 29b4 498D5A07 		lea	rbx, 7[r10]	# factor,
 6835              	.LVL340:
 118:sieve_extend.c ****     return index;
 6836              		.loc 1 118 11 is_stmt 1 view .LVU2272
 6837 29b8 E948FFFF 		jmp	.L535	#
 6837      FF
 6838 29bd 0F1F00   		.p2align 4,,7
 6839              		.p2align 3
 6840              	.L510:
 6841              	.LVL341:
 118:sieve_extend.c ****     return index;
 6842              		.loc 1 118 11 is_stmt 0 view .LVU2273
 6843              	.LBE383:
 6844              	.LBE382:
 525:sieve_extend.c ****         primeCount++;
 6845              		.loc 1 525 30 is_stmt 1 view .LVU2274
 6846              	# sieve_extend.c:525:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 525:sieve_extend.c ****         primeCount++;
 6847              		.loc 1 525 5 is_stmt 0 view .LVU2275
 6848 29c0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 6849 29c3 0F8227FF 		jb	.L512	#,
 6849      FFFF
 6850              	.LVL342:
 6851              	.L507:
 525:sieve_extend.c ****         primeCount++;
 6852              		.loc 1 525 5 view .LVU2276
 6853              	.LBE393:
 532:sieve_extend.c **** }
 6854              		.loc 1 532 5 is_stmt 1 view .LVU2277
 6855              	.LBB394:
 6856              	.LBI394:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6857              		.loc 3 105 1 view .LVU2278
 6858              	.LBB395:
 6859              		.loc 3 107 3 view .LVU2279
 6860              	.LBE395:
 6861              	.LBE394:
 6862              	# sieve_extend.c:533: }
 533:sieve_extend.c **** 
 6863              		.loc 1 533 1 is_stmt 0 view .LVU2280
 6864 29c9 488D6424 		lea	rsp, 8[rsp]	#,
 6864      08
 6865              		.cfi_remember_state
 6866              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccFOD2R4.s 			page 188


 6867              	.LBB399:
 6868              	.LBB396:
 6869              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6870              		.loc 3 107 10 view .LVU2281
 6871 29ce 4C89FA   		mov	rdx, r15	#, primeCount
 6872              	.LBE396:
 6873              	.LBE399:
 6874              	# sieve_extend.c:533: }
 533:sieve_extend.c **** 
 6875              		.loc 1 533 1 view .LVU2282
 6876 29d1 5B       		pop	rbx	#
 6877              		.cfi_def_cfa_offset 48
 6878              	# sieve_extend.c:532:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 532:sieve_extend.c **** }
 6879              		.loc 1 532 5 view .LVU2283
 6880 29d2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 6880      01
 6881              	.LBB400:
 6882              	.LBB397:
 6883              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6884              		.loc 3 107 10 view .LVU2284
 6885 29d7 BF010000 		mov	edi, 1	#,
 6885      00
 6886 29dc 31C0     		xor	eax, eax	#
 6887 29de 488D3500 		lea	rsi, .LC5[rip]	#,
 6887      000000
 6888              	.LBE397:
 6889              	.LBE400:
 6890              	# sieve_extend.c:533: }
 533:sieve_extend.c **** 
 6891              		.loc 1 533 1 view .LVU2285
 6892 29e5 5D       		pop	rbp	#
 6893              		.cfi_def_cfa_offset 40
 6894 29e6 415C     		pop	r12	#
 6895              		.cfi_def_cfa_offset 32
 6896 29e8 415D     		pop	r13	#
 6897              		.cfi_def_cfa_offset 24
 6898 29ea 415E     		pop	r14	#
 6899              		.cfi_def_cfa_offset 16
 6900 29ec 415F     		pop	r15	#
 6901              		.cfi_def_cfa_offset 8
 6902              	.LBB401:
 6903              	.LBB398:
 6904              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6905              		.loc 3 107 10 view .LVU2286
 6906 29ee E9000000 		jmp	__printf_chk@PLT	#
 6906      00
 6907              	.LVL343:
 6908              		.p2align 4,,7
 6909 29f3 0F1F4400 		.p2align 3
 6909      00
 6910              	.L536:
 6911              		.cfi_restore_state
 6912              		.loc 3 107 10 view .LVU2287
 6913              	.LBE398:
 6914              	.LBE401:
 6915              	.LBB402:
GAS LISTING /tmp/ccFOD2R4.s 			page 189


 528:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6916              		.loc 1 528 13 is_stmt 1 view .LVU2288
 6917              	.LBB384:
 6918              	.LBI376:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6919              		.loc 3 105 1 view .LVU2289
 6920              	.LBB378:
 6921              		.loc 3 107 3 view .LVU2290
 6922              	.LBE378:
 6923              	.LBE384:
 6924              	# sieve_extend.c:528:             printf("%3ju ",(uintmax_t)factor*2+1);
 528:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6925              		.loc 1 528 13 is_stmt 0 view .LVU2291
 6926 29f8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 6926      01
 6927              	.LBB385:
 6928              	.LBB379:
 6929              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6930              		.loc 3 107 10 view .LVU2292
 6931 29fd BF010000 		mov	edi, 1	#,
 6931      00
 6932 2a02 31C0     		xor	eax, eax	#
 6933 2a04 488D3500 		lea	rsi, .LC4[rip]	#,
 6933      000000
 6934 2a0b E8000000 		call	__printf_chk@PLT	#
 6934      00
 6935              	.LVL344:
 6936              		.loc 3 107 10 view .LVU2293
 6937              	.LBE379:
 6938              	.LBE385:
 529:sieve_extend.c ****         }
 6939              		.loc 1 529 13 is_stmt 1 view .LVU2294
 6940              	.LBB386:
 6941              	.LBB380:
 6942              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6943              		.loc 3 107 10 is_stmt 0 view .LVU2295
 6944 2a10 4C89F8   		mov	rax, r15	# tmp120, primeCount
 6945              	.LBE380:
 6946              	.LBE386:
 6947              	# sieve_extend.c:529:             if (primeCount % 10 == 0) printf("\n");
 529:sieve_extend.c ****         }
 6948              		.loc 1 529 16 view .LVU2296
 6949 2a13 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 6949      99999999 
 6949      9919
 6950              	.LBB387:
 6951              	.LBB381:
 6952              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6953              		.loc 3 107 10 view .LVU2297
 6954 2a1d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 6955 2a21 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 6955      D001
 6956              	.LBE381:
 6957              	.LBE387:
 6958              	# sieve_extend.c:529:             if (primeCount % 10 == 0) printf("\n");
 529:sieve_extend.c ****         }
 6959              		.loc 1 529 16 view .LVU2298
GAS LISTING /tmp/ccFOD2R4.s 			page 190


 6960 2a27 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 6961 2a2a 760C     		jbe	.L509	#,
 6962              	.L534:
 6963 2a2c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.69_32(D)
 6964              	.LBB388:
 6965              	.LBB389:
 6966              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6967              		.loc 3 107 10 view .LVU2299
 6968 2a30 E9C8FEFF 		jmp	.L508	#
 6968      FF
 6969              		.p2align 4,,7
 6970 2a35 0F1F00   		.p2align 3
 6971              	.L509:
 6972              	.LBE389:
 6973              	.LBE388:
 529:sieve_extend.c ****         }
 6974              		.loc 1 529 39 is_stmt 1 view .LVU2300
 6975              	.LVL345:
 6976              	.LBB391:
 6977              	.LBI388:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6978              		.loc 3 105 1 view .LVU2301
 6979              	.LBB390:
 6980              		.loc 3 107 3 view .LVU2302
 6981              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6982              		.loc 3 107 10 is_stmt 0 view .LVU2303
 6983 2a38 BF0A0000 		mov	edi, 10	#,
 6983      00
 6984 2a3d E8000000 		call	putchar@PLT	#
 6984      00
 6985              	.LVL346:
 6986 2a42 EBE8     		jmp	.L534	#
 6987              	.LVL347:
 6988              	.L513:
 6989              		.loc 3 107 10 view .LVU2304
 6990              	.LBE390:
 6991              	.LBE391:
 6992              	.LBE402:
 6993              	# sieve_extend.c:524:     counter_t primeCount = 1;    // We already have 2
 524:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 6994              		.loc 1 524 15 view .LVU2305
 6995 2a44 41BF0100 		mov	r15d, 1	# primeCount,
 6995      0000
 6996 2a4a E97AFFFF 		jmp	.L507	#
 6996      FF
 6997              		.cfi_endproc
 6998              	.LFE81:
 7000 2a4f 90       		.p2align 4
 7002              	sieve_shake:
 7003              	.LVL348:
 7004              	.LFB70:
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7005              		.loc 1 503 88 is_stmt 1 view -0
 7006              		.cfi_startproc
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7007              		.loc 1 503 88 is_stmt 0 view .LVU2307
 7008 2a50 55       		push	rbp	#
GAS LISTING /tmp/ccFOD2R4.s 			page 191


 7009              		.cfi_def_cfa_offset 16
 7010              		.cfi_offset 6, -16
 7011 2a51 4889E5   		mov	rbp, rsp	#,
 7012              		.cfi_def_cfa_register 6
 7013 2a54 4157     		push	r15	#
 7014 2a56 4156     		push	r14	#
 7015 2a58 4155     		push	r13	#
 7016 2a5a 4154     		push	r12	#
 7017 2a5c 53       		push	rbx	#
 7018              		.cfi_offset 15, -24
 7019              		.cfi_offset 14, -32
 7020              		.cfi_offset 13, -40
 7021              		.cfi_offset 12, -48
 7022              		.cfi_offset 3, -56
 7023 2a5d 4889FB   		mov	rbx, rdi	# maxints, tmp889
 7024              	.LBB458:
 7025              	.LBB459:
 7026              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7027              		.loc 1 104 29 view .LVU2308
 7028 2a60 BF080000 		mov	edi, 8	#,
 7028      00
 7029              	.LVL349:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7030              		.loc 1 104 29 view .LVU2309
 7031              	.LBE459:
 7032              	.LBE458:
 7033              	# sieve_extend.c:503: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7034              		.loc 1 503 88 view .LVU2310
 7035 2a65 4883E4E0 		and	rsp, -32	#,
 7036              	.LBB464:
 7037              	.LBB460:
 7038              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7039              		.loc 1 105 86 view .LVU2311
 7040 2a69 4989DE   		mov	r14, rbx	# _2, maxints
 7041 2a6c 49D1EE   		shr	r14	# _2
 7042              	.LBE460:
 7043              	.LBE464:
 7044              	# sieve_extend.c:503: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7045              		.loc 1 503 88 view .LVU2312
 7046 2a6f 488DA424 		lea	rsp, -192[rsp]	#,
 7046      40FFFFFF 
 7047              	# sieve_extend.c:503: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7048              		.loc 1 503 88 view .LVU2313
 7049 2a77 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, tmp890
 7049      30
 7050              	.LBB465:
 7051              	.LBB461:
 7052              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7053              		.loc 1 104 29 view .LVU2314
 7054 2a7c BE180000 		mov	esi, 24	#,
 7054      00
GAS LISTING /tmp/ccFOD2R4.s 			page 192


 7055              	.LVL350:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7056              		.loc 1 104 29 view .LVU2315
 7057              	.LBE461:
 7058              	.LBE465:
 7059              	# sieve_extend.c:503: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 7060              		.loc 1 503 88 view .LVU2316
 7061 2a81 64488B04 		mov	rax, QWORD PTR fs:40	# tmp1103, MEM[(<address-space-1> long unsigned int *)40B]
 7061      25280000 
 7061      00
 7062 2a8a 48898424 		mov	QWORD PTR 184[rsp], rax	# D.6874, tmp1103
 7062      B8000000 
 7063 2a92 31C0     		xor	eax, eax	# tmp1103
 504:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 7064              		.loc 1 504 5 is_stmt 1 view .LVU2317
 7065              	.LVL351:
 7066              	.LBB466:
 7067              	.LBI458:
 103:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 7068              		.loc 1 103 24 view .LVU2318
 7069              	.LBB462:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7070              		.loc 1 104 5 view .LVU2319
 7071              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7072              		.loc 1 104 29 is_stmt 0 view .LVU2320
 7073 2a94 E8000000 		call	aligned_alloc@PLT	#
 7073      00
 7074              	.LVL352:
 7075              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7076              		.loc 1 105 86 view .LVU2321
 7077 2a99 498DB600 		lea	rsi, 1024[r14]	# tmp389,
 7077      040000
 7078              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7079              		.loc 1 105 25 view .LVU2322
 7080 2aa0 BF800000 		mov	edi, 128	#,
 7080      00
 7081              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 7082              		.loc 1 104 29 view .LVU2323
 7083 2aa5 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, <retval>
 7083      10
 7084 2aaa 4989C7   		mov	r15, rax	# <retval>, tmp891
 7085              	.LVL353:
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7086              		.loc 1 105 5 is_stmt 1 view .LVU2324
 7087              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7088              		.loc 1 105 78 is_stmt 0 view .LVU2325
 7089 2aad 48C1EE0A 		shr	rsi, 10	# tmp390,
 7090              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7091              		.loc 1 105 25 view .LVU2326
 7092 2ab1 48C1E607 		sal	rsi, 7	# tmp391,
GAS LISTING /tmp/ccFOD2R4.s 			page 193


 7093              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7094              		.loc 1 105 86 view .LVU2327
 7095 2ab5 4C897424 		mov	QWORD PTR 112[rsp], r14	# %sfp, _2
 7095      70
 7096              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7097              		.loc 1 105 25 view .LVU2328
 7098 2aba E8000000 		call	aligned_alloc@PLT	#
 7098      00
 7099              	.LVL354:
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7100              		.loc 1 105 25 view .LVU2329
 7101              	.LBE462:
 7102              	.LBE466:
 7103              	.LBB467:
 7104              	.LBB468:
 7105              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7106              		.loc 1 473 5 view .LVU2330
 7107 2abf 4D85F6   		test	r14, r14	# _2
 7108              	.LBE468:
 7109              	.LBE467:
 7110              	.LBB520:
 7111              	.LBB463:
 7112              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7113              		.loc 1 105 25 view .LVU2331
 7114 2ac2 4989C4   		mov	r12, rax	# _100, tmp892
 7115              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 7116              		.loc 1 105 23 view .LVU2332
 7117 2ac5 498907   		mov	QWORD PTR [r15], rax	# sieve_95->bitstorage, _100
 106:sieve_extend.c ****     sieve->size     = size;
 7118              		.loc 1 106 5 is_stmt 1 view .LVU2333
 7119              	# sieve_extend.c:106:     sieve->bits     = size >> 1;
 106:sieve_extend.c ****     sieve->size     = size;
 7120              		.loc 1 106 21 is_stmt 0 view .LVU2334
 7121 2ac8 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_95->bits, _2
 107:sieve_extend.c ****     return sieve;
 7122              		.loc 1 107 5 is_stmt 1 view .LVU2335
 7123              	# sieve_extend.c:107:     sieve->size     = size;
 107:sieve_extend.c ****     return sieve;
 7124              		.loc 1 107 21 is_stmt 0 view .LVU2336
 7125 2acc 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_95->size, maxints
 108:sieve_extend.c **** }
 7126              		.loc 1 108 5 is_stmt 1 view .LVU2337
 7127              	.LVL355:
 108:sieve_extend.c **** }
 7128              		.loc 1 108 5 is_stmt 0 view .LVU2338
 7129              	.LBE463:
 7130              	.LBE520:
 505:sieve_extend.c **** 
 7131              		.loc 1 505 5 is_stmt 1 view .LVU2339
 507:sieve_extend.c **** 
 7132              		.loc 1 507 5 view .LVU2340
 510:sieve_extend.c ****     continuePattern(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
GAS LISTING /tmp/ccFOD2R4.s 			page 194


 7133              		.loc 1 510 5 view .LVU2341
 7134              	.LBB521:
 7135              	.LBI467:
 463:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 7136              		.loc 1 463 21 view .LVU2342
 7137              	.LBB516:
 464:sieve_extend.c ****     register counter_t prime   = 0;
 7138              		.loc 1 464 5 view .LVU2343
 465:sieve_extend.c ****     counter_t patternsize_bits = 1;
 7139              		.loc 1 465 5 view .LVU2344
 466:sieve_extend.c ****     counter_t pattern_start    = 0;
 7140              		.loc 1 466 5 view .LVU2345
 467:sieve_extend.c ****     counter_t range_stop       = block_start;
 7141              		.loc 1 467 5 view .LVU2346
 468:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 7142              		.loc 1 468 5 view .LVU2347
 469:sieve_extend.c **** 
 7143              		.loc 1 469 5 view .LVU2348
 471:sieve_extend.c ****     
 7144              		.loc 1 471 5 view .LVU2349
 7145              	# sieve_extend.c:471:     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first 
 471:sieve_extend.c ****     
 7146              		.loc 1 471 47 is_stmt 0 view .LVU2350
 7147 2ad0 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_100],
 7147      000000
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7148              		.loc 1 473 5 is_stmt 1 view .LVU2351
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7149              		.loc 1 473 11 view .LVU2352
 7150              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7151              		.loc 1 473 5 is_stmt 0 view .LVU2353
 7152 2ad7 0F840615 		je	.L972	#,
 7152      0000
 7153              	.LBB469:
 7154              	# sieve_extend.c:474:         prime = searchBitFalse(bitstorage, prime+1);
 474:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 7155              		.loc 1 474 17 view .LVU2354
 7156 2add 48C74424 		mov	QWORD PTR 104[rsp], 1	# %sfp,
 7156      68010000 
 7156      00
 7157              	.LBE469:
 7158              	# sieve_extend.c:465:     register counter_t prime   = 0;
 465:sieve_extend.c ****     counter_t patternsize_bits = 1;
 7159              		.loc 1 465 24 view .LVU2355
 7160 2ae6 31C9     		xor	ecx, ecx	# prime
 7161              	# sieve_extend.c:469:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 469:sieve_extend.c **** 
 7162              		.loc 1 469 18 view .LVU2356
 7163 2ae8 31C0     		xor	eax, eax	# block$pattern_size
 7164              	.LVL356:
 469:sieve_extend.c **** 
 7165              		.loc 1 469 18 view .LVU2357
 7166 2aea 31D2     		xor	edx, edx	# block$pattern_start
 7167              	# sieve_extend.c:467:     counter_t pattern_start    = 0;
 467:sieve_extend.c ****     counter_t range_stop       = block_start;
 7168              		.loc 1 467 15 view .LVU2358
GAS LISTING /tmp/ccFOD2R4.s 			page 195


 7169 2aec 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 7169      60000000 
 7169      00
 7170              	# sieve_extend.c:466:     counter_t patternsize_bits = 1;
 466:sieve_extend.c ****     counter_t pattern_start    = 0;
 7171              		.loc 1 466 15 view .LVU2359
 7172 2af5 41BE0100 		mov	r14d, 1	# patternsize_bits,
 7172      0000
 7173              	.LVL357:
 466:sieve_extend.c ****     counter_t pattern_start    = 0;
 7174              		.loc 1 466 15 view .LVU2360
 7175 2afb 488B7424 		mov	rsi, QWORD PTR 104[rsp]	# index, %sfp
 7175      68
 7176              	.LVL358:
 7177              		.p2align 4
 7178              		.p2align 3
 7179              	.L538:
 7180              	.LBB510:
 7181              	.LBB470:
 7182              	.LBB471:
 119:sieve_extend.c **** }
 7183              		.loc 1 119 5 is_stmt 1 view .LVU2361
 119:sieve_extend.c **** }
 7184              		.loc 1 119 5 is_stmt 0 view .LVU2362
 7185              	.LBE471:
 7186              	.LBE470:
 475:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7187              		.loc 1 475 9 is_stmt 1 view .LVU2363
 7188              	# sieve_extend.c:475:         counter_t start = prime * prime * 2 + prime * 2;
 475:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7189              		.loc 1 475 45 is_stmt 0 view .LVU2364
 7190 2b00 4C8D7E01 		lea	r15, 1[rsi]	# index,
 7191 2b04 4C8D2C36 		lea	r13, [rsi+rsi]	# _399,
 7192              	# sieve_extend.c:475:         counter_t start = prime * prime * 2 + prime * 2;
 475:sieve_extend.c ****         if unlikely(start > block_stop) break;
 7193              		.loc 1 475 19 view .LVU2365
 7194 2b08 4C89FB   		mov	rbx, r15	# index, index
 7195 2b0b 490FAFDD 		imul	rbx, r13	# index, _399
 7196              	.LVL359:
 476:sieve_extend.c **** 
 7197              		.loc 1 476 9 is_stmt 1 view .LVU2366
 7198              	# sieve_extend.c:476:         if unlikely(start > block_stop) break;
 476:sieve_extend.c **** 
 7199              		.loc 1 476 12 is_stmt 0 view .LVU2367
 7200 2b0f 483B5C24 		cmp	rbx, QWORD PTR 112[rsp]	# index, %sfp
 7200      70
 7201 2b14 0F876E08 		ja	.L605	#,
 7201      0000
 478:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 7202              		.loc 1 478 9 is_stmt 1 view .LVU2368
 7203              	# sieve_extend.c:478:         const counter_t step  = prime * 2 + 1;
 478:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 7204              		.loc 1 478 25 is_stmt 0 view .LVU2369
 7205 2b1a 4983C501 		add	r13, 1	# step,
 7206              	.LVL360:
 479:sieve_extend.c **** 
 7207              		.loc 1 479 9 is_stmt 1 view .LVU2370
GAS LISTING /tmp/ccFOD2R4.s 			page 196


 7208              	# sieve_extend.c:479:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 479:sieve_extend.c **** 
 7209              		.loc 1 479 12 is_stmt 0 view .LVU2371
 7210 2b1e 4D85FF   		test	r15, r15	# index
 7211 2b21 7516     		jne	.L543	#,
 479:sieve_extend.c **** 
 7212              		.loc 1 479 41 is_stmt 1 view .LVU2372
 7213              	# sieve_extend.c:479:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 479:sieve_extend.c **** 
 7214              		.loc 1 479 102 is_stmt 0 view .LVU2373
 7215 2b23 48C7C0FF 		mov	rax, -1	# tmp406,
 7215      FFFFFF
 7216 2b2a 31D2     		xor	edx, edx	# tmp405
 7217 2b2c 49F7F5   		div	r13	# step
 7218              	# sieve_extend.c:479:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 479:sieve_extend.c **** 
 7219              		.loc 1 479 47 view .LVU2374
 7220 2b2f 48C7C3FE 		mov	rbx, -2	# tmp407,
 7220      FFFFFF
 7221              	.LVL361:
 479:sieve_extend.c **** 
 7222              		.loc 1 479 47 view .LVU2375
 7223 2b36 4829D3   		sub	rbx, rdx	# index, tmp405
 7224              	.LVL362:
 7225              	.L543:
 481:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7226              		.loc 1 481 9 is_stmt 1 view .LVU2376
 7227              	# sieve_extend.c:481:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 481:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7228              		.loc 1 481 53 is_stmt 0 view .LVU2377
 7229 2b39 4C89EF   		mov	rdi, r13	# _69, step
 7230 2b3c 490FAFFE 		imul	rdi, r14	# _69, patternsize_bits
 7231 2b40 48897C24 		mov	QWORD PTR 88[rsp], rdi	# %sfp, _69
 7231      58
 7232              	# sieve_extend.c:481:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 481:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 7233              		.loc 1 481 60 view .LVU2378
 7234 2b45 4801FF   		add	rdi, rdi	# _70
 7235 2b48 48897C24 		mov	QWORD PTR 120[rsp], rdi	# %sfp, _70
 7235      78
 7236              	.LVL363:
 482:sieve_extend.c ****         block.pattern_start = pattern_start;
 7237              		.loc 1 482 9 is_stmt 1 view .LVU2379
 483:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 7238              		.loc 1 483 9 view .LVU2380
 484:sieve_extend.c **** 
 7239              		.loc 1 484 9 view .LVU2381
 7240              	# sieve_extend.c:484:         if unlikely(range_stop > block_stop) break;//return block; //range_st
 484:sieve_extend.c **** 
 7241              		.loc 1 484 12 is_stmt 0 view .LVU2382
 7242 2b4d 483B7C24 		cmp	rdi, QWORD PTR 112[rsp]	# _70, %sfp
 7242      70
 7243 2b52 0F874413 		ja	.L867	#,
 7243      0000
 486:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 7244              		.loc 1 486 9 is_stmt 1 view .LVU2383
 7245              	# sieve_extend.c:486:         if likely(patternsize_bits>1) {
GAS LISTING /tmp/ccFOD2R4.s 			page 197


 486:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 7246              		.loc 1 486 12 is_stmt 0 view .LVU2384
 7247 2b58 4983FE01 		cmp	r14, 1	# patternsize_bits,
 7248 2b5c 0F864413 		jbe	.L606	#,
 7248      0000
 487:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 7249              		.loc 1 487 13 is_stmt 1 view .LVU2385
 7250              	.LVL364:
 488:sieve_extend.c ****         }
 7251              		.loc 1 488 13 view .LVU2386
 7252              	.LBB473:
 7253              	.LBI473:
 417:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 7254              		.loc 1 417 20 view .LVU2387
 7255              	.LBB474:
 418:sieve_extend.c **** 
 7256              		.loc 1 418 5 view .LVU2388
 7257              	# sieve_extend.c:418:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 418:sieve_extend.c **** 
 7258              		.loc 1 418 8 is_stmt 0 view .LVU2389
 7259 2b62 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 7260 2b66 0F86FE07 		jbe	.L973	#,
 7260      0000
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7261              		.loc 1 420 5 is_stmt 1 view .LVU2390
 7262              	# sieve_extend.c:420:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7263              		.loc 1 420 35 is_stmt 0 view .LVU2391
 7264 2b6c 4F8D0C36 		lea	r9, [r14+r14]	# tmp408,
 7265              	# sieve_extend.c:421:     const bitshift_t source_bit = bitindex_calc(source_start);
 421:sieve_extend.c **** 
 7266              		.loc 1 421 22 view .LVU2392
 7267 2b70 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 7268              	# sieve_extend.c:420:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7269              		.loc 1 420 22 view .LVU2393
 7270 2b73 4183E13F 		and	r9d, 63	# copy_bit,
 7271              	.LVL365:
 421:sieve_extend.c **** 
 7272              		.loc 1 421 5 is_stmt 1 view .LVU2394
 7273              	# sieve_extend.c:421:     const bitshift_t source_bit = bitindex_calc(source_start);
 421:sieve_extend.c **** 
 7274              		.loc 1 421 22 is_stmt 0 view .LVU2395
 7275 2b77 4183E23F 		and	r10d, 63	# source_bit,
 7276              	.LVL366:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 7277              		.loc 1 423 5 is_stmt 1 view .LVU2396
 7278              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 7279              		.loc 1 423 13 is_stmt 0 view .LVU2397
 7280 2b7b 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 7281              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 7282              		.loc 1 423 37 view .LVU2398
 7283 2b7e 4C89F2   		mov	rdx, r14	#, patternsize_bits
 7284 2b81 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	#, %sfp
 7284      78
GAS LISTING /tmp/ccFOD2R4.s 			page 198


 7285 2b86 4C89F6   		mov	rsi, r14	#, patternsize_bits
 7286 2b89 4C89E7   		mov	rdi, r12	#, _100
 7287              	.LVL367:
 7288              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 7289              		.loc 1 423 13 view .LVU2399
 7290 2b8c 0F82C607 		jb	.L974	#,
 7290      0000
 7291              	.LVL368:
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 7292              		.loc 1 424 10 is_stmt 1 view .LVU2400
 7293              	# sieve_extend.c:424:     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstora
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 7294              		.loc 1 424 13 is_stmt 0 view .LVU2401
 7295 2b92 0F86A807 		jbe	.L547	#,
 7295      0000
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 7296              		.loc 1 424 37 is_stmt 1 view .LVU2402
 7297 2b98 C5F877   		vzeroupper
 7298 2b9b E840DBFF 		call	continuePattern_shiftright_ivdep	#
 7298      FF
 7299              	.LVL369:
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 7300              		.loc 1 424 37 is_stmt 0 view .LVU2403
 7301 2ba0 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 7301      50
 7302              	.LVL370:
 7303              	.L544:
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 7304              		.loc 1 424 37 view .LVU2404
 7305              	.LBE474:
 7306              	.LBE473:
 490:sieve_extend.c **** 
 7307              		.loc 1 490 9 is_stmt 1 view .LVU2405
 495:sieve_extend.c ****         else                          setBitsTrue_largeRange(bitstorage, start, step, range_stop);
 7308              		.loc 1 495 9 view .LVU2406
 7309              	# sieve_extend.c:495:         if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorag
 495:sieve_extend.c ****         else                          setBitsTrue_largeRange(bitstorage, start, step, range_stop);
 7310              		.loc 1 495 12 is_stmt 0 view .LVU2407
 7311 2ba5 4C3B2D00 		cmp	r13, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 7311      000000
 7312 2bac 0F835E05 		jnb	.L548	#,
 7312      0000
 495:sieve_extend.c ****         else                          setBitsTrue_largeRange(bitstorage, start, step, range_stop);
 7313              		.loc 1 495 39 is_stmt 1 view .LVU2408
 7314              	.LVL371:
 7315              	.LBB476:
 7316              	.LBI476:
 225:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 7317              		.loc 1 225 20 view .LVU2409
 7318              	.LBB477:
 226:sieve_extend.c **** 
 7319              		.loc 1 226 5 view .LVU2410
 228:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 7320              		.loc 1 228 5 view .LVU2411
 7321              	# sieve_extend.c:228:     counter_t range_start_atvector = vectorstart(range_start);
 228:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
GAS LISTING /tmp/ccFOD2R4.s 			page 199


 7322              		.loc 1 228 15 is_stmt 0 view .LVU2412
 7323 2bb2 4989DA   		mov	r10, rbx	# range_start_atvector, index
 7324 2bb5 4530D2   		xor	r10b, r10b	# range_start_atvector
 7325              	.LVL372:
 229:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 7326              		.loc 1 229 5 is_stmt 1 view .LVU2413
 7327              	# sieve_extend.c:229:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 229:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 7328              		.loc 1 229 8 is_stmt 0 view .LVU2414
 7329 2bb8 4B8D7C15 		lea	rdi, 0[r13+r10]	# tmp409,
 7329      00
 7330 2bbd 4839FB   		cmp	rbx, rdi	# index, tmp409
 7331 2bc0 0F86FA00 		jbe	.L549	#,
 7331      0000
 230:sieve_extend.c **** 
 7332              		.loc 1 230 9 is_stmt 1 view .LVU2415
 232:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 7333              		.loc 1 232 9 view .LVU2416
 7334              	# sieve_extend.c:232:         range_start_atvector += VECTOR_SIZE; // find next vector
 232:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 7335              		.loc 1 232 30 is_stmt 0 view .LVU2417
 7336 2bc6 4981C200 		add	r10, 256	# range_start_atvector,
 7336      010000
 7337              	.LVL373:
 233:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 7338              		.loc 1 233 9 is_stmt 1 view .LVU2418
 7339              	.LBB478:
 7340              	.LBB479:
 7341              	.LBB480:
 7342              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 7343              		.loc 1 235 54 is_stmt 0 view .LVU2419
 7344 2bcd BA010000 		mov	edx, 1	# tmp414,
 7344      00
 7345              	.LBE480:
 7346              	.LBE479:
 7347              	.LBE478:
 7348              	# sieve_extend.c:233:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 233:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 7349              		.loc 1 233 12 view .LVU2420
 7350 2bd2 4C395424 		cmp	QWORD PTR 120[rsp], r10	# %sfp, range_start_atvector
 7350      78
 7351 2bd7 0F820F13 		jb	.L550	#,
 7351      0000
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7352              		.loc 1 240 16 is_stmt 1 view .LVU2421
 7353              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7354              		.loc 1 240 9 is_stmt 0 view .LVU2422
 7355 2bdd 4C39D3   		cmp	rbx, r10	# index, range_start_atvector
 7356 2be0 0F87DA00 		ja	.L549	#,
 7356      0000
 7357              	.LVL374:
 7358              	.L551:
 241:sieve_extend.c ****     }
 7359              		.loc 1 241 13 is_stmt 1 view .LVU2423
 7360              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccFOD2R4.s 			page 200


 241:sieve_extend.c ****     }
 7361              		.loc 1 241 53 is_stmt 0 view .LVU2424
 7362 2be6 4989D8   		mov	r8, rbx	# tmp415, index
 7363              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7364              		.loc 1 241 56 view .LVU2425
 7365 2be9 C462E1F7 		shlx	r9, rdx, rbx	# tmp418, tmp419, index
 7365      CA
 7366              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7367              		.loc 1 241 53 view .LVU2426
 7368 2bee 49C1E806 		shr	r8, 6	# tmp415,
 7369              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7370              		.loc 1 240 65 view .LVU2427
 7371 2bf2 4C01EB   		add	rbx, r13	# index, step
 7372              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7373              		.loc 1 241 53 view .LVU2428
 7374 2bf5 4F090CC4 		or	QWORD PTR [r12+r8*8], r9	# *_116, tmp418
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7375              		.loc 1 240 53 is_stmt 1 view .LVU2429
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7376              		.loc 1 240 16 view .LVU2430
 7377              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7378              		.loc 1 240 9 is_stmt 0 view .LVU2431
 7379 2bf9 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7380 2bfc 0F82BE00 		jb	.L549	#,
 7380      0000
 241:sieve_extend.c ****     }
 7381              		.loc 1 241 13 is_stmt 1 view .LVU2432
 7382              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7383              		.loc 1 241 53 is_stmt 0 view .LVU2433
 7384 2c02 4989DB   		mov	r11, rbx	# tmp855, index
 7385              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7386              		.loc 1 241 56 view .LVU2434
 7387 2c05 C4E2E1F7 		shlx	rcx, rdx, rbx	# tmp858, tmp419, index
 7387      CA
 7388              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7389              		.loc 1 241 53 view .LVU2435
 7390 2c0a 49C1EB06 		shr	r11, 6	# tmp855,
 7391              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7392              		.loc 1 240 65 view .LVU2436
 7393 2c0e 4C01EB   		add	rbx, r13	# index, step
 7394              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7395              		.loc 1 241 53 view .LVU2437
 7396 2c11 4B090CDC 		or	QWORD PTR [r12+r11*8], rcx	# *_116, tmp858
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7397              		.loc 1 240 53 is_stmt 1 view .LVU2438
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7398              		.loc 1 240 16 view .LVU2439
GAS LISTING /tmp/ccFOD2R4.s 			page 201


 7399              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7400              		.loc 1 240 9 is_stmt 0 view .LVU2440
 7401 2c15 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7402 2c18 0F82A200 		jb	.L549	#,
 7402      0000
 241:sieve_extend.c ****     }
 7403              		.loc 1 241 13 is_stmt 1 view .LVU2441
 7404              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7405              		.loc 1 241 53 is_stmt 0 view .LVU2442
 7406 2c1e 4889D8   		mov	rax, rbx	# tmp859, index
 7407              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7408              		.loc 1 241 56 view .LVU2443
 7409 2c21 C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp862, tmp419, index
 7409      F2
 7410              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7411              		.loc 1 241 53 view .LVU2444
 7412 2c26 48C1E806 		shr	rax, 6	# tmp859,
 7413              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7414              		.loc 1 240 65 view .LVU2445
 7415 2c2a 4C01EB   		add	rbx, r13	# index, step
 7416              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7417              		.loc 1 241 53 view .LVU2446
 7418 2c2d 490934C4 		or	QWORD PTR [r12+rax*8], rsi	# *_116, tmp862
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7419              		.loc 1 240 53 is_stmt 1 view .LVU2447
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7420              		.loc 1 240 16 view .LVU2448
 7421              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7422              		.loc 1 240 9 is_stmt 0 view .LVU2449
 7423 2c31 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7424 2c34 0F828600 		jb	.L549	#,
 7424      0000
 241:sieve_extend.c ****     }
 7425              		.loc 1 241 13 is_stmt 1 view .LVU2450
 7426              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7427              		.loc 1 241 53 is_stmt 0 view .LVU2451
 7428 2c3a 4889DF   		mov	rdi, rbx	# tmp863, index
 7429              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7430              		.loc 1 241 56 view .LVU2452
 7431 2c3d C462E1F7 		shlx	r8, rdx, rbx	# tmp866, tmp419, index
 7431      C2
 7432              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7433              		.loc 1 241 53 view .LVU2453
 7434 2c42 48C1EF06 		shr	rdi, 6	# tmp863,
 7435              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7436              		.loc 1 240 65 view .LVU2454
GAS LISTING /tmp/ccFOD2R4.s 			page 202


 7437 2c46 4C01EB   		add	rbx, r13	# index, step
 7438              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7439              		.loc 1 241 53 view .LVU2455
 7440 2c49 4D0904FC 		or	QWORD PTR [r12+rdi*8], r8	# *_116, tmp866
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7441              		.loc 1 240 53 is_stmt 1 view .LVU2456
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7442              		.loc 1 240 16 view .LVU2457
 7443              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7444              		.loc 1 240 9 is_stmt 0 view .LVU2458
 7445 2c4d 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7446 2c50 726E     		jb	.L549	#,
 241:sieve_extend.c ****     }
 7447              		.loc 1 241 13 is_stmt 1 view .LVU2459
 7448              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7449              		.loc 1 241 53 is_stmt 0 view .LVU2460
 7450 2c52 4989D9   		mov	r9, rbx	# tmp867, index
 7451              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7452              		.loc 1 241 56 view .LVU2461
 7453 2c55 C462E1F7 		shlx	r11, rdx, rbx	# tmp870, tmp419, index
 7453      DA
 7454              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7455              		.loc 1 241 53 view .LVU2462
 7456 2c5a 49C1E906 		shr	r9, 6	# tmp867,
 7457              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7458              		.loc 1 240 65 view .LVU2463
 7459 2c5e 4C01EB   		add	rbx, r13	# index, step
 7460              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7461              		.loc 1 241 53 view .LVU2464
 7462 2c61 4F091CCC 		or	QWORD PTR [r12+r9*8], r11	# *_116, tmp870
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7463              		.loc 1 240 53 is_stmt 1 view .LVU2465
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7464              		.loc 1 240 16 view .LVU2466
 7465              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7466              		.loc 1 240 9 is_stmt 0 view .LVU2467
 7467 2c65 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7468 2c68 7256     		jb	.L549	#,
 241:sieve_extend.c ****     }
 7469              		.loc 1 241 13 is_stmt 1 view .LVU2468
 7470              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7471              		.loc 1 241 53 is_stmt 0 view .LVU2469
 7472 2c6a 4889D9   		mov	rcx, rbx	# tmp871, index
 7473              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7474              		.loc 1 241 56 view .LVU2470
 7475 2c6d C4E2E1F7 		shlx	rax, rdx, rbx	# tmp874, tmp419, index
 7475      C2
GAS LISTING /tmp/ccFOD2R4.s 			page 203


 7476              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7477              		.loc 1 241 53 view .LVU2471
 7478 2c72 48C1E906 		shr	rcx, 6	# tmp871,
 7479              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7480              		.loc 1 240 65 view .LVU2472
 7481 2c76 4C01EB   		add	rbx, r13	# index, step
 7482              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7483              		.loc 1 241 53 view .LVU2473
 7484 2c79 490904CC 		or	QWORD PTR [r12+rcx*8], rax	# *_116, tmp874
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7485              		.loc 1 240 53 is_stmt 1 view .LVU2474
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7486              		.loc 1 240 16 view .LVU2475
 7487              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7488              		.loc 1 240 9 is_stmt 0 view .LVU2476
 7489 2c7d 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7490 2c80 723E     		jb	.L549	#,
 241:sieve_extend.c ****     }
 7491              		.loc 1 241 13 is_stmt 1 view .LVU2477
 7492              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7493              		.loc 1 241 53 is_stmt 0 view .LVU2478
 7494 2c82 4889DF   		mov	rdi, rbx	# tmp875, index
 7495              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7496              		.loc 1 241 56 view .LVU2479
 7497 2c85 C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp878, tmp419, index
 7497      F2
 7498              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7499              		.loc 1 241 53 view .LVU2480
 7500 2c8a 48C1EF06 		shr	rdi, 6	# tmp875,
 7501              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7502              		.loc 1 240 65 view .LVU2481
 7503 2c8e 4C01EB   		add	rbx, r13	# index, step
 7504              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7505              		.loc 1 241 53 view .LVU2482
 7506 2c91 490934FC 		or	QWORD PTR [r12+rdi*8], rsi	# *_116, tmp878
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7507              		.loc 1 240 53 is_stmt 1 view .LVU2483
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7508              		.loc 1 240 16 view .LVU2484
 7509              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7510              		.loc 1 240 9 is_stmt 0 view .LVU2485
 7511 2c95 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7512 2c98 7226     		jb	.L549	#,
 241:sieve_extend.c ****     }
 7513              		.loc 1 241 13 is_stmt 1 view .LVU2486
 7514              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 204


 7515              		.loc 1 241 53 is_stmt 0 view .LVU2487
 7516 2c9a 4989D8   		mov	r8, rbx	# tmp879, index
 7517              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7518              		.loc 1 241 56 view .LVU2488
 7519 2c9d C462E1F7 		shlx	r9, rdx, rbx	# tmp882, tmp419, index
 7519      CA
 7520              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7521              		.loc 1 241 53 view .LVU2489
 7522 2ca2 49C1E806 		shr	r8, 6	# tmp879,
 7523              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7524              		.loc 1 240 65 view .LVU2490
 7525 2ca6 4C01EB   		add	rbx, r13	# index, step
 7526              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 7527              		.loc 1 241 53 view .LVU2491
 7528 2ca9 4F090CC4 		or	QWORD PTR [r12+r8*8], r9	# *_116, tmp882
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7529              		.loc 1 240 53 is_stmt 1 view .LVU2492
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7530              		.loc 1 240 16 view .LVU2493
 7531              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 7532              		.loc 1 240 9 is_stmt 0 view .LVU2494
 7533 2cad 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 7534 2cb0 0F8330FF 		jnb	.L551	#,
 7534      FFFF
 7535 2cb6 662E0F1F 		.p2align 4
 7535      84000000 
 7535      0000
 7536              		.p2align 3
 7537              	.L549:
 244:sieve_extend.c **** 
 7538              		.loc 1 244 5 is_stmt 1 view .LVU2495
 7539              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 7540              		.loc 1 244 21 is_stmt 0 view .LVU2496
 7541 2cc0 4C8B5424 		mov	r10, QWORD PTR 120[rsp]	# _70, %sfp
 7541      78
 7542              	.LVL375:
 7543              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 7544              		.loc 1 244 42 view .LVU2497
 7545 2cc5 4C89EE   		mov	rsi, r13	# tmp420, step
 7546 2cc8 48C1E608 		sal	rsi, 8	# tmp420,
 7547 2ccc 4801DE   		add	rsi, rbx	# tmp421, index
 7548              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 7549              		.loc 1 244 21 view .LVU2498
 7550 2ccf 4C39D6   		cmp	rsi, r10	# tmp421, _70
 7551 2cd2 490F47F2 		cmova	rsi, r10	# tmp421,, tmp421, _70
 7552              	.LVL376:
 246:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 7553              		.loc 1 246 5 is_stmt 1 view .LVU2499
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
GAS LISTING /tmp/ccFOD2R4.s 			page 205


 7554              		.loc 1 247 5 view .LVU2500
 7555              	.LBB483:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 7556              		.loc 1 247 10 view .LVU2501
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 7557              		.loc 1 247 41 view .LVU2502
 7558              	# sieve_extend.c:247:     for (counter_t index = range_start; index < range_stop_unique;) {
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 7559              		.loc 1 247 5 is_stmt 0 view .LVU2503
 7560 2cd6 4839F3   		cmp	rbx, rsi	# index, range_stop_unique
 7561 2cd9 0F833403 		jnb	.L554	#,
 7561      0000
 7562              	.LBB484:
 7563              	.LBB485:
 7564              	.LBB486:
 7565              	# sieve_extend.c:166:     const counter_t range_stop_vector = vectorindex(range_stop);
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 7566              		.loc 1 166 21 view .LVU2504
 7567 2cdf 4D89D3   		mov	r11, r10	# range_stop_vector, _70
 7568              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 7569              		.loc 1 168 117 view .LVU2505
 7570 2ce2 4A8D0CAD 		lea	rcx, 0[0+r13*4]	# _157,
 7570      00000000 
 7571              	# sieve_extend.c:166:     const counter_t range_stop_vector = vectorindex(range_stop);
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 7572              		.loc 1 166 21 view .LVU2506
 7573 2cea 49C1EB08 		shr	r11, 8	# range_stop_vector,
 7574              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7575              		.loc 1 172 38 view .LVU2507
 7576 2cee 4C89EA   		mov	rdx, r13	# _166, step
 7577              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 7578              		.loc 1 168 142 view .LVU2508
 7579 2cf1 4C89DF   		mov	rdi, r11	# tmp424, range_stop_vector
 7580              	# sieve_extend.c:178:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 178:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 7581              		.loc 1 178 97 view .LVU2509
 7582 2cf4 4D89D8   		mov	r8, r11	# tmp422, range_stop_vector
 7583              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 7584              		.loc 1 168 142 view .LVU2510
 7585 2cf7 4829CF   		sub	rdi, rcx	# tmp424, _157
 7586              	.LBE486:
 7587              	.LBE485:
 7588              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7589              		.loc 1 256 31 view .LVU2511
 7590 2cfa 41BA0100 		mov	r10d, 1	# tmp431,
 7590      0000
 7591              	.LBB490:
 7592              	.LBB487:
 7593              	# sieve_extend.c:178:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 178:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 7594              		.loc 1 178 97 view .LVU2512
 7595 2d00 49C1E005 		sal	r8, 5	# tmp422,
GAS LISTING /tmp/ccFOD2R4.s 			page 206


 7596              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 7597              		.loc 1 168 92 view .LVU2513
 7598 2d04 48C1E705 		sal	rdi, 5	# tmp425,
 7599 2d08 4D01E0   		add	r8, r12	# _829, _100
 7600              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7601              		.loc 1 172 38 view .LVU2514
 7602 2d0b 48C1E205 		sal	rdx, 5	# _166,
 7603 2d0f 4C01E7   		add	rdi, r12	# tmp426, _100
 7604              	.LBE487:
 7605              	.LBE490:
 7606              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7607              		.loc 1 256 31 view .LVU2515
 7608 2d12 4C897424 		mov	QWORD PTR 64[rsp], r14	# %sfp, patternsize_bits
 7608      40
 7609 2d17 4939CB   		cmp	r11, rcx	# range_stop_vector, _157
 7610 2d1a 4C89E9   		mov	rcx, r13	# _893, step
 7611 2d1d 4D89EB   		mov	r11, r13	# _891, step
 7612              	# sieve_extend.c:251:         register bitvector_t quadmask = { };
 251:sieve_extend.c **** 
 7613              		.loc 1 251 30 view .LVU2516
 7614 2d20 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp428
 7615 2d24 490F46FC 		cmovbe	rdi, r12	# _100,, fast_loop_ptr
 7616              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7617              		.loc 1 256 31 view .LVU2517
 7618 2d28 4C897C24 		mov	QWORD PTR 72[rsp], r15	# %sfp, index
 7618      48
 7619 2d2d 4989F6   		mov	r14, rsi	# range_stop_unique, range_stop_unique
 7620              	.LVL377:
 256:sieve_extend.c ****             index += step;
 7621              		.loc 1 256 31 view .LVU2518
 7622 2d30 48C1E107 		sal	rcx, 7	# _893,
 7623 2d34 49C1E306 		sal	r11, 6	# _891,
 7624              	.LVL378:
 7625 2d38 0F1F8400 		.p2align 4
 7625      00000000 
 7626              		.p2align 3
 7627              	.L559:
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 7628              		.loc 1 248 9 is_stmt 1 view .LVU2519
 7629              	# sieve_extend.c:248:         const counter_t current_vector =  vectorindex(index);
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 7630              		.loc 1 248 25 is_stmt 0 view .LVU2520
 7631 2d40 4889D8   		mov	rax, rbx	# current_vector, index
 7632              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 7633              		.loc 1 250 35 view .LVU2521
 7634 2d43 4989D9   		mov	r9, rbx	# tmp427, index
 7635              	# sieve_extend.c:248:         const counter_t current_vector =  vectorindex(index);
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 7636              		.loc 1 248 25 view .LVU2522
 7637 2d46 48C1E808 		shr	rax, 8	# current_vector,
 7638              	.LVL379:
 249:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccFOD2R4.s 			page 207


 7639              		.loc 1 249 9 is_stmt 1 view .LVU2523
 7640              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 7641              		.loc 1 250 35 is_stmt 0 view .LVU2524
 7642 2d4a 49C1E906 		shr	r9, 6	# tmp427,
 7643              	# sieve_extend.c:249:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 249:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 7644              		.loc 1 249 25 view .LVU2525
 7645 2d4e 488D3485 		lea	rsi, 0[0+rax*4]	# current_vector_start_word,
 7645      00000000 
 7646              	.LVL380:
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 7647              		.loc 1 250 9 is_stmt 1 view .LVU2526
 7648              	# sieve_extend.c:251:         register bitvector_t quadmask = { };
 251:sieve_extend.c **** 
 7649              		.loc 1 251 30 is_stmt 0 view .LVU2527
 7650 2d56 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp428
 7650      24800000 
 7650      00
 7651              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 7652              		.loc 1 250 28 view .LVU2528
 7653 2d5f 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 7654              	.LVL381:
 251:sieve_extend.c **** 
 7655              		.loc 1 251 9 is_stmt 1 view .LVU2529
 7656              	.L555:
 256:sieve_extend.c ****             index += step;
 7657              		.loc 1 256 13 view .LVU2530
 7658              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7659              		.loc 1 256 31 is_stmt 0 view .LVU2531
 7660 2d62 C442E1F7 		shlx	r15, r10, rbx	# tmp430, tmp431, index
 7660      FA
 7661              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7662              		.loc 1 257 19 view .LVU2532
 7663 2d67 4C01EB   		add	rbx, r13	# index, step
 7664              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7665              		.loc 1 256 28 view .LVU2533
 7666 2d6a 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp430
 7666      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7667              		.loc 1 257 13 is_stmt 1 view .LVU2534
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7668              		.loc 1 258 13 view .LVU2535
 7669              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7670              		.loc 1 258 20 is_stmt 0 view .LVU2536
 7671 2d72 4989D9   		mov	r9, rbx	# tmp432, index
 7672              	.LVL382:
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7673              		.loc 1 258 20 view .LVU2537
 7674 2d75 49C1E906 		shr	r9, 6	# tmp432,
 7675              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccFOD2R4.s 			page 208


 7676              		.loc 1 258 18 view .LVU2538
 7677 2d79 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7678              		.loc 1 259 17 is_stmt 1 view .LVU2539
 7679              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7680              		.loc 1 259 9 is_stmt 0 view .LVU2540
 7681 2d7c 4983F903 		cmp	r9, 3	# word,
 7682 2d80 0F87FA00 		ja	.L866	#,
 7682      0000
 256:sieve_extend.c ****             index += step;
 7683              		.loc 1 256 13 is_stmt 1 view .LVU2541
 7684              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7685              		.loc 1 256 31 is_stmt 0 view .LVU2542
 7686 2d86 C442E1F7 		shlx	r15, r10, rbx	# tmp835, tmp431, index
 7686      FA
 7687              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7688              		.loc 1 257 19 view .LVU2543
 7689 2d8b 4C01EB   		add	rbx, r13	# index, step
 7690              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7691              		.loc 1 256 28 view .LVU2544
 7692 2d8e 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp835
 7692      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7693              		.loc 1 257 13 is_stmt 1 view .LVU2545
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7694              		.loc 1 258 13 view .LVU2546
 7695              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7696              		.loc 1 258 20 is_stmt 0 view .LVU2547
 7697 2d96 4989D9   		mov	r9, rbx	# tmp836, index
 7698 2d99 49C1E906 		shr	r9, 6	# tmp836,
 7699              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7700              		.loc 1 258 18 view .LVU2548
 7701 2d9d 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7702              		.loc 1 259 17 is_stmt 1 view .LVU2549
 7703              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7704              		.loc 1 259 9 is_stmt 0 view .LVU2550
 7705 2da0 4983F903 		cmp	r9, 3	# word,
 7706 2da4 0F87D600 		ja	.L866	#,
 7706      0000
 256:sieve_extend.c ****             index += step;
 7707              		.loc 1 256 13 is_stmt 1 view .LVU2551
 7708              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7709              		.loc 1 256 31 is_stmt 0 view .LVU2552
 7710 2daa C442E1F7 		shlx	r15, r10, rbx	# tmp838, tmp431, index
 7710      FA
 7711              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7712              		.loc 1 257 19 view .LVU2553
GAS LISTING /tmp/ccFOD2R4.s 			page 209


 7713 2daf 4C01EB   		add	rbx, r13	# index, step
 7714              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7715              		.loc 1 256 28 view .LVU2554
 7716 2db2 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp838
 7716      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7717              		.loc 1 257 13 is_stmt 1 view .LVU2555
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7718              		.loc 1 258 13 view .LVU2556
 7719              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7720              		.loc 1 258 20 is_stmt 0 view .LVU2557
 7721 2dba 4989D9   		mov	r9, rbx	# tmp839, index
 7722 2dbd 49C1E906 		shr	r9, 6	# tmp839,
 7723              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7724              		.loc 1 258 18 view .LVU2558
 7725 2dc1 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7726              		.loc 1 259 17 is_stmt 1 view .LVU2559
 7727              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7728              		.loc 1 259 9 is_stmt 0 view .LVU2560
 7729 2dc4 4983F903 		cmp	r9, 3	# word,
 7730 2dc8 0F87B200 		ja	.L866	#,
 7730      0000
 256:sieve_extend.c ****             index += step;
 7731              		.loc 1 256 13 is_stmt 1 view .LVU2561
 7732              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7733              		.loc 1 256 31 is_stmt 0 view .LVU2562
 7734 2dce C442E1F7 		shlx	r15, r10, rbx	# tmp841, tmp431, index
 7734      FA
 7735              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7736              		.loc 1 257 19 view .LVU2563
 7737 2dd3 4C01EB   		add	rbx, r13	# index, step
 7738              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7739              		.loc 1 256 28 view .LVU2564
 7740 2dd6 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp841
 7740      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7741              		.loc 1 257 13 is_stmt 1 view .LVU2565
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7742              		.loc 1 258 13 view .LVU2566
 7743              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7744              		.loc 1 258 20 is_stmt 0 view .LVU2567
 7745 2dde 4989D9   		mov	r9, rbx	# tmp842, index
 7746 2de1 49C1E906 		shr	r9, 6	# tmp842,
 7747              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7748              		.loc 1 258 18 view .LVU2568
 7749 2de5 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
GAS LISTING /tmp/ccFOD2R4.s 			page 210


 7750              		.loc 1 259 17 is_stmt 1 view .LVU2569
 7751              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7752              		.loc 1 259 9 is_stmt 0 view .LVU2570
 7753 2de8 4983F903 		cmp	r9, 3	# word,
 7754 2dec 0F878E00 		ja	.L866	#,
 7754      0000
 256:sieve_extend.c ****             index += step;
 7755              		.loc 1 256 13 is_stmt 1 view .LVU2571
 7756              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7757              		.loc 1 256 31 is_stmt 0 view .LVU2572
 7758 2df2 C442E1F7 		shlx	r15, r10, rbx	# tmp844, tmp431, index
 7758      FA
 7759              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7760              		.loc 1 257 19 view .LVU2573
 7761 2df7 4C01EB   		add	rbx, r13	# index, step
 7762              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7763              		.loc 1 256 28 view .LVU2574
 7764 2dfa 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp844
 7764      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7765              		.loc 1 257 13 is_stmt 1 view .LVU2575
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7766              		.loc 1 258 13 view .LVU2576
 7767              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7768              		.loc 1 258 20 is_stmt 0 view .LVU2577
 7769 2e02 4989D9   		mov	r9, rbx	# tmp845, index
 7770 2e05 49C1E906 		shr	r9, 6	# tmp845,
 7771              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7772              		.loc 1 258 18 view .LVU2578
 7773 2e09 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7774              		.loc 1 259 17 is_stmt 1 view .LVU2579
 7775              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7776              		.loc 1 259 9 is_stmt 0 view .LVU2580
 7777 2e0c 4983F903 		cmp	r9, 3	# word,
 7778 2e10 776E     		ja	.L866	#,
 256:sieve_extend.c ****             index += step;
 7779              		.loc 1 256 13 is_stmt 1 view .LVU2581
 7780              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7781              		.loc 1 256 31 is_stmt 0 view .LVU2582
 7782 2e12 C442E1F7 		shlx	r15, r10, rbx	# tmp847, tmp431, index
 7782      FA
 7783              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7784              		.loc 1 257 19 view .LVU2583
 7785 2e17 4C01EB   		add	rbx, r13	# index, step
 7786              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7787              		.loc 1 256 28 view .LVU2584
GAS LISTING /tmp/ccFOD2R4.s 			page 211


 7788 2e1a 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp847
 7788      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7789              		.loc 1 257 13 is_stmt 1 view .LVU2585
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7790              		.loc 1 258 13 view .LVU2586
 7791              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7792              		.loc 1 258 20 is_stmt 0 view .LVU2587
 7793 2e22 4989D9   		mov	r9, rbx	# tmp848, index
 7794 2e25 49C1E906 		shr	r9, 6	# tmp848,
 7795              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7796              		.loc 1 258 18 view .LVU2588
 7797 2e29 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7798              		.loc 1 259 17 is_stmt 1 view .LVU2589
 7799              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7800              		.loc 1 259 9 is_stmt 0 view .LVU2590
 7801 2e2c 4983F903 		cmp	r9, 3	# word,
 7802 2e30 774E     		ja	.L866	#,
 256:sieve_extend.c ****             index += step;
 7803              		.loc 1 256 13 is_stmt 1 view .LVU2591
 7804              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7805              		.loc 1 256 31 is_stmt 0 view .LVU2592
 7806 2e32 C442E1F7 		shlx	r15, r10, rbx	# tmp850, tmp431, index
 7806      FA
 7807              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7808              		.loc 1 257 19 view .LVU2593
 7809 2e37 4C01EB   		add	rbx, r13	# index, step
 7810              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7811              		.loc 1 256 28 view .LVU2594
 7812 2e3a 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp850
 7812      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7813              		.loc 1 257 13 is_stmt 1 view .LVU2595
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7814              		.loc 1 258 13 view .LVU2596
 7815              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7816              		.loc 1 258 20 is_stmt 0 view .LVU2597
 7817 2e42 4989D9   		mov	r9, rbx	# tmp851, index
 7818 2e45 49C1E906 		shr	r9, 6	# tmp851,
 7819              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7820              		.loc 1 258 18 view .LVU2598
 7821 2e49 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 259:sieve_extend.c **** 
 7822              		.loc 1 259 17 is_stmt 1 view .LVU2599
 7823              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7824              		.loc 1 259 9 is_stmt 0 view .LVU2600
 7825 2e4c 4983F903 		cmp	r9, 3	# word,
GAS LISTING /tmp/ccFOD2R4.s 			page 212


 7826 2e50 772E     		ja	.L866	#,
 256:sieve_extend.c ****             index += step;
 7827              		.loc 1 256 13 is_stmt 1 view .LVU2601
 7828              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7829              		.loc 1 256 31 is_stmt 0 view .LVU2602
 7830 2e52 C442E1F7 		shlx	r15, r10, rbx	# tmp853, tmp431, index
 7830      FA
 7831              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7832              		.loc 1 257 19 view .LVU2603
 7833 2e57 4C01EB   		add	rbx, r13	# index, step
 7834              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 7835              		.loc 1 256 28 view .LVU2604
 7836 2e5a 4E09BCCC 		or	QWORD PTR 128[rsp+r9*8], r15	# quadmask, tmp853
 7836      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 7837              		.loc 1 257 13 is_stmt 1 view .LVU2605
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7838              		.loc 1 258 13 view .LVU2606
 7839              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7840              		.loc 1 258 20 is_stmt 0 view .LVU2607
 7841 2e62 4989D9   		mov	r9, rbx	# tmp854, index
 7842 2e65 49C1E906 		shr	r9, 6	# tmp854,
 7843              	.LVL383:
 7844              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 7845              		.loc 1 258 18 view .LVU2608
 7846 2e69 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 7847              	.LVL384:
 259:sieve_extend.c **** 
 7848              		.loc 1 259 17 is_stmt 1 view .LVU2609
 7849              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 7850              		.loc 1 259 9 is_stmt 0 view .LVU2610
 7851 2e6c 4983F903 		cmp	r9, 3	# word,
 7852 2e70 0F86ECFE 		jbe	.L555	#,
 7852      FFFF
 7853              	.LVL385:
 7854 2e76 662E0F1F 		.p2align 4
 7854      84000000 
 7854      0000
 7855              		.p2align 3
 7856              	.L866:
 263:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 7857              		.loc 1 263 9 is_stmt 1 view .LVU2611
 264:sieve_extend.c ****     }
 7858              		.loc 1 264 9 view .LVU2612
 7859              	.LBB491:
 7860              	.LBB488:
 7861              	# sieve_extend.c:167:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 7862              		.loc 1 167 92 is_stmt 0 view .LVU2613
 7863 2e80 48C1E005 		sal	rax, 5	# tmp433,
 7864              	.LVL386:
GAS LISTING /tmp/ccFOD2R4.s 			page 213


 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 7865              		.loc 1 167 92 view .LVU2614
 7866              	.LBE488:
 7867              	.LBE491:
 7868              	# sieve_extend.c:264:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 264:sieve_extend.c ****     }
 7869              		.loc 1 264 9 view .LVU2615
 7870 2e84 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.55_141, quadmask
 7870      24800000 
 7870      00
 7871              	.LVL387:
 7872              	.LBB492:
 7873              	.LBI485:
 165:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 7874              		.loc 1 165 20 is_stmt 1 view .LVU2616
 7875              	.LBB489:
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 7876              		.loc 1 166 5 view .LVU2617
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 7877              		.loc 1 167 5 view .LVU2618
 7878              	# sieve_extend.c:167:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 7879              		.loc 1 167 81 is_stmt 0 view .LVU2619
 7880 2e8d 4C01E0   		add	rax, r12	# index_ptr, _100
 7881              	.LVL388:
 168:sieve_extend.c ****     
 7882              		.loc 1 168 5 is_stmt 1 view .LVU2620
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7883              		.loc 1 171 11 view .LVU2621
 7884 2e90 4839F8   		cmp	rax, rdi	# index_ptr, fast_loop_ptr
 7885 2e93 0F83D700 		jnb	.L970	#,
 7885      0000
 7886 2e99 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.514,
 7887              	.LVL389:
 7888              	.L557:
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7889              		.loc 1 172 9 view .LVU2622
 7890              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7891              		.loc 1 172 20 is_stmt 0 view .LVU2623
 7892 2e9d C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp434, quadmask.55_141, MEM[base: index_ptr_571, offset: 0B]
 7893 2ea1 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_571, offset: 0B], tmp434
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7894              		.loc 1 172 29 is_stmt 1 view .LVU2624
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7895              		.loc 1 173 9 view .LVU2625
 7896              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7897              		.loc 1 173 20 is_stmt 0 view .LVU2626
 7898 2ea5 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp435, quadmask.55_141, MEM[base: index_ptr_571, index: 
 7898      10
 7899 2eaa C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_571, index: _166, offset: 0B], tmp435
 7899      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7900              		.loc 1 173 29 is_stmt 1 view .LVU2627
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7901              		.loc 1 174 9 view .LVU2628
GAS LISTING /tmp/ccFOD2R4.s 			page 214


 7902 2eaf 4801C8   		add	rax, rcx	# index_ptr, _893
 7903              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7904              		.loc 1 174 20 is_stmt 0 view .LVU2629
 7905 2eb2 C5FDEB26 		vpor	ymm4, ymm0, YMMWORD PTR [rsi]	# tmp436, quadmask.55_141, MEM[base: _885, offset: 0B]
 7906 2eb6 C5FD7F26 		vmovdqa	YMMWORD PTR [rsi], ymm4	# MEM[base: _885, offset: 0B], tmp436
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7907              		.loc 1 174 29 is_stmt 1 view .LVU2630
 175:sieve_extend.c ****     }
 7908              		.loc 1 175 9 view .LVU2631
 7909              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 7910              		.loc 1 175 20 is_stmt 0 view .LVU2632
 7911 2eba C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rsi+rdx]	# tmp437, quadmask.55_141, MEM[base: _885, index: _166, off
 7911      16
 7912 2ebf C5FD7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm5	# MEM[base: _885, index: _166, offset: 0B], tmp437
 7912      16
 175:sieve_extend.c ****     }
 7913              		.loc 1 175 29 is_stmt 1 view .LVU2633
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7914              		.loc 1 171 11 view .LVU2634
 7915 2ec4 4801CE   		add	rsi, rcx	# ivtmp.514, _893
 7916 2ec7 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 7917 2eca 0F86A000 		jbe	.L970	#,
 7917      0000
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7918              		.loc 1 172 9 view .LVU2635
 7919              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7920              		.loc 1 172 20 is_stmt 0 view .LVU2636
 7921 2ed0 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp821, quadmask.55_141, MEM[base: index_ptr_571, offset: 0B]
 7922 2ed4 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_571, offset: 0B], tmp821
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7923              		.loc 1 172 29 is_stmt 1 view .LVU2637
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7924              		.loc 1 173 9 view .LVU2638
 7925              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7926              		.loc 1 173 20 is_stmt 0 view .LVU2639
 7927 2ed8 C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp822, quadmask.55_141, MEM[base: index_ptr_571, index: 
 7927      10
 7928 2edd C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_571, index: _166, offset: 0B], tmp822
 7928      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7929              		.loc 1 173 29 is_stmt 1 view .LVU2640
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7930              		.loc 1 174 9 view .LVU2641
 7931 2ee2 4801C8   		add	rax, rcx	# index_ptr, _893
 7932              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7933              		.loc 1 174 20 is_stmt 0 view .LVU2642
 7934 2ee5 C57DEB06 		vpor	ymm8, ymm0, YMMWORD PTR [rsi]	# tmp823, quadmask.55_141, MEM[base: _885, offset: 0B]
 7935 2ee9 C57D7F06 		vmovdqa	YMMWORD PTR [rsi], ymm8	# MEM[base: _885, offset: 0B], tmp823
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7936              		.loc 1 174 29 is_stmt 1 view .LVU2643
 175:sieve_extend.c ****     }
 7937              		.loc 1 175 9 view .LVU2644
GAS LISTING /tmp/ccFOD2R4.s 			page 215


 7938              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 7939              		.loc 1 175 20 is_stmt 0 view .LVU2645
 7940 2eed C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rsi+rdx]	# tmp824, quadmask.55_141, MEM[base: _885, index: _166, off
 7940      16
 7941 2ef2 C57D7F0C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm9	# MEM[base: _885, index: _166, offset: 0B], tmp824
 7941      16
 175:sieve_extend.c ****     }
 7942              		.loc 1 175 29 is_stmt 1 view .LVU2646
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7943              		.loc 1 171 11 view .LVU2647
 7944 2ef7 4801CE   		add	rsi, rcx	# ivtmp.514, _893
 7945 2efa 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 7946 2efd 7671     		jbe	.L970	#,
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7947              		.loc 1 172 9 view .LVU2648
 7948              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7949              		.loc 1 172 20 is_stmt 0 view .LVU2649
 7950 2eff C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp826, quadmask.55_141, MEM[base: index_ptr_571, offset: 0B
 7951 2f03 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_571, offset: 0B], tmp826
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7952              		.loc 1 172 29 is_stmt 1 view .LVU2650
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7953              		.loc 1 173 9 view .LVU2651
 7954              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7955              		.loc 1 173 20 is_stmt 0 view .LVU2652
 7956 2f07 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp827, quadmask.55_141, MEM[base: index_ptr_571, index:
 7956      10
 7957 2f0c C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_571, index: _166, offset: 0B], tmp827
 7957      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7958              		.loc 1 173 29 is_stmt 1 view .LVU2653
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7959              		.loc 1 174 9 view .LVU2654
 7960 2f11 4801C8   		add	rax, rcx	# index_ptr, _893
 7961              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7962              		.loc 1 174 20 is_stmt 0 view .LVU2655
 7963 2f14 C57DEB26 		vpor	ymm12, ymm0, YMMWORD PTR [rsi]	# tmp828, quadmask.55_141, MEM[base: _885, offset: 0B]
 7964 2f18 C57D7F26 		vmovdqa	YMMWORD PTR [rsi], ymm12	# MEM[base: _885, offset: 0B], tmp828
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7965              		.loc 1 174 29 is_stmt 1 view .LVU2656
 175:sieve_extend.c ****     }
 7966              		.loc 1 175 9 view .LVU2657
 7967              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 7968              		.loc 1 175 20 is_stmt 0 view .LVU2658
 7969 2f1c C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rsi+rdx]	# tmp829, quadmask.55_141, MEM[base: _885, index: _166, of
 7969      16
 7970 2f21 C57D7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm13	# MEM[base: _885, index: _166, offset: 0B], tmp829
 7970      16
 175:sieve_extend.c ****     }
 7971              		.loc 1 175 29 is_stmt 1 view .LVU2659
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7972              		.loc 1 171 11 view .LVU2660
GAS LISTING /tmp/ccFOD2R4.s 			page 216


 7973 2f26 4801CE   		add	rsi, rcx	# ivtmp.514, _893
 7974 2f29 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 7975 2f2c 7642     		jbe	.L970	#,
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7976              		.loc 1 172 9 view .LVU2661
 7977              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7978              		.loc 1 172 20 is_stmt 0 view .LVU2662
 7979 2f2e C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp831, quadmask.55_141, MEM[base: index_ptr_571, offset: 0B
 7980 2f32 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_571, offset: 0B], tmp831
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7981              		.loc 1 172 29 is_stmt 1 view .LVU2663
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7982              		.loc 1 173 9 view .LVU2664
 7983              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7984              		.loc 1 173 20 is_stmt 0 view .LVU2665
 7985 2f36 C57DEB3C 		vpor	ymm15, ymm0, YMMWORD PTR [rax+rdx]	# tmp832, quadmask.55_141, MEM[base: index_ptr_571, index:
 7985      10
 7986 2f3b C57D7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm15	# MEM[base: index_ptr_571, index: _166, offset: 0B], tmp832
 7986      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7987              		.loc 1 173 29 is_stmt 1 view .LVU2666
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7988              		.loc 1 174 9 view .LVU2667
 7989 2f40 4801C8   		add	rax, rcx	# index_ptr, _893
 7990              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7991              		.loc 1 174 20 is_stmt 0 view .LVU2668
 7992 2f43 C5FDEB0E 		vpor	ymm1, ymm0, YMMWORD PTR [rsi]	# tmp833, quadmask.55_141, MEM[base: _885, offset: 0B]
 7993 2f47 C5FD7F0E 		vmovdqa	YMMWORD PTR [rsi], ymm1	# MEM[base: _885, offset: 0B], tmp833
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 7994              		.loc 1 174 29 is_stmt 1 view .LVU2669
 175:sieve_extend.c ****     }
 7995              		.loc 1 175 9 view .LVU2670
 7996              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 7997              		.loc 1 175 20 is_stmt 0 view .LVU2671
 7998 2f4b C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rsi+rdx]	# tmp834, quadmask.55_141, MEM[base: _885, index: _166, off
 7998      16
 7999 2f50 C5FD7F1C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm3	# MEM[base: _885, index: _166, offset: 0B], tmp834
 7999      16
 175:sieve_extend.c ****     }
 8000              		.loc 1 175 29 is_stmt 1 view .LVU2672
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8001              		.loc 1 171 11 view .LVU2673
 8002 2f55 4801CE   		add	rsi, rcx	# ivtmp.514, _893
 8003 2f58 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 8004 2f5b 0F873CFF 		ja	.L557	#,
 8004      FFFF
 8005 2f61 66662E0F 		.p2align 4
 8005      1F840000 
 8005      0000000F 
 8005      1F4000
 8006              		.p2align 3
 8007              	.L970:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 217


 8008              		.loc 1 179 11 view .LVU2674
 8009 2f70 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8010 2f73 0F878700 		ja	.L560	#,
 8010      0000
 8011              	.L558:
 180:sieve_extend.c ****     }
 8012              		.loc 1 180 9 view .LVU2675
 8013              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8014              		.loc 1 180 20 is_stmt 0 view .LVU2676
 8015 2f79 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp438, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8016 2f7d C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_569, offset: 0B], tmp438
 180:sieve_extend.c ****     }
 8017              		.loc 1 180 29 is_stmt 1 view .LVU2677
 8018              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8019              		.loc 1 180 38 is_stmt 0 view .LVU2678
 8020 2f81 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8021              		.loc 1 179 11 is_stmt 1 view .LVU2679
 8022 2f84 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8023 2f87 7777     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8024              		.loc 1 180 9 view .LVU2680
 8025              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8026              		.loc 1 180 20 is_stmt 0 view .LVU2681
 8027 2f89 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp808, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8028 2f8d C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_569, offset: 0B], tmp808
 180:sieve_extend.c ****     }
 8029              		.loc 1 180 29 is_stmt 1 view .LVU2682
 8030              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8031              		.loc 1 180 38 is_stmt 0 view .LVU2683
 8032 2f91 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8033              		.loc 1 179 11 is_stmt 1 view .LVU2684
 8034 2f94 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8035 2f97 7767     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8036              		.loc 1 180 9 view .LVU2685
 8037              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8038              		.loc 1 180 20 is_stmt 0 view .LVU2686
 8039 2f99 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp810, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8040 2f9d C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_569, offset: 0B], tmp810
 180:sieve_extend.c ****     }
 8041              		.loc 1 180 29 is_stmt 1 view .LVU2687
 8042              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8043              		.loc 1 180 38 is_stmt 0 view .LVU2688
 8044 2fa1 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8045              		.loc 1 179 11 is_stmt 1 view .LVU2689
 8046 2fa4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8047 2fa7 7757     		ja	.L560	#,
 180:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 218


 8048              		.loc 1 180 9 view .LVU2690
 8049              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8050              		.loc 1 180 20 is_stmt 0 view .LVU2691
 8051 2fa9 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp812, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8052 2fad C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_569, offset: 0B], tmp812
 180:sieve_extend.c ****     }
 8053              		.loc 1 180 29 is_stmt 1 view .LVU2692
 8054              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8055              		.loc 1 180 38 is_stmt 0 view .LVU2693
 8056 2fb1 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8057              		.loc 1 179 11 is_stmt 1 view .LVU2694
 8058 2fb4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8059 2fb7 7747     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8060              		.loc 1 180 9 view .LVU2695
 8061              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8062              		.loc 1 180 20 is_stmt 0 view .LVU2696
 8063 2fb9 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp814, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8064 2fbd C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: index_ptr_569, offset: 0B], tmp814
 180:sieve_extend.c ****     }
 8065              		.loc 1 180 29 is_stmt 1 view .LVU2697
 8066              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8067              		.loc 1 180 38 is_stmt 0 view .LVU2698
 8068 2fc1 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8069              		.loc 1 179 11 is_stmt 1 view .LVU2699
 8070 2fc4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8071 2fc7 7737     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8072              		.loc 1 180 9 view .LVU2700
 8073              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8074              		.loc 1 180 20 is_stmt 0 view .LVU2701
 8075 2fc9 C57DEB08 		vpor	ymm9, ymm0, YMMWORD PTR [rax]	# tmp816, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B]
 8076 2fcd C57D7F08 		vmovdqa	YMMWORD PTR [rax], ymm9	# MEM[base: index_ptr_569, offset: 0B], tmp816
 180:sieve_extend.c ****     }
 8077              		.loc 1 180 29 is_stmt 1 view .LVU2702
 8078              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8079              		.loc 1 180 38 is_stmt 0 view .LVU2703
 8080 2fd1 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8081              		.loc 1 179 11 is_stmt 1 view .LVU2704
 8082 2fd4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8083 2fd7 7727     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8084              		.loc 1 180 9 view .LVU2705
 8085              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8086              		.loc 1 180 20 is_stmt 0 view .LVU2706
 8087 2fd9 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp818, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B
 8088 2fdd C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_569, offset: 0B], tmp818
GAS LISTING /tmp/ccFOD2R4.s 			page 219


 180:sieve_extend.c ****     }
 8089              		.loc 1 180 29 is_stmt 1 view .LVU2707
 8090              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8091              		.loc 1 180 38 is_stmt 0 view .LVU2708
 8092 2fe1 4801D0   		add	rax, rdx	# index_ptr, _166
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8093              		.loc 1 179 11 is_stmt 1 view .LVU2709
 8094 2fe4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8095 2fe7 7717     		ja	.L560	#,
 180:sieve_extend.c ****     }
 8096              		.loc 1 180 9 view .LVU2710
 8097              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8098              		.loc 1 180 20 is_stmt 0 view .LVU2711
 8099 2fe9 C57DEB18 		vpor	ymm11, ymm0, YMMWORD PTR [rax]	# tmp820, quadmask.55_141, MEM[base: index_ptr_569, offset: 0B
 8100 2fed C57D7F18 		vmovdqa	YMMWORD PTR [rax], ymm11	# MEM[base: index_ptr_569, offset: 0B], tmp820
 180:sieve_extend.c ****     }
 8101              		.loc 1 180 29 is_stmt 1 view .LVU2712
 8102              	.LVL390:
 8103              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 8104              		.loc 1 180 38 is_stmt 0 view .LVU2713
 8105 2ff1 4801D0   		add	rax, rdx	# index_ptr, _166
 8106              	.LVL391:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8107              		.loc 1 179 11 is_stmt 1 view .LVU2714
 8108 2ff4 4C39C0   		cmp	rax, r8	# index_ptr, _829
 8109 2ff7 7680     		jbe	.L558	#,
 8110              	.LVL392:
 8111 2ff9 0F1F8000 		.p2align 4
 8111      000000
 8112              		.p2align 3
 8113              	.L560:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 8114              		.loc 1 179 11 is_stmt 0 view .LVU2715
 8115              	.LBE489:
 8116              	.LBE492:
 8117              	.LBE484:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 8118              		.loc 1 247 41 is_stmt 1 view .LVU2716
 8119              	# sieve_extend.c:247:     for (counter_t index = range_start; index < range_stop_unique;) {
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 8120              		.loc 1 247 5 is_stmt 0 view .LVU2717
 8121 3000 4939DE   		cmp	r14, rbx	# range_stop_unique, index
 8122 3003 0F8737FD 		ja	.L559	#,
 8122      FFFF
 8123 3009 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# index, %sfp
 8123      48
 8124 300e 4C8B7424 		mov	r14, QWORD PTR 64[rsp]	# patternsize_bits, %sfp
 8124      40
 8125              	.LVL393:
 8126              	.L554:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 8127              		.loc 1 247 5 view .LVU2718
 8128              	.LBE483:
 8129              	.LBE477:
GAS LISTING /tmp/ccFOD2R4.s 			page 220


 8130              	.LBE476:
 8131              	.LBE510:
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8132              		.loc 1 473 11 is_stmt 1 view .LVU2719
 8133              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8134              		.loc 1 473 5 is_stmt 0 view .LVU2720
 8135 3013 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# _2, %sfp
 8135      70
 8136 3018 48395424 		cmp	QWORD PTR 120[rsp], rdx	# %sfp, _2
 8136      78
 8137 301d 0F83FE02 		jnb	.L975	#,
 8137      0000
 8138              	.LVL394:
 8139              	.L553:
 8140              	.LBB511:
 474:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8141              		.loc 1 474 9 is_stmt 1 view .LVU2721
 8142              	.LBB495:
 8143              	.LBI470:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 8144              		.loc 1 117 25 view .LVU2722
 8145              	.LBB472:
 118:sieve_extend.c ****     return index;
 8146              		.loc 1 118 5 view .LVU2723
 118:sieve_extend.c ****     return index;
 8147              		.loc 1 118 11 view .LVU2724
 8148              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8149              		.loc 1 118 23 is_stmt 0 view .LVU2725
 8150 3023 4D89FD   		mov	r13, r15	# tmp393, index
 8151 3026 49C1ED06 		shr	r13, 6	# tmp393,
 8152              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8153              		.loc 1 118 12 view .LVU2726
 8154 302a 4F8B0CEC 		mov	r9, QWORD PTR [r12+r13*8]	# *_592,* _100
 8155              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8156              		.loc 1 118 11 view .LVU2727
 8157 302e 4D0FA3F9 		bt	r9, r15	# *_592, index
 8158 3032 0F83A800 		jnc	.L540	#,
 8158      0000
 118:sieve_extend.c ****     return index;
 8159              		.loc 1 118 60 is_stmt 1 view .LVU2728
 8160              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8161              		.loc 1 118 65 is_stmt 0 view .LVU2729
 8162 3038 498D4F01 		lea	rcx, 1[r15]	# tmp564,
 8163              	.LVL395:
 8164              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8165              		.loc 1 118 23 view .LVU2730
 8166 303c 4989C8   		mov	r8, rcx	# tmp398, index
 8167              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8168              		.loc 1 118 65 view .LVU2731
 8169 303f 4989CF   		mov	r15, rcx	# index, tmp564
GAS LISTING /tmp/ccFOD2R4.s 			page 221


 118:sieve_extend.c ****     return index;
 8170              		.loc 1 118 11 is_stmt 1 view .LVU2732
 8171              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8172              		.loc 1 118 23 is_stmt 0 view .LVU2733
 8173 3042 49C1E806 		shr	r8, 6	# tmp398,
 8174              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8175              		.loc 1 118 12 view .LVU2734
 8176 3046 4B8B3CC4 		mov	rdi, QWORD PTR [r12+r8*8]	# *_50, *_50
 8177              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8178              		.loc 1 118 11 view .LVU2735
 8179 304a 480FA3CF 		bt	rdi, rcx	# *_50, index
 8180 304e 0F838C00 		jnc	.L540	#,
 8180      0000
 118:sieve_extend.c ****     return index;
 8181              		.loc 1 118 60 is_stmt 1 view .LVU2736
 8182              	.LVL396:
 8183              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8184              		.loc 1 118 65 is_stmt 0 view .LVU2737
 8185 3054 4983C701 		add	r15, 1	# index,
 8186              	.LVL397:
 118:sieve_extend.c ****     return index;
 8187              		.loc 1 118 11 is_stmt 1 view .LVU2738
 8188              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8189              		.loc 1 118 23 is_stmt 0 view .LVU2739
 8190 3058 4D89FA   		mov	r10, r15	# tmp746, index
 8191 305b 49C1EA06 		shr	r10, 6	# tmp746,
 8192              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8193              		.loc 1 118 12 view .LVU2740
 8194 305f 4F8B1CD4 		mov	r11, QWORD PTR [r12+r10*8]	# *_50, *_50
 8195              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8196              		.loc 1 118 11 view .LVU2741
 8197 3063 4D0FA3FB 		bt	r11, r15	# *_50, index
 8198 3067 7377     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8199              		.loc 1 118 60 is_stmt 1 view .LVU2742
 8200              	.LVL398:
 8201              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8202              		.loc 1 118 65 is_stmt 0 view .LVU2743
 8203 3069 4C8D7902 		lea	r15, 2[rcx]	# index,
 8204              	.LVL399:
 118:sieve_extend.c ****     return index;
 8205              		.loc 1 118 11 is_stmt 1 view .LVU2744
 8206              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8207              		.loc 1 118 23 is_stmt 0 view .LVU2745
 8208 306d 4C89F8   		mov	rax, r15	# tmp750, index
 8209 3070 48C1E806 		shr	rax, 6	# tmp750,
 8210              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccFOD2R4.s 			page 222


 8211              		.loc 1 118 12 view .LVU2746
 8212 3074 498B34C4 		mov	rsi, QWORD PTR [r12+rax*8]	# *_50, *_50
 8213              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8214              		.loc 1 118 11 view .LVU2747
 8215 3078 4C0FA3FE 		bt	rsi, r15	# *_50, index
 8216 307c 7362     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8217              		.loc 1 118 60 is_stmt 1 view .LVU2748
 8218              	.LVL400:
 8219              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8220              		.loc 1 118 65 is_stmt 0 view .LVU2749
 8221 307e 4C8D7903 		lea	r15, 3[rcx]	# index,
 8222              	.LVL401:
 118:sieve_extend.c ****     return index;
 8223              		.loc 1 118 11 is_stmt 1 view .LVU2750
 8224              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8225              		.loc 1 118 23 is_stmt 0 view .LVU2751
 8226 3082 4C89FA   		mov	rdx, r15	# tmp754, index
 8227 3085 48C1EA06 		shr	rdx, 6	# tmp754,
 8228              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8229              		.loc 1 118 12 view .LVU2752
 8230 3089 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# *_50, *_50
 8231              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8232              		.loc 1 118 11 view .LVU2753
 8233 308d 4C0FA3FB 		bt	rbx, r15	# *_50, index
 8234 3091 734D     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8235              		.loc 1 118 60 is_stmt 1 view .LVU2754
 8236              	.LVL402:
 8237              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8238              		.loc 1 118 65 is_stmt 0 view .LVU2755
 8239 3093 4C8D7904 		lea	r15, 4[rcx]	# index,
 8240              	.LVL403:
 118:sieve_extend.c ****     return index;
 8241              		.loc 1 118 11 is_stmt 1 view .LVU2756
 8242              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8243              		.loc 1 118 23 is_stmt 0 view .LVU2757
 8244 3097 4D89FD   		mov	r13, r15	# tmp758, index
 8245 309a 49C1ED06 		shr	r13, 6	# tmp758,
 8246              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8247              		.loc 1 118 12 view .LVU2758
 8248 309e 4F8B0CEC 		mov	r9, QWORD PTR [r12+r13*8]	# *_50, *_50
 8249              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8250              		.loc 1 118 11 view .LVU2759
 8251 30a2 4D0FA3F9 		bt	r9, r15	# *_50, index
 8252 30a6 7338     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8253              		.loc 1 118 60 is_stmt 1 view .LVU2760
GAS LISTING /tmp/ccFOD2R4.s 			page 223


 8254              	.LVL404:
 8255              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8256              		.loc 1 118 65 is_stmt 0 view .LVU2761
 8257 30a8 4C8D7905 		lea	r15, 5[rcx]	# index,
 8258              	.LVL405:
 118:sieve_extend.c ****     return index;
 8259              		.loc 1 118 11 is_stmt 1 view .LVU2762
 8260              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8261              		.loc 1 118 23 is_stmt 0 view .LVU2763
 8262 30ac 4D89F8   		mov	r8, r15	# tmp762, index
 8263 30af 49C1E806 		shr	r8, 6	# tmp762,
 8264              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8265              		.loc 1 118 12 view .LVU2764
 8266 30b3 4B8B3CC4 		mov	rdi, QWORD PTR [r12+r8*8]	# *_50, *_50
 8267              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8268              		.loc 1 118 11 view .LVU2765
 8269 30b7 4C0FA3FF 		bt	rdi, r15	# *_50, index
 8270 30bb 7323     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8271              		.loc 1 118 60 is_stmt 1 view .LVU2766
 8272              	.LVL406:
 8273              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8274              		.loc 1 118 65 is_stmt 0 view .LVU2767
 8275 30bd 4C8D7906 		lea	r15, 6[rcx]	# index,
 8276              	.LVL407:
 118:sieve_extend.c ****     return index;
 8277              		.loc 1 118 11 is_stmt 1 view .LVU2768
 8278              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8279              		.loc 1 118 23 is_stmt 0 view .LVU2769
 8280 30c1 4D89FA   		mov	r10, r15	# tmp766, index
 8281 30c4 49C1EA06 		shr	r10, 6	# tmp766,
 8282              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8283              		.loc 1 118 12 view .LVU2770
 8284 30c8 4F8B1CD4 		mov	r11, QWORD PTR [r12+r10*8]	# *_50, *_50
 8285              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8286              		.loc 1 118 11 view .LVU2771
 8287 30cc 4D0FA3FB 		bt	r11, r15	# *_50, index
 8288 30d0 730E     		jnc	.L540	#,
 118:sieve_extend.c ****     return index;
 8289              		.loc 1 118 60 is_stmt 1 view .LVU2772
 8290              	.LVL408:
 8291              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8292              		.loc 1 118 65 is_stmt 0 view .LVU2773
 8293 30d2 4C8D7907 		lea	r15, 7[rcx]	# index,
 8294              	.LVL409:
 118:sieve_extend.c ****     return index;
 8295              		.loc 1 118 11 is_stmt 1 view .LVU2774
 8296 30d6 E948FFFF 		jmp	.L553	#
GAS LISTING /tmp/ccFOD2R4.s 			page 224


 8296      FF
 8297              	.LVL410:
 8298 30db 0F1F4400 		.p2align 4,,7
 8298      00
 8299              		.p2align 3
 8300              	.L540:
 118:sieve_extend.c ****     return index;
 8301              		.loc 1 118 11 is_stmt 0 view .LVU2775
 8302              	.LBE472:
 8303              	.LBE495:
 8304              	.LBE511:
 8305              	.LBE516:
 8306              	.LBE521:
 8307              	# sieve_extend.c:503: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8308              		.loc 1 503 88 view .LVU2776
 8309 30e0 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# pattern_start, %sfp
 8309      50
 8310 30e5 4C89F0   		mov	rax, r14	# block$pattern_size, patternsize_bits
 8311 30e8 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	# prime, %sfp
 8311      68
 8312 30ed 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 8312      60
 8313 30f2 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# patternsize_bits, %sfp
 8313      58
 8314              	.LVL411:
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8315              		.loc 1 503 88 view .LVU2777
 8316 30f7 4C897C24 		mov	QWORD PTR 104[rsp], r15	# %sfp, index
 8316      68
 8317              	.LVL412:
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8318              		.loc 1 503 88 view .LVU2778
 8319 30fc 48897424 		mov	QWORD PTR 96[rsp], rsi	# %sfp, pattern_start
 8319      60
 8320              	.LVL413:
 503:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8321              		.loc 1 503 88 view .LVU2779
 8322 3101 4C89FE   		mov	rsi, r15	# index, index
 8323 3104 E9F7F9FF 		jmp	.L538	#
 8323      FF
 8324              	.LVL414:
 8325 3109 0F1F8000 		.p2align 4,,7
 8325      000000
 8326              		.p2align 3
 8327              	.L548:
 8328              	.LBB522:
 8329              	.LBB517:
 8330              	.LBB512:
 496:sieve_extend.c ****         block.prime = prime;
 8331              		.loc 1 496 39 is_stmt 1 view .LVU2780
 8332              	.LBB496:
 8333              	.LBI496:
 215:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8334              		.loc 1 215 20 view .LVU2781
 8335              	.LBB497:
 216:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
GAS LISTING /tmp/ccFOD2R4.s 			page 225


 8336              		.loc 1 216 5 view .LVU2782
 217:sieve_extend.c **** 
 8337              		.loc 1 217 5 view .LVU2783
 8338              	# sieve_extend.c:217:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 217:sieve_extend.c **** 
 8339              		.loc 1 217 74 is_stmt 0 view .LVU2784
 8340 3110 4D89EA   		mov	r10, r13	# tmp439, step
 8341 3113 49C1E206 		sal	r10, 6	# tmp439,
 8342              	# sieve_extend.c:217:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 217:sieve_extend.c **** 
 8343              		.loc 1 217 21 view .LVU2785
 8344 3117 4901DA   		add	r10, rbx	# range_stop_unique, index
 8345              	.LVL415:
 8346              	.LBB498:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8347              		.loc 1 220 10 is_stmt 1 view .LVU2786
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8348              		.loc 1 220 50 view .LVU2787
 8349              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8350              		.loc 1 220 5 is_stmt 0 view .LVU2788
 8351 311a 4C39D3   		cmp	rbx, r10	# index, range_stop_unique
 8352 311d 0F83F0FE 		jnb	.L554	#,
 8352      FFFF
 8353              	.LBB499:
 8354              	.LBB500:
 8355              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8356              		.loc 1 140 20 view .LVU2789
 8357 3123 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# _70, %sfp
 8357      78
 8358              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 8359              		.loc 1 142 112 view .LVU2790
 8360 3128 4B8D7CAD 		lea	rdi, 0[r13+r13*4]	# tmp442,
 8360      00
 8361              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8362              		.loc 1 160 29 view .LVU2791
 8363 312d 48C7C6FF 		mov	rsi, -1	# tmp1153,
 8363      FFFFFF
 8364              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8365              		.loc 1 147 38 view .LVU2792
 8366 3134 4A8D14ED 		lea	rdx, 0[0+r13*8]	# _212,
 8366      00000000 
 8367              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8368              		.loc 1 140 20 view .LVU2793
 8369 313c 4989CB   		mov	r11, rcx	# range_stop_word, _70
 8370              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8371              		.loc 1 160 29 view .LVU2794
 8372 313f 89C8     		mov	eax, ecx	# tmp443, _70
 8373              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8374              		.loc 1 140 20 view .LVU2795
GAS LISTING /tmp/ccFOD2R4.s 			page 226


 8375 3141 49C1EB06 		shr	r11, 6	# range_stop_word,
 8376              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8377              		.loc 1 160 29 view .LVU2796
 8378 3145 F7D0     		not	eax	# tmp443
 8379              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 8380              		.loc 1 142 135 view .LVU2797
 8381 3147 4D89D9   		mov	r9, r11	# tmp448, range_stop_word
 8382              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8383              		.loc 1 160 29 view .LVU2798
 8384 314a C462FBF7 		shrx	r8, rsi, rax	# _245, tmp1153, tmp443
 8384      C6
 8385 314f 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _245
 8385      48
 8386              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 8387              		.loc 1 142 135 view .LVU2799
 8388 3154 4929F9   		sub	r9, rdi	# tmp448, tmp442
 8389              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 8390              		.loc 1 142 53 view .LVU2800
 8391 3157 4939FB   		cmp	r11, rdi	# range_stop_word, tmp442
 8392              	# sieve_extend.c:154:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 154:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8393              		.loc 1 154 83 view .LVU2801
 8394 315a 4F8D04DC 		lea	r8, [r12+r11*8]	# _230,
 8395              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 8396              		.loc 1 142 53 view .LVU2802
 8397 315e 4F8D0CCC 		lea	r9, [r12+r9*8]	# tmp450,
 8398 3162 4D89EB   		mov	r11, r13	# _875, step
 8399 3165 4D0F46CC 		cmovbe	r9, r12	# _100,, fast_loop_ptr
 8400 3169 48C1E703 		sal	rdi, 3	# tmp454,
 8401 316d 49C1E304 		sal	r11, 4	# _875,
 8402 3171 66662E0F 		.p2align 4
 8402      1F840000 
 8402      0000000F 
 8402      1F4000
 8403              		.p2align 3
 8404              	.L566:
 142:sieve_extend.c **** 
 8405              		.loc 1 142 53 view .LVU2803
 8406              	.LBE500:
 8407              	.LBE499:
 221:sieve_extend.c ****     }
 8408              		.loc 1 221 9 is_stmt 1 view .LVU2804
 8409 3180 4889D8   		mov	rax, rbx	# tmp457, index
 8410 3183 B9010000 		mov	ecx, 1	# tmp1156,
 8410      00
 8411 3188 48C1E806 		shr	rax, 6	# tmp457,
 8412 318c C4E2E1F7 		shlx	rcx, rcx, rbx	# _197, tmp1156, index
 8412      C9
 8413              	.LVL416:
 8414              	.LBB503:
 8415              	.LBI499:
GAS LISTING /tmp/ccFOD2R4.s 			page 227


 139:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 8416              		.loc 1 139 20 view .LVU2805
 8417              	.LBB501:
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8418              		.loc 1 140 4 view .LVU2806
 141:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8419              		.loc 1 141 4 view .LVU2807
 8420              	# sieve_extend.c:141:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 141:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8421              		.loc 1 141 78 is_stmt 0 view .LVU2808
 8422 3191 498D04C4 		lea	rax, [r12+rax*8]	# index_ptr,
 8423              	.LVL417:
 142:sieve_extend.c **** 
 8424              		.loc 1 142 4 is_stmt 1 view .LVU2809
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8425              		.loc 1 146 10 view .LVU2810
 8426 3195 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 8427 3198 0F830201 		jnb	.L561	#,
 8427      0000
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8428              		.loc 1 146 10 is_stmt 0 view .LVU2811
 8429 319e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.541,
 8430              	.L562:
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8431              		.loc 1 147 8 is_stmt 1 view .LVU2812
 8432              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8433              		.loc 1 147 19 is_stmt 0 view .LVU2813
 8434 31a2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8435              		.loc 1 147 29 is_stmt 1 view .LVU2814
 8436              	.LVL418:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8437              		.loc 1 148 8 view .LVU2815
 8438              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8439              		.loc 1 148 19 is_stmt 0 view .LVU2816
 8440 31a5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8441              		.loc 1 148 29 is_stmt 1 view .LVU2817
 8442              	.LVL419:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8443              		.loc 1 149 8 view .LVU2818
 8444              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8445              		.loc 1 149 19 is_stmt 0 view .LVU2819
 8446 31a9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8447              		.loc 1 149 29 is_stmt 1 view .LVU2820
 8448              	.LVL420:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8449              		.loc 1 150 8 view .LVU2821
 8450              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8451              		.loc 1 150 19 is_stmt 0 view .LVU2822
 8452 31ac 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 228


 8453              		.loc 1 150 29 is_stmt 1 view .LVU2823
 8454              	.LVL421:
 151:sieve_extend.c ****    }
 8455              		.loc 1 151 8 view .LVU2824
 8456 31b0 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8457              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8458              		.loc 1 151 19 is_stmt 0 view .LVU2825
 8459 31b3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8460              		.loc 1 151 29 is_stmt 1 view .LVU2826
 8461 31b7 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8462              	.LVL422:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8463              		.loc 1 146 10 view .LVU2827
 8464 31ba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8465 31bd 0F86DD00 		jbe	.L561	#,
 8465      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8466              		.loc 1 147 8 view .LVU2828
 8467              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8468              		.loc 1 147 19 is_stmt 0 view .LVU2829
 8469 31c3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8470              		.loc 1 147 29 is_stmt 1 view .LVU2830
 8471              	.LVL423:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8472              		.loc 1 148 8 view .LVU2831
 8473              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8474              		.loc 1 148 19 is_stmt 0 view .LVU2832
 8475 31c6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8476              		.loc 1 148 29 is_stmt 1 view .LVU2833
 8477              	.LVL424:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8478              		.loc 1 149 8 view .LVU2834
 8479              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8480              		.loc 1 149 19 is_stmt 0 view .LVU2835
 8481 31ca 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8482              		.loc 1 149 29 is_stmt 1 view .LVU2836
 8483              	.LVL425:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8484              		.loc 1 150 8 view .LVU2837
 8485              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8486              		.loc 1 150 19 is_stmt 0 view .LVU2838
 8487 31cd 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8488              		.loc 1 150 29 is_stmt 1 view .LVU2839
 8489              	.LVL426:
 151:sieve_extend.c ****    }
 8490              		.loc 1 151 8 view .LVU2840
 8491 31d1 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
GAS LISTING /tmp/ccFOD2R4.s 			page 229


 8492              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8493              		.loc 1 151 19 is_stmt 0 view .LVU2841
 8494 31d4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8495              		.loc 1 151 29 is_stmt 1 view .LVU2842
 8496 31d8 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8497              	.LVL427:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8498              		.loc 1 146 10 view .LVU2843
 8499 31db 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8500 31de 0F86BC00 		jbe	.L561	#,
 8500      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8501              		.loc 1 147 8 view .LVU2844
 8502              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8503              		.loc 1 147 19 is_stmt 0 view .LVU2845
 8504 31e4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8505              		.loc 1 147 29 is_stmt 1 view .LVU2846
 8506              	.LVL428:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8507              		.loc 1 148 8 view .LVU2847
 8508              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8509              		.loc 1 148 19 is_stmt 0 view .LVU2848
 8510 31e7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8511              		.loc 1 148 29 is_stmt 1 view .LVU2849
 8512              	.LVL429:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8513              		.loc 1 149 8 view .LVU2850
 8514              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8515              		.loc 1 149 19 is_stmt 0 view .LVU2851
 8516 31eb 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8517              		.loc 1 149 29 is_stmt 1 view .LVU2852
 8518              	.LVL430:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8519              		.loc 1 150 8 view .LVU2853
 8520              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8521              		.loc 1 150 19 is_stmt 0 view .LVU2854
 8522 31ee 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8523              		.loc 1 150 29 is_stmt 1 view .LVU2855
 8524              	.LVL431:
 151:sieve_extend.c ****    }
 8525              		.loc 1 151 8 view .LVU2856
 8526 31f2 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8527              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8528              		.loc 1 151 19 is_stmt 0 view .LVU2857
 8529 31f5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
GAS LISTING /tmp/ccFOD2R4.s 			page 230


 8530              		.loc 1 151 29 is_stmt 1 view .LVU2858
 8531 31f9 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8532              	.LVL432:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8533              		.loc 1 146 10 view .LVU2859
 8534 31fc 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8535 31ff 0F869B00 		jbe	.L561	#,
 8535      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8536              		.loc 1 147 8 view .LVU2860
 8537              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8538              		.loc 1 147 19 is_stmt 0 view .LVU2861
 8539 3205 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8540              		.loc 1 147 29 is_stmt 1 view .LVU2862
 8541              	.LVL433:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8542              		.loc 1 148 8 view .LVU2863
 8543              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8544              		.loc 1 148 19 is_stmt 0 view .LVU2864
 8545 3208 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8546              		.loc 1 148 29 is_stmt 1 view .LVU2865
 8547              	.LVL434:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8548              		.loc 1 149 8 view .LVU2866
 8549              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8550              		.loc 1 149 19 is_stmt 0 view .LVU2867
 8551 320c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8552              		.loc 1 149 29 is_stmt 1 view .LVU2868
 8553              	.LVL435:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8554              		.loc 1 150 8 view .LVU2869
 8555              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8556              		.loc 1 150 19 is_stmt 0 view .LVU2870
 8557 320f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8558              		.loc 1 150 29 is_stmt 1 view .LVU2871
 8559              	.LVL436:
 151:sieve_extend.c ****    }
 8560              		.loc 1 151 8 view .LVU2872
 8561 3213 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8562              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8563              		.loc 1 151 19 is_stmt 0 view .LVU2873
 8564 3216 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8565              		.loc 1 151 29 is_stmt 1 view .LVU2874
 8566 321a 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8567              	.LVL437:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8568              		.loc 1 146 10 view .LVU2875
GAS LISTING /tmp/ccFOD2R4.s 			page 231


 8569 321d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8570 3220 767E     		jbe	.L561	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8571              		.loc 1 147 8 view .LVU2876
 8572              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8573              		.loc 1 147 19 is_stmt 0 view .LVU2877
 8574 3222 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8575              		.loc 1 147 29 is_stmt 1 view .LVU2878
 8576              	.LVL438:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8577              		.loc 1 148 8 view .LVU2879
 8578              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8579              		.loc 1 148 19 is_stmt 0 view .LVU2880
 8580 3225 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8581              		.loc 1 148 29 is_stmt 1 view .LVU2881
 8582              	.LVL439:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8583              		.loc 1 149 8 view .LVU2882
 8584              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8585              		.loc 1 149 19 is_stmt 0 view .LVU2883
 8586 3229 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8587              		.loc 1 149 29 is_stmt 1 view .LVU2884
 8588              	.LVL440:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8589              		.loc 1 150 8 view .LVU2885
 8590              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8591              		.loc 1 150 19 is_stmt 0 view .LVU2886
 8592 322c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8593              		.loc 1 150 29 is_stmt 1 view .LVU2887
 8594              	.LVL441:
 151:sieve_extend.c ****    }
 8595              		.loc 1 151 8 view .LVU2888
 8596 3230 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8597              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8598              		.loc 1 151 19 is_stmt 0 view .LVU2889
 8599 3233 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8600              		.loc 1 151 29 is_stmt 1 view .LVU2890
 8601 3237 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8602              	.LVL442:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8603              		.loc 1 146 10 view .LVU2891
 8604 323a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8605 323d 7661     		jbe	.L561	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8606              		.loc 1 147 8 view .LVU2892
 8607              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 232


 8608              		.loc 1 147 19 is_stmt 0 view .LVU2893
 8609 323f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8610              		.loc 1 147 29 is_stmt 1 view .LVU2894
 8611              	.LVL443:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8612              		.loc 1 148 8 view .LVU2895
 8613              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8614              		.loc 1 148 19 is_stmt 0 view .LVU2896
 8615 3242 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8616              		.loc 1 148 29 is_stmt 1 view .LVU2897
 8617              	.LVL444:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8618              		.loc 1 149 8 view .LVU2898
 8619              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8620              		.loc 1 149 19 is_stmt 0 view .LVU2899
 8621 3246 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8622              		.loc 1 149 29 is_stmt 1 view .LVU2900
 8623              	.LVL445:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8624              		.loc 1 150 8 view .LVU2901
 8625              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8626              		.loc 1 150 19 is_stmt 0 view .LVU2902
 8627 3249 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8628              		.loc 1 150 29 is_stmt 1 view .LVU2903
 8629              	.LVL446:
 151:sieve_extend.c ****    }
 8630              		.loc 1 151 8 view .LVU2904
 8631 324d 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8632              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8633              		.loc 1 151 19 is_stmt 0 view .LVU2905
 8634 3250 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8635              		.loc 1 151 29 is_stmt 1 view .LVU2906
 8636 3254 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8637              	.LVL447:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8638              		.loc 1 146 10 view .LVU2907
 8639 3257 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8640 325a 7644     		jbe	.L561	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8641              		.loc 1 147 8 view .LVU2908
 8642              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8643              		.loc 1 147 19 is_stmt 0 view .LVU2909
 8644 325c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8645              		.loc 1 147 29 is_stmt 1 view .LVU2910
 8646              	.LVL448:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 233


 8647              		.loc 1 148 8 view .LVU2911
 8648              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8649              		.loc 1 148 19 is_stmt 0 view .LVU2912
 8650 325f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8651              		.loc 1 148 29 is_stmt 1 view .LVU2913
 8652              	.LVL449:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8653              		.loc 1 149 8 view .LVU2914
 8654              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8655              		.loc 1 149 19 is_stmt 0 view .LVU2915
 8656 3263 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8657              		.loc 1 149 29 is_stmt 1 view .LVU2916
 8658              	.LVL450:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8659              		.loc 1 150 8 view .LVU2917
 8660              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8661              		.loc 1 150 19 is_stmt 0 view .LVU2918
 8662 3266 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8663              		.loc 1 150 29 is_stmt 1 view .LVU2919
 8664              	.LVL451:
 151:sieve_extend.c ****    }
 8665              		.loc 1 151 8 view .LVU2920
 8666 326a 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8667              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8668              		.loc 1 151 19 is_stmt 0 view .LVU2921
 8669 326d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8670              		.loc 1 151 29 is_stmt 1 view .LVU2922
 8671 3271 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8672              	.LVL452:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8673              		.loc 1 146 10 view .LVU2923
 8674 3274 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8675 3277 7627     		jbe	.L561	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8676              		.loc 1 147 8 view .LVU2924
 8677              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8678              		.loc 1 147 19 is_stmt 0 view .LVU2925
 8679 3279 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_567, offset: 0B], _197
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8680              		.loc 1 147 29 is_stmt 1 view .LVU2926
 8681              	.LVL453:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8682              		.loc 1 148 8 view .LVU2927
 8683              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8684              		.loc 1 148 19 is_stmt 0 view .LVU2928
 8685 327c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_567, index: _212, offset: 0B], _197
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 234


 8686              		.loc 1 148 29 is_stmt 1 view .LVU2929
 8687              	.LVL454:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8688              		.loc 1 149 8 view .LVU2930
 8689              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8690              		.loc 1 149 19 is_stmt 0 view .LVU2931
 8691 3280 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _865, offset: 0B], _197
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8692              		.loc 1 149 29 is_stmt 1 view .LVU2932
 8693              	.LVL455:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8694              		.loc 1 150 8 view .LVU2933
 8695              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8696              		.loc 1 150 19 is_stmt 0 view .LVU2934
 8697 3283 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _865, index: _212, offset: 0B], _197
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8698              		.loc 1 150 29 is_stmt 1 view .LVU2935
 8699              	.LVL456:
 151:sieve_extend.c ****    }
 8700              		.loc 1 151 8 view .LVU2936
 8701 3287 4801FE   		add	rsi, rdi	# ivtmp.541, tmp454
 8702              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 8703              		.loc 1 151 19 is_stmt 0 view .LVU2937
 8704 328a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_567, index: _212, step: 4, offset: 0B], _197
 151:sieve_extend.c ****    }
 8705              		.loc 1 151 29 is_stmt 1 view .LVU2938
 8706 328e 4801F8   		add	rax, rdi	# index_ptr, tmp454
 8707              	.LVL457:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8708              		.loc 1 146 10 view .LVU2939
 8709 3291 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 8710 3294 0F8708FF 		ja	.L562	#,
 8710      FFFF
 8711 329a 660F1F44 		.p2align 4
 8711      0000
 8712              		.p2align 3
 8713              	.L561:
 154:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8714              		.loc 1 154 4 view .LVU2940
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8715              		.loc 1 155 4 view .LVU2941
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8716              		.loc 1 155 10 view .LVU2942
 8717 32a0 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8718 32a3 735B     		jnb	.L563	#,
 8719              	.L564:
 156:sieve_extend.c ****    }
 8720              		.loc 1 156 8 view .LVU2943
 8721              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8722              		.loc 1 156 19 is_stmt 0 view .LVU2944
 8723 32a5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8724              		.loc 1 156 29 is_stmt 1 view .LVU2945
GAS LISTING /tmp/ccFOD2R4.s 			page 235


 8725              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8726              		.loc 1 156 38 is_stmt 0 view .LVU2946
 8727 32a8 4801D0   		add	rax, rdx	# index_ptr, _212
 8728              	.LVL458:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8729              		.loc 1 155 10 is_stmt 1 view .LVU2947
 8730 32ab 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8731 32ae 7350     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8732              		.loc 1 156 8 view .LVU2948
 8733              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8734              		.loc 1 156 19 is_stmt 0 view .LVU2949
 8735 32b0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8736              		.loc 1 156 29 is_stmt 1 view .LVU2950
 8737              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8738              		.loc 1 156 38 is_stmt 0 view .LVU2951
 8739 32b3 4801D0   		add	rax, rdx	# index_ptr, _212
 8740              	.LVL459:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8741              		.loc 1 155 10 is_stmt 1 view .LVU2952
 8742 32b6 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8743 32b9 7345     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8744              		.loc 1 156 8 view .LVU2953
 8745              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8746              		.loc 1 156 19 is_stmt 0 view .LVU2954
 8747 32bb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8748              		.loc 1 156 29 is_stmt 1 view .LVU2955
 8749              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8750              		.loc 1 156 38 is_stmt 0 view .LVU2956
 8751 32be 4801D0   		add	rax, rdx	# index_ptr, _212
 8752              	.LVL460:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8753              		.loc 1 155 10 is_stmt 1 view .LVU2957
 8754 32c1 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8755 32c4 733A     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8756              		.loc 1 156 8 view .LVU2958
 8757              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8758              		.loc 1 156 19 is_stmt 0 view .LVU2959
 8759 32c6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8760              		.loc 1 156 29 is_stmt 1 view .LVU2960
 8761              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8762              		.loc 1 156 38 is_stmt 0 view .LVU2961
 8763 32c9 4801D0   		add	rax, rdx	# index_ptr, _212
 8764              	.LVL461:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 236


 8765              		.loc 1 155 10 is_stmt 1 view .LVU2962
 8766 32cc 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8767 32cf 732F     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8768              		.loc 1 156 8 view .LVU2963
 8769              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8770              		.loc 1 156 19 is_stmt 0 view .LVU2964
 8771 32d1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8772              		.loc 1 156 29 is_stmt 1 view .LVU2965
 8773              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8774              		.loc 1 156 38 is_stmt 0 view .LVU2966
 8775 32d4 4801D0   		add	rax, rdx	# index_ptr, _212
 8776              	.LVL462:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8777              		.loc 1 155 10 is_stmt 1 view .LVU2967
 8778 32d7 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8779 32da 7324     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8780              		.loc 1 156 8 view .LVU2968
 8781              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8782              		.loc 1 156 19 is_stmt 0 view .LVU2969
 8783 32dc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8784              		.loc 1 156 29 is_stmt 1 view .LVU2970
 8785              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8786              		.loc 1 156 38 is_stmt 0 view .LVU2971
 8787 32df 4801D0   		add	rax, rdx	# index_ptr, _212
 8788              	.LVL463:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8789              		.loc 1 155 10 is_stmt 1 view .LVU2972
 8790 32e2 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8791 32e5 7319     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8792              		.loc 1 156 8 view .LVU2973
 8793              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8794              		.loc 1 156 19 is_stmt 0 view .LVU2974
 8795 32e7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8796              		.loc 1 156 29 is_stmt 1 view .LVU2975
 8797              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8798              		.loc 1 156 38 is_stmt 0 view .LVU2976
 8799 32ea 4801D0   		add	rax, rdx	# index_ptr, _212
 8800              	.LVL464:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8801              		.loc 1 155 10 is_stmt 1 view .LVU2977
 8802 32ed 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8803 32f0 730E     		jnb	.L563	#,
 156:sieve_extend.c ****    }
 8804              		.loc 1 156 8 view .LVU2978
 8805              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 237


 156:sieve_extend.c ****    }
 8806              		.loc 1 156 19 is_stmt 0 view .LVU2979
 8807 32f2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_190, offset: 0B], _197
 156:sieve_extend.c ****    }
 8808              		.loc 1 156 29 is_stmt 1 view .LVU2980
 8809              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 8810              		.loc 1 156 38 is_stmt 0 view .LVU2981
 8811 32f5 4801D0   		add	rax, rdx	# index_ptr, _212
 8812              	.LVL465:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8813              		.loc 1 155 10 is_stmt 1 view .LVU2982
 8814 32f8 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8815 32fb 72A8     		jb	.L564	#,
 8816 32fd 0F1F00   		.p2align 4
 8817              		.p2align 3
 8818              	.L563:
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8819              		.loc 1 159 4 view .LVU2983
 8820              	# sieve_extend.c:159:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8821              		.loc 1 159 7 is_stmt 0 view .LVU2984
 8822 3300 4C39C0   		cmp	rax, r8	# index_ptr, _230
 8823 3303 742B     		je	.L976	#,
 8824              	.LVL466:
 8825              	.L565:
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 8826              		.loc 1 159 7 view .LVU2985
 8827              	.LBE501:
 8828              	.LBE503:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8829              		.loc 1 220 77 is_stmt 1 view .LVU2986
 8830              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8831              		.loc 1 220 83 is_stmt 0 view .LVU2987
 8832 3305 4C01EB   		add	rbx, r13	# index, step
 8833              	.LVL467:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8834              		.loc 1 220 50 is_stmt 1 view .LVU2988
 8835              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8836              		.loc 1 220 5 is_stmt 0 view .LVU2989
 8837 3308 4939DA   		cmp	r10, rbx	# range_stop_unique, index
 8838 330b 0F876FFE 		ja	.L566	#,
 8838      FFFF
 8839              	.LVL468:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8840              		.loc 1 220 5 view .LVU2990
 8841              	.LBE498:
 8842              	.LBE497:
 8843              	.LBE496:
 8844              	.LBE512:
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8845              		.loc 1 473 11 is_stmt 1 view .LVU2991
 8846              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8847              		.loc 1 473 5 is_stmt 0 view .LVU2992
GAS LISTING /tmp/ccFOD2R4.s 			page 238


 8848 3311 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# _2, %sfp
 8848      70
 8849 3316 48395424 		cmp	QWORD PTR 120[rsp], rdx	# %sfp, _2
 8849      78
 8850 331b 0F8202FD 		jb	.L553	#,
 8850      FFFF
 8851              	.LVL469:
 8852              	.L975:
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8853              		.loc 1 473 5 view .LVU2993
 8854 3321 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# index, %sfp
 8854      68
 8855 3326 48895C24 		mov	QWORD PTR 40[rsp], rbx	# %sfp, index
 8855      28
 8856 332b 4889D9   		mov	rcx, rbx	# prime, index
 8857 332e EB65     		jmp	.L542	#
 8858              	.LVL470:
 8859              		.p2align 4,,7
 8860              		.p2align 3
 8861              	.L976:
 8862              	.LBB513:
 8863              	.LBB507:
 8864              	.LBB506:
 8865              	.LBB505:
 8866              	.LBB504:
 8867              	.LBB502:
 160:sieve_extend.c ****    }
 8868              		.loc 1 160 7 is_stmt 1 view .LVU2994
 8869              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8870              		.loc 1 160 27 is_stmt 0 view .LVU2995
 8871 3330 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp459, %sfp
 8871      48
 8872              	.LVL471:
 8873              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 8874              		.loc 1 160 18 view .LVU2996
 8875 3335 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_91, tmp459
 8876 3338 EBCB     		jmp	.L565	#
 8877              	.LVL472:
 8878 333a 660F1F44 		.p2align 4,,7
 8878      0000
 8879              		.p2align 3
 8880              	.L547:
 160:sieve_extend.c ****    }
 8881              		.loc 1 160 18 view .LVU2997
 8882              	.LBE502:
 8883              	.LBE504:
 8884              	.LBE505:
 8885              	.LBE506:
 8886              	.LBE507:
 8887              	.LBB508:
 8888              	.LBB475:
 425:sieve_extend.c **** }
 8889              		.loc 1 425 37 is_stmt 1 view .LVU2998
 8890 3340 C5F877   		vzeroupper
 8891 3343 E858DFFF 		call	continuePattern_aligned	#
GAS LISTING /tmp/ccFOD2R4.s 			page 239


 8891      FF
 8892              	.LVL473:
 425:sieve_extend.c **** }
 8893              		.loc 1 425 37 is_stmt 0 view .LVU2999
 8894 3348 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8894      50
 8895 334d E953F8FF 		jmp	.L544	#
 8895      FF
 8896              	.LVL474:
 8897              		.p2align 4,,7
 8898 3352 660F1F44 		.p2align 3
 8898      0000
 8899              	.L974:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8900              		.loc 1 423 37 is_stmt 1 view .LVU3000
 8901 3358 C5F877   		vzeroupper
 8902 335b E8C0E4FF 		call	continuePattern_shiftleft	#
 8902      FF
 8903              	.LVL475:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8904              		.loc 1 423 37 is_stmt 0 view .LVU3001
 8905 3360 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8905      50
 8906 3365 E93BF8FF 		jmp	.L544	#
 8906      FF
 8907              	.LVL476:
 8908              	.L973:
 418:sieve_extend.c **** 
 8909              		.loc 1 418 35 is_stmt 1 view .LVU3002
 8910              	# sieve_extend.c:418:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 418:sieve_extend.c **** 
 8911              		.loc 1 418 42 is_stmt 0 view .LVU3003
 8912 336a 4889F9   		mov	rcx, rdi	#, _70
 8913 336d 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8914 3370 4C89F6   		mov	rsi, r14	#, patternsize_bits
 8915 3373 4C89E7   		mov	rdi, r12	#, _100
 8916              	.LVL477:
 418:sieve_extend.c **** 
 8917              		.loc 1 418 42 view .LVU3004
 8918 3376 C5F877   		vzeroupper
 8919 3379 E882CCFF 		call	continuePattern_smallSize	#
 8919      FF
 8920              	.LVL478:
 8921 337e 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 8921      50
 8922 3383 E91DF8FF 		jmp	.L544	#
 8922      FF
 8923              	.LVL479:
 8924              	.L605:
 418:sieve_extend.c **** 
 8925              		.loc 1 418 42 view .LVU3005
 8926 3388 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 8926      28
 8927              	.LBE475:
 8928              	.LBE508:
 8929              	.LBE513:
 8930 338d 4989C6   		mov	r14, rax	# patternsize_bits, block$pattern_size
GAS LISTING /tmp/ccFOD2R4.s 			page 240


 8931 3390 48895424 		mov	QWORD PTR 96[rsp], rdx	# %sfp, block$pattern_start
 8931      60
 8932              	.LVL480:
 8933              	.L542:
 500:sieve_extend.c **** }
 8934              		.loc 1 500 5 is_stmt 1 view .LVU3006
 500:sieve_extend.c **** }
 8935              		.loc 1 500 5 is_stmt 0 view .LVU3007
 8936              	.LBE517:
 8937              	.LBE522:
 511:sieve_extend.c ****     counter_t startprime = block.prime;
 8938              		.loc 1 511 5 is_stmt 1 view .LVU3008
 8939 3395 488B4424 		mov	rax, QWORD PTR 16[rsp]	# <retval>, %sfp
 8939      10
 8940 339a 4889CB   		mov	rbx, rcx	# tmp460, prime
 8941 339d 48C1EB06 		shr	rbx, 6	# tmp460,
 8942              	.LBB523:
 8943              	.LBB524:
 8944              	# sieve_extend.c:418:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 418:sieve_extend.c **** 
 8945              		.loc 1 418 8 is_stmt 0 view .LVU3009
 8946 33a1 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 8947 33a5 4D8D2CDC 		lea	r13, [r12+rbx*8]	# _941,
 8948 33a9 41B90100 		mov	r9d, 1	# tmp463,
 8948      0000
 8949              	.LBE524:
 8950              	.LBE523:
 8951              	# sieve_extend.c:511:     continuePattern(bitstorage, block.pattern_start, block.pattern_size, siev
 511:sieve_extend.c ****     counter_t startprime = block.prime;
 8952              		.loc 1 511 5 view .LVU3010
 8953 33af 488B5008 		mov	rdx, QWORD PTR 8[rax]	# _2, sieve_95->bits
 8954 33b3 C442F1F7 		shlx	r8, r9, rcx	# _943, tmp463, tmp1164
 8954      C1
 8955 33b8 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, _941
 8955      20
 8956 33bd 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, _943
 8956      18
 8957 33c2 48895424 		mov	QWORD PTR 112[rsp], rdx	# %sfp, _2
 8957      70
 8958              	.LVL481:
 8959              	.LBB527:
 8960              	.LBI523:
 417:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 8961              		.loc 1 417 20 is_stmt 1 view .LVU3011
 8962              	.LBB525:
 418:sieve_extend.c **** 
 8963              		.loc 1 418 5 view .LVU3012
 8964              	# sieve_extend.c:418:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 418:sieve_extend.c **** 
 8965              		.loc 1 418 8 is_stmt 0 view .LVU3013
 8966 33c7 0F86020B 		jbe	.L977	#,
 8966      0000
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8967              		.loc 1 420 5 is_stmt 1 view .LVU3014
 8968              	# sieve_extend.c:420:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8969              		.loc 1 420 35 is_stmt 0 view .LVU3015
GAS LISTING /tmp/ccFOD2R4.s 			page 241


 8970 33cd 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 8970      60
 8971              	.LVL482:
 8972              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8973              		.loc 1 423 37 view .LVU3016
 8974 33d2 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 8974      70
 8975 33d7 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
 8975      60
 8976              	# sieve_extend.c:420:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8977              		.loc 1 420 35 view .LVU3017
 8978 33dc 498D3C16 		lea	rdi, [r14+rdx]	# tmp464,
 8979              	# sieve_extend.c:421:     const bitshift_t source_bit = bitindex_calc(source_start);
 421:sieve_extend.c **** 
 8980              		.loc 1 421 22 view .LVU3018
 8981 33e0 83E23F   		and	edx, 63	# source_bit,
 8982              	# sieve_extend.c:420:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 420:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8983              		.loc 1 420 22 view .LVU3019
 8984 33e3 83E73F   		and	edi, 63	# copy_bit,
 8985              	.LVL483:
 421:sieve_extend.c **** 
 8986              		.loc 1 421 5 is_stmt 1 view .LVU3020
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8987              		.loc 1 423 5 view .LVU3021
 8988              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8989              		.loc 1 423 13 is_stmt 0 view .LVU3022
 8990 33e6 4839D7   		cmp	rdi, rdx	# copy_bit, source_bit
 8991              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8992              		.loc 1 423 37 view .LVU3023
 8993 33e9 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8994              	.LVL484:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8995              		.loc 1 423 37 view .LVU3024
 8996 33ec 4C89E7   		mov	rdi, r12	#, _100
 8997              	.LVL485:
 8998              	# sieve_extend.c:423:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 8999              		.loc 1 423 13 view .LVU3025
 9000 33ef 0F82CD0A 		jb	.L978	#,
 9000      0000
 9001              	.LVL486:
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 9002              		.loc 1 424 10 is_stmt 1 view .LVU3026
 9003              	# sieve_extend.c:424:     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstora
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 9004              		.loc 1 424 13 is_stmt 0 view .LVU3027
 9005 33f5 0F86BA0A 		jbe	.L570	#,
 9005      0000
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 9006              		.loc 1 424 37 is_stmt 1 view .LVU3028
 9007 33fb C5F877   		vzeroupper
 9008 33fe E8DDD2FF 		call	continuePattern_shiftright_ivdep	#
GAS LISTING /tmp/ccFOD2R4.s 			page 242


 9008      FF
 9009              	.LVL487:
 9010              	.L568:
 424:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 9011              		.loc 1 424 37 is_stmt 0 view .LVU3029
 9012              	.LBE525:
 9013              	.LBE527:
 512:sieve_extend.c **** 
 9014              		.loc 1 512 5 is_stmt 1 view .LVU3030
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9015              		.loc 1 514 5 view .LVU3031
 9016              	.LBB528:
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9017              		.loc 1 514 10 view .LVU3032
 9018              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9019              		.loc 1 514 83 is_stmt 0 view .LVU3033
 9020 3403 4C8B5C24 		mov	r11, QWORD PTR 16[rsp]	# <retval>, %sfp
 9020      10
 9021              	.LBB529:
 9022              	.LBB530:
 9023              	.LBB531:
 9024              	.LBB532:
 9025              	.LBB533:
 9026              	.LBB534:
 9027              	# sieve_extend.c:221:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 221:sieve_extend.c ****     }
 9028              		.loc 1 221 9 view .LVU3034
 9029 3408 41BD0100 		mov	r13d, 1	# tmp557,
 9029      0000
 9030              	.LBE534:
 9031              	.LBE533:
 9032              	.LBE532:
 9033              	.LBE531:
 9034              	.LBE530:
 9035              	.LBE529:
 9036              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9037              		.loc 1 514 38 view .LVU3035
 9038 340e 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# blocksize, %sfp
 9038      30
 9039              	.LBB630:
 9040              	.LBB622:
 9041              	.LBB618:
 9042              	.LBB563:
 9043              	.LBB564:
 9044              	.LBB565:
 9045              	.LBB566:
 9046              	# sieve_extend.c:251:         register bitvector_t quadmask = { };
 251:sieve_extend.c **** 
 9047              		.loc 1 251 30 view .LVU3036
 9048 3413 4D89E6   		mov	r14, r12	# _100, _100
 9049              	.LBE566:
 9050              	.LBE565:
 9051              	.LBE564:
 9052              	.LBE563:
 9053              	.LBE618:
GAS LISTING /tmp/ccFOD2R4.s 			page 243


 9054              	.LBE622:
 9055              	.LBE630:
 9056              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9057              		.loc 1 514 20 view .LVU3037
 9058 3416 48C74424 		mov	QWORD PTR 104[rsp], 0	# %sfp,
 9058      68000000 
 9058      00
 9059              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9060              		.loc 1 514 83 view .LVU3038
 9061 341f 498B7308 		mov	rsi, QWORD PTR 8[r11]	# _16, sieve_95->bits
 9062              	.LBB631:
 9063              	.LBB623:
 9064              	.LBB619:
 9065              	.LBB598:
 9066              	.LBB592:
 9067              	.LBB584:
 9068              	.LBB579:
 9069              	# sieve_extend.c:251:         register bitvector_t quadmask = { };
 251:sieve_extend.c **** 
 9070              		.loc 1 251 30 view .LVU3039
 9071 3423 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp560
 9072              	.LBE579:
 9073              	.LBE584:
 9074              	.LBE592:
 9075              	.LBE598:
 9076              	.LBE619:
 9077              	.LBE623:
 9078              	.LBE631:
 9079              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9080              		.loc 1 514 38 view .LVU3040
 9081 3427 4883EA01 		sub	rdx, 1	# block_stop,
 9082              	.LVL488:
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9083              		.loc 1 514 63 is_stmt 1 view .LVU3041
 9084              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9085              		.loc 1 514 83 is_stmt 0 view .LVU3042
 9086 342b 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, _16
 9086      48
 9087              	.LVL489:
 9088              		.p2align 4
 9089              		.p2align 3
 9090              	.L574:
 9091              	.LBB632:
 515:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 9092              		.loc 1 515 9 is_stmt 1 view .LVU3043
 9093 3430 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# _16, %sfp
 9093      48
 9094              	.LBB624:
 9095              	.LBB625:
 9096              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9097              		.loc 1 118 11 is_stmt 0 view .LVU3044
 9098 3435 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# _941, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 244


 9098      20
 9099 343a 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# _943, %sfp
 9099      18
 9100 343f 4939D4   		cmp	r12, rdx	# _16, block_stop
 9101 3442 490F46D4 		cmovbe	rdx, r12	# _16,, block_stop
 9102              	.LVL490:
 118:sieve_extend.c ****     return index;
 9103              		.loc 1 118 11 view .LVU3045
 9104 3446 49850F   		test	QWORD PTR [r15], rcx	# MEM[(uint64_t *)prephitmp_944], _943
 9105 3449 48895424 		mov	QWORD PTR 112[rsp], rdx	# %sfp, block_stop
 9105      70
 9106              	.LVL491:
 118:sieve_extend.c ****     return index;
 9107              		.loc 1 118 11 view .LVU3046
 9108              	.LBE625:
 9109              	.LBE624:
 516:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 9110              		.loc 1 516 9 is_stmt 1 view .LVU3047
 9111              	.LBB627:
 9112              	.LBI624:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 9113              		.loc 1 117 25 view .LVU3048
 9114              	.LBB626:
 118:sieve_extend.c ****     return index;
 9115              		.loc 1 118 5 view .LVU3049
 118:sieve_extend.c ****     return index;
 9116              		.loc 1 118 11 view .LVU3050
 9117 344e 488B5424 		mov	rdx, QWORD PTR 40[rsp]	# index, %sfp
 9117      28
 9118              	.LVL492:
 118:sieve_extend.c ****     return index;
 9119              		.loc 1 118 11 is_stmt 0 view .LVU3051
 9120 3453 0F84B700 		je	.L571	#,
 9120      0000
 9121              	.L572:
 9122              	.LVL493:
 118:sieve_extend.c ****     return index;
 9123              		.loc 1 118 60 is_stmt 1 view .LVU3052
 9124              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9125              		.loc 1 118 65 is_stmt 0 view .LVU3053
 9126 3459 488D4201 		lea	rax, 1[rdx]	# tmp563,
 9127              	.LVL494:
 9128              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9129              		.loc 1 118 23 view .LVU3054
 9130 345d 4889C3   		mov	rbx, rax	# tmp466, index
 9131              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9132              		.loc 1 118 65 view .LVU3055
 9133 3460 4889C2   		mov	rdx, rax	# index, tmp563
 118:sieve_extend.c ****     return index;
 9134              		.loc 1 118 11 is_stmt 1 view .LVU3056
 9135              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9136              		.loc 1 118 23 is_stmt 0 view .LVU3057
 9137 3463 48C1EB06 		shr	rbx, 6	# tmp466,
GAS LISTING /tmp/ccFOD2R4.s 			page 245


 9138              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9139              		.loc 1 118 12 view .LVU3058
 9140 3467 4D8B0CDE 		mov	r9, QWORD PTR [r14+rbx*8]	# *_32, *_32
 9141              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9142              		.loc 1 118 11 view .LVU3059
 9143 346b 490FA3C1 		bt	r9, rax	# *_32, index
 9144 346f 0F839B00 		jnc	.L571	#,
 9144      0000
 118:sieve_extend.c ****     return index;
 9145              		.loc 1 118 60 is_stmt 1 view .LVU3060
 9146              	.LVL495:
 9147              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9148              		.loc 1 118 65 is_stmt 0 view .LVU3061
 9149 3475 4883C201 		add	rdx, 1	# index,
 9150              	.LVL496:
 118:sieve_extend.c ****     return index;
 9151              		.loc 1 118 11 is_stmt 1 view .LVU3062
 9152              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9153              		.loc 1 118 23 is_stmt 0 view .LVU3063
 9154 3479 4989D0   		mov	r8, rdx	# tmp718, index
 9155 347c 49C1E806 		shr	r8, 6	# tmp718,
 9156              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9157              		.loc 1 118 12 view .LVU3064
 9158 3480 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_32, *_32
 9159              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9160              		.loc 1 118 11 view .LVU3065
 9161 3484 480FA3D7 		bt	rdi, rdx	# *_32, index
 9162 3488 0F838200 		jnc	.L571	#,
 9162      0000
 118:sieve_extend.c ****     return index;
 9163              		.loc 1 118 60 is_stmt 1 view .LVU3066
 9164              	.LVL497:
 9165              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9166              		.loc 1 118 65 is_stmt 0 view .LVU3067
 9167 348e 488D5002 		lea	rdx, 2[rax]	# index,
 9168              	.LVL498:
 118:sieve_extend.c ****     return index;
 9169              		.loc 1 118 11 is_stmt 1 view .LVU3068
 9170              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9171              		.loc 1 118 23 is_stmt 0 view .LVU3069
 9172 3492 4989D2   		mov	r10, rdx	# tmp722, index
 9173 3495 49C1EA06 		shr	r10, 6	# tmp722,
 9174              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9175              		.loc 1 118 12 view .LVU3070
 9176 3499 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_32, *_32
 9177              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9178              		.loc 1 118 11 view .LVU3071
GAS LISTING /tmp/ccFOD2R4.s 			page 246


 9179 349d 490FA3D3 		bt	r11, rdx	# *_32, index
 9180 34a1 736D     		jnc	.L571	#,
 118:sieve_extend.c ****     return index;
 9181              		.loc 1 118 60 is_stmt 1 view .LVU3072
 9182              	.LVL499:
 9183              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9184              		.loc 1 118 65 is_stmt 0 view .LVU3073
 9185 34a3 488D5003 		lea	rdx, 3[rax]	# index,
 9186              	.LVL500:
 118:sieve_extend.c ****     return index;
 9187              		.loc 1 118 11 is_stmt 1 view .LVU3074
 9188              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9189              		.loc 1 118 23 is_stmt 0 view .LVU3075
 9190 34a7 4889D6   		mov	rsi, rdx	# tmp726, index
 9191 34aa 48C1EE06 		shr	rsi, 6	# tmp726,
 9192              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9193              		.loc 1 118 12 view .LVU3076
 9194 34ae 4D8B24F6 		mov	r12, QWORD PTR [r14+rsi*8]	# *_32, *_32
 9195              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9196              		.loc 1 118 11 view .LVU3077
 9197 34b2 490FA3D4 		bt	r12, rdx	# *_32, index
 9198 34b6 7358     		jnc	.L571	#,
 118:sieve_extend.c ****     return index;
 9199              		.loc 1 118 60 is_stmt 1 view .LVU3078
 9200              	.LVL501:
 9201              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9202              		.loc 1 118 65 is_stmt 0 view .LVU3079
 9203 34b8 488D5004 		lea	rdx, 4[rax]	# index,
 9204              	.LVL502:
 118:sieve_extend.c ****     return index;
 9205              		.loc 1 118 11 is_stmt 1 view .LVU3080
 9206              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9207              		.loc 1 118 23 is_stmt 0 view .LVU3081
 9208 34bc 4989D7   		mov	r15, rdx	# tmp730, index
 9209 34bf 49C1EF06 		shr	r15, 6	# tmp730,
 9210              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9211              		.loc 1 118 12 view .LVU3082
 9212 34c3 4B8B0CFE 		mov	rcx, QWORD PTR [r14+r15*8]	# *_32, *_32
 9213              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9214              		.loc 1 118 11 view .LVU3083
 9215 34c7 480FA3D1 		bt	rcx, rdx	# *_32, index
 9216 34cb 7343     		jnc	.L571	#,
 118:sieve_extend.c ****     return index;
 9217              		.loc 1 118 60 is_stmt 1 view .LVU3084
 9218              	.LVL503:
 9219              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9220              		.loc 1 118 65 is_stmt 0 view .LVU3085
 9221 34cd 488D5005 		lea	rdx, 5[rax]	# index,
GAS LISTING /tmp/ccFOD2R4.s 			page 247


 9222              	.LVL504:
 118:sieve_extend.c ****     return index;
 9223              		.loc 1 118 11 is_stmt 1 view .LVU3086
 9224              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9225              		.loc 1 118 23 is_stmt 0 view .LVU3087
 9226 34d1 4889D3   		mov	rbx, rdx	# tmp734, index
 9227 34d4 48C1EB06 		shr	rbx, 6	# tmp734,
 9228              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9229              		.loc 1 118 12 view .LVU3088
 9230 34d8 4D8B0CDE 		mov	r9, QWORD PTR [r14+rbx*8]	# *_32, *_32
 9231              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9232              		.loc 1 118 11 view .LVU3089
 9233 34dc 490FA3D1 		bt	r9, rdx	# *_32, index
 9234 34e0 732E     		jnc	.L571	#,
 118:sieve_extend.c ****     return index;
 9235              		.loc 1 118 60 is_stmt 1 view .LVU3090
 9236              	.LVL505:
 9237              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9238              		.loc 1 118 65 is_stmt 0 view .LVU3091
 9239 34e2 488D5006 		lea	rdx, 6[rax]	# index,
 9240              	.LVL506:
 118:sieve_extend.c ****     return index;
 9241              		.loc 1 118 11 is_stmt 1 view .LVU3092
 9242              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9243              		.loc 1 118 23 is_stmt 0 view .LVU3093
 9244 34e6 4989D0   		mov	r8, rdx	# tmp738, index
 9245 34e9 49C1E806 		shr	r8, 6	# tmp738,
 9246              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9247              		.loc 1 118 12 view .LVU3094
 9248 34ed 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_32, *_32
 9249              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9250              		.loc 1 118 11 view .LVU3095
 9251 34f1 480FA3D7 		bt	rdi, rdx	# *_32, index
 9252 34f5 7319     		jnc	.L571	#,
 118:sieve_extend.c ****     return index;
 9253              		.loc 1 118 60 is_stmt 1 view .LVU3096
 9254              	.LVL507:
 9255              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9256              		.loc 1 118 65 is_stmt 0 view .LVU3097
 9257 34f7 488D5007 		lea	rdx, 7[rax]	# index,
 9258              	.LVL508:
 118:sieve_extend.c ****     return index;
 9259              		.loc 1 118 11 is_stmt 1 view .LVU3098
 9260              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9261              		.loc 1 118 23 is_stmt 0 view .LVU3099
 9262 34fb 4889D0   		mov	rax, rdx	# tmp742, index
 9263 34fe 48C1E806 		shr	rax, 6	# tmp742,
 9264              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccFOD2R4.s 			page 248


 118:sieve_extend.c ****     return index;
 9265              		.loc 1 118 12 view .LVU3100
 9266 3502 4D8B14C6 		mov	r10, QWORD PTR [r14+rax*8]	# *_32, *_32
 9267              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9268              		.loc 1 118 11 view .LVU3101
 9269 3506 490FA3D2 		bt	r10, rdx	# *_32, index
 9270 350a 0F8249FF 		jc	.L572	#,
 9270      FFFF
 9271              	.LVL509:
 9272              		.p2align 4
 9273              		.p2align 3
 9274              	.L571:
 119:sieve_extend.c **** }
 9275              		.loc 1 119 5 is_stmt 1 view .LVU3102
 119:sieve_extend.c **** }
 9276              		.loc 1 119 5 is_stmt 0 view .LVU3103
 9277              	.LBE626:
 9278              	.LBE627:
 517:sieve_extend.c ****     } 
 9279              		.loc 1 517 9 is_stmt 1 view .LVU3104
 9280              	.LBB628:
 9281              	.LBI530:
 428:sieve_extend.c ****     counter_t prime = prime_start;
 9282              		.loc 1 428 13 view .LVU3105
 9283              	.LBB620:
 429:sieve_extend.c ****     counter_t start = 0;
 9284              		.loc 1 429 5 view .LVU3106
 430:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 9285              		.loc 1 430 5 view .LVU3107
 431:sieve_extend.c **** 
 9286              		.loc 1 431 5 view .LVU3108
 9287              	# sieve_extend.c:431:     counter_t step  = prime * 2 + 1;
 431:sieve_extend.c **** 
 9288              		.loc 1 431 15 is_stmt 0 view .LVU3109
 9289 3510 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 9289      01
 9290              	.LVL510:
 433:sieve_extend.c ****     
 9291              		.loc 1 433 5 is_stmt 1 view .LVU3110
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9292              		.loc 1 435 5 view .LVU3111
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9293              		.loc 1 435 11 view .LVU3112
 9294              	# sieve_extend.c:435:     while (prime*step <= block_stop) {
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9295              		.loc 1 435 17 is_stmt 0 view .LVU3113
 9296 3515 4989F3   		mov	r11, rsi	# tmp472, step
 9297 3518 4C0FAFDA 		imul	r11, rdx	# tmp472, index
 9298              	# sieve_extend.c:435:     while (prime*step <= block_stop) {
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9299              		.loc 1 435 11 view .LVU3114
 9300 351c 4C395C24 		cmp	QWORD PTR 112[rsp], r11	# %sfp, tmp472
 9300      70
 9301 3521 0F82BD02 		jb	.L602	#,
 9301      0000
 9302              	.LBB599:
GAS LISTING /tmp/ccFOD2R4.s 			page 249


 9303              	.LBB557:
 9304              	.LBB551:
 9305              	.LBB535:
 9306              	.LBB536:
 9307              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9308              		.loc 1 140 20 view .LVU3115
 9309 3527 4C8B6424 		mov	r12, QWORD PTR 112[rsp]	# block_stop, %sfp
 9309      70
 9310              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 9311              		.loc 1 160 29 view .LVU3116
 9312 352c 48C7C1FF 		mov	rcx, -1	# tmp1188,
 9312      FFFFFF
 9313 3533 488B0500 		mov	rax, QWORD PTR global_VECTORSTEP_FASTER[rip]	# pretmp_854, global_VECTORSTEP_FASTER
 9313      000000
 9314              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9315              		.loc 1 140 20 view .LVU3117
 9316 353a 4D89E7   		mov	r15, r12	# range_stop_word, block_stop
 9317              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 9318              		.loc 1 160 29 view .LVU3118
 9319 353d 4489E3   		mov	ebx, r12d	# tmp474, block_stop
 9320              	.LBE536:
 9321              	.LBE535:
 9322              	.LBE551:
 9323              	.LBE557:
 9324              	.LBE599:
 9325              	.LBB600:
 9326              	.LBB593:
 9327              	.LBB585:
 9328              	.LBB580:
 9329              	.LBB567:
 9330              	.LBB568:
 9331              	# sieve_extend.c:166:     const counter_t range_stop_vector = vectorindex(range_stop);
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 9332              		.loc 1 166 21 view .LVU3119
 9333 3540 49C1EC08 		shr	r12, 8	# range_stop_vector,
 9334              	.LBE568:
 9335              	.LBE567:
 9336              	.LBE580:
 9337              	.LBE585:
 9338              	.LBE593:
 9339              	.LBE600:
 9340              	.LBB601:
 9341              	.LBB558:
 9342              	.LBB552:
 9343              	.LBB544:
 9344              	.LBB537:
 9345              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 9346              		.loc 1 160 29 view .LVU3120
 9347 3544 F7D3     		not	ebx	# tmp474
 9348              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9349              		.loc 1 140 20 view .LVU3121
GAS LISTING /tmp/ccFOD2R4.s 			page 250


 9350 3546 49C1EF06 		shr	r15, 6	# range_stop_word,
 9351              	.LBE537:
 9352              	.LBE544:
 9353              	.LBE552:
 9354              	.LBE558:
 9355              	.LBE601:
 9356              	.LBB602:
 9357              	.LBB594:
 9358              	.LBB586:
 9359              	.LBB581:
 9360              	.LBB574:
 9361              	.LBB569:
 9362              	# sieve_extend.c:178:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 178:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 9363              		.loc 1 178 97 view .LVU3122
 9364 354a 4D89E0   		mov	r8, r12	# _358, range_stop_vector
 9365 354d 49C1E005 		sal	r8, 5	# _358,
 9366              	.LBE569:
 9367              	.LBE574:
 9368              	.LBE581:
 9369              	.LBE586:
 9370              	.LBE594:
 9371              	.LBE602:
 9372              	.LBB603:
 9373              	.LBB559:
 9374              	.LBB553:
 9375              	.LBB545:
 9376              	.LBB538:
 9377              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 9378              		.loc 1 160 29 view .LVU3123
 9379 3551 C462E3F7 		shrx	r9, rcx, rbx	# _450, tmp1188, tmp474
 9379      C9
 9380              	# sieve_extend.c:140:    const counter_t range_stop_word = wordindex(range_stop);
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9381              		.loc 1 140 20 view .LVU3124
 9382 3556 4C897C24 		mov	QWORD PTR 80[rsp], r15	# %sfp, range_stop_word
 9382      50
 9383              	# sieve_extend.c:154:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 154:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9384              		.loc 1 154 83 view .LVU3125
 9385 355b 4B8D3CFE 		lea	rdi, [r14+r15*8]	# _435,
 9386              	.LBE538:
 9387              	.LBE545:
 9388              	.LBE553:
 9389              	.LBE559:
 9390              	.LBE603:
 9391              	.LBB604:
 9392              	.LBB595:
 9393              	.LBB587:
 9394              	.LBB582:
 9395              	.LBB575:
 9396              	.LBB570:
 9397              	# sieve_extend.c:166:     const counter_t range_stop_vector = vectorindex(range_stop);
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 9398              		.loc 1 166 21 view .LVU3126
 9399 355f 4C896424 		mov	QWORD PTR 64[rsp], r12	# %sfp, range_stop_vector
GAS LISTING /tmp/ccFOD2R4.s 			page 251


 9399      40
 9400 3564 4B8D1C06 		lea	rbx, [r14+r8]	# _912,
 9401 3568 48894424 		mov	QWORD PTR 88[rsp], rax	# %sfp, pretmp_854
 9401      58
 9402              	.LBE570:
 9403              	.LBE575:
 9404              	.LBE582:
 9405              	.LBE587:
 9406              	.LBE595:
 9407              	.LBE604:
 9408              	.LBB605:
 9409              	.LBB560:
 9410              	.LBB554:
 9411              	.LBB546:
 9412              	.LBB539:
 9413              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 9414              		.loc 1 160 29 view .LVU3127
 9415 356d 4C894C24 		mov	QWORD PTR 96[rsp], r9	# %sfp, _450
 9415      60
 9416              	.LVL511:
 9417 3572 66662E0F 		.p2align 4
 9417      1F840000 
 9417      0000000F 
 9417      1F00
 9418              		.p2align 3
 9419              	.L601:
 160:sieve_extend.c ****    }
 9420              		.loc 1 160 29 view .LVU3128
 9421              	.LBE539:
 9422              	.LBE546:
 9423              	.LBE554:
 9424              	.LBE560:
 9425              	.LBE605:
 436:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 9426              		.loc 1 436 9 is_stmt 1 view .LVU3129
 9427              	# sieve_extend.c:436:         if likely(block_start >= (prime + 1)) 
 436:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 9428              		.loc 1 436 12 is_stmt 0 view .LVU3130
 9429 3580 488B4424 		mov	rax, QWORD PTR 104[rsp]	# block_start, %sfp
 9429      68
 9430 3585 4C8D7A01 		lea	r15, 1[rdx]	# _252,
 9431 3589 4939C7   		cmp	r15, rax	# _252, block_start
 9432 358c 0F87EE07 		ja	.L576	#,
 9432      0000
 437:sieve_extend.c ****         else 
 9433              		.loc 1 437 13 is_stmt 1 view .LVU3131
 9434              	# sieve_extend.c:437:             start = block_start + prime + prime - ((block_start + prime) % st
 437:sieve_extend.c ****         else 
 9435              		.loc 1 437 33 is_stmt 0 view .LVU3132
 9436 3592 4801D0   		add	rax, rdx	# _256, index
 9437              	# sieve_extend.c:437:             start = block_start + prime + prime - ((block_start + prime) % st
 437:sieve_extend.c ****         else 
 9438              		.loc 1 437 41 view .LVU3133
 9439 3595 4C8D0C02 		lea	r9, [rdx+rax]	# tmp477,
 9440              	# sieve_extend.c:437:             start = block_start + prime + prime - ((block_start + prime) % st
 437:sieve_extend.c ****         else 
GAS LISTING /tmp/ccFOD2R4.s 			page 252


 9441              		.loc 1 437 74 view .LVU3134
 9442 3599 31D2     		xor	edx, edx	# tmp479
 9443 359b 48F7F6   		div	rsi	# step
 9444              	# sieve_extend.c:437:             start = block_start + prime + prime - ((block_start + prime) % st
 437:sieve_extend.c ****         else 
 9445              		.loc 1 437 19 view .LVU3135
 9446 359e 4929D1   		sub	r9, rdx	# index, tmp479
 9447              	.LVL512:
 9448              	.L577:
 441:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 9449              		.loc 1 441 9 is_stmt 1 view .LVU3136
 9450              	# sieve_extend.c:441:         if unlikely(step < VECTORSTEP_FASTER) {
 441:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 9451              		.loc 1 441 12 is_stmt 0 view .LVU3137
 9452 35a1 483B7424 		cmp	rsi, QWORD PTR 88[rsp]	# step, %sfp
 9452      58
 9453 35a6 0F829C02 		jb	.L979	#,
 9453      0000
 446:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 9454              		.loc 1 446 13 is_stmt 1 view .LVU3138
 9455              	.LVL513:
 9456              	.LBB606:
 9457              	.LBI532:
 215:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9458              		.loc 1 215 20 view .LVU3139
 9459              	.LBB561:
 216:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9460              		.loc 1 216 5 view .LVU3140
 217:sieve_extend.c **** 
 9461              		.loc 1 217 5 view .LVU3141
 9462              	# sieve_extend.c:217:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 217:sieve_extend.c **** 
 9463              		.loc 1 217 74 is_stmt 0 view .LVU3142
 9464 35ac 4989F4   		mov	r12, rsi	# tmp521, step
 9465 35af 49C1E406 		sal	r12, 6	# tmp521,
 9466              	# sieve_extend.c:217:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 217:sieve_extend.c **** 
 9467              		.loc 1 217 21 view .LVU3143
 9468 35b3 4D01CC   		add	r12, r9	# range_stop_unique, index
 9469              	.LVL514:
 9470              	.LBB555:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9471              		.loc 1 220 10 is_stmt 1 view .LVU3144
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9472              		.loc 1 220 50 view .LVU3145
 9473              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9474              		.loc 1 220 5 is_stmt 0 view .LVU3146
 9475 35b6 4D39E1   		cmp	r9, r12	# index, range_stop_unique
 9476 35b9 0F83D601 		jnb	.L600	#,
 9476      0000
 9477              	.LBB547:
 9478              	.LBB540:
 9479              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 9480              		.loc 1 142 135 view .LVU3147
 9481 35bf 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# range_stop_word, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 253


 9481      50
 9482              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 9483              		.loc 1 142 112 view .LVU3148
 9484 35c4 4C8D14B6 		lea	r10, [rsi+rsi*4]	# tmp531,
 9485 35c8 4989F0   		mov	r8, rsi	# _916, step
 9486              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9487              		.loc 1 147 38 view .LVU3149
 9488 35cb 488D14F5 		lea	rdx, 0[0+rsi*8]	# _417,
 9488      00000000 
 9489              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 9490              		.loc 1 142 135 view .LVU3150
 9491 35d3 4989CB   		mov	r11, rcx	# tmp533, range_stop_word
 9492 35d6 4D29D3   		sub	r11, r10	# tmp533, tmp531
 9493              	# sieve_extend.c:142:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 142:sieve_extend.c **** 
 9494              		.loc 1 142 53 view .LVU3151
 9495 35d9 4C39D1   		cmp	rcx, r10	# range_stop_word, tmp531
 9496 35dc 4F8D1CDE 		lea	r11, [r14+r11*8]	# tmp535,
 9497 35e0 4D0F46DE 		cmovbe	r11, r14	# _100,, fast_loop_ptr
 9498 35e4 49C1E004 		sal	r8, 4	# _916,
 9499 35e8 49C1E203 		sal	r10, 3	# tmp539,
 9500 35ec 4C894424 		mov	QWORD PTR 120[rsp], r8	# %sfp, _916
 9500      78
 9501 35f1 66662E0F 		.p2align 4
 9501      1F840000 
 9501      0000000F 
 9501      1F4000
 9502              		.p2align 3
 9503              	.L599:
 142:sieve_extend.c **** 
 9504              		.loc 1 142 53 view .LVU3152
 9505              	.LBE540:
 9506              	.LBE547:
 221:sieve_extend.c ****     }
 9507              		.loc 1 221 9 is_stmt 1 view .LVU3153
 9508 3600 4C89C8   		mov	rax, r9	# tmp542, index
 9509 3603 C4C2B1F7 		shlx	rcx, r13, r9	# _402, tmp557, index
 9509      CD
 9510              	.LVL515:
 9511              	.LBB548:
 9512              	.LBI535:
 139:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9513              		.loc 1 139 20 view .LVU3154
 9514              	.LBB541:
 140:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9515              		.loc 1 140 4 view .LVU3155
 141:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9516              		.loc 1 141 4 view .LVU3156
 9517              	.LBE541:
 9518              	.LBE548:
 9519              	# sieve_extend.c:221:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 221:sieve_extend.c ****     }
 9520              		.loc 1 221 9 is_stmt 0 view .LVU3157
 9521 3608 48C1E806 		shr	rax, 6	# tmp542,
GAS LISTING /tmp/ccFOD2R4.s 			page 254


 9522              	.LBB549:
 9523              	.LBB542:
 9524              	# sieve_extend.c:141:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 141:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9525              		.loc 1 141 78 view .LVU3158
 9526 360c 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 9527              	.LVL516:
 142:sieve_extend.c **** 
 9528              		.loc 1 142 4 is_stmt 1 view .LVU3159
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9529              		.loc 1 146 10 view .LVU3160
 9530 3610 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 9531 3613 0F830701 		jnb	.L594	#,
 9531      0000
 9532 3619 4C8B4424 		mov	r8, QWORD PTR 120[rsp]	# _916, %sfp
 9532      78
 9533 361e 4901C0   		add	r8, rax	# ivtmp.472, index_ptr
 9534              	.L595:
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9535              		.loc 1 147 8 view .LVU3161
 9536              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9537              		.loc 1 147 19 is_stmt 0 view .LVU3162
 9538 3621 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9539              		.loc 1 147 29 is_stmt 1 view .LVU3163
 9540              	.LVL517:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9541              		.loc 1 148 8 view .LVU3164
 9542              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9543              		.loc 1 148 19 is_stmt 0 view .LVU3165
 9544 3624 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9545              		.loc 1 148 29 is_stmt 1 view .LVU3166
 9546              	.LVL518:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9547              		.loc 1 149 8 view .LVU3167
 9548              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9549              		.loc 1 149 19 is_stmt 0 view .LVU3168
 9550 3628 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9551              		.loc 1 149 29 is_stmt 1 view .LVU3169
 9552              	.LVL519:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9553              		.loc 1 150 8 view .LVU3170
 9554              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9555              		.loc 1 150 19 is_stmt 0 view .LVU3171
 9556 362b 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9557              		.loc 1 150 29 is_stmt 1 view .LVU3172
 9558              	.LVL520:
 151:sieve_extend.c ****    }
 9559              		.loc 1 151 8 view .LVU3173
 9560 362f 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
GAS LISTING /tmp/ccFOD2R4.s 			page 255


 9561              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9562              		.loc 1 151 19 is_stmt 0 view .LVU3174
 9563 3632 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9564              		.loc 1 151 29 is_stmt 1 view .LVU3175
 9565 3636 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9566              	.LVL521:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9567              		.loc 1 146 10 view .LVU3176
 9568 3639 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9569 363c 0F86DE00 		jbe	.L594	#,
 9569      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9570              		.loc 1 147 8 view .LVU3177
 9571              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9572              		.loc 1 147 19 is_stmt 0 view .LVU3178
 9573 3642 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9574              		.loc 1 147 29 is_stmt 1 view .LVU3179
 9575              	.LVL522:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9576              		.loc 1 148 8 view .LVU3180
 9577              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9578              		.loc 1 148 19 is_stmt 0 view .LVU3181
 9579 3645 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9580              		.loc 1 148 29 is_stmt 1 view .LVU3182
 9581              	.LVL523:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9582              		.loc 1 149 8 view .LVU3183
 9583              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9584              		.loc 1 149 19 is_stmt 0 view .LVU3184
 9585 3649 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9586              		.loc 1 149 29 is_stmt 1 view .LVU3185
 9587              	.LVL524:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9588              		.loc 1 150 8 view .LVU3186
 9589              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9590              		.loc 1 150 19 is_stmt 0 view .LVU3187
 9591 364c 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9592              		.loc 1 150 29 is_stmt 1 view .LVU3188
 9593              	.LVL525:
 151:sieve_extend.c ****    }
 9594              		.loc 1 151 8 view .LVU3189
 9595 3650 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9596              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9597              		.loc 1 151 19 is_stmt 0 view .LVU3190
 9598 3653 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
GAS LISTING /tmp/ccFOD2R4.s 			page 256


 9599              		.loc 1 151 29 is_stmt 1 view .LVU3191
 9600 3657 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9601              	.LVL526:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9602              		.loc 1 146 10 view .LVU3192
 9603 365a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9604 365d 0F86BD00 		jbe	.L594	#,
 9604      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9605              		.loc 1 147 8 view .LVU3193
 9606              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9607              		.loc 1 147 19 is_stmt 0 view .LVU3194
 9608 3663 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9609              		.loc 1 147 29 is_stmt 1 view .LVU3195
 9610              	.LVL527:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9611              		.loc 1 148 8 view .LVU3196
 9612              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9613              		.loc 1 148 19 is_stmt 0 view .LVU3197
 9614 3666 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9615              		.loc 1 148 29 is_stmt 1 view .LVU3198
 9616              	.LVL528:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9617              		.loc 1 149 8 view .LVU3199
 9618              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9619              		.loc 1 149 19 is_stmt 0 view .LVU3200
 9620 366a 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9621              		.loc 1 149 29 is_stmt 1 view .LVU3201
 9622              	.LVL529:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9623              		.loc 1 150 8 view .LVU3202
 9624              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9625              		.loc 1 150 19 is_stmt 0 view .LVU3203
 9626 366d 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9627              		.loc 1 150 29 is_stmt 1 view .LVU3204
 9628              	.LVL530:
 151:sieve_extend.c ****    }
 9629              		.loc 1 151 8 view .LVU3205
 9630 3671 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9631              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9632              		.loc 1 151 19 is_stmt 0 view .LVU3206
 9633 3674 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9634              		.loc 1 151 29 is_stmt 1 view .LVU3207
 9635 3678 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9636              	.LVL531:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9637              		.loc 1 146 10 view .LVU3208
GAS LISTING /tmp/ccFOD2R4.s 			page 257


 9638 367b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9639 367e 0F869C00 		jbe	.L594	#,
 9639      0000
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9640              		.loc 1 147 8 view .LVU3209
 9641              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9642              		.loc 1 147 19 is_stmt 0 view .LVU3210
 9643 3684 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9644              		.loc 1 147 29 is_stmt 1 view .LVU3211
 9645              	.LVL532:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9646              		.loc 1 148 8 view .LVU3212
 9647              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9648              		.loc 1 148 19 is_stmt 0 view .LVU3213
 9649 3687 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9650              		.loc 1 148 29 is_stmt 1 view .LVU3214
 9651              	.LVL533:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9652              		.loc 1 149 8 view .LVU3215
 9653              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9654              		.loc 1 149 19 is_stmt 0 view .LVU3216
 9655 368b 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9656              		.loc 1 149 29 is_stmt 1 view .LVU3217
 9657              	.LVL534:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9658              		.loc 1 150 8 view .LVU3218
 9659              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9660              		.loc 1 150 19 is_stmt 0 view .LVU3219
 9661 368e 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9662              		.loc 1 150 29 is_stmt 1 view .LVU3220
 9663              	.LVL535:
 151:sieve_extend.c ****    }
 9664              		.loc 1 151 8 view .LVU3221
 9665 3692 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9666              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9667              		.loc 1 151 19 is_stmt 0 view .LVU3222
 9668 3695 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9669              		.loc 1 151 29 is_stmt 1 view .LVU3223
 9670 3699 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9671              	.LVL536:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9672              		.loc 1 146 10 view .LVU3224
 9673 369c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9674 369f 767F     		jbe	.L594	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9675              		.loc 1 147 8 view .LVU3225
 9676              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 258


 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9677              		.loc 1 147 19 is_stmt 0 view .LVU3226
 9678 36a1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9679              		.loc 1 147 29 is_stmt 1 view .LVU3227
 9680              	.LVL537:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9681              		.loc 1 148 8 view .LVU3228
 9682              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9683              		.loc 1 148 19 is_stmt 0 view .LVU3229
 9684 36a4 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9685              		.loc 1 148 29 is_stmt 1 view .LVU3230
 9686              	.LVL538:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9687              		.loc 1 149 8 view .LVU3231
 9688              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9689              		.loc 1 149 19 is_stmt 0 view .LVU3232
 9690 36a8 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9691              		.loc 1 149 29 is_stmt 1 view .LVU3233
 9692              	.LVL539:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9693              		.loc 1 150 8 view .LVU3234
 9694              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9695              		.loc 1 150 19 is_stmt 0 view .LVU3235
 9696 36ab 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9697              		.loc 1 150 29 is_stmt 1 view .LVU3236
 9698              	.LVL540:
 151:sieve_extend.c ****    }
 9699              		.loc 1 151 8 view .LVU3237
 9700 36af 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9701              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9702              		.loc 1 151 19 is_stmt 0 view .LVU3238
 9703 36b2 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9704              		.loc 1 151 29 is_stmt 1 view .LVU3239
 9705 36b6 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9706              	.LVL541:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9707              		.loc 1 146 10 view .LVU3240
 9708 36b9 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9709 36bc 7662     		jbe	.L594	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9710              		.loc 1 147 8 view .LVU3241
 9711              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9712              		.loc 1 147 19 is_stmt 0 view .LVU3242
 9713 36be 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9714              		.loc 1 147 29 is_stmt 1 view .LVU3243
 9715              	.LVL542:
GAS LISTING /tmp/ccFOD2R4.s 			page 259


 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9716              		.loc 1 148 8 view .LVU3244
 9717              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9718              		.loc 1 148 19 is_stmt 0 view .LVU3245
 9719 36c1 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9720              		.loc 1 148 29 is_stmt 1 view .LVU3246
 9721              	.LVL543:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9722              		.loc 1 149 8 view .LVU3247
 9723              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9724              		.loc 1 149 19 is_stmt 0 view .LVU3248
 9725 36c5 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9726              		.loc 1 149 29 is_stmt 1 view .LVU3249
 9727              	.LVL544:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9728              		.loc 1 150 8 view .LVU3250
 9729              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9730              		.loc 1 150 19 is_stmt 0 view .LVU3251
 9731 36c8 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9732              		.loc 1 150 29 is_stmt 1 view .LVU3252
 9733              	.LVL545:
 151:sieve_extend.c ****    }
 9734              		.loc 1 151 8 view .LVU3253
 9735 36cc 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9736              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9737              		.loc 1 151 19 is_stmt 0 view .LVU3254
 9738 36cf 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9739              		.loc 1 151 29 is_stmt 1 view .LVU3255
 9740 36d3 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9741              	.LVL546:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9742              		.loc 1 146 10 view .LVU3256
 9743 36d6 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9744 36d9 7645     		jbe	.L594	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9745              		.loc 1 147 8 view .LVU3257
 9746              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9747              		.loc 1 147 19 is_stmt 0 view .LVU3258
 9748 36db 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9749              		.loc 1 147 29 is_stmt 1 view .LVU3259
 9750              	.LVL547:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9751              		.loc 1 148 8 view .LVU3260
 9752              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9753              		.loc 1 148 19 is_stmt 0 view .LVU3261
 9754 36de 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
GAS LISTING /tmp/ccFOD2R4.s 			page 260


 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9755              		.loc 1 148 29 is_stmt 1 view .LVU3262
 9756              	.LVL548:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9757              		.loc 1 149 8 view .LVU3263
 9758              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9759              		.loc 1 149 19 is_stmt 0 view .LVU3264
 9760 36e2 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9761              		.loc 1 149 29 is_stmt 1 view .LVU3265
 9762              	.LVL549:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9763              		.loc 1 150 8 view .LVU3266
 9764              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9765              		.loc 1 150 19 is_stmt 0 view .LVU3267
 9766 36e5 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9767              		.loc 1 150 29 is_stmt 1 view .LVU3268
 9768              	.LVL550:
 151:sieve_extend.c ****    }
 9769              		.loc 1 151 8 view .LVU3269
 9770 36e9 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9771              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9772              		.loc 1 151 19 is_stmt 0 view .LVU3270
 9773 36ec 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9774              		.loc 1 151 29 is_stmt 1 view .LVU3271
 9775 36f0 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9776              	.LVL551:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9777              		.loc 1 146 10 view .LVU3272
 9778 36f3 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9779 36f6 7628     		jbe	.L594	#,
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9780              		.loc 1 147 8 view .LVU3273
 9781              	# sieve_extend.c:147:        *index_ptr |= mask;  index_ptr+=step;
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9782              		.loc 1 147 19 is_stmt 0 view .LVU3274
 9783 36f8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_561, offset: 0B], _402
 147:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9784              		.loc 1 147 29 is_stmt 1 view .LVU3275
 9785              	.LVL552:
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9786              		.loc 1 148 8 view .LVU3276
 9787              	# sieve_extend.c:148:        *index_ptr |= mask;  index_ptr+=step;
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9788              		.loc 1 148 19 is_stmt 0 view .LVU3277
 9789 36fb 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_561, index: _417, offset: 0B], _402
 148:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9790              		.loc 1 148 29 is_stmt 1 view .LVU3278
 9791              	.LVL553:
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9792              		.loc 1 149 8 view .LVU3279
 9793              	# sieve_extend.c:149:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 261


 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9794              		.loc 1 149 19 is_stmt 0 view .LVU3280
 9795 36ff 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _904, offset: 0B], _402
 149:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9796              		.loc 1 149 29 is_stmt 1 view .LVU3281
 9797              	.LVL554:
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9798              		.loc 1 150 8 view .LVU3282
 9799              	# sieve_extend.c:150:        *index_ptr |= mask;  index_ptr+=step;
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9800              		.loc 1 150 19 is_stmt 0 view .LVU3283
 9801 3702 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _904, index: _417, offset: 0B], _402
 150:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9802              		.loc 1 150 29 is_stmt 1 view .LVU3284
 9803              	.LVL555:
 151:sieve_extend.c ****    }
 9804              		.loc 1 151 8 view .LVU3285
 9805 3706 4D01D0   		add	r8, r10	# ivtmp.472, tmp539
 9806              	# sieve_extend.c:151:        *index_ptr |= mask;  index_ptr+=step;
 151:sieve_extend.c ****    }
 9807              		.loc 1 151 19 is_stmt 0 view .LVU3286
 9808 3709 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_561, index: _417, step: 4, offset: 0B], _402
 151:sieve_extend.c ****    }
 9809              		.loc 1 151 29 is_stmt 1 view .LVU3287
 9810 370d 4C01D0   		add	rax, r10	# index_ptr, tmp539
 9811              	.LVL556:
 146:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9812              		.loc 1 146 10 view .LVU3288
 9813 3710 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9814 3713 0F8708FF 		ja	.L595	#,
 9814      FFFF
 9815 3719 0F1F8000 		.p2align 4
 9815      000000
 9816              		.p2align 3
 9817              	.L594:
 154:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9818              		.loc 1 154 4 view .LVU3289
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9819              		.loc 1 155 4 view .LVU3290
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9820              		.loc 1 155 10 view .LVU3291
 9821 3720 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9822 3723 735B     		jnb	.L596	#,
 9823              	.L597:
 156:sieve_extend.c ****    }
 9824              		.loc 1 156 8 view .LVU3292
 9825              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9826              		.loc 1 156 19 is_stmt 0 view .LVU3293
 9827 3725 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9828              		.loc 1 156 29 is_stmt 1 view .LVU3294
 9829              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9830              		.loc 1 156 38 is_stmt 0 view .LVU3295
 9831 3728 4801D0   		add	rax, rdx	# index_ptr, _417
 9832              	.LVL557:
GAS LISTING /tmp/ccFOD2R4.s 			page 262


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9833              		.loc 1 155 10 is_stmt 1 view .LVU3296
 9834 372b 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9835 372e 7350     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9836              		.loc 1 156 8 view .LVU3297
 9837              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9838              		.loc 1 156 19 is_stmt 0 view .LVU3298
 9839 3730 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9840              		.loc 1 156 29 is_stmt 1 view .LVU3299
 9841              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9842              		.loc 1 156 38 is_stmt 0 view .LVU3300
 9843 3733 4801D0   		add	rax, rdx	# index_ptr, _417
 9844              	.LVL558:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9845              		.loc 1 155 10 is_stmt 1 view .LVU3301
 9846 3736 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9847 3739 7345     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9848              		.loc 1 156 8 view .LVU3302
 9849              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9850              		.loc 1 156 19 is_stmt 0 view .LVU3303
 9851 373b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9852              		.loc 1 156 29 is_stmt 1 view .LVU3304
 9853              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9854              		.loc 1 156 38 is_stmt 0 view .LVU3305
 9855 373e 4801D0   		add	rax, rdx	# index_ptr, _417
 9856              	.LVL559:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9857              		.loc 1 155 10 is_stmt 1 view .LVU3306
 9858 3741 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9859 3744 733A     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9860              		.loc 1 156 8 view .LVU3307
 9861              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9862              		.loc 1 156 19 is_stmt 0 view .LVU3308
 9863 3746 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9864              		.loc 1 156 29 is_stmt 1 view .LVU3309
 9865              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9866              		.loc 1 156 38 is_stmt 0 view .LVU3310
 9867 3749 4801D0   		add	rax, rdx	# index_ptr, _417
 9868              	.LVL560:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9869              		.loc 1 155 10 is_stmt 1 view .LVU3311
 9870 374c 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9871 374f 732F     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9872              		.loc 1 156 8 view .LVU3312
GAS LISTING /tmp/ccFOD2R4.s 			page 263


 9873              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9874              		.loc 1 156 19 is_stmt 0 view .LVU3313
 9875 3751 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9876              		.loc 1 156 29 is_stmt 1 view .LVU3314
 9877              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9878              		.loc 1 156 38 is_stmt 0 view .LVU3315
 9879 3754 4801D0   		add	rax, rdx	# index_ptr, _417
 9880              	.LVL561:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9881              		.loc 1 155 10 is_stmt 1 view .LVU3316
 9882 3757 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9883 375a 7324     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9884              		.loc 1 156 8 view .LVU3317
 9885              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9886              		.loc 1 156 19 is_stmt 0 view .LVU3318
 9887 375c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9888              		.loc 1 156 29 is_stmt 1 view .LVU3319
 9889              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9890              		.loc 1 156 38 is_stmt 0 view .LVU3320
 9891 375f 4801D0   		add	rax, rdx	# index_ptr, _417
 9892              	.LVL562:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9893              		.loc 1 155 10 is_stmt 1 view .LVU3321
 9894 3762 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9895 3765 7319     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9896              		.loc 1 156 8 view .LVU3322
 9897              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9898              		.loc 1 156 19 is_stmt 0 view .LVU3323
 9899 3767 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9900              		.loc 1 156 29 is_stmt 1 view .LVU3324
 9901              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9902              		.loc 1 156 38 is_stmt 0 view .LVU3325
 9903 376a 4801D0   		add	rax, rdx	# index_ptr, _417
 9904              	.LVL563:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9905              		.loc 1 155 10 is_stmt 1 view .LVU3326
 9906 376d 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9907 3770 730E     		jnb	.L596	#,
 156:sieve_extend.c ****    }
 9908              		.loc 1 156 8 view .LVU3327
 9909              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9910              		.loc 1 156 19 is_stmt 0 view .LVU3328
 9911 3772 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_562, offset: 0B], _402
 156:sieve_extend.c ****    }
 9912              		.loc 1 156 29 is_stmt 1 view .LVU3329
GAS LISTING /tmp/ccFOD2R4.s 			page 264


 9913              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****    }
 9914              		.loc 1 156 38 is_stmt 0 view .LVU3330
 9915 3775 4801D0   		add	rax, rdx	# index_ptr, _417
 9916              	.LVL564:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9917              		.loc 1 155 10 is_stmt 1 view .LVU3331
 9918 3778 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9919 377b 72A8     		jb	.L597	#,
 9920 377d 0F1F00   		.p2align 4
 9921              		.p2align 3
 9922              	.L596:
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9923              		.loc 1 159 4 view .LVU3332
 9924              	# sieve_extend.c:159:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9925              		.loc 1 159 7 is_stmt 0 view .LVU3333
 9926 3780 4839F8   		cmp	rax, rdi	# index_ptr, _435
 9927 3783 0F84AF00 		je	.L980	#,
 9927      0000
 9928              	.LVL565:
 9929              	.L598:
 159:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9930              		.loc 1 159 7 view .LVU3334
 9931              	.LBE542:
 9932              	.LBE549:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9933              		.loc 1 220 77 is_stmt 1 view .LVU3335
 9934              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9935              		.loc 1 220 83 is_stmt 0 view .LVU3336
 9936 3789 4901F1   		add	r9, rsi	# index, step
 9937              	.LVL566:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9938              		.loc 1 220 50 is_stmt 1 view .LVU3337
 9939              	# sieve_extend.c:220:     for (register counter_t index = range_start; index < range_stop_unique; i
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9940              		.loc 1 220 5 is_stmt 0 view .LVU3338
 9941 378c 4D39CC   		cmp	r12, r9	# range_stop_unique, index
 9942 378f 0F876BFE 		ja	.L599	#,
 9942      FFFF
 9943              	.LVL567:
 9944              	.L600:
 220:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9945              		.loc 1 220 5 view .LVU3339
 9946              	.LBE555:
 9947              	.LBE561:
 9948              	.LBE606:
 447:sieve_extend.c ****         }
 9949              		.loc 1 447 13 is_stmt 1 view .LVU3340
 9950              	.LBB607:
 9951              	.LBI607:
 123:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 9952              		.loc 1 123 25 view .LVU3341
 9953              	.LBB608:
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9954              		.loc 1 124 4 view .LVU3342
GAS LISTING /tmp/ccFOD2R4.s 			page 265


 9955              	# sieve_extend.c:125:    register counter_t index_word = wordindex(index);
 125:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9956              		.loc 1 125 23 is_stmt 0 view .LVU3343
 9957 3795 4D89FC   		mov	r12, r15	# index_word, _252
 9958              	# sieve_extend.c:124:    const bitshift_t index_bit  = bitindex_calc(index);
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9959              		.loc 1 124 21 view .LVU3344
 9960 3798 4D89F9   		mov	r9, r15	# index_bit, _252
 9961              	# sieve_extend.c:125:    register counter_t index_word = wordindex(index);
 125:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9962              		.loc 1 125 23 view .LVU3345
 9963 379b 49C1EC06 		shr	r12, 6	# index_word,
 9964              	# sieve_extend.c:124:    const bitshift_t index_bit  = bitindex_calc(index);
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9965              		.loc 1 124 21 view .LVU3346
 9966 379f 4183E13F 		and	r9d, 63	# index_bit,
 9967              	.LVL568:
 125:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9968              		.loc 1 125 4 is_stmt 1 view .LVU3347
 126:sieve_extend.c ****    index += distance;
 9969              		.loc 1 126 4 view .LVU3348
 9970              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 9971              		.loc 1 126 90 is_stmt 0 view .LVU3349
 9972 37a3 4F8B14E6 		mov	r10, QWORD PTR [r14+r12*8]	# *_373, *_373
 9973 37a7 C4C2B3F7 		shrx	rdx, r10, r9	# tmp524, *_373, index_bit
 9973      D2
 9974              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 9975              		.loc 1 126 65 view .LVU3350
 9976 37ac 48F7D2   		not	rdx	# tmp526
 9977              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 9978              		.loc 1 126 77 view .LVU3351
 9979 37af 4A8D34E5 		lea	rsi, 0[0+r12*8]	# _372,
 9979      00000000 
 9980              	.LVL569:
 9981              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 9982              		.loc 1 126 24 view .LVU3352
 9983 37b7 F34C0FBC 		tzcnt	r11, rdx	# distance, tmp526
 9983      DA
 9984              	.LVL570:
 127:sieve_extend.c ****    distance += index_bit;
 9985              		.loc 1 127 4 is_stmt 1 view .LVU3353
 9986              	# sieve_extend.c:127:    index += distance;
 127:sieve_extend.c ****    distance += index_bit;
 9987              		.loc 1 127 10 is_stmt 0 view .LVU3354
 9988 37bc 4B8D141F 		lea	rdx, [r15+r11]	# index,
 9989              	.LVL571:
 128:sieve_extend.c **** 
 9990              		.loc 1 128 4 is_stmt 1 view .LVU3355
 130:sieve_extend.c ****        index_word++;
 9991              		.loc 1 130 4 view .LVU3356
 130:sieve_extend.c ****        index_word++;
 9992              		.loc 1 130 10 view .LVU3357
 9993              	# sieve_extend.c:128:    distance += index_bit;
GAS LISTING /tmp/ccFOD2R4.s 			page 266


 128:sieve_extend.c **** 
 9994              		.loc 1 128 13 is_stmt 0 view .LVU3358
 9995 37c0 4D01CB   		add	r11, r9	# distance, index_bit
 9996              	.LVL572:
 9997              	# sieve_extend.c:130:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 130:sieve_extend.c ****        index_word++;
 9998              		.loc 1 130 10 view .LVU3359
 9999 37c3 4983FB40 		cmp	r11, 64	# distance,
 10000 37c7 0F84C305 		je	.L981	#,
 10000      0000
 10001              	.LVL573:
 10002              	.L584:
 130:sieve_extend.c ****        index_word++;
 10003              		.loc 1 130 10 view .LVU3360
 10004              	.LBE608:
 10005              	.LBE607:
 450:sieve_extend.c ****     }
 10006              		.loc 1 450 9 is_stmt 1 view .LVU3361
 10007              	# sieve_extend.c:450:         step  = prime * 2 + 1;
 450:sieve_extend.c ****     }
 10008              		.loc 1 450 15 is_stmt 0 view .LVU3362
 10009 37cd 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 10009      01
 10010              	.LVL574:
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10011              		.loc 1 435 11 is_stmt 1 view .LVU3363
 10012              	# sieve_extend.c:435:     while (prime*step <= block_stop) {
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10013              		.loc 1 435 17 is_stmt 0 view .LVU3364
 10014 37d2 4989D2   		mov	r10, rdx	# tmp550, index
 10015 37d5 4C0FAFD6 		imul	r10, rsi	# tmp550, step
 10016              	# sieve_extend.c:435:     while (prime*step <= block_stop) {
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10017              		.loc 1 435 11 view .LVU3365
 10018 37d9 4C395424 		cmp	QWORD PTR 112[rsp], r10	# %sfp, tmp550
 10018      70
 10019 37de 0F839CFD 		jnb	.L601	#,
 10019      FFFF
 10020              	.LVL575:
 10021              	.L602:
 435:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10022              		.loc 1 435 11 view .LVU3366
 10023              	.LBE620:
 10024              	.LBE628:
 10025              	.LBE632:
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10026              		.loc 1 514 91 is_stmt 1 view .LVU3367
 10027              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10028              		.loc 1 514 103 is_stmt 0 view .LVU3368
 10029 37e4 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# blocksize, %sfp
 10029      30
 10030              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10031              		.loc 1 514 128 view .LVU3369
 10032 37e9 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# block_stop, %sfp
 10032      70
GAS LISTING /tmp/ccFOD2R4.s 			page 267


 10033              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10034              		.loc 1 514 103 view .LVU3370
 10035 37ee 48017C24 		add	QWORD PTR 104[rsp], rdi	# %sfp, blocksize
 10035      68
 10036              	.LVL576:
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10037              		.loc 1 514 103 view .LVU3371
 10038 37f3 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# block_start, %sfp
 10038      68
 10039              	.LVL577:
 10040              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10041              		.loc 1 514 128 view .LVU3372
 10042 37f8 4801FA   		add	rdx, rdi	# block_stop, blocksize
 10043              	.LVL578:
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10044              		.loc 1 514 63 is_stmt 1 view .LVU3373
 10045              	# sieve_extend.c:514:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 514:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10046              		.loc 1 514 5 is_stmt 0 view .LVU3374
 10047 37fb 48395C24 		cmp	QWORD PTR 72[rsp], rbx	# %sfp, block_start
 10047      48
 10048 3800 0F832AFC 		jnb	.L574	#,
 10048      FFFF
 10049              	.LBE528:
 10050              	# sieve_extend.c:521: }
 521:sieve_extend.c **** 
 10051              		.loc 1 521 1 view .LVU3375
 10052 3806 488B8424 		mov	rax, QWORD PTR 184[rsp]	# tmp1104, D.6874
 10052      B8000000 
 10053 380e 64483304 		xor	rax, QWORD PTR fs:40	# tmp1104, MEM[(<address-space-1> long unsigned int *)40B]
 10053      25280000 
 10053      00
 10054 3817 0F85EB07 		jne	.L982	#,
 10054      0000
 10055 381d 488B4424 		mov	rax, QWORD PTR 16[rsp]	#, %sfp
 10055      10
 10056 3822 C5F877   		vzeroupper
 10057 3825 488D65D8 		lea	rsp, -40[rbp]	#,
 10058              	.LVL579:
 521:sieve_extend.c **** 
 10059              		.loc 1 521 1 view .LVU3376
 10060 3829 5B       		pop	rbx	#
 10061              	.LVL580:
 521:sieve_extend.c **** 
 10062              		.loc 1 521 1 view .LVU3377
 10063 382a 415C     		pop	r12	#
 10064 382c 415D     		pop	r13	#
 10065 382e 415E     		pop	r14	#
 10066              	.LVL581:
 521:sieve_extend.c **** 
 10067              		.loc 1 521 1 view .LVU3378
 10068 3830 415F     		pop	r15	#
 10069 3832 5D       		pop	rbp	#
 10070              		.cfi_remember_state
 10071              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccFOD2R4.s 			page 268


 10072              	.LVL582:
 521:sieve_extend.c **** 
 10073              		.loc 1 521 1 view .LVU3379
 10074 3833 C3       		ret	
 10075              	.LVL583:
 10076              		.p2align 4,,7
 10077 3834 0F1F4000 		.p2align 3
 10078              	.L980:
 10079              		.cfi_restore_state
 10080              	.LBB634:
 10081              	.LBB633:
 10082              	.LBB629:
 10083              	.LBB621:
 10084              	.LBB610:
 10085              	.LBB562:
 10086              	.LBB556:
 10087              	.LBB550:
 10088              	.LBB543:
 160:sieve_extend.c ****    }
 10089              		.loc 1 160 7 is_stmt 1 view .LVU3380
 10090              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 10091              		.loc 1 160 27 is_stmt 0 view .LVU3381
 10092 3838 48234C24 		and	rcx, QWORD PTR 96[rsp]	# tmp544, %sfp
 10092      60
 10093              	.LVL584:
 10094              	# sieve_extend.c:160:       *index_ptr |= (mask & chopmask(range_stop));
 160:sieve_extend.c ****    }
 10095              		.loc 1 160 18 view .LVU3382
 10096 383d 48090F   		or	QWORD PTR [rdi], rcx	# *index_ptr_555, tmp544
 10097 3840 E944FFFF 		jmp	.L598	#
 10097      FF
 10098              	.LVL585:
 10099              		.p2align 4,,7
 10100 3845 0F1F00   		.p2align 3
 10101              	.L979:
 160:sieve_extend.c ****    }
 10102              		.loc 1 160 18 view .LVU3383
 10103              	.LBE543:
 10104              	.LBE550:
 10105              	.LBE556:
 10106              	.LBE562:
 10107              	.LBE610:
 442:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 10108              		.loc 1 442 13 is_stmt 1 view .LVU3384
 10109              	.LBB611:
 10110              	.LBI563:
 225:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 10111              		.loc 1 225 20 view .LVU3385
 10112              	.LBB596:
 226:sieve_extend.c **** 
 10113              		.loc 1 226 5 view .LVU3386
 228:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 10114              		.loc 1 228 5 view .LVU3387
 10115              	# sieve_extend.c:228:     counter_t range_start_atvector = vectorstart(range_start);
 228:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 10116              		.loc 1 228 15 is_stmt 0 view .LVU3388
GAS LISTING /tmp/ccFOD2R4.s 			page 269


 10117 3848 4C89C8   		mov	rax, r9	# range_start_atvector, index
 10118 384b 30C0     		xor	al, al	# range_start_atvector
 10119              	.LVL586:
 229:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 10120              		.loc 1 229 5 is_stmt 1 view .LVU3389
 10121              	# sieve_extend.c:229:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 229:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 10122              		.loc 1 229 8 is_stmt 0 view .LVU3390
 10123 384d 4C8D0406 		lea	r8, [rsi+rax]	# tmp482,
 10124 3851 4D39C1   		cmp	r9, r8	# index, tmp482
 10125 3854 0F86E600 		jbe	.L579	#,
 10125      0000
 230:sieve_extend.c **** 
 10126              		.loc 1 230 9 is_stmt 1 view .LVU3391
 232:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 10127              		.loc 1 232 9 view .LVU3392
 10128              	# sieve_extend.c:232:         range_start_atvector += VECTOR_SIZE; // find next vector
 232:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 10129              		.loc 1 232 30 is_stmt 0 view .LVU3393
 10130 385a 48050001 		add	rax, 256	# range_start_atvector,
 10130      0000
 10131              	.LVL587:
 233:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 10132              		.loc 1 233 9 is_stmt 1 view .LVU3394
 10133              	# sieve_extend.c:233:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 233:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 10134              		.loc 1 233 12 is_stmt 0 view .LVU3395
 10135 3860 48394424 		cmp	QWORD PTR 112[rsp], rax	# %sfp, range_start_atvector
 10135      70
 10136 3865 0F823A05 		jb	.L580	#,
 10136      0000
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10137              		.loc 1 240 16 is_stmt 1 view .LVU3396
 10138              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10139              		.loc 1 240 9 is_stmt 0 view .LVU3397
 10140 386b 4939C1   		cmp	r9, rax	# index, range_start_atvector
 10141 386e 0F87CC00 		ja	.L579	#,
 10141      0000
 10142              	.L581:
 241:sieve_extend.c ****     }
 10143              		.loc 1 241 13 is_stmt 1 view .LVU3398
 10144              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10145              		.loc 1 241 53 is_stmt 0 view .LVU3399
 10146 3874 4D89CC   		mov	r12, r9	# tmp493, index
 10147              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10148              		.loc 1 241 56 view .LVU3400
 10149 3877 C442B1F7 		shlx	r10, r13, r9	# tmp496, tmp557, index
 10149      D5
 10150              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10151              		.loc 1 241 53 view .LVU3401
 10152 387c 49C1EC06 		shr	r12, 6	# tmp493,
 10153              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccFOD2R4.s 			page 270


 10154              		.loc 1 240 65 view .LVU3402
 10155 3880 4901F1   		add	r9, rsi	# index, step
 10156              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10157              		.loc 1 241 53 view .LVU3403
 10158 3883 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_294, tmp496
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10159              		.loc 1 240 53 is_stmt 1 view .LVU3404
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10160              		.loc 1 240 16 view .LVU3405
 10161              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10162              		.loc 1 240 9 is_stmt 0 view .LVU3406
 10163 3887 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10164 388a 0F82B000 		jb	.L579	#,
 10164      0000
 241:sieve_extend.c ****     }
 10165              		.loc 1 241 13 is_stmt 1 view .LVU3407
 10166              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10167              		.loc 1 241 53 is_stmt 0 view .LVU3408
 10168 3890 4C89CA   		mov	rdx, r9	# tmp684, index
 10169              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10170              		.loc 1 241 56 view .LVU3409
 10171 3893 C442B1F7 		shlx	r11, r13, r9	# tmp687, tmp557, index
 10171      DD
 10172              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10173              		.loc 1 241 53 view .LVU3410
 10174 3898 48C1EA06 		shr	rdx, 6	# tmp684,
 10175              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10176              		.loc 1 240 65 view .LVU3411
 10177 389c 4901F1   		add	r9, rsi	# index, step
 10178              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10179              		.loc 1 241 53 view .LVU3412
 10180 389f 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_294, tmp687
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10181              		.loc 1 240 53 is_stmt 1 view .LVU3413
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10182              		.loc 1 240 16 view .LVU3414
 10183              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10184              		.loc 1 240 9 is_stmt 0 view .LVU3415
 10185 38a3 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10186 38a6 0F829400 		jb	.L579	#,
 10186      0000
 241:sieve_extend.c ****     }
 10187              		.loc 1 241 13 is_stmt 1 view .LVU3416
 10188              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10189              		.loc 1 241 53 is_stmt 0 view .LVU3417
 10190 38ac 4D89C8   		mov	r8, r9	# tmp688, index
 10191              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 271


 10192              		.loc 1 241 56 view .LVU3418
 10193 38af C4C2B1F7 		shlx	rcx, r13, r9	# tmp691, tmp557, index
 10193      CD
 10194              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10195              		.loc 1 241 53 view .LVU3419
 10196 38b4 49C1E806 		shr	r8, 6	# tmp688,
 10197              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10198              		.loc 1 240 65 view .LVU3420
 10199 38b8 4901F1   		add	r9, rsi	# index, step
 10200              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10201              		.loc 1 241 53 view .LVU3421
 10202 38bb 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_294, tmp691
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10203              		.loc 1 240 53 is_stmt 1 view .LVU3422
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10204              		.loc 1 240 16 view .LVU3423
 10205              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10206              		.loc 1 240 9 is_stmt 0 view .LVU3424
 10207 38bf 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10208 38c2 727C     		jb	.L579	#,
 241:sieve_extend.c ****     }
 10209              		.loc 1 241 13 is_stmt 1 view .LVU3425
 10210              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10211              		.loc 1 241 53 is_stmt 0 view .LVU3426
 10212 38c4 4D89CC   		mov	r12, r9	# tmp692, index
 10213              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10214              		.loc 1 241 56 view .LVU3427
 10215 38c7 C442B1F7 		shlx	r10, r13, r9	# tmp695, tmp557, index
 10215      D5
 10216              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10217              		.loc 1 241 53 view .LVU3428
 10218 38cc 49C1EC06 		shr	r12, 6	# tmp692,
 10219              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10220              		.loc 1 240 65 view .LVU3429
 10221 38d0 4901F1   		add	r9, rsi	# index, step
 10222              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10223              		.loc 1 241 53 view .LVU3430
 10224 38d3 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_294, tmp695
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10225              		.loc 1 240 53 is_stmt 1 view .LVU3431
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10226              		.loc 1 240 16 view .LVU3432
 10227              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10228              		.loc 1 240 9 is_stmt 0 view .LVU3433
 10229 38d7 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10230 38da 7264     		jb	.L579	#,
 241:sieve_extend.c ****     }
GAS LISTING /tmp/ccFOD2R4.s 			page 272


 10231              		.loc 1 241 13 is_stmt 1 view .LVU3434
 10232              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10233              		.loc 1 241 53 is_stmt 0 view .LVU3435
 10234 38dc 4C89CA   		mov	rdx, r9	# tmp696, index
 10235              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10236              		.loc 1 241 56 view .LVU3436
 10237 38df C442B1F7 		shlx	r11, r13, r9	# tmp699, tmp557, index
 10237      DD
 10238              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10239              		.loc 1 241 53 view .LVU3437
 10240 38e4 48C1EA06 		shr	rdx, 6	# tmp696,
 10241              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10242              		.loc 1 240 65 view .LVU3438
 10243 38e8 4901F1   		add	r9, rsi	# index, step
 10244              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10245              		.loc 1 241 53 view .LVU3439
 10246 38eb 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_294, tmp699
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10247              		.loc 1 240 53 is_stmt 1 view .LVU3440
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10248              		.loc 1 240 16 view .LVU3441
 10249              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10250              		.loc 1 240 9 is_stmt 0 view .LVU3442
 10251 38ef 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10252 38f2 724C     		jb	.L579	#,
 241:sieve_extend.c ****     }
 10253              		.loc 1 241 13 is_stmt 1 view .LVU3443
 10254              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10255              		.loc 1 241 53 is_stmt 0 view .LVU3444
 10256 38f4 4D89C8   		mov	r8, r9	# tmp700, index
 10257              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10258              		.loc 1 241 56 view .LVU3445
 10259 38f7 C4C2B1F7 		shlx	rcx, r13, r9	# tmp703, tmp557, index
 10259      CD
 10260              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10261              		.loc 1 241 53 view .LVU3446
 10262 38fc 49C1E806 		shr	r8, 6	# tmp700,
 10263              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10264              		.loc 1 240 65 view .LVU3447
 10265 3900 4901F1   		add	r9, rsi	# index, step
 10266              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10267              		.loc 1 241 53 view .LVU3448
 10268 3903 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_294, tmp703
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10269              		.loc 1 240 53 is_stmt 1 view .LVU3449
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccFOD2R4.s 			page 273


 10270              		.loc 1 240 16 view .LVU3450
 10271              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10272              		.loc 1 240 9 is_stmt 0 view .LVU3451
 10273 3907 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10274 390a 7234     		jb	.L579	#,
 241:sieve_extend.c ****     }
 10275              		.loc 1 241 13 is_stmt 1 view .LVU3452
 10276              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10277              		.loc 1 241 53 is_stmt 0 view .LVU3453
 10278 390c 4D89CC   		mov	r12, r9	# tmp704, index
 10279              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10280              		.loc 1 241 56 view .LVU3454
 10281 390f C442B1F7 		shlx	r10, r13, r9	# tmp707, tmp557, index
 10281      D5
 10282              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10283              		.loc 1 241 53 view .LVU3455
 10284 3914 49C1EC06 		shr	r12, 6	# tmp704,
 10285              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10286              		.loc 1 240 65 view .LVU3456
 10287 3918 4901F1   		add	r9, rsi	# index, step
 10288              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10289              		.loc 1 241 53 view .LVU3457
 10290 391b 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_294, tmp707
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10291              		.loc 1 240 53 is_stmt 1 view .LVU3458
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10292              		.loc 1 240 16 view .LVU3459
 10293              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10294              		.loc 1 240 9 is_stmt 0 view .LVU3460
 10295 391f 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10296 3922 721C     		jb	.L579	#,
 241:sieve_extend.c ****     }
 10297              		.loc 1 241 13 is_stmt 1 view .LVU3461
 10298              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10299              		.loc 1 241 53 is_stmt 0 view .LVU3462
 10300 3924 4C89CA   		mov	rdx, r9	# tmp708, index
 10301              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10302              		.loc 1 241 56 view .LVU3463
 10303 3927 C442B1F7 		shlx	r11, r13, r9	# tmp711, tmp557, index
 10303      DD
 10304              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10305              		.loc 1 241 53 view .LVU3464
 10306 392c 48C1EA06 		shr	rdx, 6	# tmp708,
 10307              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10308              		.loc 1 240 65 view .LVU3465
 10309 3930 4901F1   		add	r9, rsi	# index, step
GAS LISTING /tmp/ccFOD2R4.s 			page 274


 10310              	# sieve_extend.c:241:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 241:sieve_extend.c ****     }
 10311              		.loc 1 241 53 view .LVU3466
 10312 3933 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_294, tmp711
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10313              		.loc 1 240 53 is_stmt 1 view .LVU3467
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10314              		.loc 1 240 16 view .LVU3468
 10315              	# sieve_extend.c:240:         for (; range_start <= range_start_atvector; range_start += step) 
 240:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 10316              		.loc 1 240 9 is_stmt 0 view .LVU3469
 10317 3937 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 10318 393a 0F8334FF 		jnb	.L581	#,
 10318      FFFF
 10319              		.p2align 4
 10320              		.p2align 3
 10321              	.L579:
 244:sieve_extend.c **** 
 10322              		.loc 1 244 5 is_stmt 1 view .LVU3470
 10323              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 10324              		.loc 1 244 21 is_stmt 0 view .LVU3471
 10325 3940 488B4424 		mov	rax, QWORD PTR 112[rsp]	# block_stop, %sfp
 10325      70
 10326              	.LVL588:
 10327              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 10328              		.loc 1 244 42 view .LVU3472
 10329 3945 4989F0   		mov	r8, rsi	# tmp498, step
 10330 3948 49C1E008 		sal	r8, 8	# tmp498,
 10331 394c 4D01C8   		add	r8, r9	# tmp499, index
 10332              	# sieve_extend.c:244:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 244:sieve_extend.c **** 
 10333              		.loc 1 244 21 view .LVU3473
 10334 394f 4939C0   		cmp	r8, rax	# tmp499, block_stop
 10335 3952 4C0F47C0 		cmova	r8, rax	# tmp499,, tmp499, block_stop
 10336              	.LVL589:
 246:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 10337              		.loc 1 246 5 is_stmt 1 view .LVU3474
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10338              		.loc 1 247 5 view .LVU3475
 10339              	.LBB588:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10340              		.loc 1 247 10 view .LVU3476
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10341              		.loc 1 247 41 view .LVU3477
 10342              	# sieve_extend.c:247:     for (counter_t index = range_start; index < range_stop_unique;) {
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10343              		.loc 1 247 5 is_stmt 0 view .LVU3478
 10344 3956 4D39C1   		cmp	r9, r8	# index, range_stop_unique
 10345 3959 0F833403 		jnb	.L585	#,
 10345      0000
 10346              	.LBB583:
 10347              	.LBB576:
 10348              	.LBB571:
 10349              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
GAS LISTING /tmp/ccFOD2R4.s 			page 275


 10350              		.loc 1 168 142 view .LVU3479
 10351 395f 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	# range_stop_vector, %sfp
 10351      40
 10352              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 10353              		.loc 1 168 117 view .LVU3480
 10354 3964 4C8D24B5 		lea	r12, 0[0+rsi*4]	# _335,
 10354      00000000 
 10355 396c 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _435
 10355      38
 10356              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10357              		.loc 1 172 38 view .LVU3481
 10358 3971 4889F2   		mov	rdx, rsi	# _344, step
 10359 3974 48C1E205 		sal	rdx, 5	# _344,
 10360 3978 4C89C7   		mov	rdi, r8	# range_stop_unique, range_stop_unique
 10361 397b 4C897C24 		mov	QWORD PTR 120[rsp], r15	# %sfp, _252
 10361      78
 10362              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 10363              		.loc 1 168 142 view .LVU3482
 10364 3980 4989CB   		mov	r11, rcx	# tmp501, range_stop_vector
 10365 3983 4D29E3   		sub	r11, r12	# tmp501, _335
 10366              	# sieve_extend.c:168:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 168:sieve_extend.c ****     
 10367              		.loc 1 168 92 view .LVU3483
 10368 3986 49C1E305 		sal	r11, 5	# tmp502,
 10369 398a 4D01F3   		add	r11, r14	# tmp503, _100
 10370 398d 4C39E1   		cmp	rcx, r12	# range_stop_vector, _335
 10371 3990 4889F1   		mov	rcx, rsi	# _338, step
 10372 3993 4989F4   		mov	r12, rsi	# _321, step
 10373 3996 4D0F46DE 		cmovbe	r11, r14	# _100,, fast_loop_ptr
 10374 399a 48C1E107 		sal	rcx, 7	# _338,
 10375 399e 49C1E406 		sal	r12, 6	# _321,
 10376              	.LVL590:
 10377 39a2 66662E0F 		.p2align 4
 10377      1F840000 
 10377      0000000F 
 10377      1F00
 10378              		.p2align 3
 10379              	.L590:
 168:sieve_extend.c ****     
 10380              		.loc 1 168 92 view .LVU3484
 10381              	.LBE571:
 10382              	.LBE576:
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 10383              		.loc 1 248 9 is_stmt 1 view .LVU3485
 10384              	# sieve_extend.c:248:         const counter_t current_vector =  vectorindex(index);
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 10385              		.loc 1 248 25 is_stmt 0 view .LVU3486
 10386 39b0 4C89C8   		mov	rax, r9	# current_vector, index
 10387              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 10388              		.loc 1 250 35 view .LVU3487
 10389 39b3 4D89CA   		mov	r10, r9	# tmp504, index
 10390              	# sieve_extend.c:248:         const counter_t current_vector =  vectorindex(index);
 248:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
GAS LISTING /tmp/ccFOD2R4.s 			page 276


 10391              		.loc 1 248 25 view .LVU3488
 10392 39b6 48C1E808 		shr	rax, 8	# current_vector,
 10393              	.LVL591:
 249:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 10394              		.loc 1 249 9 is_stmt 1 view .LVU3489
 10395              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 10396              		.loc 1 250 35 is_stmt 0 view .LVU3490
 10397 39ba 49C1EA06 		shr	r10, 6	# tmp504,
 10398              	# sieve_extend.c:249:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 249:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 10399              		.loc 1 249 25 view .LVU3491
 10400 39be 4C8D0485 		lea	r8, 0[0+rax*4]	# current_vector_start_word,
 10400      00000000 
 10401              	.LVL592:
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 10402              		.loc 1 250 9 is_stmt 1 view .LVU3492
 10403              	# sieve_extend.c:251:         register bitvector_t quadmask = { };
 251:sieve_extend.c **** 
 10404              		.loc 1 251 30 is_stmt 0 view .LVU3493
 10405 39c6 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp560
 10405      24800000 
 10405      00
 10406              	# sieve_extend.c:250:         register counter_t word = wordindex(index) - current_vector_start_wor
 250:sieve_extend.c ****         register bitvector_t quadmask = { };
 10407              		.loc 1 250 28 view .LVU3494
 10408 39cf 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 10409              	.LVL593:
 251:sieve_extend.c **** 
 10410              		.loc 1 251 9 is_stmt 1 view .LVU3495
 10411              	.L586:
 256:sieve_extend.c ****             index += step;
 10412              		.loc 1 256 13 view .LVU3496
 10413              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10414              		.loc 1 256 31 is_stmt 0 view .LVU3497
 10415 39d2 C442B1F7 		shlx	r15, r13, r9	# tmp507, tmp557, index
 10415      FD
 10416              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10417              		.loc 1 257 19 view .LVU3498
 10418 39d7 4901F1   		add	r9, rsi	# index, step
 10419              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10420              		.loc 1 256 28 view .LVU3499
 10421 39da 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp507
 10421      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10422              		.loc 1 257 13 is_stmt 1 view .LVU3500
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10423              		.loc 1 258 13 view .LVU3501
 10424              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10425              		.loc 1 258 20 is_stmt 0 view .LVU3502
 10426 39e2 4D89CA   		mov	r10, r9	# tmp509, index
 10427              	.LVL594:
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccFOD2R4.s 			page 277


 10428              		.loc 1 258 20 view .LVU3503
 10429 39e5 49C1EA06 		shr	r10, 6	# tmp509,
 10430              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10431              		.loc 1 258 18 view .LVU3504
 10432 39e9 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10433              		.loc 1 259 17 is_stmt 1 view .LVU3505
 10434              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10435              		.loc 1 259 9 is_stmt 0 view .LVU3506
 10436 39ec 4983FA03 		cmp	r10, 3	# word,
 10437 39f0 0F87FA00 		ja	.L865	#,
 10437      0000
 256:sieve_extend.c ****             index += step;
 10438              		.loc 1 256 13 is_stmt 1 view .LVU3507
 10439              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10440              		.loc 1 256 31 is_stmt 0 view .LVU3508
 10441 39f6 C442B1F7 		shlx	r15, r13, r9	# tmp664, tmp557, index
 10441      FD
 10442              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10443              		.loc 1 257 19 view .LVU3509
 10444 39fb 4901F1   		add	r9, rsi	# index, step
 10445              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10446              		.loc 1 256 28 view .LVU3510
 10447 39fe 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp664
 10447      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10448              		.loc 1 257 13 is_stmt 1 view .LVU3511
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10449              		.loc 1 258 13 view .LVU3512
 10450              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10451              		.loc 1 258 20 is_stmt 0 view .LVU3513
 10452 3a06 4D89CA   		mov	r10, r9	# tmp665, index
 10453 3a09 49C1EA06 		shr	r10, 6	# tmp665,
 10454              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10455              		.loc 1 258 18 view .LVU3514
 10456 3a0d 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10457              		.loc 1 259 17 is_stmt 1 view .LVU3515
 10458              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10459              		.loc 1 259 9 is_stmt 0 view .LVU3516
 10460 3a10 4983FA03 		cmp	r10, 3	# word,
 10461 3a14 0F87D600 		ja	.L865	#,
 10461      0000
 256:sieve_extend.c ****             index += step;
 10462              		.loc 1 256 13 is_stmt 1 view .LVU3517
 10463              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10464              		.loc 1 256 31 is_stmt 0 view .LVU3518
 10465 3a1a C442B1F7 		shlx	r15, r13, r9	# tmp667, tmp557, index
GAS LISTING /tmp/ccFOD2R4.s 			page 278


 10465      FD
 10466              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10467              		.loc 1 257 19 view .LVU3519
 10468 3a1f 4901F1   		add	r9, rsi	# index, step
 10469              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10470              		.loc 1 256 28 view .LVU3520
 10471 3a22 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp667
 10471      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10472              		.loc 1 257 13 is_stmt 1 view .LVU3521
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10473              		.loc 1 258 13 view .LVU3522
 10474              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10475              		.loc 1 258 20 is_stmt 0 view .LVU3523
 10476 3a2a 4D89CA   		mov	r10, r9	# tmp668, index
 10477 3a2d 49C1EA06 		shr	r10, 6	# tmp668,
 10478              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10479              		.loc 1 258 18 view .LVU3524
 10480 3a31 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10481              		.loc 1 259 17 is_stmt 1 view .LVU3525
 10482              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10483              		.loc 1 259 9 is_stmt 0 view .LVU3526
 10484 3a34 4983FA03 		cmp	r10, 3	# word,
 10485 3a38 0F87B200 		ja	.L865	#,
 10485      0000
 256:sieve_extend.c ****             index += step;
 10486              		.loc 1 256 13 is_stmt 1 view .LVU3527
 10487              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10488              		.loc 1 256 31 is_stmt 0 view .LVU3528
 10489 3a3e C442B1F7 		shlx	r15, r13, r9	# tmp670, tmp557, index
 10489      FD
 10490              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10491              		.loc 1 257 19 view .LVU3529
 10492 3a43 4901F1   		add	r9, rsi	# index, step
 10493              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10494              		.loc 1 256 28 view .LVU3530
 10495 3a46 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp670
 10495      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10496              		.loc 1 257 13 is_stmt 1 view .LVU3531
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10497              		.loc 1 258 13 view .LVU3532
 10498              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10499              		.loc 1 258 20 is_stmt 0 view .LVU3533
 10500 3a4e 4D89CA   		mov	r10, r9	# tmp671, index
 10501 3a51 49C1EA06 		shr	r10, 6	# tmp671,
 10502              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccFOD2R4.s 			page 279


 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10503              		.loc 1 258 18 view .LVU3534
 10504 3a55 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10505              		.loc 1 259 17 is_stmt 1 view .LVU3535
 10506              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10507              		.loc 1 259 9 is_stmt 0 view .LVU3536
 10508 3a58 4983FA03 		cmp	r10, 3	# word,
 10509 3a5c 0F878E00 		ja	.L865	#,
 10509      0000
 256:sieve_extend.c ****             index += step;
 10510              		.loc 1 256 13 is_stmt 1 view .LVU3537
 10511              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10512              		.loc 1 256 31 is_stmt 0 view .LVU3538
 10513 3a62 C442B1F7 		shlx	r15, r13, r9	# tmp673, tmp557, index
 10513      FD
 10514              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10515              		.loc 1 257 19 view .LVU3539
 10516 3a67 4901F1   		add	r9, rsi	# index, step
 10517              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10518              		.loc 1 256 28 view .LVU3540
 10519 3a6a 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp673
 10519      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10520              		.loc 1 257 13 is_stmt 1 view .LVU3541
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10521              		.loc 1 258 13 view .LVU3542
 10522              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10523              		.loc 1 258 20 is_stmt 0 view .LVU3543
 10524 3a72 4D89CA   		mov	r10, r9	# tmp674, index
 10525 3a75 49C1EA06 		shr	r10, 6	# tmp674,
 10526              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10527              		.loc 1 258 18 view .LVU3544
 10528 3a79 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10529              		.loc 1 259 17 is_stmt 1 view .LVU3545
 10530              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10531              		.loc 1 259 9 is_stmt 0 view .LVU3546
 10532 3a7c 4983FA03 		cmp	r10, 3	# word,
 10533 3a80 776E     		ja	.L865	#,
 256:sieve_extend.c ****             index += step;
 10534              		.loc 1 256 13 is_stmt 1 view .LVU3547
 10535              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10536              		.loc 1 256 31 is_stmt 0 view .LVU3548
 10537 3a82 C442B1F7 		shlx	r15, r13, r9	# tmp676, tmp557, index
 10537      FD
 10538              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10539              		.loc 1 257 19 view .LVU3549
GAS LISTING /tmp/ccFOD2R4.s 			page 280


 10540 3a87 4901F1   		add	r9, rsi	# index, step
 10541              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10542              		.loc 1 256 28 view .LVU3550
 10543 3a8a 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp676
 10543      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10544              		.loc 1 257 13 is_stmt 1 view .LVU3551
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10545              		.loc 1 258 13 view .LVU3552
 10546              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10547              		.loc 1 258 20 is_stmt 0 view .LVU3553
 10548 3a92 4D89CA   		mov	r10, r9	# tmp677, index
 10549 3a95 49C1EA06 		shr	r10, 6	# tmp677,
 10550              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10551              		.loc 1 258 18 view .LVU3554
 10552 3a99 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10553              		.loc 1 259 17 is_stmt 1 view .LVU3555
 10554              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10555              		.loc 1 259 9 is_stmt 0 view .LVU3556
 10556 3a9c 4983FA03 		cmp	r10, 3	# word,
 10557 3aa0 774E     		ja	.L865	#,
 256:sieve_extend.c ****             index += step;
 10558              		.loc 1 256 13 is_stmt 1 view .LVU3557
 10559              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10560              		.loc 1 256 31 is_stmt 0 view .LVU3558
 10561 3aa2 C442B1F7 		shlx	r15, r13, r9	# tmp679, tmp557, index
 10561      FD
 10562              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10563              		.loc 1 257 19 view .LVU3559
 10564 3aa7 4901F1   		add	r9, rsi	# index, step
 10565              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10566              		.loc 1 256 28 view .LVU3560
 10567 3aaa 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp679
 10567      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10568              		.loc 1 257 13 is_stmt 1 view .LVU3561
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10569              		.loc 1 258 13 view .LVU3562
 10570              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10571              		.loc 1 258 20 is_stmt 0 view .LVU3563
 10572 3ab2 4D89CA   		mov	r10, r9	# tmp680, index
 10573 3ab5 49C1EA06 		shr	r10, 6	# tmp680,
 10574              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10575              		.loc 1 258 18 view .LVU3564
 10576 3ab9 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 259:sieve_extend.c **** 
 10577              		.loc 1 259 17 is_stmt 1 view .LVU3565
GAS LISTING /tmp/ccFOD2R4.s 			page 281


 10578              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10579              		.loc 1 259 9 is_stmt 0 view .LVU3566
 10580 3abc 4983FA03 		cmp	r10, 3	# word,
 10581 3ac0 772E     		ja	.L865	#,
 256:sieve_extend.c ****             index += step;
 10582              		.loc 1 256 13 is_stmt 1 view .LVU3567
 10583              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10584              		.loc 1 256 31 is_stmt 0 view .LVU3568
 10585 3ac2 C442B1F7 		shlx	r15, r13, r9	# tmp682, tmp557, index
 10585      FD
 10586              	# sieve_extend.c:257:             index += step;
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10587              		.loc 1 257 19 view .LVU3569
 10588 3ac7 4901F1   		add	r9, rsi	# index, step
 10589              	# sieve_extend.c:256:             quadmask[word] |= markmask(index);
 256:sieve_extend.c ****             index += step;
 10590              		.loc 1 256 28 view .LVU3570
 10591 3aca 4E09BCD4 		or	QWORD PTR 128[rsp+r10*8], r15	# quadmask, tmp682
 10591      80000000 
 257:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 10592              		.loc 1 257 13 is_stmt 1 view .LVU3571
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10593              		.loc 1 258 13 view .LVU3572
 10594              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10595              		.loc 1 258 20 is_stmt 0 view .LVU3573
 10596 3ad2 4D89CA   		mov	r10, r9	# tmp683, index
 10597 3ad5 49C1EA06 		shr	r10, 6	# tmp683,
 10598              	.LVL595:
 10599              	# sieve_extend.c:258:             word = wordindex(index) - current_vector_start_word;
 258:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 10600              		.loc 1 258 18 view .LVU3574
 10601 3ad9 4D29C2   		sub	r10, r8	# word, current_vector_start_word
 10602              	.LVL596:
 259:sieve_extend.c **** 
 10603              		.loc 1 259 17 is_stmt 1 view .LVU3575
 10604              	# sieve_extend.c:259:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 259:sieve_extend.c **** 
 10605              		.loc 1 259 9 is_stmt 0 view .LVU3576
 10606 3adc 4983FA03 		cmp	r10, 3	# word,
 10607 3ae0 0F86ECFE 		jbe	.L586	#,
 10607      FFFF
 10608              	.LVL597:
 10609 3ae6 662E0F1F 		.p2align 4
 10609      84000000 
 10609      0000
 10610              		.p2align 3
 10611              	.L865:
 263:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 10612              		.loc 1 263 9 is_stmt 1 view .LVU3577
 264:sieve_extend.c ****     }
 10613              		.loc 1 264 9 view .LVU3578
 10614              	.LBB577:
 10615              	.LBB572:
 10616              	# sieve_extend.c:167:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
GAS LISTING /tmp/ccFOD2R4.s 			page 282


 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 10617              		.loc 1 167 92 is_stmt 0 view .LVU3579
 10618 3af0 48C1E005 		sal	rax, 5	# tmp510,
 10619              	.LVL598:
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 10620              		.loc 1 167 92 view .LVU3580
 10621              	.LBE572:
 10622              	.LBE577:
 10623              	# sieve_extend.c:264:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 264:sieve_extend.c ****     }
 10624              		.loc 1 264 9 view .LVU3581
 10625 3af4 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.55_319, quadmask
 10625      24800000 
 10625      00
 10626              	.LVL599:
 10627              	.LBB578:
 10628              	.LBI567:
 165:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 10629              		.loc 1 165 20 is_stmt 1 view .LVU3582
 10630              	.LBB573:
 166:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 10631              		.loc 1 166 5 view .LVU3583
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 10632              		.loc 1 167 5 view .LVU3584
 10633              	# sieve_extend.c:167:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 167:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 10634              		.loc 1 167 81 is_stmt 0 view .LVU3585
 10635 3afd 4C01F0   		add	rax, r14	# index_ptr, _100
 10636              	.LVL600:
 168:sieve_extend.c ****     
 10637              		.loc 1 168 5 is_stmt 1 view .LVU3586
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10638              		.loc 1 171 11 view .LVU3587
 10639 3b00 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 10640 3b03 0F83E700 		jnb	.L971	#,
 10640      0000
 10641 3b09 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.445,
 10642              	.LVL601:
 10643              	.L588:
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10644              		.loc 1 172 9 view .LVU3588
 10645              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10646              		.loc 1 172 20 is_stmt 0 view .LVU3589
 10647 3b0d C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp511, quadmask.55_319, MEM[base: index_ptr_84, offset: 0B]
 10648 3b11 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_84, offset: 0B], tmp511
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10649              		.loc 1 172 29 is_stmt 1 view .LVU3590
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10650              		.loc 1 173 9 view .LVU3591
 10651              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10652              		.loc 1 173 20 is_stmt 0 view .LVU3592
 10653 3b15 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rax+rdx]	# tmp512, quadmask.55_319, MEM[base: index_ptr_84, index: 
 10653      10
 10654 3b1a C57D7F2C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm13	# MEM[base: index_ptr_84, index: _344, offset: 0B], tmp512
 10654      10
GAS LISTING /tmp/ccFOD2R4.s 			page 283


 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10655              		.loc 1 173 29 is_stmt 1 view .LVU3593
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10656              		.loc 1 174 9 view .LVU3594
 10657 3b1f 4801C8   		add	rax, rcx	# index_ptr, _338
 10658              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10659              		.loc 1 174 20 is_stmt 0 view .LVU3595
 10660 3b22 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r8]	# tmp513, quadmask.55_319, MEM[base: _928, offset: 0B]
 10660      30
 10661 3b27 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm14	# MEM[base: _928, offset: 0B], tmp513
 10661      30
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10662              		.loc 1 174 29 is_stmt 1 view .LVU3596
 175:sieve_extend.c ****     }
 10663              		.loc 1 175 9 view .LVU3597
 10664              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 10665              		.loc 1 175 20 is_stmt 0 view .LVU3598
 10666 3b2c C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r8+rdx]	# tmp514, quadmask.55_319, MEM[base: _928, index: _344, off
 10666      3C10
 10667 3b32 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rdx], ymm15	# MEM[base: _928, index: _344, offset: 0B], tmp514
 10667      3C10
 175:sieve_extend.c ****     }
 10668              		.loc 1 175 29 is_stmt 1 view .LVU3599
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10669              		.loc 1 171 11 view .LVU3600
 10670 3b38 4901C8   		add	r8, rcx	# ivtmp.445, _338
 10671 3b3b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10672 3b3e 0F86AC00 		jbe	.L971	#,
 10672      0000
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10673              		.loc 1 172 9 view .LVU3601
 10674              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10675              		.loc 1 172 20 is_stmt 0 view .LVU3602
 10676 3b44 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp650, quadmask.55_319, MEM[base: index_ptr_84, offset: 0B]
 10677 3b48 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_84, offset: 0B], tmp650
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10678              		.loc 1 172 29 is_stmt 1 view .LVU3603
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10679              		.loc 1 173 9 view .LVU3604
 10680              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10681              		.loc 1 173 20 is_stmt 0 view .LVU3605
 10682 3b4c C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp651, quadmask.55_319, MEM[base: index_ptr_84, index: _
 10682      10
 10683 3b51 C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_84, index: _344, offset: 0B], tmp651
 10683      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10684              		.loc 1 173 29 is_stmt 1 view .LVU3606
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10685              		.loc 1 174 9 view .LVU3607
 10686 3b56 4801C8   		add	rax, rcx	# index_ptr, _338
 10687              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10688              		.loc 1 174 20 is_stmt 0 view .LVU3608
GAS LISTING /tmp/ccFOD2R4.s 			page 284


 10689 3b59 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r8]	# tmp652, quadmask.55_319, MEM[base: _928, offset: 0B]
 10689      20
 10690 3b5e C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm4	# MEM[base: _928, offset: 0B], tmp652
 10690      20
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10691              		.loc 1 174 29 is_stmt 1 view .LVU3609
 175:sieve_extend.c ****     }
 10692              		.loc 1 175 9 view .LVU3610
 10693              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 10694              		.loc 1 175 20 is_stmt 0 view .LVU3611
 10695 3b63 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r8+rdx]	# tmp653, quadmask.55_319, MEM[base: _928, index: _344, offs
 10695      2C10
 10696 3b69 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rdx], ymm5	# MEM[base: _928, index: _344, offset: 0B], tmp653
 10696      2C10
 175:sieve_extend.c ****     }
 10697              		.loc 1 175 29 is_stmt 1 view .LVU3612
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10698              		.loc 1 171 11 view .LVU3613
 10699 3b6f 4901C8   		add	r8, rcx	# ivtmp.445, _338
 10700 3b72 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10701 3b75 7679     		jbe	.L971	#,
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10702              		.loc 1 172 9 view .LVU3614
 10703              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10704              		.loc 1 172 20 is_stmt 0 view .LVU3615
 10705 3b77 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp655, quadmask.55_319, MEM[base: index_ptr_84, offset: 0B]
 10706 3b7b C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_84, offset: 0B], tmp655
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10707              		.loc 1 172 29 is_stmt 1 view .LVU3616
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10708              		.loc 1 173 9 view .LVU3617
 10709              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10710              		.loc 1 173 20 is_stmt 0 view .LVU3618
 10711 3b7f C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp656, quadmask.55_319, MEM[base: index_ptr_84, index: _
 10711      10
 10712 3b84 C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_84, index: _344, offset: 0B], tmp656
 10712      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10713              		.loc 1 173 29 is_stmt 1 view .LVU3619
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10714              		.loc 1 174 9 view .LVU3620
 10715 3b89 4801C8   		add	rax, rcx	# index_ptr, _338
 10716              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10717              		.loc 1 174 20 is_stmt 0 view .LVU3621
 10718 3b8c C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r8]	# tmp657, quadmask.55_319, MEM[base: _928, offset: 0B]
 10718      00
 10719 3b91 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm8	# MEM[base: _928, offset: 0B], tmp657
 10719      00
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10720              		.loc 1 174 29 is_stmt 1 view .LVU3622
 175:sieve_extend.c ****     }
 10721              		.loc 1 175 9 view .LVU3623
 10722              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 285


 175:sieve_extend.c ****     }
 10723              		.loc 1 175 20 is_stmt 0 view .LVU3624
 10724 3b96 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r8+rdx]	# tmp658, quadmask.55_319, MEM[base: _928, index: _344, offs
 10724      0C10
 10725 3b9c C4417D7F 		vmovdqa	YMMWORD PTR [r8+rdx], ymm9	# MEM[base: _928, index: _344, offset: 0B], tmp658
 10725      0C10
 175:sieve_extend.c ****     }
 10726              		.loc 1 175 29 is_stmt 1 view .LVU3625
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10727              		.loc 1 171 11 view .LVU3626
 10728 3ba2 4901C8   		add	r8, rcx	# ivtmp.445, _338
 10729 3ba5 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10730 3ba8 7646     		jbe	.L971	#,
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10731              		.loc 1 172 9 view .LVU3627
 10732              	# sieve_extend.c:172:         *index_ptr |= mask; index_ptr+=step;
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10733              		.loc 1 172 20 is_stmt 0 view .LVU3628
 10734 3baa C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp660, quadmask.55_319, MEM[base: index_ptr_84, offset: 0B]
 10735 3bae C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_84, offset: 0B], tmp660
 172:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10736              		.loc 1 172 29 is_stmt 1 view .LVU3629
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10737              		.loc 1 173 9 view .LVU3630
 10738              	# sieve_extend.c:173:         *index_ptr |= mask; index_ptr+=step;
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10739              		.loc 1 173 20 is_stmt 0 view .LVU3631
 10740 3bb2 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp661, quadmask.55_319, MEM[base: index_ptr_84, index: 
 10740      10
 10741 3bb7 C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_84, index: _344, offset: 0B], tmp661
 10741      10
 173:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10742              		.loc 1 173 29 is_stmt 1 view .LVU3632
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10743              		.loc 1 174 9 view .LVU3633
 10744 3bbc 4801C8   		add	rax, rcx	# index_ptr, _338
 10745              	# sieve_extend.c:174:         *index_ptr |= mask; index_ptr+=step;
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10746              		.loc 1 174 20 is_stmt 0 view .LVU3634
 10747 3bbf C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r8]	# tmp662, quadmask.55_319, MEM[base: _928, offset: 0B]
 10747      20
 10748 3bc4 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm12	# MEM[base: _928, offset: 0B], tmp662
 10748      20
 174:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10749              		.loc 1 174 29 is_stmt 1 view .LVU3635
 175:sieve_extend.c ****     }
 10750              		.loc 1 175 9 view .LVU3636
 10751              	# sieve_extend.c:175:         *index_ptr |= mask; index_ptr+=step;
 175:sieve_extend.c ****     }
 10752              		.loc 1 175 20 is_stmt 0 view .LVU3637
 10753 3bc9 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r8+rdx]	# tmp663, quadmask.55_319, MEM[base: _928, index: _344, off
 10753      2C10
 10754 3bcf C4417D7F 		vmovdqa	YMMWORD PTR [r8+rdx], ymm13	# MEM[base: _928, index: _344, offset: 0B], tmp663
 10754      2C10
 175:sieve_extend.c ****     }
 10755              		.loc 1 175 29 is_stmt 1 view .LVU3638
 171:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccFOD2R4.s 			page 286


 10756              		.loc 1 171 11 view .LVU3639
 10757 3bd5 4901C8   		add	r8, rcx	# ivtmp.445, _338
 10758 3bd8 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10759 3bdb 0F872CFF 		ja	.L588	#,
 10759      FFFF
 10760 3be1 66662E0F 		.p2align 4
 10760      1F840000 
 10760      0000000F 
 10760      1F4000
 10761              		.p2align 3
 10762              	.L971:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10763              		.loc 1 179 11 view .LVU3640
 10764 3bf0 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10765 3bf3 0F878700 		ja	.L591	#,
 10765      0000
 10766              	.L589:
 180:sieve_extend.c ****     }
 10767              		.loc 1 180 9 view .LVU3641
 10768              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10769              		.loc 1 180 20 is_stmt 0 view .LVU3642
 10770 3bf9 C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp515, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B
 10771 3bfd C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_369, offset: 0B], tmp515
 180:sieve_extend.c ****     }
 10772              		.loc 1 180 29 is_stmt 1 view .LVU3643
 10773              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10774              		.loc 1 180 38 is_stmt 0 view .LVU3644
 10775 3c01 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10776              		.loc 1 179 11 is_stmt 1 view .LVU3645
 10777 3c04 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10778 3c07 7777     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10779              		.loc 1 180 9 view .LVU3646
 10780              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10781              		.loc 1 180 20 is_stmt 0 view .LVU3647
 10782 3c09 C57DEB38 		vpor	ymm15, ymm0, YMMWORD PTR [rax]	# tmp637, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B
 10783 3c0d C57D7F38 		vmovdqa	YMMWORD PTR [rax], ymm15	# MEM[base: index_ptr_369, offset: 0B], tmp637
 180:sieve_extend.c ****     }
 10784              		.loc 1 180 29 is_stmt 1 view .LVU3648
 10785              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10786              		.loc 1 180 38 is_stmt 0 view .LVU3649
 10787 3c11 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10788              		.loc 1 179 11 is_stmt 1 view .LVU3650
 10789 3c14 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10790 3c17 7767     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10791              		.loc 1 180 9 view .LVU3651
 10792              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10793              		.loc 1 180 20 is_stmt 0 view .LVU3652
 10794 3c19 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp639, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
GAS LISTING /tmp/ccFOD2R4.s 			page 287


 10795 3c1d C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_369, offset: 0B], tmp639
 180:sieve_extend.c ****     }
 10796              		.loc 1 180 29 is_stmt 1 view .LVU3653
 10797              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10798              		.loc 1 180 38 is_stmt 0 view .LVU3654
 10799 3c21 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10800              		.loc 1 179 11 is_stmt 1 view .LVU3655
 10801 3c24 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10802 3c27 7757     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10803              		.loc 1 180 9 view .LVU3656
 10804              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10805              		.loc 1 180 20 is_stmt 0 view .LVU3657
 10806 3c29 C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp641, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
 10807 3c2d C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: index_ptr_369, offset: 0B], tmp641
 180:sieve_extend.c ****     }
 10808              		.loc 1 180 29 is_stmt 1 view .LVU3658
 10809              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10810              		.loc 1 180 38 is_stmt 0 view .LVU3659
 10811 3c31 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10812              		.loc 1 179 11 is_stmt 1 view .LVU3660
 10813 3c34 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10814 3c37 7747     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10815              		.loc 1 180 9 view .LVU3661
 10816              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10817              		.loc 1 180 20 is_stmt 0 view .LVU3662
 10818 3c39 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp643, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
 10819 3c3d C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_369, offset: 0B], tmp643
 180:sieve_extend.c ****     }
 10820              		.loc 1 180 29 is_stmt 1 view .LVU3663
 10821              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10822              		.loc 1 180 38 is_stmt 0 view .LVU3664
 10823 3c41 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10824              		.loc 1 179 11 is_stmt 1 view .LVU3665
 10825 3c44 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10826 3c47 7737     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10827              		.loc 1 180 9 view .LVU3666
 10828              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10829              		.loc 1 180 20 is_stmt 0 view .LVU3667
 10830 3c49 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp645, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
 10831 3c4d C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_369, offset: 0B], tmp645
 180:sieve_extend.c ****     }
 10832              		.loc 1 180 29 is_stmt 1 view .LVU3668
 10833              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10834              		.loc 1 180 38 is_stmt 0 view .LVU3669
GAS LISTING /tmp/ccFOD2R4.s 			page 288


 10835 3c51 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10836              		.loc 1 179 11 is_stmt 1 view .LVU3670
 10837 3c54 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10838 3c57 7727     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10839              		.loc 1 180 9 view .LVU3671
 10840              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10841              		.loc 1 180 20 is_stmt 0 view .LVU3672
 10842 3c59 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp647, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
 10843 3c5d C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_369, offset: 0B], tmp647
 180:sieve_extend.c ****     }
 10844              		.loc 1 180 29 is_stmt 1 view .LVU3673
 10845              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10846              		.loc 1 180 38 is_stmt 0 view .LVU3674
 10847 3c61 4801D0   		add	rax, rdx	# index_ptr, _344
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10848              		.loc 1 179 11 is_stmt 1 view .LVU3675
 10849 3c64 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10850 3c67 7717     		ja	.L591	#,
 180:sieve_extend.c ****     }
 10851              		.loc 1 180 9 view .LVU3676
 10852              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10853              		.loc 1 180 20 is_stmt 0 view .LVU3677
 10854 3c69 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp649, quadmask.55_319, MEM[base: index_ptr_369, offset: 0B]
 10855 3c6d C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_369, offset: 0B], tmp649
 180:sieve_extend.c ****     }
 10856              		.loc 1 180 29 is_stmt 1 view .LVU3678
 10857              	.LVL602:
 10858              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****     }
 10859              		.loc 1 180 38 is_stmt 0 view .LVU3679
 10860 3c71 4801D0   		add	rax, rdx	# index_ptr, _344
 10861              	.LVL603:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10862              		.loc 1 179 11 is_stmt 1 view .LVU3680
 10863 3c74 4839D8   		cmp	rax, rbx	# index_ptr, _912
 10864 3c77 7680     		jbe	.L589	#,
 10865              	.LVL604:
 10866 3c79 0F1F8000 		.p2align 4
 10866      000000
 10867              		.p2align 3
 10868              	.L591:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10869              		.loc 1 179 11 is_stmt 0 view .LVU3681
 10870              	.LBE573:
 10871              	.LBE578:
 10872              	.LBE583:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10873              		.loc 1 247 41 is_stmt 1 view .LVU3682
 10874              	# sieve_extend.c:247:     for (counter_t index = range_start; index < range_stop_unique;) {
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10875              		.loc 1 247 5 is_stmt 0 view .LVU3683
 10876 3c80 4C39CF   		cmp	rdi, r9	# range_stop_unique, index
GAS LISTING /tmp/ccFOD2R4.s 			page 289


 10877 3c83 0F8727FD 		ja	.L590	#,
 10877      FFFF
 10878 3c89 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# _252, %sfp
 10878      78
 10879 3c8e 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	# _435, %sfp
 10879      38
 10880              	.LVL605:
 10881              	.L585:
 247:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10882              		.loc 1 247 5 view .LVU3684
 10883              	.LBE588:
 10884              	.LBE596:
 10885              	.LBE611:
 443:sieve_extend.c ****         }
 10886              		.loc 1 443 13 is_stmt 1 view .LVU3685
 10887              	.LBB612:
 10888              	.LBI612:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 10889              		.loc 1 117 25 view .LVU3686
 10890              	.LBB613:
 118:sieve_extend.c ****     return index;
 10891              		.loc 1 118 5 view .LVU3687
 118:sieve_extend.c ****     return index;
 10892              		.loc 1 118 11 view .LVU3688
 10893              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10894              		.loc 1 118 23 is_stmt 0 view .LVU3689
 10895 3c93 4C89FE   		mov	rsi, r15	# tmp483, _252
 10896              	.LVL606:
 118:sieve_extend.c ****     return index;
 10897              		.loc 1 118 23 view .LVU3690
 10898              	.LBE613:
 10899              	.LBE612:
 10900              	# sieve_extend.c:436:         if likely(block_start >= (prime + 1)) 
 436:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10901              		.loc 1 436 12 view .LVU3691
 10902 3c96 4C89FA   		mov	rdx, r15	# index, _252
 10903              	.LBB615:
 10904              	.LBB614:
 10905              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10906              		.loc 1 118 23 view .LVU3692
 10907 3c99 48C1EE06 		shr	rsi, 6	# tmp483,
 10908              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10909              		.loc 1 118 12 view .LVU3693
 10910 3c9d 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_513, *_513
 10911              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10912              		.loc 1 118 11 view .LVU3694
 10913 3ca1 4D0FA3FA 		bt	r10, r15	# *_513, _252
 10914 3ca5 0F8322FB 		jnc	.L584	#,
 10914      FFFF
 10915              	.LVL607:
 10916              	.L583:
 118:sieve_extend.c ****     return index;
 10917              		.loc 1 118 60 is_stmt 1 view .LVU3695
GAS LISTING /tmp/ccFOD2R4.s 			page 290


 10918              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10919              		.loc 1 118 65 is_stmt 0 view .LVU3696
 10920 3cab 4C8D7A01 		lea	r15, 1[rdx]	# tmp562,
 10921              	.LVL608:
 10922              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10923              		.loc 1 118 23 view .LVU3697
 10924 3caf 4D89FB   		mov	r11, r15	# tmp516, index
 10925              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10926              		.loc 1 118 65 view .LVU3698
 10927 3cb2 4C89FA   		mov	rdx, r15	# index, tmp562
 118:sieve_extend.c ****     return index;
 10928              		.loc 1 118 11 is_stmt 1 view .LVU3699
 10929              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10930              		.loc 1 118 23 is_stmt 0 view .LVU3700
 10931 3cb5 49C1EB06 		shr	r11, 6	# tmp516,
 10932              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10933              		.loc 1 118 12 view .LVU3701
 10934 3cb9 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_272, *_272
 10935              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10936              		.loc 1 118 11 view .LVU3702
 10937 3cbd 4D0FA3FC 		bt	r12, r15	# *_272, index
 10938 3cc1 0F8306FB 		jnc	.L584	#,
 10938      FFFF
 118:sieve_extend.c ****     return index;
 10939              		.loc 1 118 60 is_stmt 1 view .LVU3703
 10940              	.LVL609:
 10941              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10942              		.loc 1 118 65 is_stmt 0 view .LVU3704
 10943 3cc7 4883C201 		add	rdx, 1	# index,
 10944              	.LVL610:
 118:sieve_extend.c ****     return index;
 10945              		.loc 1 118 11 is_stmt 1 view .LVU3705
 10946              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10947              		.loc 1 118 23 is_stmt 0 view .LVU3706
 10948 3ccb 4889D0   		mov	rax, rdx	# tmp575, index
 10949 3cce 48C1E806 		shr	rax, 6	# tmp575,
 10950              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10951              		.loc 1 118 12 view .LVU3707
 10952 3cd2 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_272, *_272
 10953              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10954              		.loc 1 118 11 view .LVU3708
 10955 3cd6 490FA3D0 		bt	r8, rdx	# *_272, index
 10956 3cda 0F83EDFA 		jnc	.L584	#,
 10956      FFFF
 118:sieve_extend.c ****     return index;
 10957              		.loc 1 118 60 is_stmt 1 view .LVU3709
 10958              	.LVL611:
GAS LISTING /tmp/ccFOD2R4.s 			page 291


 10959              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10960              		.loc 1 118 65 is_stmt 0 view .LVU3710
 10961 3ce0 498D5702 		lea	rdx, 2[r15]	# index,
 10962              	.LVL612:
 118:sieve_extend.c ****     return index;
 10963              		.loc 1 118 11 is_stmt 1 view .LVU3711
 10964              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10965              		.loc 1 118 23 is_stmt 0 view .LVU3712
 10966 3ce4 4889D1   		mov	rcx, rdx	# tmp579, index
 10967 3ce7 48C1E906 		shr	rcx, 6	# tmp579,
 10968              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10969              		.loc 1 118 12 view .LVU3713
 10970 3ceb 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_272, *_272
 10971              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10972              		.loc 1 118 11 view .LVU3714
 10973 3cef 490FA3D1 		bt	r9, rdx	# *_272, index
 10974 3cf3 0F83D4FA 		jnc	.L584	#,
 10974      FFFF
 118:sieve_extend.c ****     return index;
 10975              		.loc 1 118 60 is_stmt 1 view .LVU3715
 10976              	.LVL613:
 10977              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10978              		.loc 1 118 65 is_stmt 0 view .LVU3716
 10979 3cf9 498D5703 		lea	rdx, 3[r15]	# index,
 10980              	.LVL614:
 118:sieve_extend.c ****     return index;
 10981              		.loc 1 118 11 is_stmt 1 view .LVU3717
 10982              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10983              		.loc 1 118 23 is_stmt 0 view .LVU3718
 10984 3cfd 4889D6   		mov	rsi, rdx	# tmp583, index
 10985 3d00 48C1EE06 		shr	rsi, 6	# tmp583,
 10986              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10987              		.loc 1 118 12 view .LVU3719
 10988 3d04 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_272, *_272
 10989              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10990              		.loc 1 118 11 view .LVU3720
 10991 3d08 490FA3D2 		bt	r10, rdx	# *_272, index
 10992 3d0c 0F83BBFA 		jnc	.L584	#,
 10992      FFFF
 118:sieve_extend.c ****     return index;
 10993              		.loc 1 118 60 is_stmt 1 view .LVU3721
 10994              	.LVL615:
 10995              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 10996              		.loc 1 118 65 is_stmt 0 view .LVU3722
 10997 3d12 498D5704 		lea	rdx, 4[r15]	# index,
 10998              	.LVL616:
 118:sieve_extend.c ****     return index;
 10999              		.loc 1 118 11 is_stmt 1 view .LVU3723
GAS LISTING /tmp/ccFOD2R4.s 			page 292


 11000              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11001              		.loc 1 118 23 is_stmt 0 view .LVU3724
 11002 3d16 4989D3   		mov	r11, rdx	# tmp587, index
 11003 3d19 49C1EB06 		shr	r11, 6	# tmp587,
 11004              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11005              		.loc 1 118 12 view .LVU3725
 11006 3d1d 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_272, *_272
 11007              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11008              		.loc 1 118 11 view .LVU3726
 11009 3d21 490FA3D4 		bt	r12, rdx	# *_272, index
 11010 3d25 0F83A2FA 		jnc	.L584	#,
 11010      FFFF
 118:sieve_extend.c ****     return index;
 11011              		.loc 1 118 60 is_stmt 1 view .LVU3727
 11012              	.LVL617:
 11013              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11014              		.loc 1 118 65 is_stmt 0 view .LVU3728
 11015 3d2b 498D5705 		lea	rdx, 5[r15]	# index,
 11016              	.LVL618:
 118:sieve_extend.c ****     return index;
 11017              		.loc 1 118 11 is_stmt 1 view .LVU3729
 11018              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11019              		.loc 1 118 23 is_stmt 0 view .LVU3730
 11020 3d2f 4889D0   		mov	rax, rdx	# tmp591, index
 11021 3d32 48C1E806 		shr	rax, 6	# tmp591,
 11022              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11023              		.loc 1 118 12 view .LVU3731
 11024 3d36 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_272, *_272
 11025              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11026              		.loc 1 118 11 view .LVU3732
 11027 3d3a 490FA3D0 		bt	r8, rdx	# *_272, index
 11028 3d3e 0F8389FA 		jnc	.L584	#,
 11028      FFFF
 118:sieve_extend.c ****     return index;
 11029              		.loc 1 118 60 is_stmt 1 view .LVU3733
 11030              	.LVL619:
 11031              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11032              		.loc 1 118 65 is_stmt 0 view .LVU3734
 11033 3d44 498D5706 		lea	rdx, 6[r15]	# index,
 11034              	.LVL620:
 118:sieve_extend.c ****     return index;
 11035              		.loc 1 118 11 is_stmt 1 view .LVU3735
 11036              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11037              		.loc 1 118 23 is_stmt 0 view .LVU3736
 11038 3d48 4889D1   		mov	rcx, rdx	# tmp595, index
 11039 3d4b 48C1E906 		shr	rcx, 6	# tmp595,
 11040              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccFOD2R4.s 			page 293


 11041              		.loc 1 118 12 view .LVU3737
 11042 3d4f 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_272, *_272
 11043              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11044              		.loc 1 118 11 view .LVU3738
 11045 3d53 490FA3D1 		bt	r9, rdx	# *_272, index
 11046 3d57 0F8370FA 		jnc	.L584	#,
 11046      FFFF
 118:sieve_extend.c ****     return index;
 11047              		.loc 1 118 60 is_stmt 1 view .LVU3739
 11048              	.LVL621:
 11049              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11050              		.loc 1 118 65 is_stmt 0 view .LVU3740
 11051 3d5d 498D5707 		lea	rdx, 7[r15]	# index,
 11052              	.LVL622:
 118:sieve_extend.c ****     return index;
 11053              		.loc 1 118 11 is_stmt 1 view .LVU3741
 11054              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11055              		.loc 1 118 23 is_stmt 0 view .LVU3742
 11056 3d61 4989D7   		mov	r15, rdx	# tmp599, index
 11057 3d64 49C1EF06 		shr	r15, 6	# tmp599,
 11058              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11059              		.loc 1 118 12 view .LVU3743
 11060 3d68 4B8B34FE 		mov	rsi, QWORD PTR [r14+r15*8]	# *_272, *_272
 11061              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11062              		.loc 1 118 11 view .LVU3744
 11063 3d6c 480FA3D6 		bt	rsi, rdx	# *_272, index
 11064 3d70 0F8235FF 		jc	.L583	#,
 11064      FFFF
 11065 3d76 E952FAFF 		jmp	.L584	#
 11065      FF
 11066              	.LVL623:
 11067 3d7b 0F1F4400 		.p2align 4,,7
 11067      00
 11068              		.p2align 3
 11069              	.L576:
 118:sieve_extend.c ****     return index;
 11070              		.loc 1 118 11 view .LVU3745
 11071              	.LBE614:
 11072              	.LBE615:
 439:sieve_extend.c **** 
 11073              		.loc 1 439 13 is_stmt 1 view .LVU3746
 11074              	# sieve_extend.c:439:             start = prime * prime * 2 + prime * 2;
 439:sieve_extend.c **** 
 11075              		.loc 1 439 19 is_stmt 0 view .LVU3747
 11076 3d80 490FAFD7 		imul	rdx, r15	# tmp481, _252
 11077 3d84 4C8D0C12 		lea	r9, [rdx+rdx]	# index,
 11078              	.LVL624:
 439:sieve_extend.c **** 
 11079              		.loc 1 439 19 view .LVU3748
 11080 3d88 E914F8FF 		jmp	.L577	#
 11080      FF
 11081              	.LVL625:
GAS LISTING /tmp/ccFOD2R4.s 			page 294


 11082 3d8d 0F1F00   		.p2align 4,,7
 11083              		.p2align 3
 11084              	.L981:
 11085              	.LBB616:
 11086              	.LBB609:
 131:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 11087              		.loc 1 131 8 is_stmt 1 view .LVU3749
 132:sieve_extend.c ****        index += distance;
 11088              		.loc 1 132 8 view .LVU3750
 11089              	# sieve_extend.c:132:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 132:sieve_extend.c ****        index += distance;
 11090              		.loc 1 132 48 is_stmt 0 view .LVU3751
 11091 3d90 4D8B7C36 		mov	r15, QWORD PTR 8[r14+rsi]	# *_385, *_385
 11091      08
 11092 3d95 49F7D7   		not	r15	# tmp545
 11093              	.LVL626:
 133:sieve_extend.c ****    }
 11094              		.loc 1 133 8 is_stmt 1 view .LVU3752
 11095              	# sieve_extend.c:132:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 132:sieve_extend.c ****        index += distance;
 11096              		.loc 1 132 17 is_stmt 0 view .LVU3753
 11097 3d98 F3490FBC 		tzcnt	rcx, r15	# distance, tmp545
 11097      CF
 11098              	.LVL627:
 11099              	# sieve_extend.c:133:        index += distance;
 133:sieve_extend.c ****    }
 11100              		.loc 1 133 14 view .LVU3754
 11101 3d9d 4801CA   		add	rdx, rcx	# index, distance
 11102              	.LVL628:
 130:sieve_extend.c ****        index_word++;
 11103              		.loc 1 130 10 is_stmt 1 view .LVU3755
 11104 3da0 E928FAFF 		jmp	.L584	#
 11104      FF
 11105              	.LVL629:
 11106              	.L580:
 130:sieve_extend.c ****        index_word++;
 11107              		.loc 1 130 10 is_stmt 0 view .LVU3756
 11108              	.LBE609:
 11109              	.LBE616:
 11110              	.LBB617:
 11111              	.LBB597:
 11112              	.LBB589:
 11113              	.LBB590:
 11114              	.LBB591:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11115              		.loc 1 234 49 is_stmt 1 view .LVU3757
 11116 3da5 4C8B5424 		mov	r10, QWORD PTR 112[rsp]	# block_stop, %sfp
 11116      70
 11117              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11118              		.loc 1 234 13 is_stmt 0 view .LVU3758
 11119 3daa 4C394C24 		cmp	QWORD PTR 112[rsp], r9	# %sfp, index
 11119      70
 11120 3daf 0F82DEFE 		jb	.L585	#,
 11120      FFFF
 11121              	.LVL630:
 11122              	.L582:
GAS LISTING /tmp/ccFOD2R4.s 			page 295


 235:sieve_extend.c ****             return;
 11123              		.loc 1 235 17 is_stmt 1 view .LVU3759
 11124              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11125              		.loc 1 235 51 is_stmt 0 view .LVU3760
 11126 3db5 4D89C8   		mov	r8, r9	# tmp488, index
 11127              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11128              		.loc 1 235 54 view .LVU3761
 11129 3db8 C4C2B1F7 		shlx	rax, r13, r9	# tmp491, tmp557, index
 11129      C5
 11130              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11131              		.loc 1 235 51 view .LVU3762
 11132 3dbd 49C1E806 		shr	r8, 6	# tmp488,
 11133              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11134              		.loc 1 234 76 view .LVU3763
 11135 3dc1 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 11136              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11137              		.loc 1 235 51 view .LVU3764
 11138 3dc5 4B0904C6 		or	QWORD PTR [r14+r8*8], rax	# *_325, tmp491
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11139              		.loc 1 234 70 is_stmt 1 view .LVU3765
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11140              		.loc 1 234 49 view .LVU3766
 11141              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11142              		.loc 1 234 13 is_stmt 0 view .LVU3767
 11143 3dc9 4D39CA   		cmp	r10, r9	# block_stop, index
 11144 3dcc 0F82C1FE 		jb	.L585	#,
 11144      FFFF
 235:sieve_extend.c ****             return;
 11145              		.loc 1 235 17 is_stmt 1 view .LVU3768
 11146              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11147              		.loc 1 235 51 is_stmt 0 view .LVU3769
 11148 3dd2 4C89CA   		mov	rdx, r9	# tmp603, index
 11149              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11150              		.loc 1 235 54 view .LVU3770
 11151 3dd5 C4C2B1F7 		shlx	rcx, r13, r9	# tmp606, tmp557, index
 11151      CD
 11152              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11153              		.loc 1 235 51 view .LVU3771
 11154 3dda 48C1EA06 		shr	rdx, 6	# tmp603,
 11155              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11156              		.loc 1 234 76 view .LVU3772
 11157 3dde 4901F1   		add	r9, rsi	# index, step
 11158              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11159              		.loc 1 235 51 view .LVU3773
 11160 3de1 49090CD6 		or	QWORD PTR [r14+rdx*8], rcx	# *_325, tmp606
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccFOD2R4.s 			page 296


 11161              		.loc 1 234 70 is_stmt 1 view .LVU3774
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11162              		.loc 1 234 49 view .LVU3775
 11163              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11164              		.loc 1 234 13 is_stmt 0 view .LVU3776
 11165 3de5 4D39CA   		cmp	r10, r9	# block_stop, index
 11166 3de8 0F82A5FE 		jb	.L585	#,
 11166      FFFF
 235:sieve_extend.c ****             return;
 11167              		.loc 1 235 17 is_stmt 1 view .LVU3777
 11168              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11169              		.loc 1 235 51 is_stmt 0 view .LVU3778
 11170 3dee 4D89CB   		mov	r11, r9	# tmp608, index
 11171              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11172              		.loc 1 235 54 view .LVU3779
 11173 3df1 C442B1F7 		shlx	r12, r13, r9	# tmp611, tmp557, index
 11173      E5
 11174              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11175              		.loc 1 235 51 view .LVU3780
 11176 3df6 49C1EB06 		shr	r11, 6	# tmp608,
 11177              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11178              		.loc 1 234 76 view .LVU3781
 11179 3dfa 4901F1   		add	r9, rsi	# index, step
 11180              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11181              		.loc 1 235 51 view .LVU3782
 11182 3dfd 4F0924DE 		or	QWORD PTR [r14+r11*8], r12	# *_325, tmp611
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11183              		.loc 1 234 70 is_stmt 1 view .LVU3783
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11184              		.loc 1 234 49 view .LVU3784
 11185              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11186              		.loc 1 234 13 is_stmt 0 view .LVU3785
 11187 3e01 4D39CA   		cmp	r10, r9	# block_stop, index
 11188 3e04 0F8289FE 		jb	.L585	#,
 11188      FFFF
 235:sieve_extend.c ****             return;
 11189              		.loc 1 235 17 is_stmt 1 view .LVU3786
 11190              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11191              		.loc 1 235 51 is_stmt 0 view .LVU3787
 11192 3e0a 4C89C8   		mov	rax, r9	# tmp613, index
 11193              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11194              		.loc 1 235 54 view .LVU3788
 11195 3e0d C442B1F7 		shlx	r8, r13, r9	# tmp616, tmp557, index
 11195      C5
 11196              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11197              		.loc 1 235 51 view .LVU3789
 11198 3e12 48C1E806 		shr	rax, 6	# tmp613,
GAS LISTING /tmp/ccFOD2R4.s 			page 297


 11199              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11200              		.loc 1 234 76 view .LVU3790
 11201 3e16 4901F1   		add	r9, rsi	# index, step
 11202              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11203              		.loc 1 235 51 view .LVU3791
 11204 3e19 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_325, tmp616
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11205              		.loc 1 234 70 is_stmt 1 view .LVU3792
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11206              		.loc 1 234 49 view .LVU3793
 11207              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11208              		.loc 1 234 13 is_stmt 0 view .LVU3794
 11209 3e1d 4D39CA   		cmp	r10, r9	# block_stop, index
 11210 3e20 0F826DFE 		jb	.L585	#,
 11210      FFFF
 235:sieve_extend.c ****             return;
 11211              		.loc 1 235 17 is_stmt 1 view .LVU3795
 11212              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11213              		.loc 1 235 51 is_stmt 0 view .LVU3796
 11214 3e26 4C89CA   		mov	rdx, r9	# tmp618, index
 11215              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11216              		.loc 1 235 54 view .LVU3797
 11217 3e29 C4C2B1F7 		shlx	rcx, r13, r9	# tmp621, tmp557, index
 11217      CD
 11218              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11219              		.loc 1 235 51 view .LVU3798
 11220 3e2e 48C1EA06 		shr	rdx, 6	# tmp618,
 11221              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11222              		.loc 1 234 76 view .LVU3799
 11223 3e32 4901F1   		add	r9, rsi	# index, step
 11224              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11225              		.loc 1 235 51 view .LVU3800
 11226 3e35 49090CD6 		or	QWORD PTR [r14+rdx*8], rcx	# *_325, tmp621
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11227              		.loc 1 234 70 is_stmt 1 view .LVU3801
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11228              		.loc 1 234 49 view .LVU3802
 11229              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11230              		.loc 1 234 13 is_stmt 0 view .LVU3803
 11231 3e39 4D39CA   		cmp	r10, r9	# block_stop, index
 11232 3e3c 0F8251FE 		jb	.L585	#,
 11232      FFFF
 235:sieve_extend.c ****             return;
 11233              		.loc 1 235 17 is_stmt 1 view .LVU3804
 11234              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11235              		.loc 1 235 51 is_stmt 0 view .LVU3805
 11236 3e42 4D89CB   		mov	r11, r9	# tmp623, index
GAS LISTING /tmp/ccFOD2R4.s 			page 298


 11237              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11238              		.loc 1 235 54 view .LVU3806
 11239 3e45 C442B1F7 		shlx	r12, r13, r9	# tmp626, tmp557, index
 11239      E5
 11240              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11241              		.loc 1 235 51 view .LVU3807
 11242 3e4a 49C1EB06 		shr	r11, 6	# tmp623,
 11243              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11244              		.loc 1 234 76 view .LVU3808
 11245 3e4e 4901F1   		add	r9, rsi	# index, step
 11246              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11247              		.loc 1 235 51 view .LVU3809
 11248 3e51 4F0924DE 		or	QWORD PTR [r14+r11*8], r12	# *_325, tmp626
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11249              		.loc 1 234 70 is_stmt 1 view .LVU3810
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11250              		.loc 1 234 49 view .LVU3811
 11251              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11252              		.loc 1 234 13 is_stmt 0 view .LVU3812
 11253 3e55 4D39CA   		cmp	r10, r9	# block_stop, index
 11254 3e58 0F8235FE 		jb	.L585	#,
 11254      FFFF
 235:sieve_extend.c ****             return;
 11255              		.loc 1 235 17 is_stmt 1 view .LVU3813
 11256              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11257              		.loc 1 235 51 is_stmt 0 view .LVU3814
 11258 3e5e 4C89C8   		mov	rax, r9	# tmp628, index
 11259              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11260              		.loc 1 235 54 view .LVU3815
 11261 3e61 C442B1F7 		shlx	r8, r13, r9	# tmp631, tmp557, index
 11261      C5
 11262              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11263              		.loc 1 235 51 view .LVU3816
 11264 3e66 48C1E806 		shr	rax, 6	# tmp628,
 11265              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11266              		.loc 1 234 76 view .LVU3817
 11267 3e6a 4901F1   		add	r9, rsi	# index, step
 11268              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11269              		.loc 1 235 51 view .LVU3818
 11270 3e6d 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_325, tmp631
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11271              		.loc 1 234 70 is_stmt 1 view .LVU3819
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11272              		.loc 1 234 49 view .LVU3820
 11273              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11274              		.loc 1 234 13 is_stmt 0 view .LVU3821
GAS LISTING /tmp/ccFOD2R4.s 			page 299


 11275 3e71 4D39CA   		cmp	r10, r9	# block_stop, index
 11276 3e74 0F8219FE 		jb	.L585	#,
 11276      FFFF
 235:sieve_extend.c ****             return;
 11277              		.loc 1 235 17 is_stmt 1 view .LVU3822
 11278              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11279              		.loc 1 235 51 is_stmt 0 view .LVU3823
 11280 3e7a 4C89CA   		mov	rdx, r9	# tmp633, index
 11281              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11282              		.loc 1 235 54 view .LVU3824
 11283 3e7d C4C2B1F7 		shlx	rcx, r13, r9	# tmp636, tmp557, index
 11283      CD
 11284              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11285              		.loc 1 235 51 view .LVU3825
 11286 3e82 48C1EA06 		shr	rdx, 6	# tmp633,
 11287              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11288              		.loc 1 234 76 view .LVU3826
 11289 3e86 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 11290              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11291              		.loc 1 235 51 view .LVU3827
 11292 3e8a 49090CD6 		or	QWORD PTR [r14+rdx*8], rcx	# *_325, tmp636
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11293              		.loc 1 234 70 is_stmt 1 view .LVU3828
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11294              		.loc 1 234 49 view .LVU3829
 11295              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11296              		.loc 1 234 13 is_stmt 0 view .LVU3830
 11297 3e8e 4D39CA   		cmp	r10, r9	# block_stop, index
 11298 3e91 0F831EFF 		jnb	.L582	#,
 11298      FFFF
 11299 3e97 E9F7FDFF 		jmp	.L585	#
 11299      FF
 11300              	.LVL631:
 11301              	.L867:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11302              		.loc 1 234 13 view .LVU3831
 11303 3e9c 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11303      28
 11304 3ea1 E9EFF4FF 		jmp	.L542	#
 11304      FF
 11305              	.L606:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11306              		.loc 1 234 13 view .LVU3832
 11307              	.LBE591:
 11308              	.LBE590:
 11309              	.LBE589:
 11310              	.LBE597:
 11311              	.LBE617:
 11312              	.LBE621:
 11313              	.LBE629:
 11314              	.LBE633:
GAS LISTING /tmp/ccFOD2R4.s 			page 300


 11315              	.LBE634:
 11316              	.LBB635:
 11317              	.LBB518:
 11318              	.LBB514:
 11319 3ea6 4C8B4424 		mov	r8, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 11319      60
 11320 3eab 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, block$pattern_start
 11320      50
 11321 3eb0 E9F0ECFF 		jmp	.L544	#
 11321      FF
 11322              	.LVL632:
 11323              	.L570:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11324              		.loc 1 234 13 view .LVU3833
 11325              	.LBE514:
 11326              	.LBE518:
 11327              	.LBE635:
 11328              	.LBB636:
 11329              	.LBB526:
 425:sieve_extend.c **** }
 11330              		.loc 1 425 37 is_stmt 1 view .LVU3834
 11331 3eb5 C5F877   		vzeroupper
 11332 3eb8 E8E3D3FF 		call	continuePattern_aligned	#
 11332      FF
 11333              	.LVL633:
 425:sieve_extend.c **** }
 11334              		.loc 1 425 37 is_stmt 0 view .LVU3835
 11335 3ebd E941F5FF 		jmp	.L568	#
 11335      FF
 11336              	.LVL634:
 11337              	.L978:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 11338              		.loc 1 423 37 is_stmt 1 view .LVU3836
 11339 3ec2 C5F877   		vzeroupper
 11340 3ec5 E856D9FF 		call	continuePattern_shiftleft	#
 11340      FF
 11341              	.LVL635:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 11342              		.loc 1 423 37 is_stmt 0 view .LVU3837
 11343              		.p2align 4,,5
 11344 3eca E934F5FF 		jmp	.L568	#
 11344      FF
 11345              	.LVL636:
 11346              	.L977:
 423:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright_ivdep(bitstorage, source_start, size
 11347              		.loc 1 423 37 view .LVU3838
 11348 3ecf C5F877   		vzeroupper
 11349              	.LVL637:
 11350              	.L539:
 418:sieve_extend.c **** 
 11351              		.loc 1 418 35 is_stmt 1 view .LVU3839
 11352              	# sieve_extend.c:418:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 418:sieve_extend.c **** 
 11353              		.loc 1 418 42 is_stmt 0 view .LVU3840
 11354 3ed2 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 11354      70
 11355 3ed7 4C89F2   		mov	rdx, r14	#, patternsize_bits
GAS LISTING /tmp/ccFOD2R4.s 			page 301


 11356 3eda 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
 11356      60
 11357 3edf 4C89E7   		mov	rdi, r12	#, _100
 11358 3ee2 E819C1FF 		call	continuePattern_smallSize	#
 11358      FF
 11359              	.LVL638:
 11360 3ee7 E917F5FF 		jmp	.L568	#
 11360      FF
 11361              	.LVL639:
 11362              	.L550:
 418:sieve_extend.c **** 
 11363              		.loc 1 418 42 view .LVU3841
 11364              	.LBE526:
 11365              	.LBE636:
 11366              	.LBB637:
 11367              	.LBB519:
 11368              	.LBB515:
 11369              	.LBB509:
 11370              	.LBB494:
 11371              	.LBB493:
 11372              	.LBB482:
 11373              	.LBB481:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11374              		.loc 1 234 49 is_stmt 1 view .LVU3842
 11375 3eec 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# _70, %sfp
 11375      78
 11376              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11377              		.loc 1 234 13 is_stmt 0 view .LVU3843
 11378 3ef1 48395C24 		cmp	QWORD PTR 120[rsp], rbx	# %sfp, index
 11378      78
 11379 3ef6 0F8217F1 		jb	.L554	#,
 11379      FFFF
 11380              	.LVL640:
 11381              	.L552:
 235:sieve_extend.c ****             return;
 11382              		.loc 1 235 17 is_stmt 1 view .LVU3844
 11383              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11384              		.loc 1 235 51 is_stmt 0 view .LVU3845
 11385 3efc 4889D8   		mov	rax, rbx	# tmp410, index
 11386              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11387              		.loc 1 235 54 view .LVU3846
 11388 3eff C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp413, tmp414, index
 11388      F2
 11389              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11390              		.loc 1 235 51 view .LVU3847
 11391 3f04 48C1E806 		shr	rax, 6	# tmp410,
 11392              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11393              		.loc 1 234 76 view .LVU3848
 11394 3f08 4A8D1C2B 		lea	rbx, [rbx+r13]	# index,
 11395              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11396              		.loc 1 235 51 view .LVU3849
GAS LISTING /tmp/ccFOD2R4.s 			page 302


 11397 3f0c 490934C4 		or	QWORD PTR [r12+rax*8], rsi	# *_147, tmp413
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11398              		.loc 1 234 70 is_stmt 1 view .LVU3850
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11399              		.loc 1 234 49 view .LVU3851
 11400              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11401              		.loc 1 234 13 is_stmt 0 view .LVU3852
 11402 3f10 4939D9   		cmp	r9, rbx	# _70, index
 11403 3f13 0F82FAF0 		jb	.L554	#,
 11403      FFFF
 235:sieve_extend.c ****             return;
 11404              		.loc 1 235 17 is_stmt 1 view .LVU3853
 11405              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11406              		.loc 1 235 51 is_stmt 0 view .LVU3854
 11407 3f19 4889D9   		mov	rcx, rbx	# tmp774, index
 11408              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11409              		.loc 1 235 54 view .LVU3855
 11410 3f1c C4E2E1F7 		shlx	rdi, rdx, rbx	# tmp777, tmp414, index
 11410      FA
 11411              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11412              		.loc 1 235 51 view .LVU3856
 11413 3f21 48C1E906 		shr	rcx, 6	# tmp774,
 11414              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11415              		.loc 1 234 76 view .LVU3857
 11416 3f25 4C01EB   		add	rbx, r13	# index, step
 11417              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11418              		.loc 1 235 51 view .LVU3858
 11419 3f28 49093CCC 		or	QWORD PTR [r12+rcx*8], rdi	# *_147, tmp777
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11420              		.loc 1 234 70 is_stmt 1 view .LVU3859
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11421              		.loc 1 234 49 view .LVU3860
 11422              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11423              		.loc 1 234 13 is_stmt 0 view .LVU3861
 11424 3f2c 4939D9   		cmp	r9, rbx	# _70, index
 11425 3f2f 0F82DEF0 		jb	.L554	#,
 11425      FFFF
 235:sieve_extend.c ****             return;
 11426              		.loc 1 235 17 is_stmt 1 view .LVU3862
 11427              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11428              		.loc 1 235 51 is_stmt 0 view .LVU3863
 11429 3f35 4989D8   		mov	r8, rbx	# tmp779, index
 11430              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11431              		.loc 1 235 54 view .LVU3864
 11432 3f38 C462E1F7 		shlx	r10, rdx, rbx	# tmp782, tmp414, index
 11432      D2
 11433              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
GAS LISTING /tmp/ccFOD2R4.s 			page 303


 11434              		.loc 1 235 51 view .LVU3865
 11435 3f3d 49C1E806 		shr	r8, 6	# tmp779,
 11436              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11437              		.loc 1 234 76 view .LVU3866
 11438 3f41 4C01EB   		add	rbx, r13	# index, step
 11439              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11440              		.loc 1 235 51 view .LVU3867
 11441 3f44 4F0914C4 		or	QWORD PTR [r12+r8*8], r10	# *_147, tmp782
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11442              		.loc 1 234 70 is_stmt 1 view .LVU3868
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11443              		.loc 1 234 49 view .LVU3869
 11444              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11445              		.loc 1 234 13 is_stmt 0 view .LVU3870
 11446 3f48 4939D9   		cmp	r9, rbx	# _70, index
 11447 3f4b 0F82C2F0 		jb	.L554	#,
 11447      FFFF
 235:sieve_extend.c ****             return;
 11448              		.loc 1 235 17 is_stmt 1 view .LVU3871
 11449              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11450              		.loc 1 235 51 is_stmt 0 view .LVU3872
 11451 3f51 4989DB   		mov	r11, rbx	# tmp784, index
 11452              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11453              		.loc 1 235 54 view .LVU3873
 11454 3f54 C4E2E1F7 		shlx	rax, rdx, rbx	# tmp787, tmp414, index
 11454      C2
 11455              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11456              		.loc 1 235 51 view .LVU3874
 11457 3f59 49C1EB06 		shr	r11, 6	# tmp784,
 11458              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11459              		.loc 1 234 76 view .LVU3875
 11460 3f5d 4C01EB   		add	rbx, r13	# index, step
 11461              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11462              		.loc 1 235 51 view .LVU3876
 11463 3f60 4B0904DC 		or	QWORD PTR [r12+r11*8], rax	# *_147, tmp787
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11464              		.loc 1 234 70 is_stmt 1 view .LVU3877
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11465              		.loc 1 234 49 view .LVU3878
 11466              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11467              		.loc 1 234 13 is_stmt 0 view .LVU3879
 11468 3f64 4939D9   		cmp	r9, rbx	# _70, index
 11469 3f67 0F82A6F0 		jb	.L554	#,
 11469      FFFF
 235:sieve_extend.c ****             return;
 11470              		.loc 1 235 17 is_stmt 1 view .LVU3880
 11471              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
GAS LISTING /tmp/ccFOD2R4.s 			page 304


 11472              		.loc 1 235 51 is_stmt 0 view .LVU3881
 11473 3f6d 4889DE   		mov	rsi, rbx	# tmp789, index
 11474              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11475              		.loc 1 235 54 view .LVU3882
 11476 3f70 C4E2E1F7 		shlx	rcx, rdx, rbx	# tmp792, tmp414, index
 11476      CA
 11477              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11478              		.loc 1 235 51 view .LVU3883
 11479 3f75 48C1EE06 		shr	rsi, 6	# tmp789,
 11480              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11481              		.loc 1 234 76 view .LVU3884
 11482 3f79 4C01EB   		add	rbx, r13	# index, step
 11483              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11484              		.loc 1 235 51 view .LVU3885
 11485 3f7c 49090CF4 		or	QWORD PTR [r12+rsi*8], rcx	# *_147, tmp792
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11486              		.loc 1 234 70 is_stmt 1 view .LVU3886
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11487              		.loc 1 234 49 view .LVU3887
 11488              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11489              		.loc 1 234 13 is_stmt 0 view .LVU3888
 11490 3f80 4939D9   		cmp	r9, rbx	# _70, index
 11491 3f83 0F828AF0 		jb	.L554	#,
 11491      FFFF
 235:sieve_extend.c ****             return;
 11492              		.loc 1 235 17 is_stmt 1 view .LVU3889
 11493              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11494              		.loc 1 235 51 is_stmt 0 view .LVU3890
 11495 3f89 4989D8   		mov	r8, rbx	# tmp794, index
 11496              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11497              		.loc 1 235 54 view .LVU3891
 11498 3f8c C4E2E1F7 		shlx	rdi, rdx, rbx	# tmp797, tmp414, index
 11498      FA
 11499              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11500              		.loc 1 235 51 view .LVU3892
 11501 3f91 49C1E806 		shr	r8, 6	# tmp794,
 11502              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11503              		.loc 1 234 76 view .LVU3893
 11504 3f95 4C01EB   		add	rbx, r13	# index, step
 11505              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11506              		.loc 1 235 51 view .LVU3894
 11507 3f98 4B093CC4 		or	QWORD PTR [r12+r8*8], rdi	# *_147, tmp797
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11508              		.loc 1 234 70 is_stmt 1 view .LVU3895
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11509              		.loc 1 234 49 view .LVU3896
 11510              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/ccFOD2R4.s 			page 305


 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11511              		.loc 1 234 13 is_stmt 0 view .LVU3897
 11512 3f9c 4939D9   		cmp	r9, rbx	# _70, index
 11513 3f9f 0F826EF0 		jb	.L554	#,
 11513      FFFF
 235:sieve_extend.c ****             return;
 11514              		.loc 1 235 17 is_stmt 1 view .LVU3898
 11515              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11516              		.loc 1 235 51 is_stmt 0 view .LVU3899
 11517 3fa5 4989DA   		mov	r10, rbx	# tmp799, index
 11518              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11519              		.loc 1 235 54 view .LVU3900
 11520 3fa8 C462E1F7 		shlx	r11, rdx, rbx	# tmp802, tmp414, index
 11520      DA
 11521              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11522              		.loc 1 235 51 view .LVU3901
 11523 3fad 49C1EA06 		shr	r10, 6	# tmp799,
 11524              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11525              		.loc 1 234 76 view .LVU3902
 11526 3fb1 4C01EB   		add	rbx, r13	# index, step
 11527              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11528              		.loc 1 235 51 view .LVU3903
 11529 3fb4 4F091CD4 		or	QWORD PTR [r12+r10*8], r11	# *_147, tmp802
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11530              		.loc 1 234 70 is_stmt 1 view .LVU3904
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11531              		.loc 1 234 49 view .LVU3905
 11532              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11533              		.loc 1 234 13 is_stmt 0 view .LVU3906
 11534 3fb8 4939D9   		cmp	r9, rbx	# _70, index
 11535 3fbb 0F8252F0 		jb	.L554	#,
 11535      FFFF
 235:sieve_extend.c ****             return;
 11536              		.loc 1 235 17 is_stmt 1 view .LVU3907
 11537              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11538              		.loc 1 235 51 is_stmt 0 view .LVU3908
 11539 3fc1 4889D8   		mov	rax, rbx	# tmp804, index
 11540              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11541              		.loc 1 235 54 view .LVU3909
 11542 3fc4 C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp807, tmp414, index
 11542      F2
 11543              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11544              		.loc 1 235 51 view .LVU3910
 11545 3fc9 48C1E806 		shr	rax, 6	# tmp804,
 11546              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11547              		.loc 1 234 76 view .LVU3911
 11548 3fcd 4A8D1C2B 		lea	rbx, [rbx+r13]	# index,
GAS LISTING /tmp/ccFOD2R4.s 			page 306


 11549              	# sieve_extend.c:235:                 bitstorage_word[wordindex(index)] |= markmask(index);
 235:sieve_extend.c ****             return;
 11550              		.loc 1 235 51 view .LVU3912
 11551 3fd1 490934C4 		or	QWORD PTR [r12+rax*8], rsi	# *_147, tmp807
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11552              		.loc 1 234 70 is_stmt 1 view .LVU3913
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11553              		.loc 1 234 49 view .LVU3914
 11554              	# sieve_extend.c:234:             for (counter_t index = range_start; index <= range_stop; index +=
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11555              		.loc 1 234 13 is_stmt 0 view .LVU3915
 11556 3fd5 4939D9   		cmp	r9, rbx	# _70, index
 11557 3fd8 0F831EFF 		jnb	.L552	#,
 11557      FFFF
 11558 3fde E930F0FF 		jmp	.L554	#
 11558      FF
 11559              	.LVL641:
 11560              	.L972:
 234:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11561              		.loc 1 234 13 view .LVU3916
 11562              	.LBE481:
 11563              	.LBE482:
 11564              	.LBE493:
 11565              	.LBE494:
 11566              	.LBE509:
 11567              	.LBE515:
 11568              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11569              		.loc 1 473 5 view .LVU3917
 11570 3fe3 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, _100
 11570      20
 11571              	# sieve_extend.c:465:     register counter_t prime   = 0;
 465:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11572              		.loc 1 465 24 view .LVU3918
 11573 3fe8 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 11573      28000000 
 11573      00
 11574              	# sieve_extend.c:469:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 469:sieve_extend.c **** 
 11575              		.loc 1 469 18 view .LVU3919
 11576 3ff1 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 11576      60000000 
 11576      00
 11577              	# sieve_extend.c:473:     for (;range_stop < block_stop;) {
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11578              		.loc 1 473 5 view .LVU3920
 11579 3ffa 48C74424 		mov	QWORD PTR 24[rsp], 1	# %sfp,
 11579      18010000 
 11579      00
 11580 4003 E9CAFEFF 		jmp	.L539	#
 11580      FF
 11581              	.LVL642:
 11582              	.L982:
 473:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11583              		.loc 1 473 5 view .LVU3921
 11584              	.LBE519:
 11585              	.LBE637:
GAS LISTING /tmp/ccFOD2R4.s 			page 307


 11586              	# sieve_extend.c:521: }
 521:sieve_extend.c **** 
 11587              		.loc 1 521 1 view .LVU3922
 11588 4008 C5F877   		vzeroupper
 11589 400b E8000000 		call	__stack_chk_fail@PLT	#
 11589      00
 11590              	.LVL643:
 521:sieve_extend.c **** 
 11591              		.loc 1 521 1 view .LVU3923
 11592              		.cfi_endproc
 11593              	.LFE70:
 11595              		.p2align 4
 11597              	tune_benchmark:
 11598              	.LVL644:
 11599              	.LFB77:
 627:sieve_extend.c **** 
 628:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11600              		.loc 1 628 94 is_stmt 1 view -0
 11601              		.cfi_startproc
 11602              		.loc 1 628 94 is_stmt 0 view .LVU3925
 11603 4010 4154     		push	r12	#
 11604              		.cfi_def_cfa_offset 16
 11605              		.cfi_offset 12, -16
 11606 4012 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 11607              	# sieve_extend.c:634:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 629:sieve_extend.c ****     counter_t passes = 0;
 630:sieve_extend.c ****     double elapsed_time = 0;
 631:sieve_extend.c ****     struct timespec start_time,end_time;
 632:sieve_extend.c ****     struct sieve_t *sieve;
 633:sieve_extend.c **** 
 634:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11608              		.loc 1 634 44 view .LVU3926
 11609 4015 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 11610              	.LVL645:
 11611              	# sieve_extend.c:628: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 628:sieve_extend.c ****     counter_t passes = 0;
 11612              		.loc 1 628 94 view .LVU3927
 11613 4019 55       		push	rbp	#
 11614              		.cfi_def_cfa_offset 24
 11615              		.cfi_offset 6, -24
 11616              	# sieve_extend.c:634:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 11617              		.loc 1 634 44 view .LVU3928
 11618 401a 48C1E705 		sal	rdi, 5	# tmp115,
 11619              	# sieve_extend.c:629:     counter_t passes = 0;
 629:sieve_extend.c ****     counter_t passes = 0;
 11620              		.loc 1 629 15 view .LVU3929
 11621 401e 4531E4   		xor	r12d, r12d	# passes
 11622              	# sieve_extend.c:628: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 628:sieve_extend.c ****     counter_t passes = 0;
 11623              		.loc 1 628 94 view .LVU3930
 11624 4021 53       		push	rbx	#
 11625              		.cfi_def_cfa_offset 32
 11626              		.cfi_offset 3, -32
 11627              	# sieve_extend.c:634:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 11628              		.loc 1 634 44 view .LVU3931
 11629 4022 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 11630              	# sieve_extend.c:638:     clock_gettime(CLOCK_MONOTONIC,&start_time);
GAS LISTING /tmp/ccFOD2R4.s 			page 308


 635:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 636:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 637:sieve_extend.c **** 
 638:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11631              		.loc 1 638 5 view .LVU3932
 11632 4026 BF010000 		mov	edi, 1	#,
 11632      00
 11633              	# sieve_extend.c:628: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 628:sieve_extend.c ****     counter_t passes = 0;
 11634              		.loc 1 628 94 view .LVU3933
 11635 402b 488D6424 		lea	rsp, -48[rsp]	#,
 11635      D0
 11636              		.cfi_def_cfa_offset 80
 11637              	# sieve_extend.c:635:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 635:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11638              		.loc 1 635 30 view .LVU3934
 11639 4030 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11640              	# sieve_extend.c:638:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11641              		.loc 1 638 5 view .LVU3935
 11642 4034 4889E6   		mov	rsi, rsp	# tmp119,
 11643              	.LVL646:
 11644              	# sieve_extend.c:636:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 636:sieve_extend.c **** 
 11645              		.loc 1 636 30 view .LVU3936
 11646 4037 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 11647              	# sieve_extend.c:628: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 628:sieve_extend.c ****     counter_t passes = 0;
 11648              		.loc 1 628 94 view .LVU3937
 11649 403b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 11649      25280000 
 11649      00
 11650 4044 48894424 		mov	QWORD PTR 40[rsp], rax	# D.6882, tmp160
 11650      28
 11651 4049 31C0     		xor	eax, eax	# tmp160
 629:sieve_extend.c ****     double elapsed_time = 0;
 11652              		.loc 1 629 5 is_stmt 1 view .LVU3938
 11653              	.LVL647:
 630:sieve_extend.c ****     struct timespec start_time,end_time;
 11654              		.loc 1 630 5 view .LVU3939
 631:sieve_extend.c ****     struct sieve_t *sieve;
 11655              		.loc 1 631 5 view .LVU3940
 632:sieve_extend.c **** 
 11656              		.loc 1 632 5 view .LVU3941
 634:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11657              		.loc 1 634 5 view .LVU3942
 11658              	# sieve_extend.c:634:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 634:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11659              		.loc 1 634 29 is_stmt 0 view .LVU3943
 11660 404b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11661              	# sieve_extend.c:635:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 635:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11662              		.loc 1 635 30 view .LVU3944
 11663 404f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11663      000000
 11664              	# sieve_extend.c:636:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 636:sieve_extend.c **** 
 11665              		.loc 1 636 30 view .LVU3945
GAS LISTING /tmp/ccFOD2R4.s 			page 309


 11666 4056 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 11666      000000
 11667              	# sieve_extend.c:634:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 634:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11668              		.loc 1 634 29 view .LVU3946
 11669 405d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11669      000000
 635:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11670              		.loc 1 635 5 is_stmt 1 view .LVU3947
 636:sieve_extend.c **** 
 11671              		.loc 1 636 5 view .LVU3948
 11672              		.loc 1 638 5 view .LVU3949
 11673 4064 E8000000 		call	clock_gettime@PLT	#
 11673      00
 11674              	.LVL648:
 639:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11675              		.loc 1 639 5 view .LVU3950
 11676              		.loc 1 639 11 view .LVU3951
 11677 4069 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 11678 406d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11678      40
 11679 4072 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 11679      00000000 
 11680 407a 7676     		jbe	.L984	#,
 11681 407c E99E0000 		jmp	.L985	#
 11681      00
 11682              	.LVL649:
 11683              		.p2align 4,,7
 11684 4081 0F1F8000 		.p2align 3
 11684      000000
 11685              	.L988:
 640:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11686              		.loc 1 640 9 view .LVU3952
 11687              	# sieve_extend.c:640:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 11688              		.loc 1 640 17 is_stmt 0 view .LVU3953
 11689 4088 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11690              	# sieve_extend.c:642:         passes++;
 641:sieve_extend.c ****         sieve_delete(sieve);
 642:sieve_extend.c ****         passes++;
 11691              		.loc 1 642 15 view .LVU3954
 11692 408c 4983C401 		add	r12, 1	# passes,
 11693              	.LVL650:
 11694              	# sieve_extend.c:640:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 640:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11695              		.loc 1 640 17 view .LVU3955
 11696 4090 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11697 4093 E8B8E9FF 		call	sieve_shake	#
 11697      FF
 11698              	.LVL651:
 11699              	.LBB638:
 11700              	.LBB639:
 11701              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 11702              		.loc 1 112 5 view .LVU3956
 11703 4098 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitstorage
 11704              	.LBE639:
 11705              	.LBE638:
GAS LISTING /tmp/ccFOD2R4.s 			page 310


 11706              	# sieve_extend.c:640:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 640:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11707              		.loc 1 640 17 view .LVU3957
 11708 409b 4889C5   		mov	rbp, rax	# sieve, tmp151
 11709              	.LVL652:
 641:sieve_extend.c ****         sieve_delete(sieve);
 11710              		.loc 1 641 9 is_stmt 1 view .LVU3958
 11711              	.LBB641:
 11712              	.LBI638:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 11713              		.loc 1 111 13 view .LVU3959
 11714              	.LBB640:
 112:sieve_extend.c ****     free(sieve);
 11715              		.loc 1 112 5 view .LVU3960
 11716 409e E8000000 		call	free@PLT	#
 11716      00
 11717              	.LVL653:
 113:sieve_extend.c **** }
 11718              		.loc 1 113 5 view .LVU3961
 11719 40a3 4889EF   		mov	rdi, rbp	#, sieve
 11720 40a6 E8000000 		call	free@PLT	#
 11720      00
 11721              	.LVL654:
 113:sieve_extend.c **** }
 11722              		.loc 1 113 5 is_stmt 0 view .LVU3962
 11723              	.LBE640:
 11724              	.LBE641:
 11725              		.loc 1 642 9 is_stmt 1 view .LVU3963
 643:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11726              		.loc 1 643 9 view .LVU3964
 11727 40ab 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 11727      10
 11728 40b0 BF010000 		mov	edi, 1	#,
 11728      00
 11729 40b5 E8000000 		call	clock_gettime@PLT	#
 11729      00
 11730              	.LVL655:
 644:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11731              		.loc 1 644 9 view .LVU3965
 11732              	# sieve_extend.c:644:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11733              		.loc 1 644 58 is_stmt 0 view .LVU3966
 11734 40ba C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 11734      442418
 11735              	# sieve_extend.c:644:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11736              		.loc 1 644 64 view .LVU3967
 11737 40c1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 11737      0C24
 11738              	# sieve_extend.c:644:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11739              		.loc 1 644 104 view .LVU3968
 11740 40c7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 11740      5C2408
 11741              	# sieve_extend.c:644:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11742              		.loc 1 644 40 view .LVU3969
 11743 40ce C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 11743      542410
 11744 40d5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 11744      05000000 
GAS LISTING /tmp/ccFOD2R4.s 			page 311


 11744      00
 11745 40de C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 11745      1D000000 
 11745      00
 11746              	# sieve_extend.c:644:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11747              		.loc 1 644 22 view .LVU3970
 11748 40e7 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 11749              	.LVL656:
 639:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11750              		.loc 1 639 11 is_stmt 1 view .LVU3971
 11751 40eb C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11751      40
 11752 40f0 7706     		ja	.L999	#,
 11753              	.LVL657:
 11754              	.L984:
 11755              	# sieve_extend.c:639:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 639:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11756              		.loc 1 639 79 is_stmt 0 discriminator 1 view .LVU3972
 11757 40f2 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 11758 40f6 7790     		ja	.L988	#,
 11759              	.L999:
 639:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11760              		.loc 1 639 79 discriminator 1 view .LVU3973
 11761 40f8 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 11761      F4
 11762 40fd 4D85E4   		test	r12, r12	# passes
 11763 4100 7919     		jns	.L990	#,
 639:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11764              		.loc 1 639 79 discriminator 1 view .LVU3974
 11765 4102 4C89E6   		mov	rsi, r12	# tmp135, passes
 11766 4105 4D89E1   		mov	r9, r12	# tmp136, passes
 11767 4108 48D1EE   		shr	rsi	# tmp135
 11768 410b 4183E101 		and	r9d, 1	# tmp136,
 11769 410f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 11770 4112 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 11770      EE
 11771 4117 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 11772              	.L990:
 639:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11773              		.loc 1 639 79 discriminator 1 view .LVU3975
 11774 411b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 11775              	.LVL658:
 11776              	.L985:
 645:sieve_extend.c ****     }
 646:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 11777              		.loc 1 646 5 is_stmt 1 view .LVU3976
 11778              	# sieve_extend.c:646:     tuning_result[tuning_result_index].passes = passes;
 11779              		.loc 1 646 47 is_stmt 0 view .LVU3977
 11780 411f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
 647:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11781              		.loc 1 647 5 is_stmt 1 view .LVU3978
 11782              	# sieve_extend.c:647:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11783              		.loc 1 647 53 is_stmt 0 view .LVU3979
 11784 4123 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 11784      50
 648:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11785              		.loc 1 648 5 is_stmt 1 view .LVU3980
GAS LISTING /tmp/ccFOD2R4.s 			page 312


 11786              	# sieve_extend.c:648:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11787              		.loc 1 648 44 is_stmt 0 view .LVU3981
 11788 4128 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 11788      58
 11789              	# sieve_extend.c:649: }
 649:sieve_extend.c **** }
 11790              		.loc 1 649 1 view .LVU3982
 11791 412d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.6882
 11791      28
 11792 4132 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 11792      25280000 
 11792      00
 11793 413b 750A     		jne	.L1000	#,
 11794 413d 488D6424 		lea	rsp, 48[rsp]	#,
 11794      30
 11795              		.cfi_remember_state
 11796              		.cfi_def_cfa_offset 32
 11797 4142 5B       		pop	rbx	#
 11798              		.cfi_def_cfa_offset 24
 11799 4143 5D       		pop	rbp	#
 11800              		.cfi_def_cfa_offset 16
 11801 4144 415C     		pop	r12	#
 11802              		.cfi_def_cfa_offset 8
 11803 4146 C3       		ret	
 11804              	.L1000:
 11805              		.cfi_restore_state
 11806 4147 E8000000 		call	__stack_chk_fail@PLT	#
 11806      00
 11807              	.LVL659:
 11808              		.cfi_endproc
 11809              	.LFE77:
 11811              		.section	.rodata.str1.8,"aMS",@progbits,1
 11812              		.align 8
 11813              	.LC9:
 11814 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 11814      6C743A20 
 11814      53696576 
 11814      6573697A 
 11814      6520256A 
 11815 0055 000000   		.align 8
 11816              	.LC10:
 11817 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 11817      616C6964 
 11817      20726573 
 11817      756C742E 
 11817      20536965 
 11818              		.section	.rodata.str1.1
 11819              	.LC11:
 11820 0023 44656570 		.string	"DeepAnalyzing"
 11820      416E616C 
 11820      797A696E 
 11820      6700
 11821              		.section	.rodata.str1.8
 11822 00bb 00000000 		.align 8
 11822      00
 11823              	.LC12:
 11824 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
GAS LISTING /tmp/ccFOD2R4.s 			page 313


 11824      65722025 
 11824      6A752028 
 11824      256A7529 
 11824      20776173 
 11825              		.align 8
 11826              	.LC13:
 11827 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 11827      65722025 
 11827      6A752028 
 11827      256A7529 
 11827      20776173 
 11828              		.text
 11829 414c 0F1F4000 		.p2align 4
 11830              		.globl	validatePrimeCount
 11832              	validatePrimeCount:
 11833              	.LVL660:
 11834              	.LFB74:
 564:sieve_extend.c **** 
 11835              		.loc 1 564 72 is_stmt 1 view -0
 11836              		.cfi_startproc
 564:sieve_extend.c **** 
 11837              		.loc 1 564 72 is_stmt 0 view .LVU3984
 11838 4150 F30F1EFA 		endbr64	
 566:sieve_extend.c ****     counter_t valid_primes = 0;
 11839              		.loc 1 566 5 is_stmt 1 view .LVU3985
 11840              	# sieve_extend.c:564: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 564:sieve_extend.c **** 
 11841              		.loc 1 564 72 is_stmt 0 view .LVU3986
 11842 4154 4157     		push	r15	#
 11843              		.cfi_def_cfa_offset 16
 11844              		.cfi_offset 15, -16
 11845 4156 4156     		push	r14	#
 11846              		.cfi_def_cfa_offset 24
 11847              		.cfi_offset 14, -24
 11848 4158 4155     		push	r13	#
 11849              		.cfi_def_cfa_offset 32
 11850              		.cfi_offset 13, -32
 11851 415a 4154     		push	r12	#
 11852              		.cfi_def_cfa_offset 40
 11853              		.cfi_offset 12, -40
 11854 415c 55       		push	rbp	#
 11855              		.cfi_def_cfa_offset 48
 11856              		.cfi_offset 6, -48
 11857 415d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 11858 4160 53       		push	rbx	#
 11859              		.cfi_def_cfa_offset 56
 11860              		.cfi_offset 3, -56
 11861 4161 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 11862 4163 488D6424 		lea	rsp, -56[rsp]	#,
 11862      C8
 11863              		.cfi_def_cfa_offset 112
 11864              	# sieve_extend.c:566:     counter_t primecount = count_primes(sieve);
 566:sieve_extend.c ****     counter_t valid_primes = 0;
 11865              		.loc 1 566 28 view .LVU3987
 11866 4168 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 11867 416b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 11868              	.LVL661:
GAS LISTING /tmp/ccFOD2R4.s 			page 314


 11869              	.LBB663:
 11870              	.LBI663:
 535:sieve_extend.c ****     counter_t primeCount = 1;
 11871              		.loc 1 535 18 is_stmt 1 view .LVU3988
 11872              	.LBB664:
 11873              	.LBB665:
 537:sieve_extend.c ****     return primeCount;
 11874              		.loc 1 537 30 view .LVU3989
 11875 416f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 11876              	# sieve_extend.c:537:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 537:sieve_extend.c ****     return primeCount;
 11877              		.loc 1 537 5 is_stmt 0 view .LVU3990
 11878 4173 4883FF01 		cmp	rdi, 1	# _25,
 11879 4177 0F860B05 		jbe	.L1002	#,
 11879      0000
 11880              	# sieve_extend.c:537:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 537:sieve_extend.c ****     return primeCount;
 11881              		.loc 1 537 20 view .LVU3991
 11882 417d B8010000 		mov	eax, 1	# factor,
 11882      00
 11883              	.LBE665:
 11884              	# sieve_extend.c:536:     counter_t primeCount = 1;
 536:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 11885              		.loc 1 536 15 view .LVU3992
 11886 4182 41B80100 		mov	r8d, 1	# primeCount,
 11886      0000
 11887              	.LVL662:
 11888 4188 0F1F8400 		.p2align 4
 11888      00000000 
 11889              		.p2align 3
 11890              	.L1005:
 11891              	.LBB668:
 537:sieve_extend.c ****     return primeCount;
 11892              		.loc 1 537 106 is_stmt 1 view .LVU3993
 11893              	# sieve_extend.c:537:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 537:sieve_extend.c ****     return primeCount;
 11894              		.loc 1 537 116 is_stmt 0 view .LVU3994
 11895 4190 4983C001 		add	r8, 1	# primeCount,
 11896              	.LVL663:
 537:sieve_extend.c ****     return primeCount;
 11897              		.loc 1 537 52 is_stmt 1 view .LVU3995
 11898              	# sieve_extend.c:537:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 537:sieve_extend.c ****     return primeCount;
 11899              		.loc 1 537 61 is_stmt 0 view .LVU3996
 11900 4194 4883C001 		add	rax, 1	# factor,
 11901              	.LVL664:
 11902              	.L1149:
 11903              	.LBB666:
 11904              	.LBI666:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 11905              		.loc 1 117 25 is_stmt 1 view .LVU3997
 11906              	.LBB667:
 118:sieve_extend.c ****     return index;
 11907              		.loc 1 118 5 view .LVU3998
 118:sieve_extend.c ****     return index;
 11908              		.loc 1 118 11 view .LVU3999
 11909              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccFOD2R4.s 			page 315


 118:sieve_extend.c ****     return index;
 11910              		.loc 1 118 23 is_stmt 0 view .LVU4000
 11911 4198 4889C1   		mov	rcx, rax	# tmp162, factor
 11912 419b 48C1E906 		shr	rcx, 6	# tmp162,
 11913              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11914              		.loc 1 118 12 view .LVU4001
 11915 419f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 11916              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11917              		.loc 1 118 11 view .LVU4002
 11918 41a3 490FA3C3 		bt	r11, rax	# *_106, factor
 11919 41a7 0F83A300 		jnc	.L1003	#,
 11919      0000
 118:sieve_extend.c ****     return index;
 11920              		.loc 1 118 60 is_stmt 1 view .LVU4003
 11921              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11922              		.loc 1 118 65 is_stmt 0 view .LVU4004
 11923 41ad 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 11924              	.LVL665:
 11925              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11926              		.loc 1 118 23 view .LVU4005
 11927 41b1 4D89EE   		mov	r14, r13	# tmp167, factor
 11928              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11929              		.loc 1 118 65 view .LVU4006
 11930 41b4 4C89E8   		mov	rax, r13	# factor, tmp235
 118:sieve_extend.c ****     return index;
 11931              		.loc 1 118 11 is_stmt 1 view .LVU4007
 11932              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11933              		.loc 1 118 23 is_stmt 0 view .LVU4008
 11934 41b7 49C1EE06 		shr	r14, 6	# tmp167,
 11935              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11936              		.loc 1 118 12 view .LVU4009
 11937 41bb 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
 11938              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11939              		.loc 1 118 11 view .LVU4010
 11940 41bf 4D0FA3EF 		bt	r15, r13	# *_35, factor
 11941 41c3 0F838700 		jnc	.L1003	#,
 11941      0000
 118:sieve_extend.c ****     return index;
 11942              		.loc 1 118 60 is_stmt 1 view .LVU4011
 11943              	.LVL666:
 11944              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11945              		.loc 1 118 65 is_stmt 0 view .LVU4012
 11946 41c9 4883C001 		add	rax, 1	# factor,
 11947              	.LVL667:
 118:sieve_extend.c ****     return index;
 11948              		.loc 1 118 11 is_stmt 1 view .LVU4013
 11949              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccFOD2R4.s 			page 316


 11950              		.loc 1 118 23 is_stmt 0 view .LVU4014
 11951 41cd 4989C4   		mov	r12, rax	# tmp279, factor
 11952 41d0 49C1EC06 		shr	r12, 6	# tmp279,
 11953              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11954              		.loc 1 118 12 view .LVU4015
 11955 41d4 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 11956              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11957              		.loc 1 118 11 view .LVU4016
 11958 41d8 480FA3C6 		bt	rsi, rax	# *_35, factor
 11959 41dc 7372     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 11960              		.loc 1 118 60 is_stmt 1 view .LVU4017
 11961              	.LVL668:
 11962              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11963              		.loc 1 118 65 is_stmt 0 view .LVU4018
 11964 41de 498D4502 		lea	rax, 2[r13]	# factor,
 11965              	.LVL669:
 118:sieve_extend.c ****     return index;
 11966              		.loc 1 118 11 is_stmt 1 view .LVU4019
 11967              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11968              		.loc 1 118 23 is_stmt 0 view .LVU4020
 11969 41e2 4989C2   		mov	r10, rax	# tmp283, factor
 11970 41e5 49C1EA06 		shr	r10, 6	# tmp283,
 11971              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11972              		.loc 1 118 12 view .LVU4021
 11973 41e9 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 11974              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11975              		.loc 1 118 11 view .LVU4022
 11976 41ed 480FA3C1 		bt	rcx, rax	# *_35, factor
 11977 41f1 735D     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 11978              		.loc 1 118 60 is_stmt 1 view .LVU4023
 11979              	.LVL670:
 11980              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11981              		.loc 1 118 65 is_stmt 0 view .LVU4024
 11982 41f3 498D4503 		lea	rax, 3[r13]	# factor,
 11983              	.LVL671:
 118:sieve_extend.c ****     return index;
 11984              		.loc 1 118 11 is_stmt 1 view .LVU4025
 11985              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11986              		.loc 1 118 23 is_stmt 0 view .LVU4026
 11987 41f7 4989C3   		mov	r11, rax	# tmp287, factor
 11988 41fa 49C1EB06 		shr	r11, 6	# tmp287,
 11989              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11990              		.loc 1 118 12 view .LVU4027
 11991 41fe 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 11992              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccFOD2R4.s 			page 317


 11993              		.loc 1 118 11 view .LVU4028
 11994 4202 490FA3C6 		bt	r14, rax	# *_35, factor
 11995 4206 7348     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 11996              		.loc 1 118 60 is_stmt 1 view .LVU4029
 11997              	.LVL672:
 11998              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11999              		.loc 1 118 65 is_stmt 0 view .LVU4030
 12000 4208 498D4504 		lea	rax, 4[r13]	# factor,
 12001              	.LVL673:
 118:sieve_extend.c ****     return index;
 12002              		.loc 1 118 11 is_stmt 1 view .LVU4031
 12003              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12004              		.loc 1 118 23 is_stmt 0 view .LVU4032
 12005 420c 4989C7   		mov	r15, rax	# tmp291, factor
 12006 420f 49C1EF06 		shr	r15, 6	# tmp291,
 12007              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12008              		.loc 1 118 12 view .LVU4033
 12009 4213 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 12010              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12011              		.loc 1 118 11 view .LVU4034
 12012 4217 490FA3C4 		bt	r12, rax	# *_35, factor
 12013 421b 7333     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 12014              		.loc 1 118 60 is_stmt 1 view .LVU4035
 12015              	.LVL674:
 12016              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12017              		.loc 1 118 65 is_stmt 0 view .LVU4036
 12018 421d 498D4505 		lea	rax, 5[r13]	# factor,
 12019              	.LVL675:
 118:sieve_extend.c ****     return index;
 12020              		.loc 1 118 11 is_stmt 1 view .LVU4037
 12021              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12022              		.loc 1 118 23 is_stmt 0 view .LVU4038
 12023 4221 4889C6   		mov	rsi, rax	# tmp295, factor
 12024 4224 48C1EE06 		shr	rsi, 6	# tmp295,
 12025              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12026              		.loc 1 118 12 view .LVU4039
 12027 4228 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 12028              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12029              		.loc 1 118 11 view .LVU4040
 12030 422c 490FA3C2 		bt	r10, rax	# *_35, factor
 12031 4230 731E     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 12032              		.loc 1 118 60 is_stmt 1 view .LVU4041
 12033              	.LVL676:
 12034              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12035              		.loc 1 118 65 is_stmt 0 view .LVU4042
GAS LISTING /tmp/ccFOD2R4.s 			page 318


 12036 4232 498D4506 		lea	rax, 6[r13]	# factor,
 12037              	.LVL677:
 118:sieve_extend.c ****     return index;
 12038              		.loc 1 118 11 is_stmt 1 view .LVU4043
 12039              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12040              		.loc 1 118 23 is_stmt 0 view .LVU4044
 12041 4236 4889C1   		mov	rcx, rax	# tmp299, factor
 12042 4239 48C1E906 		shr	rcx, 6	# tmp299,
 12043              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12044              		.loc 1 118 12 view .LVU4045
 12045 423d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 12046              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12047              		.loc 1 118 11 view .LVU4046
 12048 4241 490FA3C3 		bt	r11, rax	# *_35, factor
 12049 4245 7309     		jnc	.L1003	#,
 118:sieve_extend.c ****     return index;
 12050              		.loc 1 118 60 is_stmt 1 view .LVU4047
 12051              	.LVL678:
 12052              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12053              		.loc 1 118 65 is_stmt 0 view .LVU4048
 12054 4247 498D4507 		lea	rax, 7[r13]	# factor,
 12055              	.LVL679:
 118:sieve_extend.c ****     return index;
 12056              		.loc 1 118 11 is_stmt 1 view .LVU4049
 12057 424b E948FFFF 		jmp	.L1149	#
 12057      FF
 12058              		.p2align 4,,7
 12059              		.p2align 3
 12060              	.L1003:
 12061              	.LVL680:
 118:sieve_extend.c ****     return index;
 12062              		.loc 1 118 11 is_stmt 0 view .LVU4050
 12063              	.LBE667:
 12064              	.LBE666:
 537:sieve_extend.c ****     return primeCount;
 12065              		.loc 1 537 30 is_stmt 1 view .LVU4051
 12066              	# sieve_extend.c:537:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 537:sieve_extend.c ****     return primeCount;
 12067              		.loc 1 537 5 is_stmt 0 view .LVU4052
 12068 4250 4839C7   		cmp	rdi, rax	# _25, factor
 12069 4253 0F8737FF 		ja	.L1005	#,
 12069      FFFF
 537:sieve_extend.c ****     return primeCount;
 12070              		.loc 1 537 5 view .LVU4053
 12071              	.LBE668:
 538:sieve_extend.c **** }
 12072              		.loc 1 538 5 is_stmt 1 view .LVU4054
 12073              	.LVL681:
 538:sieve_extend.c **** }
 12074              		.loc 1 538 5 is_stmt 0 view .LVU4055
 12075              	.LBE664:
 12076              	.LBE663:
 567:sieve_extend.c ****     switch(sieve->size) {
GAS LISTING /tmp/ccFOD2R4.s 			page 319


 12077              		.loc 1 567 5 is_stmt 1 view .LVU4056
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12078              		.loc 1 568 5 view .LVU4057
 12079 4259 83FB03   		cmp	ebx, 3	# option_verboselevel,
 12080 425c 0F9FC2   		setg	dl	#, tmp172
 12081 425f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 12081      860100
 12082 4266 0F843406 		je	.L1006	#,
 12082      0000
 12083 426c 0F86D402 		jbe	.L1150	#,
 12083      0000
 12084 4272 4981F900 		cmp	r9, 100000000	# pretmp_201,
 12084      E1F505
 12085 4279 0F84E005 		je	.L1014	#,
 12085      0000
 12086 427f 90       		.p2align 4,,4
 12087 4280 0F863A03 		jbe	.L1151	#,
 12087      0000
 12088 4286 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 12088      CA9A3B
 12089 428d 0F85F105 		jne	.L1012	#,
 12089      0000
 12090 4293 4981F82E 		cmp	r8, 50847534	# primeCount,
 12090      DF0703
 12091              	# sieve_extend.c:577:         case 1000000000:    valid_primes = 50847534; break;
 577:sieve_extend.c ****         default:            valid_primes= 0;
 12092              		.loc 1 577 42 is_stmt 0 view .LVU4058
 12093 429a B92EDF07 		mov	ecx, 50847534	# valid_primes,
 12093      03
 12094 429f 410F94C5 		sete	r13b	#, tmp189
 12095 42a3 4421EA   		and	edx, r13d	# _253, tmp189
 12096 42a6 4981F82E 		cmp	r8, 50847534	# primeCount,
 12096      DF0703
 12097 42ad 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 12098 42b1 410F95C4 		setne	r12b	#, _135
 577:sieve_extend.c ****         default:            valid_primes= 0;
 12099              		.loc 1 577 29 is_stmt 1 view .LVU4059
 12100              	.LVL682:
 577:sieve_extend.c ****         default:            valid_primes= 0;
 12101              		.loc 1 577 54 view .LVU4060
 12102 42b5 66662E0F 		.p2align 4
 12102      1F840000 
 12102      000000
 12103              		.p2align 3
 12104              	.L1019:
 581:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 12105              		.loc 1 581 5 view .LVU4061
 582:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12106              		.loc 1 582 5 view .LVU4062
 12107              	# sieve_extend.c:582:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 582:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12108              		.loc 1 582 8 is_stmt 0 view .LVU4063
 12109 42c0 84D2     		test	dl, dl	# _253
 12110 42c2 0F841704 		je	.L1020	#,
 12110      0000
 582:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12111              		.loc 1 582 45 is_stmt 1 discriminator 1 view .LVU4064
GAS LISTING /tmp/ccFOD2R4.s 			page 320


 12112              	.LVL683:
 12113              	.LBB670:
 12114              	.LBI670:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12115              		.loc 3 105 1 discriminator 1 view .LVU4065
 12116              	.LBB671:
 12117              		.loc 3 107 3 discriminator 1 view .LVU4066
 12118              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12119              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4067
 12120 42c8 4C89CA   		mov	rdx, r9	#, pretmp_201
 12121 42cb 488D3500 		lea	rsi, .LC9[rip]	#,
 12121      000000
 12122 42d2 BF010000 		mov	edi, 1	#,
 12122      00
 12123 42d7 31C0     		xor	eax, eax	#
 12124 42d9 E8000000 		call	__printf_chk@PLT	#
 12124      00
 12125              	.LVL684:
 12126              		.loc 3 107 10 discriminator 1 view .LVU4068
 12127              	.LBE671:
 12128              	.LBE670:
 583:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 12129              		.loc 1 583 5 is_stmt 1 discriminator 1 view .LVU4069
 12130              	.L1021:
 587:sieve_extend.c ****     return (valid);
 12131              		.loc 1 587 5 view .LVU4070
 12132              	# sieve_extend.c:587:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 587:sieve_extend.c ****     return (valid);
 12133              		.loc 1 587 8 is_stmt 0 view .LVU4071
 12134 42de 83FB01   		cmp	ebx, 1	# option_verboselevel,
 12135 42e1 0F8E4C02 		jle	.L1001	#,
 12135      0000
 12136 42e7 4584E4   		test	r12b, r12b	# _135
 12137 42ea 0F844302 		je	.L1001	#,
 12137      0000
 12138              	.L1023:
 587:sieve_extend.c ****     return (valid);
 12139              		.loc 1 587 45 is_stmt 1 discriminator 1 view .LVU4072
 12140              	.LBB672:
 12141              	.LBI672:
 541:sieve_extend.c ****     printf("DeepAnalyzing\n");
 12142              		.loc 1 541 13 discriminator 1 view .LVU4073
 12143              	.LVL685:
 12144              	.LBB673:
 542:sieve_extend.c ****     counter_t warn_prime = 0;
 12145              		.loc 1 542 5 discriminator 1 view .LVU4074
 12146              	.LBB674:
 12147              	.LBI674:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12148              		.loc 3 105 1 discriminator 1 view .LVU4075
 12149              	.LBB675:
 12150              		.loc 3 107 3 discriminator 1 view .LVU4076
 12151              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12152              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4077
 12153 42f0 488D3D00 		lea	rdi, .LC11[rip]	#,
 12153      000000
 12154 42f7 E8000000 		call	puts@PLT	#
GAS LISTING /tmp/ccFOD2R4.s 			page 321


 12154      00
 12155              	.LVL686:
 12156              		.loc 3 107 10 discriminator 1 view .LVU4078
 12157              	.LBE675:
 12158              	.LBE674:
 543:sieve_extend.c ****     counter_t warn_nonprime = 0;
 12159              		.loc 1 543 5 is_stmt 1 discriminator 1 view .LVU4079
 544:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12160              		.loc 1 544 5 discriminator 1 view .LVU4080
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12161              		.loc 1 545 5 discriminator 1 view .LVU4081
 12162              	.LBB676:
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12163              		.loc 1 545 10 discriminator 1 view .LVU4082
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12164              		.loc 1 545 31 discriminator 1 view .LVU4083
 12165              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12166              		.loc 1 545 44 is_stmt 0 discriminator 1 view .LVU4084
 12167 42fc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12168              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12169              		.loc 1 545 5 discriminator 1 view .LVU4085
 12170 4300 4883FF01 		cmp	rdi, 1	# _137,
 12171 4304 0F862902 		jbe	.L1001	#,
 12171      0000
 12172              	.LBB677:
 12173              	.LBB678:
 12174              	.LBB679:
 12175              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12176              		.loc 3 107 10 view .LVU4086
 12177 430a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 12177      24
 12178              	.LBE679:
 12179              	.LBE678:
 12180              	.LBE677:
 12181              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12182              		.loc 1 545 5 view .LVU4087
 12183 430f 41BE0200 		mov	r14d, 2	# ivtmp.585,
 12183      0000
 12184 4315 41BC0300 		mov	r12d, 3	# ivtmp.583,
 12184      0000
 12185              	.LBE676:
 12186              	# sieve_extend.c:543:     counter_t warn_prime = 0;
 543:sieve_extend.c ****     counter_t warn_nonprime = 0;
 12187              		.loc 1 543 15 view .LVU4088
 12188 431b 4531C0   		xor	r8d, r8d	# warn_prime
 12189              	# sieve_extend.c:544:     counter_t warn_nonprime = 0;
 544:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12190              		.loc 1 544 15 view .LVU4089
 12191 431e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 12191      18000000 
 12191      00
 12192              	.LBB698:
 12193              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccFOD2R4.s 			page 322


 12194              		.loc 1 545 20 view .LVU4090
 12195 4327 41BF0100 		mov	r15d, 1	# prime,
 12195      0000
 12196              	.LBB686:
 12197              	.LBB683:
 12198              	.LBB680:
 12199              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12200              		.loc 3 107 10 view .LVU4091
 12201 432d 4989ED   		mov	r13, rbp	# sieve, sieve
 12202              	.LVL687:
 12203              		.p2align 4
 12204              		.p2align 3
 12205              	.L1032:
 12206              		.loc 3 107 10 view .LVU4092
 12207              	.LBE680:
 12208              	.LBE683:
 12209              	.LBE686:
 546:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12210              		.loc 1 546 9 is_stmt 1 view .LVU4093
 12211              	# sieve_extend.c:546:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 546:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12212              		.loc 1 546 31 is_stmt 0 view .LVU4094
 12213 4330 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 12214              	# sieve_extend.c:546:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 546:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12215              		.loc 1 546 32 view .LVU4095
 12216 4334 4C89FB   		mov	rbx, r15	# tmp198, prime
 12217 4337 48C1EB06 		shr	rbx, 6	# tmp198,
 12218              	# sieve_extend.c:546:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 546:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12219              		.loc 1 546 73 view .LVU4096
 12220 433b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 12220      00
 12221 4340 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 12221      C9
 12222              	# sieve_extend.c:546:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 546:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12223              		.loc 1 546 12 view .LVU4097
 12224 4345 83E101   		and	ecx, 1	# c,
 12225 4348 0F84BA02 		je	.L1024	#,
 12225      0000
 12226              	.LVL688:
 12227              	.LBB687:
 12228              	.LBB688:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12229              		.loc 1 555 32 is_stmt 1 view .LVU4098
 12230              	.LBE688:
 12231              	# sieve_extend.c:554:             counter_t c_prime = 0;
 554:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12232              		.loc 1 554 23 is_stmt 0 view .LVU4099
 12233 434e 31ED     		xor	ebp, ebp	# c_prime
 12234              	.LBB689:
 12235              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12236              		.loc 1 555 13 view .LVU4100
 12237 4350 4885FF   		test	rdi, rdi	# _137
 12238 4353 BE030000 		mov	esi, 3	# ivtmp.575,
GAS LISTING /tmp/ccFOD2R4.s 			page 323


 12238      00
 12239 4358 0F84E003 		je	.L1139	#,
 12239      0000
 12240 435e 4989FB   		mov	r11, rdi	# tmp231, _137
 12241 4361 4929CB   		sub	r11, rcx	# tmp231, c
 12242 4364 4183E303 		and	r11d, 3	# tmp231,
 12243 4368 4D89DA   		mov	r10, r11	# tmp232, tmp231
 12244 436b 0F84BF00 		je	.L1025	#,
 12244      0000
 12245              	.LVL689:
 556:sieve_extend.c ****             }
 12246              		.loc 1 556 17 is_stmt 1 view .LVU4101
 12247              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12248              		.loc 1 556 48 is_stmt 0 view .LVU4102
 12249 4371 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 12250 4375 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.585
 12251 4378 7411     		je	.L1079	#,
 12252              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12253              		.loc 1 556 33 view .LVU4103
 12254 437a 31D2     		xor	edx, edx	# tmp241
 12255 437c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.583
 12256 437f 48F7F6   		div	rsi	# ivtmp.575
 12257              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12258              		.loc 1 556 82 view .LVU4104
 12259 4382 31ED     		xor	ebp, ebp	# c_prime
 556:sieve_extend.c ****             }
 12260              		.loc 1 556 82 view .LVU4105
 12261 4384 4885D2   		test	rdx, rdx	# tmp241
 12262 4387 400F94C5 		sete	bpl	#, c_prime
 12263              	.LVL690:
 12264              	.L1079:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12265              		.loc 1 555 68 is_stmt 1 view .LVU4106
 12266              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12267              		.loc 1 555 69 is_stmt 0 view .LVU4107
 12268 438b 4883C101 		add	rcx, 1	# c,
 12269              	.LVL691:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12270              		.loc 1 555 32 is_stmt 1 view .LVU4108
 12271              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12272              		.loc 1 555 13 is_stmt 0 view .LVU4109
 12273 438f 4839F9   		cmp	rcx, rdi	# c, _137
 12274 4392 0F877801 		ja	.L1031	#,
 12274      0000
 12275              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12276              		.loc 1 555 51 view .LVU4110
 12277 4398 4989C9   		mov	r9, rcx	# tmp244, c
 12278 439b BE050000 		mov	esi, 5	# ivtmp.575,
 12278      00
 12279 43a0 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 12280              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccFOD2R4.s 			page 324


 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12281              		.loc 1 555 47 view .LVU4111
 12282 43a4 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.583
 12283 43a7 0F876301 		ja	.L1031	#,
 12283      0000
 12284 43ad 4983FA01 		cmp	r10, 1	# tmp232,
 12285 43b1 747D     		je	.L1025	#,
 12286 43b3 4983FA02 		cmp	r10, 2	# tmp232,
 12287 43b7 7438     		je	.L1110	#,
 556:sieve_extend.c ****             }
 12288              		.loc 1 556 17 is_stmt 1 view .LVU4112
 12289              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12290              		.loc 1 556 48 is_stmt 0 view .LVU4113
 12291 43b9 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 12292 43bd 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.585
 12293 43c0 7417     		je	.L1081	#,
 12294              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12295              		.loc 1 556 33 view .LVU4114
 12296 43c2 31D2     		xor	edx, edx	# tmp247
 12297 43c4 4C89E0   		mov	rax, r12	# tmp248, ivtmp.583
 12298 43c7 48F7F6   		div	rsi	# ivtmp.575
 12299              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12300              		.loc 1 556 20 view .LVU4115
 12301 43ca 4885D2   		test	rdx, rdx	# tmp247
 12302 43cd 410F94C3 		sete	r11b	#, tmp249
 12303              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12304              		.loc 1 556 82 view .LVU4116
 12305 43d1 4180FB01 		cmp	r11b, 1	# tmp249,
 12306 43d5 4883DDFF 		sbb	rbp, -1	# c_prime,
 12307              	.LVL692:
 12308              	.L1081:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12309              		.loc 1 555 68 is_stmt 1 view .LVU4117
 12310              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12311              		.loc 1 555 69 is_stmt 0 view .LVU4118
 12312 43d9 4883C101 		add	rcx, 1	# c,
 12313              	.LVL693:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12314              		.loc 1 555 32 is_stmt 1 view .LVU4119
 12315 43dd 4883C602 		add	rsi, 2	# ivtmp.575,
 12316              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12317              		.loc 1 555 51 is_stmt 0 view .LVU4120
 12318 43e1 4989CA   		mov	r10, rcx	# tmp250, c
 12319 43e4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 12320              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12321              		.loc 1 555 47 view .LVU4121
 12322 43e8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.583
 12323 43eb 0F871F01 		ja	.L1031	#,
 12323      0000
 12324              	.L1110:
GAS LISTING /tmp/ccFOD2R4.s 			page 325


 556:sieve_extend.c ****             }
 12325              		.loc 1 556 17 is_stmt 1 view .LVU4122
 12326              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12327              		.loc 1 556 48 is_stmt 0 view .LVU4123
 12328 43f1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 12329 43f5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.585
 12330 43f8 7415     		je	.L1084	#,
 12331              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12332              		.loc 1 556 33 view .LVU4124
 12333 43fa 31D2     		xor	edx, edx	# tmp253
 12334 43fc 4C89E0   		mov	rax, r12	# tmp254, ivtmp.583
 12335 43ff 48F7F6   		div	rsi	# ivtmp.575
 12336              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12337              		.loc 1 556 20 view .LVU4125
 12338 4402 4885D2   		test	rdx, rdx	# tmp253
 12339 4405 0F94C3   		sete	bl	#, tmp255
 12340              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12341              		.loc 1 556 82 view .LVU4126
 12342 4408 80FB01   		cmp	bl, 1	# tmp255,
 12343 440b 4883DDFF 		sbb	rbp, -1	# c_prime,
 12344              	.LVL694:
 12345              	.L1084:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12346              		.loc 1 555 68 is_stmt 1 view .LVU4127
 12347              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12348              		.loc 1 555 69 is_stmt 0 view .LVU4128
 12349 440f 4883C101 		add	rcx, 1	# c,
 12350              	.LVL695:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12351              		.loc 1 555 32 is_stmt 1 view .LVU4129
 12352 4413 4883C602 		add	rsi, 2	# ivtmp.575,
 12353              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12354              		.loc 1 555 51 is_stmt 0 view .LVU4130
 12355 4417 4989CB   		mov	r11, rcx	# tmp256, c
 12356 441a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 12357              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12358              		.loc 1 555 47 view .LVU4131
 12359 441e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.583
 12360 4421 0F87E900 		ja	.L1031	#,
 12360      0000
 12361              	.LVL696:
 12362 4427 660F1F84 		.p2align 4
 12362      00000000 
 12362      00
 12363              		.p2align 3
 12364              	.L1025:
 556:sieve_extend.c ****             }
 12365              		.loc 1 556 17 is_stmt 1 view .LVU4132
 12366              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
GAS LISTING /tmp/ccFOD2R4.s 			page 326


 12367              		.loc 1 556 48 is_stmt 0 view .LVU4133
 12368 4430 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 12369 4434 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.585
 12370 4437 7417     		je	.L1030	#,
 12371              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12372              		.loc 1 556 33 view .LVU4134
 12373 4439 31D2     		xor	edx, edx	# tmp214
 12374 443b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.583
 12375 443e 48F7F6   		div	rsi	# ivtmp.575
 12376              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12377              		.loc 1 556 20 view .LVU4135
 12378 4441 4885D2   		test	rdx, rdx	# tmp214
 12379 4444 410F94C1 		sete	r9b	#, tmp217
 12380              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12381              		.loc 1 556 82 view .LVU4136
 12382 4448 4180F901 		cmp	r9b, 1	# tmp217,
 12383 444c 4883DDFF 		sbb	rbp, -1	# c_prime,
 12384              	.LVL697:
 12385              	.L1030:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12386              		.loc 1 555 68 is_stmt 1 view .LVU4137
 12387              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12388              		.loc 1 555 69 is_stmt 0 view .LVU4138
 12389 4450 4883C101 		add	rcx, 1	# tmp234,
 12390              	.LVL698:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12391              		.loc 1 555 32 is_stmt 1 view .LVU4139
 12392              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12393              		.loc 1 555 13 is_stmt 0 view .LVU4140
 12394 4454 4839F9   		cmp	rcx, rdi	# tmp234, _137
 12395 4457 0F87B300 		ja	.L1031	#,
 12395      0000
 12396              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12397              		.loc 1 555 51 view .LVU4141
 12398 445d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 12399 4460 4883C602 		add	rsi, 2	# tmp233,
 12400 4464 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 12401              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12402              		.loc 1 555 47 view .LVU4142
 12403 4468 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.583
 12404 446b 0F879F00 		ja	.L1031	#,
 12404      0000
 556:sieve_extend.c ****             }
 12405              		.loc 1 556 17 is_stmt 1 view .LVU4143
 12406              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12407              		.loc 1 556 48 is_stmt 0 view .LVU4144
 12408 4471 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 12409 4475 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.585
 12410 4478 7417     		je	.L1088	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 327


 12411              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12412              		.loc 1 556 33 view .LVU4145
 12413 447a 31D2     		xor	edx, edx	# tmp259
 12414 447c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.583
 12415 447f 48F7F6   		div	rsi	# tmp233
 12416              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12417              		.loc 1 556 20 view .LVU4146
 12418 4482 4885D2   		test	rdx, rdx	# tmp259
 12419 4485 410F94C2 		sete	r10b	#, tmp261
 12420              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12421              		.loc 1 556 82 view .LVU4147
 12422 4489 4180FA01 		cmp	r10b, 1	# tmp261,
 12423 448d 4883DDFF 		sbb	rbp, -1	# c_prime,
 12424              	.LVL699:
 12425              	.L1088:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12426              		.loc 1 555 68 is_stmt 1 view .LVU4148
 12427              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12428              		.loc 1 555 69 is_stmt 0 view .LVU4149
 12429 4491 4C8D4901 		lea	r9, 1[rcx]	# c,
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12430              		.loc 1 555 32 is_stmt 1 view .LVU4150
 12431 4495 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.575,
 12432              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12433              		.loc 1 555 51 is_stmt 0 view .LVU4151
 12434 4499 4D89CB   		mov	r11, r9	# tmp264, c
 12435 449c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 12436              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12437              		.loc 1 555 47 view .LVU4152
 12438 44a0 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.583
 12439 44a3 776B     		ja	.L1031	#,
 556:sieve_extend.c ****             }
 12440              		.loc 1 556 17 is_stmt 1 view .LVU4153
 12441              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12442              		.loc 1 556 48 is_stmt 0 view .LVU4154
 12443 44a5 4D01C9   		add	r9, r9	# tmp265
 12444 44a8 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.585
 12445 44ab 7417     		je	.L1090	#,
 12446              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12447              		.loc 1 556 33 view .LVU4155
 12448 44ad 31D2     		xor	edx, edx	# tmp267
 12449 44af 4C89E0   		mov	rax, r12	# tmp268, ivtmp.583
 12450 44b2 48F7F3   		div	rbx	# ivtmp.575
 12451              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12452              		.loc 1 556 20 view .LVU4156
 12453 44b5 4885D2   		test	rdx, rdx	# tmp267
 12454 44b8 410F94C2 		sete	r10b	#, tmp269
 12455              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/ccFOD2R4.s 			page 328


 556:sieve_extend.c ****             }
 12456              		.loc 1 556 82 view .LVU4157
 12457 44bc 4180FA01 		cmp	r10b, 1	# tmp269,
 12458 44c0 4883DDFF 		sbb	rbp, -1	# c_prime,
 12459              	.LVL700:
 12460              	.L1090:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12461              		.loc 1 555 68 is_stmt 1 view .LVU4158
 12462              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12463              		.loc 1 555 69 is_stmt 0 view .LVU4159
 12464 44c4 4C8D4902 		lea	r9, 2[rcx]	# c,
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12465              		.loc 1 555 32 is_stmt 1 view .LVU4160
 12466 44c8 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.575,
 12467              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12468              		.loc 1 555 51 is_stmt 0 view .LVU4161
 12469 44cc 4D89CB   		mov	r11, r9	# tmp272, c
 12470 44cf 4D0FAFD9 		imul	r11, r9	# tmp272, c
 12471              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12472              		.loc 1 555 47 view .LVU4162
 12473 44d3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.583
 12474 44d6 7738     		ja	.L1031	#,
 556:sieve_extend.c ****             }
 12475              		.loc 1 556 17 is_stmt 1 view .LVU4163
 12476              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12477              		.loc 1 556 48 is_stmt 0 view .LVU4164
 12478 44d8 4D01C9   		add	r9, r9	# tmp273
 12479 44db 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.585
 12480 44de 7417     		je	.L1092	#,
 12481              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12482              		.loc 1 556 33 view .LVU4165
 12483 44e0 31D2     		xor	edx, edx	# tmp275
 12484 44e2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.583
 12485 44e5 48F7F3   		div	rbx	# ivtmp.575
 12486              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12487              		.loc 1 556 20 view .LVU4166
 12488 44e8 4885D2   		test	rdx, rdx	# tmp275
 12489 44eb 410F94C2 		sete	r10b	#, tmp277
 12490              	# sieve_extend.c:556:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 556:sieve_extend.c ****             }
 12491              		.loc 1 556 82 view .LVU4167
 12492 44ef 4180FA01 		cmp	r10b, 1	# tmp277,
 12493 44f3 4883DDFF 		sbb	rbp, -1	# c_prime,
 12494              	.LVL701:
 12495              	.L1092:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12496              		.loc 1 555 68 is_stmt 1 view .LVU4168
 12497              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12498              		.loc 1 555 69 is_stmt 0 view .LVU4169
 12499 44f7 4883C103 		add	rcx, 3	# c,
GAS LISTING /tmp/ccFOD2R4.s 			page 329


 12500              	.LVL702:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12501              		.loc 1 555 32 is_stmt 1 view .LVU4170
 12502 44fb 4883C606 		add	rsi, 6	# ivtmp.575,
 12503              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12504              		.loc 1 555 51 is_stmt 0 view .LVU4171
 12505 44ff 4989C9   		mov	r9, rcx	# tmp278, c
 12506 4502 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 12507              	# sieve_extend.c:555:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12508              		.loc 1 555 47 view .LVU4172
 12509 4506 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.583
 12510 4509 0F8621FF 		jbe	.L1025	#,
 12510      FFFF
 12511              	.LVL703:
 12512 450f 90       		.p2align 4
 12513              		.p2align 3
 12514              	.L1031:
 555:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12515              		.loc 1 555 47 view .LVU4173
 12516              	.LBE689:
 558:sieve_extend.c ****         }
 12517              		.loc 1 558 13 is_stmt 1 view .LVU4174
 12518              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12519              		.loc 1 558 16 is_stmt 0 view .LVU4175
 12520 4510 4885ED   		test	rbp, rbp	# c_prime
 12521 4513 0F840C02 		je	.L1152	#,
 12521      0000
 12522              	.LVL704:
 12523              	.L1028:
 558:sieve_extend.c ****         }
 12524              		.loc 1 558 16 view .LVU4176
 12525              	.LBE687:
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12526              		.loc 1 545 52 is_stmt 1 view .LVU4177
 12527              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12528              		.loc 1 545 57 is_stmt 0 view .LVU4178
 12529 4519 4983C701 		add	r15, 1	# prime,
 12530              	.LVL705:
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12531              		.loc 1 545 31 is_stmt 1 view .LVU4179
 12532 451d 4983C402 		add	r12, 2	# ivtmp.583,
 12533 4521 4983C602 		add	r14, 2	# ivtmp.585,
 12534              	# sieve_extend.c:545:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12535              		.loc 1 545 5 is_stmt 0 view .LVU4180
 12536 4525 4939FF   		cmp	r15, rdi	# prime, _137
 12537 4528 0F8202FE 		jb	.L1032	#,
 12537      FFFF
 12538              	.LVL706:
 12539              	.L1141:
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12540              		.loc 1 545 5 view .LVU4181
 12541 452e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 330


 12541      24
 12542              	.LVL707:
 12543              	.L1001:
 545:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12544              		.loc 1 545 5 view .LVU4182
 12545              	.LBE698:
 12546              	.LBE673:
 12547              	.LBE672:
 12548              	# sieve_extend.c:589: }
 589:sieve_extend.c **** 
 12549              		.loc 1 589 1 view .LVU4183
 12550 4533 488D6424 		lea	rsp, 56[rsp]	#,
 12550      38
 12551              		.cfi_remember_state
 12552              		.cfi_def_cfa_offset 56
 12553 4538 4489E8   		mov	eax, r13d	#, <retval>
 12554 453b 5B       		pop	rbx	#
 12555              		.cfi_def_cfa_offset 48
 12556 453c 5D       		pop	rbp	#
 12557              		.cfi_def_cfa_offset 40
 12558 453d 415C     		pop	r12	#
 12559              		.cfi_def_cfa_offset 32
 12560 453f 415D     		pop	r13	#
 12561              		.cfi_def_cfa_offset 24
 12562 4541 415E     		pop	r14	#
 12563              		.cfi_def_cfa_offset 16
 12564 4543 415F     		pop	r15	#
 12565              		.cfi_def_cfa_offset 8
 12566 4545 C3       		ret	
 12567              	.LVL708:
 12568              	.L1150:
 12569              		.cfi_restore_state
 12570              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12571              		.loc 1 568 5 view .LVU4184
 12572 4546 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 12572      030000
 12573 454d 0F84E502 		je	.L1008	#,
 12573      0000
 12574 4553 7633     		jbe	.L1153	#,
 12575 4555 4981F910 		cmp	r9, 10000	# pretmp_201,
 12575      270000
 12576 455c 0F852203 		jne	.L1012	#,
 12576      0000
 12577 4562 4981F8CD 		cmp	r8, 1229	# primeCount,
 12577      040000
 12578              	# sieve_extend.c:572:         case 10000:         valid_primes = 1229;     break;
 572:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12579              		.loc 1 572 42 view .LVU4185
 12580 4569 B9CD0400 		mov	ecx, 1229	# valid_primes,
 12580      00
 12581 456e 400F94C6 		sete	sil	#, tmp179
 12582 4572 21F2     		and	edx, esi	# _253, tmp179
 12583 4574 4981F8CD 		cmp	r8, 1229	# primeCount,
 12583      040000
 12584 457b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 12585 457f 410F95C4 		setne	r12b	#, _135
GAS LISTING /tmp/ccFOD2R4.s 			page 331


 572:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12586              		.loc 1 572 29 is_stmt 1 view .LVU4186
 12587              	.LVL709:
 572:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12588              		.loc 1 572 54 view .LVU4187
 12589              	# sieve_extend.c:572:         case 10000:         valid_primes = 1229;     break;
 572:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12590              		.loc 1 572 9 is_stmt 0 view .LVU4188
 12591 4583 E938FDFF 		jmp	.L1019	#
 12591      FF
 12592              	.LVL710:
 12593              	.L1153:
 12594              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12595              		.loc 1 568 5 view .LVU4189
 12596 4588 4983F90A 		cmp	r9, 10	# pretmp_201,
 12597 458c 0F841902 		je	.L1010	#,
 12597      0000
 12598 4592 4983F964 		cmp	r9, 100	# pretmp_201,
 12599 4596 0F85E802 		jne	.L1012	#,
 12599      0000
 12600 459c 4983F819 		cmp	r8, 25	# primeCount,
 12601 45a0 0F94C1   		sete	cl	#, tmp173
 12602 45a3 21CA     		and	edx, ecx	# _253, tmp173
 12603 45a5 4983F819 		cmp	r8, 25	# primeCount,
 12604 45a9 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 12605 45ad 410F95C4 		setne	r12b	#, _135
 12606              	# sieve_extend.c:570:         case 100:           valid_primes = 25;       break;
 570:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 12607              		.loc 1 570 42 view .LVU4190
 12608 45b1 B9190000 		mov	ecx, 25	# valid_primes,
 12608      00
 12609 45b6 E905FDFF 		jmp	.L1019	#
 12609      FF
 12610 45bb 0F1F4400 		.p2align 4,,7
 12610      00
 12611              		.p2align 3
 12612              	.L1151:
 12613              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12614              		.loc 1 568 5 view .LVU4191
 12615 45c0 4981F940 		cmp	r9, 1000000	# pretmp_201,
 12615      420F00
 12616 45c7 0F84B701 		je	.L1016	#,
 12616      0000
 12617 45cd 4981F980 		cmp	r9, 10000000	# pretmp_201,
 12617      969800
 12618 45d4 0F85AA02 		jne	.L1012	#,
 12618      0000
 12619 45da 4981F803 		cmp	r8, 664579	# primeCount,
 12619      240A00
 12620              	# sieve_extend.c:575:         case 10000000:      valid_primes = 664579;   break;
 575:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12621              		.loc 1 575 42 view .LVU4192
 12622 45e1 B903240A 		mov	ecx, 664579	# valid_primes,
 12622      00
 12623 45e6 410F94C7 		sete	r15b	#, tmp185
GAS LISTING /tmp/ccFOD2R4.s 			page 332


 12624 45ea 4421FA   		and	edx, r15d	# _253, tmp185
 12625 45ed 4981F803 		cmp	r8, 664579	# primeCount,
 12625      240A00
 12626 45f4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 12627 45f8 410F95C4 		setne	r12b	#, _135
 575:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12628              		.loc 1 575 29 is_stmt 1 view .LVU4193
 12629              	.LVL711:
 575:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12630              		.loc 1 575 54 view .LVU4194
 12631              	# sieve_extend.c:575:         case 10000000:      valid_primes = 664579;   break;
 575:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12632              		.loc 1 575 9 is_stmt 0 view .LVU4195
 12633 45fc E9BFFCFF 		jmp	.L1019	#
 12633      FF
 12634              	.LVL712:
 12635              		.p2align 4,,7
 12636 4601 0F1F8000 		.p2align 3
 12636      000000
 12637              	.L1024:
 12638              	.LBB703:
 12639              	.LBB701:
 12640              	.LBB699:
 12641              	.LBB696:
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12642              		.loc 1 547 32 is_stmt 1 view .LVU4196
 12643              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12644              		.loc 1 547 13 is_stmt 0 view .LVU4197
 12645 4608 4885FF   		test	rdi, rdi	# _137
 12646 460b 0F841DFF 		je	.L1141	#,
 12646      FFFF
 12647              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12648              		.loc 1 547 27 view .LVU4198
 12649 4611 BB010000 		mov	ebx, 1	# c,
 12649      00
 12650 4616 EB20     		jmp	.L1029	#
 12651              	.LVL713:
 12652              		.p2align 4,,7
 12653              		.p2align 3
 12654              	.L1038:
 12655              	# sieve_extend.c:549:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 549:sieve_extend.c ****                 }
 12656              		.loc 1 549 35 view .LVU4199
 12657 4618 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 12658              	.LVL714:
 12659              	.L1027:
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12660              		.loc 1 547 68 is_stmt 1 view .LVU4200
 12661              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12662              		.loc 1 547 69 is_stmt 0 view .LVU4201
 12663 461b 4883C301 		add	rbx, 1	# c,
 12664              	.LVL715:
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12665              		.loc 1 547 32 is_stmt 1 view .LVU4202
GAS LISTING /tmp/ccFOD2R4.s 			page 333


 12666              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12667              		.loc 1 547 13 is_stmt 0 view .LVU4203
 12668 461f 4839FB   		cmp	rbx, rdi	# c, _137
 12669 4622 0F87F1FE 		ja	.L1028	#,
 12669      FFFF
 12670              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12671              		.loc 1 547 51 view .LVU4204
 12672 4628 4989DB   		mov	r11, rbx	# tmp209, c
 12673 462b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 12674              	# sieve_extend.c:547:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 547:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12675              		.loc 1 547 47 view .LVU4205
 12676 462f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.583
 12677 4632 0F87E1FE 		ja	.L1028	#,
 12677      FFFF
 12678              	.LVL716:
 12679              	.L1029:
 548:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12680              		.loc 1 548 17 is_stmt 1 view .LVU4206
 12681 4638 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 12682 463c 31D2     		xor	edx, edx	# tmp204
 12683 463e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.583
 12684              	# sieve_extend.c:548:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 548:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12685              		.loc 1 548 39 is_stmt 0 view .LVU4207
 12686 4641 488D7501 		lea	rsi, 1[rbp]	# _55,
 12687 4645 48F7F6   		div	rsi	# _55
 12688              	# sieve_extend.c:548:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 548:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12689              		.loc 1 548 48 view .LVU4208
 12690 4648 4885D2   		test	rdx, rdx	# tmp204
 12691 464b 75CE     		jne	.L1027	#,
 548:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12692              		.loc 1 548 48 view .LVU4209
 12693 464d 4939EE   		cmp	r14, rbp	# ivtmp.585, _218
 12694 4650 74C9     		je	.L1027	#,
 549:sieve_extend.c ****                 }
 12695              		.loc 1 549 21 is_stmt 1 view .LVU4210
 12696              	# sieve_extend.c:549:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 549:sieve_extend.c ****                 }
 12697              		.loc 1 549 24 is_stmt 0 view .LVU4211
 12698 4652 4983F81D 		cmp	r8, 29	# warn_prime,
 12699              	# sieve_extend.c:549:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 549:sieve_extend.c ****                 }
 12700              		.loc 1 549 35 view .LVU4212
 12701 4656 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 12702              	.LVL717:
 12703              	# sieve_extend.c:549:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 549:sieve_extend.c ****                 }
 12704              		.loc 1 549 24 view .LVU4213
 12705 465a 77BC     		ja	.L1038	#,
 549:sieve_extend.c ****                 }
 12706              		.loc 1 549 44 is_stmt 1 view .LVU4214
 12707              	.LVL718:
 12708              	.LBB684:
GAS LISTING /tmp/ccFOD2R4.s 			page 334


 12709              	.LBI678:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12710              		.loc 3 105 1 view .LVU4215
 12711              	.LBB681:
 12712              		.loc 3 107 3 view .LVU4216
 12713              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12714              		.loc 3 107 10 is_stmt 0 view .LVU4217
 12715 465c 4989F0   		mov	r8, rsi	#, _55
 12716 465f 4989C1   		mov	r9, rax	#, tmp203
 12717 4662 BF010000 		mov	edi, 1	#,
 12717      00
 12718 4667 4C89F9   		mov	rcx, r15	#, prime
 12719 466a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.583
 12720 466e 4C89E2   		mov	rdx, r12	#, ivtmp.583
 12721 4671 488D3500 		lea	rsi, .LC12[rip]	#,
 12721      000000
 12722 4678 31C0     		xor	eax, eax	#
 12723 467a E8000000 		call	__printf_chk@PLT	#
 12723      00
 12724              	.LVL719:
 12725 467f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12726              	.LBE681:
 12727              	.LBE684:
 12728              	# sieve_extend.c:549:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 549:sieve_extend.c ****                 }
 12729              		.loc 1 549 35 view .LVU4218
 12730 4683 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 12731              	.LBB685:
 12732              	.LBB682:
 12733              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12734              		.loc 3 107 10 view .LVU4219
 12735 4686 EB93     		jmp	.L1027	#
 12736              	.LVL720:
 12737              	.L1002:
 12738              		.loc 3 107 10 view .LVU4220
 12739              	.LBE682:
 12740              	.LBE685:
 12741              	.LBE696:
 12742              	.LBE699:
 12743              	.LBE701:
 12744              	.LBE703:
 12745              	.LBB704:
 12746              	.LBB669:
 538:sieve_extend.c **** }
 12747              		.loc 1 538 5 is_stmt 1 view .LVU4221
 538:sieve_extend.c **** }
 12748              		.loc 1 538 5 is_stmt 0 view .LVU4222
 12749              	.LBE669:
 12750              	.LBE704:
 567:sieve_extend.c ****     switch(sieve->size) {
 12751              		.loc 1 567 5 is_stmt 1 view .LVU4223
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12752              		.loc 1 568 5 view .LVU4224
 12753 4688 4531ED   		xor	r13d, r13d	# <retval>
 12754 468b 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 12754      860100
 12755 4692 41BC0100 		mov	r12d, 1	# _135,
GAS LISTING /tmp/ccFOD2R4.s 			page 335


 12755      0000
 12756 4698 41B80100 		mov	r8d, 1	# primeCount,
 12756      0000
 12757 469e 0F842202 		je	.L1041	#,
 12757      0000
 12758 46a4 0F872201 		ja	.L1033	#,
 12758      0000
 12759 46aa 4983F964 		cmp	r9, 100	# pretmp_201,
 12760 46ae B9190000 		mov	ecx, 25	# valid_primes,
 12760      00
 12761 46b3 742A     		je	.L1020	#,
 12762              		.p2align 4,,2
 12763 46b5 0F863F01 		jbe	.L1154	#,
 12763      0000
 12764 46bb 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 12764      030000
 12765              	# sieve_extend.c:571:         case 1000:          valid_primes = 168;      break;
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12766              		.loc 1 571 42 is_stmt 0 view .LVU4225
 12767 46c2 B9A80000 		mov	ecx, 168	# valid_primes,
 12767      00
 12768              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12769              		.loc 1 568 5 view .LVU4226
 12770 46c7 7416     		je	.L1020	#,
 12771 46c9 4981F910 		cmp	r9, 10000	# pretmp_201,
 12771      270000
 12772 46d0 B9CD0400 		mov	ecx, 1229	# tmp223,
 12772      00
 12773 46d5 41BA0000 		mov	r10d, 0	# tmp224,
 12773      0000
 12774 46db 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 12775              	.LVL721:
 12776              	.L1020:
 583:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 12777              		.loc 1 583 5 is_stmt 1 view .LVU4227
 12778              	# sieve_extend.c:583:     if (!valid && option_verboselevel >= 1) {
 583:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 12779              		.loc 1 583 8 is_stmt 0 view .LVU4228
 12780 46df 85DB     		test	ebx, ebx	# option_verboselevel
 12781 46e1 0F8EF7FB 		jle	.L1021	#,
 12781      FFFF
 12782 46e7 4584E4   		test	r12b, r12b	# _135
 12783 46ea 0F84EEFB 		je	.L1021	#,
 12783      FFFF
 584:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 12784              		.loc 1 584 9 is_stmt 1 view .LVU4229
 12785              	.LVL722:
 12786              	.LBB705:
 12787              	.LBI705:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12788              		.loc 3 105 1 view .LVU4230
 12789              	.LBB706:
 12790              		.loc 3 107 3 view .LVU4231
 12791              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12792              		.loc 3 107 10 is_stmt 0 view .LVU4232
 12793 46f0 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccFOD2R4.s 			page 336


 12794 46f2 4C89CA   		mov	rdx, r9	#, pretmp_201
 12795 46f5 488D3500 		lea	rsi, .LC10[rip]	#,
 12795      000000
 12796 46fc BF010000 		mov	edi, 1	#,
 12796      00
 12797 4701 E8000000 		call	__printf_chk@PLT	#
 12797      00
 12798              	.LVL723:
 12799              		.loc 3 107 10 view .LVU4233
 12800              	.LBE706:
 12801              	.LBE705:
 585:sieve_extend.c ****     }
 12802              		.loc 1 585 9 is_stmt 1 view .LVU4234
 12803              	# sieve_extend.c:585:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 585:sieve_extend.c ****     }
 12804              		.loc 1 585 12 is_stmt 0 view .LVU4235
 12805 4706 83FB01   		cmp	ebx, 1	# option_verboselevel,
 12806 4709 0F8424FE 		je	.L1001	#,
 12806      FFFF
 585:sieve_extend.c ****     }
 12807              		.loc 1 585 49 is_stmt 1 discriminator 1 view .LVU4236
 12808 470f 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 12809 4713 BA640000 		mov	edx, 100	#,
 12809      00
 12810 4718 4889EF   		mov	rdi, rbp	#, sieve
 12811 471b E890E1FF 		call	show_primes.isra.0	#
 12811      FF
 12812              	.LVL724:
 587:sieve_extend.c ****     return (valid);
 12813              		.loc 1 587 5 discriminator 1 view .LVU4237
 12814 4720 E9CBFBFF 		jmp	.L1023	#
 12814      FF
 12815              	.LVL725:
 12816              	.L1152:
 12817              	.LBB707:
 12818              	.LBB702:
 12819              	.LBB700:
 12820              	.LBB697:
 12821              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12822              		.loc 1 558 44 is_stmt 0 view .LVU4238
 12823 4725 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 12823      18
 12824              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12825              		.loc 1 558 28 view .LVU4239
 12826 472a 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 12827              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12828              		.loc 1 558 44 view .LVU4240
 12829 472e 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 12830              	.LVL726:
 12831              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12832              		.loc 1 558 28 view .LVU4241
 12833 4732 761D     		jbe	.L1036	#,
 12834              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
GAS LISTING /tmp/ccFOD2R4.s 			page 337


 558:sieve_extend.c ****         }
 12835              		.loc 1 558 44 view .LVU4242
 12836 4734 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 12836      18
 12837 4739 E9DBFDFF 		jmp	.L1028	#
 12837      FF
 12838              	.LVL727:
 12839              	.L1139:
 558:sieve_extend.c ****         }
 12840              		.loc 1 558 44 view .LVU4243
 12841 473e 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 12841      18
 12842              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12843              		.loc 1 558 28 view .LVU4244
 12844 4743 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 12845              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12846              		.loc 1 558 44 view .LVU4245
 12847 4747 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 12848              	.LVL728:
 12849              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12850              		.loc 1 558 28 view .LVU4246
 12851 474b 0F87DDFD 		ja	.L1141	#,
 12851      FFFF
 12852              	.LVL729:
 12853              	.L1036:
 12854              	.LBB690:
 12855              	.LBB691:
 12856              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12857              		.loc 3 107 10 view .LVU4247
 12858 4751 BF010000 		mov	edi, 1	#,
 12858      00
 12859              	.LBE691:
 12860              	.LBE690:
 12861              	# sieve_extend.c:558:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 558:sieve_extend.c ****         }
 12862              		.loc 1 558 53 view .LVU4248
 12863 4756 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 12863      01
 12864              	.LBB694:
 12865              	.LBB692:
 12866              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12867              		.loc 3 107 10 view .LVU4249
 12868 475b 4C89F9   		mov	rcx, r15	#, prime
 12869 475e 488D3500 		lea	rsi, .LC13[rip]	#,
 12869      000000
 12870 4765 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 12870      28
 12871              	.LBE692:
 12872              	.LBE694:
 558:sieve_extend.c ****         }
 12873              		.loc 1 558 53 is_stmt 1 view .LVU4250
 12874              	.LVL730:
 12875              	.LBB695:
 12876              	.LBI690:
GAS LISTING /tmp/ccFOD2R4.s 			page 338


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12877              		.loc 3 105 1 view .LVU4251
 12878              	.LBB693:
 12879              		.loc 3 107 3 view .LVU4252
 12880              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12881              		.loc 3 107 10 is_stmt 0 view .LVU4253
 12882 476a 31C0     		xor	eax, eax	#
 12883 476c E8000000 		call	__printf_chk@PLT	#
 12883      00
 12884              	.LVL731:
 12885              		.loc 3 107 10 view .LVU4254
 12886 4771 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12887 4775 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 12887      28
 12888 477a 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 12888      18
 12889 477f E995FDFF 		jmp	.L1028	#
 12889      FF
 12890              	.LVL732:
 12891              	.L1016:
 12892              		.loc 3 107 10 view .LVU4255
 12893 4784 4981F8A2 		cmp	r8, 78498	# primeCount,
 12893      320100
 12894              	.LBE693:
 12895              	.LBE695:
 12896              	.LBE697:
 12897              	.LBE700:
 12898              	.LBE702:
 12899              	.LBE707:
 12900              	# sieve_extend.c:574:         case 1000000:       valid_primes = 78498;    break;
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12901              		.loc 1 574 42 view .LVU4256
 12902 478b B9A23201 		mov	ecx, 78498	# valid_primes,
 12902      00
 12903 4790 410F94C6 		sete	r14b	#, tmp183
 12904 4794 4421F2   		and	edx, r14d	# _253, tmp183
 12905 4797 4981F8A2 		cmp	r8, 78498	# primeCount,
 12905      320100
 12906 479e 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 12907 47a2 410F95C4 		setne	r12b	#, _135
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12908              		.loc 1 574 29 is_stmt 1 view .LVU4257
 12909              	.LVL733:
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12910              		.loc 1 574 54 view .LVU4258
 12911              	# sieve_extend.c:574:         case 1000000:       valid_primes = 78498;    break;
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12912              		.loc 1 574 9 is_stmt 0 view .LVU4259
 12913 47a6 E915FBFF 		jmp	.L1019	#
 12913      FF
 12914              	.LVL734:
 12915              	.L1010:
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12916              		.loc 1 574 9 view .LVU4260
 12917 47ab 4983F804 		cmp	r8, 4	# primeCount,
 12918              	# sieve_extend.c:569:         case 10:            valid_primes = 4;        break;
 569:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
GAS LISTING /tmp/ccFOD2R4.s 			page 339


 12919              		.loc 1 569 42 view .LVU4261
 12920 47af B9040000 		mov	ecx, 4	# valid_primes,
 12920      00
 12921 47b4 410F94C2 		sete	r10b	#, tmp175
 12922 47b8 4421D2   		and	edx, r10d	# _253, tmp175
 12923 47bb 4983F804 		cmp	r8, 4	# primeCount,
 12924 47bf 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 12925 47c3 410F95C4 		setne	r12b	#, _135
 12926 47c7 E9F4FAFF 		jmp	.L1019	#
 12926      FF
 12927              	.LVL735:
 12928              	.L1033:
 12929              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12930              		.loc 1 568 5 view .LVU4262
 12931 47cc 4981F900 		cmp	r9, 100000000	# pretmp_201,
 12931      E1F505
 12932              	# sieve_extend.c:576:         case 100000000:     valid_primes = 5761455;  break;
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 12933              		.loc 1 576 42 view .LVU4263
 12934 47d3 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 12934      00
 12935              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12936              		.loc 1 568 5 view .LVU4264
 12937 47d8 0F8401FF 		je	.L1020	#,
 12937      FFFF
 12938 47de 762C     		jbe	.L1155	#,
 12939 47e0 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 12939      CA9A3B
 12940 47e7 B92EDF07 		mov	ecx, 50847534	# tmp227,
 12940      03
 12941 47ec B8000000 		mov	eax, 0	# tmp228,
 12941      00
 12942 47f1 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 12943 47f5 E9E5FEFF 		jmp	.L1020	#
 12943      FF
 12944              	.L1154:
 12945 47fa 31C9     		xor	ecx, ecx	# valid_primes
 12946 47fc 4983F90A 		cmp	r9, 10	# pretmp_201,
 12947 4800 0F94C1   		sete	cl	#, valid_primes
 12948 4803 48C1E102 		sal	rcx, 2	# valid_primes,
 12949 4807 E9D3FEFF 		jmp	.L1020	#
 12949      FF
 12950              	.L1155:
 12951 480c 4981F940 		cmp	r9, 1000000	# pretmp_201,
 12951      420F00
 12952              	# sieve_extend.c:574:         case 1000000:       valid_primes = 78498;    break;
 574:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 12953              		.loc 1 574 42 view .LVU4265
 12954 4813 B9A23201 		mov	ecx, 78498	# valid_primes,
 12954      00
 12955              	# sieve_extend.c:568:     switch(sieve->size) {
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12956              		.loc 1 568 5 view .LVU4266
 12957 4818 0F84C1FE 		je	.L1020	#,
 12957      FFFF
GAS LISTING /tmp/ccFOD2R4.s 			page 340


 12958 481e 4981F980 		cmp	r9, 10000000	# pretmp_201,
 12958      969800
 12959 4825 B903240A 		mov	ecx, 664579	# tmp225,
 12959      00
 12960 482a BE000000 		mov	esi, 0	# tmp226,
 12960      00
 12961 482f 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 12962 4833 E9A7FEFF 		jmp	.L1020	#
 12962      FF
 12963              	.LVL736:
 12964              	.L1008:
 568:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12965              		.loc 1 568 5 view .LVU4267
 12966 4838 4981F8A8 		cmp	r8, 168	# primeCount,
 12966      000000
 12967              	# sieve_extend.c:571:         case 1000:          valid_primes = 168;      break;
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12968              		.loc 1 571 42 view .LVU4268
 12969 483f B9A80000 		mov	ecx, 168	# valid_primes,
 12969      00
 12970 4844 410F94C4 		sete	r12b	#, tmp177
 12971 4848 4421E2   		and	edx, r12d	# _253, tmp177
 12972 484b 4981F8A8 		cmp	r8, 168	# primeCount,
 12972      000000
 12973 4852 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 12974 4856 410F95C4 		setne	r12b	#, _135
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12975              		.loc 1 571 29 is_stmt 1 view .LVU4269
 12976              	.LVL737:
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12977              		.loc 1 571 54 view .LVU4270
 12978              	# sieve_extend.c:571:         case 1000:          valid_primes = 168;      break;
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12979              		.loc 1 571 9 is_stmt 0 view .LVU4271
 12980 485a E961FAFF 		jmp	.L1019	#
 12980      FF
 12981              	.LVL738:
 12982              	.L1014:
 571:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 12983              		.loc 1 571 9 view .LVU4272
 12984 485f 4981F8AF 		cmp	r8, 5761455	# primeCount,
 12984      E95700
 12985              	# sieve_extend.c:576:         case 100000000:     valid_primes = 5761455;  break;
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 12986              		.loc 1 576 42 view .LVU4273
 12987 4866 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 12987      00
 12988 486b 0F94C0   		sete	al	#, tmp187
 12989 486e 21C2     		and	edx, eax	# _253, tmp187
 12990 4870 4981F8AF 		cmp	r8, 5761455	# primeCount,
 12990      E95700
 12991 4877 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 12992 487b 410F95C4 		setne	r12b	#, _135
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 12993              		.loc 1 576 29 is_stmt 1 view .LVU4274
 12994              	.LVL739:
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
GAS LISTING /tmp/ccFOD2R4.s 			page 341


 12995              		.loc 1 576 54 view .LVU4275
 12996              	# sieve_extend.c:576:         case 100000000:     valid_primes = 5761455;  break;
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 12997              		.loc 1 576 9 is_stmt 0 view .LVU4276
 12998 487f E93CFAFF 		jmp	.L1019	#
 12998      FF
 12999              	.LVL740:
 13000              	.L1012:
 576:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13001              		.loc 1 576 9 view .LVU4277
 13002 4884 4D85C0   		test	r8, r8	# primeCount
 13003 4887 410F94C3 		sete	r11b	#, tmp191
 13004 488b 4421DA   		and	edx, r11d	# _253, tmp191
 13005 488e 4D85C0   		test	r8, r8	# primeCount
 13006 4891 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 13007 4895 410F95C4 		setne	r12b	#, _135
 578:sieve_extend.c ****     }
 13008              		.loc 1 578 29 is_stmt 1 view .LVU4278
 13009              	# sieve_extend.c:578:         default:            valid_primes= 0;
 578:sieve_extend.c ****     }
 13010              		.loc 1 578 41 is_stmt 0 view .LVU4279
 13011 4899 31C9     		xor	ecx, ecx	# valid_primes
 13012 489b E920FAFF 		jmp	.L1019	#
 13012      FF
 13013              	.L1006:
 578:sieve_extend.c ****     }
 13014              		.loc 1 578 41 view .LVU4280
 13015 48a0 4981F878 		cmp	r8, 9592	# primeCount,
 13015      250000
 13016              	# sieve_extend.c:573:         case 100000:        valid_primes = 9592;     break;
 573:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13017              		.loc 1 573 42 view .LVU4281
 13018 48a7 B9782500 		mov	ecx, 9592	# valid_primes,
 13018      00
 13019 48ac 400F94C7 		sete	dil	#, tmp181
 13020 48b0 21FA     		and	edx, edi	# _253, tmp181
 13021 48b2 4981F878 		cmp	r8, 9592	# primeCount,
 13021      250000
 13022 48b9 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 13023 48bd 410F95C4 		setne	r12b	#, _135
 573:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13024              		.loc 1 573 29 is_stmt 1 view .LVU4282
 13025              	.LVL741:
 573:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13026              		.loc 1 573 54 view .LVU4283
 13027              	# sieve_extend.c:573:         case 100000:        valid_primes = 9592;     break;
 573:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13028              		.loc 1 573 9 is_stmt 0 view .LVU4284
 13029 48c1 E9FAF9FF 		jmp	.L1019	#
 13029      FF
 13030              	.LVL742:
 13031              	.L1041:
 13032              	# sieve_extend.c:573:         case 100000:        valid_primes = 9592;     break;
 573:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13033              		.loc 1 573 42 view .LVU4285
 13034 48c6 B9782500 		mov	ecx, 9592	# valid_primes,
 13034      00
GAS LISTING /tmp/ccFOD2R4.s 			page 342


 13035 48cb E90FFEFF 		jmp	.L1020	#
 13035      FF
 13036              		.cfi_endproc
 13037              	.LFE74:
 13039              		.section	.rodata.str1.8
 13040 0145 000000   		.align 8
 13041              	.LC14:
 13042 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 13042      653A2025 
 13042      73205B6F 
 13042      7074696F 
 13042      6E735D20 
 13043              		.section	.rodata.str1.1
 13044              	.LC15:
 13045 0031 4F707469 		.string	"Options:\n"
 13045      6F6E733A 
 13045      0A00
 13046              		.section	.rodata.str1.8
 13047 0167 00       		.align 8
 13048              	.LC16:
 13049 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 13049      76657262 
 13049      6F736520 
 13049      3C6C6576 
 13049      656C3E20 
 13050 01a3 00000000 		.align 8
 13050      00
 13051              	.LC17:
 13052 01a8 20202020 		.string	"                     1 - show phase progress\n"
 13052      20202020 
 13052      20202020 
 13052      20202020 
 13052      20202020 
 13053 01d6 0000     		.align 8
 13054              	.LC18:
 13055 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 13055      20202020 
 13055      20202020 
 13055      20202020 
 13055      20202020 
 13056 0219 00000000 		.align 8
 13056      000000
 13057              	.LC19:
 13058 0220 20202020 		.string	"                     3 - show actual work\n"
 13058      20202020 
 13058      20202020 
 13058      20202020 
 13058      20202020 
 13059 024b 00000000 		.align 8
 13059      00
 13060              	.LC20:
 13061 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 13061      63686563 
 13061      6B202020 
 13061      20202020 
 13061      20202020 
 13062 028d 000000   		.align 8
GAS LISTING /tmp/ccFOD2R4.s 			page 343


 13063              	.LC21:
 13064 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 13064      73686F77 
 13064      203C6D61 
 13064      78696D75 
 13064      6D3E2020 
 13065 02ce 0000     		.align 8
 13066              	.LC22:
 13067 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 13067      74756E65 
 13067      20203C6C 
 13067      6576656C 
 13067      3E202020 
 13068 031d 000000   		.align 8
 13069              	.LC23:
 13070 0320 20202020 		.string	"                     1 - fast tuning\n"
 13070      20202020 
 13070      20202020 
 13070      20202020 
 13070      20202020 
 13071 0346 0000     		.align 8
 13072              	.LC24:
 13073 0348 20202020 		.string	"                     2 - refined tuning\n"
 13073      20202020 
 13073      20202020 
 13073      20202020 
 13073      20202020 
 13074 0371 00000000 		.align 8
 13074      000000
 13075              	.LC25:
 13076 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 13076      20202020 
 13076      20202020 
 13076      20202020 
 13076      20202020 
 13077              		.text
 13078              		.p2align 4
 13079              		.globl	usage
 13081              	usage:
 13082              	.LVL743:
 13083              	.LFB75:
 591:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13084              		.loc 1 591 24 is_stmt 1 view -0
 13085              		.cfi_startproc
 591:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13086              		.loc 1 591 24 is_stmt 0 view .LVU4287
 13087 48d0 F30F1EFA 		endbr64	
 13088 48d4 50       		push	rax	#
 13089              		.cfi_def_cfa_offset 16
 13090 48d5 58       		pop	rax	#
 13091              		.cfi_def_cfa_offset 8
 592:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 13092              		.loc 1 592 5 is_stmt 1 view .LVU4288
 13093              	.LVL744:
 13094              	.LBB708:
 13095              	.LBI708:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccFOD2R4.s 			page 344


 13096              		.loc 3 98 1 view .LVU4289
 13097              	.LBB709:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13098              		.loc 3 100 3 view .LVU4290
 13099              	.LBE709:
 13100              	.LBE708:
 13101              	# sieve_extend.c:591: void usage(char *name) {
 591:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13102              		.loc 1 591 24 is_stmt 0 view .LVU4291
 13103 48d6 488D6424 		lea	rsp, -8[rsp]	#,
 13103      F8
 13104              		.cfi_def_cfa_offset 16
 13105              	# sieve_extend.c:591: void usage(char *name) {
 591:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13106              		.loc 1 591 24 view .LVU4292
 13107 48db 4889F9   		mov	rcx, rdi	# name, tmp107
 13108              	.LBB711:
 13109              	.LBB710:
 13110              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13111              		.loc 3 100 10 view .LVU4293
 13112 48de 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 13112      000000
 13113              	.LVL745:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13114              		.loc 3 100 10 view .LVU4294
 13115 48e5 488D1500 		lea	rdx, .LC14[rip]	#,
 13115      000000
 13116 48ec BE010000 		mov	esi, 1	#,
 13116      00
 13117 48f1 31C0     		xor	eax, eax	#
 13118 48f3 E8000000 		call	__fprintf_chk@PLT	#
 13118      00
 13119              	.LVL746:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13120              		.loc 3 100 10 view .LVU4295
 13121              	.LBE710:
 13122              	.LBE711:
 593:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 13123              		.loc 1 593 5 is_stmt 1 view .LVU4296
 13124              	.LBB712:
 13125              	.LBI712:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13126              		.loc 3 98 1 view .LVU4297
 13127              	.LBB713:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13128              		.loc 3 100 3 view .LVU4298
 13129              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13130              		.loc 3 100 10 is_stmt 0 view .LVU4299
 13131 48f8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13131      000000
 13132 48ff BA090000 		mov	edx, 9	#,
 13132      00
 13133 4904 BE010000 		mov	esi, 1	#,
 13133      00
 13134 4909 488D3D00 		lea	rdi, .LC15[rip]	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 345


 13134      000000
 13135 4910 E8000000 		call	fwrite@PLT	#
 13135      00
 13136              	.LVL747:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13137              		.loc 3 100 10 view .LVU4300
 13138              	.LBE713:
 13139              	.LBE712:
 594:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 13140              		.loc 1 594 5 is_stmt 1 view .LVU4301
 13141              	.LBB714:
 13142              	.LBI714:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13143              		.loc 3 98 1 view .LVU4302
 13144              	.LBB715:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13145              		.loc 3 100 3 view .LVU4303
 13146              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13147              		.loc 3 100 10 is_stmt 0 view .LVU4304
 13148 4915 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13148      000000
 13149 491c BA3A0000 		mov	edx, 58	#,
 13149      00
 13150 4921 BE010000 		mov	esi, 1	#,
 13150      00
 13151 4926 488D3D00 		lea	rdi, .LC16[rip]	#,
 13151      000000
 13152 492d E8000000 		call	fwrite@PLT	#
 13152      00
 13153              	.LVL748:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13154              		.loc 3 100 10 view .LVU4305
 13155              	.LBE715:
 13156              	.LBE714:
 595:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 13157              		.loc 1 595 5 is_stmt 1 view .LVU4306
 13158              	.LBB716:
 13159              	.LBI716:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13160              		.loc 3 98 1 view .LVU4307
 13161              	.LBB717:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13162              		.loc 3 100 3 view .LVU4308
 13163              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13164              		.loc 3 100 10 is_stmt 0 view .LVU4309
 13165 4932 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13165      000000
 13166 4939 BA2D0000 		mov	edx, 45	#,
 13166      00
 13167 493e BE010000 		mov	esi, 1	#,
 13167      00
 13168 4943 488D3D00 		lea	rdi, .LC17[rip]	#,
 13168      000000
 13169 494a E8000000 		call	fwrite@PLT	#
 13169      00
GAS LISTING /tmp/ccFOD2R4.s 			page 346


 13170              	.LVL749:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13171              		.loc 3 100 10 view .LVU4310
 13172              	.LBE717:
 13173              	.LBE716:
 596:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 13174              		.loc 1 596 5 is_stmt 1 view .LVU4311
 13175              	.LBB718:
 13176              	.LBI718:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13177              		.loc 3 98 1 view .LVU4312
 13178              	.LBB719:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13179              		.loc 3 100 3 view .LVU4313
 13180              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13181              		.loc 3 100 10 is_stmt 0 view .LVU4314
 13182 494f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13182      000000
 13183 4956 BA400000 		mov	edx, 64	#,
 13183      00
 13184 495b BE010000 		mov	esi, 1	#,
 13184      00
 13185 4960 488D3D00 		lea	rdi, .LC18[rip]	#,
 13185      000000
 13186 4967 E8000000 		call	fwrite@PLT	#
 13186      00
 13187              	.LVL750:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13188              		.loc 3 100 10 view .LVU4315
 13189              	.LBE719:
 13190              	.LBE718:
 597:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 13191              		.loc 1 597 5 is_stmt 1 view .LVU4316
 13192              	.LBB720:
 13193              	.LBI720:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13194              		.loc 3 98 1 view .LVU4317
 13195              	.LBB721:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13196              		.loc 3 100 3 view .LVU4318
 13197              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13198              		.loc 3 100 10 is_stmt 0 view .LVU4319
 13199 496c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13199      000000
 13200 4973 BA2A0000 		mov	edx, 42	#,
 13200      00
 13201 4978 BE010000 		mov	esi, 1	#,
 13201      00
 13202 497d 488D3D00 		lea	rdi, .LC19[rip]	#,
 13202      000000
 13203 4984 E8000000 		call	fwrite@PLT	#
 13203      00
 13204              	.LVL751:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13205              		.loc 3 100 10 view .LVU4320
GAS LISTING /tmp/ccFOD2R4.s 			page 347


 13206              	.LBE721:
 13207              	.LBE720:
 598:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 13208              		.loc 1 598 5 is_stmt 1 view .LVU4321
 13209              	.LBB722:
 13210              	.LBI722:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13211              		.loc 3 98 1 view .LVU4322
 13212              	.LBB723:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13213              		.loc 3 100 3 view .LVU4323
 13214              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13215              		.loc 3 100 10 is_stmt 0 view .LVU4324
 13216 4989 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13216      000000
 13217 4990 BA3C0000 		mov	edx, 60	#,
 13217      00
 13218 4995 BE010000 		mov	esi, 1	#,
 13218      00
 13219 499a 488D3D00 		lea	rdi, .LC20[rip]	#,
 13219      000000
 13220 49a1 E8000000 		call	fwrite@PLT	#
 13220      00
 13221              	.LVL752:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13222              		.loc 3 100 10 view .LVU4325
 13223              	.LBE723:
 13224              	.LBE722:
 599:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 13225              		.loc 1 599 5 is_stmt 1 view .LVU4326
 13226              	.LBB724:
 13227              	.LBI724:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13228              		.loc 3 98 1 view .LVU4327
 13229              	.LBB725:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13230              		.loc 3 100 3 view .LVU4328
 13231              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13232              		.loc 3 100 10 is_stmt 0 view .LVU4329
 13233 49a6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13233      000000
 13234 49ad BA3D0000 		mov	edx, 61	#,
 13234      00
 13235 49b2 BE010000 		mov	esi, 1	#,
 13235      00
 13236 49b7 488D3D00 		lea	rdi, .LC21[rip]	#,
 13236      000000
 13237 49be E8000000 		call	fwrite@PLT	#
 13237      00
 13238              	.LVL753:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13239              		.loc 3 100 10 view .LVU4330
 13240              	.LBE725:
 13241              	.LBE724:
 600:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
GAS LISTING /tmp/ccFOD2R4.s 			page 348


 13242              		.loc 1 600 5 is_stmt 1 view .LVU4331
 13243              	.LBB726:
 13244              	.LBI726:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13245              		.loc 3 98 1 view .LVU4332
 13246              	.LBB727:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13247              		.loc 3 100 3 view .LVU4333
 13248              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13249              		.loc 3 100 10 is_stmt 0 view .LVU4334
 13250 49c3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13250      000000
 13251 49ca BA4C0000 		mov	edx, 76	#,
 13251      00
 13252 49cf BE010000 		mov	esi, 1	#,
 13252      00
 13253 49d4 488D3D00 		lea	rdi, .LC22[rip]	#,
 13253      000000
 13254 49db E8000000 		call	fwrite@PLT	#
 13254      00
 13255              	.LVL754:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13256              		.loc 3 100 10 view .LVU4335
 13257              	.LBE727:
 13258              	.LBE726:
 601:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 13259              		.loc 1 601 5 is_stmt 1 view .LVU4336
 13260              	.LBB728:
 13261              	.LBI728:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13262              		.loc 3 98 1 view .LVU4337
 13263              	.LBB729:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13264              		.loc 3 100 3 view .LVU4338
 13265              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13266              		.loc 3 100 10 is_stmt 0 view .LVU4339
 13267 49e0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13267      000000
 13268 49e7 BA250000 		mov	edx, 37	#,
 13268      00
 13269 49ec BE010000 		mov	esi, 1	#,
 13269      00
 13270 49f1 488D3D00 		lea	rdi, .LC23[rip]	#,
 13270      000000
 13271 49f8 E8000000 		call	fwrite@PLT	#
 13271      00
 13272              	.LVL755:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13273              		.loc 3 100 10 view .LVU4340
 13274              	.LBE729:
 13275              	.LBE728:
 602:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 13276              		.loc 1 602 5 is_stmt 1 view .LVU4341
 13277              	.LBB730:
 13278              	.LBI730:
GAS LISTING /tmp/ccFOD2R4.s 			page 349


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13279              		.loc 3 98 1 view .LVU4342
 13280              	.LBB731:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13281              		.loc 3 100 3 view .LVU4343
 13282              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13283              		.loc 3 100 10 is_stmt 0 view .LVU4344
 13284 49fd 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13284      000000
 13285 4a04 BA280000 		mov	edx, 40	#,
 13285      00
 13286 4a09 BE010000 		mov	esi, 1	#,
 13286      00
 13287 4a0e 488D3D00 		lea	rdi, .LC24[rip]	#,
 13287      000000
 13288 4a15 E8000000 		call	fwrite@PLT	#
 13288      00
 13289              	.LVL756:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13290              		.loc 3 100 10 view .LVU4345
 13291              	.LBE731:
 13292              	.LBE730:
 603:sieve_extend.c ****     exit(1);
 13293              		.loc 1 603 5 is_stmt 1 view .LVU4346
 13294              	.LBB732:
 13295              	.LBI732:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13296              		.loc 3 98 1 view .LVU4347
 13297              	.LBB733:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13298              		.loc 3 100 3 view .LVU4348
 13299              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13300              		.loc 3 100 10 is_stmt 0 view .LVU4349
 13301 4a1a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13301      000000
 13302 4a21 488D3D00 		lea	rdi, .LC25[rip]	#,
 13302      000000
 13303 4a28 BA350000 		mov	edx, 53	#,
 13303      00
 13304 4a2d BE010000 		mov	esi, 1	#,
 13304      00
 13305 4a32 E8000000 		call	fwrite@PLT	#
 13305      00
 13306              	.LVL757:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13307              		.loc 3 100 10 view .LVU4350
 13308              	.LBE733:
 13309              	.LBE732:
 604:sieve_extend.c **** }
 13310              		.loc 1 604 5 is_stmt 1 view .LVU4351
 13311 4a37 BF010000 		mov	edi, 1	#,
 13311      00
 13312 4a3c E8000000 		call	exit@PLT	#
 13312      00
 13313              	.LVL758:
GAS LISTING /tmp/ccFOD2R4.s 			page 350


 13314              		.cfi_endproc
 13315              	.LFE75:
 13317              		.section	.rodata.str1.1
 13318              	.LC27:
 13319 003b 2D2D6865 		.string	"--help"
 13319      6C7000
 13320              	.LC28:
 13321 0042 2D2D7665 		.string	"--verbose"
 13321      72626F73 
 13321      6500
 13322              	.LC29:
 13323 004c 4E6F2076 		.string	"No verbose level specified\n"
 13323      6572626F 
 13323      7365206C 
 13323      6576656C 
 13323      20737065 
 13324              	.LC30:
 13325 0068 256400   		.string	"%d"
 13326              		.section	.rodata.str1.8
 13327 03ae 0000     		.align 8
 13328              	.LC31:
 13329 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 13329      723A2049 
 13329      6E76616C 
 13329      6964206D 
 13329      65617375 
 13330              		.section	.rodata.str1.1
 13331              	.LC32:
 13332 006b 56657262 		.string	"Verbose level set to %d\n"
 13332      6F736520 
 13332      6C657665 
 13332      6C207365 
 13332      7420746F 
 13333              	.LC33:
 13334 0084 2D2D6368 		.string	"--check"
 13334      65636B00 
 13335              	.LC34:
 13336 008c 2D2D7475 		.string	"--tune"
 13336      6E6500
 13337              	.LC35:
 13338 0093 4E6F2074 		.string	"No tune level specified\n"
 13338      756E6520 
 13338      6C657665 
 13338      6C207370 
 13338      65636966 
 13339              		.section	.rodata.str1.8
 13340 03d5 000000   		.align 8
 13341              	.LC36:
 13342 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 13342      723A2049 
 13342      6E76616C 
 13342      69642074 
 13342      756E6520 
 13343              		.section	.rodata.str1.1
 13344              	.LC37:
 13345 00ac 54756E65 		.string	"Tune level set to %d\n"
 13345      206C6576 
GAS LISTING /tmp/ccFOD2R4.s 			page 351


 13345      656C2073 
 13345      65742074 
 13345      6F202564 
 13346              	.LC38:
 13347 00c2 2D2D7368 		.string	"--show"
 13347      6F7700
 13348              	.LC39:
 13349 00c9 4E6F2073 		.string	"No show maximum specified\n"
 13349      686F7720 
 13349      6D617869 
 13349      6D756D20 
 13349      73706563 
 13350              	.LC40:
 13351 00e4 256A7500 		.string	"%ju"
 13352              		.section	.rodata.str1.8
 13353 03f7 00       		.align 8
 13354              	.LC41:
 13355 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 13355      723A2049 
 13355      6E76616C 
 13355      69642073 
 13355      686F7720 
 13356              		.section	.rodata.str1.1
 13357              	.LC42:
 13358 00e8 53686F77 		.string	"Show maximum set to %ju\n"
 13358      206D6178 
 13358      696D756D 
 13358      20736574 
 13358      20746F20 
 13359              	.LC43:
 13360 0101 496E7661 		.string	"Invalid size %s\n"
 13360      6C696420 
 13360      73697A65 
 13360      2025730A 
 13360      00
 13361              	.LC44:
 13362 0112 56616C69 		.string	"Validating... "
 13362      64617469 
 13362      6E672E2E 
 13362      2E2000
 13363              	.LC45:
 13364 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 13364      6865636B 
 13364      696E6720 
 13364      73697A65 
 13364      20256A75 
 13365              	.LC46:
 13366 013a 2E626C6F 		.string	".blocksize %ju-"
 13366      636B7369 
 13366      7A652025 
 13366      6A752D00 
 13367              	.LC47:
 13368 014a 76616C69 		.string	"valid;"
 13368      643B00
 13369              	.LC48:
 13370 0151 2E2E2E56 		.string	"...Valid algorithm"
 13370      616C6964 
GAS LISTING /tmp/ccFOD2R4.s 			page 352


 13370      20616C67 
 13370      6F726974 
 13370      686D00
 13371              	.LC49:
 13372 0164 54756E69 		.string	"Tuning..."
 13372      6E672E2E 
 13372      2E00
 13373              	.LC50:
 13374 016e 2E283E29 		.string	".(>)"
 13374      00
 13375              		.section	.rodata.str1.8
 13376 0419 00000000 		.align 8
 13376      000000
 13377              	.LC51:
 13378 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 13378      6B73697A 
 13378      655F6269 
 13378      74732025 
 13378      31306A75 
 13379              		.section	.rodata.str1.1
 13380              	.LC52:
 13381 0173 2E2E2E2E 		.string	"...."
 13381      00
 13382              		.section	.rodata.str1.8
 13383 04a7 00       		.align 8
 13384              	.LC53:
 13385 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 13385      72657375 
 13385      6C74732E 
 13385      20496E69 
 13385      74616C20 
 13386              		.section	.rodata.str1.1
 13387              	.LC54:
 13388 0178 42657374 		.string	"Best options"
 13388      206F7074 
 13388      696F6E73 
 13388      00
 13389              	.LC55:
 13390 0185 28256A75 		.string	"(%ju) "
 13390      292000
 13391              	.LC56:
 13392 018c 2E2E2E00 		.string	"..."
 13393              	.LC57:
 13394 0190 2E426573 		.string	".Best result:"
 13394      74207265 
 13394      73756C74 
 13394      3A00
 13395              		.section	.rodata.str1.8
 13396 050f 00       		.align 8
 13397              	.LC58:
 13398 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 13398      686D6172 
 13398      6B696E67 
 13398      2E2E2E20 
 13398      77697468 
 13399 0547 00       		.align 8
 13400              	.LC60:
GAS LISTING /tmp/ccFOD2R4.s 			page 353


 13401 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 13401      65727661 
 13401      6E64616D 
 13401      5F657874 
 13401      656E643B 
 13402 058a 00000000 		.align 8
 13402      0000
 13403              	.LC61:
 13404 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 13404      6573202D 
 13404      20706572 
 13404      20352073 
 13404      65636F6E 
 13405              		.section	.rodata.str1.1
 13406              	.LC62:
 13407 019e 53686F77 		.string	"Show result set:"
 13407      20726573 
 13407      756C7420 
 13407      7365743A 
 13407      00
 13408              		.section	.text.startup,"ax",@progbits
 13409              		.p2align 4
 13410              		.globl	main
 13412              	main:
 13413              	.LVL759:
 13414              	.LFB80:
 650:sieve_extend.c **** 
 651:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
 652:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 653:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 654:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
 655:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
 656:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
 657:sieve_extend.c **** }
 658:sieve_extend.c **** 
 659:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
 660:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 661:sieve_extend.c **** 
 662:sieve_extend.c ****     double best_avg = 0;
 663:sieve_extend.c ****     best_blocksize_bits = 0;
 664:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 665:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 666:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 667:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 668:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 669:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 670:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 671:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 672:sieve_extend.c ****     double sample_duration = default_sample_duration;
 673:sieve_extend.c **** 
 674:sieve_extend.c ****     // determines the size of the resultset
 675:sieve_extend.c ****     switch (tune_level) {
 676:sieve_extend.c ****         case 1:
 677:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
 678:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
 679:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 680:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
GAS LISTING /tmp/ccFOD2R4.s 			page 354


 681:sieve_extend.c ****             sample_max = 8;
 682:sieve_extend.c ****             sample_duration = 0.1;
 683:sieve_extend.c ****             break;
 684:sieve_extend.c ****         case 2:
 685:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
 686:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 687:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 688:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
 689:sieve_extend.c ****             sample_max = 8;
 690:sieve_extend.c ****             sample_duration = 0.2;
 691:sieve_extend.c ****             break;
 692:sieve_extend.c ****         case 3:
 693:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
 694:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 695:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
 696:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
 697:sieve_extend.c ****             sample_max = 8;
 698:sieve_extend.c ****             sample_duration = 0.2;
 699:sieve_extend.c ****             break;
 700:sieve_extend.c ****     }
 701:sieve_extend.c ****     
 702:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
 703:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 704:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 705:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 706:sieve_extend.c ****     counter_t tuning_results=0;
 707:sieve_extend.c ****     counter_t tuning_result_index=0;
 708:sieve_extend.c ****     
 709:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= 0; smallstep_faster += smallstep_faste
 710:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 711:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 712:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 713:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 714:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 715:sieve_extend.c **** 
 716:sieve_extend.c ****                         // set variables
 717:sieve_extend.c ****                         tuning_results++;
 718:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 719:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 720:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 721:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 722:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 723:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 724:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 725:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 726:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 727:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 728:sieve_extend.c **** 
 729:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
 730:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 731:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 732:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 733:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 734:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 735:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 736:sieve_extend.c ****                         }
 737:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
GAS LISTING /tmp/ccFOD2R4.s 			page 355


 738:sieve_extend.c ****                         tuning_result_index++;
 739:sieve_extend.c ****                     }
 740:sieve_extend.c ****                 }
 741:sieve_extend.c ****             }
 742:sieve_extend.c ****         }
 743:sieve_extend.c ****     }
 744:sieve_extend.c ****     if (option_verboselevel >= 2) {
 745:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 746:sieve_extend.c ****         printf("Best options\n");
 747:sieve_extend.c ****     }
 748:sieve_extend.c ****     counter_t step=0;
 749:sieve_extend.c ****     while (tuning_results>4) {
 750:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 751:sieve_extend.c ****         step++;
 752:sieve_extend.c ****         if (option_verboselevel >= 2) {
 753:sieve_extend.c ****             tuning_result_index = 0;
 754:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 755:sieve_extend.c ****             if (option_verboselevel >= 3) {
 756:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 757:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 758:sieve_extend.c ****                 }
 759:sieve_extend.c ****             }
 760:sieve_extend.c ****         }
 761:sieve_extend.c **** 
 762:sieve_extend.c ****         tuning_results = tuning_results / 2;
 763:sieve_extend.c **** 
 764:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 765:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 766:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 767:sieve_extend.c ****         }
 768:sieve_extend.c ****         
 769:sieve_extend.c ****     }
 770:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
 771:sieve_extend.c ****     if (option_verboselevel >= 1) {
 772:sieve_extend.c ****         tuning_result_index = 0;
 773:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 774:sieve_extend.c ****     }
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     free(tuning_result);
 777:sieve_extend.c ****     return best_result;
 778:sieve_extend.c **** }
 779:sieve_extend.c **** 
 780:sieve_extend.c **** 
 781:sieve_extend.c **** int main(int argc, char *argv[]) {
 13415              		.loc 1 781 34 view -0
 13416              		.cfi_startproc
 13417              		.loc 1 781 34 is_stmt 0 view .LVU4353
 13418 0000 F30F1EFA 		endbr64	
 13419 0004 4157     		push	r15	#
 13420              		.cfi_def_cfa_offset 16
 13421              		.cfi_offset 15, -16
 13422 0006 4156     		push	r14	#
 13423              		.cfi_def_cfa_offset 24
 13424              		.cfi_offset 14, -24
 13425 0008 4155     		push	r13	#
 13426              		.cfi_def_cfa_offset 32
 13427              		.cfi_offset 13, -32
GAS LISTING /tmp/ccFOD2R4.s 			page 356


 13428 000a 4154     		push	r12	#
 13429              		.cfi_def_cfa_offset 40
 13430              		.cfi_offset 12, -40
 13431 000c 55       		push	rbp	#
 13432              		.cfi_def_cfa_offset 48
 13433              		.cfi_offset 6, -48
 13434 000d 53       		push	rbx	#
 13435              		.cfi_def_cfa_offset 56
 13436              		.cfi_offset 3, -56
 13437 000e 488DA424 		lea	rsp, -232[rsp]	#,
 13437      18FFFFFF 
 13438              		.cfi_def_cfa_offset 288
 13439              	# sieve_extend.c:781: int main(int argc, char *argv[]) {
 13440              		.loc 1 781 34 view .LVU4354
 13441 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp581, MEM[(<address-space-1> long unsigned int *)40B]
 13441      25280000 
 13441      00
 13442 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7111, tmp581
 13442      D8000000 
 13443 0027 31C0     		xor	eax, eax	# tmp581
 782:sieve_extend.c ****     
 783:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 13444              		.loc 1 783 5 is_stmt 1 view .LVU4355
 13445              	# sieve_extend.c:783:     counter_t option_maxFactor  = default_sieve_limit;
 13446              		.loc 1 783 15 is_stmt 0 view .LVU4356
 13447 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 13447      A0000000 
 13447      40420F00 
 784:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 13448              		.loc 1 784 5 is_stmt 1 view .LVU4357
 13449              	.LBB840:
 13450              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 785:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 786:sieve_extend.c ****     int option_check = default_check_level;
 787:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 788:sieve_extend.c **** 
 789:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 13451              		.loc 1 789 5 is_stmt 0 view .LVU4358
 13452 0035 83FF01   		cmp	edi, 1	# argc,
 13453              	.LBE840:
 13454              	# sieve_extend.c:784:     counter_t option_showMaxFactor = default_showMaxFactor;
 784:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 13455              		.loc 1 784 15 view .LVU4359
 13456 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 13456      A8000000 
 13456      00000000 
 785:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 13457              		.loc 1 785 5 is_stmt 1 view .LVU4360
 13458              	# sieve_extend.c:785:     int option_verboselevel = default_verbose_level;
 785:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 13459              		.loc 1 785 9 is_stmt 0 view .LVU4361
 13460 0044 C7842498 		mov	DWORD PTR 152[rsp], 0	# option_verboselevel,
 13460      00000000 
 13460      000000
 786:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 13461              		.loc 1 786 5 is_stmt 1 view .LVU4362
 13462              	.LVL760:
GAS LISTING /tmp/ccFOD2R4.s 			page 357


 787:sieve_extend.c **** 
 13463              		.loc 1 787 5 view .LVU4363
 13464              	# sieve_extend.c:787:     int option_tunelevel = default_tune_level;
 787:sieve_extend.c **** 
 13465              		.loc 1 787 9 is_stmt 0 view .LVU4364
 13466 004f C784249C 		mov	DWORD PTR 156[rsp], 1	# option_tunelevel,
 13466      00000001 
 13466      000000
 13467              		.loc 1 789 5 is_stmt 1 view .LVU4365
 13468              	.LBB865:
 13469              		.loc 1 789 10 view .LVU4366
 13470              	.LVL761:
 13471              		.loc 1 789 21 view .LVU4367
 13472              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 13473              		.loc 1 789 5 is_stmt 0 view .LVU4368
 13474 005a 0F8E8F01 		jle	.L1160	#,
 13474      0000
 13475 0060 89FD     		mov	ebp, edi	# argc, tmp538
 13476 0062 4989F4   		mov	r12, rsi	# argv, tmp539
 13477              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 13478              		.loc 1 789 14 view .LVU4369
 13479 0065 BB010000 		mov	ebx, 1	# arg,
 13479      00
 13480 006a 4C8D2D00 		lea	r13, .LC27[rip]	# tmp478,
 13480      000000
 13481              	# sieve_extend.c:791:         else if (strcmp(argv[arg], "--verbose")==0) {
 790:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 791:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13482              		.loc 1 791 18 view .LVU4370
 13483 0071 4C8D3500 		lea	r14, .LC28[rip]	# tmp493,
 13483      000000
 13484 0078 EB66     		jmp	.L1159	#
 13485              	.LVL762:
 13486 007a 660F1F44 		.p2align 4,,7
 13486      0000
 13487              		.p2align 3
 13488              	.L1291:
 792:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13489              		.loc 1 792 13 is_stmt 1 view .LVU4371
 13490              	# sieve_extend.c:792:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\
 13491              		.loc 1 792 16 is_stmt 0 view .LVU4372
 13492 0080 83C301   		add	ebx, 1	# arg,
 13493              	.LVL763:
 13494              		.loc 1 792 16 view .LVU4373
 13495 0083 39DD     		cmp	ebp, ebx	# argc, arg
 13496 0085 0F8ECF0E 		jle	.L1289	#,
 13496      0000
 793:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 13497              		.loc 1 793 13 is_stmt 1 view .LVU4374
 13498              	# sieve_extend.c:793:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13499              		.loc 1 793 28 is_stmt 0 view .LVU4375
 13500 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 13500      08
 13501              	# sieve_extend.c:793:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13502              		.loc 1 793 17 view .LVU4376
 13503 0090 488D9424 		lea	rdx, 152[rsp]	# tmp303,
 13503      98000000 
GAS LISTING /tmp/ccFOD2R4.s 			page 358


 13504 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 13505 009b 31C0     		xor	eax, eax	#
 13506 009d 488D3500 		lea	rsi, .LC30[rip]	#,
 13506      000000
 13507 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 13507      00
 13508              	.LVL764:
 13509              	# sieve_extend.c:793:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13510              		.loc 1 793 16 view .LVU4377
 13511 00a9 83F801   		cmp	eax, 1	# tmp540,
 13512 00ac 0F85E204 		jne	.L1164	#,
 13512      0000
 13513              	# sieve_extend.c:793:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13514              		.loc 1 793 91 discriminator 1 view .LVU4378
 13515 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 13515      000000
 13516              	# sieve_extend.c:793:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13517              		.loc 1 793 68 discriminator 1 view .LVU4379
 13518 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 13519 00bc 0F8FD204 		jg	.L1164	#,
 13519      0000
 794:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 795:sieve_extend.c ****             }
 796:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 13520              		.loc 1 796 13 is_stmt 1 view .LVU4380
 13521              	.LVL765:
 13522              	.LBB841:
 13523              	.LBI841:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13524              		.loc 3 105 1 view .LVU4381
 13525              	.LBB842:
 13526              		.loc 3 107 3 view .LVU4382
 13527              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13528              		.loc 3 107 10 is_stmt 0 view .LVU4383
 13529 00c2 488D3500 		lea	rsi, .LC32[rip]	#,
 13529      000000
 13530 00c9 BF010000 		mov	edi, 1	#,
 13530      00
 13531 00ce 31C0     		xor	eax, eax	#
 13532 00d0 E8000000 		call	__printf_chk@PLT	#
 13532      00
 13533              	.LVL766:
 13534              	.L1166:
 13535              		.loc 3 107 10 view .LVU4384
 13536              	.LBE842:
 13537              	.LBE841:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13538              		.loc 1 789 33 is_stmt 1 discriminator 2 view .LVU4385
 13539              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13540              		.loc 1 789 36 is_stmt 0 discriminator 2 view .LVU4386
 13541 00d5 83C301   		add	ebx, 1	# arg,
 13542              	.LVL767:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13543              		.loc 1 789 21 is_stmt 1 discriminator 2 view .LVU4387
 13544              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/ccFOD2R4.s 			page 359


 13545              		.loc 1 789 5 is_stmt 0 discriminator 2 view .LVU4388
 13546 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 13547 00da 0F8E0001 		jle	.L1290	#,
 13547      0000
 13548              	.LVL768:
 13549              	.L1159:
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13550              		.loc 1 790 9 is_stmt 1 view .LVU4389
 13551              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13552              		.loc 1 790 24 is_stmt 0 view .LVU4390
 13553 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 13554              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13555              		.loc 1 790 13 view .LVU4391
 13556 00e3 41B90700 		mov	r9d, 7	# tmp292,
 13556      0000
 13557              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13558              		.loc 1 790 24 view .LVU4392
 13559 00e9 48C1E003 		sal	rax, 3	# _2,
 13560              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13561              		.loc 1 790 13 view .LVU4393
 13562 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp478
 13563              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13564              		.loc 1 790 24 view .LVU4394
 13565 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 13566              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13567              		.loc 1 790 13 view .LVU4395
 13568 00f4 4C89C9   		mov	rcx, r9	# tmp504, tmp292
 13569 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 13570 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 13571 00fd F3A6     		repz cmpsb
 13572 00ff 0F97C2   		seta	dl	#, tmp293
 13573 0102 80DA00   		sbb	dl, 0	# _5
 13574              	# sieve_extend.c:790:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 790:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13575              		.loc 1 790 12 view .LVU4396
 13576 0105 84D2     		test	dl, dl	# _5
 13577 0107 0F84A404 		je	.L1287	#,
 13577      0000
 791:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13578              		.loc 1 791 14 is_stmt 1 view .LVU4397
 13579              	# sieve_extend.c:791:         else if (strcmp(argv[arg], "--verbose")==0) {
 791:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13580              		.loc 1 791 18 is_stmt 0 view .LVU4398
 13581 010d B90A0000 		mov	ecx, 10	# tmp298,
 13581      00
 13582 0112 4C89C6   		mov	rsi, r8	# _4, _4
 13583 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp493
 13584 0118 F3A6     		repz cmpsb
 13585 011a 410F97C2 		seta	r10b	#, tmp299
 13586 011e 4180DA00 		sbb	r10b, 0	# _11
 13587              	# sieve_extend.c:791:         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/ccFOD2R4.s 			page 360


 791:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13588              		.loc 1 791 17 view .LVU4399
 13589 0122 4584D2   		test	r10b, r10b	# _11
 13590 0125 0F8455FF 		je	.L1291	#,
 13590      FFFF
 797:sieve_extend.c ****         } 
 798:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13591              		.loc 1 798 14 is_stmt 1 view .LVU4400
 13592              	# sieve_extend.c:798:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13593              		.loc 1 798 18 is_stmt 0 view .LVU4401
 13594 012b B9080000 		mov	ecx, 8	# tmp308,
 13594      00
 13595 0130 4C89C6   		mov	rsi, r8	# _4, _4
 13596 0133 488D3D00 		lea	rdi, .LC33[rip]	# tmp307,
 13596      000000
 13597 013a F3A6     		repz cmpsb
 13598 013c 410F97C3 		seta	r11b	#, tmp309
 13599 0140 4180DB00 		sbb	r11b, 0	# _23
 13600              	# sieve_extend.c:798:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13601              		.loc 1 798 17 view .LVU4402
 13602 0144 4584DB   		test	r11b, r11b	# _23
 13603 0147 748C     		je	.L1166	#,
 799:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13604              		.loc 1 799 14 is_stmt 1 view .LVU4403
 13605              	# sieve_extend.c:799:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13606              		.loc 1 799 18 is_stmt 0 view .LVU4404
 13607 0149 4C89C6   		mov	rsi, r8	# _4, _4
 13608 014c 488D3D00 		lea	rdi, .LC34[rip]	# tmp313,
 13608      000000
 13609 0153 4C89C9   		mov	rcx, r9	# tmp510, tmp292
 13610 0156 F3A6     		repz cmpsb
 13611 0158 0F97C2   		seta	dl	#, tmp315
 13612 015b 80DA00   		sbb	dl, 0	# _24
 13613              	# sieve_extend.c:799:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13614              		.loc 1 799 17 view .LVU4405
 13615 015e 84D2     		test	dl, dl	# _24
 13616 0160 0F855A01 		jne	.L1167	#,
 13616      0000
 13617              		.loc 1 799 52 is_stmt 1 discriminator 1 view .LVU4406
 13618              	# sieve_extend.c:799:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13619              		.loc 1 799 68 is_stmt 0 discriminator 1 view .LVU4407
 13620 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 13620      00000000 
 13620      000000
 800:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 13621              		.loc 1 800 13 is_stmt 1 discriminator 1 view .LVU4408
 13622              	# sieve_extend.c:800:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n")
 13623              		.loc 1 800 16 is_stmt 0 discriminator 1 view .LVU4409
 13624 0171 83C301   		add	ebx, 1	# arg,
 13625              	.LVL769:
 13626              		.loc 1 800 16 discriminator 1 view .LVU4410
 13627 0174 39DD     		cmp	ebp, ebx	# argc, arg
 13628 0176 0F8E440E 		jle	.L1292	#,
 13628      0000
 801:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 13629              		.loc 1 801 13 is_stmt 1 view .LVU4411
 13630              	# sieve_extend.c:801:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
GAS LISTING /tmp/ccFOD2R4.s 			page 361


 13631              		.loc 1 801 28 is_stmt 0 view .LVU4412
 13632 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 13632      08
 13633              	# sieve_extend.c:801:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13634              		.loc 1 801 17 view .LVU4413
 13635 0181 488D9424 		lea	rdx, 156[rsp]	# tmp319,
 13635      9C000000 
 13636 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 13637 018c 31C0     		xor	eax, eax	#
 13638 018e 488D3500 		lea	rsi, .LC30[rip]	#,
 13638      000000
 13639 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 13639      00
 13640              	.LVL770:
 13641              	# sieve_extend.c:801:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13642              		.loc 1 801 16 view .LVU4414
 13643 019a 83F801   		cmp	eax, 1	# tmp541,
 13644 019d 0F85D90D 		jne	.L1169	#,
 13644      0000
 13645              	# sieve_extend.c:801:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13646              		.loc 1 801 85 discriminator 1 view .LVU4415
 13647 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 13647      000000
 13648              	# sieve_extend.c:801:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13649              		.loc 1 801 65 discriminator 1 view .LVU4416
 13650 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 13651 01ad 0F8FC90D 		jg	.L1169	#,
 13651      0000
 802:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 803:sieve_extend.c ****             }
 804:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 13652              		.loc 1 804 13 is_stmt 1 view .LVU4417
 13653              	.LVL771:
 13654              	.LBB843:
 13655              	.LBI843:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13656              		.loc 3 105 1 view .LVU4418
 13657              	.LBB844:
 13658              		.loc 3 107 3 view .LVU4419
 13659              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13660              		.loc 3 107 10 is_stmt 0 view .LVU4420
 13661 01b3 31C0     		xor	eax, eax	#
 13662 01b5 488D3500 		lea	rsi, .LC37[rip]	#,
 13662      000000
 13663 01bc BF010000 		mov	edi, 1	#,
 13663      00
 13664              	.LBE844:
 13665              	.LBE843:
 13666              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13667              		.loc 1 789 36 view .LVU4421
 13668 01c1 83C301   		add	ebx, 1	# arg,
 13669              	.LVL772:
 13670              	.LBB846:
 13671              	.LBB845:
 13672              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13673              		.loc 3 107 10 view .LVU4422
GAS LISTING /tmp/ccFOD2R4.s 			page 362


 13674 01c4 E8000000 		call	__printf_chk@PLT	#
 13674      00
 13675              	.LVL773:
 13676              		.loc 3 107 10 view .LVU4423
 13677              	.LBE845:
 13678              	.LBE846:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13679              		.loc 1 789 33 is_stmt 1 view .LVU4424
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13680              		.loc 1 789 21 view .LVU4425
 13681              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13682              		.loc 1 789 5 is_stmt 0 view .LVU4426
 13683 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 13684 01cb 0F8F0FFF 		jg	.L1159	#,
 13684      FFFF
 13685 01d1 66662E0F 		.p2align 4
 13685      1F840000 
 13685      0000000F 
 13685      1F4000
 13686              		.p2align 3
 13687              	.L1290:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13688              		.loc 1 789 5 view .LVU4427
 13689              	.LBE865:
 805:sieve_extend.c ****         }
 806:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 807:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 808:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 809:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 810:sieve_extend.c ****             }
 811:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
 812:sieve_extend.c ****         }
 813:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
 814:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 815:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 816:sieve_extend.c ****         }
 817:sieve_extend.c ****     }
 818:sieve_extend.c **** 
 819:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 13690              		.loc 1 819 5 is_stmt 1 view .LVU4428
 820:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
 821:sieve_extend.c ****         printf("\nResult set:\n");
 822:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 823:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
 824:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
 825:sieve_extend.c ****         else printf("The sieve is VALID\n");
 826:sieve_extend.c ****         sieve_delete(sieve);
 827:sieve_extend.c ****         exit(0);
 828:sieve_extend.c ****     }
 829:sieve_extend.c **** 
 830:sieve_extend.c ****         
 831:sieve_extend.c ****     if (option_check) {
 13691              		.loc 1 831 5 view .LVU4429
 832:sieve_extend.c ****         // Count the number of primes and validate the result
 833:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 13692              		.loc 1 833 9 view .LVU4430
GAS LISTING /tmp/ccFOD2R4.s 			page 363


 13693              	# sieve_extend.c:833:         if (option_verboselevel >= 1) printf("Validating... ");
 13694              		.loc 1 833 12 is_stmt 0 view .LVU4431
 13695 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 13695      000000
 13696              	.LVL774:
 13697              		.loc 1 833 12 view .LVU4432
 13698 01e7 85ED     		test	ebp, ebp	#
 13699 01e9 0F8F8D03 		jg	.L1293	#,
 13699      0000
 13700              	.LVL775:
 13701              	.L1160:
 834:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 13702              		.loc 1 834 9 is_stmt 1 view .LVU4433
 13703              	# sieve_extend.c:834:         if (option_verboselevel >= 2) printf("\n");
 13704              		.loc 1 834 12 is_stmt 0 view .LVU4434
 13705 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 13705      00000001 
 13706 01f7 7E0A     		jle	.L1176	#,
 13707              		.loc 1 834 39 is_stmt 1 view .LVU4435
 13708              	.LVL776:
 13709              	.LBB866:
 13710              	.LBI866:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13711              		.loc 3 105 1 view .LVU4436
 13712              	.LBB867:
 13713              		.loc 3 107 3 view .LVU4437
 13714              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13715              		.loc 3 107 10 is_stmt 0 view .LVU4438
 13716 01f9 BF0A0000 		mov	edi, 10	#,
 13716      00
 13717 01fe E8000000 		call	putchar@PLT	#
 13717      00
 13718              	.LVL777:
 13719              	.L1176:
 13720              		.loc 3 107 10 view .LVU4439
 13721              	.LBE867:
 13722              	.LBE866:
 13723              	.LBB868:
 13724              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13725              		.loc 1 789 14 view .LVU4440
 13726 0203 C7442428 		mov	DWORD PTR 40[rsp], 7	# %sfp,
 13726      07000000 
 13727 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 13727      0000
 13728              	.LBE868:
 13729              	.LBB869:
 13730              	.LBB870:
 13731              	.LBB871:
 13732              	.LBB872:
 13733              	.LBB873:
 13734              	.LBB874:
 13735              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13736              		.loc 3 107 10 view .LVU4441
 13737 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp492,
 13737      000000
 13738              	.L1183:
GAS LISTING /tmp/ccFOD2R4.s 			page 364


 13739              	.LVL778:
 13740              		.loc 3 107 10 view .LVU4442
 13741              	.LBE874:
 13742              	.LBE873:
 13743              	.LBE872:
 13744              	.LBE871:
 835:sieve_extend.c **** 
 836:sieve_extend.c ****         // validate algorithm - run one time for all sizes
 837:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
 838:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 13745              		.loc 1 838 13 is_stmt 1 view .LVU4443
 13746              	# sieve_extend.c:838:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(
 13747              		.loc 1 838 37 is_stmt 0 view .LVU4444
 13748 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_67, option_verboselevel
 13748      000000
 13749              	# sieve_extend.c:838:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(
 13750              		.loc 1 838 16 view .LVU4445
 13751 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 13752 0222 7E1D     		jle	.L1177	#,
 13753              		.loc 1 838 43 is_stmt 1 view .LVU4446
 13754              	.LVL779:
 13755              	.LBB890:
 13756              	.LBI890:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13757              		.loc 3 105 1 view .LVU4447
 13758              	.LBB891:
 13759              		.loc 3 107 3 view .LVU4448
 13760              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13761              		.loc 3 107 10 is_stmt 0 view .LVU4449
 13762 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 13763 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 13763      000000
 13764 022e BF010000 		mov	edi, 1	#,
 13764      00
 13765 0233 31C0     		xor	eax, eax	#
 13766 0235 E8000000 		call	__printf_chk@PLT	#
 13766      00
 13767              	.LVL780:
 13768 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_67, option_verboselevel
 13768      000000
 13769              	.LVL781:
 13770              	.L1177:
 13771              		.loc 3 107 10 view .LVU4450
 13772              	.LBE891:
 13773              	.LBE890:
 13774              	.LBE870:
 13775              	.LBE869:
 13776              	.LBB900:
 13777              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13778              		.loc 1 789 14 view .LVU4451
 13779 0241 41BC0500 		mov	r12d, 5	# ivtmp_236,
 13779      0000
 13780 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 13780      00
 13781 024c EB56     		jmp	.L1181	#
 13782              	.LVL782:
GAS LISTING /tmp/ccFOD2R4.s 			page 365


 13783 024e 6690     		.p2align 4,,7
 13784              		.p2align 3
 13785              	.L1178:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13786              		.loc 1 789 14 view .LVU4452
 13787              	.LBE900:
 13788              	.LBB901:
 13789              	.LBB897:
 13790              	.LBB892:
 13791              	.LBB885:
 839:sieve_extend.c ****             struct sieve_t *sieve_check;
 840:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
 841:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 842:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 13792              		.loc 1 842 17 is_stmt 1 view .LVU4453
 13793              	# sieve_extend.c:842:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 13794              		.loc 1 842 31 is_stmt 0 view .LVU4454
 13795 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 13796 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 13797 0256 E8000000 		call	sieve_shake	#
 13797      00
 13798              	.LVL783:
 13799              	# sieve_extend.c:843:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 843:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 13800              		.loc 1 843 29 view .LVU4455
 13801 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 13801      000000
 13802              	# sieve_extend.c:842:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 842:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 13803              		.loc 1 842 31 view .LVU4456
 13804 0262 4989C7   		mov	r15, rax	# sieve_check, tmp544
 13805              	.LVL784:
 13806              		.loc 1 843 17 is_stmt 1 view .LVU4457
 13807              	# sieve_extend.c:843:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 13808              		.loc 1 843 29 is_stmt 0 view .LVU4458
 13809 0265 4889C7   		mov	rdi, rax	#, sieve_check
 13810 0268 E8000000 		call	validatePrimeCount	#
 13810      00
 13811              	.LVL785:
 13812              	.LBB876:
 13813              	.LBB877:
 13814              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 13815              		.loc 1 112 5 view .LVU4459
 13816 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_check_128->bitstorage
 13817              	.LBE877:
 13818              	.LBE876:
 13819              	# sieve_extend.c:843:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 13820              		.loc 1 843 29 view .LVU4460
 13821 0270 89C3     		mov	ebx, eax	# valid, tmp545
 13822              	.LVL786:
 844:sieve_extend.c ****                 sieve_delete(sieve_check);
 13823              		.loc 1 844 17 is_stmt 1 view .LVU4461
 13824              	.LBB879:
 13825              	.LBI876:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 13826              		.loc 1 111 13 view .LVU4462
GAS LISTING /tmp/ccFOD2R4.s 			page 366


 13827              	.LBB878:
 112:sieve_extend.c ****     free(sieve);
 13828              		.loc 1 112 5 view .LVU4463
 13829 0272 E8000000 		call	free@PLT	#
 13829      00
 13830              	.LVL787:
 113:sieve_extend.c **** }
 13831              		.loc 1 113 5 view .LVU4464
 13832 0277 4C89FF   		mov	rdi, r15	#, sieve_check
 13833 027a E8000000 		call	free@PLT	#
 13833      00
 13834              	.LVL788:
 113:sieve_extend.c **** }
 13835              		.loc 1 113 5 is_stmt 0 view .LVU4465
 13836              	.LBE878:
 13837              	.LBE879:
 845:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 13838              		.loc 1 845 17 is_stmt 1 view .LVU4466
 13839              	# sieve_extend.c:845:                 if (!valid) return 0; else if (option_verboselevel >= 3) prin
 13840              		.loc 1 845 20 is_stmt 0 view .LVU4467
 13841 027f 85DB     		test	ebx, ebx	# valid
 13842 0281 0F84C902 		je	.L1217	#,
 13842      0000
 13843              		.loc 1 845 44 is_stmt 1 discriminator 2 view .LVU4468
 13844              	# sieve_extend.c:845:                 if (!valid) return 0; else if (option_verboselevel >= 3) prin
 13845              		.loc 1 845 68 is_stmt 0 discriminator 2 view .LVU4469
 13846 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_67, option_verboselevel
 13846      000000
 13847              	# sieve_extend.c:845:                 if (!valid) return 0; else if (option_verboselevel >= 3) prin
 13848              		.loc 1 845 47 discriminator 2 view .LVU4470
 13849 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 13850 0291 0F8FE900 		jg	.L1294	#,
 13850      0000
 13851              	.LBE885:
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 13852              		.loc 1 840 75 is_stmt 1 discriminator 2 view .LVU4471
 13853              	# sieve_extend.c:840:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 13854              		.loc 1 840 90 is_stmt 0 discriminator 2 view .LVU4472
 13855 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 13856              	.LVL789:
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 13857              		.loc 1 840 49 is_stmt 1 discriminator 2 view .LVU4473
 13858              	# sieve_extend.c:840:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 13859              		.loc 1 840 13 is_stmt 0 discriminator 2 view .LVU4474
 13860 029a 4183EC01 		sub	r12d, 1	# ivtmp_236,
 13861 029e 0F840301 		je	.L1295	#,
 13861      0000
 13862              	.LVL790:
 13863              	.L1181:
 13864              	.LBB886:
 841:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 13865              		.loc 1 841 17 is_stmt 1 view .LVU4475
 13866              	# sieve_extend.c:841:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintm
 841:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 13867              		.loc 1 841 20 is_stmt 0 view .LVU4476
GAS LISTING /tmp/ccFOD2R4.s 			page 367


 13868 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 13869 02a7 7EA7     		jle	.L1178	#,
 841:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 13870              		.loc 1 841 47 is_stmt 1 view .LVU4477
 13871              	.LVL791:
 13872              	.LBB880:
 13873              	.LBI873:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13874              		.loc 3 105 1 view .LVU4478
 13875              	.LBB875:
 13876              		.loc 3 107 3 view .LVU4479
 13877              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13878              		.loc 3 107 10 is_stmt 0 view .LVU4480
 13879 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 13880 02ac 4C89F6   		mov	rsi, r14	#, tmp492
 13881 02af BF010000 		mov	edi, 1	#,
 13881      00
 13882 02b4 31C0     		xor	eax, eax	#
 13883 02b6 E8000000 		call	__printf_chk@PLT	#
 13883      00
 13884              	.LVL792:
 13885 02bb EB93     		jmp	.L1178	#
 13886              	.LVL793:
 13887 02bd 0F1F00   		.p2align 4,,7
 13888              		.p2align 3
 13889              	.L1167:
 13890              		.loc 3 107 10 view .LVU4481
 13891              	.LBE875:
 13892              	.LBE880:
 13893              	.LBE886:
 13894              	.LBE892:
 13895              	.LBE897:
 13896              	.LBE901:
 13897              	.LBB902:
 806:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 13898              		.loc 1 806 14 is_stmt 1 view .LVU4482
 13899              	# sieve_extend.c:806:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 806:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 13900              		.loc 1 806 18 is_stmt 0 view .LVU4483
 13901 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 13902 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 13903 02c6 488D3D00 		lea	rdi, .LC38[rip]	# tmp323,
 13903      000000
 13904 02cd F3A6     		repz cmpsb
 13905 02cf 410F97C1 		seta	r9b	#, tmp325
 13906 02d3 4180D900 		sbb	r9b, 0	# _36
 13907              	# sieve_extend.c:806:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 806:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 13908              		.loc 1 806 17 view .LVU4484
 13909 02d7 4584C9   		test	r9b, r9b	# _36
 13910 02da 756C     		jne	.L1171	#,
 806:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 13911              		.loc 1 806 52 is_stmt 1 discriminator 1 view .LVU4485
 13912              	# sieve_extend.c:806:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 806:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 13913              		.loc 1 806 72 is_stmt 0 discriminator 1 view .LVU4486
 13914 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
GAS LISTING /tmp/ccFOD2R4.s 			page 368


 13914      A8000000 
 13914      00000000 
 807:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 13915              		.loc 1 807 13 is_stmt 1 discriminator 1 view .LVU4487
 13916              	# sieve_extend.c:807:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n
 807:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 13917              		.loc 1 807 16 is_stmt 0 discriminator 1 view .LVU4488
 13918 02e8 83C301   		add	ebx, 1	# arg,
 13919              	.LVL794:
 807:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 13920              		.loc 1 807 16 discriminator 1 view .LVU4489
 13921 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 13922 02ed 0F8EA70C 		jle	.L1296	#,
 13922      0000
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13923              		.loc 1 808 13 is_stmt 1 view .LVU4490
 13924              	# sieve_extend.c:808:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13925              		.loc 1 808 28 is_stmt 0 view .LVU4491
 13926 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 13926      08
 13927              	# sieve_extend.c:808:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13928              		.loc 1 808 17 view .LVU4492
 13929 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp329,
 13929      A8000000 
 13930 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 13931 0303 31C0     		xor	eax, eax	#
 13932 0305 488D3500 		lea	rsi, .LC40[rip]	#,
 13932      000000
 13933 030c E8000000 		call	__isoc99_sscanf@PLT	#
 13933      00
 13934              	.LVL795:
 13935              	# sieve_extend.c:808:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13936              		.loc 1 808 16 view .LVU4493
 13937 0311 83F801   		cmp	eax, 1	# tmp542,
 13938 0314 0F85710C 		jne	.L1173	#,
 13938      0000
 13939              	# sieve_extend.c:808:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13940              		.loc 1 808 106 discriminator 1 view .LVU4494
 13941 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 13941      A8000000 
 13942              	# sieve_extend.c:808:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 808:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 13943              		.loc 1 808 82 discriminator 1 view .LVU4495
 13944 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 13944      A0000000 
 13945 032a 0F875B0C 		ja	.L1173	#,
 13945      0000
 811:sieve_extend.c ****         }
 13946              		.loc 1 811 13 is_stmt 1 view .LVU4496
 13947              	.LVL796:
 13948              	.LBB847:
 13949              	.LBI847:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccFOD2R4.s 			page 369


 13950              		.loc 3 105 1 view .LVU4497
 13951              	.LBB848:
 13952              		.loc 3 107 3 view .LVU4498
 13953              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13954              		.loc 3 107 10 is_stmt 0 view .LVU4499
 13955 0330 488D3500 		lea	rsi, .LC42[rip]	#,
 13955      000000
 13956 0337 BF010000 		mov	edi, 1	#,
 13956      00
 13957 033c 31C0     		xor	eax, eax	#
 13958 033e E8000000 		call	__printf_chk@PLT	#
 13958      00
 13959              	.LVL797:
 13960 0343 E98DFDFF 		jmp	.L1166	#
 13960      FF
 13961              	.LVL798:
 13962              		.p2align 4,,7
 13963              		.p2align 3
 13964              	.L1171:
 13965              		.loc 3 107 10 view .LVU4500
 13966              	.LBE848:
 13967              	.LBE847:
 813:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 13968              		.loc 1 813 14 is_stmt 1 view .LVU4501
 13969              	# sieve_extend.c:813:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 813:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 13970              		.loc 1 813 18 is_stmt 0 view .LVU4502
 13971 0348 31C0     		xor	eax, eax	#
 13972 034a 488D9424 		lea	rdx, 160[rsp]	# tmp331,
 13972      A0000000 
 13973 0352 488D3500 		lea	rsi, .LC40[rip]	#,
 13973      000000
 13974 0359 4C89C7   		mov	rdi, r8	#, _4
 13975 035c E8000000 		call	__isoc99_sscanf@PLT	#
 13975      00
 13976              	.LVL799:
 13977              	# sieve_extend.c:813:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 813:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 13978              		.loc 1 813 17 view .LVU4503
 13979 0361 83F801   		cmp	eax, 1	# tmp543,
 13980 0364 0F846BFD 		je	.L1166	#,
 13980      FFFF
 814:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 13981              		.loc 1 814 13 is_stmt 1 view .LVU4504
 13982              	.LVL800:
 13983              	.LBB849:
 13984              	.LBI849:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13985              		.loc 3 98 1 view .LVU4505
 13986              	.LBB850:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13987              		.loc 3 100 3 view .LVU4506
 13988              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13989              		.loc 3 100 10 is_stmt 0 view .LVU4507
 13990 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 13991 036d 488D1500 		lea	rdx, .LC43[rip]	#,
GAS LISTING /tmp/ccFOD2R4.s 			page 370


 13991      000000
 13992 0374 E9250200 		jmp	.L1286	#
 13992      00
 13993              	.LVL801:
 13994 0379 0F1F8000 		.p2align 4,,7
 13994      000000
 13995              		.p2align 3
 13996              	.L1294:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13997              		.loc 3 100 10 view .LVU4508
 13998              	.LBE850:
 13999              	.LBE849:
 14000              	.LBE902:
 14001              	.LBB903:
 14002              	.LBB898:
 14003              	.LBB893:
 14004              	.LBB887:
 14005              		.loc 1 845 74 is_stmt 1 view .LVU4509
 14006              	.LBB881:
 14007              	.LBI881:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14008              		.loc 3 105 1 view .LVU4510
 14009              	.LBB882:
 14010              		.loc 3 107 3 view .LVU4511
 14011              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14012              		.loc 3 107 10 is_stmt 0 view .LVU4512
 14013 0380 31C0     		xor	eax, eax	#
 14014 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 14014      000000
 14015 0389 BF010000 		mov	edi, 1	#,
 14015      00
 14016              	.LBE882:
 14017              	.LBE881:
 14018              	.LBE887:
 14019              	# sieve_extend.c:840:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14020              		.loc 1 840 90 view .LVU4513
 14021 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 14022              	.LVL802:
 14023              	.LBB888:
 14024              	.LBB884:
 14025              	.LBB883:
 14026              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14027              		.loc 3 107 10 view .LVU4514
 14028 0391 E8000000 		call	__printf_chk@PLT	#
 14028      00
 14029              	.LVL803:
 14030 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_67, option_verboselevel
 14030      000000
 14031              	.LVL804:
 14032              		.loc 3 107 10 view .LVU4515
 14033              	.LBE883:
 14034              	.LBE884:
 14035              	.LBE888:
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14036              		.loc 1 840 75 is_stmt 1 view .LVU4516
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
GAS LISTING /tmp/ccFOD2R4.s 			page 371


 14037              		.loc 1 840 49 view .LVU4517
 14038              	# sieve_extend.c:840:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14039              		.loc 1 840 13 is_stmt 0 view .LVU4518
 14040 039d 4183EC01 		sub	r12d, 1	# ivtmp_236,
 14041 03a1 0F85FDFE 		jne	.L1181	#,
 14041      FFFF
 14042              	.L1295:
 840:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14043              		.loc 1 840 13 view .LVU4519
 14044              	.LBE893:
 846:sieve_extend.c ****             }
 847:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 14045              		.loc 1 847 13 is_stmt 1 view .LVU4520
 14046              	# sieve_extend.c:847:             if (option_verboselevel >= 2) printf("\n");
 14047              		.loc 1 847 16 is_stmt 0 view .LVU4521
 14048 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
 14049 03aa 7E0A     		jle	.L1182	#,
 14050              		.loc 1 847 43 is_stmt 1 view .LVU4522
 14051              	.LVL805:
 14052              	.LBB894:
 14053              	.LBI894:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14054              		.loc 3 105 1 view .LVU4523
 14055              	.LBB895:
 14056              		.loc 3 107 3 view .LVU4524
 14057              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14058              		.loc 3 107 10 is_stmt 0 view .LVU4525
 14059 03ac BF0A0000 		mov	edi, 10	#,
 14059      00
 14060 03b1 E8000000 		call	putchar@PLT	#
 14060      00
 14061              	.LVL806:
 14062              	.L1182:
 14063              		.loc 3 107 10 view .LVU4526
 14064              	.LBE895:
 14065              	.LBE894:
 14066              	.LBE898:
 837:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14067              		.loc 1 837 77 is_stmt 1 discriminator 2 view .LVU4527
 14068              	# sieve_extend.c:837:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; s
 837:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14069              		.loc 1 837 93 is_stmt 0 discriminator 2 view .LVU4528
 14070 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 14070      00
 14071              	.LVL807:
 837:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14072              		.loc 1 837 93 discriminator 2 view .LVU4529
 14073 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 14074              	.LVL808:
 837:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14075              		.loc 1 837 47 is_stmt 1 discriminator 2 view .LVU4530
 14076              	# sieve_extend.c:837:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; s
 837:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14077              		.loc 1 837 9 is_stmt 0 discriminator 2 view .LVU4531
 14078 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 14078      01
GAS LISTING /tmp/ccFOD2R4.s 			page 372


 14079 03c3 0F854FFE 		jne	.L1183	#,
 14079      FFFF
 14080              	.LBE903:
 848:sieve_extend.c ****         }
 849:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 14081              		.loc 1 849 9 is_stmt 1 view .LVU4532
 14082              	# sieve_extend.c:849:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 14083              		.loc 1 849 12 is_stmt 0 view .LVU4533
 14084 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 14084      00000000 
 14085 03d1 0F8F5709 		jg	.L1297	#,
 14085      0000
 850:sieve_extend.c ****     }
 851:sieve_extend.c ****     
 852:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 14086              		.loc 1 852 5 is_stmt 1 view .LVU4534
 14087              	.LVL809:
 853:sieve_extend.c ****     if (option_tunelevel) {
 14088              		.loc 1 853 5 view .LVU4535
 14089              	# sieve_extend.c:853:     if (option_tunelevel) {
 14090              		.loc 1 853 9 is_stmt 0 view .LVU4536
 14091 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_480, option_tunelevel
 14091      9C000000 
 14092              	# sieve_extend.c:852:     counter_t best_blocksize_bits = default_blocksize;
 852:sieve_extend.c ****     if (option_tunelevel) {
 14093              		.loc 1 852 15 view .LVU4537
 14094 03df 41BE0000 		mov	r14d, 262144	# best_result$blocksize_bits,
 14094      0400
 14095              	# sieve_extend.c:853:     if (option_tunelevel) {
 14096              		.loc 1 853 8 view .LVU4538
 14097 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_480
 14098 03e8 0F858D02 		jne	.L1298	#,
 14098      0000
 14099              	.LVL810:
 14100              	.L1210:
 14101              	.LBB904:
 854:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 855:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 856:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 857:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 858:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 859:sieve_extend.c ****     }
 860:sieve_extend.c **** 
 861:sieve_extend.c ****     double max_time = default_sieve_duration;
 862:sieve_extend.c ****     struct timespec start_time,end_time;
 863:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 864:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 865:sieve_extend.c ****         counter_t passes = 0;
 14102              		.loc 1 865 9 is_stmt 1 view .LVU4539
 866:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 14103              		.loc 1 866 9 view .LVU4540
 867:sieve_extend.c ****         double elapsed_time = 0;
 14104              		.loc 1 867 9 view .LVU4541
 868:sieve_extend.c ****         struct sieve_t *sieve;
 14105              		.loc 1 868 9 view .LVU4542
 869:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 14106              		.loc 1 869 9 view .LVU4543
GAS LISTING /tmp/ccFOD2R4.s 			page 373


 14107 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp452,
 14107      B0000000 
 14108 03f6 BF010000 		mov	edi, 1	#,
 14108      00
 14109 03fb E8000000 		call	clock_gettime@PLT	#
 14109      00
 14110              	.LVL811:
 870:sieve_extend.c ****         while (elapsed_time <= max_time) {
 14111              		.loc 1 870 9 view .LVU4544
 14112              		.loc 1 870 15 view .LVU4545
 14113              	# sieve_extend.c:865:         counter_t passes = 0;
 865:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 14114              		.loc 1 865 19 is_stmt 0 view .LVU4546
 14115 0400 4531E4   		xor	r12d, r12d	# passes
 14116 0403 4C8DAC24 		lea	r13, 192[rsp]	# tmp479,
 14116      C0000000 
 14117              	.LVL812:
 14118              	.L1211:
 871:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14119              		.loc 1 871 13 is_stmt 1 view .LVU4547
 14120              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 14121              		.loc 1 871 21 is_stmt 0 view .LVU4548
 14122 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 14122      A0000000 
 14123 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 14124              	# sieve_extend.c:873:             passes++;
 872:sieve_extend.c ****             sieve_delete(sieve);
 873:sieve_extend.c ****             passes++;
 14125              		.loc 1 873 19 view .LVU4549
 14126 0416 4983C401 		add	r12, 1	# passes,
 14127              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 871:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14128              		.loc 1 871 21 view .LVU4550
 14129 041a E8000000 		call	sieve_shake	#
 14129      00
 14130              	.LVL813:
 14131              	.LBB905:
 14132              	.LBB906:
 14133              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 14134              		.loc 1 112 5 view .LVU4551
 14135 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_146->bitstorage
 14136              	.LBE906:
 14137              	.LBE905:
 14138              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 871:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14139              		.loc 1 871 21 view .LVU4552
 14140 0422 4989C7   		mov	r15, rax	# sieve, tmp547
 14141              	.LVL814:
 872:sieve_extend.c ****             sieve_delete(sieve);
 14142              		.loc 1 872 13 is_stmt 1 view .LVU4553
 14143              	.LBB910:
 14144              	.LBI905:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 14145              		.loc 1 111 13 view .LVU4554
 14146              	.LBB907:
 112:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/ccFOD2R4.s 			page 374


 14147              		.loc 1 112 5 view .LVU4555
 14148 0425 E8000000 		call	free@PLT	#
 14148      00
 14149              	.LVL815:
 113:sieve_extend.c **** }
 14150              		.loc 1 113 5 view .LVU4556
 14151 042a 4C89FF   		mov	rdi, r15	#, sieve
 14152 042d E8000000 		call	free@PLT	#
 14152      00
 14153              	.LVL816:
 113:sieve_extend.c **** }
 14154              		.loc 1 113 5 is_stmt 0 view .LVU4557
 14155              	.LBE907:
 14156              	.LBE910:
 14157              		.loc 1 873 13 is_stmt 1 view .LVU4558
 874:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14158              		.loc 1 874 13 view .LVU4559
 14159 0432 4C89EE   		mov	rsi, r13	#, tmp479
 14160 0435 BF010000 		mov	edi, 1	#,
 14160      00
 14161 043a E8000000 		call	clock_gettime@PLT	#
 14161      00
 14162              	.LVL817:
 875:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 14163              		.loc 1 875 13 view .LVU4560
 14164              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14165              		.loc 1 875 62 is_stmt 0 view .LVU4561
 14166 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp455, end_time.tv_nsec
 14166      AC24C800 
 14166      0000
 14167              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14168              		.loc 1 875 68 view .LVU4562
 14169 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp456, start_time.tv_sec
 14169      9424B000 
 14169      0000
 14170              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14171              		.loc 1 875 108 view .LVU4563
 14172 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp458, start_time.tv_nsec
 14172      8424B800 
 14172      0000
 14173              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14174              		.loc 1 875 44 view .LVU4564
 14175 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp459, end_time.tv_sec
 14175      8C24C000 
 14175      0000
 14176              	# sieve_extend.c:870:         while (elapsed_time <= max_time) {
 870:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14177              		.loc 1 870 15 view .LVU4565
 14178 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp654,
 14178      00000000 
 14179 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _308, tmp456,
 14179      2D000000 
 14179      00
 14180 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _309, tmp459,
 14180      05000000 
 14180      00
 14181              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
GAS LISTING /tmp/ccFOD2R4.s 			page 375


 14182              		.loc 1 875 26 view .LVU4566
 14183 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _308, _309
 14183      C0
 14184              	.LVL818:
 870:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14185              		.loc 1 870 15 is_stmt 1 view .LVU4567
 14186 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp654, elapsed_time
 14187 048a 0F828500 		jb	.L1283	#,
 14187      0000
 14188              	.LVL819:
 871:sieve_extend.c ****             sieve_delete(sieve);
 14189              		.loc 1 871 13 view .LVU4568
 14190              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 871:sieve_extend.c ****             sieve_delete(sieve);
 14191              		.loc 1 871 21 is_stmt 0 view .LVU4569
 14192 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 14192      A0000000 
 14193 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 14194              	# sieve_extend.c:873:             passes++;
 873:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14195              		.loc 1 873 19 view .LVU4570
 14196 049b 4983C401 		add	r12, 1	# passes,
 14197              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 871:sieve_extend.c ****             sieve_delete(sieve);
 14198              		.loc 1 871 21 view .LVU4571
 14199 049f E8000000 		call	sieve_shake	#
 14199      00
 14200              	.LVL820:
 14201              	.LBB911:
 14202              	.LBB908:
 14203              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 14204              		.loc 1 112 5 view .LVU4572
 14205 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_146->bitstorage
 14206              	.LBE908:
 14207              	.LBE911:
 14208              	# sieve_extend.c:871:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 871:sieve_extend.c ****             sieve_delete(sieve);
 14209              		.loc 1 871 21 view .LVU4573
 14210 04a7 4889C5   		mov	rbp, rax	# sieve, tmp549
 872:sieve_extend.c ****             passes++;
 14211              		.loc 1 872 13 is_stmt 1 view .LVU4574
 14212              	.LVL821:
 14213              	.LBB912:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 14214              		.loc 1 111 13 view .LVU4575
 14215              	.LBB909:
 112:sieve_extend.c ****     free(sieve);
 14216              		.loc 1 112 5 view .LVU4576
 14217 04aa E8000000 		call	free@PLT	#
 14217      00
 14218              	.LVL822:
 113:sieve_extend.c **** }
 14219              		.loc 1 113 5 view .LVU4577
 14220 04af 4889EF   		mov	rdi, rbp	#, sieve
 14221 04b2 E8000000 		call	free@PLT	#
 14221      00
GAS LISTING /tmp/ccFOD2R4.s 			page 376


 14222              	.LVL823:
 113:sieve_extend.c **** }
 14223              		.loc 1 113 5 is_stmt 0 view .LVU4578
 14224              	.LBE909:
 14225              	.LBE912:
 873:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14226              		.loc 1 873 13 is_stmt 1 view .LVU4579
 874:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 14227              		.loc 1 874 13 view .LVU4580
 14228 04b7 4C89EE   		mov	rsi, r13	#, tmp479
 14229 04ba BF010000 		mov	edi, 1	#,
 14229      00
 14230 04bf E8000000 		call	clock_gettime@PLT	#
 14230      00
 14231              	.LVL824:
 14232              		.loc 1 875 13 view .LVU4581
 14233              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14234              		.loc 1 875 62 is_stmt 0 view .LVU4582
 14235 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp532, end_time.tv_nsec
 14235      9C24C800 
 14235      0000
 14236              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14237              		.loc 1 875 68 view .LVU4583
 14238 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp533, start_time.tv_sec
 14238      A424B000 
 14238      0000
 14239              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14240              		.loc 1 875 108 view .LVU4584
 14241 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp535, start_time.tv_nsec
 14241      AC24B800 
 14241      0000
 14242              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14243              		.loc 1 875 44 view .LVU4585
 14244 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp536, end_time.tv_sec
 14244      B424C000 
 14244      0000
 14245              	# sieve_extend.c:870:         while (elapsed_time <= max_time) {
 870:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14246              		.loc 1 870 15 view .LVU4586
 14247 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp661,
 14247      00000000 
 14248 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _308, tmp533,
 14248      1D000000 
 14248      00
 14249 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _309, tmp536,
 14249      2D000000 
 14249      00
 14250              	# sieve_extend.c:875:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14251              		.loc 1 875 26 view .LVU4587
 14252 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _308, _309
 14252      C5
 14253              	.LVL825:
 870:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14254              		.loc 1 870 15 is_stmt 1 view .LVU4588
 14255 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp661, elapsed_time
 14256 050f 0F83F6FE 		jnb	.L1211	#,
 14256      FFFF
GAS LISTING /tmp/ccFOD2R4.s 			page 377


 14257              	.L1283:
 876:sieve_extend.c ****         }
 877:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 14258              		.loc 1 877 9 view .LVU4589
 14259              	.LVL826:
 14260              	.LBB913:
 14261              	.LBI913:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14262              		.loc 3 105 1 view .LVU4590
 14263              	.LBB914:
 14264              		.loc 3 107 3 view .LVU4591
 14265              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14266              		.loc 3 107 10 is_stmt 0 view .LVU4592
 14267 0515 4C89E2   		mov	rdx, r12	#, passes
 14268 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 14268      000000
 14269 051f BF010000 		mov	edi, 1	#,
 14269      00
 14270 0524 B8010000 		mov	eax, 1	#,
 14270      00
 14271 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
 14271      2428
 14272 052f E8000000 		call	__printf_chk@PLT	#
 14272      00
 14273              	.LVL827:
 14274              		.loc 3 107 10 view .LVU4593
 14275              	.LBE914:
 14276              	.LBE913:
 878:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 14277              		.loc 1 878 9 is_stmt 1 view .LVU4594
 14278              	# sieve_extend.c:878:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - pe
 14279              		.loc 1 878 12 is_stmt 0 view .LVU4595
 14280 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 14280      00000000 
 14281 053c 0F8FCA00 		jg	.L1299	#,
 14281      0000
 14282              	.LVL828:
 14283              	.L1209:
 14284              		.loc 1 878 12 view .LVU4596
 14285              	.LBE904:
 879:sieve_extend.c ****     }
 880:sieve_extend.c ****     
 881:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 14286              		.loc 1 881 5 is_stmt 1 view .LVU4597
 14287              	# sieve_extend.c:881:     if (option_showMaxFactor > 0) {
 14288              		.loc 1 881 8 is_stmt 0 view .LVU4598
 14289 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 14289      A8000000 
 14289      00
 14290 054b 756D     		jne	.L1300	#,
 14291 054d 0F1F00   		.p2align 4
 14292              		.p2align 3
 14293              	.L1217:
 14294              	.LBB921:
 14295              	.LBB899:
 14296              	.LBB896:
 14297              	.LBB889:
GAS LISTING /tmp/ccFOD2R4.s 			page 378


 845:sieve_extend.c ****             }
 14298              		.loc 1 845 29 is_stmt 1 discriminator 1 view .LVU4599
 14299              	.LBE889:
 14300              	.LBE896:
 14301              	.LBE899:
 14302              	.LBE921:
 14303              	# sieve_extend.c:888: }
 882:sieve_extend.c ****         printf("Show result set:\n");
 883:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 884:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 885:sieve_extend.c ****         sieve_delete(sieve);
 886:sieve_extend.c ****         printf("\n");
 887:sieve_extend.c ****     }
 888:sieve_extend.c **** }
 14304              		.loc 1 888 1 is_stmt 0 discriminator 1 view .LVU4600
 14305 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp582, D.7111
 14305      D8000000 
 14306 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp582, MEM[(<address-space-1> long unsigned int *)40B]
 14306      25280000 
 14306      00
 14307 0561 0F857F0A 		jne	.L1301	#,
 14307      0000
 14308              	# sieve_extend.c:888: }
 14309              		.loc 1 888 1 view .LVU4601
 14310 0567 488DA424 		lea	rsp, 232[rsp]	#,
 14310      E8000000 
 14311              		.cfi_remember_state
 14312              		.cfi_def_cfa_offset 56
 14313 056f 31C0     		xor	eax, eax	#
 14314 0571 5B       		pop	rbx	#
 14315              		.cfi_def_cfa_offset 48
 14316 0572 5D       		pop	rbp	#
 14317              		.cfi_def_cfa_offset 40
 14318 0573 415C     		pop	r12	#
 14319              		.cfi_def_cfa_offset 32
 14320 0575 415D     		pop	r13	#
 14321              		.cfi_def_cfa_offset 24
 14322 0577 415E     		pop	r14	#
 14323              		.cfi_def_cfa_offset 16
 14324 0579 415F     		pop	r15	#
 14325              		.cfi_def_cfa_offset 8
 14326 057b C3       		ret	
 14327              	.LVL829:
 14328              	.L1293:
 14329              		.cfi_restore_state
 833:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 14330              		.loc 1 833 39 is_stmt 1 view .LVU4602
 14331              	.LBB922:
 14332              	.LBI922:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14333              		.loc 3 105 1 view .LVU4603
 14334              	.LBB923:
 14335              		.loc 3 107 3 view .LVU4604
 14336              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14337              		.loc 3 107 10 is_stmt 0 view .LVU4605
 14338 057c 488D3500 		lea	rsi, .LC44[rip]	#,
 14338      000000
GAS LISTING /tmp/ccFOD2R4.s 			page 379


 14339 0583 BF010000 		mov	edi, 1	#,
 14339      00
 14340 0588 31C0     		xor	eax, eax	#
 14341 058a E8000000 		call	__printf_chk@PLT	#
 14341      00
 14342              	.LVL830:
 14343 058f E95BFCFF 		jmp	.L1160	#
 14343      FF
 14344              	.LVL831:
 14345              	.L1164:
 14346              		.loc 3 107 10 view .LVU4606
 14347              	.LBE923:
 14348              	.LBE922:
 14349              	.LBB924:
 794:sieve_extend.c ****             }
 14350              		.loc 1 794 17 is_stmt 1 view .LVU4607
 14351              	.LBB851:
 14352              	.LBI851:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14353              		.loc 3 98 1 view .LVU4608
 14354              	.LBB852:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14355              		.loc 3 100 3 view .LVU4609
 14356              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14357              		.loc 3 100 10 is_stmt 0 view .LVU4610
 14358 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 14359 0597 488D1500 		lea	rdx, .LC31[rip]	#,
 14359      000000
 14360              	.LVL832:
 14361              	.L1286:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14362              		.loc 3 100 10 view .LVU4611
 14363              	.LBE852:
 14364              	.LBE851:
 14365              	.LBB853:
 14366              	.LBB854:
 14367 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14367      000000
 14368 05a5 BE010000 		mov	esi, 1	#,
 14368      00
 14369 05aa 31C0     		xor	eax, eax	#
 14370 05ac E8000000 		call	__fprintf_chk@PLT	#
 14370      00
 14371              	.LVL833:
 14372              	.L1287:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14373              		.loc 3 100 10 view .LVU4612
 14374              	.LBE854:
 14375              	.LBE853:
 802:sieve_extend.c ****             }
 14376              		.loc 1 802 80 is_stmt 1 view .LVU4613
 14377 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 14378 05b5 E8000000 		call	usage	#
 14378      00
 14379              	.LVL834:
 14380              	.L1300:
GAS LISTING /tmp/ccFOD2R4.s 			page 380


 802:sieve_extend.c ****             }
 14381              		.loc 1 802 80 is_stmt 0 view .LVU4614
 14382              	.LBE924:
 14383              	.LBB925:
 882:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 14384              		.loc 1 882 9 is_stmt 1 view .LVU4615
 14385              	.LBB926:
 14386              	.LBI926:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14387              		.loc 3 105 1 view .LVU4616
 14388              	.LBB927:
 14389              		.loc 3 107 3 view .LVU4617
 14390              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14391              		.loc 3 107 10 is_stmt 0 view .LVU4618
 14392 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 14392      000000
 14393 05c1 E8000000 		call	puts@PLT	#
 14393      00
 14394              	.LVL835:
 14395              		.loc 3 107 10 view .LVU4619
 14396              	.LBE927:
 14397              	.LBE926:
 883:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14398              		.loc 1 883 9 is_stmt 1 view .LVU4620
 14399              	# sieve_extend.c:883:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 883:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14400              		.loc 1 883 33 is_stmt 0 view .LVU4621
 14401 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 14401      A0000000 
 14402 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 14403 05d1 E8000000 		call	sieve_shake	#
 14403      00
 14404              	.LVL836:
 14405              	# sieve_extend.c:884:         show_primes(sieve, option_showMaxFactor);
 884:sieve_extend.c ****         sieve_delete(sieve);
 14406              		.loc 1 884 9 view .LVU4622
 14407 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 14407      A8000000 
 14408              	# sieve_extend.c:883:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 883:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14409              		.loc 1 883 33 view .LVU4623
 14410 05de 4989C6   		mov	r14, rax	# sieve, tmp548
 14411              	.LVL837:
 884:sieve_extend.c ****         sieve_delete(sieve);
 14412              		.loc 1 884 9 is_stmt 1 view .LVU4624
 14413 05e1 488D7008 		lea	rsi, 8[rax]	# tmp474,
 14414 05e5 4889C7   		mov	rdi, rax	#, sieve
 14415 05e8 E8000000 		call	show_primes.isra.0	#
 14415      00
 14416              	.LVL838:
 885:sieve_extend.c ****         printf("\n");
 14417              		.loc 1 885 9 view .LVU4625
 14418              	.LBB928:
 14419              	.LBI928:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 14420              		.loc 1 111 13 view .LVU4626
 14421              	.LBB929:
GAS LISTING /tmp/ccFOD2R4.s 			page 381


 112:sieve_extend.c ****     free(sieve);
 14422              		.loc 1 112 5 view .LVU4627
 14423 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_151->bitstorage
 14424 05f0 E8000000 		call	free@PLT	#
 14424      00
 14425              	.LVL839:
 113:sieve_extend.c **** }
 14426              		.loc 1 113 5 view .LVU4628
 14427 05f5 4C89F7   		mov	rdi, r14	#, sieve
 14428 05f8 E8000000 		call	free@PLT	#
 14428      00
 14429              	.LVL840:
 113:sieve_extend.c **** }
 14430              		.loc 1 113 5 is_stmt 0 view .LVU4629
 14431              	.LBE929:
 14432              	.LBE928:
 886:sieve_extend.c ****     }
 14433              		.loc 1 886 9 is_stmt 1 view .LVU4630
 14434              	.LBB930:
 14435              	.LBI930:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14436              		.loc 3 105 1 view .LVU4631
 14437              	.LBB931:
 14438              		.loc 3 107 3 view .LVU4632
 14439              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14440              		.loc 3 107 10 is_stmt 0 view .LVU4633
 14441 05fd BF0A0000 		mov	edi, 10	#,
 14441      00
 14442 0602 E8000000 		call	putchar@PLT	#
 14442      00
 14443              	.LVL841:
 14444 0607 E944FFFF 		jmp	.L1217	#
 14444      FF
 14445              	.LVL842:
 14446              	.L1299:
 14447              		.loc 3 107 10 view .LVU4634
 14448              	.LBE931:
 14449              	.LBE930:
 14450              	.LBE925:
 14451              	.LBB932:
 878:sieve_extend.c ****     }
 14452              		.loc 1 878 39 is_stmt 1 discriminator 1 view .LVU4635
 14453              	.LBB915:
 14454              	.LBI915:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14455              		.loc 3 105 1 discriminator 1 view .LVU4636
 14456              	.LBB916:
 14457              		.loc 3 107 3 discriminator 1 view .LVU4637
 14458              	.LBE916:
 14459              	.LBE915:
 14460              	# sieve_extend.c:878:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - pe
 878:sieve_extend.c ****     }
 14461              		.loc 1 878 39 is_stmt 0 discriminator 1 view .LVU4638
 14462 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r12	# tmp462, passes
 14462      C4
 14463 0611 4D85E4   		test	r12, r12	# passes
 14464 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
GAS LISTING /tmp/ccFOD2R4.s 			page 382


 14464      2428
 14465 061a 7918     		jns	.L1214	#,
 14466 061c 4C89E6   		mov	rsi, r12	# tmp464, passes
 14467 061f 4C89E2   		mov	rdx, r12	# tmp465, passes
 14468 0622 48D1EE   		shr	rsi	# tmp464
 14469 0625 83E201   		and	edx, 1	# tmp465,
 14470 0628 4809D6   		or	rsi, rdx	# tmp528, tmp465
 14471 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rsi	# tmp463, tmp528
 14471      FE
 14472 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp462, tmp463, tmp463
 14473              	.L1214:
 878:sieve_extend.c ****     }
 14474              		.loc 1 878 39 discriminator 1 view .LVU4639
 14475 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp466, tmp462, elapsed_time
 14476              	# sieve_extend.c:878:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - pe
 878:sieve_extend.c ****     }
 14477              		.loc 1 878 95 discriminator 1 view .LVU4640
 14478 0638 4F8D14A4 		lea	r10, [r12+r12*4]	# tmp467,
 14479              	# sieve_extend.c:878:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - pe
 878:sieve_extend.c ****     }
 14480              		.loc 1 878 39 discriminator 1 view .LVU4641
 14481 063c 4D85D2   		test	r10, r10	# tmp467
 14482 063f C4C1E32A 		vcvtsi2sd	xmm3, xmm3, r10	# tmp468, tmp467
 14482      DA
 14483 0644 7916     		jns	.L1216	#,
 14484 0646 4C89D1   		mov	rcx, r10	# tmp470, tmp467
 14485 0649 4183E201 		and	r10d, 1	# tmp471,
 14486 064d 48D1E9   		shr	rcx	# tmp470
 14487 0650 4C09D1   		or	rcx, r10	# tmp529, tmp471
 14488 0653 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, rcx	# tmp469, tmp529
 14488      E1
 14489 0658 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp468, tmp469, tmp469
 14490              	.L1216:
 14491 065c C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp472, tmp468, elapsed_time
 14492              	.LBB918:
 14493              	.LBB917:
 14494              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14495              		.loc 3 107 10 discriminator 1 view .LVU4642
 14496 0660 488D3500 		lea	rsi, .LC61[rip]	#,
 14496      000000
 14497 0667 BF010000 		mov	edi, 1	#,
 14497      00
 14498 066c B8020000 		mov	eax, 2	#,
 14498      00
 14499 0671 E8000000 		call	__printf_chk@PLT	#
 14499      00
 14500              	.LVL843:
 14501 0676 E9C7FEFF 		jmp	.L1209	#
 14501      FF
 14502              	.LVL844:
 14503              	.L1298:
 14504              		.loc 3 107 10 discriminator 1 view .LVU4643
 14505              	.LBE917:
 14506              	.LBE918:
 14507              	.LBE932:
 14508              	.LBB933:
 854:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
GAS LISTING /tmp/ccFOD2R4.s 			page 383


 14509              		.loc 1 854 9 is_stmt 1 view .LVU4644
 14510              	# sieve_extend.c:854:         tuning_result_type tuning_result = tune(option_tunelevel, option_maxF
 854:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 14511              		.loc 1 854 44 is_stmt 0 view .LVU4645
 14512 067b 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 14512      98000000 
 14513 0683 4183E801 		sub	r8d, 1	#,
 14514 0687 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 14514      A0000000 
 14515 068f 4183F802 		cmp	r8d, 2	# _212,
 14516 0693 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 14516      58
 14517 0698 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 14517      78
 14518              	.LVL845:
 14519              	.LBB934:
 14520              	.LBI934:
 659:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 14521              		.loc 1 659 27 is_stmt 1 view .LVU4646
 14522              	.LBB935:
 660:sieve_extend.c **** 
 14523              		.loc 1 660 5 view .LVU4647
 662:sieve_extend.c ****     best_blocksize_bits = 0;
 14524              		.loc 1 662 5 view .LVU4648
 663:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 14525              		.loc 1 663 5 view .LVU4649
 664:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 14526              		.loc 1 664 5 view .LVU4650
 665:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 14527              		.loc 1 665 5 view .LVU4651
 666:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 14528              		.loc 1 666 5 view .LVU4652
 667:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 14529              		.loc 1 667 5 view .LVU4653
 668:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 14530              		.loc 1 668 5 view .LVU4654
 669:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 14531              		.loc 1 669 5 view .LVU4655
 670:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 14532              		.loc 1 670 5 view .LVU4656
 671:sieve_extend.c ****     double sample_duration = default_sample_duration;
 14533              		.loc 1 671 5 view .LVU4657
 672:sieve_extend.c **** 
 14534              		.loc 1 672 5 view .LVU4658
 675:sieve_extend.c ****         case 1:
 14535              		.loc 1 675 5 view .LVU4659
 14536 069d 0F86B207 		jbe	.L1218	#,
 14536      0000
 14537 06a3 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 14537      00000000 
 14538 06ab 41BC0400 		mov	r12d, 4	# smallstep_faster_steps,
 14538      0000
 14539 06b1 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 14539      68050000 
 14539      00
 14540 06ba 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 14540      60800000 
GAS LISTING /tmp/ccFOD2R4.s 			page 384


 14540      00
 14541 06c3 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 14541      80000000 
 14541      20000000 
 14542 06cf 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 14542      88000000 
 14542      04000000 
 14543 06db C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
 14543      2470
 14544              	.LVL846:
 14545              	.L1188:
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14546              		.loc 1 704 5 view .LVU4660
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14547              		.loc 1 705 5 view .LVU4661
 14548              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14549              		.loc 1 704 33 is_stmt 0 view .LVU4662
 14550 06e1 41BA4000 		mov	r10d, 64	# tmp352,
 14550      0000
 14551 06e7 31D2     		xor	edx, edx	# tmp351
 14552 06e9 4C89D0   		mov	rax, r10	# tmp350, tmp352
 14553              	# sieve_extend.c:705:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14554              		.loc 1 705 41 view .LVU4663
 14555 06ec 31ED     		xor	ebp, ebp	# tuning_results
 14556              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14557              		.loc 1 704 33 view .LVU4664
 14558 06ee 49F7F4   		div	r12	# smallstep_faster_steps
 14559              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14560              		.loc 1 704 254 view .LVU4665
 14561 06f1 31D2     		xor	edx, edx	# tmp360
 14562              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14563              		.loc 1 704 83 view .LVU4666
 14564 06f3 488D7801 		lea	rdi, 1[rax]	# tmp357,
 14565              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14566              		.loc 1 704 254 view .LVU4667
 14567 06f7 B8001000 		mov	eax, 4096	# tmp361,
 14567      00
 14568 06fc 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 14568      60
 14569              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14570              		.loc 1 704 90 view .LVU4668
 14571 0701 31D2     		xor	edx, edx	# tmp369
 14572              	# sieve_extend.c:705:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14573              		.loc 1 705 41 view .LVU4669
 14574 0703 480FAFF8 		imul	rdi, rax	# tmp366, tmp359
 14575              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14576              		.loc 1 704 90 view .LVU4670
 14577 0707 4C89D0   		mov	rax, r10	# tmp352, tmp352
GAS LISTING /tmp/ccFOD2R4.s 			page 385


 14578 070a 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 14578      88000000 
 14579              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14580              		.loc 1 704 148 view .LVU4671
 14581 0712 31D2     		xor	edx, edx	# tmp379
 14582              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14583              		.loc 1 704 141 view .LVU4672
 14584 0714 4883C001 		add	rax, 1	# tmp375,
 14585              	# sieve_extend.c:705:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14586              		.loc 1 705 41 view .LVU4673
 14587 0718 480FAFF8 		imul	rdi, rax	# tmp376, tmp375
 14588              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14589              		.loc 1 704 148 view .LVU4674
 14590 071c B8000100 		mov	eax, 256	# tmp380,
 14590      00
 14591 0721 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 14591      80000000 
 14592              	# sieve_extend.c:704:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 704:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 14593              		.loc 1 704 201 view .LVU4675
 14594 0729 4883C001 		add	rax, 1	# tmp385,
 14595              	# sieve_extend.c:705:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14596              		.loc 1 705 41 view .LVU4676
 14597 072d 480FAFF8 		imul	rdi, rax	# tmp386, tmp385
 14598 0731 48C1E708 		sal	rdi, 8	# tmp386,
 14599 0735 E8000000 		call	malloc@PLT	#
 14599      00
 14600              	.LVL847:
 14601 073a C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 14602 073e 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, tmp546
 14602      38
 14603              	.LVL848:
 706:sieve_extend.c ****     counter_t tuning_result_index=0;
 14604              		.loc 1 706 5 is_stmt 1 view .LVU4677
 707:sieve_extend.c ****     
 14605              		.loc 1 707 5 view .LVU4678
 709:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 14606              		.loc 1 709 5 view .LVU4679
 14607              	.LBB936:
 709:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 14608              		.loc 1 709 10 view .LVU4680
 709:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 14609              		.loc 1 709 42 view .LVU4681
 14610              	.LBB937:
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14611              		.loc 1 710 62 view .LVU4682
 14612              	.LBE937:
 14613              	.LBE936:
 14614              	# sieve_extend.c:705:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 705:sieve_extend.c ****     counter_t tuning_results=0;
 14615              		.loc 1 705 41 is_stmt 0 view .LVU4683
 14616 0743 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
GAS LISTING /tmp/ccFOD2R4.s 			page 386


 14616      50000000 
 14616      00
 14617 074c 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 14617      48000000 
 14617      00
 14618 0755 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 14618      40000000 
 14618      00
 14619 075e 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 14619      28000000 
 14619      00
 14620 0767 C5FB114C 		vmovsd	QWORD PTR 48[rsp], xmm1	# %sfp, best_avg
 14620      2430
 14621              	.LVL849:
 14622 076d 0F1F00   		.p2align 4
 14623              		.p2align 3
 14624              	.L1190:
 14625              	.LBB966:
 14626              	.LBB964:
 14627              	.LBB938:
 711:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 14628              		.loc 1 711 67 is_stmt 1 view .LVU4684
 14629              	.LBB939:
 14630              	# sieve_extend.c:712:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14631              		.loc 1 712 32 is_stmt 0 view .LVU4685
 14632 0770 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 14632      28
 14633              	.LVL850:
 14634 0775 66662E0F 		.p2align 4
 14634      1F840000 
 14634      000000
 14635              		.p2align 3
 14636              	.L1200:
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14637              		.loc 1 712 50 is_stmt 1 view .LVU4686
 14638              	.LBB940:
 14639              	# sieve_extend.c:713:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14640              		.loc 1 713 36 is_stmt 0 view .LVU4687
 14641 0780 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 14641      06000000 
 14642              	.LBE940:
 14643              	# sieve_extend.c:712:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14644              		.loc 1 712 32 view .LVU4688
 14645 0788 41BD0001 		mov	r13d, 256	# blocksize_kb,
 14645      0000
 14646              	.LVL851:
 14647 078e 6690     		.p2align 4
 14648              		.p2align 3
 14649              	.L1198:
 14650              	.LBB960:
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14651              		.loc 1 713 49 is_stmt 1 view .LVU4689
 14652 0790 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tuning_result, %sfp
 14652      38
GAS LISTING /tmp/ccFOD2R4.s 			page 387


 14653 0795 4C8D5C6D 		lea	r11, 0[rbp+rbp*2]	# tmp413,
 14653      00
 14654              	# sieve_extend.c:713:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14655              		.loc 1 713 134 is_stmt 0 view .LVU4690
 14656 079a 4C89EB   		mov	rbx, r13	# ivtmp.626, blocksize_kb
 14657 079d 49C1E305 		sal	r11, 5	# tmp414,
 14658 07a1 48C1E30D 		sal	rbx, 13	# ivtmp.626,
 14659 07a5 4F8D341C 		lea	r14, [r12+r11]	# ivtmp.625,
 14660              	# sieve_extend.c:713:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14661              		.loc 1 713 36 view .LVU4691
 14662 07a9 4531E4   		xor	r12d, r12d	# free_bits
 14663 07ac EB43     		jmp	.L1196	#
 14664              	.LVL852:
 14665 07ae 6690     		.p2align 4,,7
 14666              		.p2align 3
 14667              	.L1193:
 14668              	.LBB941:
 730:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 14669              		.loc 1 730 29 is_stmt 1 view .LVU4692
 731:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 14670              		.loc 1 731 29 view .LVU4693
 732:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 14671              		.loc 1 732 29 view .LVU4694
 733:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 14672              		.loc 1 733 29 view .LVU4695
 734:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 14673              		.loc 1 734 29 view .LVU4696
 735:sieve_extend.c ****                         }
 14674              		.loc 1 735 29 view .LVU4697
 14675              	# sieve_extend.c:735:                             if (option_verboselevel >=2) { printf(".(>)"); tu
 735:sieve_extend.c ****                         }
 14676              		.loc 1 735 32 is_stmt 0 view .LVU4698
 14677 07b0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 14677      01
 14678 07b5 0F8FD503 		jg	.L1302	#,
 14678      0000
 735:sieve_extend.c ****                         }
 14679              		.loc 1 735 32 view .LVU4699
 14680 07bb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 14680      28
 14681 07c0 4C897C24 		mov	QWORD PTR 80[rsp], r15	# %sfp, vectorstep_faster
 14681      50
 14682              	# sieve_extend.c:730:                             best_avg = tuning_result[tuning_result_index].avg
 730:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 14683              		.loc 1 730 38 view .LVU4700
 14684 07c5 C5FB115C 		vmovsd	QWORD PTR 48[rsp], xmm3	# %sfp, _258
 14684      2430
 14685              	# sieve_extend.c:731:                             best_blocksize_bits = blocksize_bits;
 731:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 14686              		.loc 1 731 49 view .LVU4701
 14687 07cb 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, ivtmp.626
 14687      40
 14688 07d0 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, mediumstep_faster
 14688      48
 14689              	.LVL853:
GAS LISTING /tmp/ccFOD2R4.s 			page 388


 14690              	.L1191:
 738:sieve_extend.c ****                     }
 14691              		.loc 1 738 25 is_stmt 1 view .LVU4702
 738:sieve_extend.c ****                     }
 14692              		.loc 1 738 25 is_stmt 0 view .LVU4703
 14693              	.LBE941:
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14694              		.loc 1 713 141 is_stmt 1 view .LVU4704
 14695              	# sieve_extend.c:713:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14696              		.loc 1 713 151 is_stmt 0 view .LVU4705
 14697 07d5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 14697      60
 14698 07da 4983C660 		add	r14, 96	# ivtmp.625,
 14699 07de 4901CC   		add	r12, rcx	# free_bits, freebits_steps
 14700              	.LVL854:
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14701              		.loc 1 713 49 is_stmt 1 view .LVU4706
 14702 07e1 4829CB   		sub	rbx, rcx	# ivtmp.626, freebits_steps
 14703              	.LVL855:
 14704              	# sieve_extend.c:713:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 713:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 14705              		.loc 1 713 21 is_stmt 0 view .LVU4707
 14706 07e4 4981FCFF 		cmp	r12, 4095	# free_bits,
 14706      0F0000
 14707 07eb 0F87DF00 		ja	.L1192	#,
 14707      0000
 14708              	.LVL856:
 14709              	.L1196:
 14710              	.LBB958:
 714:sieve_extend.c **** 
 14711              		.loc 1 714 25 is_stmt 1 view .LVU4708
 717:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 14712              		.loc 1 717 25 view .LVU4709
 14713              	# sieve_extend.c:718:                         tuning_result[tuning_result_index].maxints = maxints;
 718:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 14714              		.loc 1 718 68 is_stmt 0 view .LVU4710
 14715 07f1 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 14715      78
 14716 07f6 4889EE   		mov	rsi, rbp	# tuning_results, tuning_results
 14717              	# sieve_extend.c:720:                         tuning_result[tuning_result_index].sample_max = sampl
 720:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 14718              		.loc 1 720 71 view .LVU4711
 14719 07f9 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 14719      68
 14720              	# sieve_extend.c:717:                         tuning_results++;
 717:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 14721              		.loc 1 717 39 view .LVU4712
 14722 07fe 4883C501 		add	rbp, 1	# tuning_results,
 14723              	.LVL857:
 718:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 14724              		.loc 1 718 25 is_stmt 1 view .LVU4713
 14725              	# sieve_extend.c:725:                         tuning_result[tuning_result_index].mediumstep_faster 
 725:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 14726              		.loc 1 725 78 is_stmt 0 view .LVU4714
 14727 0802 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 14727      28
GAS LISTING /tmp/ccFOD2R4.s 			page 389


 14728              	# sieve_extend.c:727:                         tune_benchmark(tuning_result, tuning_result_index);
 727:sieve_extend.c **** 
 14729              		.loc 1 727 25 view .LVU4715
 14730 0807 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 14730      38
 14731              	# sieve_extend.c:719:                         tuning_result[tuning_result_index].sample_duration = 
 719:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 14732              		.loc 1 719 76 view .LVU4716
 14733 080c C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 14733      2470
 14734              	# sieve_extend.c:718:                         tuning_result[tuning_result_index].maxints = maxints;
 718:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 14735              		.loc 1 718 68 view .LVU4717
 14736 0812 49890E   		mov	QWORD PTR [r14], rcx	# MEM[base: _507, offset: 0B], option_maxFactor.42_64
 719:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 14737              		.loc 1 719 25 is_stmt 1 view .LVU4718
 14738              	# sieve_extend.c:720:                         tuning_result[tuning_result_index].sample_max = sampl
 720:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 14739              		.loc 1 720 71 is_stmt 0 view .LVU4719
 14740 0815 4D894E38 		mov	QWORD PTR 56[r14], r9	# MEM[base: _507, offset: 56B], sample_max
 14741              	# sieve_extend.c:721:                         tuning_result[tuning_result_index].blocksize_kb = blo
 721:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 14742              		.loc 1 721 73 view .LVU4720
 14743 0819 4D896E10 		mov	QWORD PTR 16[r14], r13	# MEM[base: _507, offset: 16B], blocksize_kb
 14744              	# sieve_extend.c:722:                         tuning_result[tuning_result_index].free_bits = free_b
 722:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 14745              		.loc 1 722 70 view .LVU4721
 14746 081d 4D896618 		mov	QWORD PTR 24[r14], r12	# MEM[base: _507, offset: 24B], free_bits
 14747              	# sieve_extend.c:723:                         tuning_result[tuning_result_index].blocksize_bits = b
 723:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 14748              		.loc 1 723 75 view .LVU4722
 14749 0821 49895E08 		mov	QWORD PTR 8[r14], rbx	# MEM[base: _507, offset: 8B], ivtmp.626
 14750              	# sieve_extend.c:724:                         tuning_result[tuning_result_index].smallstep_faster =
 724:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 14751              		.loc 1 724 77 view .LVU4723
 14752 0825 49C74620 		mov	QWORD PTR 32[r14], 0	# MEM[base: _507, offset: 32B],
 14752      00000000 
 14753              	# sieve_extend.c:725:                         tuning_result[tuning_result_index].mediumstep_faster 
 725:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 14754              		.loc 1 725 78 view .LVU4724
 14755 082d 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _507, offset: 40B], mediumstep_faster
 14756              	# sieve_extend.c:726:                         tuning_result[tuning_result_index].vectorstep_faster 
 726:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 14757              		.loc 1 726 78 view .LVU4725
 14758 0831 4D897E30 		mov	QWORD PTR 48[r14], r15	# MEM[base: _507, offset: 48B], vectorstep_faster
 14759              	# sieve_extend.c:719:                         tuning_result[tuning_result_index].sample_duration = 
 719:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 14760              		.loc 1 719 76 view .LVU4726
 14761 0835 C4C17B11 		vmovsd	QWORD PTR 64[r14], xmm4	# MEM[base: _507, offset: 64B], sample_duration
 14761      6640
 720:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 14762              		.loc 1 720 25 is_stmt 1 view .LVU4727
 721:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 14763              		.loc 1 721 25 view .LVU4728
 722:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 14764              		.loc 1 722 25 view .LVU4729
 723:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
GAS LISTING /tmp/ccFOD2R4.s 			page 390


 14765              		.loc 1 723 25 view .LVU4730
 724:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 14766              		.loc 1 724 25 view .LVU4731
 725:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 14767              		.loc 1 725 25 view .LVU4732
 726:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 14768              		.loc 1 726 25 view .LVU4733
 727:sieve_extend.c **** 
 14769              		.loc 1 727 25 view .LVU4734
 14770 083b E8000000 		call	tune_benchmark	#
 14770      00
 14771              	.LVL858:
 729:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 14772              		.loc 1 729 25 view .LVU4735
 14773              	# sieve_extend.c:729:                         if ( tuning_result[tuning_result_index].avg > best_av
 729:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 14774              		.loc 1 729 64 is_stmt 0 view .LVU4736
 14775 0840 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r14]	# _258, MEM[base: _507, offset: 88B]
 14775      5E58
 14776              	# sieve_extend.c:729:                         if ( tuning_result[tuning_result_index].avg > best_av
 729:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 14777              		.loc 1 729 28 view .LVU4737
 14778 0846 C5F92F5C 		vcomisd	xmm3, QWORD PTR 48[rsp]	# _258, %sfp
 14778      2430
 14779 084c 0F875EFF 		ja	.L1193	#,
 14779      FFFF
 14780              	.L1194:
 737:sieve_extend.c ****                         tuning_result_index++;
 14781              		.loc 1 737 25 is_stmt 1 view .LVU4738
 14782              	# sieve_extend.c:737:                         if (option_verboselevel >= 3) { printf("...."); tunin
 737:sieve_extend.c ****                         tuning_result_index++;
 14783              		.loc 1 737 28 is_stmt 0 view .LVU4739
 14784 0852 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 14784      02
 14785 0857 0F8E78FF 		jle	.L1191	#,
 14785      FFFF
 737:sieve_extend.c ****                         tuning_result_index++;
 14786              		.loc 1 737 57 is_stmt 1 view .LVU4740
 14787              	.LVL859:
 14788              	.LBB942:
 14789              	.LBI942:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14790              		.loc 3 105 1 view .LVU4741
 14791              	.LBB943:
 14792              		.loc 3 107 3 view .LVU4742
 14793              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14794              		.loc 3 107 10 is_stmt 0 view .LVU4743
 14795 085d 488D3500 		lea	rsi, .LC52[rip]	#,
 14795      000000
 14796 0864 BF010000 		mov	edi, 1	#,
 14796      00
 14797 0869 31C0     		xor	eax, eax	#
 14798 086b E8000000 		call	__printf_chk@PLT	#
 14798      00
 14799              	.LVL860:
 14800              		.loc 3 107 10 view .LVU4744
 14801              	.LBE943:
GAS LISTING /tmp/ccFOD2R4.s 			page 391


 14802              	.LBE942:
 737:sieve_extend.c ****                         tuning_result_index++;
 14803              		.loc 1 737 73 is_stmt 1 view .LVU4745
 14804              	.LBB944:
 14805              	.LBI944:
 651:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 14806              		.loc 1 651 20 view .LVU4746
 14807              	.LBB945:
 652:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 14808              		.loc 1 652 5 view .LVU4747
 14809              	.LBB946:
 14810              	.LBI946:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14811              		.loc 3 105 1 view .LVU4748
 14812              	.LBB947:
 14813              		.loc 3 107 3 view .LVU4749
 14814              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14815              		.loc 3 107 10 is_stmt 0 view .LVU4750
 14816 0870 4D8B4E38 		mov	r9, QWORD PTR 56[r14]	# MEM[base: _507, offset: 56B], MEM[base: _507, offset: 56B]
 14817 0874 BF010000 		mov	edi, 1	#,
 14817      00
 14818 0879 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r14]	# MEM[base: _507, offset: 80B], MEM[base: _507, offset: 80B]
 14818      4650
 14819 087f B8030000 		mov	eax, 3	#,
 14819      00
 14820 0884 498B4E10 		mov	rcx, QWORD PTR 16[r14]	# MEM[base: _507, offset: 16B], MEM[base: _507, offset: 16B]
 14821 0888 498B5608 		mov	rdx, QWORD PTR 8[r14]	# MEM[base: _507, offset: 8B], MEM[base: _507, offset: 8B]
 14822 088c 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[base: _507, offset: 56B]
 14822      18
 14823 0891 4D8B4648 		mov	r8, QWORD PTR 72[r14]	# MEM[base: _507, offset: 72B], MEM[base: _507, offset: 72B]
 14824 0895 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _507, offset: 72B]
 14824      10
 14825 089a 498B7630 		mov	rsi, QWORD PTR 48[r14]	# MEM[base: _507, offset: 48B], MEM[base: _507, offset: 48B]
 14826 089e 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _507, offset: 48B]
 14826      08
 14827 08a3 488D3500 		lea	rsi, .LC51[rip]	#,
 14827      000000
 14828 08aa 4D8B5628 		mov	r10, QWORD PTR 40[r14]	# MEM[base: _507, offset: 40B], MEM[base: _507, offset: 40B]
 14829 08ae 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _507, offset: 40B]
 14830 08b2 4D8B4E20 		mov	r9, QWORD PTR 32[r14]	#, MEM[base: _507, offset: 32B]
 14831 08b6 4D8B4618 		mov	r8, QWORD PTR 24[r14]	#, MEM[base: _507, offset: 24B]
 14832 08ba C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r14]	#, MEM[base: _507, offset: 88B]
 14832      5658
 14833 08c0 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r14]	#, MEM[base: _507, offset: 64B]
 14833      4E40
 14834 08c6 E8000000 		call	__printf_chk@PLT	#
 14834      00
 14835              	.LVL861:
 14836              		.loc 3 107 10 view .LVU4751
 14837              	.LBE947:
 14838              	.LBE946:
 14839              	# sieve_extend.c:657: }
 657:sieve_extend.c **** 
 14840              		.loc 1 657 1 view .LVU4752
 14841 08cb E905FFFF 		jmp	.L1191	#
 14841      FF
 14842              	.LVL862:
GAS LISTING /tmp/ccFOD2R4.s 			page 392


 14843              		.p2align 4,,7
 14844              		.p2align 3
 14845              	.L1192:
 657:sieve_extend.c **** 
 14846              		.loc 1 657 1 view .LVU4753
 14847              	.LBE945:
 14848              	.LBE944:
 14849              	.LBE958:
 14850              	.LBE960:
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14851              		.loc 1 712 67 is_stmt 1 view .LVU4754
 14852              	# sieve_extend.c:712:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14853              		.loc 1 712 80 is_stmt 0 view .LVU4755
 14854 08d0 49D1ED   		shr	r13	# blocksize_kb
 14855              	.LVL863:
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14856              		.loc 1 712 50 is_stmt 1 view .LVU4756
 14857              	# sieve_extend.c:712:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 712:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 14858              		.loc 1 712 17 is_stmt 0 view .LVU4757
 14859 08d3 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 14859      01
 14860 08d8 0F85B2FE 		jne	.L1198	#,
 14860      FFFF
 14861              	.LBE939:
 711:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 14862              		.loc 1 711 109 is_stmt 1 view .LVU4758
 14863              	# sieve_extend.c:711:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 711:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 14864              		.loc 1 711 127 is_stmt 0 view .LVU4759
 14865 08de 4C03BC24 		add	r15, QWORD PTR 128[rsp]	# vectorstep_faster, %sfp
 14865      80000000 
 14866              	.LVL864:
 711:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 14867              		.loc 1 711 67 is_stmt 1 view .LVU4760
 14868              	# sieve_extend.c:711:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 711:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 14869              		.loc 1 711 13 is_stmt 0 view .LVU4761
 14870 08e6 4981FF00 		cmp	r15, 256	# vectorstep_faster,
 14870      010000
 14871 08ed 0F868DFE 		jbe	.L1200	#,
 14871      FFFF
 14872              	.LBE938:
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14873              		.loc 1 710 102 is_stmt 1 view .LVU4762
 14874              	# sieve_extend.c:710:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14875              		.loc 1 710 120 is_stmt 0 view .LVU4763
 14876 08f3 4C8BBC24 		mov	r15, QWORD PTR 136[rsp]	# mediumstep_faster_steps, %sfp
 14876      88000000 
 14877              	.LVL865:
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14878              		.loc 1 710 120 view .LVU4764
 14879 08fb 4C017C24 		add	QWORD PTR 40[rsp], r15	# %sfp, mediumstep_faster_steps
 14879      28
 14880              	.LVL866:
GAS LISTING /tmp/ccFOD2R4.s 			page 393


 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14881              		.loc 1 710 120 view .LVU4765
 14882 0900 4C8B6C24 		mov	r13, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 14882      28
 14883              	.LVL867:
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14884              		.loc 1 710 62 is_stmt 1 view .LVU4766
 14885              	# sieve_extend.c:710:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14886              		.loc 1 710 9 is_stmt 0 view .LVU4767
 14887 0905 4983FD40 		cmp	r13, 64	# mediumstep_faster,
 14888 0909 0F8661FE 		jbe	.L1190	#,
 14888      FFFF
 14889              	.LVL868:
 710:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 14890              		.loc 1 710 9 view .LVU4768
 14891              	.LBE964:
 709:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 14892              		.loc 1 709 42 is_stmt 1 view .LVU4769
 14893              	.LBE966:
 744:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 14894              		.loc 1 744 5 view .LVU4770
 14895              	# sieve_extend.c:744:     if (option_verboselevel >= 2) {
 744:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 14896              		.loc 1 744 8 is_stmt 0 view .LVU4771
 14897 090f 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 14897      01
 14898 0914 7E38     		jle	.L1201	#,
 745:sieve_extend.c ****         printf("Best options\n");
 14899              		.loc 1 745 9 is_stmt 1 view .LVU4772
 14900              	.LVL869:
 14901              	.LBB967:
 14902              	.LBI967:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14903              		.loc 3 105 1 view .LVU4773
 14904              	.LBB968:
 14905              		.loc 3 107 3 view .LVU4774
 14906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14907              		.loc 3 107 10 is_stmt 0 view .LVU4775
 14908 0916 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# best_vectorstep_faster, %sfp
 14908      50
 14909 091b BF010000 		mov	edi, 1	#,
 14909      00
 14910 0920 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 14910      48
 14911 0925 4531C0   		xor	r8d, r8d	#
 14912 0928 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	#, %sfp
 14912      40
 14913 092d 4889EA   		mov	rdx, rbp	#, tuning_results
 14914 0930 488D3500 		lea	rsi, .LC53[rip]	#,
 14914      000000
 14915 0937 31C0     		xor	eax, eax	#
 14916 0939 48891C24 		mov	QWORD PTR [rsp], rbx	#, best_vectorstep_faster
 14917 093d E8000000 		call	__printf_chk@PLT	#
 14917      00
 14918              	.LVL870:
 14919              		.loc 3 107 10 view .LVU4776
GAS LISTING /tmp/ccFOD2R4.s 			page 394


 14920              	.LBE968:
 14921              	.LBE967:
 746:sieve_extend.c ****     }
 14922              		.loc 1 746 9 is_stmt 1 view .LVU4777
 14923              	.LBB969:
 14924              	.LBI969:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14925              		.loc 3 105 1 view .LVU4778
 14926              	.LBB970:
 14927              		.loc 3 107 3 view .LVU4779
 14928              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14929              		.loc 3 107 10 is_stmt 0 view .LVU4780
 14930 0942 488D3D00 		lea	rdi, .LC54[rip]	#,
 14930      000000
 14931 0949 E8000000 		call	puts@PLT	#
 14931      00
 14932              	.LVL871:
 14933              	.L1201:
 14934              		.loc 3 107 10 view .LVU4781
 14935              	.LBE970:
 14936              	.LBE969:
 14937              	.LBB971:
 14938              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14939              		.loc 1 764 24 view .LVU4782
 14940 094e 4531E4   		xor	r12d, r12d	# step
 14941              	.LVL872:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14942              		.loc 1 764 24 view .LVU4783
 14943              	.LBE971:
 14944              	.LBB972:
 14945              	# sieve_extend.c:756:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 14946              		.loc 1 756 75 view .LVU4784
 14947 0951 41BF0A00 		mov	r15d, 10	# tmp488,
 14947      0000
 14948 0957 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 14948      68
 14949 095c 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tuning_result, %sfp
 14949      38
 14950              	.LVL873:
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 14951              		.loc 1 756 75 view .LVU4785
 14952 0961 4C896424 		mov	QWORD PTR 48[rsp], r12	# %sfp, step
 14952      30
 14953              	.LVL874:
 14954              	.L1206:
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 14955              		.loc 1 756 75 view .LVU4786
 14956              	.LBE972:
 749:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 14957              		.loc 1 749 11 is_stmt 1 view .LVU4787
 14958 0966 4883FD04 		cmp	rbp, 4	# tuning_results,
 14959 096a 0F861F04 		jbe	.L1303	#,
 14959      0000
 750:sieve_extend.c ****         step++;
 14960              		.loc 1 750 9 view .LVU4788
GAS LISTING /tmp/ccFOD2R4.s 			page 395


 14961 0970 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 14961      000000
 14962 0977 BA600000 		mov	edx, 96	#,
 14962      00
 14963 097c 4889EE   		mov	rsi, rbp	#, tuning_results
 14964 097f 4C89EF   		mov	rdi, r13	#, tuning_result
 14965 0982 E8000000 		call	qsort@PLT	#
 14965      00
 14966              	.LVL875:
 751:sieve_extend.c ****         if (option_verboselevel >= 2) {
 14967              		.loc 1 751 9 view .LVU4789
 752:sieve_extend.c ****             tuning_result_index = 0;
 14968              		.loc 1 752 9 view .LVU4790
 14969              	# sieve_extend.c:751:         step++;
 751:sieve_extend.c ****         if (option_verboselevel >= 2) {
 14970              		.loc 1 751 13 is_stmt 0 view .LVU4791
 14971 0987 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 14971      3001
 14972              	.LVL876:
 14973              	# sieve_extend.c:752:         if (option_verboselevel >= 2) {
 752:sieve_extend.c ****             tuning_result_index = 0;
 14974              		.loc 1 752 12 view .LVU4792
 14975 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 14975      01
 14976 0992 0F8F8502 		jg	.L1202	#,
 14976      0000
 14977              	.L1204:
 762:sieve_extend.c **** 
 14978              		.loc 1 762 9 is_stmt 1 view .LVU4793
 14979              	# sieve_extend.c:762:         tuning_results = tuning_results / 2;
 762:sieve_extend.c **** 
 14980              		.loc 1 762 24 is_stmt 0 view .LVU4794
 14981 0998 48D1ED   		shr	rbp	# tuning_results
 14982              	.LVL877:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14983              		.loc 1 764 9 is_stmt 1 view .LVU4795
 14984              	.LBB981:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14985              		.loc 1 764 14 view .LVU4796
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14986              		.loc 1 764 29 view .LVU4797
 14987              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 14988              		.loc 1 764 24 is_stmt 0 view .LVU4798
 14989 099b 4531E4   		xor	r12d, r12d	# i
 14990 099e 4889E9   		mov	rcx, rbp	# tmp501, tuning_results
 14991 09a1 498D5D38 		lea	rbx, 56[r13]	# ivtmp.607,
 14992 09a5 83E107   		and	ecx, 7	# tmp501,
 14993 09a8 0F84D300 		je	.L1203	#,
 14993      0000
 14994 09ae 4883F901 		cmp	rcx, 1	# tmp501,
 14995 09b2 0F84AA00 		je	.L1261	#,
 14995      0000
 14996 09b8 4883F902 		cmp	rcx, 2	# tmp501,
 14997 09bc 0F848A00 		je	.L1262	#,
 14997      0000
 14998 09c2 4883F903 		cmp	rcx, 3	# tmp501,
GAS LISTING /tmp/ccFOD2R4.s 			page 396


 14999 09c6 746E     		je	.L1263	#,
 15000 09c8 4883F904 		cmp	rcx, 4	# tmp501,
 15001 09cc 7452     		je	.L1264	#,
 15002 09ce 4883F905 		cmp	rcx, 5	# tmp501,
 15003 09d2 7436     		je	.L1265	#,
 15004 09d4 4883F906 		cmp	rcx, 6	# tmp501,
 15005 09d8 741A     		je	.L1266	#,
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15006              		.loc 1 765 13 is_stmt 1 view .LVU4799
 15007 09da 31F6     		xor	esi, esi	#
 15008 09dc 4C89EF   		mov	rdi, r13	#, tuning_result
 15009 09df E8000000 		call	tune_benchmark	#
 15009      00
 15010              	.LVL878:
 766:sieve_extend.c ****         }
 15011              		.loc 1 766 13 view .LVU4800
 15012              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15013              		.loc 1 764 48 is_stmt 0 view .LVU4801
 15014 09e4 41BC0100 		mov	r12d, 1	# i,
 15014      0000
 15015              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15016              		.loc 1 766 41 view .LVU4802
 15017 09ea 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15018              		.loc 1 764 47 is_stmt 1 view .LVU4803
 15019              	.LVL879:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15020              		.loc 1 764 29 view .LVU4804
 15021 09ed 498D9D98 		lea	rbx, 152[r13]	# ivtmp.607,
 15021      000000
 15022              	.L1266:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15023              		.loc 1 765 13 view .LVU4805
 15024 09f4 4C89E6   		mov	rsi, r12	#, i
 15025 09f7 4C89EF   		mov	rdi, r13	#, tuning_result
 15026 09fa E8000000 		call	tune_benchmark	#
 15026      00
 15027              	.LVL880:
 766:sieve_extend.c ****         }
 15028              		.loc 1 766 13 view .LVU4806
 15029              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15030              		.loc 1 764 48 is_stmt 0 view .LVU4807
 15031 09ff 4983C401 		add	r12, 1	# i,
 15032              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15033              		.loc 1 766 41 view .LVU4808
 15034 0a03 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15035              		.loc 1 764 47 is_stmt 1 view .LVU4809
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15036              		.loc 1 764 29 view .LVU4810
 15037 0a06 4883C360 		add	rbx, 96	# ivtmp.607,
 15038              	.L1265:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccFOD2R4.s 			page 397


 15039              		.loc 1 765 13 view .LVU4811
 15040 0a0a 4C89E6   		mov	rsi, r12	#, i
 15041 0a0d 4C89EF   		mov	rdi, r13	#, tuning_result
 15042 0a10 E8000000 		call	tune_benchmark	#
 15042      00
 15043              	.LVL881:
 766:sieve_extend.c ****         }
 15044              		.loc 1 766 13 view .LVU4812
 15045              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15046              		.loc 1 764 48 is_stmt 0 view .LVU4813
 15047 0a15 4983C401 		add	r12, 1	# i,
 15048              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15049              		.loc 1 766 41 view .LVU4814
 15050 0a19 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15051              		.loc 1 764 47 is_stmt 1 view .LVU4815
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15052              		.loc 1 764 29 view .LVU4816
 15053 0a1c 4883C360 		add	rbx, 96	# ivtmp.607,
 15054              	.L1264:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15055              		.loc 1 765 13 view .LVU4817
 15056 0a20 4C89E6   		mov	rsi, r12	#, i
 15057 0a23 4C89EF   		mov	rdi, r13	#, tuning_result
 15058 0a26 E8000000 		call	tune_benchmark	#
 15058      00
 15059              	.LVL882:
 766:sieve_extend.c ****         }
 15060              		.loc 1 766 13 view .LVU4818
 15061              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15062              		.loc 1 764 48 is_stmt 0 view .LVU4819
 15063 0a2b 4983C401 		add	r12, 1	# i,
 15064              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15065              		.loc 1 766 41 view .LVU4820
 15066 0a2f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15067              		.loc 1 764 47 is_stmt 1 view .LVU4821
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15068              		.loc 1 764 29 view .LVU4822
 15069 0a32 4883C360 		add	rbx, 96	# ivtmp.607,
 15070              	.L1263:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15071              		.loc 1 765 13 view .LVU4823
 15072 0a36 4C89E6   		mov	rsi, r12	#, i
 15073 0a39 4C89EF   		mov	rdi, r13	#, tuning_result
 15074 0a3c E8000000 		call	tune_benchmark	#
 15074      00
 15075              	.LVL883:
 766:sieve_extend.c ****         }
 15076              		.loc 1 766 13 view .LVU4824
 15077              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15078              		.loc 1 764 48 is_stmt 0 view .LVU4825
GAS LISTING /tmp/ccFOD2R4.s 			page 398


 15079 0a41 4983C401 		add	r12, 1	# i,
 15080              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15081              		.loc 1 766 41 view .LVU4826
 15082 0a45 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15083              		.loc 1 764 47 is_stmt 1 view .LVU4827
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15084              		.loc 1 764 29 view .LVU4828
 15085 0a48 4883C360 		add	rbx, 96	# ivtmp.607,
 15086              	.L1262:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15087              		.loc 1 765 13 view .LVU4829
 15088 0a4c 4C89E6   		mov	rsi, r12	#, i
 15089 0a4f 4C89EF   		mov	rdi, r13	#, tuning_result
 15090 0a52 E8000000 		call	tune_benchmark	#
 15090      00
 15091              	.LVL884:
 766:sieve_extend.c ****         }
 15092              		.loc 1 766 13 view .LVU4830
 15093              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15094              		.loc 1 764 48 is_stmt 0 view .LVU4831
 15095 0a57 4983C401 		add	r12, 1	# i,
 15096              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15097              		.loc 1 766 41 view .LVU4832
 15098 0a5b 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15099              		.loc 1 764 47 is_stmt 1 view .LVU4833
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15100              		.loc 1 764 29 view .LVU4834
 15101 0a5e 4883C360 		add	rbx, 96	# ivtmp.607,
 15102              	.L1261:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15103              		.loc 1 765 13 view .LVU4835
 15104 0a62 4C89E6   		mov	rsi, r12	#, i
 15105 0a65 4C89EF   		mov	rdi, r13	#, tuning_result
 15106              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15107              		.loc 1 764 48 is_stmt 0 view .LVU4836
 15108 0a68 4983C401 		add	r12, 1	# i,
 15109              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15110              		.loc 1 765 13 view .LVU4837
 15111 0a6c E8000000 		call	tune_benchmark	#
 15111      00
 15112              	.LVL885:
 766:sieve_extend.c ****         }
 15113              		.loc 1 766 13 is_stmt 1 view .LVU4838
 15114              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15115              		.loc 1 766 41 is_stmt 0 view .LVU4839
 15116 0a71 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15117              		.loc 1 764 47 is_stmt 1 view .LVU4840
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccFOD2R4.s 			page 399


 15118              		.loc 1 764 29 view .LVU4841
 15119 0a74 4883C360 		add	rbx, 96	# ivtmp.607,
 15120              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15121              		.loc 1 764 9 is_stmt 0 view .LVU4842
 15122 0a78 4C39E5   		cmp	rbp, r12	# tuning_results, i
 15123 0a7b 0F84E5FE 		je	.L1206	#,
 15123      FFFF
 15124              	.L1203:
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15125              		.loc 1 765 13 is_stmt 1 view .LVU4843
 15126 0a81 4C89E6   		mov	rsi, r12	#, i
 15127 0a84 4C89EF   		mov	rdi, r13	#, tuning_result
 15128 0a87 E8000000 		call	tune_benchmark	#
 15128      00
 15129              	.LVL886:
 766:sieve_extend.c ****         }
 15130              		.loc 1 766 13 view .LVU4844
 15131 0a8c 488D7B60 		lea	rdi, 96[rbx]	# tmp503,
 15132              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15133              		.loc 1 766 41 is_stmt 0 view .LVU4845
 15134 0a90 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15135              		.loc 1 764 47 is_stmt 1 view .LVU4846
 15136 0a93 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp503
 15136      28
 15137              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15138              		.loc 1 764 48 is_stmt 0 view .LVU4847
 15139 0a98 498D7424 		lea	rsi, 1[r12]	# tmp502,
 15139      01
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15140              		.loc 1 764 29 is_stmt 1 view .LVU4848
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15141              		.loc 1 765 13 view .LVU4849
 15142 0a9d 4C89EF   		mov	rdi, r13	#, tuning_result
 15143 0aa0 E8000000 		call	tune_benchmark	#
 15143      00
 15144              	.LVL887:
 766:sieve_extend.c ****         }
 15145              		.loc 1 766 13 view .LVU4850
 15146              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15147              		.loc 1 766 41 is_stmt 0 view .LVU4851
 15148 0aa5 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp503, %sfp
 15148      28
 15149 0aaa 4C8D9BC0 		lea	r11, 192[rbx]	# ivtmp.607,
 15149      000000
 15150              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15151              		.loc 1 764 48 view .LVU4852
 15152 0ab1 498D7424 		lea	rsi, 2[r12]	# i,
 15152      02
 15153              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15154              		.loc 1 765 13 view .LVU4853
GAS LISTING /tmp/ccFOD2R4.s 			page 400


 15155 0ab6 4C89EF   		mov	rdi, r13	#, tuning_result
 15156 0ab9 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.607
 15156      28
 15157              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15158              		.loc 1 766 41 view .LVU4854
 15159 0abe 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15160              		.loc 1 764 47 is_stmt 1 view .LVU4855
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15161              		.loc 1 764 29 view .LVU4856
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15162              		.loc 1 765 13 view .LVU4857
 15163 0ac1 E8000000 		call	tune_benchmark	#
 15163      00
 15164              	.LVL888:
 766:sieve_extend.c ****         }
 15165              		.loc 1 766 13 view .LVU4858
 15166              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15167              		.loc 1 766 41 is_stmt 0 view .LVU4859
 15168 0ac6 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15168      28
 15169 0acb 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.607,
 15169      010000
 15170              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15171              		.loc 1 764 48 view .LVU4860
 15172 0ad2 498D7424 		lea	rsi, 3[r12]	# i,
 15172      03
 15173              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15174              		.loc 1 765 13 view .LVU4861
 15175 0ad7 4C89EF   		mov	rdi, r13	#, tuning_result
 15176 0ada 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.607
 15176      28
 15177              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15178              		.loc 1 766 41 view .LVU4862
 15179 0adf 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15180              		.loc 1 764 47 is_stmt 1 view .LVU4863
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15181              		.loc 1 764 29 view .LVU4864
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15182              		.loc 1 765 13 view .LVU4865
 15183 0ae2 E8000000 		call	tune_benchmark	#
 15183      00
 15184              	.LVL889:
 766:sieve_extend.c ****         }
 15185              		.loc 1 766 13 view .LVU4866
 15186              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15187              		.loc 1 766 41 is_stmt 0 view .LVU4867
 15188 0ae7 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15188      28
 15189 0aec 488D9380 		lea	rdx, 384[rbx]	# ivtmp.607,
GAS LISTING /tmp/ccFOD2R4.s 			page 401


 15189      010000
 15190 0af3 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.607
 15190      28
 15191              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15192              		.loc 1 765 13 view .LVU4868
 15193 0af8 4C89EF   		mov	rdi, r13	#, tuning_result
 15194              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15195              		.loc 1 766 41 view .LVU4869
 15196 0afb 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15197              		.loc 1 764 47 is_stmt 1 view .LVU4870
 15198              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15199              		.loc 1 764 48 is_stmt 0 view .LVU4871
 15200 0afe 498D7424 		lea	rsi, 4[r12]	# i,
 15200      04
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15201              		.loc 1 764 29 is_stmt 1 view .LVU4872
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15202              		.loc 1 765 13 view .LVU4873
 15203 0b03 E8000000 		call	tune_benchmark	#
 15203      00
 15204              	.LVL890:
 766:sieve_extend.c ****         }
 15205              		.loc 1 766 13 view .LVU4874
 15206              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15207              		.loc 1 766 41 is_stmt 0 view .LVU4875
 15208 0b08 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15208      28
 15209 0b0d 488D8BE0 		lea	rcx, 480[rbx]	# ivtmp.607,
 15209      010000
 15210              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15211              		.loc 1 764 48 view .LVU4876
 15212 0b14 498D7424 		lea	rsi, 5[r12]	# i,
 15212      05
 15213              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15214              		.loc 1 765 13 view .LVU4877
 15215 0b19 4C89EF   		mov	rdi, r13	#, tuning_result
 15216 0b1c 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, ivtmp.607
 15216      28
 15217              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15218              		.loc 1 766 41 view .LVU4878
 15219 0b21 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15220              		.loc 1 764 47 is_stmt 1 view .LVU4879
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15221              		.loc 1 764 29 view .LVU4880
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15222              		.loc 1 765 13 view .LVU4881
 15223 0b24 E8000000 		call	tune_benchmark	#
 15223      00
GAS LISTING /tmp/ccFOD2R4.s 			page 402


 15224              	.LVL891:
 766:sieve_extend.c ****         }
 15225              		.loc 1 766 13 view .LVU4882
 15226              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15227              		.loc 1 766 41 is_stmt 0 view .LVU4883
 15228 0b29 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15228      28
 15229 0b2e 488D8340 		lea	rax, 576[rbx]	# ivtmp.607,
 15229      020000
 15230 0b35 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.607
 15230      28
 15231              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15232              		.loc 1 764 48 view .LVU4884
 15233 0b3a 498D7424 		lea	rsi, 6[r12]	# i,
 15233      06
 15234              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15235              		.loc 1 766 41 view .LVU4885
 15236 0b3f 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15237              		.loc 1 764 47 is_stmt 1 view .LVU4886
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15238              		.loc 1 764 29 view .LVU4887
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15239              		.loc 1 765 13 view .LVU4888
 15240 0b42 4C89EF   		mov	rdi, r13	#, tuning_result
 15241 0b45 E8000000 		call	tune_benchmark	#
 15241      00
 15242              	.LVL892:
 766:sieve_extend.c ****         }
 15243              		.loc 1 766 13 view .LVU4889
 15244              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15245              		.loc 1 766 41 is_stmt 0 view .LVU4890
 15246 0b4a 4C8B5C24 		mov	r11, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15246      28
 15247 0b4f 4C8D8BA0 		lea	r9, 672[rbx]	# ivtmp.607,
 15247      020000
 15248              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15249              		.loc 1 764 48 view .LVU4891
 15250 0b56 498D7424 		lea	rsi, 7[r12]	# i,
 15250      07
 15251              	# sieve_extend.c:765:             tune_benchmark(tuning_result, i);
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15252              		.loc 1 765 13 view .LVU4892
 15253 0b5b 4C89EF   		mov	rdi, r13	#, tuning_result
 15254 0b5e 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.607
 15254      28
 15255              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15256              		.loc 1 764 48 view .LVU4893
 15257 0b63 4983C408 		add	r12, 8	# i,
 15258              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
GAS LISTING /tmp/ccFOD2R4.s 			page 403


 15259              		.loc 1 766 41 view .LVU4894
 15260 0b67 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15261              		.loc 1 764 47 is_stmt 1 view .LVU4895
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15262              		.loc 1 764 29 view .LVU4896
 765:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15263              		.loc 1 765 13 view .LVU4897
 15264 0b6a 4881C300 		add	rbx, 768	# ivtmp.607,
 15264      030000
 15265 0b71 E8000000 		call	tune_benchmark	#
 15265      00
 15266              	.LVL893:
 766:sieve_extend.c ****         }
 15267              		.loc 1 766 13 view .LVU4898
 15268              	# sieve_extend.c:766:             tuning_result[i].sample_max += sample_max;
 766:sieve_extend.c ****         }
 15269              		.loc 1 766 41 is_stmt 0 view .LVU4899
 15270 0b76 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# ivtmp.607, %sfp
 15270      28
 15271 0b7b 4D0130   		add	QWORD PTR [r8], r14	# MEM[base: _213, offset: 0B], sample_max
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15272              		.loc 1 764 47 is_stmt 1 view .LVU4900
 15273              	.LVL894:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15274              		.loc 1 764 29 view .LVU4901
 15275              	# sieve_extend.c:764:         for (counter_t i=0; i<tuning_results; i++) {
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15276              		.loc 1 764 9 is_stmt 0 view .LVU4902
 15277 0b7e 4C39E5   		cmp	rbp, r12	# tuning_results, i
 15278 0b81 0F85FAFE 		jne	.L1203	#,
 15278      FFFF
 15279 0b87 E9DAFDFF 		jmp	.L1206	#
 15279      FF
 15280              	.LVL895:
 15281 0b8c 0F1F4000 		.p2align 4,,7
 15282              		.p2align 3
 15283              	.L1302:
 764:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15284              		.loc 1 764 9 view .LVU4903
 15285              	.LBE981:
 15286              	.LBB982:
 15287              	.LBB965:
 15288              	.LBB963:
 15289              	.LBB962:
 15290              	.LBB961:
 15291              	.LBB959:
 15292              	.LBB948:
 15293              	.LBB949:
 15294              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15295              		.loc 3 107 10 view .LVU4904
 15296 0b90 488D3500 		lea	rsi, .LC50[rip]	#,
 15296      000000
 15297 0b97 BF010000 		mov	edi, 1	#,
 15297      00
 15298 0b9c C5FB115C 		vmovsd	QWORD PTR 48[rsp], xmm3	# %sfp, _258
 15298      2430
GAS LISTING /tmp/ccFOD2R4.s 			page 404


 15299              	.LBE949:
 15300              	.LBE948:
 735:sieve_extend.c ****                         }
 15301              		.loc 1 735 60 is_stmt 1 view .LVU4905
 15302              	.LVL896:
 15303              	.LBB951:
 15304              	.LBI948:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15305              		.loc 3 105 1 view .LVU4906
 15306              	.LBB950:
 15307              		.loc 3 107 3 view .LVU4907
 15308              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15309              		.loc 3 107 10 is_stmt 0 view .LVU4908
 15310 0ba2 31C0     		xor	eax, eax	#
 15311 0ba4 E8000000 		call	__printf_chk@PLT	#
 15311      00
 15312              	.LVL897:
 15313              		.loc 3 107 10 view .LVU4909
 15314              	.LBE950:
 15315              	.LBE951:
 735:sieve_extend.c ****                         }
 15316              		.loc 1 735 76 is_stmt 1 view .LVU4910
 15317              	.LBB952:
 15318              	.LBI952:
 651:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15319              		.loc 1 651 20 view .LVU4911
 15320              	.LBB953:
 652:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15321              		.loc 1 652 5 view .LVU4912
 15322              	.LBB954:
 15323              	.LBI954:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15324              		.loc 3 105 1 view .LVU4913
 15325              	.LBB955:
 15326              		.loc 3 107 3 view .LVU4914
 15327              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15328              		.loc 3 107 10 is_stmt 0 view .LVU4915
 15329 0ba9 4D8B5638 		mov	r10, QWORD PTR 56[r14]	# MEM[base: _507, offset: 56B], MEM[base: _507, offset: 56B]
 15330 0bad 488D3500 		lea	rsi, .LC51[rip]	#,
 15330      000000
 15331 0bb4 498B5608 		mov	rdx, QWORD PTR 8[r14]	# MEM[base: _507, offset: 8B], MEM[base: _507, offset: 8B]
 15332 0bb8 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r14]	# MEM[base: _507, offset: 80B], MEM[base: _507, offset: 80B]
 15332      4650
 15333 0bbe 498B4E10 		mov	rcx, QWORD PTR 16[r14]	# MEM[base: _507, offset: 16B], MEM[base: _507, offset: 16B]
 15334 0bc2 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[base: _507, offset: 56B]
 15334      18
 15335 0bc7 498B7E48 		mov	rdi, QWORD PTR 72[r14]	# MEM[base: _507, offset: 72B], MEM[base: _507, offset: 72B]
 15336 0bcb 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[base: _507, offset: 72B]
 15336      10
 15337 0bd0 BF010000 		mov	edi, 1	#,
 15337      00
 15338 0bd5 498B4630 		mov	rax, QWORD PTR 48[r14]	# MEM[base: _507, offset: 48B], MEM[base: _507, offset: 48B]
 15339 0bd9 48894424 		mov	QWORD PTR 8[rsp], rax	#, MEM[base: _507, offset: 48B]
 15339      08
 15340 0bde B8030000 		mov	eax, 3	#,
 15340      00
 15341 0be3 4D8B5E28 		mov	r11, QWORD PTR 40[r14]	# MEM[base: _507, offset: 40B], MEM[base: _507, offset: 40B]
GAS LISTING /tmp/ccFOD2R4.s 			page 405


 15342 0be7 4C891C24 		mov	QWORD PTR [rsp], r11	#, MEM[base: _507, offset: 40B]
 15343 0beb 4D8B4E20 		mov	r9, QWORD PTR 32[r14]	#, MEM[base: _507, offset: 32B]
 15344 0bef 4D8B4618 		mov	r8, QWORD PTR 24[r14]	#, MEM[base: _507, offset: 24B]
 15345 0bf3 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r14]	#, MEM[base: _507, offset: 88B]
 15345      5658
 15346 0bf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r14]	#, MEM[base: _507, offset: 64B]
 15346      4E40
 15347 0bff E8000000 		call	__printf_chk@PLT	#
 15347      00
 15348              	.LVL898:
 15349              		.loc 3 107 10 view .LVU4916
 15350              	.LBE955:
 15351              	.LBE954:
 15352              	# sieve_extend.c:657: }
 657:sieve_extend.c **** 
 15353              		.loc 1 657 1 view .LVU4917
 15354 0c04 488B5424 		mov	rdx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 15354      28
 15355 0c09 4C897C24 		mov	QWORD PTR 80[rsp], r15	# %sfp, vectorstep_faster
 15355      50
 15356              	.LBE953:
 15357              	.LBE952:
 15358              	# sieve_extend.c:731:                             best_blocksize_bits = blocksize_bits;
 731:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15359              		.loc 1 731 49 view .LVU4918
 15360 0c0e 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, ivtmp.626
 15360      40
 15361              	.LBB957:
 15362              	.LBB956:
 15363              	# sieve_extend.c:657: }
 657:sieve_extend.c **** 
 15364              		.loc 1 657 1 view .LVU4919
 15365 0c13 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, mediumstep_faster
 15365      48
 15366 0c18 E935FCFF 		jmp	.L1194	#
 15366      FF
 15367              	.LVL899:
 15368              	.L1202:
 657:sieve_extend.c **** 
 15369              		.loc 1 657 1 view .LVU4920
 15370              	.LBE956:
 15371              	.LBE957:
 15372              	.LBE959:
 15373              	.LBE961:
 15374              	.LBE962:
 15375              	.LBE963:
 15376              	.LBE965:
 15377              	.LBE982:
 753:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 15378              		.loc 1 753 13 is_stmt 1 view .LVU4921
 754:sieve_extend.c ****             if (option_verboselevel >= 3) {
 15379              		.loc 1 754 13 view .LVU4922
 15380              	.LBB983:
 15381              	.LBI983:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15382              		.loc 3 105 1 view .LVU4923
 15383              	.LBB984:
GAS LISTING /tmp/ccFOD2R4.s 			page 406


 15384              		.loc 3 107 3 view .LVU4924
 15385              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15386              		.loc 3 107 10 is_stmt 0 view .LVU4925
 15387 0c1d 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 15387      30
 15388 0c22 488D3500 		lea	rsi, .LC55[rip]	#,
 15388      000000
 15389 0c29 BF010000 		mov	edi, 1	#,
 15389      00
 15390 0c2e 31C0     		xor	eax, eax	#
 15391 0c30 E8000000 		call	__printf_chk@PLT	#
 15391      00
 15392              	.LVL900:
 15393              		.loc 3 107 10 view .LVU4926
 15394              	.LBE984:
 15395              	.LBE983:
 754:sieve_extend.c ****             if (option_verboselevel >= 3) {
 15396              		.loc 1 754 47 is_stmt 1 view .LVU4927
 15397              	.LBB985:
 15398              	.LBI985:
 651:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15399              		.loc 1 651 20 view .LVU4928
 15400              	.LBB986:
 652:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15401              		.loc 1 652 5 view .LVU4929
 15402              	.LBB987:
 15403              	.LBI987:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15404              		.loc 3 105 1 view .LVU4930
 15405              	.LBB988:
 15406              		.loc 3 107 3 view .LVU4931
 15407              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15408              		.loc 3 107 10 is_stmt 0 view .LVU4932
 15409 0c35 498B5D38 		mov	rbx, QWORD PTR 56[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 56B], MEM[(struc
 15410 0c39 488D3500 		lea	rsi, .LC51[rip]	#,
 15410      000000
 15411 0c40 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 80B], MEM[(s
 15411      4550
 15412 0c46 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 16B], MEM[(struc
 15413 0c4a 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 8B], MEM[(struct 
 15414 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_245 + 56B]
 15414      18
 15415 0c53 498B7D48 		mov	rdi, QWORD PTR 72[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 72B], MEM[(struc
 15416 0c57 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_245 + 72B]
 15416      10
 15417 0c5c BF010000 		mov	edi, 1	#,
 15417      00
 15418 0c61 498B4530 		mov	rax, QWORD PTR 48[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 48B], MEM[(struc
 15419 0c65 48894424 		mov	QWORD PTR 8[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_245 + 48B]
 15419      08
 15420 0c6a B8030000 		mov	eax, 3	#,
 15420      00
 15421 0c6f 4D8B5D28 		mov	r11, QWORD PTR 40[r13]	# MEM[(struct tuning_result_type *)tuning_result_245 + 40B], MEM[(struc
 15422 0c73 4C891C24 		mov	QWORD PTR [rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_245 + 40B]
 15423 0c77 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 32B]
 15424 0c7b 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 24B]
 15425 0c7f C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 88B]
GAS LISTING /tmp/ccFOD2R4.s 			page 407


 15425      5558
 15426 0c85 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 64B]
 15426      4D40
 15427 0c8b E8000000 		call	__printf_chk@PLT	#
 15427      00
 15428              	.LVL901:
 15429              		.loc 3 107 10 view .LVU4933
 15430              	.LBE988:
 15431              	.LBE987:
 15432              	.LBE986:
 15433              	.LBE985:
 755:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 15434              		.loc 1 755 13 is_stmt 1 view .LVU4934
 15435              	# sieve_extend.c:755:             if (option_verboselevel >= 3) {
 755:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 15436              		.loc 1 755 16 is_stmt 0 view .LVU4935
 15437 0c90 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 15437      02
 15438 0c95 0F84FDFC 		je	.L1204	#,
 15438      FFFF
 15439 0c9b 498D5D08 		lea	rbx, 8[r13]	# ivtmp.613,
 15440              	.LBB989:
 15441              	# sieve_extend.c:756:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15442              		.loc 1 756 32 view .LVU4936
 15443 0c9f 4531E4   		xor	r12d, r12d	# tuning_result_index
 15444              	.L1205:
 15445              	.LVL902:
 757:sieve_extend.c ****                 }
 15446              		.loc 1 757 21 is_stmt 1 view .LVU4937
 15447              	.LBB973:
 15448              	.LBI973:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15449              		.loc 3 105 1 view .LVU4938
 15450              	.LBB974:
 15451              		.loc 3 107 3 view .LVU4939
 15452              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15453              		.loc 3 107 10 is_stmt 0 view .LVU4940
 15454 0ca2 488D3500 		lea	rsi, .LC56[rip]	#,
 15454      000000
 15455 0ca9 BF010000 		mov	edi, 1	#,
 15455      00
 15456 0cae 31C0     		xor	eax, eax	#
 15457              	.LBE974:
 15458              	.LBE973:
 15459              	# sieve_extend.c:756:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15460              		.loc 1 756 118 view .LVU4941
 15461 0cb0 4983C401 		add	r12, 1	# tuning_result_index,
 15462              	.LVL903:
 15463              	.LBB976:
 15464              	.LBB975:
 15465              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15466              		.loc 3 107 10 view .LVU4942
 15467 0cb4 E8000000 		call	__printf_chk@PLT	#
 15467      00
 15468              	.LVL904:
GAS LISTING /tmp/ccFOD2R4.s 			page 408


 15469              		.loc 3 107 10 view .LVU4943
 15470              	.LBE975:
 15471              	.LBE976:
 757:sieve_extend.c ****                 }
 15472              		.loc 1 757 36 is_stmt 1 view .LVU4944
 15473              	.LBB977:
 15474              	.LBI977:
 651:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15475              		.loc 1 651 20 view .LVU4945
 15476              	.LBB978:
 652:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15477              		.loc 1 652 5 view .LVU4946
 15478              	.LBB979:
 15479              	.LBI979:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15480              		.loc 3 105 1 view .LVU4947
 15481              	.LBB980:
 15482              		.loc 3 107 3 view .LVU4948
 15483              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15484              		.loc 3 107 10 is_stmt 0 view .LVU4949
 15485 0cb9 4C8B4B30 		mov	r9, QWORD PTR 48[rbx]	# MEM[base: _153, offset: 48B], MEM[base: _153, offset: 48B]
 15486 0cbd BF010000 		mov	edi, 1	#,
 15486      00
 15487 0cc2 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _153, offset: 72B], MEM[base: _153, offset: 72B]
 15487      48
 15488 0cc7 B8030000 		mov	eax, 3	#,
 15488      00
 15489 0ccc 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _153, offset: 8B], MEM[base: _153, offset: 8B]
 15490 0cd0 4883C360 		add	rbx, 96	# ivtmp.613,
 15491 0cd4 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[base: _153, offset: 48B]
 15491      18
 15492 0cd9 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _153, offset: 64B], MEM[base: _153, offset: 64B]
 15493 0cdd 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _153, offset: 64B]
 15493      10
 15494 0ce2 488B73C8 		mov	rsi, QWORD PTR -56[rbx]	# MEM[base: _153, offset: 40B], MEM[base: _153, offset: 40B]
 15495 0ce6 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _153, offset: 40B]
 15495      08
 15496 0ceb 488D3500 		lea	rsi, .LC51[rip]	#,
 15496      000000
 15497 0cf2 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _153, offset: 32B], MEM[base: _153, offset: 32B]
 15498 0cf6 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _153, offset: 32B]
 15499 0cfa 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _153, offset: 24B]
 15500 0cfe 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _153, offset: 16B]
 15501 0d02 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _153, offset: 0B]
 15502 0d06 C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _153, offset: 80B]
 15502      F0
 15503 0d0b C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _153, offset: 56B]
 15503      D8
 15504 0d10 E8000000 		call	__printf_chk@PLT	#
 15504      00
 15505              	.LVL905:
 15506              		.loc 3 107 10 view .LVU4950
 15507              	.LBE980:
 15508              	.LBE979:
 15509              	.LBE978:
 15510              	.LBE977:
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
GAS LISTING /tmp/ccFOD2R4.s 			page 409


 15511              		.loc 1 756 99 is_stmt 1 view .LVU4951
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15512              		.loc 1 756 55 view .LVU4952
 15513              	# sieve_extend.c:756:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15514              		.loc 1 756 75 is_stmt 0 view .LVU4953
 15515 0d15 4883FD0A 		cmp	rbp, 10	# tuning_results,
 15516 0d19 4D89FA   		mov	r10, r15	# tmp436, tmp488
 15517 0d1c 4C0F46D5 		cmovbe	r10, rbp	# tuning_results,, tmp436
 15518              	# sieve_extend.c:756:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15519              		.loc 1 756 17 view .LVU4954
 15520 0d20 4D39D4   		cmp	r12, r10	# tuning_result_index, tmp436
 15521 0d23 0F8279FF 		jb	.L1205	#,
 15521      FFFF
 15522 0d29 E96AFCFF 		jmp	.L1204	#
 15522      FF
 15523              	.LVL906:
 15524              	.L1297:
 756:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 15525              		.loc 1 756 17 view .LVU4955
 15526              	.LBE989:
 15527              	.LBE935:
 15528              	.LBE934:
 15529              	.LBE933:
 849:sieve_extend.c ****     }
 15530              		.loc 1 849 39 is_stmt 1 view .LVU4956
 15531              	.LBB1008:
 15532              	.LBI1008:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15533              		.loc 3 105 1 view .LVU4957
 15534              	.LBB1009:
 15535              		.loc 3 107 3 view .LVU4958
 15536              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15537              		.loc 3 107 10 is_stmt 0 view .LVU4959
 15538 0d2e 488D3D00 		lea	rdi, .LC48[rip]	#,
 15538      000000
 15539              	.LBE1009:
 15540              	.LBE1008:
 15541              	# sieve_extend.c:852:     counter_t best_blocksize_bits = default_blocksize;
 852:sieve_extend.c ****     if (option_tunelevel) {
 15542              		.loc 1 852 15 view .LVU4960
 15543 0d35 41BE0000 		mov	r14d, 262144	# best_result$blocksize_bits,
 15543      0400
 15544              	.LBB1011:
 15545              	.LBB1010:
 15546              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15547              		.loc 3 107 10 view .LVU4961
 15548 0d3b E8000000 		call	puts@PLT	#
 15548      00
 15549              	.LVL907:
 15550              		.loc 3 107 10 view .LVU4962
 15551              	.LBE1010:
 15552              	.LBE1011:
 852:sieve_extend.c ****     if (option_tunelevel) {
 15553              		.loc 1 852 5 is_stmt 1 view .LVU4963
 853:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
GAS LISTING /tmp/ccFOD2R4.s 			page 410


 15554              		.loc 1 853 5 view .LVU4964
 15555              	# sieve_extend.c:853:     if (option_tunelevel) {
 853:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 15556              		.loc 1 853 9 is_stmt 0 view .LVU4965
 15557 0d40 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 15557      9C000000 
 15558              	# sieve_extend.c:853:     if (option_tunelevel) {
 853:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 15559              		.loc 1 853 8 view .LVU4966
 15560 0d48 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 15561 0d4b 0F85A001 		jne	.L1304	#,
 15561      0000
 15562              	.LVL908:
 15563              	.L1185:
 15564              	.LBB1012:
 864:sieve_extend.c ****         counter_t passes = 0;
 15565              		.loc 1 864 9 is_stmt 1 view .LVU4967
 15566              	# sieve_extend.c:864:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize 
 864:sieve_extend.c ****         counter_t passes = 0;
 15567              		.loc 1 864 12 is_stmt 0 view .LVU4968
 15568 0d51 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 15568      00000000 
 15569 0d59 0F8E8FF6 		jle	.L1210	#,
 15569      FFFF
 864:sieve_extend.c ****         counter_t passes = 0;
 15570              		.loc 1 864 39 is_stmt 1 discriminator 1 view .LVU4969
 15571              	.LVL909:
 15572              	.LBB919:
 15573              	.LBI919:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15574              		.loc 3 105 1 discriminator 1 view .LVU4970
 15575              	.LBB920:
 15576              		.loc 3 107 3 discriminator 1 view .LVU4971
 15577              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15578              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4972
 15579 0d5f 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 15579      000000
 15580 0d66 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 15581 0d69 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 15581      000000
 15582 0d70 488D3500 		lea	rsi, .LC58[rip]	#,
 15582      000000
 15583 0d77 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 15583      000000
 15584 0d7e BF010000 		mov	edi, 1	#,
 15584      00
 15585 0d83 31C0     		xor	eax, eax	#
 15586 0d85 E8000000 		call	__printf_chk@PLT	#
 15586      00
 15587              	.LVL910:
 15588 0d8a E95FF6FF 		jmp	.L1210	#
 15588      FF
 15589              	.LVL911:
 15590              	.L1303:
 15591              		.loc 3 107 10 discriminator 1 view .LVU4973
 15592              	.LBE920:
 15593              	.LBE919:
GAS LISTING /tmp/ccFOD2R4.s 			page 411


 15594              	.LBE1012:
 15595              	.LBB1013:
 15596              	.LBB1005:
 15597              	.LBB1002:
 770:sieve_extend.c ****     if (option_verboselevel >= 1) {
 15598              		.loc 1 770 5 is_stmt 1 view .LVU4974
 15599              	# sieve_extend.c:770:     tuning_result_type best_result = tuning_result[0];
 770:sieve_extend.c ****     if (option_verboselevel >= 1) {
 15600              		.loc 1 770 24 is_stmt 0 view .LVU4975
 15601 0d8f 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tuning_result, %sfp
 15601      38
 15602              	# sieve_extend.c:771:     if (option_verboselevel >= 1) {
 771:sieve_extend.c ****         tuning_result_index = 0;
 15603              		.loc 1 771 8 view .LVU4976
 15604 0d94 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 15604      00
 15605              	# sieve_extend.c:770:     tuning_result_type best_result = tuning_result[0];
 770:sieve_extend.c ****     if (option_verboselevel >= 1) {
 15606              		.loc 1 770 24 view .LVU4977
 15607 0d99 4D8B7424 		mov	r14, QWORD PTR 8[r12]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 15607      08
 15608              	.LVL912:
 770:sieve_extend.c ****     if (option_verboselevel >= 1) {
 15609              		.loc 1 770 24 view .LVU4978
 15610 0d9e 4D8B7C24 		mov	r15, QWORD PTR 32[r12]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 15610      20
 15611 0da3 498B6C24 		mov	rbp, QWORD PTR 40[r12]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 15611      28
 15612              	.LVL913:
 770:sieve_extend.c ****     if (option_verboselevel >= 1) {
 15613              		.loc 1 770 24 view .LVU4979
 15614 0da8 498B5C24 		mov	rbx, QWORD PTR 48[r12]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
 15614      30
 771:sieve_extend.c ****         tuning_result_index = 0;
 15615              		.loc 1 771 5 is_stmt 1 view .LVU4980
 15616              	# sieve_extend.c:771:     if (option_verboselevel >= 1) {
 771:sieve_extend.c ****         tuning_result_index = 0;
 15617              		.loc 1 771 8 is_stmt 0 view .LVU4981
 15618 0dad 7E79     		jle	.L1208	#,
 772:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 15619              		.loc 1 772 9 is_stmt 1 view .LVU4982
 15620              	.LVL914:
 773:sieve_extend.c ****     }
 15621              		.loc 1 773 9 view .LVU4983
 15622              	.LBB990:
 15623              	.LBI990:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15624              		.loc 3 105 1 view .LVU4984
 15625              	.LBB991:
 15626              		.loc 3 107 3 view .LVU4985
 15627              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15628              		.loc 3 107 10 is_stmt 0 view .LVU4986
 15629 0daf 488D3500 		lea	rsi, .LC57[rip]	#,
 15629      000000
 15630 0db6 BF010000 		mov	edi, 1	#,
 15630      00
 15631 0dbb 31C0     		xor	eax, eax	#
GAS LISTING /tmp/ccFOD2R4.s 			page 412


 15632 0dbd E8000000 		call	__printf_chk@PLT	#
 15632      00
 15633              	.LVL915:
 15634              		.loc 3 107 10 view .LVU4987
 15635              	.LBE991:
 15636              	.LBE990:
 773:sieve_extend.c ****     }
 15637              		.loc 1 773 34 is_stmt 1 view .LVU4988
 15638              	.LBB992:
 15639              	.LBI992:
 651:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15640              		.loc 1 651 20 view .LVU4989
 15641              	.LBB993:
 652:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15642              		.loc 1 652 5 view .LVU4990
 15643              	.LBB994:
 15644              	.LBI994:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15645              		.loc 3 105 1 view .LVU4991
 15646              	.LBB995:
 15647              		.loc 3 107 3 view .LVU4992
 15648              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15649              		.loc 3 107 10 is_stmt 0 view .LVU4993
 15650 0dc2 498B4424 		mov	rax, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 56B], MEM[(struc
 15650      38
 15651 0dc7 488D3500 		lea	rsi, .LC51[rip]	#,
 15651      000000
 15652 0dce C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 80B], MEM[(s
 15652      442450
 15653 0dd5 BF010000 		mov	edi, 1	#,
 15653      00
 15654 0dda 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 16B], MEM[(struc
 15654      10
 15655 0ddf 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 8B], MEM[(struct 
 15655      08
 15656 0de4 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_245 + 56B]
 15656      18
 15657 0de9 B8030000 		mov	eax, 3	#,
 15657      00
 15658 0dee 4D8B5C24 		mov	r11, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 72B], MEM[(struc
 15658      48
 15659 0df3 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_245 + 72B]
 15659      10
 15660 0df8 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 48B], MEM[(struct
 15660      30
 15661 0dfd 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_245 + 48B]
 15661      08
 15662 0e02 4D8B4424 		mov	r8, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_245 + 40B], MEM[(struct
 15662      28
 15663 0e07 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_245 + 40B]
 15664 0e0b 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 32B]
 15664      20
 15665 0e10 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 24B]
 15665      18
 15666 0e15 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 88B]
 15666      542458
 15667 0e1c C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_245 + 64B]
GAS LISTING /tmp/ccFOD2R4.s 			page 413


 15667      4C2440
 15668 0e23 E8000000 		call	__printf_chk@PLT	#
 15668      00
 15669              	.LVL916:
 15670              	.L1208:
 15671              		.loc 3 107 10 view .LVU4994
 15672              	.LBE995:
 15673              	.LBE994:
 15674              	.LBE993:
 15675              	.LBE992:
 776:sieve_extend.c ****     return best_result;
 15676              		.loc 1 776 5 is_stmt 1 view .LVU4995
 15677 0e28 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 15677      38
 15678 0e2d E8000000 		call	free@PLT	#
 15678      00
 15679              	.LVL917:
 777:sieve_extend.c **** }
 15680              		.loc 1 777 5 view .LVU4996
 777:sieve_extend.c **** }
 15681              		.loc 1 777 5 is_stmt 0 view .LVU4997
 15682              	.LBE1002:
 15683              	.LBE1005:
 855:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 15684              		.loc 1 855 9 is_stmt 1 view .LVU4998
 15685              	# sieve_extend.c:855:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 855:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 15686              		.loc 1 855 33 is_stmt 0 view .LVU4999
 15687 0e32 4C893D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r15	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 15687      000000
 856:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 15688              		.loc 1 856 9 is_stmt 1 view .LVU5000
 15689              	.LBE1013:
 15690              	# sieve_extend.c:863:     if (best_blocksize_bits > 0) {
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15691              		.loc 1 863 8 is_stmt 0 view .LVU5001
 15692 0e39 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 15693              	.LBB1014:
 15694              	# sieve_extend.c:856:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 856:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 15695              		.loc 1 856 34 view .LVU5002
 15696 0e3c 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 15696      000000
 857:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 15697              		.loc 1 857 9 is_stmt 1 view .LVU5003
 15698              	# sieve_extend.c:857:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 857:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 15699              		.loc 1 857 34 is_stmt 0 view .LVU5004
 15700 0e43 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 15700      000000
 858:sieve_extend.c ****     }
 15701              		.loc 1 858 9 is_stmt 1 view .LVU5005
 15702              	.LVL918:
 858:sieve_extend.c ****     }
 15703              		.loc 1 858 9 is_stmt 0 view .LVU5006
 15704              	.LBE1014:
 861:sieve_extend.c ****     struct timespec start_time,end_time;
GAS LISTING /tmp/ccFOD2R4.s 			page 414


 15705              		.loc 1 861 5 is_stmt 1 view .LVU5007
 862:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 15706              		.loc 1 862 5 view .LVU5008
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15707              		.loc 1 863 5 view .LVU5009
 15708              	# sieve_extend.c:863:     if (best_blocksize_bits > 0) {
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15709              		.loc 1 863 8 is_stmt 0 view .LVU5010
 15710 0e4a 0F84F2F6 		je	.L1209	#,
 15710      FFFF
 15711 0e50 E9FCFEFF 		jmp	.L1185	#
 15711      FF
 15712              	.LVL919:
 15713              	.L1218:
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15714              		.loc 1 863 8 view .LVU5011
 15715 0e55 488D0D00 		lea	rcx, CSWTCH.120[rip]	# tmp341,
 15715      000000
 15716 0e5c 488D2D00 		lea	rbp, CSWTCH.121[rip]	# tmp343,
 15716      000000
 15717              	.LVL920:
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15718              		.loc 1 863 8 view .LVU5012
 15719 0e63 488D1D00 		lea	rbx, CSWTCH.122[rip]	# tmp345,
 15719      000000
 15720              	.LVL921:
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15721              		.loc 1 863 8 view .LVU5013
 15722 0e6a 4C8D2D00 		lea	r13, CSWTCH.123[rip]	# tmp347,
 15722      000000
 15723              	.LVL922:
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15724              		.loc 1 863 8 view .LVU5014
 15725 0e71 4E8B0CC1 		mov	r9, QWORD PTR [rcx+r8*8]	# mediumstep_faster_steps, CSWTCH.120
 15726 0e75 488D3D00 		lea	rdi, CSWTCH.119[rip]	# tmp339,
 15726      000000
 15727 0e7c 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# vectorstep_faster_steps, CSWTCH.121
 15727      00
 15728              	.LVL923:
 863:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 15729              		.loc 1 863 8 view .LVU5015
 15730 0e81 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# freebits_steps, CSWTCH.122
 15731 0e85 C4817B10 		vmovsd	xmm7, QWORD PTR 0[r13+r8*8]	# sample_duration, CSWTCH.123
 15731      7CC500
 15732 0e8c 4E8B24C7 		mov	r12, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.119
 15733 0e90 4C898C24 		mov	QWORD PTR 136[rsp], r9	# %sfp, mediumstep_faster_steps
 15733      88000000 
 15734 0e98 4C89BC24 		mov	QWORD PTR 128[rsp], r15	# %sfp, vectorstep_faster_steps
 15734      80000000 
 15735 0ea0 48894424 		mov	QWORD PTR 96[rsp], rax	# %sfp, freebits_steps
 15735      60
 15736              	.LBB1015:
 15737              	# sieve_extend.c:789:     for (int arg=1; arg < argc; arg++) {
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15738              		.loc 1 789 14 view .LVU5016
 15739 0ea5 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 15739      68080000 
GAS LISTING /tmp/ccFOD2R4.s 			page 415


 15739      00
 15740 0eae C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
 15740      2470
 15741              	.L1186:
 15742              	.LVL924:
 789:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 15743              		.loc 1 789 14 view .LVU5017
 15744              	.LBE1015:
 15745              	.LBB1016:
 15746              	.LBB1006:
 15747              	.LBB1003:
 702:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 15748              		.loc 1 702 5 is_stmt 1 view .LVU5018
 15749              	# sieve_extend.c:702:     if (option_verboselevel >= 1) printf("Tuning..."); 
 702:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 15750              		.loc 1 702 8 is_stmt 0 view .LVU5019
 15751 0eb4 448B7424 		mov	r14d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 15751      58
 15752 0eb9 4585F6   		test	r14d, r14d	# option_verboselevel.41_63
 15753 0ebc 0F8E1FF8 		jle	.L1188	#,
 15753      FFFF
 702:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 15754              		.loc 1 702 35 is_stmt 1 view .LVU5020
 15755              	.LVL925:
 15756              	.LBB996:
 15757              	.LBI996:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15758              		.loc 3 105 1 view .LVU5021
 15759              	.LBB997:
 15760              		.loc 3 107 3 view .LVU5022
 15761              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15762              		.loc 3 107 10 is_stmt 0 view .LVU5023
 15763 0ec2 31C0     		xor	eax, eax	#
 15764 0ec4 488D3500 		lea	rsi, .LC49[rip]	#,
 15764      000000
 15765 0ecb BF010000 		mov	edi, 1	#,
 15765      00
 15766              	.LBE997:
 15767              	.LBE996:
 15768              	# sieve_extend.c:703:     if (option_verboselevel >= 2) printf("\n");
 703:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 15769              		.loc 1 703 8 view .LVU5024
 15770 0ed0 4589F7   		mov	r15d, r14d	# option_verboselevel.41_63, option_verboselevel.41_63
 15771              	.LBB999:
 15772              	.LBB998:
 15773              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15774              		.loc 3 107 10 view .LVU5025
 15775 0ed3 E8000000 		call	__printf_chk@PLT	#
 15775      00
 15776              	.LVL926:
 15777              		.loc 3 107 10 view .LVU5026
 15778              	.LBE998:
 15779              	.LBE999:
 703:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 15780              		.loc 1 703 5 is_stmt 1 view .LVU5027
 15781              	# sieve_extend.c:703:     if (option_verboselevel >= 2) printf("\n");
 703:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
GAS LISTING /tmp/ccFOD2R4.s 			page 416


 15782              		.loc 1 703 8 is_stmt 0 view .LVU5028
 15783 0ed8 4183EF01 		sub	r15d, 1	# option_verboselevel.41_63,
 15784 0edc 0F84FFF7 		je	.L1188	#,
 15784      FFFF
 703:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 15785              		.loc 1 703 35 is_stmt 1 view .LVU5029
 15786              	.LVL927:
 15787              	.LBB1000:
 15788              	.LBI1000:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15789              		.loc 3 105 1 view .LVU5030
 15790              	.LBB1001:
 15791              		.loc 3 107 3 view .LVU5031
 15792              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15793              		.loc 3 107 10 is_stmt 0 view .LVU5032
 15794 0ee2 BF0A0000 		mov	edi, 10	#,
 15794      00
 15795 0ee7 E8000000 		call	putchar@PLT	#
 15795      00
 15796              	.LVL928:
 15797 0eec E9F0F7FF 		jmp	.L1188	#
 15797      FF
 15798              	.LVL929:
 15799              	.L1304:
 15800              		.loc 3 107 10 view .LVU5033
 15801              	.LBE1001:
 15802              	.LBE1000:
 15803              	.LBE1003:
 15804              	.LBE1006:
 854:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15805              		.loc 1 854 9 is_stmt 1 view .LVU5034
 15806              	# sieve_extend.c:854:         tuning_result_type tuning_result = tune(option_tunelevel, option_maxF
 854:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15807              		.loc 1 854 44 is_stmt 0 view .LVU5035
 15808 0ef1 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 15808      000000
 15809 0ef8 4183E801 		sub	r8d, 1	#,
 15810 0efc 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 15810      A0000000 
 15811 0f04 4183F802 		cmp	r8d, 2	# _212,
 15812 0f08 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 15813 0f0c 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 15813      78
 15814              	.LVL930:
 15815              	.LBB1007:
 659:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 15816              		.loc 1 659 27 is_stmt 1 view .LVU5036
 15817              	.LBB1004:
 660:sieve_extend.c **** 
 15818              		.loc 1 660 5 view .LVU5037
 662:sieve_extend.c ****     best_blocksize_bits = 0;
 15819              		.loc 1 662 5 view .LVU5038
 663:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 15820              		.loc 1 663 5 view .LVU5039
 664:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 15821              		.loc 1 664 5 view .LVU5040
 665:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
GAS LISTING /tmp/ccFOD2R4.s 			page 417


 15822              		.loc 1 665 5 view .LVU5041
 666:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 15823              		.loc 1 666 5 view .LVU5042
 667:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 15824              		.loc 1 667 5 view .LVU5043
 668:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 15825              		.loc 1 668 5 view .LVU5044
 669:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 15826              		.loc 1 669 5 view .LVU5045
 670:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 15827              		.loc 1 670 5 view .LVU5046
 671:sieve_extend.c ****     double sample_duration = default_sample_duration;
 15828              		.loc 1 671 5 view .LVU5047
 672:sieve_extend.c **** 
 15829              		.loc 1 672 5 view .LVU5048
 675:sieve_extend.c ****         case 1:
 15830              		.loc 1 675 5 view .LVU5049
 15831 0f11 0F863EFF 		jbe	.L1218	#,
 15831      FFFF
 15832 0f17 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 15832      00000000 
 15833 0f1f 41BC0400 		mov	r12d, 4	# smallstep_faster_steps,
 15833      0000
 15834 0f25 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 15834      68050000 
 15834      00
 15835 0f2e 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 15835      60800000 
 15835      00
 15836 0f37 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 15836      80000000 
 15836      20000000 
 15837 0f43 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 15837      88000000 
 15837      04000000 
 15838 0f4f C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
 15838      2470
 15839 0f55 E95AFFFF 		jmp	.L1186	#
 15839      FF
 15840              	.LVL931:
 15841              	.L1289:
 675:sieve_extend.c ****         case 1:
 15842              		.loc 1 675 5 is_stmt 0 view .LVU5050
 15843              	.LBE1004:
 15844              	.LBE1007:
 15845              	.LBE1016:
 15846              	.LBB1017:
 792:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 15847              		.loc 1 792 34 is_stmt 1 discriminator 1 view .LVU5051
 15848              	.LBB856:
 15849              	.LBI856:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15850              		.loc 3 98 1 discriminator 1 view .LVU5052
 15851              	.LBB857:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15852              		.loc 3 100 3 discriminator 1 view .LVU5053
 15853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccFOD2R4.s 			page 418


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15854              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5054
 15855 0f5a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15855      000000
 15856 0f61 BA1B0000 		mov	edx, 27	#,
 15856      00
 15857 0f66 BE010000 		mov	esi, 1	#,
 15857      00
 15858 0f6b 488D3D00 		lea	rdi, .LC29[rip]	#,
 15858      000000
 15859 0f72 E8000000 		call	fwrite@PLT	#
 15859      00
 15860              	.LVL932:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15861              		.loc 3 100 10 discriminator 1 view .LVU5055
 15862              	.LBE857:
 15863              	.LBE856:
 792:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 15864              		.loc 1 792 83 is_stmt 1 discriminator 1 view .LVU5056
 15865 0f77 E935F6FF 		jmp	.L1287	#
 15865      FF
 15866              	.L1169:
 802:sieve_extend.c ****             }
 15867              		.loc 1 802 17 view .LVU5057
 15868              	.LVL933:
 15869              	.LBB858:
 15870              	.LBI853:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15871              		.loc 3 98 1 view .LVU5058
 15872              	.LBB855:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15873              		.loc 3 100 3 view .LVU5059
 15874              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15875              		.loc 3 100 10 is_stmt 0 view .LVU5060
 15876 0f7c 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 15877 0f7f 488D1500 		lea	rdx, .LC36[rip]	#,
 15877      000000
 15878 0f86 E913F6FF 		jmp	.L1286	#
 15878      FF
 15879              	.LVL934:
 15880              	.L1173:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15881              		.loc 3 100 10 view .LVU5061
 15882              	.LBE855:
 15883              	.LBE858:
 809:sieve_extend.c ****             }
 15884              		.loc 1 809 17 is_stmt 1 view .LVU5062
 15885              	.LBB859:
 15886              	.LBI859:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15887              		.loc 3 98 1 view .LVU5063
 15888              	.LBB860:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15889              		.loc 3 100 3 view .LVU5064
 15890              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccFOD2R4.s 			page 419


 15891              		.loc 3 100 10 is_stmt 0 view .LVU5065
 15892 0f8b 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 15893 0f8e 488D1500 		lea	rdx, .LC41[rip]	#,
 15893      000000
 15894 0f95 E904F6FF 		jmp	.L1286	#
 15894      FF
 15895              	.LVL935:
 15896              	.L1296:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15897              		.loc 3 100 10 view .LVU5066
 15898              	.LBE860:
 15899              	.LBE859:
 807:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 15900              		.loc 1 807 34 is_stmt 1 discriminator 1 view .LVU5067
 15901              	.LBB861:
 15902              	.LBI861:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15903              		.loc 3 98 1 discriminator 1 view .LVU5068
 15904              	.LBB862:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15905              		.loc 3 100 3 discriminator 1 view .LVU5069
 15906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15907              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5070
 15908 0f9a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15908      000000
 15909 0fa1 488D3D00 		lea	rdi, .LC39[rip]	#,
 15909      000000
 15910 0fa8 BA1A0000 		mov	edx, 26	#,
 15910      00
 15911 0fad BE010000 		mov	esi, 1	#,
 15911      00
 15912 0fb2 E8000000 		call	fwrite@PLT	#
 15912      00
 15913              	.LVL936:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15914              		.loc 3 100 10 discriminator 1 view .LVU5071
 15915              	.LBE862:
 15916              	.LBE861:
 807:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 15917              		.loc 1 807 82 is_stmt 1 discriminator 1 view .LVU5072
 15918 0fb7 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 15919 0fbb E8000000 		call	usage	#
 15919      00
 15920              	.LVL937:
 15921              	.L1292:
 800:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 15922              		.loc 1 800 34 discriminator 1 view .LVU5073
 15923              	.LBB863:
 15924              	.LBI863:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15925              		.loc 3 98 1 discriminator 1 view .LVU5074
 15926              	.LBB864:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15927              		.loc 3 100 3 discriminator 1 view .LVU5075
 15928              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccFOD2R4.s 			page 420


 15929              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5076
 15930 0fc0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15930      000000
 15931 0fc7 488D3D00 		lea	rdi, .LC35[rip]	#,
 15931      000000
 15932 0fce BA180000 		mov	edx, 24	#,
 15932      00
 15933 0fd3 BE010000 		mov	esi, 1	#,
 15933      00
 15934 0fd8 E8000000 		call	fwrite@PLT	#
 15934      00
 15935              	.LVL938:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15936              		.loc 3 100 10 discriminator 1 view .LVU5077
 15937              	.LBE864:
 15938              	.LBE863:
 800:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 15939              		.loc 1 800 80 is_stmt 1 discriminator 1 view .LVU5078
 15940 0fdd 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 15941 0fe1 E8000000 		call	usage	#
 15941      00
 15942              	.LVL939:
 15943              	.L1301:
 800:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 15944              		.loc 1 800 80 is_stmt 0 discriminator 1 view .LVU5079
 15945              	.LBE1017:
 15946              	# sieve_extend.c:888: }
 15947              		.loc 1 888 1 view .LVU5080
 15948 0fe6 E8000000 		call	__stack_chk_fail@PLT	#
 15948      00
 15949              	.LVL940:
 15950              		.cfi_endproc
 15951              	.LFE80:
 15953              		.section	.rodata
 15954              		.align 16
 15957              	CSWTCH.123:
 15958 0000 9A999999 		.long	2576980378
 15959 0004 9999B93F 		.long	1069128089
 15960 0008 9A999999 		.long	2576980378
 15961 000c 9999C93F 		.long	1070176665
 15962 0010 9A999999 		.long	2576980378
 15963 0014 9999C93F 		.long	1070176665
 15964 0018 00000000 		.align 16
 15964      00000000 
 15967              	CSWTCH.122:
 15968 0020 00080000 		.quad	2048
 15968      00000000 
 15969 0028 00040000 		.quad	1024
 15969      00000000 
 15970 0030 40000000 		.quad	64
 15970      00000000 
 15971 0038 00000000 		.align 16
 15971      00000000 
 15974              	CSWTCH.121:
 15975 0040 10000000 		.quad	16
 15975      00000000 
 15976 0048 10000000 		.quad	16
GAS LISTING /tmp/ccFOD2R4.s 			page 421


 15976      00000000 
 15977 0050 04000000 		.quad	4
 15977      00000000 
 15978 0058 00000000 		.align 16
 15978      00000000 
 15981              	CSWTCH.120:
 15982 0060 08000000 		.quad	8
 15982      00000000 
 15983 0068 04000000 		.quad	4
 15983      00000000 
 15984 0070 04000000 		.quad	4
 15984      00000000 
 15985 0078 00000000 		.align 16
 15985      00000000 
 15988              	CSWTCH.119:
 15989 0080 10000000 		.quad	16
 15989      00000000 
 15990 0088 08000000 		.quad	8
 15990      00000000 
 15991 0090 04000000 		.quad	4
 15991      00000000 
 15992              		.globl	global_VECTORSTEP_FASTER
 15993              		.data
 15994              		.align 8
 15997              	global_VECTORSTEP_FASTER:
 15998 0000 60000000 		.quad	96
 15998      00000000 
 15999              		.globl	global_MEDIUMSTEP_FASTER
 16000              		.align 8
 16003              	global_MEDIUMSTEP_FASTER:
 16004 0008 40000000 		.quad	64
 16004      00000000 
 16005              		.globl	global_SMALLSTEP_FASTER
 16006              		.bss
 16007              		.align 8
 16010              	global_SMALLSTEP_FASTER:
 16011 0000 00000000 		.zero	8
 16011      00000000 
 16012              		.section	.rodata.cst32,"aM",@progbits,32
 16013              		.align 32
 16014              	.LC0:
 16015 0000 00000000 		.quad	0
 16015      00000000 
 16016 0008 01000000 		.quad	1
 16016      00000000 
 16017 0010 02000000 		.quad	2
 16017      00000000 
 16018 0018 03000000 		.quad	3
 16018      00000000 
 16019              		.align 32
 16020              	.LC1:
 16021 0020 08000000 		.quad	8
 16021      00000000 
 16022 0028 08000000 		.quad	8
 16022      00000000 
 16023 0030 08000000 		.quad	8
 16023      00000000 
GAS LISTING /tmp/ccFOD2R4.s 			page 422


 16024 0038 08000000 		.quad	8
 16024      00000000 
 16025              		.align 32
 16026              	.LC2:
 16027 0040 04000000 		.quad	4
 16027      00000000 
 16028 0048 04000000 		.quad	4
 16028      00000000 
 16029 0050 04000000 		.quad	4
 16029      00000000 
 16030 0058 04000000 		.quad	4
 16030      00000000 
 16031              		.align 32
 16032              	.LC3:
 16033 0060 3F000000 		.long	63
 16034 0064 3F000000 		.long	63
 16035 0068 3F000000 		.long	63
 16036 006c 3F000000 		.long	63
 16037 0070 3F000000 		.long	63
 16038 0074 3F000000 		.long	63
 16039 0078 3F000000 		.long	63
 16040 007c 3F000000 		.long	63
 16041              		.section	.rodata.cst8,"aM",@progbits,8
 16042              		.align 8
 16043              	.LC7:
 16044 0000 00000000 		.long	0
 16045 0004 0000F87F 		.long	2146959360
 16046              		.align 8
 16047              	.LC8:
 16048 0008 95D626E8 		.long	3894859413
 16049 000c 0B2E113E 		.long	1041313291
 16050              		.align 8
 16051              	.LC26:
 16052 0010 9A999999 		.long	2576980378
 16053 0014 9999B93F 		.long	1069128089
 16054              		.align 8
 16055              	.LC59:
 16056 0018 00000000 		.long	0
 16057 001c 00001440 		.long	1075052544
 16058              		.text
 16059              	.Letext0:
 16060              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 16061              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 16062              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 16063              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 16064              		.file 8 "/usr/include/stdio.h"
 16065              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 16066              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 16067              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 16068              		.file 12 "/usr/include/stdint.h"
 16069              		.file 13 "/usr/include/time.h"
 16070              		.file 14 "/usr/include/math.h"
 16071              		.file 15 "/usr/include/stdlib.h"
 16072              		.file 16 "<built-in>"
 37945              		.section	.note.gnu.property,"a"
 37946              		.align 8
 37947 0000 04000000 		.long	 1f - 0f
GAS LISTING /tmp/ccFOD2R4.s 			page 423


 37948 0004 10000000 		.long	 4f - 1f
 37949 0008 05000000 		.long	 5
 37950              	0:
 37951 000c 474E5500 		.string	 "GNU"
 37952              	1:
 37953              		.align 8
 37954 0010 020000C0 		.long	 0xc0000002
 37955 0014 04000000 		.long	 3f - 2f
 37956              	2:
 37957 0018 03000000 		.long	 0x3
 37958              	3:
 37959 001c 00000000 		.align 8
 37960              	4:
GAS LISTING /tmp/ccFOD2R4.s 			page 424


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccFOD2R4.s:86     .text:0000000000000000 continuePattern_smallSize
     /tmp/ccFOD2R4.s:16014  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccFOD2R4.s:16020  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccFOD2R4.s:16026  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccFOD2R4.s:16032  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccFOD2R4.s:1228   .text:00000000000006c0 compare_tuning_result
     /tmp/ccFOD2R4.s:1254   .text:00000000000006e0 continuePattern_shiftright_ivdep
     /tmp/ccFOD2R4.s:3032   .text:00000000000012a0 continuePattern_aligned
     /tmp/ccFOD2R4.s:3921   .text:0000000000001820 continuePattern_shiftleft
     /tmp/ccFOD2R4.s:6595   .text:00000000000028b0 show_primes.isra.0
     /tmp/ccFOD2R4.s:6590   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccFOD2R4.s:6588   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccFOD2R4.s:7002   .text:0000000000002a50 sieve_shake
     /tmp/ccFOD2R4.s:15997  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccFOD2R4.s:11597  .text:0000000000004010 tune_benchmark
     /tmp/ccFOD2R4.s:16003  .data:0000000000000008 global_MEDIUMSTEP_FASTER
     /tmp/ccFOD2R4.s:16010  .bss:0000000000000000 global_SMALLSTEP_FASTER
     /tmp/ccFOD2R4.s:16043  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccFOD2R4.s:16047  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccFOD2R4.s:11832  .text:0000000000004150 validatePrimeCount
     /tmp/ccFOD2R4.s:11813  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccFOD2R4.s:11819  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccFOD2R4.s:11823  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccFOD2R4.s:11816  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccFOD2R4.s:11826  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccFOD2R4.s:13081  .text:00000000000048d0 usage
     /tmp/ccFOD2R4.s:13041  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccFOD2R4.s:13044  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccFOD2R4.s:13048  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccFOD2R4.s:13051  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccFOD2R4.s:13054  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccFOD2R4.s:13057  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccFOD2R4.s:13060  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccFOD2R4.s:13063  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccFOD2R4.s:13066  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccFOD2R4.s:13069  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccFOD2R4.s:13072  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccFOD2R4.s:13075  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccFOD2R4.s:13412  .text.startup:0000000000000000 main
     /tmp/ccFOD2R4.s:13318  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccFOD2R4.s:13320  .rodata.str1.1:0000000000000042 .LC28
     /tmp/ccFOD2R4.s:13324  .rodata.str1.1:0000000000000068 .LC30
     /tmp/ccFOD2R4.s:13331  .rodata.str1.1:000000000000006b .LC32
     /tmp/ccFOD2R4.s:13333  .rodata.str1.1:0000000000000084 .LC33
     /tmp/ccFOD2R4.s:13335  .rodata.str1.1:000000000000008c .LC34
     /tmp/ccFOD2R4.s:13344  .rodata.str1.1:00000000000000ac .LC37
     /tmp/ccFOD2R4.s:13365  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccFOD2R4.s:13363  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccFOD2R4.s:13346  .rodata.str1.1:00000000000000c2 .LC38
     /tmp/ccFOD2R4.s:13350  .rodata.str1.1:00000000000000e4 .LC40
     /tmp/ccFOD2R4.s:13357  .rodata.str1.1:00000000000000e8 .LC42
     /tmp/ccFOD2R4.s:13359  .rodata.str1.1:0000000000000101 .LC43
     /tmp/ccFOD2R4.s:13367  .rodata.str1.1:000000000000014a .LC47
     /tmp/ccFOD2R4.s:16055  .rodata.cst8:0000000000000018 .LC59
     /tmp/ccFOD2R4.s:13400  .rodata.str1.8:0000000000000548 .LC60
GAS LISTING /tmp/ccFOD2R4.s 			page 425


     /tmp/ccFOD2R4.s:13361  .rodata.str1.1:0000000000000112 .LC44
     /tmp/ccFOD2R4.s:13328  .rodata.str1.8:00000000000003b0 .LC31
     /tmp/ccFOD2R4.s:13406  .rodata.str1.1:000000000000019e .LC62
     /tmp/ccFOD2R4.s:13403  .rodata.str1.8:0000000000000590 .LC61
     /tmp/ccFOD2R4.s:16051  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccFOD2R4.s:13380  .rodata.str1.1:0000000000000173 .LC52
     /tmp/ccFOD2R4.s:13377  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccFOD2R4.s:13384  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/ccFOD2R4.s:13387  .rodata.str1.1:0000000000000178 .LC54
     /tmp/ccFOD2R4.s:13373  .rodata.str1.1:000000000000016e .LC50
     /tmp/ccFOD2R4.s:13389  .rodata.str1.1:0000000000000185 .LC55
     /tmp/ccFOD2R4.s:13391  .rodata.str1.1:000000000000018c .LC56
     /tmp/ccFOD2R4.s:13369  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccFOD2R4.s:13397  .rodata.str1.8:0000000000000510 .LC58
     /tmp/ccFOD2R4.s:13393  .rodata.str1.1:0000000000000190 .LC57
     /tmp/ccFOD2R4.s:15981  .rodata:0000000000000060 CSWTCH.120
     /tmp/ccFOD2R4.s:15974  .rodata:0000000000000040 CSWTCH.121
     /tmp/ccFOD2R4.s:15967  .rodata:0000000000000020 CSWTCH.122
     /tmp/ccFOD2R4.s:15957  .rodata:0000000000000000 CSWTCH.123
     /tmp/ccFOD2R4.s:15988  .rodata:0000000000000080 CSWTCH.119
     /tmp/ccFOD2R4.s:13371  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccFOD2R4.s:13322  .rodata.str1.1:000000000000004c .LC29
     /tmp/ccFOD2R4.s:13341  .rodata.str1.8:00000000000003d8 .LC36
     /tmp/ccFOD2R4.s:13354  .rodata.str1.8:00000000000003f8 .LC41
     /tmp/ccFOD2R4.s:13348  .rodata.str1.1:00000000000000c9 .LC39
     /tmp/ccFOD2R4.s:13337  .rodata.str1.1:0000000000000093 .LC35

UNDEFINED SYMBOLS
memcpy
_GLOBAL_OFFSET_TABLE_
__printf_chk
putchar
aligned_alloc
__stack_chk_fail
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
