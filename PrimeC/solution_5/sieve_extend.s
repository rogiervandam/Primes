GAS LISTING /tmp/ccW4ZvF5.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccW4ZvF5.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB68:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // SIeve alogithm by Rogier van Dam
   2:sieve_extend.c **** 
   3:sieve_extend.c **** // TODO; Check why vector is not working with range > 1000000
   4:sieve_extend.c **** 
   5:sieve_extend.c **** #include <stdio.h>
   6:sieve_extend.c **** #include <stdlib.h>
   7:sieve_extend.c **** #include <stdint.h>
   8:sieve_extend.c **** #include <time.h>
   9:sieve_extend.c **** #include <math.h>
  10:sieve_extend.c **** #include <string.h>
  11:sieve_extend.c **** 
  12:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  13:sieve_extend.c **** #define option_runonce 0
  14:sieve_extend.c **** #define debug if (option_runonce)
  15:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  16:sieve_extend.c **** 
  17:sieve_extend.c **** #define default_sieve_limit 1000000
  18:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  19:sieve_extend.c **** #define default_sieve_duration 5
  20:sieve_extend.c **** #define default_sample_duration 0.1
  21:sieve_extend.c **** #define default_sample_max 5
  22:sieve_extend.c **** #define default_verbose_level 2
  23:sieve_extend.c **** #define default_tune_level 2
  24:sieve_extend.c **** #define default_check_level 1
  25:sieve_extend.c **** #define default_show_primes_on_error 100
  26:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
GAS LISTING /tmp/ccW4ZvF5.s 			page 3


  27:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  28:sieve_extend.c **** 
  29:sieve_extend.c **** // 64 bit
  30:sieve_extend.c **** #define TYPE uint64_t
  31:sieve_extend.c **** 
  32:sieve_extend.c **** // calculate the rest dynamically
  33:sieve_extend.c **** #define counter_t TYPE
  34:sieve_extend.c **** #define bitshift_t TYPE
  35:sieve_extend.c **** #define bitword_t uint64_t
  36:sieve_extend.c **** 
  37:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  38:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  39:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  40:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  41:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  42:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  43:sieve_extend.c **** 
  44:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  45:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  46:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  47:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  48:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  49:sieve_extend.c **** 
  50:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  51:sieve_extend.c **** 
  52:sieve_extend.c **** // globals for tuning
  53:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  54:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  55:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = VECTOR_SIZE/2;
  56:sieve_extend.c **** 
  57:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  58:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  59:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  60:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  61:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  62:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  63:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  64:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  65:sieve_extend.c **** 
  66:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  67:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  68:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  69:sieve_extend.c **** 
  70:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  71:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  72:sieve_extend.c **** #define wordstart(index) ((counter_t)index&~WORDMASK)
  73:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  74:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  75:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  76:sieve_extend.c **** 
  77:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  78:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  79:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  80:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  81:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  82:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  83:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
GAS LISTING /tmp/ccW4ZvF5.s 			page 4


  84:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  85:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  86:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  87:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  88:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  89:sieve_extend.c **** #define real(bit) (bit*2+1)
  90:sieve_extend.c **** 
  91:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  92:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  93:sieve_extend.c **** 
  94:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  95:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  96:sieve_extend.c **** 
  97:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  98:sieve_extend.c **** 
  99:sieve_extend.c **** struct sieve_t {
 100:sieve_extend.c ****     bitword_t* bitarray;
 101:sieve_extend.c ****     counter_t  bits;
 102:sieve_extend.c ****     counter_t  size;
 103:sieve_extend.c **** };
 104:sieve_extend.c **** 
 105:sieve_extend.c **** #include "debugtools.h"
 106:sieve_extend.c **** 
 107:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 108:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 109:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 110:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 111:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 112:sieve_extend.c **** 
 113:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 114:sieve_extend.c ****     sieve->bits     = size >> 1;
 115:sieve_extend.c ****     sieve->size     = size;
 116:sieve_extend.c **** 
 117:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 118:sieve_extend.c ****     // it gave weird malloc problems at this point
 119:sieve_extend.c ****     return sieve;
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 123:sieve_extend.c ****     free(sieve->bitarray);
 124:sieve_extend.c ****     free(sieve);
 125:sieve_extend.c **** }
 126:sieve_extend.c **** 
 127:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 128:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 129:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 130:sieve_extend.c ****     return index;
 131:sieve_extend.c **** }
 132:sieve_extend.c **** 
 133:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 134:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 135:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 136:sieve_extend.c **** 
 137:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 138:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 139:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 140:sieve_extend.c ****    index += distance;
GAS LISTING /tmp/ccW4ZvF5.s 			page 5


 141:sieve_extend.c ****    distance += index_bit;
 142:sieve_extend.c **** 
 143:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 144:sieve_extend.c ****        index_word++;
 145:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 146:sieve_extend.c ****        index += distance;
 147:sieve_extend.c ****    }
 148:sieve_extend.c **** 
 149:sieve_extend.c ****    return index;
 150:sieve_extend.c **** }
 151:sieve_extend.c **** 
 152:sieve_extend.c **** 
 153:sieve_extend.c **** static inline void applyMask_array(bitword_t* __restrict bitarray, const counter_t step, const coun
 154:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 155:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 156:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 157:sieve_extend.c ****     register const counter_t range_stop_word = wordindex(range_stop);
 158:sieve_extend.c ****     const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (cou
 159:sieve_extend.c **** 
 160:sieve_extend.c ****     #pragma GCC ivdep
 161:sieve_extend.c ****     for (;index_word < loop_stop_word;  index_word += step_4) {
 162:sieve_extend.c ****         bitarray[index_word         ] |= mask;
 163:sieve_extend.c ****         bitarray[index_word + step  ] |= mask;
 164:sieve_extend.c ****         bitarray[index_word + step_2] |= mask;
 165:sieve_extend.c ****         bitarray[index_word + step_3] |= mask;
 166:sieve_extend.c ****     }
 167:sieve_extend.c **** 
 168:sieve_extend.c ****     #pragma GCC ivdep
 169:sieve_extend.c ****     while (index_word < range_stop_word) {
 170:sieve_extend.c ****         bitarray[index_word] |= mask;
 171:sieve_extend.c ****         index_word += step;
 172:sieve_extend.c ****     }
 173:sieve_extend.c **** 
 174:sieve_extend.c ****     if (index_word == wordindex(range_stop)) {
 175:sieve_extend.c ****         bitarray[wordindex(range_stop)] |= (mask & chopmask(range_stop)); //only needed if blocks n
 176:sieve_extend.c ****         
 177:sieve_extend.c ****     }
 178:sieve_extend.c **** }
 179:sieve_extend.c **** 
 180:sieve_extend.c **** static inline void applyMask_ptr(bitword_t* __restrict bitarray, const counter_t step, const counte
 181:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 182:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 183:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 184:sieve_extend.c **** 
 185:sieve_extend.c ****    //#pragma GCC unroll 10
 186:sieve_extend.c ****    #pragma GCC ivdep
 187:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 188:sieve_extend.c ****        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 190:sieve_extend.c ****        *index_ptr |= mask;
 191:sieve_extend.c ****        index_ptr+=step;
 192:sieve_extend.c ****        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 196:sieve_extend.c ****        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 6


 198:sieve_extend.c ****    }
 199:sieve_extend.c **** 
 200:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 201:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 202:sieve_extend.c ****        *index_ptr |= mask;
 203:sieve_extend.c ****        index_ptr+=step;
 204:sieve_extend.c ****    }
 205:sieve_extend.c **** 
 206:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 207:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 208:sieve_extend.c ****    }
 209:sieve_extend.c **** }
 210:sieve_extend.c **** 
 211:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 212:sieve_extend.c **** static inline void setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 213:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 214:sieve_extend.c **** 
 215:sieve_extend.c ****     // build the pattern in a word
 216:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 217:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 218:sieve_extend.c ****         pattern |= (pattern << patternsize);
 219:sieve_extend.c **** 
 220:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 221:sieve_extend.c ****     
 222:sieve_extend.c ****     // initialize loop variables and stop if this is it
 223:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 224:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 225:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 226:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 227:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 228:sieve_extend.c ****        return;
 229:sieve_extend.c ****     }
 230:sieve_extend.c ****     
 231:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 232:sieve_extend.c **** 
 233:sieve_extend.c ****    // from now on, we are before range_stop_word
 234:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 235:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 236:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 237:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 238:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 239:sieve_extend.c ****    //#pragma GCC unroll 16
 240:sieve_extend.c ****    #pragma GCC ivdep
 241:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 242:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 243:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 244:sieve_extend.c **** 
 245:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 246:sieve_extend.c ****    }
 247:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 248:sieve_extend.c **** 
 249:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 250:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 251:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 252:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 253:sieve_extend.c **** //             printWord(pattern); printf("\n");
 254:sieve_extend.c **** //             exit(0);
GAS LISTING /tmp/ccW4ZvF5.s 			page 7


 255:sieve_extend.c **** //         }
 256:sieve_extend.c **** //    }
 257:sieve_extend.c **** 
 258:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 259:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 260:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 261:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 262:sieve_extend.c ****     // //#pragma GCC unroll 16
 263:sieve_extend.c ****     // #pragma GCC ivdep
 264:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 265:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 266:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 267:sieve_extend.c ****     // }
 268:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** }
 270:sieve_extend.c **** 
 271:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 272:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 273:sieve_extend.c **** // This is especially true for small steps over long ranges
 274:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 275:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 276:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 277:sieve_extend.c **** 
 278:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 279:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 280:sieve_extend.c **** 
 281:sieve_extend.c ****         #pragma GCC ivdep
 282:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 283:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 284:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 285:sieve_extend.c ****             #pragma GCC ivdep
 286:sieve_extend.c ****             do {
 287:sieve_extend.c ****                 mask |= markmask(index);
 288:sieve_extend.c ****                 index += step;
 289:sieve_extend.c ****             } while (index_word == wordindex(index));
 290:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 291:sieve_extend.c ****             //     mask |= markmask(index);
 292:sieve_extend.c ****             bitarray[index_word] |= mask;
 293:sieve_extend.c ****         }
 294:sieve_extend.c ****     }
 295:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 296:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 297:sieve_extend.c ****         
 298:sieve_extend.c ****         #pragma GCC ivdep
 299:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 300:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 301:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 302:sieve_extend.c ****             #pragma GCC ivdep
 303:sieve_extend.c ****             do {
 304:sieve_extend.c ****                 mask |= markmask(index);
 305:sieve_extend.c ****                 index += step;
 306:sieve_extend.c ****             } while (index_word == wordindex(index));
 307:sieve_extend.c ****             // #pragma GCC ivdep
 308:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 309:sieve_extend.c ****             //     mask |= markmask(index);
 310:sieve_extend.c ****             #if __APPLE__
 311:sieve_extend.c ****                applyMask_array(bitarray, step, range_stop, mask, index_word);
GAS LISTING /tmp/ccW4ZvF5.s 			page 8


 312:sieve_extend.c ****             #else
 313:sieve_extend.c ****                applyMask_ptr(bitarray, step, range_stop, mask, index_word);
 314:sieve_extend.c ****             #endif
 315:sieve_extend.c ****         }
 316:sieve_extend.c ****     }
 317:sieve_extend.c **** }
 318:sieve_extend.c **** 
 319:sieve_extend.c **** // large steps in small ranges (< WORD_SIZE * step) mean the mask is unique
 320:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 321:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 322:sieve_extend.c ****     
 323:sieve_extend.c ****     //#pragma GCC unroll 16
 324:sieve_extend.c ****     #pragma GCC ivdep
 325:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 326:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 327:sieve_extend.c ****     }
 328:sieve_extend.c **** }
 329:sieve_extend.c **** 
 330:sieve_extend.c **** static inline void setBitsTrue_largeSteps_unroll(bitword_t* __restrict bitarray, const counter_t ra
 331:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 332:sieve_extend.c ****     
 333:sieve_extend.c ****     counter_t loop_iterations = (range_stop - range_start) / step;
 334:sieve_extend.c ****     //#pragma GCC unroll 16
 335:sieve_extend.c ****     #pragma GCC ivdep 
 336:sieve_extend.c ****     for (register counter_t i = 0; i <= loop_iterations; i++) {
 337:sieve_extend.c ****          bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 338:sieve_extend.c ****     }
 339:sieve_extend.c **** }
 340:sieve_extend.c **** 
 341:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 342:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 343:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 344:sieve_extend.c **** 
 345:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 346:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 347:sieve_extend.c ****     
 348:sieve_extend.c ****     while (1) {
 349:sieve_extend.c ****         if (index1_word == index2_word) {
 350:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 351:sieve_extend.c ****             counter_t index_word = index1_word;
 352:sieve_extend.c ****             do {
 353:sieve_extend.c ****                 mask |= markmask(index1);
 354:sieve_extend.c ****                 index1 += step1;
 355:sieve_extend.c ****                 index1_word = wordindex(index1);
 356:sieve_extend.c ****             } while (index1_word == index_word);
 357:sieve_extend.c ****             do {
 358:sieve_extend.c ****                 mask |= markmask(index2);
 359:sieve_extend.c ****                 index2 += step2;
 360:sieve_extend.c ****                 index2_word = wordindex(index2);
 361:sieve_extend.c ****             } while (index2_word == index_word);
 362:sieve_extend.c ****             bitarray[index_word] |= mask;
 363:sieve_extend.c ****         }
 364:sieve_extend.c **** 
 365:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 366:sieve_extend.c ****         if (index2 > range_stop) {
 367:sieve_extend.c ****             while (index1 <= range_stop) {
 368:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
GAS LISTING /tmp/ccW4ZvF5.s 			page 9


 369:sieve_extend.c ****                 index1 += step1;
 370:sieve_extend.c ****             }
 371:sieve_extend.c ****             return;
 372:sieve_extend.c ****         }
 373:sieve_extend.c **** 
 374:sieve_extend.c ****         if (index1 > range_stop) {
 375:sieve_extend.c ****             while (index2 <= range_stop) {
 376:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 377:sieve_extend.c ****                 index2 += step2;
 378:sieve_extend.c ****             }
 379:sieve_extend.c ****             return;
 380:sieve_extend.c ****         }
 381:sieve_extend.c **** 
 382:sieve_extend.c ****         while (index1_word < index2_word) {
 383:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 384:sieve_extend.c ****             index1 += step1;
 385:sieve_extend.c ****             index1_word = wordindex(index1);
 386:sieve_extend.c ****         }
 387:sieve_extend.c ****         
 388:sieve_extend.c ****         while (index2_word < index1_word){
 389:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 390:sieve_extend.c ****             index2 += step2;
 391:sieve_extend.c ****             index2_word = wordindex(index2);
 392:sieve_extend.c ****         }
 393:sieve_extend.c **** 
 394:sieve_extend.c ****     }
 395:sieve_extend.c **** }
 396:sieve_extend.c **** 
 397:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 398:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 399:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 400:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 401:sieve_extend.c **** 
 402:sieve_extend.c ****     //#pragma GCC unroll 16
 403:sieve_extend.c ****     #pragma GCC ivdep
 404:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 405:sieve_extend.c ****         #if __APPLE__
 406:sieve_extend.c ****             applyMask_array(bitarray, step, range_stop, markmask(index), wordindex(index));
 407:sieve_extend.c ****         #else
 408:sieve_extend.c ****             applyMask_ptr(bitarray, step, range_stop, markmask(index), wordindex(index));
 409:sieve_extend.c ****         #endif
 410:sieve_extend.c ****     }
 411:sieve_extend.c **** }
 412:sieve_extend.c **** 
 413:sieve_extend.c **** 
 414:sieve_extend.c **** static inline void applyMask_vector_ptr(bitvector_t* __restrict bitarray, const counter_t step, con
 415:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 416:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 417:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 418:sieve_extend.c ****     
 419:sieve_extend.c ****     //#pragma GCC unroll 16
 420:sieve_extend.c ****     #pragma GCC ivdep
 421:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 422:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 423:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 424:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 425:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 10


 426:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 427:sieve_extend.c ****     }
 428:sieve_extend.c ****     
 429:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = &bitarray[(range_stop_vector)];
 430:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 431:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 432:sieve_extend.c ****     }
 433:sieve_extend.c **** }
 434:sieve_extend.c **** 
 435:sieve_extend.c **** static inline void applyMask_vector_array(bitvector_t* __restrict bitarray_vector, const counter_t 
 436:sieve_extend.c **** 
 437:sieve_extend.c **** //    bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_w
 438:sieve_extend.c ****     register counter_t current_vector = index_vector;
 439:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 440:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 441:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 442:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 443:sieve_extend.c **** 
 444:sieve_extend.c ****     if (current_vector+step_4 <= range_stop_vector) {
 445:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 446:sieve_extend.c ****         //#pragma GCC unroll 16
 447:sieve_extend.c ****         #pragma GCC ivdep
 448:sieve_extend.c ****         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 449:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 452:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 453:sieve_extend.c ****         }
 454:sieve_extend.c ****     }
 455:sieve_extend.c ****     
 456:sieve_extend.c ****     //#pragma GCC unroll 16
 457:sieve_extend.c ****     #pragma GCC ivdep 
 458:sieve_extend.c ****     for(; current_vector <= range_stop_vector; current_vector += step) {
 459:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 460:sieve_extend.c ****     }
 461:sieve_extend.c ****     
 462:sieve_extend.c **** }
 463:sieve_extend.c **** 
 464:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 465:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 466:sieve_extend.c **** 
 467:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 468:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 469:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 470:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 471:sieve_extend.c **** 
 472:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 473:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 474:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 475:sieve_extend.c **** 
 476:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 477:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 478:sieve_extend.c ****             return;                 
 479:sieve_extend.c ****         }
 480:sieve_extend.c **** 
 481:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",(uintmax_t)range_start_atvector);
 482:sieve_extend.c ****         // register counter_t index = range_start; // outside to later adjust range_start
GAS LISTING /tmp/ccW4ZvF5.s 			page 11


 483:sieve_extend.c ****         //#pragma GCC unroll 16
 484:sieve_extend.c ****         #pragma GCC ivdep 
 485:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 486:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 487:sieve_extend.c ****     }
 488:sieve_extend.c ****     
 489:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 490:sieve_extend.c **** 
 491:sieve_extend.c ****     //#pragma GCC unroll 16
 492:sieve_extend.c ****     #pragma GCC ivdep 
 493:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 494:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 495:sieve_extend.c ****         register bitvector_t quadmask = { };
 496:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 497:sieve_extend.c ****         
 498:sieve_extend.c ****         // build a quadmask
 499:sieve_extend.c ****         //#pragma GCC unroll 16
 500:sieve_extend.c ****         #pragma GCC ivdep 
 501:sieve_extend.c ****         do {
 502:sieve_extend.c ****             quadmask[word] |= markmask(index);
 503:sieve_extend.c ****             index += step;
 504:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 505:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 506:sieve_extend.c ****         
 507:sieve_extend.c ****         // use mask on all n*step multiples
 508:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 509:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 510:sieve_extend.c **** 
 511:sieve_extend.c ****         applyMask_vector_array(bitarray_vector, step, range_stop, quadmask, current_vector);
 512:sieve_extend.c ****     }
 513:sieve_extend.c **** }
 514:sieve_extend.c **** 
 515:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 515 153 view -0
  91              		.cfi_startproc
 516:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 516 5 view .LVU1
 517:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 518:sieve_extend.c **** 
 519:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 519 5 view .LVU2
 520:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 520 5 view .LVU3
  95              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 515 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:519:     const counter_t source_word = wordindex(source_start);
 519:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 519 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 515 153 view .LVU6
GAS LISTING /tmp/ccW4ZvF5.s 			page 12


 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 520 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 515 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:519:     const counter_t source_word = wordindex(source_start);
 519:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 519 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 520 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 515 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 520 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 520 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 515 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 520 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 520 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 515 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 520 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 515 153 view .LVU19
 153 0036 53       		push	rbx	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 13


 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 520 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 520 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 520 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 520 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:515: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 515:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 515 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:520:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 520 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 521 5 is_stmt 1 view .LVU26
 177              	.LBB311:
 178              		.loc 1 521 10 view .LVU27
 179              		.loc 1 521 54 view .LVU28
 180              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 521 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 522:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 522 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 521 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 192              		.loc 1 522 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 195              		.loc 1 522 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 521 90 is_stmt 1 discriminator 3 view .LVU34
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 521 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccW4ZvF5.s 			page 14


 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 521 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 522 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 521 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 209              		.loc 1 522 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 212              		.loc 1 522 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 521 90 is_stmt 1 view .LVU41
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 521 54 view .LVU42
 217              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 521 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 522 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 521 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 226              		.loc 1 522 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 229              		.loc 1 522 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 521 90 is_stmt 1 view .LVU48
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 521 54 view .LVU49
 234              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 521 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 522 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 521 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
GAS LISTING /tmp/ccW4ZvF5.s 			page 15


 242              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 243              		.loc 1 522 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 521 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 249              		.loc 1 522 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 521 90 is_stmt 1 view .LVU56
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 521 54 view .LVU57
 254              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 521 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 522 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 521 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 263              		.loc 1 522 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 521 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 269              		.loc 1 522 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 521 90 is_stmt 1 view .LVU64
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 521 54 view .LVU65
 274              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 521 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 522 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 521 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 283              		.loc 1 522 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccW4ZvF5.s 			page 16


 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 521 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 289              		.loc 1 522 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 521 90 is_stmt 1 view .LVU72
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 521 54 view .LVU73
 294              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 521 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 522 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 521 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 303              		.loc 1 522 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 521 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 309              		.loc 1 522 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 521 90 is_stmt 1 view .LVU80
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 521 54 view .LVU81
 314              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 521 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 522 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 521 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 323              		.loc 1 522 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:522:         pattern |= (pattern << pattern_size);
 326              		.loc 1 522 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 521 90 is_stmt 1 view .LVU87
GAS LISTING /tmp/ccW4ZvF5.s 			page 17


 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 521 54 view .LVU88
 331              	# sieve_extend.c:521:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 521 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 521:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 521 5 view .LVU90
 340              	.LBE311:
 523:sieve_extend.c **** 
 524:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 524 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:524:     const counter_t destination_start = source_start + size;
 343              		.loc 1 524 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 525:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 525 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:526:     counter_t destination_stop_word = wordindex(destination_stop);
 526:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 526 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:525:     counter_t destination_start_word = wordindex(destination_start);
 525:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 525 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 525:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 525 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 526 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:526:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 526 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 527:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 527 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 527 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:527:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 527 8 view .LVU101
GAS LISTING /tmp/ccW4ZvF5.s 			page 18


 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 528:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 529:sieve_extend.c ****         return;
 530:sieve_extend.c ****     }
 531:sieve_extend.c **** 
 532:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 532 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:532:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 532 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:535:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 533:sieve_extend.c **** 
 534:sieve_extend.c ****     // TODO: refactor according to smallstep
 535:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 535 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:532:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 532:sieve_extend.c **** 
 384              		.loc 1 532 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 535 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:535:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 535 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.141,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 536:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 536 5 is_stmt 1 view .LVU108
 537:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 537 5 view .LVU109
 538:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 538 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:538:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 538 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:537:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 537:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 537 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:538:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 538 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
GAS LISTING /tmp/ccW4ZvF5.s 			page 19


 539:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 539 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:536:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 536:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 536 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:537:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 537:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 537 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 537:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 537 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.142,
 421              	# sieve_extend.c:539:     destination_start_word++;
 422              		.loc 1 539 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB312:
 540:sieve_extend.c ****     
 541:sieve_extend.c ****     //#pragma GCC unroll 16
 542:sieve_extend.c ****     #pragma GCC ivdep
 543:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 543 10 is_stmt 1 view .LVU119
 427              		.loc 1 543 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.140,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE312:
 432              	# sieve_extend.c:536:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 536:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 536 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 536:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 536 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.142
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB313:
 544:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 443              		.loc 1 544 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 445              		.loc 1 544 72 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 449              		.loc 1 544 55 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 452              		.loc 1 544 127 view .LVU126
GAS LISTING /tmp/ccW4ZvF5.s 			page 20


 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 455              		.loc 1 544 116 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 458              		.loc 1 543 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 460              		.loc 1 543 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.142,
 462              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 463              		.loc 1 543 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
 465 01da 7452     		je	.L7	#,
 466              		.loc 1 544 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 468              		.loc 1 544 81 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 471              		.loc 1 544 72 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 474              		.loc 1 544 99 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 477              		.loc 1 544 72 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 479              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 480              		.loc 1 544 127 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 483              		.loc 1 544 55 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 486              		.loc 1 544 116 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 489              		.loc 1 543 40 is_stmt 1 view .LVU139
 490              	.LVL28:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 491              		.loc 1 543 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.142,
 493              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 494              		.loc 1 543 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 544 9 is_stmt 1 view .LVU142
GAS LISTING /tmp/ccW4ZvF5.s 			page 21


 498              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 499              		.loc 1 544 81 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 502              		.loc 1 544 72 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 505              		.loc 1 544 99 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 508              		.loc 1 544 72 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 511              		.loc 1 544 127 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 514              		.loc 1 544 55 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
 516              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 517              		.loc 1 544 116 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 520              		.loc 1 543 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 522              		.loc 1 543 25 view .LVU151
 523              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 524              		.loc 1 543 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 528              		.loc 1 543 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.143, prolog_loop_niters.142
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.144, niters.143
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.144,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.162,
 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.147, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
GAS LISTING /tmp/ccW4ZvF5.s 			page 22


 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
 548      0000
 549              	.LVL31:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 550              		.loc 1 543 40 view .LVU154
 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.147, vect_vec_iv_.147
 552 029e 4883C640 		add	rsi, 64	# ivtmp.162,
 553              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 554              		.loc 1 544 81 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 556      F0
 557              		.loc 1 544 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 559              		.loc 1 544 81 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.147, vect_vec_iv_.147,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.147, vect_vec_iv_.147,
 561      DA31
 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.149, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 544 81 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 569              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 570              		.loc 1 544 99 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.151, vect__47.150, tmp498
 571      C5
 572              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 573              		.loc 1 544 72 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.152, vect_cst__152, vect__48.151
 575              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 576              		.loc 1 544 116 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.151
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.152
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
GAS LISTING /tmp/ccW4ZvF5.s 			page 23


 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.152
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.151
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.153, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.155, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 586      D7
 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 587      DB
 588              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 589              		.loc 1 544 44 view .LVU162
 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.157
 590      C0
 591              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 592              		.loc 1 544 116 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 593      CB
 594              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 595              		.loc 1 544 44 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.157
 596      E0
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 597              		.loc 1 543 40 is_stmt 1 view .LVU165
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 543 25 view .LVU166
 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.162, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 605              		.loc 1 544 81 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 607      E0
 608              		.loc 1 544 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 610              		.loc 1 544 81 is_stmt 0 discriminator 3 view .LVU169
 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.147, vect_vec_iv_.147,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.147, vect_vec_iv_.147,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.162,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.149, vect_cst__146, tmp400
GAS LISTING /tmp/ccW4ZvF5.s 			page 24


 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 619              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 620              		.loc 1 544 99 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.151, vect__47.150, tmp498
 621      FD
 622              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 623              		.loc 1 544 72 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.152, vect_cst__152, vect__48.151
 624      CF
 625              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 626              		.loc 1 544 116 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.151
 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.152
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 630      D6
 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.152
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.151
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.153, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.155, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 636      F1
 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 637      C2
 638              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 639              		.loc 1 544 44 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.157
 640      80
 641              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 642              		.loc 1 544 81 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.147, vect_vec_iv_.147, tmp497
 644              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 645              		.loc 1 544 116 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 647              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 648              		.loc 1 544 81 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.147, vect_vec_iv_.147,
 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.147, vect_vec_iv_.147, tmp496
 651      F0
 652              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 653              		.loc 1 544 44 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.157
 654      A0
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 655              		.loc 1 543 40 is_stmt 1 discriminator 3 view .LVU178
GAS LISTING /tmp/ccW4ZvF5.s 			page 25


 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 543 25 discriminator 3 view .LVU179
 657              		.loc 1 544 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 659              		.loc 1 544 81 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.147, vect_vec_iv_.147,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.149, vect_cst__146, tmp517
 663      C2
 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.150, vect__45.149, vect_cst__148
 665              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 666              		.loc 1 544 99 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.151, vect__47.150, tmp498
 667      CD
 668              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 669              		.loc 1 544 72 discriminator 3 view .LVU183
 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.152, vect_cst__152, vect__48.151
 670      E1
 671              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 672              		.loc 1 544 116 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.151
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.152
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.152
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.151
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.153, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.155, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.154, vect_cst__156, vect_patt_139.153
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.156, vect_cst__156, vect_patt_137.155
 683      F9
 684              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 685              		.loc 1 544 44 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.157
 686      C0
 687              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 688              		.loc 1 544 116 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.157, vect_patt_138.154, vect_patt_136.156
 689      D7
 690              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 691              		.loc 1 544 44 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.157
GAS LISTING /tmp/ccW4ZvF5.s 			page 26


 692      E0
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 693              		.loc 1 543 40 is_stmt 1 discriminator 3 view .LVU188
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 543 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.162, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.145, niters.143
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.145,
 700 0442 4901F6   		add	r14, rsi	# tmp.146, niters_vector_mult_vf.145
 701 0445 4939F5   		cmp	r13, rsi	# niters.143, niters_vector_mult_vf.145
 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
 705              	.LVL33:
 706              		.loc 1 544 9 view .LVU190
 707              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 708              		.loc 1 544 81 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 711              		.loc 1 544 72 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 714              		.loc 1 544 81 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.146
 716              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 717              		.loc 1 544 17 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 719              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 720              		.loc 1 544 81 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 723              		.loc 1 544 99 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 726              		.loc 1 544 127 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 729              		.loc 1 544 72 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 732              		.loc 1 543 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 735              		.loc 1 544 55 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 738              		.loc 1 544 116 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccW4ZvF5.s 			page 27


 741              		.loc 1 543 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 743              		.loc 1 543 25 view .LVU203
 744              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 745              		.loc 1 543 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 544 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 750              		.loc 1 544 81 is_stmt 0 view .LVU206
 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 753              		.loc 1 544 72 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 755              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 756              		.loc 1 544 81 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 758              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 759              		.loc 1 544 17 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 763              		.loc 1 544 81 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 766              		.loc 1 544 99 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 769              		.loc 1 544 72 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 772              		.loc 1 544 127 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 775              		.loc 1 544 55 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 778              		.loc 1 544 116 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 781              		.loc 1 543 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 784              		.loc 1 543 25 view .LVU217
 785              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 786              		.loc 1 543 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 28


 789              		.loc 1 544 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 791              		.loc 1 544 81 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 794              		.loc 1 544 72 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 797              		.loc 1 544 81 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 800              		.loc 1 544 17 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 802              	.LVL37:
 803              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 804              		.loc 1 544 81 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
 806              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 807              		.loc 1 544 99 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
 809              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 810              		.loc 1 544 72 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 813              		.loc 1 544 127 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 816              		.loc 1 544 55 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
 818              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 819              		.loc 1 544 116 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 822              		.loc 1 543 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 825              		.loc 1 543 25 view .LVU231
 826              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 827              		.loc 1 543 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
 829      0000
 830              		.loc 1 544 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 832              		.loc 1 544 81 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 835              		.loc 1 544 72 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 838              		.loc 1 544 81 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
GAS LISTING /tmp/ccW4ZvF5.s 			page 29


 840              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 841              		.loc 1 544 17 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 845              		.loc 1 544 81 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 848              		.loc 1 544 99 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 851              		.loc 1 544 127 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 852      F0
 853              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 854              		.loc 1 544 72 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 856              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 857              		.loc 1 544 55 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 858      E8
 859              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 860              		.loc 1 544 116 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 863              		.loc 1 543 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 866              		.loc 1 543 25 view .LVU245
 867              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 868              		.loc 1 543 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 544 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 873              		.loc 1 544 81 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 876              		.loc 1 544 72 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 879              		.loc 1 544 81 view .LVU250
 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 882              		.loc 1 544 17 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 886              		.loc 1 544 81 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 889              		.loc 1 544 99 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
GAS LISTING /tmp/ccW4ZvF5.s 			page 30


 891              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 892              		.loc 1 544 127 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 895              		.loc 1 544 72 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 898              		.loc 1 544 55 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 901              		.loc 1 544 116 view .LVU257
 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 904              		.loc 1 543 40 is_stmt 1 view .LVU258
 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 907              		.loc 1 543 25 view .LVU259
 908              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 909              		.loc 1 543 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 544 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 914              		.loc 1 544 81 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 916              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 917              		.loc 1 544 72 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 920              		.loc 1 544 81 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 923              		.loc 1 544 17 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 927              		.loc 1 544 81 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 930              		.loc 1 544 99 view .LVU267
 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 933              		.loc 1 544 127 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 936              		.loc 1 544 72 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 939              		.loc 1 544 55 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
GAS LISTING /tmp/ccW4ZvF5.s 			page 31


 940      E8
 941              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 942              		.loc 1 544 116 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 945              		.loc 1 543 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 948              		.loc 1 543 25 view .LVU273
 949              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 950              		.loc 1 543 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
 953              		.loc 1 544 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 955              		.loc 1 544 81 is_stmt 0 view .LVU276
 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 958              		.loc 1 544 72 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 961              		.loc 1 544 81 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 964              		.loc 1 544 17 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
 967              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 968              		.loc 1 544 81 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 971              		.loc 1 544 99 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 974              		.loc 1 544 127 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 977              		.loc 1 544 72 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 980              		.loc 1 544 55 view .LVU284
 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 983              		.loc 1 544 116 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 986              		.loc 1 543 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccW4ZvF5.s 			page 32


 989              		.loc 1 543 25 view .LVU287
 990              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 991              		.loc 1 543 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 544 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 996              		.loc 1 544 81 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 999              		.loc 1 544 72 view .LVU291
 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1002              		.loc 1 544 81 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1004              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1005              		.loc 1 544 17 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1007              	.LVL47:
 1008              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1009              		.loc 1 544 81 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1012              		.loc 1 544 99 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1015              		.loc 1 544 127 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
 1017              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1018              		.loc 1 544 72 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1021              		.loc 1 544 55 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1024              		.loc 1 544 116 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1027              		.loc 1 543 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1030              		.loc 1 543 25 view .LVU301
 1031              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1032              		.loc 1 543 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 544 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1037              		.loc 1 544 81 is_stmt 0 view .LVU304
GAS LISTING /tmp/ccW4ZvF5.s 			page 33


 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1040              		.loc 1 544 72 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1043              		.loc 1 544 81 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1046              		.loc 1 544 17 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1050              		.loc 1 544 81 view .LVU308
 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1053              		.loc 1 544 99 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
 1055              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1056              		.loc 1 544 127 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1057      F0
 1058              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1059              		.loc 1 544 72 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1062              		.loc 1 544 55 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1065              		.loc 1 544 116 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1068              		.loc 1 543 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1071              		.loc 1 543 25 view .LVU315
 1072              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1073              		.loc 1 543 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 544 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1078              		.loc 1 544 81 is_stmt 0 view .LVU318
 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1081              		.loc 1 544 72 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1084              		.loc 1 544 81 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1087              		.loc 1 543 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
GAS LISTING /tmp/ccW4ZvF5.s 			page 34


 1089              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1090              		.loc 1 544 17 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1094              		.loc 1 544 81 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1097              		.loc 1 544 99 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1100              		.loc 1 544 127 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1101      F0
 1102              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1103              		.loc 1 544 72 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1105              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1106              		.loc 1 544 55 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1107      E8
 1108              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1109              		.loc 1 544 116 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1112              		.loc 1 543 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1115              		.loc 1 544 116 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1117              		.loc 1 543 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1119              		.loc 1 543 25 view .LVU332
 1120              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1121              		.loc 1 543 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 544 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1125              		.loc 1 544 81 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1129              		.loc 1 544 17 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1132              		.loc 1 544 81 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1136              		.loc 1 544 99 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1139              		.loc 1 544 72 view .LVU339
GAS LISTING /tmp/ccW4ZvF5.s 			page 35


 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1143              		.loc 1 544 55 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1146              		.loc 1 544 127 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:544:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1150              		.loc 1 544 116 view .LVU342
 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1153              		.loc 1 543 40 is_stmt 1 view .LVU343
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 543 25 view .LVU344
 1155              	.L10:
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1156              		.loc 1 543 25 is_stmt 0 view .LVU345
 1157              	.LBE313:
 545:sieve_extend.c ****     }
 546:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 546 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:546:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 546 37 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:547: }
 547:sieve_extend.c **** }
 1163              		.loc 1 547 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 547 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 528:sieve_extend.c ****         return;
 1181              		.loc 1 528 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:528:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 528:sieve_extend.c ****         return;
 1183              		.loc 1 528 86 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:528:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
GAS LISTING /tmp/ccW4ZvF5.s 			page 36


 528:sieve_extend.c ****         return;
 1186              		.loc 1 528 42 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 529:sieve_extend.c ****     }
 1189              		.loc 1 529 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:547: }
 1191              		.loc 1 547 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 547 1 view .LVU355
 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 547 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB314:
 1213              	# sieve_extend.c:543:     for (counter_t i=0; i<=loop_range; ++i ) {
 543:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1214              		.loc 1 543 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.146
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE314:
 1222              		.cfi_endproc
 1223              	.LFE68:
 1225 06bd 0F1F00   		.p2align 4
 1227              	extendSieve_shiftright_ivdep:
 1228              	.LVL62:
 1229              	.LFB73:
 548:sieve_extend.c **** 
 549:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 550:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 551:sieve_extend.c **** 
 552:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 553:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 554:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 555:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 556:sieve_extend.c ****     
 557:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
GAS LISTING /tmp/ccW4ZvF5.s 			page 37


 558:sieve_extend.c **** 
 559:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 560:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 561:sieve_extend.c ****         copy_word += size;
 562:sieve_extend.c ****     }
 563:sieve_extend.c **** 
 564:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 565:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 566:sieve_extend.c ****         source_word++;
 567:sieve_extend.c ****         copy_word++;
 568:sieve_extend.c ****     }
 569:sieve_extend.c **** 
 570:sieve_extend.c **** }
 571:sieve_extend.c **** 
 572:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 573:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 574:sieve_extend.c **** 
 575:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 576:sieve_extend.c **** {
 577:sieve_extend.c ****     int i = 0;
 578:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 579:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 580:sieve_extend.c ****     {
 581:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 582:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 583:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 584:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 585:sieve_extend.c ****     }
 586:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 587:sieve_extend.c ****     {
 588:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 589:sieve_extend.c ****     }    
 590:sieve_extend.c **** }
 591:sieve_extend.c **** 
 592:sieve_extend.c **** #define forward_distance 4
 593:sieve_extend.c **** static void extendSieve_shiftright_vector(bitword_t* bitarray, const counter_t source_start, const 
 594:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 595:sieve_extend.c ****    
 596:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*) bitarray;
 597:sieve_extend.c **** 
 598:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 599:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 600:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 601:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 602:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 603:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 604:sieve_extend.c **** 
 605:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 606:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 607:sieve_extend.c ****                                 & keepmask(copy_start);
 608:sieve_extend.c **** 
 609:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 610:sieve_extend.c ****         return; // rapid exit for one word variant
 611:sieve_extend.c ****     }
 612:sieve_extend.c **** 
 613:sieve_extend.c ****     copy_word++;
 614:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 38


 615:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 616:sieve_extend.c ****     if (((copy_word - source_word) > 8)) {
 617:sieve_extend.c **** 
 618:sieve_extend.c ****         // move one vector further
 619:sieve_extend.c ****         counter_t target_word = wordindex(vectorstart(source_start+size)+VECTOR_SIZE_counter);
 620:sieve_extend.c ****         counter_t delta_word   = 4-((copy_word-source_word-1) % 4);
 621:sieve_extend.c ****         if (delta_word==0) { 
 622:sieve_extend.c ****             target_word += 8;
 623:sieve_extend.c ****         }
 624:sieve_extend.c **** 
 625:sieve_extend.c ****         debug printf("..source_word %ju copy_word %ju mod %ju target_word %ju\n",source_word, copy_
 626:sieve_extend.c **** 
 627:sieve_extend.c ****         #pragma GCC ivdep
 628:sieve_extend.c ****         for (; copy_word < target_word; copy_word++, source_word++ ) {
 629:sieve_extend.c ****             bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+
 630:sieve_extend.c ****         }
 631:sieve_extend.c **** 
 632:sieve_extend.c ****         if (delta_word==0) { 
 633:sieve_extend.c ****             delta_word = 4;
 634:sieve_extend.c ****             source_word += 4;
 635:sieve_extend.c ****         }
 636:sieve_extend.c **** 
 637:sieve_extend.c ****         counter_t source_vector = vectorfromword(source_word+1);
 638:sieve_extend.c ****         counter_t copy_vector = vectorfromword(copy_word);
 639:sieve_extend.c **** 
 640:sieve_extend.c ****         // debug printf("..using vectors source_vector %ju copy vector %ju target_word %ju delta_wo
 641:sieve_extend.c **** 
 642:sieve_extend.c ****         const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 643:sieve_extend.c ****         const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 644:sieve_extend.c ****         const bitvector_t shift_vector = { shift, shift, shift, shift };
 645:sieve_extend.c ****         const bitvector_t shift_flipped_vector = { shift_flipped, shift_flipped, shift_flipped, shi
 646:sieve_extend.c **** 
 647:sieve_extend.c ****         const counter_t target_vector = vectorindex(destination_stop);
 648:sieve_extend.c **** 
 649:sieve_extend.c ****         // debug printf("..should be copy from source_word %ju to %ju, but takes vector %ju to %ju 
 650:sieve_extend.c **** 
 651:sieve_extend.c ****         // dump_bitarray(bitarray, copy_word+4);
 652:sieve_extend.c **** 
 653:sieve_extend.c ****         // debug printf("Will copy from %ju to %ju  vector %ju to %ju at copy_word %ju\n",source_ve
 654:sieve_extend.c ****         #pragma GCC ivdep
 655:sieve_extend.c ****         for (; copy_vector <= target_vector; copy_vector++, source_vector++ ) {
 656:sieve_extend.c ****             bitvector_t source0 = bitarray_vector[source_vector];
 657:sieve_extend.c ****             bitvector_t source1 = bitarray_vector[source_vector+1];
 658:sieve_extend.c ****             bitvector_t copy1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped_vector
 659:sieve_extend.c ****             bitvector_t copy2 = __builtin_shuffle(source0,source1,shuffle2) << shift_vector;
 660:sieve_extend.c ****             bitarray_vector[copy_vector] = copy1 | copy2;
 661:sieve_extend.c ****             // copy_word += 4;
 662:sieve_extend.c ****             // source_word += 4;
 663:sieve_extend.c ****         }
 664:sieve_extend.c **** 
 665:sieve_extend.c ****         // target_word = target_vector*4;
 666:sieve_extend.c ****         // for (; copy_word <= target_word; copy_word++, source_word++ ) {
 667:sieve_extend.c ****         //     bitword_t shouldbe = (bitarray[source_word] >> shift_flipped) | (bitarray[source_wor
 668:sieve_extend.c ****         //     bitword_t asis = bitarray[copy_word];
 669:sieve_extend.c ****         //     debug printf("Copy_word = %ju\n",copy_word);
 670:sieve_extend.c ****         //     if (shouldbe != asis) {
 671:sieve_extend.c ****         //         printf("ERROR expected at copy_word %ju\n", copy_word);
GAS LISTING /tmp/ccW4ZvF5.s 			page 39


 672:sieve_extend.c ****         //         printWord(shouldbe);
 673:sieve_extend.c ****         //         printf("\n");
 674:sieve_extend.c ****         //         printf("But is\n");
 675:sieve_extend.c ****         //         printWord(asis);
 676:sieve_extend.c ****         //         printf("\n");
 677:sieve_extend.c ****         //         // dump_bitarray(bitarray, copy_word+4);
 678:sieve_extend.c ****         //         exit(0);
 679:sieve_extend.c ****         //     }
 680:sieve_extend.c ****         //     else {
 681:sieve_extend.c ****         //         // debug printf("Correct for copy_word %ju\n",copy_word);
 682:sieve_extend.c ****         //     }
 683:sieve_extend.c ****         // }
 684:sieve_extend.c **** 
 685:sieve_extend.c ****         // copy_word += 4;
 686:sieve_extend.c ****         // source_word += 4;
 687:sieve_extend.c **** 
 688:sieve_extend.c **** 
 689:sieve_extend.c ****         // #pragma GCC ivdep 
 690:sieve_extend.c ****         // for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 691:sieve_extend.c ****         //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_wo
 692:sieve_extend.c ****         // }
 693:sieve_extend.c ****         // bitarray[copy_word] &= chopmask(destination_stop);
 694:sieve_extend.c ****     }
 695:sieve_extend.c ****     else {
 696:sieve_extend.c ****         register counter_t i = 0;
 697:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 698:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 699:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 700:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 701:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 702:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 703:sieve_extend.c ****     }
 704:sieve_extend.c **** }
 705:sieve_extend.c **** 
 706:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 707:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 708:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 709:sieve_extend.c ****     counter_t distance = 0;
 710:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 711:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 712:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 713:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 714:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 715:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 716:sieve_extend.c ****         copy_word += 2;
 717:sieve_extend.c ****         source_word += 2;
 718:sieve_extend.c ****         distance += 2;
 719:sieve_extend.c ****     }
 720:sieve_extend.c ****     return distance;
 721:sieve_extend.c **** }
 722:sieve_extend.c **** 
 723:sieve_extend.c **** 
 724:sieve_extend.c **** 
 725:sieve_extend.c **** 
 726:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1230              		.loc 1 726 149 is_stmt 1 view -0
 1231              		.cfi_startproc
GAS LISTING /tmp/ccW4ZvF5.s 			page 40


 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1232              		.loc 1 727 5 view .LVU359
 728:sieve_extend.c ****    
 729:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1233              		.loc 1 729 5 view .LVU360
 1234              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1235              		.loc 1 726 149 is_stmt 0 view .LVU361
 1236 06c0 55       		push	rbp	#
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 6, -16
 1239              	# sieve_extend.c:730:     const counter_t copy_start = source_start + size;
 730:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1240              		.loc 1 730 21 view .LVU362
 1241 06c1 4C8D0C16 		lea	r9, [rsi+rdx]	# copy_start,
 1242              	# sieve_extend.c:731:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 731:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1243              		.loc 1 731 67 view .LVU363
 1244 06c5 4889F0   		mov	rax, rsi	# _5, source_start
 1245              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1246              		.loc 1 726 149 view .LVU364
 1247 06c8 4889E5   		mov	rbp, rsp	#,
 1248              		.cfi_def_cfa_register 6
 1249              	# sieve_extend.c:731:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 1250              		.loc 1 731 39 view .LVU365
 1251 06cb 4D89CA   		mov	r10, r9	# _4, copy_start
 1252              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1253              		.loc 1 726 149 view .LVU366
 1254 06ce 4157     		push	r15	#
 1255              	# sieve_extend.c:733:     register counter_t source_word = wordindex(source_start);
 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1256              		.loc 1 733 24 view .LVU367
 1257 06d0 48C1EE06 		shr	rsi, 6	# source_word,
 1258              	.LVL63:
 1259              	# sieve_extend.c:731:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 731:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1260              		.loc 1 731 39 view .LVU368
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 726 149 view .LVU369
 1264 06d8 4156     		push	r14	#
 1265 06da 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _179,
 1265      00000000 
 1266              	# sieve_extend.c:731:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 731:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1267              		.loc 1 731 67 view .LVU370
 1268 06e2 83E03F   		and	eax, 63	# _5,
 1269              	.LVL64:
 1270              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1271              		.loc 1 726 149 view .LVU371
 1272 06e5 4155     		push	r13	#
 1273              	# sieve_extend.c:734:     register counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccW4ZvF5.s 			page 41


 734:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1274              		.loc 1 734 24 view .LVU372
 1275 06e7 49C1E906 		shr	r9, 6	# copy_word,
 1276              		.cfi_offset 15, -24
 1277              		.cfi_offset 14, -32
 1278              		.cfi_offset 13, -40
 1279              	# sieve_extend.c:729:     const counter_t destination_stop_word = wordindex(destination_stop);
 729:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1280              		.loc 1 729 21 view .LVU373
 1281 06eb 4989CE   		mov	r14, rcx	# destination_stop_word, destination_stop
 1282              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1283              		.loc 1 726 149 view .LVU374
 1284 06ee 4154     		push	r12	#
 1285 06f0 4E8D3C1F 		lea	r15, [rdi+r11]	# _180,
 1286 06f4 F7D1     		not	ecx	# tmp411
 1287              	.LVL65:
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1288              		.loc 1 726 149 view .LVU375
 1289 06f6 53       		push	rbx	#
 1290              	# sieve_extend.c:729:     const counter_t destination_stop_word = wordindex(destination_stop);
 729:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1291              		.loc 1 729 21 view .LVU376
 1292 06f7 49C1EE06 		shr	r14, 6	# destination_stop_word,
 1293              	.LVL66:
 730:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1294              		.loc 1 730 5 is_stmt 1 view .LVU377
 731:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1295              		.loc 1 731 5 view .LVU378
 732:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1296              		.loc 1 732 5 view .LVU379
 733:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1297              		.loc 1 733 5 view .LVU380
 1298              		.loc 1 734 5 view .LVU381
 735:sieve_extend.c **** 
 736:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1299              		.loc 1 736 5 view .LVU382
 1300              		.cfi_offset 12, -48
 1301              		.cfi_offset 3, -56
 1302 06fb 4A8D1CCF 		lea	rbx, [rdi+r9*8]	# _177,
 1303              	# sieve_extend.c:726: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 726:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1304              		.loc 1 726 149 is_stmt 0 view .LVU383
 1305 06ff 4C8B23   		mov	r12, QWORD PTR [rbx]	# pretmp_178, *_177
 1306 0702 4883E4E0 		and	rsp, -32	#,
 1307 0706 4C895C24 		mov	QWORD PTR -24[rsp], r11	# %sfp, _179
 1307      E8
 1308              	# sieve_extend.c:731:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 731:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1309              		.loc 1 731 31 view .LVU384
 1310 070b 4D89D3   		mov	r11, r10	# shift, _4
 1311 070e 4929C3   		sub	r11, rax	# shift, _5
 1312              	.LVL67:
 1313              	# sieve_extend.c:732:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 732:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1314              		.loc 1 732 31 view .LVU385
 1315 0711 4883C040 		add	rax, 64	# tmp404,
GAS LISTING /tmp/ccW4ZvF5.s 			page 42


 1316              	.LVL68:
 732:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 732 31 view .LVU386
 1318 0715 C442A1F7 		shlx	r8, QWORD PTR [r15], r11	# tmp406, *_180, shift
 1318      07
 1319 071a 44895C24 		mov	DWORD PTR -4[rsp], r11d	# %sfp, shift
 1319      FC
 1320 071f 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1321              	.LVL69:
 732:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1322              		.loc 1 732 31 view .LVU387
 1323 0722 C442FBF7 		shrx	r13, r12, rax	# tmp408, pretmp_178, shift_flipped
 1323      EC
 1324 0727 894424F8 		mov	DWORD PTR -8[rsp], eax	# %sfp, shift_flipped
 1325 072b 4D09E8   		or	r8, r13	# _186, tmp408
 1326              	# sieve_extend.c:736:     if (copy_word >= destination_stop_word) { 
 1327              		.loc 1 736 8 view .LVU388
 1328 072e 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 1329 0731 49C7C5FF 		mov	r13, -1	# tmp410,
 1329      FFFFFF
 1330 0738 C4C2F3F7 		shrx	rcx, r13, rcx	# _193, tmp410, tmp411
 1330      CD
 1331 073d C442A9F7 		shlx	r10, r13, r10	# _189, tmp410, _4
 1331      D5
 1332              	.LVL70:
 1333              		.loc 1 736 8 view .LVU389
 1334 0742 48894C24 		mov	QWORD PTR -16[rsp], rcx	# %sfp, _193
 1334      F0
 1335 0747 0F86330B 		jbe	.L209	#,
 1335      0000
 737:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 738:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 739:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 740:sieve_extend.c ****         return; // rapid exit for one word variant
 741:sieve_extend.c ****     }
 742:sieve_extend.c **** 
 743:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1336              		.loc 1 743 5 is_stmt 1 view .LVU390
 1337              	# sieve_extend.c:745:                                 & keepmask(copy_start);
 744:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 745:sieve_extend.c ****                                 & keepmask(copy_start);
 1338              		.loc 1 745 33 is_stmt 0 view .LVU391
 1339 074d 4D21D0   		and	r8, r10	# tmp417, _189
 1340              	# sieve_extend.c:747:     copy_word++;
 746:sieve_extend.c **** 
 747:sieve_extend.c ****     copy_word++;
 1341              		.loc 1 747 14 view .LVU392
 1342 0750 498D4901 		lea	rcx, 1[r9]	# copy_word,
 1343              	# sieve_extend.c:743:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 743:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1344              		.loc 1 743 25 view .LVU393
 1345 0754 4D09E0   		or	r8, r12	# tmp418, pretmp_178
 1346              	# sieve_extend.c:751:     if (size >= WORD_SIZE_counter) {
 748:sieve_extend.c **** 
 749:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 750:sieve_extend.c **** 
 751:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 43


 1347              		.loc 1 751 8 view .LVU394
 1348 0757 4883FA3F 		cmp	rdx, 63	# size,
 1349              	# sieve_extend.c:743:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 743:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1350              		.loc 1 743 25 view .LVU395
 1351 075b 4C8903   		mov	QWORD PTR [rbx], r8	# *_177, tmp418
 747:sieve_extend.c **** 
 1352              		.loc 1 747 5 is_stmt 1 view .LVU396
 1353              	.LVL71:
 749:sieve_extend.c **** 
 1354              		.loc 1 749 5 view .LVU397
 1355              		.loc 1 751 5 view .LVU398
 1356              	# sieve_extend.c:751:     if (size >= WORD_SIZE_counter) {
 1357              		.loc 1 751 8 is_stmt 0 view .LVU399
 1358 075e 0F876404 		ja	.L210	#,
 1358      0000
 752:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 753:sieve_extend.c **** 
 754:sieve_extend.c ****         //#pragma GCC unroll 16
 755:sieve_extend.c ****         #pragma GCC ivdep
 756:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 757:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 758:sieve_extend.c ****         }
 759:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 760:sieve_extend.c ****     }
 761:sieve_extend.c **** 
 762:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1359              		.loc 1 762 12 is_stmt 1 discriminator 1 view .LVU400
 1360              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1361              		.loc 1 762 5 is_stmt 0 discriminator 1 view .LVU401
 1362 0764 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 1363 0767 0F823C04 		jb	.L64	#,
 1363      0000
 1364 076d 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1364      00000000 
 1365 0775 4D89F5   		mov	r13, r14	# _173, destination_stop_word
 1366 0778 488D14F5 		lea	rdx, 0[0+rsi*8]	# _300,
 1366      00000000 
 1367              	.LVL72:
 1368              		.loc 1 762 5 discriminator 1 view .LVU402
 1369 0780 4D8D5424 		lea	r10, 32[r12]	# tmp503,
 1369      20
 1370 0785 4C8D04F5 		lea	r8, 40[0+rsi*8]	# _168,
 1370      28000000 
 1371 078d 4929CD   		sub	r13, rcx	# _173, copy_word
 1372 0790 4C39D2   		cmp	rdx, r10	# _300, tmp503
 1373 0793 498D5E01 		lea	rbx, 1[r14]	# _198,
 1374 0797 410F9DC2 		setge	r10b	#, tmp505
 1375 079b 4D39C4   		cmp	r12, r8	# _166, _168
 1376 079e 410F9DC0 		setge	r8b	#, tmp507
 1377 07a2 4D8D7902 		lea	r15, 2[r9]	# _175,
 1378 07a6 48895C24 		mov	QWORD PTR -40[rsp], rbx	# %sfp, _198
 1378      D8
 1379 07ab 4508C2   		or	r10b, r8b	# tmp505, tmp507
 1380 07ae 4C896C24 		mov	QWORD PTR -32[rsp], r13	# %sfp, _173
 1380      E0
 1381 07b3 0F847608 		je	.L56	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 44


 1381      0000
 1382 07b9 4983FD05 		cmp	r13, 5	# _173,
 1383 07bd 410F97C5 		seta	r13b	#, tmp510
 1384 07c1 4939DF   		cmp	r15, rbx	# _175, _198
 1385 07c4 410F96C2 		setbe	r10b	#, tmp512
 1386 07c8 4584D5   		test	r13b, r10b	# tmp510, tmp512
 1387 07cb 0F845E08 		je	.L56	#,
 1387      0000
 1388 07d1 4D89F5   		mov	r13, r14	# tmp514, destination_stop_word
 1389 07d4 41B80100 		mov	r8d, 1	# tmp515,
 1389      0000
 1390 07da 4D29CD   		sub	r13, r9	# tmp514, copy_word
 1391 07dd 4939DF   		cmp	r15, rbx	# _175, _198
 1392 07e0 4D0F46C5 		cmovbe	r8, r13	# tmp514,, niters.172
 1393 07e4 4801FA   		add	rdx, rdi	# vectp.173, bitarray
 1394 07e7 48C1EA03 		shr	rdx, 3	# tmp517,
 1395 07eb 48F7DA   		neg	rdx	# tmp518
 1396 07ee 83E203   		and	edx, 3	# prolog_loop_niters.174,
 1397 07f1 0F84C90A 		je	.L76	#,
 1397      0000
 763:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1398              		.loc 1 763 9 is_stmt 1 view .LVU403
 1399              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1400              		.loc 1 763 99 is_stmt 0 view .LVU404
 1401 07f7 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# _179, %sfp
 1401      E8
 1402              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1403              		.loc 1 763 83 view .LVU405
 1404 07fc 4C8D5601 		lea	r10, 1[rsi]	# tmp634,
 1405 0800 4C895424 		mov	QWORD PTR -48[rsp], r10	# %sfp, tmp634
 1405      D0
 1406              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 763 99 view .LVU406
 1408 0805 4C8B6C1F 		mov	r13, QWORD PTR 8[rdi+rbx]	# *_309, *_309
 1408      08
 1409 080a C4C2A1F7 		shlx	rbx, r13, r11	# tmp519, *_309, shift
 1409      DD
 1410              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1411              		.loc 1 763 54 view .LVU407
 1412 080f C462FBF7 		shrx	r13, QWORD PTR [rdi+rsi*8], rax	# tmp521, *_304, shift_flipped
 1412      2CF7
 1413              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1414              		.loc 1 763 72 view .LVU408
 1415 0815 4C09EB   		or	rbx, r13	# tmp523, tmp521
 1416 0818 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.174,
 1417              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1418              		.loc 1 763 29 view .LVU409
 1419 081c 4D89FD   		mov	r13, r15	# copy_word, _175
 1420              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1421              		.loc 1 763 72 view .LVU410
 1422 081f 4A891C27 		mov	QWORD PTR [rdi+r12], rbx	# *_313, tmp523
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1423              		.loc 1 762 48 is_stmt 1 view .LVU411
 1424              	.LVL73:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1425              		.loc 1 762 12 view .LVU412
 1426 0823 745E     		je	.L65	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 45


 1427              		.loc 1 763 9 view .LVU413
 1428              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1429              		.loc 1 763 40 is_stmt 0 view .LVU414
 1430 0825 4E8D24D5 		lea	r12, 0[0+r10*8]	# _322,
 1430      00000000 
 1431              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 763 83 view .LVU415
 1433 082d 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1434              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 763 99 view .LVU416
 1436 0831 C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r12], r11	# tmp524, *_328, shift
 1436      6C2708
 1437              	.LVL74:
 1438              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1439              		.loc 1 763 83 view .LVU417
 1440 0838 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, source_word
 1440      D0
 1441              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1442              		.loc 1 763 54 view .LVU418
 1443 083d 4E8B2427 		mov	r12, QWORD PTR [rdi+r12]	# *_323, *_323
 1444 0841 C4C2FBF7 		shrx	rbx, r12, rax	# tmp526, *_323, shift_flipped
 1444      DC
 1445              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1446              		.loc 1 763 72 view .LVU419
 1447 0846 4909DD   		or	r13, rbx	# tmp528, tmp526
 1448 0849 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.174,
 1449 084d 4E892CFF 		mov	QWORD PTR [rdi+r15*8], r13	# *_332, tmp528
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1450              		.loc 1 762 48 is_stmt 1 view .LVU420
 1451              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1452              		.loc 1 762 57 is_stmt 0 view .LVU421
 1453 0851 4D8D6903 		lea	r13, 3[r9]	# copy_word,
 1454              	.LVL75:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1455              		.loc 1 762 12 is_stmt 1 view .LVU422
 1456 0855 752C     		jne	.L65	#,
 1457              		.loc 1 763 9 view .LVU423
 1458              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1459              		.loc 1 763 40 is_stmt 0 view .LVU424
 1460 0857 4C8D6602 		lea	r12, 2[rsi]	# source_word,
 1461              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1462              		.loc 1 763 83 view .LVU425
 1463 085b 488D5E03 		lea	rbx, 3[rsi]	# source_word,
 1464 085f 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, source_word
 1464      D0
 1465              	.LVL76:
 1466              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1467              		.loc 1 763 40 view .LVU426
 1468 0864 49C1E403 		sal	r12, 3	# source_word,
 1469              	.LVL77:
 1470              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1471              		.loc 1 763 99 view .LVU427
 1472 0868 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r12], r11	# tmp529, *_111, shift
 1472      5C2708
 1473              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1474              		.loc 1 763 54 view .LVU428
GAS LISTING /tmp/ccW4ZvF5.s 			page 46


 1475 086f 4E8B2427 		mov	r12, QWORD PTR [rdi+r12]	# *_121, *_121
 1476 0873 C442FBF7 		shrx	r12, r12, rax	# tmp531, *_121, shift_flipped
 1476      E4
 1477              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1478              		.loc 1 763 72 view .LVU429
 1479 0878 4C09E3   		or	rbx, r12	# tmp533, tmp531
 1480 087b 4A891CEF 		mov	QWORD PTR [rdi+r13*8], rbx	# *_103, tmp533
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1481              		.loc 1 762 48 is_stmt 1 view .LVU430
 1482              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1483              		.loc 1 762 57 is_stmt 0 view .LVU431
 1484 087f 4D8D6904 		lea	r13, 4[r9]	# copy_word,
 1485              	.LVL78:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1486              		.loc 1 762 12 is_stmt 1 view .LVU432
 1487              	.L65:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1488              		.loc 1 762 12 is_stmt 0 view .LVU433
 1489 0883 4901D2   		add	r10, rdx	# tmp537, prolog_loop_niters.174
 1490 0886 4929D0   		sub	r8, rdx	# niters.175, prolog_loop_niters.174
 1491 0889 4E8D0CD7 		lea	r9, [rdi+r10*8]	# vectp.185,
 1492 088d 4D89C2   		mov	r10, r8	# bnd.176, niters.175
 1493 0890 49C1EA02 		shr	r10, 2	# bnd.176,
 1494 0894 4801D6   		add	rsi, rdx	# tmp534, prolog_loop_niters.174
 1495 0897 49C1E205 		sal	r10, 5	# _476,
 1496 089b 4801D1   		add	rcx, rdx	# tmp539, prolog_loop_niters.174
 1497 089e 498D5AE0 		lea	rbx, -32[r10]	# tmp587,
 1498              	# sieve_extend.c:747:     copy_word++;
 747:sieve_extend.c **** 
 1499              		.loc 1 747 14 view .LVU434
 1500 08a2 31D2     		xor	edx, edx	# ivtmp.223
 1501 08a4 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.181,
 1502 08a8 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.190,
 1503 08ac 48C1EB05 		shr	rbx, 5	# tmp585,
 1504 08b0 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _184, %sfp
 1504      24F8
 1505 08b6 4883C301 		add	rbx, 1	# tmp588,
 1506 08ba C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _182, %sfp
 1506      24FC
 1507 08c0 83E307   		and	ebx, 7	# tmp589,
 1508 08c3 0F841A01 		je	.L67	#,
 1508      0000
 1509 08c9 4883FB01 		cmp	rbx, 1	# tmp589,
 1510 08cd 0F84E700 		je	.L155	#,
 1510      0000
 1511 08d3 4883FB02 		cmp	rbx, 2	# tmp589,
 1512 08d7 0F84BD00 		je	.L156	#,
 1512      0000
 1513 08dd 4883FB03 		cmp	rbx, 3	# tmp589,
 1514 08e1 0F849200 		je	.L157	#,
 1514      0000
 1515 08e7 4883FB04 		cmp	rbx, 4	# tmp589,
 1516 08eb 746C     		je	.L158	#,
 1517 08ed 4883FB05 		cmp	rbx, 5	# tmp589,
 1518 08f1 7445     		je	.L159	#,
 1519 08f3 4883FB06 		cmp	rbx, 6	# tmp589,
GAS LISTING /tmp/ccW4ZvF5.s 			page 47


 1520 08f7 741E     		je	.L160	#,
 1521              		.loc 1 763 9 is_stmt 1 view .LVU435
 1522              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1523              		.loc 1 763 54 is_stmt 0 view .LVU436
 1524 08f9 C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp975, MEM[base: vectp.181_10, index: ivtmp.223_474, offset: 0B
 1525 08fd BA200000 		mov	edx, 32	# ivtmp.223,
 1525      00
 1526              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1527              		.loc 1 763 99 view .LVU437
 1528 0902 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r9]	# tmp976, MEM[base: vectp.185_17, index: ivtmp.223_474, offset: 0B]
 1528      39
 1529              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1530              		.loc 1 763 54 view .LVU438
 1531 0907 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.183, tmp975, _184
 1532              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 763 99 view .LVU439
 1534 090b C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.187, tmp976, _182
 1535              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 763 72 view .LVU440
 1537 090f C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.188, vect__62.183, vect__67.187
 1538              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 763 29 view .LVU441
 1540 0913 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B], vect
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1541              		.loc 1 762 48 is_stmt 1 view .LVU442
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1542              		.loc 1 762 12 view .LVU443
 1543              	.L160:
 1544              		.loc 1 763 9 view .LVU444
 1545              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1546              		.loc 1 763 54 is_stmt 0 view .LVU445
 1547 0917 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp977, MEM[base: vectp.181_10, index: ivtmp.223_474, offset
 1547      16
 1548              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1549              		.loc 1 763 99 view .LVU446
 1550 091c C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r9+rdx]	# tmp978, MEM[base: vectp.185_17, index: ivtmp.223_474, offset:
 1550      0C11
 1551              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 763 54 view .LVU447
 1553 0922 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.183, tmp977, _184
 1554              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 763 99 view .LVU448
 1556 0926 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.187, tmp978, _182
 1557              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 763 72 view .LVU449
 1559 092a C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.188, vect__62.183, vect__67.187
 1559      DA
 1560              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 763 29 view .LVU450
 1562 092f C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B],
 1562      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1563              		.loc 1 762 48 is_stmt 1 view .LVU451
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1564              		.loc 1 762 12 view .LVU452
 1565 0934 4883C220 		add	rdx, 32	# ivtmp.223,
 1566              	.L159:
GAS LISTING /tmp/ccW4ZvF5.s 			page 48


 1567              		.loc 1 763 9 view .LVU453
 1568              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1569              		.loc 1 763 54 is_stmt 0 view .LVU454
 1570 0938 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp979, MEM[base: vectp.181_10, index: ivtmp.223_474, offse
 1570      16
 1571              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1572              		.loc 1 763 99 view .LVU455
 1573 093d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r9+rdx]	# tmp980, MEM[base: vectp.185_17, index: ivtmp.223_474, offset
 1573      3411
 1574              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 763 54 view .LVU456
 1576 0943 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.183, tmp979, _184
 1577              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 763 99 view .LVU457
 1579 0947 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.187, tmp980, _182
 1580              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 763 72 view .LVU458
 1582 094b C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.188, vect__62.183, vect__67.187
 1582      F7
 1583              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 763 29 view .LVU459
 1585 0950 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B], 
 1585      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1586              		.loc 1 762 48 is_stmt 1 view .LVU460
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1587              		.loc 1 762 12 view .LVU461
 1588 0955 4883C220 		add	rdx, 32	# ivtmp.223,
 1589              	.L158:
 1590              		.loc 1 763 9 view .LVU462
 1591              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1592              		.loc 1 763 54 is_stmt 0 view .LVU463
 1593 0959 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp981, MEM[base: vectp.181_10, index: ivtmp.223_474, offset
 1593      16
 1594              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1595              		.loc 1 763 99 view .LVU464
 1596 095e C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp982, MEM[base: vectp.185_17, index: ivtmp.223_474, offset:
 1596      1C11
 1597              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 763 54 view .LVU465
 1599 0964 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.183, tmp981, _184
 1600              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 763 99 view .LVU466
 1602 0968 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.187, tmp982, _182
 1603              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 763 72 view .LVU467
 1605 096c C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.188, vect__62.183, vect__67.187
 1606              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 763 29 view .LVU468
 1608 0970 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B], 
 1608      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1609              		.loc 1 762 48 is_stmt 1 view .LVU469
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1610              		.loc 1 762 12 view .LVU470
 1611 0975 4883C220 		add	rdx, 32	# ivtmp.223,
 1612              	.L157:
GAS LISTING /tmp/ccW4ZvF5.s 			page 49


 1613              		.loc 1 763 9 view .LVU471
 1614              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1615              		.loc 1 763 54 is_stmt 0 view .LVU472
 1616 0979 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp983, MEM[base: vectp.181_10, index: ivtmp.223_474, offset
 1616      16
 1617              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1618              		.loc 1 763 99 view .LVU473
 1619 097e C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r9+rdx]	# tmp984, MEM[base: vectp.185_17, index: ivtmp.223_474, offset
 1619      1411
 1620              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 763 54 view .LVU474
 1622 0984 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.183, tmp983, _184
 1623              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 763 99 view .LVU475
 1625 0988 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.187, tmp984, _182
 1626              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 763 72 view .LVU476
 1628 098c C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.188, vect__62.183, vect__67.187
 1628      E3
 1629              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 763 29 view .LVU477
 1631 0991 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B],
 1631      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1632              		.loc 1 762 48 is_stmt 1 view .LVU478
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1633              		.loc 1 762 12 view .LVU479
 1634 0996 4883C220 		add	rdx, 32	# ivtmp.223,
 1635              	.L156:
 1636              		.loc 1 763 9 view .LVU480
 1637              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1638              		.loc 1 763 54 is_stmt 0 view .LVU481
 1639 099a C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp985, MEM[base: vectp.181_10, index: ivtmp.223_474, offse
 1639      16
 1640              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1641              		.loc 1 763 99 view .LVU482
 1642 099f C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r9+rdx]	# tmp986, MEM[base: vectp.185_17, index: ivtmp.223_474, offset
 1642      3C11
 1643              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 763 54 view .LVU483
 1645 09a5 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.183, tmp985, _184
 1646              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 763 99 view .LVU484
 1648 09a9 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.187, tmp986, _182
 1649              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 763 72 view .LVU485
 1651 09ad C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.188, vect__62.183, vect__67.187
 1652              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 763 29 view .LVU486
 1654 09b1 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B], 
 1654      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1655              		.loc 1 762 48 is_stmt 1 view .LVU487
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1656              		.loc 1 762 12 view .LVU488
 1657 09b6 4883C220 		add	rdx, 32	# ivtmp.223,
 1658              	.L155:
GAS LISTING /tmp/ccW4ZvF5.s 			page 50


 1659              		.loc 1 763 9 view .LVU489
 1660              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1661              		.loc 1 763 54 is_stmt 0 view .LVU490
 1662 09ba C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp987, MEM[base: vectp.181_10, index: ivtmp.223_474, offset
 1662      16
 1663              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1664              		.loc 1 763 99 view .LVU491
 1665 09bf C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp988, MEM[base: vectp.185_17, index: ivtmp.223_474, offset:
 1665      1C11
 1666              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 763 54 view .LVU492
 1668 09c5 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.183, tmp987, _184
 1669              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 763 99 view .LVU493
 1671 09c9 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.187, tmp988, _182
 1672              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 763 72 view .LVU494
 1674 09cd C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.188, vect__62.183, vect__67.187
 1675              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 763 29 view .LVU495
 1677 09d1 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B], 
 1677      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1678              		.loc 1 762 48 is_stmt 1 view .LVU496
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1679              		.loc 1 762 12 view .LVU497
 1680 09d6 4883C220 		add	rdx, 32	# ivtmp.223,
 1681 09da 4C39D2   		cmp	rdx, r10	# ivtmp.223, _476
 1682 09dd 0F842E01 		je	.L197	#,
 1682      0000
 1683              	.L67:
 1684              		.loc 1 763 9 discriminator 2 view .LVU498
 1685              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1686              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU499
 1687 09e3 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp923, MEM[base: vectp.181_10, index: ivtmp.223_474, offset
 1687      16
 1688              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1689              		.loc 1 763 99 discriminator 2 view .LVU500
 1690 09e8 C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r9+rdx]	# tmp924, MEM[base: vectp.185_17, index: ivtmp.223_474, offset
 1690      1C11
 1691              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 763 54 discriminator 2 view .LVU501
 1693 09ee C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.183, tmp923, _184
 1694              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 763 99 discriminator 2 view .LVU502
 1696 09f2 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.187, tmp924, _182
 1697              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 763 72 discriminator 2 view .LVU503
 1699 09f6 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.188, vect__62.183, vect__67.187
 1699      EC
 1700              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 763 29 discriminator 2 view .LVU504
 1702 09fb C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B],
 1702      11
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1703              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU505
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccW4ZvF5.s 			page 51


 1704              		.loc 1 762 12 discriminator 2 view .LVU506
 1705              		.loc 1 763 9 discriminator 2 view .LVU507
 1706              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU508
 1708 0a00 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp925, MEM[base: vectp.181_10, index: ivtmp.223_474, off
 1708      1620
 1709              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1710              		.loc 1 763 99 discriminator 2 view .LVU509
 1711 0a06 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r9+rdx]	# tmp926, MEM[base: vectp.185_17, index: ivtmp.223_474, offse
 1711      741120
 1712              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 763 54 discriminator 2 view .LVU510
 1714 0a0d C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.183, tmp925, _184
 1715              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 763 99 discriminator 2 view .LVU511
 1717 0a11 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.187, tmp926, _182
 1718              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 763 72 discriminator 2 view .LVU512
 1720 0a15 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.188, vect__62.183, vect__67.187
 1721              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 763 29 discriminator 2 view .LVU513
 1723 0a19 C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B]
 1723      1120
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1724              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU514
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1725              		.loc 1 762 12 discriminator 2 view .LVU515
 1726              		.loc 1 763 9 discriminator 2 view .LVU516
 1727              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU517
 1729 0a1f C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp927, MEM[base: vectp.181_10, index: ivtmp.223_474, offs
 1729      1640
 1730              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1731              		.loc 1 763 99 discriminator 2 view .LVU518
 1732 0a25 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r9+rdx]	# tmp928, MEM[base: vectp.185_17, index: ivtmp.223_474, offse
 1732      5C1140
 1733              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 763 54 discriminator 2 view .LVU519
 1735 0a2c C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.183, tmp927, _184
 1736              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 763 99 discriminator 2 view .LVU520
 1738 0a30 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.187, tmp928, _182
 1739              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 763 72 discriminator 2 view .LVU521
 1741 0a34 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.188, vect__62.183, vect__67.187
 1741      C8
 1742              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 763 29 discriminator 2 view .LVU522
 1744 0a39 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B]
 1744      1140
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1745              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU523
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1746              		.loc 1 762 12 discriminator 2 view .LVU524
 1747              		.loc 1 763 9 discriminator 2 view .LVU525
 1748              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU526
GAS LISTING /tmp/ccW4ZvF5.s 			page 52


 1750 0a3f C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp929, MEM[base: vectp.181_10, index: ivtmp.223_474, off
 1750      1660
 1751              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1752              		.loc 1 763 99 discriminator 2 view .LVU527
 1753 0a45 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r9+rdx]	# tmp930, MEM[base: vectp.185_17, index: ivtmp.223_474, offs
 1753      641160
 1754              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 763 54 discriminator 2 view .LVU528
 1756 0a4c C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.183, tmp929, _184
 1757              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 763 99 discriminator 2 view .LVU529
 1759 0a50 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.187, tmp930, _182
 1760              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 763 72 discriminator 2 view .LVU530
 1762 0a54 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.188, vect__62.183, vect__67.187
 1762      F5
 1763              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 763 29 discriminator 2 view .LVU531
 1765 0a59 C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B
 1765      1160
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1766              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU532
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1767              		.loc 1 762 12 discriminator 2 view .LVU533
 1768              		.loc 1 763 9 discriminator 2 view .LVU534
 1769              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU535
 1771 0a5f C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp931, MEM[base: vectp.181_10, index: ivtmp.223_474, of
 1771      16800000 
 1771      00
 1772              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1773              		.loc 1 763 99 discriminator 2 view .LVU536
 1774 0a68 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r9+rdx]	# tmp932, MEM[base: vectp.185_17, index: ivtmp.223_474, offs
 1774      94118000 
 1774      0000
 1775              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 763 54 discriminator 2 view .LVU537
 1777 0a72 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.183, tmp931, _184
 1778              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 763 99 discriminator 2 view .LVU538
 1780 0a76 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.187, tmp932, _182
 1781              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 763 72 discriminator 2 view .LVU539
 1783 0a7a C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.188, vect__62.183, vect__67.187
 1784              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 763 29 discriminator 2 view .LVU540
 1786 0a7e C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B
 1786      11800000 
 1786      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1787              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU541
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1788              		.loc 1 762 12 discriminator 2 view .LVU542
 1789              		.loc 1 763 9 discriminator 2 view .LVU543
 1790              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU544
 1792 0a87 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp933, MEM[base: vectp.181_10, index: ivtmp.223_474, off
GAS LISTING /tmp/ccW4ZvF5.s 			page 53


 1792      16A00000 
 1792      00
 1793              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1794              		.loc 1 763 99 discriminator 2 view .LVU545
 1795 0a90 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r9+rdx]	# tmp934, MEM[base: vectp.185_17, index: ivtmp.223_474, offs
 1795      9C11A000 
 1795      0000
 1796              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 763 54 discriminator 2 view .LVU546
 1798 0a9a C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.183, tmp933, _184
 1799              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 763 99 discriminator 2 view .LVU547
 1801 0a9e C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.187, tmp934, _182
 1802              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 763 72 discriminator 2 view .LVU548
 1804 0aa2 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.188, vect__62.183, vect__67.187
 1804      D1
 1805              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 763 29 discriminator 2 view .LVU549
 1807 0aa7 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0
 1807      11A00000 
 1807      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1808              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU550
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1809              		.loc 1 762 12 discriminator 2 view .LVU551
 1810              		.loc 1 763 9 discriminator 2 view .LVU552
 1811              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU553
 1813 0ab0 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp935, MEM[base: vectp.181_10, index: ivtmp.223_474, of
 1813      16C00000 
 1813      00
 1814              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1815              		.loc 1 763 99 discriminator 2 view .LVU554
 1816 0ab9 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r9+rdx]	# tmp936, MEM[base: vectp.185_17, index: ivtmp.223_474, off
 1816      AC11C000 
 1816      0000
 1817              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 763 54 discriminator 2 view .LVU555
 1819 0ac3 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.183, tmp935, _184
 1820              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 763 99 discriminator 2 view .LVU556
 1822 0ac7 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.187, tmp936, _182
 1823              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 763 72 discriminator 2 view .LVU557
 1825 0acb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.188, vect__62.183, vect__67.187
 1825      FE
 1826              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 763 29 discriminator 2 view .LVU558
 1828 0ad0 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0
 1828      11C00000 
 1828      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1829              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU559
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1830              		.loc 1 762 12 discriminator 2 view .LVU560
 1831              		.loc 1 763 9 discriminator 2 view .LVU561
GAS LISTING /tmp/ccW4ZvF5.s 			page 54


 1832              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 763 54 is_stmt 0 discriminator 2 view .LVU562
 1834 0ad9 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp937, MEM[base: vectp.181_10, index: ivtmp.223_474, off
 1834      16E00000 
 1834      00
 1835              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1836              		.loc 1 763 99 discriminator 2 view .LVU563
 1837 0ae2 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r9+rdx]	# tmp938, MEM[base: vectp.185_17, index: ivtmp.223_474, offs
 1837      BC11E000 
 1837      0000
 1838              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 763 54 discriminator 2 view .LVU564
 1840 0aec C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.183, tmp937, _184
 1841              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 763 99 discriminator 2 view .LVU565
 1843 0af0 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.187, tmp938, _182
 1844              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 763 72 discriminator 2 view .LVU566
 1846 0af4 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.188, vect__62.183, vect__67.187
 1847              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 763 29 discriminator 2 view .LVU567
 1849 0af8 C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.190_212, index: ivtmp.223_474, offset: 0B
 1849      11E00000 
 1849      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1850              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU568
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1851              		.loc 1 762 12 discriminator 2 view .LVU569
 1852 0b01 4881C200 		add	rdx, 256	# ivtmp.223,
 1852      010000
 1853 0b08 4C39D2   		cmp	rdx, r10	# ivtmp.223, _476
 1854 0b0b 0F85D2FE 		jne	.L67	#,
 1854      FFFF
 1855              	.L197:
 1856 0b11 4C8B4C24 		mov	r9, QWORD PTR -48[rsp]	# source_word, %sfp
 1856      D0
 1857 0b16 4D89C4   		mov	r12, r8	# niters_vector_mult_vf.177, niters.175
 1858 0b19 4983E4FC 		and	r12, -4	# niters_vector_mult_vf.177,
 1859 0b1d 4D01E5   		add	r13, r12	# tmp.178, niters_vector_mult_vf.177
 1860 0b20 4D01E1   		add	r9, r12	# source_word, niters_vector_mult_vf.177
 1861 0b23 4D39C4   		cmp	r12, r8	# niters_vector_mult_vf.177, niters.175
 1862 0b26 0F848C07 		je	.L206	#,
 1862      0000
 1863              	.LVL79:
 1864              		.loc 1 763 9 view .LVU570
 1865              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1866              		.loc 1 762 57 is_stmt 0 view .LVU571
 1867 0b2c 4D8D5501 		lea	r10, 1[r13]	# copy_word,
 1868              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1869              		.loc 1 763 99 view .LVU572
 1870 0b30 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r11	# tmp551, *_66, shift
 1870      4CCF08
 1871              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1872              		.loc 1 763 54 view .LVU573
 1873 0b37 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r9*8], rax	# tmp553, *_61, shift_flipped
 1873      34CF
GAS LISTING /tmp/ccW4ZvF5.s 			page 55


 1874              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1875              		.loc 1 763 72 view .LVU574
 1876 0b3d 4809F1   		or	rcx, rsi	# tmp555, tmp553
 1877              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1878              		.loc 1 762 5 view .LVU575
 1879 0b40 4D39F2   		cmp	r10, r14	# copy_word, destination_stop_word
 1880              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 763 83 view .LVU576
 1882 0b43 4D8D4101 		lea	r8, 1[r9]	# _64,
 1883              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 763 72 view .LVU577
 1885 0b47 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_70, tmp555
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1886              		.loc 1 762 48 is_stmt 1 view .LVU578
 1887              	.LVL80:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1888              		.loc 1 762 12 view .LVU579
 1889              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1890              		.loc 1 762 5 is_stmt 0 view .LVU580
 1891 0b4b 0F876707 		ja	.L206	#,
 1891      0000
 1892              		.loc 1 763 9 is_stmt 1 view .LVU581
 1893              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 762 57 is_stmt 0 view .LVU582
 1895 0b51 4983C502 		add	r13, 2	# copy_word,
 1896              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1897              		.loc 1 763 99 view .LVU583
 1898 0b55 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r8*8], r11	# tmp556, *_53, shift
 1898      5CC708
 1899              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1900              		.loc 1 763 54 view .LVU584
 1901 0b5c 4A8B14C7 		mov	rdx, QWORD PTR [rdi+r8*8]	# *_48, *_48
 1902              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1903              		.loc 1 763 83 view .LVU585
 1904 0b60 4983C102 		add	r9, 2	# _51,
 1905              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1906              		.loc 1 763 54 view .LVU586
 1907 0b64 C462FBF7 		shrx	r12, rdx, rax	# tmp558, *_48, shift_flipped
 1907      E2
 1908              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1909              		.loc 1 763 72 view .LVU587
 1910 0b69 4C09E3   		or	rbx, r12	# tmp560, tmp558
 1911 0b6c 4A891CD7 		mov	QWORD PTR [rdi+r10*8], rbx	# *_57, tmp560
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1912              		.loc 1 762 48 is_stmt 1 view .LVU588
 1913              	.LVL81:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1914              		.loc 1 762 12 view .LVU589
 1915              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1916              		.loc 1 762 5 is_stmt 0 view .LVU590
 1917 0b70 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 1918 0b73 0F823F07 		jb	.L206	#,
 1918      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 56


 1919              		.loc 1 763 9 is_stmt 1 view .LVU591
 1920              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1921              		.loc 1 763 99 is_stmt 0 view .LVU592
 1922 0b79 C422A1F7 		shlx	r14, QWORD PTR 8[rdi+r9*8], r11	# tmp561, *_36, shift
 1922      74CF08
 1923              	.LVL82:
 1924              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1925              		.loc 1 763 54 view .LVU593
 1926 0b80 4E8B1CCF 		mov	r11, QWORD PTR [rdi+r9*8]	# *_30, *_30
 1927              	.LVL83:
 1928              		.loc 1 763 54 view .LVU594
 1929 0b84 C4C2FBF7 		shrx	rax, r11, rax	# tmp563, *_30, shift_flipped
 1929      C3
 1930              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1931              		.loc 1 763 72 view .LVU595
 1932 0b89 4C09F0   		or	rax, r14	# tmp565, tmp561
 1933 0b8c 4A8904EF 		mov	QWORD PTR [rdi+r13*8], rax	# *_40, tmp565
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1934              		.loc 1 762 48 is_stmt 1 view .LVU596
 1935              	.LVL84:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1936              		.loc 1 762 12 view .LVU597
 1937 0b90 C5F877   		vzeroupper
 1938              	.LVL85:
 1939              	.L71:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1940              		.loc 1 762 12 is_stmt 0 view .LVU598
 1941 0b93 4C3B7C24 		cmp	r15, QWORD PTR -40[rsp]	# _175, %sfp
 1941      D8
 1942 0b98 B9000000 		mov	ecx, 0	# tmp550,
 1942      00
 1943 0b9d 4C8B7424 		mov	r14, QWORD PTR -32[rsp]	#, %sfp
 1943      E0
 1944 0ba2 490F46CE 		cmovbe	rcx, r14	#,, tmp549
 1945 0ba6 4C01F9   		add	rcx, r15	# copy_word, _175
 1946              	.L64:
 764:sieve_extend.c ****     }
 765:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1947              		.loc 1 765 5 is_stmt 1 view .LVU599
 1948              	# sieve_extend.c:765:     bitarray[copy_word] &= chopmask(destination_stop);
 1949              		.loc 1 765 25 is_stmt 0 view .LVU600
 1950 0ba9 488B7424 		mov	rsi, QWORD PTR -16[rsp]	# _193, %sfp
 1950      F0
 1951 0bae 482134CF 		and	QWORD PTR [rdi+rcx*8], rsi	# *_72, _193
 1952              	# sieve_extend.c:767: }
 766:sieve_extend.c **** 
 767:sieve_extend.c **** }
 1953              		.loc 1 767 1 view .LVU601
 1954 0bb2 488D65D8 		lea	rsp, -40[rbp]	#,
 1955 0bb6 5B       		pop	rbx	#
 1956 0bb7 415C     		pop	r12	#
 1957 0bb9 415D     		pop	r13	#
 1958 0bbb 415E     		pop	r14	#
 1959 0bbd 415F     		pop	r15	#
 1960 0bbf 5D       		pop	rbp	#
 1961              		.cfi_remember_state
 1962              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccW4ZvF5.s 			page 57


 1963 0bc0 C3       		ret	
 1964              	.LVL86:
 1965              		.p2align 4,,7
 1966 0bc1 0F1F8000 		.p2align 3
 1966      000000
 1967              	.L210:
 1968              		.cfi_restore_state
 1969              	.LBB315:
 752:sieve_extend.c **** 
 1970              		.loc 1 752 9 is_stmt 1 view .LVU602
 1971              	.LBB316:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1972              		.loc 1 756 14 view .LVU603
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1973              		.loc 1 756 40 view .LVU604
 1974              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1975              		.loc 1 756 9 is_stmt 0 view .LVU605
 1976 0bc8 4D89F4   		mov	r12, r14	# loop_distance, destination_stop_word
 1977 0bcb 4929CC   		sub	r12, rcx	# loop_distance, copy_word
 1978              	.LVL87:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1979              		.loc 1 756 9 view .LVU606
 1980 0bce 0F843904 		je	.L62	#,
 1980      0000
 1981 0bd4 4C89FA   		mov	rdx, r15	# tmp422, _180
 1982              	.LVL88:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 756 9 view .LVU607
 1984 0bd7 41BA0500 		mov	r10d, 5	# tmp426,
 1984      0000
 1985 0bdd 48C1EA03 		shr	rdx, 3	# tmp422,
 1986 0be1 4D8D6C24 		lea	r13, -1[r12]	# tmp424,
 1986      FF
 1987 0be6 48F7DA   		neg	rdx	# tmp423
 1988 0be9 83E203   		and	edx, 3	# prolog_loop_niters.193,
 1989 0bec 4C8D4203 		lea	r8, 3[rdx]	# tmp425,
 1990 0bf0 4983F805 		cmp	r8, 5	# tmp425,
 1991 0bf4 4D0F42C2 		cmovb	r8, r10	# tmp425,, tmp591, tmp426
 1992 0bf8 4D39C5   		cmp	r13, r8	# tmp424, tmp591
 1993 0bfb 0F820407 		jb	.L72	#,
 1993      0000
 1994 0c01 4885D2   		test	rdx, rdx	# prolog_loop_niters.193
 1995 0c04 0F849606 		je	.L73	#,
 1995      0000
 757:sieve_extend.c ****         }
 1996              		.loc 1 757 13 is_stmt 1 view .LVU608
 1997              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 1998              		.loc 1 757 109 is_stmt 0 view .LVU609
 1999 0c0a 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# _179, %sfp
 1999      E8
 2000              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2001              		.loc 1 757 105 view .LVU610
 2002 0c0f 4C8D4601 		lea	r8, 1[rsi]	# tmp572,
 2003              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 58


 757:sieve_extend.c ****         }
 2004              		.loc 1 757 62 view .LVU611
 2005 0c13 4D8B3F   		mov	r15, QWORD PTR [r15]	# *_180, *_180
 2006              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2007              		.loc 1 756 59 view .LVU612
 2008 0c16 48C74424 		mov	QWORD PTR -24[rsp], 1	# %sfp,
 2008      E8010000 
 2008      00
 2009              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2010              		.loc 1 757 109 view .LVU613
 2011 0c1f 4C8B6C1F 		mov	r13, QWORD PTR 8[rdi+rbx]	# *_437, *_437
 2011      08
 2012              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2013              		.loc 1 757 62 view .LVU614
 2014 0c24 C4C2FBF7 		shrx	rbx, r15, rax	# tmp429, *_180, shift_flipped
 2014      DF
 2015              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2016              		.loc 1 757 109 view .LVU615
 2017 0c29 C442A1F7 		shlx	r10, r13, r11	# tmp427, *_437, shift
 2017      D5
 2018              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2019              		.loc 1 757 80 view .LVU616
 2020 0c2e 4909DA   		or	r10, rbx	# tmp431, tmp429
 2021 0c31 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_442, tmp431
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2022              		.loc 1 756 58 is_stmt 1 view .LVU617
 2023              	.LVL89:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2024              		.loc 1 756 40 view .LVU618
 2025 0c35 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.193,
 2026 0c39 7449     		je	.L58	#,
 757:sieve_extend.c ****         }
 2027              		.loc 1 757 13 view .LVU619
 2028              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2029              		.loc 1 757 109 is_stmt 0 view .LVU620
 2030 0c3b C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r8*8], r11	# tmp433, *_457, shift
 2030      6CC708
 2031              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2032              		.loc 1 757 62 view .LVU621
 2033 0c42 C422FBF7 		shrx	r10, QWORD PTR [rdi+r8*8], rax	# tmp435, *_452, shift_flipped
 2033      14C7
 2034              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 756 59 view .LVU622
 2036 0c48 48C74424 		mov	QWORD PTR -24[rsp], 2	# %sfp,
 2036      E8020000 
 2036      00
 2037              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2038              		.loc 1 757 80 view .LVU623
GAS LISTING /tmp/ccW4ZvF5.s 			page 59


 2039 0c51 4D09D5   		or	r13, r10	# tmp437, tmp435
 2040 0c54 4E896CCF 		mov	QWORD PTR 16[rdi+r9*8], r13	# *_462, tmp437
 2040      10
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2041              		.loc 1 756 58 is_stmt 1 view .LVU624
 2042              	.LVL90:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2043              		.loc 1 756 40 view .LVU625
 2044 0c59 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.193,
 2045 0c5d 7525     		jne	.L58	#,
 757:sieve_extend.c ****         }
 2046              		.loc 1 757 13 view .LVU626
 2047              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2048              		.loc 1 756 59 is_stmt 0 view .LVU627
 2049 0c5f 48C74424 		mov	QWORD PTR -24[rsp], 3	# %sfp,
 2049      E8030000 
 2049      00
 2050              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2051              		.loc 1 757 58 view .LVU628
 2052 0c68 4C8D7E02 		lea	r15, 2[rsi]	# tmp438,
 2053              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2054              		.loc 1 757 62 view .LVU629
 2055 0c6c 4A8B1CFF 		mov	rbx, QWORD PTR [rdi+r15*8]	# *_231, *_231
 2056              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2057              		.loc 1 757 109 view .LVU630
 2058 0c70 C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r15*8], r11	# tmp440, *_236, shift
 2058      6CFF08
 2059              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2060              		.loc 1 757 62 view .LVU631
 2061 0c77 C462FBF7 		shrx	r10, rbx, rax	# tmp442, *_231, shift_flipped
 2061      D3
 2062              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2063              		.loc 1 757 80 view .LVU632
 2064 0c7c 4D09D5   		or	r13, r10	# tmp444, tmp442
 2065 0c7f 4E896CCF 		mov	QWORD PTR 24[rdi+r9*8], r13	# *_241, tmp444
 2065      18
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2066              		.loc 1 756 58 is_stmt 1 view .LVU633
 2067              	.LVL91:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2068              		.loc 1 756 40 view .LVU634
 2069              	.L58:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2070              		.loc 1 756 40 is_stmt 0 view .LVU635
 2071 0c84 4D89E5   		mov	r13, r12	# niters.194, loop_distance
 2072 0c87 4901D0   		add	r8, rdx	# tmp448, prolog_loop_niters.193
 2073 0c8a 4929D5   		sub	r13, rdx	# niters.194, prolog_loop_niters.193
 2074 0c8d 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.203,
 2075 0c91 4D89EF   		mov	r15, r13	# bnd.195, niters.194
 2076 0c94 4C8D0C16 		lea	r9, [rsi+rdx]	# tmp445,
 2077 0c98 49C1EF02 		shr	r15, 2	# bnd.195,
GAS LISTING /tmp/ccW4ZvF5.s 			page 60


 2078 0c9c 4801CA   		add	rdx, rcx	# tmp450, copy_word
 2079 0c9f 49C1E705 		sal	r15, 5	# bnd.195,
 2080 0ca3 488D1CD7 		lea	rbx, [rdi+rdx*8]	# vectp.208,
 2081 0ca7 4D8D47E0 		lea	r8, -32[r15]	# tmp581,
 2082              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 756 33 view .LVU636
 2084 0cab 31D2     		xor	edx, edx	# ivtmp.233
 2085 0cad C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _184, %sfp
 2085      24F8
 2086 0cb3 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.199,
 2087 0cb7 49C1E805 		shr	r8, 5	# tmp579,
 2088 0cbb C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _182, %sfp
 2088      24FC
 2089 0cc1 4983C001 		add	r8, 1	# tmp582,
 2090 0cc5 4183E007 		and	r8d, 7	# tmp583,
 2091 0cc9 0F840301 		je	.L60	#,
 2091      0000
 2092 0ccf 4983F801 		cmp	r8, 1	# tmp583,
 2093 0cd3 0F84CE00 		je	.L149	#,
 2093      0000
 2094 0cd9 4983F802 		cmp	r8, 2	# tmp583,
 2095 0cdd 0F84A200 		je	.L150	#,
 2095      0000
 2096 0ce3 4983F803 		cmp	r8, 3	# tmp583,
 2097 0ce7 747B     		je	.L151	#,
 2098 0ce9 4983F804 		cmp	r8, 4	# tmp583,
 2099 0ced 7453     		je	.L152	#,
 2100 0cef 4983F805 		cmp	r8, 5	# tmp583,
 2101 0cf3 742C     		je	.L153	#,
 2102 0cf5 4983F806 		cmp	r8, 6	# tmp583,
 2103 0cf9 0F85E105 		jne	.L211	#,
 2103      0000
 2104              	.L154:
 757:sieve_extend.c ****         }
 2105              		.loc 1 757 13 is_stmt 1 view .LVU637
 2106              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2107              		.loc 1 757 62 is_stmt 0 view .LVU638
 2108 0cff C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r9+rdx]	# tmp963, MEM[base: vectp.199_280, index: ivtmp.233_477, offse
 2108      2411
 2109              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2110              		.loc 1 757 109 view .LVU639
 2111 0d05 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r10+rdx]	# tmp964, MEM[base: vectp.203_287, index: ivtmp.233_477, offs
 2111      3412
 2112              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2113              		.loc 1 757 62 view .LVU640
 2114 0d0b C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.201, tmp963, _184
 2115              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2116              		.loc 1 757 109 view .LVU641
 2117 0d0f C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.205, tmp964, _182
 2118              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2119              		.loc 1 757 80 view .LVU642
GAS LISTING /tmp/ccW4ZvF5.s 			page 61


 2120 0d13 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.206, vect__49.201, vect__54.205
 2120      F7
 2121              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2122              		.loc 1 757 35 view .LVU643
 2123 0d18 C5FE7F34 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm6	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], 
 2123      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2124              		.loc 1 756 58 is_stmt 1 view .LVU644
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2125              		.loc 1 756 40 view .LVU645
 2126 0d1d 4883C220 		add	rdx, 32	# ivtmp.233,
 2127              	.L153:
 757:sieve_extend.c ****         }
 2128              		.loc 1 757 13 view .LVU646
 2129              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2130              		.loc 1 757 62 is_stmt 0 view .LVU647
 2131 0d21 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r9+rdx]	# tmp965, MEM[base: vectp.199_280, index: ivtmp.233_477, offset
 2131      1411
 2132              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2133              		.loc 1 757 109 view .LVU648
 2134 0d27 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r10+rdx]	# tmp966, MEM[base: vectp.203_287, index: ivtmp.233_477, offse
 2134      2412
 2135              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2136              		.loc 1 757 62 view .LVU649
 2137 0d2d C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.201, tmp965, _184
 2138              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2139              		.loc 1 757 109 view .LVU650
 2140 0d31 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.205, tmp966, _182
 2141              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2142              		.loc 1 757 80 view .LVU651
 2143 0d35 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.206, vect__49.201, vect__54.205
 2144              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2145              		.loc 1 757 35 view .LVU652
 2146 0d39 C57E7F04 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm8	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], 
 2146      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2147              		.loc 1 756 58 is_stmt 1 view .LVU653
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2148              		.loc 1 756 40 view .LVU654
 2149 0d3e 4883C220 		add	rdx, 32	# ivtmp.233,
 2150              	.L152:
 757:sieve_extend.c ****         }
 2151              		.loc 1 757 13 view .LVU655
 2152              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2153              		.loc 1 757 62 is_stmt 0 view .LVU656
 2154 0d42 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r9+rdx]	# tmp967, MEM[base: vectp.199_280, index: ivtmp.233_477, offset
 2154      0C11
 2155              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
GAS LISTING /tmp/ccW4ZvF5.s 			page 62


 2156              		.loc 1 757 109 view .LVU657
 2157 0d48 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10+rdx]	# tmp968, MEM[base: vectp.203_287, index: ivtmp.233_477, offse
 2157      1C12
 2158              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2159              		.loc 1 757 62 view .LVU658
 2160 0d4e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.201, tmp967, _184
 2161              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2162              		.loc 1 757 109 view .LVU659
 2163 0d52 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.205, tmp968, _182
 2164              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2165              		.loc 1 757 80 view .LVU660
 2166 0d56 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.206, vect__49.201, vect__54.205
 2166      E3
 2167              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2168              		.loc 1 757 35 view .LVU661
 2169 0d5b C57E7F24 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm12	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B],
 2169      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2170              		.loc 1 756 58 is_stmt 1 view .LVU662
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2171              		.loc 1 756 40 view .LVU663
 2172 0d60 4883C220 		add	rdx, 32	# ivtmp.233,
 2173              	.L151:
 757:sieve_extend.c ****         }
 2174              		.loc 1 757 13 view .LVU664
 2175              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2176              		.loc 1 757 62 is_stmt 0 view .LVU665
 2177 0d64 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rdx]	# tmp969, MEM[base: vectp.199_280, index: ivtmp.233_477, offse
 2177      2C11
 2178              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2179              		.loc 1 757 109 view .LVU666
 2180 0d6a C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r10+rdx]	# tmp970, MEM[base: vectp.203_287, index: ivtmp.233_477, offs
 2180      3C12
 2181              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2182              		.loc 1 757 62 view .LVU667
 2183 0d70 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.201, tmp969, _184
 2184              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2185              		.loc 1 757 109 view .LVU668
 2186 0d74 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.205, tmp970, _182
 2187              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2188              		.loc 1 757 80 view .LVU669
 2189 0d78 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.206, vect__49.201, vect__54.205
 2190              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2191              		.loc 1 757 35 view .LVU670
 2192 0d7c C5FE7F14 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm2	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], 
 2192      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccW4ZvF5.s 			page 63


 2193              		.loc 1 756 58 is_stmt 1 view .LVU671
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2194              		.loc 1 756 40 view .LVU672
 2195 0d81 4883C220 		add	rdx, 32	# ivtmp.233,
 2196              	.L150:
 757:sieve_extend.c ****         }
 2197              		.loc 1 757 13 view .LVU673
 2198              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2199              		.loc 1 757 62 is_stmt 0 view .LVU674
 2200 0d85 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r9+rdx]	# tmp971, MEM[base: vectp.199_280, index: ivtmp.233_477, offset
 2200      3C11
 2201              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2202              		.loc 1 757 109 view .LVU675
 2203 0d8b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r10+rdx]	# tmp972, MEM[base: vectp.203_287, index: ivtmp.233_477, offse
 2203      2C12
 2204              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2205              		.loc 1 757 62 view .LVU676
 2206 0d91 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.201, tmp971, _184
 2207              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2208              		.loc 1 757 109 view .LVU677
 2209 0d95 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.205, tmp972, _182
 2210              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2211              		.loc 1 757 80 view .LVU678
 2212 0d99 C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.206, vect__49.201, vect__54.205
 2212      C8
 2213              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2214              		.loc 1 757 35 view .LVU679
 2215 0d9e C57E7F0C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm9	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], 
 2215      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2216              		.loc 1 756 58 is_stmt 1 view .LVU680
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2217              		.loc 1 756 40 view .LVU681
 2218 0da3 4883C220 		add	rdx, 32	# ivtmp.233,
 2219              	.L149:
 757:sieve_extend.c ****         }
 2220              		.loc 1 757 13 view .LVU682
 2221              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2222              		.loc 1 757 62 is_stmt 0 view .LVU683
 2223 0da7 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r9+rdx]	# tmp973, MEM[base: vectp.199_280, index: ivtmp.233_477, offse
 2223      1411
 2224              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2225              		.loc 1 757 109 view .LVU684
 2226 0dad C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10+rdx]	# tmp974, MEM[base: vectp.203_287, index: ivtmp.233_477, offse
 2226      1C12
 2227              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2228              		.loc 1 757 62 view .LVU685
 2229 0db3 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.201, tmp973, _184
GAS LISTING /tmp/ccW4ZvF5.s 			page 64


 2230              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2231              		.loc 1 757 109 view .LVU686
 2232 0db7 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.205, tmp974, _182
 2233              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2234              		.loc 1 757 80 view .LVU687
 2235 0dbb C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.206, vect__49.201, vect__54.205
 2235      EC
 2236              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2237              		.loc 1 757 35 view .LVU688
 2238 0dc0 C57E7F2C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm13	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B],
 2238      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2239              		.loc 1 756 58 is_stmt 1 view .LVU689
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2240              		.loc 1 756 40 view .LVU690
 2241 0dc5 4883C220 		add	rdx, 32	# ivtmp.233,
 2242 0dc9 4C39FA   		cmp	rdx, r15	# ivtmp.233, _479
 2243 0dcc 0F843601 		je	.L196	#,
 2243      0000
 2244              	.L60:
 757:sieve_extend.c ****         }
 2245              		.loc 1 757 13 discriminator 3 view .LVU691
 2246              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2247              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU692
 2248 0dd2 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rdx]	# tmp893, MEM[base: vectp.199_280, index: ivtmp.233_477, offse
 2248      3411
 2249              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2250              		.loc 1 757 109 discriminator 3 view .LVU693
 2251 0dd8 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r10+rdx]	# tmp894, MEM[base: vectp.203_287, index: ivtmp.233_477, offse
 2251      3412
 2252              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2253              		.loc 1 757 62 discriminator 3 view .LVU694
 2254 0dde C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.201, tmp893, _184
 2255              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2256              		.loc 1 757 109 discriminator 3 view .LVU695
 2257 0de2 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.205, tmp894, _182
 2258              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2259              		.loc 1 757 80 discriminator 3 view .LVU696
 2260 0de6 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.206, vect__49.201, vect__54.205
 2261              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2262              		.loc 1 757 35 discriminator 3 view .LVU697
 2263 0dea C5FE7F3C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm7	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], 
 2263      13
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2264              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU698
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2265              		.loc 1 756 40 discriminator 3 view .LVU699
 757:sieve_extend.c ****         }
GAS LISTING /tmp/ccW4ZvF5.s 			page 65


 2266              		.loc 1 757 13 discriminator 3 view .LVU700
 2267              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2268              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU701
 2269 0def C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r9+rdx]	# tmp895, MEM[base: vectp.199_280, index: ivtmp.233_477, offs
 2269      641120
 2270              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2271              		.loc 1 757 109 discriminator 3 view .LVU702
 2272 0df6 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r10+rdx]	# tmp896, MEM[base: vectp.203_287, index: ivtmp.233_477, off
 2272      441220
 2273              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2274              		.loc 1 757 62 discriminator 3 view .LVU703
 2275 0dfd C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__49.201, tmp895, _184
 2276              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2277              		.loc 1 757 109 discriminator 3 view .LVU704
 2278 0e01 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__54.205, tmp896, _182
 2279              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2280              		.loc 1 757 80 discriminator 3 view .LVU705
 2281 0e05 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__58.206, vect__49.201, vect__54.205
 2281      D1
 2282              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2283              		.loc 1 757 35 discriminator 3 view .LVU706
 2284 0e0a C57E7F54 		vmovdqu	YMMWORD PTR 32[rbx+rdx], ymm10	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B
 2284      1320
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2285              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU707
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2286              		.loc 1 756 40 discriminator 3 view .LVU708
 757:sieve_extend.c ****         }
 2287              		.loc 1 757 13 discriminator 3 view .LVU709
 2288              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2289              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU710
 2290 0e10 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r9+rdx]	# tmp897, MEM[base: vectp.199_280, index: ivtmp.233_477, off
 2290      5C1140
 2291              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2292              		.loc 1 757 109 discriminator 3 view .LVU711
 2293 0e17 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r10+rdx]	# tmp898, MEM[base: vectp.203_287, index: ivtmp.233_477, off
 2293      5C1240
 2294              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2295              		.loc 1 757 62 discriminator 3 view .LVU712
 2296 0e1e C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.201, tmp897, _184
 2297              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2298              		.loc 1 757 109 discriminator 3 view .LVU713
 2299 0e22 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.205, tmp898, _182
 2300              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2301              		.loc 1 757 80 discriminator 3 view .LVU714
 2302 0e26 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.206, vect__49.201, vect__54.205
GAS LISTING /tmp/ccW4ZvF5.s 			page 66


 2302      F5
 2303              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2304              		.loc 1 757 35 discriminator 3 view .LVU715
 2305 0e2b C57E7F74 		vmovdqu	YMMWORD PTR 64[rbx+rdx], ymm14	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B
 2305      1340
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2306              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU716
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2307              		.loc 1 756 40 discriminator 3 view .LVU717
 757:sieve_extend.c ****         }
 2308              		.loc 1 757 13 discriminator 3 view .LVU718
 2309              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2310              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU719
 2311 0e31 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r9+rdx]	# tmp899, MEM[base: vectp.199_280, index: ivtmp.233_477, off
 2311      7C1160
 2312              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2313              		.loc 1 757 109 discriminator 3 view .LVU720
 2314 0e38 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r10+rdx]	# tmp900, MEM[base: vectp.203_287, index: ivtmp.233_477, off
 2314      541260
 2315              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2316              		.loc 1 757 62 discriminator 3 view .LVU721
 2317 0e3f C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.201, tmp899, _184
 2318              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2319              		.loc 1 757 109 discriminator 3 view .LVU722
 2320 0e43 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.205, tmp900, _182
 2321              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2322              		.loc 1 757 80 discriminator 3 view .LVU723
 2323 0e47 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.206, vect__49.201, vect__54.205
 2324              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2325              		.loc 1 757 35 discriminator 3 view .LVU724
 2326 0e4b C5FE7F64 		vmovdqu	YMMWORD PTR 96[rbx+rdx], ymm4	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B]
 2326      1360
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2327              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU725
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2328              		.loc 1 756 40 discriminator 3 view .LVU726
 757:sieve_extend.c ****         }
 2329              		.loc 1 757 13 discriminator 3 view .LVU727
 2330              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2331              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU728
 2332 0e51 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 128[r9+rdx]	# tmp901, MEM[base: vectp.199_280, index: ivtmp.233_477, off
 2332      AC118000 
 2332      0000
 2333              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2334              		.loc 1 757 109 discriminator 3 view .LVU729
 2335 0e5b C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r10+rdx]	# tmp902, MEM[base: vectp.203_287, index: ivtmp.233_477, of
 2335      8C128000 
 2335      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 67


 2336              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2337              		.loc 1 757 62 discriminator 3 view .LVU730
 2338 0e65 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__49.201, tmp901, _184
 2339              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2340              		.loc 1 757 109 discriminator 3 view .LVU731
 2341 0e69 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.205, tmp902, _182
 2342              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2343              		.loc 1 757 80 discriminator 3 view .LVU732
 2344 0e6d C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.206, vect__49.201, vect__54.205
 2344      DA
 2345              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2346              		.loc 1 757 35 discriminator 3 view .LVU733
 2347 0e72 C57E7F9C 		vmovdqu	YMMWORD PTR 128[rbx+rdx], ymm11	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0
 2347      13800000 
 2347      00
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2348              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU734
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2349              		.loc 1 756 40 discriminator 3 view .LVU735
 757:sieve_extend.c ****         }
 2350              		.loc 1 757 13 discriminator 3 view .LVU736
 2351              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2352              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU737
 2353 0e7b C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rdx]	# tmp903, MEM[base: vectp.199_280, index: ivtmp.233_477, of
 2353      A411A000 
 2353      0000
 2354              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2355              		.loc 1 757 109 discriminator 3 view .LVU738
 2356 0e85 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r10+rdx]	# tmp904, MEM[base: vectp.203_287, index: ivtmp.233_477, of
 2356      9C12A000 
 2356      0000
 2357              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2358              		.loc 1 757 62 discriminator 3 view .LVU739
 2359 0e8f C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.201, tmp903, _184
 2360              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2361              		.loc 1 757 109 discriminator 3 view .LVU740
 2362 0e93 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.205, tmp904, _182
 2363              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2364              		.loc 1 757 80 discriminator 3 view .LVU741
 2365 0e97 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.206, vect__49.201, vect__54.205
 2365      FE
 2366              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2367              		.loc 1 757 35 discriminator 3 view .LVU742
 2368 0e9c C57E7FBC 		vmovdqu	YMMWORD PTR 160[rbx+rdx], ymm15	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0
 2368      13A00000 
 2368      00
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccW4ZvF5.s 			page 68


 2369              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU743
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2370              		.loc 1 756 40 discriminator 3 view .LVU744
 757:sieve_extend.c ****         }
 2371              		.loc 1 757 13 discriminator 3 view .LVU745
 2372              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2373              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU746
 2374 0ea5 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r9+rdx]	# tmp905, MEM[base: vectp.199_280, index: ivtmp.233_477, off
 2374      B411C000 
 2374      0000
 2375              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2376              		.loc 1 757 109 discriminator 3 view .LVU747
 2377 0eaf C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r10+rdx]	# tmp906, MEM[base: vectp.203_287, index: ivtmp.233_477, of
 2377      BC12C000 
 2377      0000
 2378              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2379              		.loc 1 757 62 discriminator 3 view .LVU748
 2380 0eb9 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.201, tmp905, _184
 2381              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2382              		.loc 1 757 109 discriminator 3 view .LVU749
 2383 0ebd C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.205, tmp906, _182
 2384              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2385              		.loc 1 757 80 discriminator 3 view .LVU750
 2386 0ec1 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__58.206, vect__49.201, vect__54.205
 2387              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2388              		.loc 1 757 35 discriminator 3 view .LVU751
 2389 0ec5 C5FE7FAC 		vmovdqu	YMMWORD PTR 192[rbx+rdx], ymm5	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B
 2389      13C00000 
 2389      00
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2390              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU752
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2391              		.loc 1 756 40 discriminator 3 view .LVU753
 757:sieve_extend.c ****         }
 2392              		.loc 1 757 13 discriminator 3 view .LVU754
 2393              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2394              		.loc 1 757 62 is_stmt 0 discriminator 3 view .LVU755
 2395 0ece C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 224[r9+rdx]	# tmp907, MEM[base: vectp.199_280, index: ivtmp.233_477, off
 2395      8411E000 
 2395      0000
 2396              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2397              		.loc 1 757 109 discriminator 3 view .LVU756
 2398 0ed8 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r10+rdx]	# tmp908, MEM[base: vectp.203_287, index: ivtmp.233_477, o
 2398      9412E000 
 2398      0000
 2399              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2400              		.loc 1 757 62 discriminator 3 view .LVU757
 2401 0ee2 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.201, tmp907, _184
GAS LISTING /tmp/ccW4ZvF5.s 			page 69


 2402              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2403              		.loc 1 757 109 discriminator 3 view .LVU758
 2404 0ee6 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.205, tmp908, _182
 2405              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2406              		.loc 1 757 80 discriminator 3 view .LVU759
 2407 0eea C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.206, vect__49.201, vect__54.205
 2407      E3
 2408              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2409              		.loc 1 757 35 discriminator 3 view .LVU760
 2410 0eef C57E7FA4 		vmovdqu	YMMWORD PTR 224[rbx+rdx], ymm12	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0
 2410      13E00000 
 2410      00
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2411              		.loc 1 756 58 is_stmt 1 discriminator 3 view .LVU761
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2412              		.loc 1 756 40 discriminator 3 view .LVU762
 2413 0ef8 4881C200 		add	rdx, 256	# ivtmp.233,
 2413      010000
 2414 0eff 4C39FA   		cmp	rdx, r15	# ivtmp.233, _479
 2415 0f02 0F85CAFE 		jne	.L60	#,
 2415      FFFF
 2416              	.L196:
 2417 0f08 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# i, %sfp
 2417      E8
 2418 0f0d 4D89E9   		mov	r9, r13	# niters_vector_mult_vf.196, niters.194
 2419 0f10 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.196,
 2420 0f14 4D01CA   		add	r10, r9	# i, niters_vector_mult_vf.196
 2421 0f17 4D39CD   		cmp	r13, r9	# niters.194, niters_vector_mult_vf.196
 2422 0f1a 0F84B803 		je	.L212	#,
 2422      0000
 2423 0f20 C5F877   		vzeroupper
 2424              	.L57:
 2425              	.LVL92:
 757:sieve_extend.c ****         }
 2426              		.loc 1 757 13 view .LVU763
 2427              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2428              		.loc 1 757 58 is_stmt 0 view .LVU764
 2429 0f23 4E8D2C16 		lea	r13, [rsi+r10]	# tmp460,
 2430              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2431              		.loc 1 757 109 view .LVU765
 2432 0f27 C422A1F7 		shlx	r15, QWORD PTR 8[rdi+r13*8], r11	# tmp462, *_346, shift
 2432      7CEF08
 2433              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2434              		.loc 1 757 62 view .LVU766
 2435 0f2e 4E8B04EF 		mov	r8, QWORD PTR [rdi+r13*8]	# *_341, *_341
 2436              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2437              		.loc 1 756 59 view .LVU767
 2438 0f32 4D8D6A01 		lea	r13, 1[r10]	# i,
 2439              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
GAS LISTING /tmp/ccW4ZvF5.s 			page 70


 2440              		.loc 1 757 21 view .LVU768
 2441 0f36 4A8D1C11 		lea	rbx, [rcx+r10]	# tmp461,
 2442              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2443              		.loc 1 757 62 view .LVU769
 2444 0f3a C4C2FBF7 		shrx	rdx, r8, rax	# tmp464, *_341, shift_flipped
 2444      D0
 2445              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2446              		.loc 1 757 80 view .LVU770
 2447 0f3f 4909D7   		or	r15, rdx	# tmp466, tmp464
 2448              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2449              		.loc 1 756 9 view .LVU771
 2450 0f42 4D39EC   		cmp	r12, r13	# loop_distance, i
 2451              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2452              		.loc 1 757 80 view .LVU772
 2453 0f45 4C893CDF 		mov	QWORD PTR [rdi+rbx*8], r15	# *_351, tmp466
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2454              		.loc 1 756 58 is_stmt 1 view .LVU773
 2455              	.LVL93:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2456              		.loc 1 756 40 view .LVU774
 2457              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2458              		.loc 1 756 9 is_stmt 0 view .LVU775
 2459 0f49 0F86BE00 		jbe	.L62	#,
 2459      0000
 757:sieve_extend.c ****         }
 2460              		.loc 1 757 13 is_stmt 1 view .LVU776
 2461              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2462              		.loc 1 757 58 is_stmt 0 view .LVU777
 2463 0f4f 4E8D0C2E 		lea	r9, [rsi+r13]	# tmp467,
 2464              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 756 59 view .LVU778
 2466 0f53 498D5202 		lea	rdx, 2[r10]	# i,
 2467              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2468              		.loc 1 757 62 view .LVU779
 2469 0f57 4E8B3CCF 		mov	r15, QWORD PTR [rdi+r9*8]	# *_359, *_359
 2470              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2471              		.loc 1 757 21 view .LVU780
 2472 0f5b 4901CD   		add	r13, rcx	# tmp468, copy_word
 2473              	.LVL94:
 2474              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2475              		.loc 1 757 109 view .LVU781
 2476 0f5e C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r9*8], r11	# tmp469, *_364, shift
 2476      5CCF08
 2477              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2478              		.loc 1 757 62 view .LVU782
 2479 0f65 C442FBF7 		shrx	r8, r15, rax	# tmp471, *_359, shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 71


 2479      C7
 2480              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2481              		.loc 1 757 80 view .LVU783
 2482 0f6a 4C09C3   		or	rbx, r8	# tmp473, tmp471
 2483              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2484              		.loc 1 756 9 view .LVU784
 2485 0f6d 4939D4   		cmp	r12, rdx	# loop_distance, i
 2486              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2487              		.loc 1 757 80 view .LVU785
 2488 0f70 4A891CEF 		mov	QWORD PTR [rdi+r13*8], rbx	# *_369, tmp473
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2489              		.loc 1 756 58 is_stmt 1 view .LVU786
 2490              	.LVL95:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2491              		.loc 1 756 40 view .LVU787
 2492              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2493              		.loc 1 756 9 is_stmt 0 view .LVU788
 2494 0f74 0F869300 		jbe	.L62	#,
 2494      0000
 757:sieve_extend.c ****         }
 2495              		.loc 1 757 13 is_stmt 1 view .LVU789
 2496              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2497              		.loc 1 757 58 is_stmt 0 view .LVU790
 2498 0f7a 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp474,
 2499              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2500              		.loc 1 757 21 view .LVU791
 2501 0f7e 4801CA   		add	rdx, rcx	# tmp475, copy_word
 2502              	.LVL96:
 2503              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2504              		.loc 1 757 62 view .LVU792
 2505 0f81 4E8B0CEF 		mov	r9, QWORD PTR [rdi+r13*8]	# *_377, *_377
 2506              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2507              		.loc 1 757 109 view .LVU793
 2508 0f85 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r13*8], r11	# tmp476, *_382, shift
 2508      5CEF08
 2509              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2510              		.loc 1 757 62 view .LVU794
 2511 0f8c C442FBF7 		shrx	r15, r9, rax	# tmp478, *_377, shift_flipped
 2511      F9
 2512              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2513              		.loc 1 757 80 view .LVU795
 2514 0f91 4C09FB   		or	rbx, r15	# tmp480, tmp478
 2515 0f94 48891CD7 		mov	QWORD PTR [rdi+rdx*8], rbx	# *_387, tmp480
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2516              		.loc 1 756 58 is_stmt 1 view .LVU796
 2517              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccW4ZvF5.s 			page 72


 2518              		.loc 1 756 59 is_stmt 0 view .LVU797
 2519 0f98 498D5203 		lea	rdx, 3[r10]	# i,
 2520              	.LVL97:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2521              		.loc 1 756 40 is_stmt 1 view .LVU798
 2522              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2523              		.loc 1 756 9 is_stmt 0 view .LVU799
 2524 0f9c 4939D4   		cmp	r12, rdx	# loop_distance, i
 2525 0f9f 766C     		jbe	.L62	#,
 757:sieve_extend.c ****         }
 2526              		.loc 1 757 13 is_stmt 1 view .LVU800
 2527              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2528              		.loc 1 757 58 is_stmt 0 view .LVU801
 2529 0fa1 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp481,
 2530              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2531              		.loc 1 756 59 view .LVU802
 2532 0fa5 4D8D7A04 		lea	r15, 4[r10]	# i,
 2533              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2534              		.loc 1 757 62 view .LVU803
 2535 0fa9 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_395, *_395
 2536              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2537              		.loc 1 757 21 view .LVU804
 2538 0fad 4801CA   		add	rdx, rcx	# tmp482, copy_word
 2539              	.LVL98:
 2540              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2541              		.loc 1 757 109 view .LVU805
 2542 0fb0 C422A1F7 		shlx	r8, QWORD PTR 8[rdi+r13*8], r11	# tmp483, *_400, shift
 2542      44EF08
 2543              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2544              		.loc 1 757 62 view .LVU806
 2545 0fb7 C462FBF7 		shrx	r9, rbx, rax	# tmp485, *_395, shift_flipped
 2545      CB
 2546              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2547              		.loc 1 757 80 view .LVU807
 2548 0fbc 4D09C8   		or	r8, r9	# tmp487, tmp485
 2549              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2550              		.loc 1 756 9 view .LVU808
 2551 0fbf 4D39FC   		cmp	r12, r15	# loop_distance, i
 2552              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2553              		.loc 1 757 80 view .LVU809
 2554 0fc2 4C8904D7 		mov	QWORD PTR [rdi+rdx*8], r8	# *_405, tmp487
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2555              		.loc 1 756 58 is_stmt 1 view .LVU810
 2556              	.LVL99:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2557              		.loc 1 756 40 view .LVU811
 2558              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 73


 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2559              		.loc 1 756 9 is_stmt 0 view .LVU812
 2560 0fc6 7645     		jbe	.L62	#,
 757:sieve_extend.c ****         }
 2561              		.loc 1 757 13 is_stmt 1 view .LVU813
 2562              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2563              		.loc 1 757 58 is_stmt 0 view .LVU814
 2564 0fc8 4A8D143E 		lea	rdx, [rsi+r15]	# tmp488,
 2565              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2566              		.loc 1 756 59 view .LVU815
 2567 0fcc 4983C205 		add	r10, 5	# i,
 2568              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2569              		.loc 1 757 62 view .LVU816
 2570 0fd0 4C8B04D7 		mov	r8, QWORD PTR [rdi+rdx*8]	# *_413, *_413
 2571              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2572              		.loc 1 757 21 view .LVU817
 2573 0fd4 4901CF   		add	r15, rcx	# tmp489, copy_word
 2574              	.LVL100:
 2575              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2576              		.loc 1 757 109 view .LVU818
 2577 0fd7 C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r11	# tmp490, *_418, shift
 2577      6CD708
 2578              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2579              		.loc 1 757 62 view .LVU819
 2580 0fde C4C2FBF7 		shrx	rbx, r8, rax	# tmp492, *_413, shift_flipped
 2580      D8
 2581              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2582              		.loc 1 757 80 view .LVU820
 2583 0fe3 4909DD   		or	r13, rbx	# tmp494, tmp492
 2584              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2585              		.loc 1 756 9 view .LVU821
 2586 0fe6 4D39D4   		cmp	r12, r10	# loop_distance, i
 2587              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2588              		.loc 1 757 80 view .LVU822
 2589 0fe9 4E892CFF 		mov	QWORD PTR [rdi+r15*8], r13	# *_423, tmp494
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2590              		.loc 1 756 58 is_stmt 1 view .LVU823
 2591              	.LVL101:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2592              		.loc 1 756 40 view .LVU824
 2593              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2594              		.loc 1 756 9 is_stmt 0 view .LVU825
 2595 0fed 761E     		jbe	.L62	#,
 757:sieve_extend.c ****         }
 2596              		.loc 1 757 13 is_stmt 1 view .LVU826
 2597              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
GAS LISTING /tmp/ccW4ZvF5.s 			page 74


 2598              		.loc 1 757 58 is_stmt 0 view .LVU827
 2599 0fef 4E8D0C16 		lea	r9, [rsi+r10]	# tmp495,
 2600              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2601              		.loc 1 757 21 view .LVU828
 2602 0ff3 4901CA   		add	r10, rcx	# tmp496, copy_word
 2603              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2604              		.loc 1 757 109 view .LVU829
 2605 0ff6 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r11	# tmp497, *_261, shift
 2605      4CCF08
 2606              	.LVL102:
 2607              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2608              		.loc 1 757 62 view .LVU830
 2609 0ffd 4E8B1CCF 		mov	r11, QWORD PTR [rdi+r9*8]	# *_256, *_256
 2610              	.LVL103:
 757:sieve_extend.c ****         }
 2611              		.loc 1 757 62 view .LVU831
 2612 1001 C4C2FBF7 		shrx	rax, r11, rax	# tmp499, *_256, shift_flipped
 2612      C3
 2613              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 2614              		.loc 1 757 80 view .LVU832
 2615 1006 4809C8   		or	rax, rcx	# tmp501, tmp497
 2616 1009 4A8904D7 		mov	QWORD PTR [rdi+r10*8], rax	# *_266, tmp501
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2617              		.loc 1 756 58 is_stmt 1 view .LVU833
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2618              		.loc 1 756 40 view .LVU834
 2619              	.L62:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2620              		.loc 1 756 40 is_stmt 0 view .LVU835
 2621              	.LBE316:
 759:sieve_extend.c ****     }
 2622              		.loc 1 759 9 is_stmt 1 view .LVU836
 2623              	.LVL104:
 759:sieve_extend.c ****     }
 2624              		.loc 1 759 39 view .LVU837
 759:sieve_extend.c ****     }
 2625              		.loc 1 759 39 is_stmt 0 view .LVU838
 2626              	.LBE315:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2627              		.loc 1 762 12 is_stmt 1 view .LVU839
 2628 100d 4D8D7E01 		lea	r15, 1[r14]	# _198,
 2629 1011 4A8D7426 		lea	rsi, 5[rsi+r12]	# tmp420,
 2629      05
 2630              	.LVL105:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2631              		.loc 1 762 12 is_stmt 0 view .LVU840
 2632 1016 4C897C24 		mov	QWORD PTR -40[rsp], r15	# %sfp, _198
 2632      D8
 2633 101b 488D14F5 		lea	rdx, -40[0+rsi*8]	# _300,
 2633      D8FFFFFF 
 2634              	.LBB319:
 2635              	# sieve_extend.c:759:         source_word += loop_distance; copy_word+= loop_distance;
 759:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 75


 2636              		.loc 1 759 21 view .LVU841
 2637 1023 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2637      E0000000 
 2637      00
 2638 102c 4C89F1   		mov	rcx, r14	# copy_word, destination_stop_word
 2639              	.LVL106:
 2640              	.L56:
 759:sieve_extend.c ****     }
 2641              		.loc 1 759 21 view .LVU842
 2642 102f 4D89F4   		mov	r12, r14	# tmp575, destination_stop_word
 2643              	.LBE319:
 2644              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2645              		.loc 1 762 57 view .LVU843
 2646 1032 488D7101 		lea	rsi, 1[rcx]	# copy_word,
 2647 1036 4929CC   		sub	r12, rcx	# tmp575, copy_word
 2648 1039 4801FA   		add	rdx, rdi	# ivtmp.215, bitarray
 2649              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2650              		.loc 1 763 99 view .LVU844
 2651 103c 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp944, %sfp
 2651      24FC
 2652 1042 4183E407 		and	r12d, 7	# tmp576,
 2653              	.LVL107:
 763:sieve_extend.c ****     }
 2654              		.loc 1 763 9 is_stmt 1 view .LVU845
 2655              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2656              		.loc 1 763 54 is_stmt 0 view .LVU846
 2657 1046 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp945, %sfp
 2657      24F8
 2658              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2659              		.loc 1 763 99 view .LVU847
 2660 104c C462A9F7 		shlx	r13, QWORD PTR 8[rdx], r10	# tmp566, MEM[base: _472, offset: 8B], tmp944
 2660      6A08
 2661              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2662              		.loc 1 763 54 view .LVU848
 2663 1052 C4E2BBF7 		shrx	rbx, QWORD PTR [rdx], r8	# tmp568, MEM[base: _472, offset: 0B], tmp945
 2663      1A
 2664              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2665              		.loc 1 763 72 view .LVU849
 2666 1057 4909DD   		or	r13, rbx	# tmp570, tmp568
 2667 105a 4C892CCF 		mov	QWORD PTR [rdi+rcx*8], r13	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2668              		.loc 1 762 48 is_stmt 1 view .LVU850
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2669              		.loc 1 762 12 view .LVU851
 2670              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2671              		.loc 1 762 5 is_stmt 0 view .LVU852
 2672 105e 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2673 1061 4C8D6A08 		lea	r13, 8[rdx]	# ivtmp.215,
 2674 1065 0F8228FB 		jb	.L71	#,
 2674      FFFF
GAS LISTING /tmp/ccW4ZvF5.s 			page 76


 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 762 5 view .LVU853
 2676 106b 4D85E4   		test	r12, r12	# tmp576
 2677 106e 0F844A01 		je	.L201	#,
 2677      0000
 2678 1074 4983FC01 		cmp	r12, 1	# tmp576,
 2679 1078 0F841201 		je	.L162	#,
 2679      0000
 2680 107e 4983FC02 		cmp	r12, 2	# tmp576,
 2681 1082 0F84E200 		je	.L163	#,
 2681      0000
 2682 1088 4983FC03 		cmp	r12, 3	# tmp576,
 2683 108c 0F84B200 		je	.L164	#,
 2683      0000
 2684 1092 4983FC04 		cmp	r12, 4	# tmp576,
 2685 1096 0F848100 		je	.L165	#,
 2685      0000
 2686 109c 4983FC05 		cmp	r12, 5	# tmp576,
 2687 10a0 7455     		je	.L166	#,
 2688 10a2 4983FC06 		cmp	r12, 6	# tmp576,
 2689 10a6 742A     		je	.L167	#,
 763:sieve_extend.c ****     }
 2690              		.loc 1 763 9 is_stmt 1 view .LVU854
 2691              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2692              		.loc 1 763 54 is_stmt 0 view .LVU855
 2693 10a8 498B4500 		mov	rax, QWORD PTR 0[r13]	# MEM[base: _472, offset: 0B], MEM[base: _472, offset: 0B]
 2694              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2695              		.loc 1 763 99 view .LVU856
 2696 10ac 440FB64C 		movzx	r9d, BYTE PTR -4[rsp]	# tmp947, %sfp
 2696      24FC
 2697 10b2 C442B1F7 		shlx	r11, QWORD PTR 8[r13], r9	# tmp736, MEM[base: _472, offset: 8B], tmp947
 2697      5D08
 2698              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2699              		.loc 1 763 54 view .LVU857
 2700 10b8 440FB664 		movzx	r12d, BYTE PTR -8[rsp]	# tmp948, %sfp
 2700      24F8
 2701 10be C4629BF7 		shrx	r10, rax, r12	# tmp738, MEM[base: _472, offset: 0B], tmp948
 2701      D0
 2702              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2703              		.loc 1 763 72 view .LVU858
 2704 10c3 4D09DA   		or	r10, r11	# tmp739, tmp736
 2705 10c6 4C8D6A10 		lea	r13, 16[rdx]	# ivtmp.215,
 2706 10ca 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2707              		.loc 1 762 48 is_stmt 1 view .LVU859
 2708              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2709              		.loc 1 762 57 is_stmt 0 view .LVU860
 2710 10ce 488D7102 		lea	rsi, 2[rcx]	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2711              		.loc 1 762 12 is_stmt 1 view .LVU861
 2712              	.L167:
 763:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 77


 2713              		.loc 1 763 9 view .LVU862
 2714              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2715              		.loc 1 763 99 is_stmt 0 view .LVU863
 2716 10d2 0FB65424 		movzx	edx, BYTE PTR -4[rsp]	# tmp949, %sfp
 2716      FC
 2717 10d7 C442E9F7 		shlx	r8, QWORD PTR 8[r13], rdx	# tmp741, MEM[base: _472, offset: 8B], tmp949
 2717      4508
 2718              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2719              		.loc 1 763 54 view .LVU864
 2720 10dd 0FB64C24 		movzx	ecx, BYTE PTR -8[rsp]	# tmp950, %sfp
 2720      F8
 2721              	.LVL108:
 763:sieve_extend.c ****     }
 2722              		.loc 1 763 54 view .LVU865
 2723 10e2 C4C2F3F7 		shrx	rbx, QWORD PTR 0[r13], rcx	# tmp743, MEM[base: _472, offset: 0B], tmp950
 2723      5D00
 2724              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2725              		.loc 1 763 72 view .LVU866
 2726 10e8 4909D8   		or	r8, rbx	# tmp744, tmp743
 2727 10eb 4983C508 		add	r13, 8	# ivtmp.215,
 2728 10ef 4C8904F7 		mov	QWORD PTR [rdi+rsi*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2729              		.loc 1 762 48 is_stmt 1 view .LVU867
 2730              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2731              		.loc 1 762 57 is_stmt 0 view .LVU868
 2732 10f3 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2733              		.loc 1 762 12 is_stmt 1 view .LVU869
 2734              	.L166:
 763:sieve_extend.c ****     }
 2735              		.loc 1 763 9 view .LVU870
 2736              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2737              		.loc 1 763 99 is_stmt 0 view .LVU871
 2738 10f7 440FB64C 		movzx	r9d, BYTE PTR -4[rsp]	# tmp951, %sfp
 2738      24FC
 2739 10fd C442B1F7 		shlx	r11, QWORD PTR 8[r13], r9	# tmp746, MEM[base: _472, offset: 8B], tmp951
 2739      5D08
 2740              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2741              		.loc 1 763 54 view .LVU872
 2742 1103 0FB64424 		movzx	eax, BYTE PTR -8[rsp]	# tmp952, %sfp
 2742      F8
 2743 1108 C442FBF7 		shrx	r12, QWORD PTR 0[r13], rax	# tmp748, MEM[base: _472, offset: 0B], tmp952
 2743      6500
 2744              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2745              		.loc 1 763 72 view .LVU873
 2746 110e 4D09E3   		or	r11, r12	# tmp749, tmp748
 2747 1111 4983C508 		add	r13, 8	# ivtmp.215,
 2748 1115 4C891CF7 		mov	QWORD PTR [rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2749              		.loc 1 762 48 is_stmt 1 view .LVU874
GAS LISTING /tmp/ccW4ZvF5.s 			page 78


 2750              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2751              		.loc 1 762 57 is_stmt 0 view .LVU875
 2752 1119 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2753              		.loc 1 762 12 is_stmt 1 view .LVU876
 2754              	.L165:
 763:sieve_extend.c ****     }
 2755              		.loc 1 763 9 view .LVU877
 2756              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2757              		.loc 1 763 99 is_stmt 0 view .LVU878
 2758 111d 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp953, %sfp
 2758      24FC
 2759 1123 C4C2A9F7 		shlx	rdx, QWORD PTR 8[r13], r10	# tmp751, MEM[base: _472, offset: 8B], tmp953
 2759      5508
 2760              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2761              		.loc 1 763 54 view .LVU879
 2762 1129 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp954, %sfp
 2762      24F8
 2763 112f C4C2BBF7 		shrx	rcx, QWORD PTR 0[r13], r8	# tmp753, MEM[base: _472, offset: 0B], tmp954
 2763      4D00
 2764              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2765              		.loc 1 763 72 view .LVU880
 2766 1135 4809CA   		or	rdx, rcx	# tmp754, tmp753
 2767 1138 4983C508 		add	r13, 8	# ivtmp.215,
 2768 113c 488914F7 		mov	QWORD PTR [rdi+rsi*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2769              		.loc 1 762 48 is_stmt 1 view .LVU881
 2770              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2771              		.loc 1 762 57 is_stmt 0 view .LVU882
 2772 1140 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2773              		.loc 1 762 12 is_stmt 1 view .LVU883
 2774              	.L164:
 763:sieve_extend.c ****     }
 2775              		.loc 1 763 9 view .LVU884
 2776              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2777              		.loc 1 763 99 is_stmt 0 view .LVU885
 2778 1144 0FB65C24 		movzx	ebx, BYTE PTR -4[rsp]	# tmp955, %sfp
 2778      FC
 2779 1149 C442E1F7 		shlx	r9, QWORD PTR 8[r13], rbx	# tmp756, MEM[base: _472, offset: 8B], tmp955
 2779      4D08
 2780              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2781              		.loc 1 763 54 view .LVU886
 2782 114f 440FB65C 		movzx	r11d, BYTE PTR -8[rsp]	# tmp956, %sfp
 2782      24F8
 2783 1155 C4C2A3F7 		shrx	rax, QWORD PTR 0[r13], r11	# tmp758, MEM[base: _472, offset: 0B], tmp956
 2783      4500
 2784              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2785              		.loc 1 763 72 view .LVU887
GAS LISTING /tmp/ccW4ZvF5.s 			page 79


 2786 115b 4909C1   		or	r9, rax	# tmp759, tmp758
 2787 115e 4983C508 		add	r13, 8	# ivtmp.215,
 2788 1162 4C890CF7 		mov	QWORD PTR [rdi+rsi*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2789              		.loc 1 762 48 is_stmt 1 view .LVU888
 2790              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2791              		.loc 1 762 57 is_stmt 0 view .LVU889
 2792 1166 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2793              		.loc 1 762 12 is_stmt 1 view .LVU890
 2794              	.L163:
 763:sieve_extend.c ****     }
 2795              		.loc 1 763 9 view .LVU891
 2796              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2797              		.loc 1 763 99 is_stmt 0 view .LVU892
 2798 116a 440FB664 		movzx	r12d, BYTE PTR -4[rsp]	# tmp957, %sfp
 2798      24FC
 2799 1170 C44299F7 		shlx	r10, QWORD PTR 8[r13], r12	# tmp761, MEM[base: _472, offset: 8B], tmp957
 2799      5508
 2800              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2801              		.loc 1 763 54 view .LVU893
 2802 1176 0FB65424 		movzx	edx, BYTE PTR -8[rsp]	# tmp958, %sfp
 2802      F8
 2803 117b C442EBF7 		shrx	r8, QWORD PTR 0[r13], rdx	# tmp763, MEM[base: _472, offset: 0B], tmp958
 2803      4500
 2804              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2805              		.loc 1 763 72 view .LVU894
 2806 1181 4D09C2   		or	r10, r8	# tmp764, tmp763
 2807 1184 4983C508 		add	r13, 8	# ivtmp.215,
 2808 1188 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2809              		.loc 1 762 48 is_stmt 1 view .LVU895
 2810              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2811              		.loc 1 762 57 is_stmt 0 view .LVU896
 2812 118c 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 762 12 is_stmt 1 view .LVU897
 2814              	.L162:
 763:sieve_extend.c ****     }
 2815              		.loc 1 763 9 view .LVU898
 2816              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2817              		.loc 1 763 99 is_stmt 0 view .LVU899
 2818 1190 0FB64C24 		movzx	ecx, BYTE PTR -4[rsp]	# tmp959, %sfp
 2818      FC
 2819 1195 C442F1F7 		shlx	r9, QWORD PTR 8[r13], rcx	# tmp766, MEM[base: _472, offset: 8B], tmp959
 2819      4D08
 2820              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2821              		.loc 1 763 54 view .LVU900
 2822 119b 0FB65C24 		movzx	ebx, BYTE PTR -8[rsp]	# tmp960, %sfp
 2822      F8
GAS LISTING /tmp/ccW4ZvF5.s 			page 80


 2823 11a0 C442E3F7 		shrx	r11, QWORD PTR 0[r13], rbx	# tmp768, MEM[base: _472, offset: 0B], tmp960
 2823      5D00
 2824              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2825              		.loc 1 763 72 view .LVU901
 2826 11a6 4D09D9   		or	r9, r11	# tmp769, tmp768
 2827 11a9 4983C508 		add	r13, 8	# ivtmp.215,
 2828 11ad 4C890CF7 		mov	QWORD PTR [rdi+rsi*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2829              		.loc 1 762 48 is_stmt 1 view .LVU902
 2830              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2831              		.loc 1 762 57 is_stmt 0 view .LVU903
 2832 11b1 4883C601 		add	rsi, 1	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2833              		.loc 1 762 12 is_stmt 1 view .LVU904
 2834              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2835              		.loc 1 762 5 is_stmt 0 view .LVU905
 2836 11b5 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2837 11b8 0F82D5F9 		jb	.L71	#,
 2837      FFFF
 2838              	.L201:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 762 5 view .LVU906
 2840 11be 8B4424FC 		mov	eax, DWORD PTR -4[rsp]	# _182, %sfp
 2841 11c2 448B6424 		mov	r12d, DWORD PTR -8[rsp]	# _184, %sfp
 2841      F8
 2842              	.L70:
 763:sieve_extend.c ****     }
 2843              		.loc 1 763 9 is_stmt 1 view .LVU907
 2844              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2845              		.loc 1 763 54 is_stmt 0 view .LVU908
 2846 11c7 C4C29BF7 		shrx	rdx, QWORD PTR 0[r13], r12	# tmp684, MEM[base: _472, offset: 0B], _184
 2846      5500
 2847              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2848              		.loc 1 763 99 view .LVU909
 2849 11cd C442F9F7 		shlx	r10, QWORD PTR 8[r13], rax	# tmp682, MEM[base: _472, offset: 8B], _182
 2849      5508
 2850              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2851              		.loc 1 763 72 view .LVU910
 2852 11d3 4909D2   		or	r10, rdx	# tmp685, tmp684
 2853 11d6 4983C540 		add	r13, 64	# ivtmp.215,
 2854 11da 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2855              		.loc 1 762 48 is_stmt 1 view .LVU911
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 762 12 view .LVU912
 763:sieve_extend.c ****     }
 2857              		.loc 1 763 9 view .LVU913
 2858              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2859              		.loc 1 763 54 is_stmt 0 view .LVU914
 2860 11de C4C29BF7 		shrx	rcx, QWORD PTR -56[r13], r12	# tmp691, MEM[base: _472, offset: 0B], _184
GAS LISTING /tmp/ccW4ZvF5.s 			page 81


 2860      4DC8
 2861              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2862              		.loc 1 763 99 view .LVU915
 2863 11e4 C442F9F7 		shlx	r8, QWORD PTR -48[r13], rax	# tmp689, MEM[base: _472, offset: 8B], _182
 2863      45D0
 2864              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2865              		.loc 1 763 72 view .LVU916
 2866 11ea 4909C8   		or	r8, rcx	# tmp692, tmp691
 2867 11ed 4C8944F7 		mov	QWORD PTR 8[rdi+rsi*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2867      08
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2868              		.loc 1 762 48 is_stmt 1 view .LVU917
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2869              		.loc 1 762 12 view .LVU918
 763:sieve_extend.c ****     }
 2870              		.loc 1 763 9 view .LVU919
 2871              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2872              		.loc 1 763 54 is_stmt 0 view .LVU920
 2873 11f2 C4429BF7 		shrx	r9, QWORD PTR -48[r13], r12	# tmp698, MEM[base: _472, offset: 0B], _184
 2873      4DD0
 2874              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2875              		.loc 1 763 99 view .LVU921
 2876 11f8 C4C2F9F7 		shlx	rbx, QWORD PTR -40[r13], rax	# tmp696, MEM[base: _472, offset: 8B], _182
 2876      5DD8
 2877              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2878              		.loc 1 763 72 view .LVU922
 2879 11fe 4C09CB   		or	rbx, r9	# tmp699, tmp698
 2880 1201 48895CF7 		mov	QWORD PTR 16[rdi+rsi*8], rbx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2880      10
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2881              		.loc 1 762 48 is_stmt 1 view .LVU923
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2882              		.loc 1 762 12 view .LVU924
 763:sieve_extend.c ****     }
 2883              		.loc 1 763 9 view .LVU925
 2884              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2885              		.loc 1 763 54 is_stmt 0 view .LVU926
 2886 1206 C4429BF7 		shrx	r10, QWORD PTR -40[r13], r12	# tmp705, MEM[base: _472, offset: 0B], _184
 2886      55D8
 2887              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2888              		.loc 1 763 99 view .LVU927
 2889 120c C442F9F7 		shlx	r11, QWORD PTR -32[r13], rax	# tmp703, MEM[base: _472, offset: 8B], _182
 2889      5DE0
 2890              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2891              		.loc 1 763 72 view .LVU928
 2892 1212 4D09D3   		or	r11, r10	# tmp706, tmp705
 2893 1215 4C895CF7 		mov	QWORD PTR 24[rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2893      18
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccW4ZvF5.s 			page 82


 2894              		.loc 1 762 48 is_stmt 1 view .LVU929
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2895              		.loc 1 762 12 view .LVU930
 763:sieve_extend.c ****     }
 2896              		.loc 1 763 9 view .LVU931
 2897              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2898              		.loc 1 763 99 is_stmt 0 view .LVU932
 2899 121a C4C2F9F7 		shlx	rdx, QWORD PTR -24[r13], rax	# tmp710, MEM[base: _472, offset: 8B], _182
 2899      55E8
 2900              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2901              		.loc 1 763 54 view .LVU933
 2902 1220 C4429BF7 		shrx	r8, QWORD PTR -32[r13], r12	# tmp712, MEM[base: _472, offset: 0B], _184
 2902      45E0
 2903              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2904              		.loc 1 763 72 view .LVU934
 2905 1226 4C09C2   		or	rdx, r8	# tmp713, tmp712
 2906 1229 488954F7 		mov	QWORD PTR 32[rdi+rsi*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2906      20
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2907              		.loc 1 762 48 is_stmt 1 view .LVU935
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2908              		.loc 1 762 12 view .LVU936
 763:sieve_extend.c ****     }
 2909              		.loc 1 763 9 view .LVU937
 2910              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2911              		.loc 1 763 99 is_stmt 0 view .LVU938
 2912 122e C4C2F9F7 		shlx	rcx, QWORD PTR -16[r13], rax	# tmp717, MEM[base: _472, offset: 8B], _182
 2912      4DF0
 2913              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2914              		.loc 1 763 54 view .LVU939
 2915 1234 C4C29BF7 		shrx	rbx, QWORD PTR -24[r13], r12	# tmp719, MEM[base: _472, offset: 0B], _184
 2915      5DE8
 2916              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2917              		.loc 1 763 72 view .LVU940
 2918 123a 4809D9   		or	rcx, rbx	# tmp720, tmp719
 2919 123d 48894CF7 		mov	QWORD PTR 40[rdi+rsi*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2919      28
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2920              		.loc 1 762 48 is_stmt 1 view .LVU941
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2921              		.loc 1 762 12 view .LVU942
 763:sieve_extend.c ****     }
 2922              		.loc 1 763 9 view .LVU943
 2923              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2924              		.loc 1 763 99 is_stmt 0 view .LVU944
 2925 1242 C442F9F7 		shlx	r11, QWORD PTR -8[r13], rax	# tmp724, MEM[base: _472, offset: 8B], _182
 2925      5DF8
 2926              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2927              		.loc 1 763 54 view .LVU945
GAS LISTING /tmp/ccW4ZvF5.s 			page 83


 2928 1248 C4429BF7 		shrx	r9, QWORD PTR -16[r13], r12	# tmp726, MEM[base: _472, offset: 0B], _184
 2928      4DF0
 2929              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2930              		.loc 1 763 72 view .LVU946
 2931 124e 4D09CB   		or	r11, r9	# tmp727, tmp726
 2932 1251 4C895CF7 		mov	QWORD PTR 48[rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2932      30
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2933              		.loc 1 762 48 is_stmt 1 view .LVU947
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2934              		.loc 1 762 12 view .LVU948
 763:sieve_extend.c ****     }
 2935              		.loc 1 763 9 view .LVU949
 2936              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2937              		.loc 1 763 99 is_stmt 0 view .LVU950
 2938 1256 C442F9F7 		shlx	r10, QWORD PTR 0[r13], rax	# tmp731, MEM[base: _472, offset: 8B], _182
 2938      5500
 2939              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2940              		.loc 1 763 54 view .LVU951
 2941 125c C4C29BF7 		shrx	rdx, QWORD PTR -8[r13], r12	# tmp733, MEM[base: _472, offset: 0B], _184
 2941      55F8
 2942              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2943              		.loc 1 763 72 view .LVU952
 2944 1262 4909D2   		or	r10, rdx	# tmp734, tmp733
 2945 1265 4C8954F7 		mov	QWORD PTR 56[rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2945      38
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2946              		.loc 1 762 48 is_stmt 1 view .LVU953
 2947              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2948              		.loc 1 762 57 is_stmt 0 view .LVU954
 2949 126a 4883C608 		add	rsi, 8	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2950              		.loc 1 762 12 is_stmt 1 view .LVU955
 2951              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2952              		.loc 1 762 5 is_stmt 0 view .LVU956
 2953 126e 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2954 1271 0F8350FF 		jnb	.L70	#,
 2954      FFFF
 2955 1277 E917F9FF 		jmp	.L71	#
 2955      FF
 2956              	.LVL109:
 2957 127c 0F1F4000 		.p2align 4,,7
 2958              		.p2align 3
 2959              	.L209:
 737:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2960              		.loc 1 737 9 is_stmt 1 view .LVU957
 2961              	# sieve_extend.c:739:                                 & keepmask(copy_start) & chopmask(destination
 739:sieve_extend.c ****         return; // rapid exit for one word variant
 2962              		.loc 1 739 56 is_stmt 0 view .LVU958
 2963 1280 4C21D1   		and	rcx, r10	# _193, _189
 2964 1283 4921C8   		and	r8, rcx	# tmp415, tmp414
GAS LISTING /tmp/ccW4ZvF5.s 			page 84


 2965              	# sieve_extend.c:737:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 737:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2966              		.loc 1 737 29 view .LVU959
 2967 1286 4D09C4   		or	r12, r8	# tmp416, tmp415
 2968 1289 4C8923   		mov	QWORD PTR [rbx], r12	# *_177, tmp416
 740:sieve_extend.c ****     }
 2969              		.loc 1 740 9 is_stmt 1 view .LVU960
 2970              	# sieve_extend.c:767: }
 2971              		.loc 1 767 1 is_stmt 0 view .LVU961
 2972 128c 488D65D8 		lea	rsp, -40[rbp]	#,
 2973 1290 5B       		pop	rbx	#
 2974 1291 415C     		pop	r12	#
 2975 1293 415D     		pop	r13	#
 2976 1295 415E     		pop	r14	#
 2977              	.LVL110:
 2978              		.loc 1 767 1 view .LVU962
 2979 1297 415F     		pop	r15	#
 2980 1299 5D       		pop	rbp	#
 2981              		.cfi_remember_state
 2982              		.cfi_def_cfa 7, 8
 2983 129a C3       		ret	
 2984              	.LVL111:
 2985 129b 0F1F4400 		.p2align 4,,7
 2985      00
 2986              		.p2align 3
 2987              	.L73:
 2988              		.cfi_restore_state
 2989              	.LBB320:
 2990              	.LBB317:
 2991              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2992              		.loc 1 756 33 view .LVU963
 2993 12a0 48C74424 		mov	QWORD PTR -24[rsp], 0	# %sfp,
 2993      E8000000 
 2993      00
 2994 12a9 4C8D4601 		lea	r8, 1[rsi]	# tmp572,
 2995 12ad E9D2F9FF 		jmp	.L58	#
 2995      FF
 2996              	.LVL112:
 2997              		.p2align 4,,7
 2998 12b2 660F1F44 		.p2align 3
 2998      0000
 2999              	.L206:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3000              		.loc 1 756 33 view .LVU964
 3001 12b8 C5F877   		vzeroupper
 3002 12bb E9D3F8FF 		jmp	.L71	#
 3002      FF
 3003              	.LVL113:
 3004              		.p2align 4,,7
 3005              		.p2align 3
 3006              	.L76:
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3007              		.loc 1 756 33 view .LVU965
 3008              	.LBE317:
 3009              	.LBE320:
 3010              	# sieve_extend.c:733:     register counter_t source_word = wordindex(source_start);
GAS LISTING /tmp/ccW4ZvF5.s 			page 85


 733:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3011              		.loc 1 733 24 view .LVU966
 3012 12c0 48897424 		mov	QWORD PTR -48[rsp], rsi	# %sfp, source_word
 3012      D0
 3013              	# sieve_extend.c:747:     copy_word++;
 747:sieve_extend.c **** 
 3014              		.loc 1 747 14 view .LVU967
 3015 12c5 4989CD   		mov	r13, rcx	# copy_word, copy_word
 3016 12c8 4C8D5601 		lea	r10, 1[rsi]	# tmp634,
 3017 12cc E9B2F5FF 		jmp	.L65	#
 3017      FF
 3018              	.LVL114:
 3019              		.p2align 4,,7
 3020 12d1 0F1F8000 		.p2align 3
 3020      000000
 3021              	.L212:
 747:sieve_extend.c **** 
 3022              		.loc 1 747 14 view .LVU968
 3023 12d8 C5F877   		vzeroupper
 3024 12db E92DFDFF 		jmp	.L62	#
 3024      FF
 3025              	.L211:
 3026              	.LBB321:
 3027              	.LBB318:
 757:sieve_extend.c ****         }
 3028              		.loc 1 757 13 is_stmt 1 view .LVU969
 3029              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3030              		.loc 1 757 62 is_stmt 0 view .LVU970
 3031 12e0 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r9]	# tmp961, MEM[base: vectp.199_280, index: ivtmp.233_477, offset: 0B
 3031      01
 3032 12e5 BA200000 		mov	edx, 32	# ivtmp.233,
 3032      00
 3033              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3034              		.loc 1 757 109 view .LVU971
 3035 12ea C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10]	# tmp962, MEM[base: vectp.203_287, index: ivtmp.233_477, offset: 0
 3035      1A
 3036              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3037              		.loc 1 757 62 view .LVU972
 3038 12ef C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.201, tmp961, _184
 3039              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3040              		.loc 1 757 109 view .LVU973
 3041 12f3 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.205, tmp962, _182
 3042              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3043              		.loc 1 757 80 view .LVU974
 3044 12f7 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.206, vect__49.201, vect__54.205
 3044      DA
 3045              	# sieve_extend.c:757:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 757:sieve_extend.c ****         }
 3046              		.loc 1 757 35 view .LVU975
 3047 12fc C57E7F1B 		vmovdqu	YMMWORD PTR [rbx], ymm11	# MEM[base: vectp.208_296, index: ivtmp.233_477, offset: 0B], vec
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3048              		.loc 1 756 58 is_stmt 1 view .LVU976
GAS LISTING /tmp/ccW4ZvF5.s 			page 86


 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3049              		.loc 1 756 40 view .LVU977
 3050 1300 E9FAF9FF 		jmp	.L154	#
 3050      FF
 3051              	.LVL115:
 3052              	.L72:
 3053              	# sieve_extend.c:756:         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 756 33 is_stmt 0 view .LVU978
 3055 1305 4531D2   		xor	r10d, r10d	# tmp.197
 3056 1308 E916FCFF 		jmp	.L57	#
 3056      FF
 3057              	.LBE318:
 3058              	.LBE321:
 3059              		.cfi_endproc
 3060              	.LFE73:
 3062 130d 0F1F00   		.p2align 4
 3063              		.globl	compare_tuning_result
 3065              	compare_tuning_result:
 3066              	.LVL116:
 3067              	.LFB86:
 768:sieve_extend.c **** 
 769:sieve_extend.c **** static void  extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const c
 770:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 771:sieve_extend.c ****    
 772:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 773:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 774:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 775:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 776:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 777:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 778:sieve_extend.c **** 
 779:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 780:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 781:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 782:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 783:sieve_extend.c ****         return; // rapid exit for one word variant
 784:sieve_extend.c ****     }
 785:sieve_extend.c **** 
 786:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 787:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 788:sieve_extend.c ****                                 & keepmask(copy_start);
 789:sieve_extend.c ****     
 790:sieve_extend.c ****     copy_word++;
 791:sieve_extend.c **** 
 792:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 793:sieve_extend.c **** 
 794:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 795:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 796:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 797:sieve_extend.c **** 
 798:sieve_extend.c **** }
 799:sieve_extend.c **** 
 800:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 801:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 802:sieve_extend.c **** 
 803:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
GAS LISTING /tmp/ccW4ZvF5.s 			page 87


 804:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 805:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 806:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 807:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 808:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 809:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 810:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 811:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 812:sieve_extend.c **** 
 813:sieve_extend.c ****     copy_word++;
 814:sieve_extend.c ****     source_word++;
 815:sieve_extend.c **** 
 816:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 817:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 818:sieve_extend.c ****     source_word += distance;
 819:sieve_extend.c ****     copy_word += distance;
 820:sieve_extend.c **** 
 821:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 822:sieve_extend.c **** 
 823:sieve_extend.c ****     #pragma GCC ivdep
 824:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 825:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 826:sieve_extend.c ****     }
 827:sieve_extend.c **** 
 828:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 831:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 832:sieve_extend.c **** 
 833:sieve_extend.c ****     #pragma GCC ivdep
 834:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 835:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 836:sieve_extend.c **** 
 837:sieve_extend.c ****     #pragma GCC ivdep
 838:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 839:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 840:sieve_extend.c **** 
 841:sieve_extend.c **** 
 842:sieve_extend.c ****  }
 843:sieve_extend.c **** 
 844:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 845:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 846:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 847:sieve_extend.c ****         return; // rapid exit for small sizes
 848:sieve_extend.c ****     }
 849:sieve_extend.c **** 
 850:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 851:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 852:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 853:sieve_extend.c **** 
 854:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 855:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 856:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 857:sieve_extend.c **** }
 858:sieve_extend.c **** 
 859:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitarray, const counter_t block_start, const counter_t bl
 860:sieve_extend.c ****     counter_t prime = prime_start;
GAS LISTING /tmp/ccW4ZvF5.s 			page 88


 861:sieve_extend.c ****     counter_t start = 0;
 862:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 863:sieve_extend.c **** 
 864:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 865:sieve_extend.c ****     
 866:sieve_extend.c ****     while (prime*step <= block_stop) {
 867:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 868:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 869:sieve_extend.c ****         else 
 870:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 871:sieve_extend.c **** 
 872:sieve_extend.c ****         if (step < VECTORSTEP_FASTER) {
 873:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 874:sieve_extend.c ****             prime = searchBitFalse(bitarray, prime+1 );
 875:sieve_extend.c ****         }
 876:sieve_extend.c ****         else {
 877:sieve_extend.c ****             setBitsTrue_largeRange(bitarray, start, step, block_stop);
 878:sieve_extend.c ****             prime = searchBitFalse_longRange(bitarray, prime+1 );
 879:sieve_extend.c ****         }
 880:sieve_extend.c **** 
 881:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 882:sieve_extend.c ****         step  = prime * 2 + 1;
 883:sieve_extend.c ****     }
 884:sieve_extend.c **** }
 885:sieve_extend.c **** 
 886:sieve_extend.c **** struct block {
 887:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 888:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 889:sieve_extend.c ****     counter_t prime; // next prime to be striped
 890:sieve_extend.c **** };
 891:sieve_extend.c **** 
 892:sieve_extend.c **** // returns prime that could not be handled:
 893:sieve_extend.c **** // start is too large
 894:sieve_extend.c **** // range is too big
 895:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
 896:sieve_extend.c ****     register counter_t prime   = 0;
 897:sieve_extend.c ****     counter_t patternsize_bits = 1;
 898:sieve_extend.c ****     counter_t pattern_start    = 0;
 899:sieve_extend.c ****     counter_t range_stop       = block_start;
 900:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 901:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 902:sieve_extend.c **** 
 903:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 904:sieve_extend.c ****     
 905:sieve_extend.c ****     for (;range_stop < block_stop;) {
 906:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 907:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 908:sieve_extend.c ****         if unlikely(start > block_stop) break;
 909:sieve_extend.c **** 
 910:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 911:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 912:sieve_extend.c **** 
 913:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 914:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 915:sieve_extend.c ****         block.pattern_start = pattern_start;
 916:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 917:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 89


 918:sieve_extend.c ****         if (patternsize_bits>1) {
 919:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 920:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 921:sieve_extend.c ****         }
 922:sieve_extend.c ****         patternsize_bits *= step;
 923:sieve_extend.c **** 
 924:sieve_extend.c ****         // if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift
 925:sieve_extend.c ****         // else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, ran
 926:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitarray, start, step, rang
 927:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 928:sieve_extend.c ****         block.prime = prime;
 929:sieve_extend.c ****     } 
 930:sieve_extend.c **** 
 931:sieve_extend.c ****     return block;
 932:sieve_extend.c **** }
 933:sieve_extend.c **** 
 934:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 935:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 936:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 937:sieve_extend.c **** 
 938:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 939:sieve_extend.c **** 
 940:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 941:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 942:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 943:sieve_extend.c ****     counter_t startprime = block.prime;
 944:sieve_extend.c **** 
 945:sieve_extend.c ****     // //#pragma GCC unroll 8
 946:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 947:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 948:sieve_extend.c ****         counter_t prime = searchBitFalse(bitarray, startprime);
 949:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 950:sieve_extend.c ****     } 
 951:sieve_extend.c **** 
 952:sieve_extend.c ****     return sieve;
 953:sieve_extend.c **** }
 954:sieve_extend.c **** 
 955:sieve_extend.c **** static struct sieve_t *sieve_blockbyblock(const counter_t maxints, const counter_t blocksize) {
 956:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 957:sieve_extend.c ****     counter_t prime     = 1;
 958:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 959:sieve_extend.c ****     for(counter_t index=0; index<wordindex(maxints/2); index++) {
 960:sieve_extend.c ****         bitarray[index]=SAFE_ZERO;
 961:sieve_extend.c ****     }
 962:sieve_extend.c **** 
 963:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 964:sieve_extend.c **** 
 965:sieve_extend.c ****     // //#pragma GCC unroll 8
 966:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 967:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 968:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 969:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 970:sieve_extend.c ****     } 
 971:sieve_extend.c **** 
 972:sieve_extend.c ****     return sieve;
 973:sieve_extend.c **** }
 974:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 90


 975:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 976:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 977:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 978:sieve_extend.c ****         primeCount++;
 979:sieve_extend.c ****         if (factor < maxFactor/2) {
 980:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 981:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 982:sieve_extend.c ****         }
 983:sieve_extend.c ****     }
 984:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 985:sieve_extend.c **** }
 986:sieve_extend.c **** 
 987:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 988:sieve_extend.c ****     counter_t primeCount = 1;
 989:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 990:sieve_extend.c ****     return primeCount;
 991:sieve_extend.c **** }
 992:sieve_extend.c **** 
 993:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 994:sieve_extend.c ****     printf("DeepAnalyzing\n");
 995:sieve_extend.c ****     counter_t warn_prime = 0;
 996:sieve_extend.c ****     counter_t warn_nonprime = 0;
 997:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 998:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 999:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1000:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1001:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1002:sieve_extend.c ****                 }
1003:sieve_extend.c ****             }
1004:sieve_extend.c ****         }
1005:sieve_extend.c ****         else {
1006:sieve_extend.c ****             counter_t c_prime = 0;
1007:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1008:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1009:sieve_extend.c ****             }
1010:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1011:sieve_extend.c ****         }
1012:sieve_extend.c ****     }
1013:sieve_extend.c **** }
1014:sieve_extend.c **** 
1015:sieve_extend.c **** 
1016:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
1017:sieve_extend.c **** 
1018:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1019:sieve_extend.c ****     counter_t valid_primes = 0;
1020:sieve_extend.c ****     switch(sieve->size) {
1021:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1022:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1023:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1024:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1025:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1026:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1027:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1028:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1029:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1030:sieve_extend.c ****         default:            valid_primes= 0;
1031:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 91


1032:sieve_extend.c **** 
1033:sieve_extend.c ****     int valid = (valid_primes == primecount);
1034:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1035:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1036:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1037:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1038:sieve_extend.c ****     }
1039:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
1040:sieve_extend.c ****     return (valid);
1041:sieve_extend.c **** }
1042:sieve_extend.c **** 
1043:sieve_extend.c **** void usage(char *name) {
1044:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1045:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1046:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1047:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1048:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1049:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1050:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1051:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1052:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1053:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1054:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1055:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1056:sieve_extend.c ****     exit(1);
1057:sieve_extend.c **** }
1058:sieve_extend.c **** 
1059:sieve_extend.c **** typedef struct  {
1060:sieve_extend.c ****     counter_t maxints;
1061:sieve_extend.c ****     counter_t blocksize_bits;
1062:sieve_extend.c ****     counter_t blocksize_kb;
1063:sieve_extend.c ****     counter_t free_bits;
1064:sieve_extend.c ****     counter_t smallstep_faster;
1065:sieve_extend.c ****     counter_t mediumstep_faster;
1066:sieve_extend.c ****     counter_t vectorstep_faster;
1067:sieve_extend.c ****     counter_t sample_max;
1068:sieve_extend.c ****     double    sample_duration;
1069:sieve_extend.c ****     counter_t passes;
1070:sieve_extend.c ****     double    elapsed_time;
1071:sieve_extend.c ****     double    avg;
1072:sieve_extend.c **** } tuning_result_type;
1073:sieve_extend.c **** 
1074:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3068              		.loc 1 1074 57 is_stmt 1 view -0
 3069              		.cfi_startproc
 3070              		.loc 1 1074 57 is_stmt 0 view .LVU980
 3071 1310 F30F1EFA 		endbr64	
1075:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3072              		.loc 1 1075 5 is_stmt 1 view .LVU981
 3073              	.LVL117:
1076:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3074              		.loc 1 1076 5 view .LVU982
1077:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3075              		.loc 1 1077 5 view .LVU983
 3076              	# sieve_extend.c:1077:     return (resultB->avg > resultA->avg ? 1 : -1);
 3077              		.loc 1 1077 45 is_stmt 0 view .LVU984
 3078 1314 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
GAS LISTING /tmp/ccW4ZvF5.s 			page 92


 3078      58
 3079 1319 31C0     		xor	eax, eax	# <retval>
 3080 131b C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3080      58
 3081 1320 0F97C0   		seta	al	#, <retval>
 3082 1323 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3083              	# sieve_extend.c:1078: }
1078:sieve_extend.c **** }
 3084              		.loc 1 1078 1 view .LVU985
 3085 1327 C3       		ret	
 3086              		.cfi_endproc
 3087              	.LFE86:
 3089 1328 0F1F8400 		.p2align 4
 3089      00000000 
 3091              	setBitsTrue_largeRange_vector:
 3092              	.LVL118:
 3093              	.LFB67:
 464:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3094              		.loc 1 464 153 is_stmt 1 view -0
 3095              		.cfi_startproc
 464:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3096              		.loc 1 464 153 is_stmt 0 view .LVU987
 3097 1330 55       		push	rbp	#
 3098              		.cfi_def_cfa_offset 16
 3099              		.cfi_offset 6, -16
 3100 1331 4889E5   		mov	rbp, rsp	#,
 3101              		.cfi_def_cfa_register 6
 3102 1334 4157     		push	r15	#
 3103 1336 4156     		push	r14	#
 3104 1338 4155     		push	r13	#
 3105 133a 4154     		push	r12	#
 3106 133c 53       		push	rbx	#
 3107 133d 4883E4E0 		and	rsp, -32	#,
 3108 1341 488D6424 		lea	rsp, -96[rsp]	#,
 3108      A0
 3109              		.cfi_offset 15, -24
 3110              		.cfi_offset 14, -32
 3111              		.cfi_offset 13, -40
 3112              		.cfi_offset 12, -48
 3113              		.cfi_offset 3, -56
 3114              	# sieve_extend.c:464: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 464:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3115              		.loc 1 464 153 view .LVU988
 3116 1346 64488B04 		mov	rax, QWORD PTR fs:40	# tmp511, MEM[(<address-space-1> long unsigned int *)40B]
 3116      25280000 
 3116      00
 3117 134f 48894424 		mov	QWORD PTR 88[rsp], rax	# D.6830, tmp511
 3117      58
 3118 1354 31C0     		xor	eax, eax	# tmp511
 465:sieve_extend.c **** 
 3119              		.loc 1 465 5 is_stmt 1 view .LVU989
 467:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 3120              		.loc 1 467 5 view .LVU990
 3121              	.LVL119:
 468:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3122              		.loc 1 468 5 view .LVU991
 3123              	# sieve_extend.c:468:     counter_t range_start_atvector = vectorstart(range_start);
GAS LISTING /tmp/ccW4ZvF5.s 			page 93


 468:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3124              		.loc 1 468 15 is_stmt 0 view .LVU992
 3125 1356 4889F0   		mov	rax, rsi	# range_start_atvector, range_start
 3126 1359 30C0     		xor	al, al	# range_start_atvector
 3127              	.LVL120:
 469:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3128              		.loc 1 469 5 is_stmt 1 view .LVU993
 3129              	# sieve_extend.c:469:     if likely((range_start_atvector + step) < range_start) { // not the first
 469:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3130              		.loc 1 469 8 is_stmt 0 view .LVU994
 3131 135b 4C8D0410 		lea	r8, [rax+rdx]	# tmp174,
 3132 135f 4939F0   		cmp	r8, rsi	# tmp174, range_start
 3133 1362 0F83F800 		jnb	.L217	#,
 3133      0000
 470:sieve_extend.c **** 
 3134              		.loc 1 470 9 is_stmt 1 view .LVU995
 472:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3135              		.loc 1 472 9 view .LVU996
 3136              	# sieve_extend.c:472:         range_start_atvector += VECTOR_SIZE; // find next vector
 472:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3137              		.loc 1 472 30 is_stmt 0 view .LVU997
 3138 1368 48050001 		add	rax, 256	# range_start_atvector,
 3138      0000
 3139              	.LVL121:
 473:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3140              		.loc 1 473 9 is_stmt 1 view .LVU998
 3141              	# sieve_extend.c:473:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 473:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3142              		.loc 1 473 12 is_stmt 0 view .LVU999
 3143 136e 4839C8   		cmp	rax, rcx	# range_start_atvector, range_stop
 3144 1371 0F876909 		ja	.L218	#,
 3144      0000
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3145              		.loc 1 485 16 is_stmt 1 view .LVU1000
 3146              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3147              		.loc 1 485 9 is_stmt 0 view .LVU1001
 3148 1377 4839C6   		cmp	rsi, rax	# range_start, range_start_atvector
 3149              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3150              		.loc 1 486 54 view .LVU1002
 3151 137a 41BA0100 		mov	r10d, 1	# tmp184,
 3151      0000
 3152              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3153              		.loc 1 485 9 view .LVU1003
 3154 1380 0F87DA00 		ja	.L217	#,
 3154      0000
 3155              	.LVL122:
 3156              	.L219:
 486:sieve_extend.c ****     }
 3157              		.loc 1 486 13 is_stmt 1 discriminator 2 view .LVU1004
 3158              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3159              		.loc 1 486 51 is_stmt 0 discriminator 2 view .LVU1005
 3160 1386 4889F3   		mov	rbx, rsi	# tmp180, range_start
 3161              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccW4ZvF5.s 			page 94


 486:sieve_extend.c ****     }
 3162              		.loc 1 486 54 discriminator 2 view .LVU1006
 3163 1389 C442C9F7 		shlx	r9, r10, rsi	# tmp183, tmp184, range_start
 3163      CA
 3164              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3165              		.loc 1 486 51 discriminator 2 view .LVU1007
 3166 138e 48C1EB06 		shr	rbx, 6	# tmp180,
 3167              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3168              		.loc 1 485 65 discriminator 2 view .LVU1008
 3169 1392 4801D6   		add	rsi, rdx	# range_start, step
 3170              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3171              		.loc 1 486 51 discriminator 2 view .LVU1009
 3172 1395 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp183
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3173              		.loc 1 485 53 is_stmt 1 discriminator 2 view .LVU1010
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3174              		.loc 1 485 16 discriminator 2 view .LVU1011
 3175              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3176              		.loc 1 485 9 is_stmt 0 discriminator 2 view .LVU1012
 3177 1399 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3178 139c 0F82BE00 		jb	.L217	#,
 3178      0000
 486:sieve_extend.c ****     }
 3179              		.loc 1 486 13 is_stmt 1 view .LVU1013
 3180              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3181              		.loc 1 486 51 is_stmt 0 view .LVU1014
 3182 13a2 4989F3   		mov	r11, rsi	# tmp419, range_start
 3183              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3184              		.loc 1 486 54 view .LVU1015
 3185 13a5 C442C9F7 		shlx	r12, r10, rsi	# tmp422, tmp184, range_start
 3185      E2
 3186              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3187              		.loc 1 486 51 view .LVU1016
 3188 13aa 49C1EB06 		shr	r11, 6	# tmp419,
 3189              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3190              		.loc 1 485 65 view .LVU1017
 3191 13ae 4801D6   		add	rsi, rdx	# range_start, step
 3192              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3193              		.loc 1 486 51 view .LVU1018
 3194 13b1 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp422
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3195              		.loc 1 485 53 is_stmt 1 view .LVU1019
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3196              		.loc 1 485 16 view .LVU1020
 3197              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3198              		.loc 1 485 9 is_stmt 0 view .LVU1021
 3199 13b5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
GAS LISTING /tmp/ccW4ZvF5.s 			page 95


 3200 13b8 0F82A200 		jb	.L217	#,
 3200      0000
 486:sieve_extend.c ****     }
 3201              		.loc 1 486 13 is_stmt 1 view .LVU1022
 3202              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3203              		.loc 1 486 51 is_stmt 0 view .LVU1023
 3204 13be 4989F5   		mov	r13, rsi	# tmp423, range_start
 3205              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3206              		.loc 1 486 54 view .LVU1024
 3207 13c1 C442C9F7 		shlx	r14, r10, rsi	# tmp426, tmp184, range_start
 3207      F2
 3208              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3209              		.loc 1 486 51 view .LVU1025
 3210 13c6 49C1ED06 		shr	r13, 6	# tmp423,
 3211              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3212              		.loc 1 485 65 view .LVU1026
 3213 13ca 4801D6   		add	rsi, rdx	# range_start, step
 3214              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3215              		.loc 1 486 51 view .LVU1027
 3216 13cd 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp426
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3217              		.loc 1 485 53 is_stmt 1 view .LVU1028
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3218              		.loc 1 485 16 view .LVU1029
 3219              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3220              		.loc 1 485 9 is_stmt 0 view .LVU1030
 3221 13d1 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3222 13d4 0F828600 		jb	.L217	#,
 3222      0000
 486:sieve_extend.c ****     }
 3223              		.loc 1 486 13 is_stmt 1 view .LVU1031
 3224              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3225              		.loc 1 486 51 is_stmt 0 view .LVU1032
 3226 13da 4989F7   		mov	r15, rsi	# tmp427, range_start
 3227              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3228              		.loc 1 486 54 view .LVU1033
 3229 13dd C442C9F7 		shlx	r8, r10, rsi	# tmp430, tmp184, range_start
 3229      C2
 3230              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3231              		.loc 1 486 51 view .LVU1034
 3232 13e2 49C1EF06 		shr	r15, 6	# tmp427,
 3233              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3234              		.loc 1 485 65 view .LVU1035
 3235 13e6 4801D6   		add	rsi, rdx	# range_start, step
 3236              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3237              		.loc 1 486 51 view .LVU1036
GAS LISTING /tmp/ccW4ZvF5.s 			page 96


 3238 13e9 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp430
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3239              		.loc 1 485 53 is_stmt 1 view .LVU1037
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3240              		.loc 1 485 16 view .LVU1038
 3241              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3242              		.loc 1 485 9 is_stmt 0 view .LVU1039
 3243 13ed 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3244 13f0 726E     		jb	.L217	#,
 486:sieve_extend.c ****     }
 3245              		.loc 1 486 13 is_stmt 1 view .LVU1040
 3246              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3247              		.loc 1 486 51 is_stmt 0 view .LVU1041
 3248 13f2 4889F3   		mov	rbx, rsi	# tmp431, range_start
 3249              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3250              		.loc 1 486 54 view .LVU1042
 3251 13f5 C442C9F7 		shlx	r9, r10, rsi	# tmp434, tmp184, range_start
 3251      CA
 3252              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3253              		.loc 1 486 51 view .LVU1043
 3254 13fa 48C1EB06 		shr	rbx, 6	# tmp431,
 3255              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3256              		.loc 1 485 65 view .LVU1044
 3257 13fe 4801D6   		add	rsi, rdx	# range_start, step
 3258              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3259              		.loc 1 486 51 view .LVU1045
 3260 1401 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp434
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3261              		.loc 1 485 53 is_stmt 1 view .LVU1046
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3262              		.loc 1 485 16 view .LVU1047
 3263              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3264              		.loc 1 485 9 is_stmt 0 view .LVU1048
 3265 1405 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3266 1408 7256     		jb	.L217	#,
 486:sieve_extend.c ****     }
 3267              		.loc 1 486 13 is_stmt 1 view .LVU1049
 3268              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3269              		.loc 1 486 51 is_stmt 0 view .LVU1050
 3270 140a 4989F3   		mov	r11, rsi	# tmp435, range_start
 3271              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3272              		.loc 1 486 54 view .LVU1051
 3273 140d C442C9F7 		shlx	r12, r10, rsi	# tmp438, tmp184, range_start
 3273      E2
 3274              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3275              		.loc 1 486 51 view .LVU1052
 3276 1412 49C1EB06 		shr	r11, 6	# tmp435,
GAS LISTING /tmp/ccW4ZvF5.s 			page 97


 3277              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3278              		.loc 1 485 65 view .LVU1053
 3279 1416 4801D6   		add	rsi, rdx	# range_start, step
 3280              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3281              		.loc 1 486 51 view .LVU1054
 3282 1419 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp438
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3283              		.loc 1 485 53 is_stmt 1 view .LVU1055
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3284              		.loc 1 485 16 view .LVU1056
 3285              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3286              		.loc 1 485 9 is_stmt 0 view .LVU1057
 3287 141d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3288 1420 723E     		jb	.L217	#,
 486:sieve_extend.c ****     }
 3289              		.loc 1 486 13 is_stmt 1 view .LVU1058
 3290              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3291              		.loc 1 486 51 is_stmt 0 view .LVU1059
 3292 1422 4989F5   		mov	r13, rsi	# tmp439, range_start
 3293              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3294              		.loc 1 486 54 view .LVU1060
 3295 1425 C442C9F7 		shlx	r14, r10, rsi	# tmp442, tmp184, range_start
 3295      F2
 3296              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3297              		.loc 1 486 51 view .LVU1061
 3298 142a 49C1ED06 		shr	r13, 6	# tmp439,
 3299              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3300              		.loc 1 485 65 view .LVU1062
 3301 142e 4801D6   		add	rsi, rdx	# range_start, step
 3302              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3303              		.loc 1 486 51 view .LVU1063
 3304 1431 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp442
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3305              		.loc 1 485 53 is_stmt 1 view .LVU1064
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3306              		.loc 1 485 16 view .LVU1065
 3307              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3308              		.loc 1 485 9 is_stmt 0 view .LVU1066
 3309 1435 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3310 1438 7226     		jb	.L217	#,
 486:sieve_extend.c ****     }
 3311              		.loc 1 486 13 is_stmt 1 view .LVU1067
 3312              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3313              		.loc 1 486 51 is_stmt 0 view .LVU1068
 3314 143a 4989F7   		mov	r15, rsi	# tmp443, range_start
 3315              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 98


 3316              		.loc 1 486 54 view .LVU1069
 3317 143d C442C9F7 		shlx	r8, r10, rsi	# tmp446, tmp184, range_start
 3317      C2
 3318              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3319              		.loc 1 486 51 view .LVU1070
 3320 1442 49C1EF06 		shr	r15, 6	# tmp443,
 3321              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3322              		.loc 1 485 65 view .LVU1071
 3323 1446 4801D6   		add	rsi, rdx	# range_start, step
 3324              	# sieve_extend.c:486:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 486:sieve_extend.c ****     }
 3325              		.loc 1 486 51 view .LVU1072
 3326 1449 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp446
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3327              		.loc 1 485 53 is_stmt 1 view .LVU1073
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3328              		.loc 1 485 16 view .LVU1074
 3329              	# sieve_extend.c:485:         for (; range_start <= range_start_atvector; range_start += step) 
 485:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3330              		.loc 1 485 9 is_stmt 0 view .LVU1075
 3331 144d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3332 1450 0F8330FF 		jnb	.L219	#,
 3332      FFFF
 3333 1456 662E0F1F 		.p2align 4
 3333      84000000 
 3333      0000
 3334              		.p2align 3
 3335              	.L217:
 489:sieve_extend.c **** 
 3336              		.loc 1 489 5 is_stmt 1 view .LVU1076
 3337              	# sieve_extend.c:489:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 489:sieve_extend.c **** 
 3338              		.loc 1 489 42 is_stmt 0 view .LVU1077
 3339 1460 4989D2   		mov	r10, rdx	# tmp185, step
 3340 1463 49C1E208 		sal	r10, 8	# tmp185,
 3341 1467 4901F2   		add	r10, rsi	# tmp186, range_start
 3342              	# sieve_extend.c:489:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 489:sieve_extend.c **** 
 3343              		.loc 1 489 21 view .LVU1078
 3344 146a 4939CA   		cmp	r10, rcx	# tmp186, range_stop
 3345 146d 4C0F47D1 		cmova	r10, rcx	# tmp186,, range_stop_unique, range_stop
 3346              	.LVL123:
 3347              	.LBB328:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3348              		.loc 1 493 10 is_stmt 1 view .LVU1079
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3349              		.loc 1 493 41 view .LVU1080
 3350              	# sieve_extend.c:493:     for (counter_t index = range_start; index < range_stop_unique;) {
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3351              		.loc 1 493 5 is_stmt 0 view .LVU1081
 3352 1471 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3353 1474 0F83EA04 		jnb	.L216	#,
 3353      0000
 3354              	.LBB329:
 3355              	.LBB330:
GAS LISTING /tmp/ccW4ZvF5.s 			page 99


 3356              	.LBB331:
 3357              	# sieve_extend.c:439:     register const counter_t range_stop_vector = vectorindex(range_stop);
 439:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3358              		.loc 1 439 30 view .LVU1082
 3359 147a 48C1E908 		shr	rcx, 8	# range_stop,
 3360              	.LVL124:
 3361              	# sieve_extend.c:442:     register const counter_t step_4 = step * 4;
 442:sieve_extend.c **** 
 3362              		.loc 1 442 30 view .LVU1083
 3363 147e 4C8D2C95 		lea	r13, 0[0+rdx*4]	# step_4,
 3363      00000000 
 3364              	.LBB332:
 3365              	# sieve_extend.c:445:         register const counter_t loop_stop_vector = (range_stop_vector > step
 445:sieve_extend.c ****         //#pragma GCC unroll 16
 3366              		.loc 1 445 113 view .LVU1084
 3367 1486 4889CB   		mov	rbx, rcx	# iftmp.57_71, range_stop_vector
 3368              	.LBE332:
 3369              	# sieve_extend.c:439:     register const counter_t range_stop_vector = vectorindex(range_stop);
 439:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3370              		.loc 1 439 30 view .LVU1085
 3371 1489 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3372              	.LBB333:
 3373              	# sieve_extend.c:445:         register const counter_t loop_stop_vector = (range_stop_vector > step
 445:sieve_extend.c ****         //#pragma GCC unroll 16
 3374              		.loc 1 445 113 view .LVU1086
 3375 148c 4C29EB   		sub	rbx, r13	# iftmp.57_71, step_4
 3376 148f 4883FA01 		cmp	rdx, 1	# step,
 3377 1493 0F85EE04 		jne	.L397	#,
 3377      0000
 3378 1499 4883F904 		cmp	rcx, 4	# range_stop_vector,
 3379 149d BA000000 		mov	edx, 0	# tmp208,
 3379      00
 3380              	.LVL125:
 445:sieve_extend.c ****         //#pragma GCC unroll 16
 3381              		.loc 1 445 113 view .LVU1087
 3382              	.LBE333:
 3383              	.LBE331:
 3384              	.LBE330:
 3385              	# sieve_extend.c:495:         register bitvector_t quadmask = { };
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3386              		.loc 1 495 30 view .LVU1088
 3387 14a2 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp209
 3388              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3389              		.loc 1 502 31 view .LVU1089
 3390 14a6 41BB0100 		mov	r11d, 1	# tmp213,
 3390      0000
 3391 14ac 480F46DA 		cmovbe	rbx, rdx	# iftmp.57_71,, iftmp.57_164, tmp208
 3392              	.LVL126:
 3393              		.p2align 4
 3394              		.p2align 3
 3395              	.L234:
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 3396              		.loc 1 494 9 is_stmt 1 view .LVU1090
 3397              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 3398              		.loc 1 494 54 is_stmt 0 view .LVU1091
GAS LISTING /tmp/ccW4ZvF5.s 			page 100


 3399 14b0 4889F1   		mov	rcx, rsi	# current_vector, range_start
 3400              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 3401              		.loc 1 496 35 view .LVU1092
 3402 14b3 4889F0   		mov	rax, rsi	# tmp210, range_start
 3403              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 3404              		.loc 1 494 54 view .LVU1093
 3405 14b6 48C1E908 		shr	rcx, 8	# current_vector,
 3406              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 3407              		.loc 1 496 35 view .LVU1094
 3408 14ba 48C1E806 		shr	rax, 6	# tmp210,
 3409              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 3410              		.loc 1 494 25 view .LVU1095
 3411 14be 4C8D2C8D 		lea	r13, 0[0+rcx*4]	# current_vector_start_word,
 3411      00000000 
 3412              	.LVL127:
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3413              		.loc 1 495 9 is_stmt 1 view .LVU1096
 3414              	# sieve_extend.c:495:         register bitvector_t quadmask = { };
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3415              		.loc 1 495 30 is_stmt 0 view .LVU1097
 3416 14c6 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp209
 3416      2420
 496:sieve_extend.c ****         
 3417              		.loc 1 496 9 is_stmt 1 view .LVU1098
 3418              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 3419              		.loc 1 496 28 is_stmt 0 view .LVU1099
 3420 14cc 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3421              	.LVL128:
 3422              	.L229:
 502:sieve_extend.c ****             index += step;
 3423              		.loc 1 502 13 is_stmt 1 view .LVU1100
 3424              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3425              		.loc 1 502 31 is_stmt 0 view .LVU1101
 3426 14cf C442C9F7 		shlx	r9, r11, rsi	# tmp212, tmp213, range_start
 3426      CB
 3427              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3428              		.loc 1 502 28 view .LVU1102
 3429 14d4 4C094CC4 		or	QWORD PTR 32[rsp+rax*8], r9	# quadmask, tmp212
 3429      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3430              		.loc 1 503 13 is_stmt 1 view .LVU1103
 3431              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3432              		.loc 1 503 19 is_stmt 0 view .LVU1104
 3433 14d9 488D4601 		lea	rax, 1[rsi]	# tmp236,
 3434              	.LVL129:
 3435              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3436              		.loc 1 504 20 view .LVU1105
 3437 14dd 4989C7   		mov	r15, rax	# tmp214, range_start
GAS LISTING /tmp/ccW4ZvF5.s 			page 101


 3438              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3439              		.loc 1 503 19 view .LVU1106
 3440 14e0 4889C6   		mov	rsi, rax	# range_start, tmp236
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3441              		.loc 1 504 13 is_stmt 1 view .LVU1107
 3442              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3443              		.loc 1 504 20 is_stmt 0 view .LVU1108
 3444 14e3 49C1EF06 		shr	r15, 6	# tmp214,
 3445              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3446              		.loc 1 504 18 view .LVU1109
 3447 14e7 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3448              		.loc 1 505 17 is_stmt 1 view .LVU1110
 3449              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3450              		.loc 1 505 9 is_stmt 0 view .LVU1111
 3451 14ea 4983FF03 		cmp	r15, 3	# word,
 3452 14ee 0F87EC00 		ja	.L370	#,
 3452      0000
 502:sieve_extend.c ****             index += step;
 3453              		.loc 1 502 13 is_stmt 1 view .LVU1112
 3454              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3455              		.loc 1 503 19 is_stmt 0 view .LVU1113
 3456 14f4 4883C601 		add	rsi, 1	# range_start,
 3457              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3458              		.loc 1 502 31 view .LVU1114
 3459 14f8 C442F9F7 		shlx	r12, r11, rax	# tmp349, tmp213, range_start
 3459      E3
 3460              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3461              		.loc 1 504 20 view .LVU1115
 3462 14fd 4989F6   		mov	r14, rsi	# tmp350, range_start
 3463              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3464              		.loc 1 502 28 view .LVU1116
 3465 1500 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp349
 3465      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3466              		.loc 1 503 13 is_stmt 1 view .LVU1117
 3467              	.LVL130:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3468              		.loc 1 504 13 view .LVU1118
 3469              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3470              		.loc 1 504 20 is_stmt 0 view .LVU1119
 3471 1505 49C1EE06 		shr	r14, 6	# tmp350,
 3472              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3473              		.loc 1 504 18 view .LVU1120
 3474 1509 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3475              		.loc 1 505 17 is_stmt 1 view .LVU1121
GAS LISTING /tmp/ccW4ZvF5.s 			page 102


 3476              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3477              		.loc 1 505 9 is_stmt 0 view .LVU1122
 3478 150c 4983FE03 		cmp	r14, 3	# word,
 3479 1510 0F87CA00 		ja	.L370	#,
 3479      0000
 502:sieve_extend.c ****             index += step;
 3480              		.loc 1 502 13 is_stmt 1 view .LVU1123
 3481              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3482              		.loc 1 502 31 is_stmt 0 view .LVU1124
 3483 1516 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp352, tmp213, range_start
 3483      F3
 3484              	.LVL131:
 3485              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3486              		.loc 1 502 28 view .LVU1125
 3487 151b 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp352
 3487      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3488              		.loc 1 503 13 is_stmt 1 view .LVU1126
 3489              	.LVL132:
 3490              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3491              		.loc 1 503 19 is_stmt 0 view .LVU1127
 3492 1520 488D7002 		lea	rsi, 2[rax]	# range_start,
 3493              	.LVL133:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3494              		.loc 1 504 13 is_stmt 1 view .LVU1128
 3495              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3496              		.loc 1 504 20 is_stmt 0 view .LVU1129
 3497 1524 4889F2   		mov	rdx, rsi	# tmp353, range_start
 3498 1527 48C1EA06 		shr	rdx, 6	# tmp353,
 3499              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3500              		.loc 1 504 18 view .LVU1130
 3501 152b 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3502              		.loc 1 505 17 is_stmt 1 view .LVU1131
 3503              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3504              		.loc 1 505 9 is_stmt 0 view .LVU1132
 3505 152e 4883FA03 		cmp	rdx, 3	# word,
 3506 1532 0F87A800 		ja	.L370	#,
 3506      0000
 502:sieve_extend.c ****             index += step;
 3507              		.loc 1 502 13 is_stmt 1 view .LVU1133
 3508              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3509              		.loc 1 502 31 is_stmt 0 view .LVU1134
 3510 1538 C442C9F7 		shlx	r9, r11, rsi	# tmp355, tmp213, range_start
 3510      CB
 3511              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3512              		.loc 1 503 19 view .LVU1135
 3513 153d 488D7003 		lea	rsi, 3[rax]	# range_start,
GAS LISTING /tmp/ccW4ZvF5.s 			page 103


 3514              	.LVL134:
 3515              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3516              		.loc 1 504 20 view .LVU1136
 3517 1541 4989F7   		mov	r15, rsi	# tmp356, range_start
 3518              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3519              		.loc 1 502 28 view .LVU1137
 3520 1544 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp355
 3520      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3521              		.loc 1 503 13 is_stmt 1 view .LVU1138
 3522              	.LVL135:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3523              		.loc 1 504 13 view .LVU1139
 3524              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3525              		.loc 1 504 20 is_stmt 0 view .LVU1140
 3526 1549 49C1EF06 		shr	r15, 6	# tmp356,
 3527              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3528              		.loc 1 504 18 view .LVU1141
 3529 154d 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3530              		.loc 1 505 17 is_stmt 1 view .LVU1142
 3531              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3532              		.loc 1 505 9 is_stmt 0 view .LVU1143
 3533 1550 4983FF03 		cmp	r15, 3	# word,
 3534 1554 0F878600 		ja	.L370	#,
 3534      0000
 502:sieve_extend.c ****             index += step;
 3535              		.loc 1 502 13 is_stmt 1 view .LVU1144
 3536              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3537              		.loc 1 502 31 is_stmt 0 view .LVU1145
 3538 155a C442C9F7 		shlx	r12, r11, rsi	# tmp358, tmp213, range_start
 3538      E3
 3539              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3540              		.loc 1 503 19 view .LVU1146
 3541 155f 488D7004 		lea	rsi, 4[rax]	# range_start,
 3542              	.LVL136:
 3543              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3544              		.loc 1 504 20 view .LVU1147
 3545 1563 4989F6   		mov	r14, rsi	# tmp359, range_start
 3546              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3547              		.loc 1 502 28 view .LVU1148
 3548 1566 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp358
 3548      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3549              		.loc 1 503 13 is_stmt 1 view .LVU1149
 3550              	.LVL137:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3551              		.loc 1 504 13 view .LVU1150
GAS LISTING /tmp/ccW4ZvF5.s 			page 104


 3552              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3553              		.loc 1 504 20 is_stmt 0 view .LVU1151
 3554 156b 49C1EE06 		shr	r14, 6	# tmp359,
 3555              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3556              		.loc 1 504 18 view .LVU1152
 3557 156f 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3558              		.loc 1 505 17 is_stmt 1 view .LVU1153
 3559              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3560              		.loc 1 505 9 is_stmt 0 view .LVU1154
 3561 1572 4983FE03 		cmp	r14, 3	# word,
 3562 1576 7768     		ja	.L370	#,
 502:sieve_extend.c ****             index += step;
 3563              		.loc 1 502 13 is_stmt 1 view .LVU1155
 3564              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3565              		.loc 1 502 31 is_stmt 0 view .LVU1156
 3566 1578 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp361, tmp213, range_start
 3566      F3
 3567              	.LVL138:
 3568              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3569              		.loc 1 502 28 view .LVU1157
 3570 157d 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp361
 3570      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3571              		.loc 1 503 13 is_stmt 1 view .LVU1158
 3572              	.LVL139:
 3573              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3574              		.loc 1 503 19 is_stmt 0 view .LVU1159
 3575 1582 488D7005 		lea	rsi, 5[rax]	# range_start,
 3576              	.LVL140:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3577              		.loc 1 504 13 is_stmt 1 view .LVU1160
 3578              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3579              		.loc 1 504 20 is_stmt 0 view .LVU1161
 3580 1586 4889F2   		mov	rdx, rsi	# tmp362, range_start
 3581 1589 48C1EA06 		shr	rdx, 6	# tmp362,
 3582              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3583              		.loc 1 504 18 view .LVU1162
 3584 158d 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3585              		.loc 1 505 17 is_stmt 1 view .LVU1163
 3586              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3587              		.loc 1 505 9 is_stmt 0 view .LVU1164
 3588 1590 4883FA03 		cmp	rdx, 3	# word,
 3589 1594 774A     		ja	.L370	#,
 502:sieve_extend.c ****             index += step;
 3590              		.loc 1 502 13 is_stmt 1 view .LVU1165
 3591              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
GAS LISTING /tmp/ccW4ZvF5.s 			page 105


 502:sieve_extend.c ****             index += step;
 3592              		.loc 1 502 31 is_stmt 0 view .LVU1166
 3593 1596 C442C9F7 		shlx	r9, r11, rsi	# tmp364, tmp213, range_start
 3593      CB
 3594              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3595              		.loc 1 503 19 view .LVU1167
 3596 159b 488D7006 		lea	rsi, 6[rax]	# range_start,
 3597              	.LVL141:
 3598              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3599              		.loc 1 504 20 view .LVU1168
 3600 159f 4989F7   		mov	r15, rsi	# tmp365, range_start
 3601              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3602              		.loc 1 502 28 view .LVU1169
 3603 15a2 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp364
 3603      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3604              		.loc 1 503 13 is_stmt 1 view .LVU1170
 3605              	.LVL142:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3606              		.loc 1 504 13 view .LVU1171
 3607              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3608              		.loc 1 504 20 is_stmt 0 view .LVU1172
 3609 15a7 49C1EF06 		shr	r15, 6	# tmp365,
 3610              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3611              		.loc 1 504 18 view .LVU1173
 3612 15ab 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 505:sieve_extend.c ****         
 3613              		.loc 1 505 17 is_stmt 1 view .LVU1174
 3614              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3615              		.loc 1 505 9 is_stmt 0 view .LVU1175
 3616 15ae 4983FF03 		cmp	r15, 3	# word,
 3617 15b2 772C     		ja	.L370	#,
 502:sieve_extend.c ****             index += step;
 3618              		.loc 1 502 13 is_stmt 1 view .LVU1176
 3619              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 3620              		.loc 1 502 31 is_stmt 0 view .LVU1177
 3621 15b4 C442C9F7 		shlx	r12, r11, rsi	# tmp367, tmp213, range_start
 3621      E3
 3622              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3623              		.loc 1 503 19 view .LVU1178
 3624 15b9 488D7007 		lea	rsi, 7[rax]	# range_start,
 3625              	.LVL143:
 3626              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3627              		.loc 1 504 20 view .LVU1179
 3628 15bd 4889F0   		mov	rax, rsi	# tmp368, range_start
 3629              	.LVL144:
 3630              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 106


 3631              		.loc 1 502 28 view .LVU1180
 3632 15c0 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp367
 3632      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3633              		.loc 1 503 13 is_stmt 1 view .LVU1181
 3634              	.LVL145:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3635              		.loc 1 504 13 view .LVU1182
 3636              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3637              		.loc 1 504 20 is_stmt 0 view .LVU1183
 3638 15c5 48C1E806 		shr	rax, 6	# tmp368,
 3639              	.LVL146:
 3640              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3641              		.loc 1 504 18 view .LVU1184
 3642 15c9 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3643              	.LVL147:
 505:sieve_extend.c ****         
 3644              		.loc 1 505 17 is_stmt 1 view .LVU1185
 3645              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 3646              		.loc 1 505 9 is_stmt 0 view .LVU1186
 3647 15cc 4883F803 		cmp	rax, 3	# word,
 3648 15d0 0F86F9FE 		jbe	.L229	#,
 3648      FFFF
 3649              	.LVL148:
 3650 15d6 662E0F1F 		.p2align 4
 3650      84000000 
 3650      0000
 3651              		.p2align 3
 3652              	.L370:
 508:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 3653              		.loc 1 508 9 is_stmt 1 view .LVU1187
 511:sieve_extend.c ****     }
 3654              		.loc 1 511 9 view .LVU1188
 3655 15e0 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.56_166, quadmask
 3655      2420
 3656              	.LVL149:
 3657              	.LBB338:
 3658              	.LBI330:
 435:sieve_extend.c **** 
 3659              		.loc 1 435 20 view .LVU1189
 3660              	.LBB336:
 438:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 3661              		.loc 1 438 5 view .LVU1190
 439:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3662              		.loc 1 439 5 view .LVU1191
 440:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 3663              		.loc 1 440 5 view .LVU1192
 441:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 3664              		.loc 1 441 5 view .LVU1193
 442:sieve_extend.c **** 
 3665              		.loc 1 442 5 view .LVU1194
 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3666              		.loc 1 444 5 view .LVU1195
 3667              	# sieve_extend.c:444:     if (current_vector+step_4 <= range_stop_vector) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 107


 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3668              		.loc 1 444 23 is_stmt 0 view .LVU1196
 3669 15e6 488D5104 		lea	rdx, 4[rcx]	# current_vector,
 3670              	# sieve_extend.c:444:     if (current_vector+step_4 <= range_stop_vector) {
 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3671              		.loc 1 444 8 view .LVU1197
 3672 15ea 4939D0   		cmp	r8, rdx	# range_stop_vector, current_vector
 3673 15ed 0F820D02 		jb	.L230	#,
 3673      0000
 3674              	.LBB334:
 445:sieve_extend.c ****         //#pragma GCC unroll 16
 3675              		.loc 1 445 9 is_stmt 1 view .LVU1198
 3676              	.LVL150:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3677              		.loc 1 448 15 view .LVU1199
 3678              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3679              		.loc 1 448 9 is_stmt 0 view .LVU1200
 3680 15f3 4839CB   		cmp	rbx, rcx	# iftmp.57_164, current_vector
 3681 15f6 0F820402 		jb	.L230	#,
 3681      0000
 3682 15fc 4989D9   		mov	r9, rbx	# tmp231, iftmp.57_164
 3683 15ff 4989CD   		mov	r13, rcx	# current_vector, current_vector
 3684              	.LVL151:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3685              		.loc 1 448 9 view .LVU1201
 3686 1602 49C1E505 		sal	r13, 5	# current_vector,
 3687 1606 4929D1   		sub	r9, rdx	# tmp231, current_vector
 3688 1609 4983C104 		add	r9, 4	# tmp232,
 3689 160d 4901FD   		add	r13, rdi	# ivtmp.259, bitarray_word
 3690 1610 49C1E902 		shr	r9, 2	# tmp230,
 3691 1614 4183E103 		and	r9d, 3	# tmp230,
 3692 1618 0F84A101 		je	.L231	#,
 3692      0000
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3693              		.loc 1 449 13 is_stmt 1 view .LVU1202
 3694              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3695              		.loc 1 449 52 is_stmt 0 view .LVU1203
 3696 161e C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 0[r13]	# tmp335, quadmask.56_166, MEM[base: _102, offset: 0B]
 3696      6500
 3697              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3698              		.loc 1 450 52 view .LVU1204
 3699 1624 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 32[r13]	# tmp336, quadmask.56_166, MEM[base: _102, offset: 32B]
 3699      6D20
 3700              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3701              		.loc 1 451 52 view .LVU1205
 3702 162a C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR 64[r13]	# tmp337, quadmask.56_166, MEM[base: _102, offset: 64B]
 3702      7540
 3703              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3704              		.loc 1 452 52 view .LVU1206
 3705 1630 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 96[r13]	# tmp338, quadmask.56_166, MEM[base: _102, offset: 96B]
 3705      7D60
 3706              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 108


 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3707              		.loc 1 449 52 view .LVU1207
 3708 1636 C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm12	# MEM[base: _102, offset: 0B], tmp335
 3708      6500
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3709              		.loc 1 450 13 is_stmt 1 view .LVU1208
 3710 163c 4983ED80 		sub	r13, -128	# ivtmp.259,
 3711              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3712              		.loc 1 450 52 is_stmt 0 view .LVU1209
 3713 1640 C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm13	# MEM[base: _102, offset: 32B], tmp336
 3713      6DA0
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3714              		.loc 1 451 13 is_stmt 1 view .LVU1210
 3715              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3716              		.loc 1 448 66 is_stmt 0 view .LVU1211
 3717 1646 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3718              	.LVL152:
 3719              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3720              		.loc 1 451 52 view .LVU1212
 3721 1649 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm14	# MEM[base: _102, offset: 64B], tmp337
 3721      75C0
 452:sieve_extend.c ****         }
 3722              		.loc 1 452 13 is_stmt 1 view .LVU1213
 3723              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3724              		.loc 1 452 52 is_stmt 0 view .LVU1214
 3725 164f C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm15	# MEM[base: _102, offset: 96B], tmp338
 3725      7DE0
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3726              		.loc 1 448 51 is_stmt 1 view .LVU1215
 3727              	.LVL153:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3728              		.loc 1 448 15 view .LVU1216
 3729              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3730              		.loc 1 448 9 is_stmt 0 view .LVU1217
 3731 1655 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.57_164
 3732 1658 0F87A201 		ja	.L230	#,
 3732      0000
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3733              		.loc 1 448 9 view .LVU1218
 3734 165e 4983F901 		cmp	r9, 1	# tmp233,
 3735 1662 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3736              	.LVL154:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3737              		.loc 1 448 9 view .LVU1219
 3738 1666 0F845301 		je	.L231	#,
 3738      0000
 3739 166c 4983F902 		cmp	r9, 2	# tmp233,
 3740 1670 7438     		je	.L334	#,
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3741              		.loc 1 449 13 is_stmt 1 view .LVU1220
 3742              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 109


 3743              		.loc 1 449 52 is_stmt 0 view .LVU1221
 3744 1672 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 0[r13]	# tmp339, quadmask.56_166, MEM[base: _102, offset: 0B]
 3744      4D00
 3745              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3746              		.loc 1 450 52 view .LVU1222
 3747 1678 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 32[r13]	# tmp340, quadmask.56_166, MEM[base: _102, offset: 32B]
 3747      5D20
 3748              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3749              		.loc 1 451 52 view .LVU1223
 3750 167e C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 64[r13]	# tmp341, quadmask.56_166, MEM[base: _102, offset: 64B]
 3750      6540
 3751              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3752              		.loc 1 452 52 view .LVU1224
 3753 1684 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 96[r13]	# tmp342, quadmask.56_166, MEM[base: _102, offset: 96B]
 3753      6D60
 3754              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3755              		.loc 1 449 52 view .LVU1225
 3756 168a C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm1	# MEM[base: _102, offset: 0B], tmp339
 3756      4D00
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3757              		.loc 1 450 13 is_stmt 1 view .LVU1226
 3758 1690 488D5108 		lea	rdx, 8[rcx]	# current_vector,
 3759              	.LVL155:
 3760              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3761              		.loc 1 450 52 is_stmt 0 view .LVU1227
 3762 1694 C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm3	# MEM[base: _102, offset: 32B], tmp340
 3762      5D20
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3763              		.loc 1 451 13 is_stmt 1 view .LVU1228
 3764 169a 4983ED80 		sub	r13, -128	# ivtmp.259,
 3765              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3766              		.loc 1 451 52 is_stmt 0 view .LVU1229
 3767 169e C4C17D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm4	# MEM[base: _102, offset: 64B], tmp341
 3767      65C0
 452:sieve_extend.c ****         }
 3768              		.loc 1 452 13 is_stmt 1 view .LVU1230
 3769              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3770              		.loc 1 452 52 is_stmt 0 view .LVU1231
 3771 16a4 C4C17D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm5	# MEM[base: _102, offset: 96B], tmp342
 3771      6DE0
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3772              		.loc 1 448 51 is_stmt 1 view .LVU1232
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3773              		.loc 1 448 15 view .LVU1233
 3774              	.LVL156:
 3775              	.L334:
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3776              		.loc 1 449 13 view .LVU1234
 3777              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 110


 3778              		.loc 1 449 52 is_stmt 0 view .LVU1235
 3779 16aa C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 0[r13]	# tmp344, quadmask.56_166, MEM[base: _102, offset: 0B]
 3779      7500
 3780              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3781              		.loc 1 450 52 view .LVU1236
 3782 16b0 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 32[r13]	# tmp345, quadmask.56_166, MEM[base: _102, offset: 32B]
 3782      7D20
 3783              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3784              		.loc 1 451 52 view .LVU1237
 3785 16b6 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 64[r13]	# tmp346, quadmask.56_166, MEM[base: _102, offset: 64B]
 3785      4540
 3786              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3787              		.loc 1 452 52 view .LVU1238
 3788 16bc C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 96[r13]	# tmp347, quadmask.56_166, MEM[base: _102, offset: 96B]
 3788      4D60
 3789              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3790              		.loc 1 449 52 view .LVU1239
 3791 16c2 C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm6	# MEM[base: _102, offset: 0B], tmp344
 3791      7500
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3792              		.loc 1 450 13 is_stmt 1 view .LVU1240
 3793 16c8 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3794              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3795              		.loc 1 450 52 is_stmt 0 view .LVU1241
 3796 16cc C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm7	# MEM[base: _102, offset: 32B], tmp345
 3796      7D20
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3797              		.loc 1 451 13 is_stmt 1 view .LVU1242
 3798 16d2 4983ED80 		sub	r13, -128	# ivtmp.259,
 3799              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3800              		.loc 1 451 52 is_stmt 0 view .LVU1243
 3801 16d6 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm8	# MEM[base: _102, offset: 64B], tmp346
 3801      45C0
 452:sieve_extend.c ****         }
 3802              		.loc 1 452 13 is_stmt 1 view .LVU1244
 3803              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3804              		.loc 1 452 52 is_stmt 0 view .LVU1245
 3805 16dc C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm9	# MEM[base: _102, offset: 96B], tmp347
 3805      4DE0
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3806              		.loc 1 448 51 is_stmt 1 view .LVU1246
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3807              		.loc 1 448 15 view .LVU1247
 3808 16e2 E9D80000 		jmp	.L231	#
 3808      00
 3809              	.LVL157:
 3810              		.p2align 4,,7
 3811 16e7 90       		.p2align 3
 3812              	.L398:
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 111


 3813              		.loc 1 449 13 view .LVU1248
 3814              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3815              		.loc 1 449 52 is_stmt 0 view .LVU1249
 3816 16e8 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 128[r13]	# tmp251, quadmask.56_166, MEM[base: _102, offset: 0B]
 3816      8D800000 
 3816      00
 3817              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3818              		.loc 1 450 52 view .LVU1250
 3819 16f1 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 160[r13]	# tmp252, quadmask.56_166, MEM[base: _102, offset: 32B]
 3819      9DA00000 
 3819      00
 3820              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3821              		.loc 1 451 52 view .LVU1251
 3822 16fa C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 192[r13]	# tmp253, quadmask.56_166, MEM[base: _102, offset: 64B]
 3822      A5C00000 
 3822      00
 3823              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3824              		.loc 1 452 52 view .LVU1252
 3825 1703 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 224[r13]	# tmp254, quadmask.56_166, MEM[base: _102, offset: 96B]
 3825      ADE00000 
 3825      00
 3826              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3827              		.loc 1 449 52 view .LVU1253
 3828 170c C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 256[r13]	# tmp258, quadmask.56_166, MEM[base: _102, offset: 0B]
 3828      B5000100 
 3828      00
 3829              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3830              		.loc 1 450 52 view .LVU1254
 3831 1715 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 288[r13]	# tmp259, quadmask.56_166, MEM[base: _102, offset: 32B]
 3831      BD200100 
 3831      00
 3832              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3833              		.loc 1 451 52 view .LVU1255
 3834 171e C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 320[r13]	# tmp260, quadmask.56_166, MEM[base: _102, offset: 64B]
 3834      85400100 
 3834      00
 3835              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3836              		.loc 1 452 52 view .LVU1256
 3837 1727 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 352[r13]	# tmp261, quadmask.56_166, MEM[base: _102, offset: 96B]
 3837      8D600100 
 3837      00
 3838              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3839              		.loc 1 449 52 view .LVU1257
 3840 1730 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 384[r13]	# tmp265, quadmask.56_166, MEM[base: _102, offset: 0B]
 3840      95800100 
 3840      00
 3841              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 112


 3842              		.loc 1 450 52 view .LVU1258
 3843 1739 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 416[r13]	# tmp266, quadmask.56_166, MEM[base: _102, offset: 32B]
 3843      9DA00100 
 3843      00
 3844              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3845              		.loc 1 451 52 view .LVU1259
 3846 1742 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 448[r13]	# tmp267, quadmask.56_166, MEM[base: _102, offset: 64B]
 3846      A5C00100 
 3846      00
 3847              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3848              		.loc 1 452 52 view .LVU1260
 3849 174b C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 480[r13]	# tmp268, quadmask.56_166, MEM[base: _102, offset: 96B]
 3849      ADE00100 
 3849      00
 3850              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3851              		.loc 1 449 52 view .LVU1261
 3852 1754 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r13], ymm1	# MEM[base: _102, offset: 0B], tmp251
 3852      8D800000 
 3852      00
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3853              		.loc 1 450 13 is_stmt 1 view .LVU1262
 3854 175d 488D5210 		lea	rdx, 16[rdx]	# current_vector,
 3855              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3856              		.loc 1 450 52 is_stmt 0 view .LVU1263
 3857 1761 C4C17D7F 		vmovdqa	YMMWORD PTR 160[r13], ymm3	# MEM[base: _102, offset: 32B], tmp252
 3857      9DA00000 
 3857      00
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3858              		.loc 1 451 13 is_stmt 1 view .LVU1264
 3859 176a 4981C500 		add	r13, 512	# ivtmp.259,
 3859      020000
 3860              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3861              		.loc 1 451 52 is_stmt 0 view .LVU1265
 3862 1771 C4C17D7F 		vmovdqa	YMMWORD PTR -320[r13], ymm4	# MEM[base: _102, offset: 64B], tmp253
 3862      A5C0FEFF 
 3862      FF
 452:sieve_extend.c ****         }
 3863              		.loc 1 452 13 is_stmt 1 view .LVU1266
 3864              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3865              		.loc 1 452 52 is_stmt 0 view .LVU1267
 3866 177a C4C17D7F 		vmovdqa	YMMWORD PTR -288[r13], ymm5	# MEM[base: _102, offset: 96B], tmp254
 3866      ADE0FEFF 
 3866      FF
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3867              		.loc 1 448 51 is_stmt 1 view .LVU1268
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3868              		.loc 1 448 15 view .LVU1269
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3869              		.loc 1 449 13 view .LVU1270
 3870              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 113


 3871              		.loc 1 449 52 is_stmt 0 view .LVU1271
 3872 1783 C4C17D7F 		vmovdqa	YMMWORD PTR -256[r13], ymm6	# MEM[base: _102, offset: 0B], tmp258
 3872      B500FFFF 
 3872      FF
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3873              		.loc 1 450 13 is_stmt 1 view .LVU1272
 3874              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3875              		.loc 1 450 52 is_stmt 0 view .LVU1273
 3876 178c C4C17D7F 		vmovdqa	YMMWORD PTR -224[r13], ymm7	# MEM[base: _102, offset: 32B], tmp259
 3876      BD20FFFF 
 3876      FF
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3877              		.loc 1 451 13 is_stmt 1 view .LVU1274
 3878              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3879              		.loc 1 451 52 is_stmt 0 view .LVU1275
 3880 1795 C4417D7F 		vmovdqa	YMMWORD PTR -192[r13], ymm8	# MEM[base: _102, offset: 64B], tmp260
 3880      8540FFFF 
 3880      FF
 452:sieve_extend.c ****         }
 3881              		.loc 1 452 13 is_stmt 1 view .LVU1276
 3882              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3883              		.loc 1 452 52 is_stmt 0 view .LVU1277
 3884 179e C4417D7F 		vmovdqa	YMMWORD PTR -160[r13], ymm9	# MEM[base: _102, offset: 96B], tmp261
 3884      8D60FFFF 
 3884      FF
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3885              		.loc 1 448 51 is_stmt 1 view .LVU1278
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3886              		.loc 1 448 15 view .LVU1279
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3887              		.loc 1 449 13 view .LVU1280
 3888              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3889              		.loc 1 449 52 is_stmt 0 view .LVU1281
 3890 17a7 C4417D7F 		vmovdqa	YMMWORD PTR -128[r13], ymm10	# MEM[base: _102, offset: 0B], tmp265
 3890      5580
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3891              		.loc 1 450 13 is_stmt 1 view .LVU1282
 3892              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3893              		.loc 1 450 52 is_stmt 0 view .LVU1283
 3894 17ad C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm11	# MEM[base: _102, offset: 32B], tmp266
 3894      5DA0
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3895              		.loc 1 451 13 is_stmt 1 view .LVU1284
 3896              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3897              		.loc 1 451 52 is_stmt 0 view .LVU1285
 3898 17b3 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp267
 3898      65C0
 452:sieve_extend.c ****         }
 3899              		.loc 1 452 13 is_stmt 1 view .LVU1286
 3900              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
GAS LISTING /tmp/ccW4ZvF5.s 			page 114


 3901              		.loc 1 452 52 is_stmt 0 view .LVU1287
 3902 17b9 C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm13	# MEM[base: _102, offset: 96B], tmp268
 3902      6DE0
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3903              		.loc 1 448 51 is_stmt 1 view .LVU1288
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3904              		.loc 1 448 15 view .LVU1289
 3905              	.LVL158:
 3906              	.L231:
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3907              		.loc 1 449 13 view .LVU1290
 3908              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3909              		.loc 1 449 52 is_stmt 0 view .LVU1291
 3910 17bf C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 0[r13]	# tmp217, quadmask.56_166, MEM[base: _102, offset: 0B]
 3910      5500
 3911              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3912              		.loc 1 450 52 view .LVU1292
 3913 17c5 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 32[r13]	# tmp218, quadmask.56_166, MEM[base: _102, offset: 32B]
 3913      5D20
 3914              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3915              		.loc 1 451 52 view .LVU1293
 3916 17cb C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 64[r13]	# tmp219, quadmask.56_166, MEM[base: _102, offset: 64B]
 3916      6540
 3917              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3918              		.loc 1 452 52 view .LVU1294
 3919 17d1 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 96[r13]	# tmp220, quadmask.56_166, MEM[base: _102, offset: 96B]
 3919      6D60
 3920              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3921              		.loc 1 448 9 view .LVU1295
 3922 17d7 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.57_164
 3923              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3924              		.loc 1 448 66 view .LVU1296
 3925 17da 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3926              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 3927              		.loc 1 449 52 view .LVU1297
 3928 17dd C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm10	# MEM[base: _102, offset: 0B], tmp217
 3928      5500
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3929              		.loc 1 450 13 is_stmt 1 view .LVU1298
 3930              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 3931              		.loc 1 450 52 is_stmt 0 view .LVU1299
 3932 17e3 C4417D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm11	# MEM[base: _102, offset: 32B], tmp218
 3932      5D20
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3933              		.loc 1 451 13 is_stmt 1 view .LVU1300
 3934              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 3935              		.loc 1 451 52 is_stmt 0 view .LVU1301
 3936 17e9 C4417D7F 		vmovdqa	YMMWORD PTR 64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp219
GAS LISTING /tmp/ccW4ZvF5.s 			page 115


 3936      6540
 452:sieve_extend.c ****         }
 3937              		.loc 1 452 13 is_stmt 1 view .LVU1302
 3938              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 3939              		.loc 1 452 52 is_stmt 0 view .LVU1303
 3940 17ef C4417D7F 		vmovdqa	YMMWORD PTR 96[r13], ymm13	# MEM[base: _102, offset: 96B], tmp220
 3940      6D60
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3941              		.loc 1 448 51 is_stmt 1 view .LVU1304
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3942              		.loc 1 448 15 view .LVU1305
 3943              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3944              		.loc 1 448 9 is_stmt 0 view .LVU1306
 3945 17f5 0F86EDFE 		jbe	.L398	#,
 3945      FFFF
 3946              	.LVL159:
 3947 17fb 0F1F4400 		.p2align 4
 3947      00
 3948              		.p2align 3
 3949              	.L230:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 3950              		.loc 1 448 9 view .LVU1307
 3951              	.LBE334:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3952              		.loc 1 458 11 is_stmt 1 view .LVU1308
 3953              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3954              		.loc 1 458 5 is_stmt 0 view .LVU1309
 3955 1800 4939C8   		cmp	r8, rcx	# range_stop_vector, current_vector
 3956 1803 0F824F01 		jb	.L232	#,
 3956      0000
 3957 1809 4989CF   		mov	r15, rcx	# tmp221, current_vector
 3958 180c 4D89C4   		mov	r12, r8	# tmp226, range_stop_vector
 3959 180f 49C1E705 		sal	r15, 5	# tmp221,
 3960 1813 4929CC   		sub	r12, rcx	# tmp226, current_vector
 3961              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3962              		.loc 1 458 63 view .LVU1310
 3963 1816 4C8D6901 		lea	r13, 1[rcx]	# current_vector,
 3964 181a 4901FF   		add	r15, rdi	# ivtmp.269, bitarray_word
 3965 181d 4183E407 		and	r12d, 7	# tmp227,
 459:sieve_extend.c ****     }
 3966              		.loc 1 459 9 is_stmt 1 view .LVU1311
 3967              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 3968              		.loc 1 459 41 is_stmt 0 view .LVU1312
 3969 1821 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r15]	# tmp222, quadmask.56_166, MEM[base: _177, offset: 0B]
 3969      37
 3970              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3971              		.loc 1 458 5 view .LVU1313
 3972 1826 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 3973 1829 498D4720 		lea	rax, 32[r15]	# ivtmp.269,
 3974              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 116


 3975              		.loc 1 459 41 view .LVU1314
 3976 182d C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm14	# MEM[base: _177, offset: 0B], tmp222
 3976      37
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3977              		.loc 1 458 48 is_stmt 1 view .LVU1315
 3978              	.LVL160:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3979              		.loc 1 458 11 view .LVU1316
 3980              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 3981              		.loc 1 458 5 is_stmt 0 view .LVU1317
 3982 1832 0F822001 		jb	.L232	#,
 3982      0000
 3983 1838 4D85E4   		test	r12, r12	# tmp227
 3984 183b 0F84A100 		je	.L233	#,
 3984      0000
 3985 1841 4983FC01 		cmp	r12, 1	# tmp227,
 3986 1845 0F848200 		je	.L328	#,
 3986      0000
 3987 184b 4983FC02 		cmp	r12, 2	# tmp227,
 3988 184f 746C     		je	.L329	#,
 3989 1851 4983FC03 		cmp	r12, 3	# tmp227,
 3990 1855 7456     		je	.L330	#,
 3991 1857 4983FC04 		cmp	r12, 4	# tmp227,
 3992 185b 7440     		je	.L331	#,
 3993 185d 4983FC05 		cmp	r12, 5	# tmp227,
 3994 1861 742A     		je	.L332	#,
 3995 1863 4983FC06 		cmp	r12, 6	# tmp227,
 3996 1867 7414     		je	.L333	#,
 459:sieve_extend.c ****     }
 3997              		.loc 1 459 9 is_stmt 1 view .LVU1318
 3998              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 3999              		.loc 1 459 41 is_stmt 0 view .LVU1319
 4000 1869 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 32[r15]	# tmp328, quadmask.56_166, MEM[base: _177, offset: 0B]
 4000      7F20
 4001              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4002              		.loc 1 458 63 view .LVU1320
 4003 186f 4C8D6902 		lea	r13, 2[rcx]	# current_vector,
 4004              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4005              		.loc 1 459 41 view .LVU1321
 4006 1873 C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm15	# MEM[base: _177, offset: 0B], tmp328
 4006      7F20
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4007              		.loc 1 458 48 is_stmt 1 view .LVU1322
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4008              		.loc 1 458 11 view .LVU1323
 4009 1879 498D4740 		lea	rax, 64[r15]	# ivtmp.269,
 4010              	.L333:
 459:sieve_extend.c ****     }
 4011              		.loc 1 459 9 view .LVU1324
 4012              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4013              		.loc 1 459 41 is_stmt 0 view .LVU1325
 4014 187d C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp329, quadmask.56_166, MEM[base: _177, offset: 0B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 117


 4015              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4016              		.loc 1 458 63 view .LVU1326
 4017 1881 4983C501 		add	r13, 1	# current_vector,
 4018              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4019              		.loc 1 459 41 view .LVU1327
 4020 1885 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _177, offset: 0B], tmp329
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4021              		.loc 1 458 48 is_stmt 1 view .LVU1328
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4022              		.loc 1 458 11 view .LVU1329
 4023 1889 4883C020 		add	rax, 32	# ivtmp.269,
 4024              	.LVL161:
 4025              	.L332:
 459:sieve_extend.c ****     }
 4026              		.loc 1 459 9 view .LVU1330
 4027              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4028              		.loc 1 459 41 is_stmt 0 view .LVU1331
 4029 188d C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp330, quadmask.56_166, MEM[base: _177, offset: 0B]
 4030              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4031              		.loc 1 458 63 view .LVU1332
 4032 1891 4983C501 		add	r13, 1	# current_vector,
 4033              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4034              		.loc 1 459 41 view .LVU1333
 4035 1895 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: _177, offset: 0B], tmp330
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4036              		.loc 1 458 48 is_stmt 1 view .LVU1334
 4037              	.LVL162:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4038              		.loc 1 458 11 view .LVU1335
 4039 1899 4883C020 		add	rax, 32	# ivtmp.269,
 4040              	.LVL163:
 4041              	.L331:
 459:sieve_extend.c ****     }
 4042              		.loc 1 459 9 view .LVU1336
 4043              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4044              		.loc 1 459 41 is_stmt 0 view .LVU1337
 4045 189d C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp331, quadmask.56_166, MEM[base: _177, offset: 0B]
 4046              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4047              		.loc 1 458 63 view .LVU1338
 4048 18a1 4983C501 		add	r13, 1	# current_vector,
 4049              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4050              		.loc 1 459 41 view .LVU1339
 4051 18a5 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _177, offset: 0B], tmp331
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4052              		.loc 1 458 48 is_stmt 1 view .LVU1340
 4053              	.LVL164:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4054              		.loc 1 458 11 view .LVU1341
 4055 18a9 4883C020 		add	rax, 32	# ivtmp.269,
GAS LISTING /tmp/ccW4ZvF5.s 			page 118


 4056              	.LVL165:
 4057              	.L330:
 459:sieve_extend.c ****     }
 4058              		.loc 1 459 9 view .LVU1342
 4059              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4060              		.loc 1 459 41 is_stmt 0 view .LVU1343
 4061 18ad C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp332, quadmask.56_166, MEM[base: _177, offset: 0B]
 4062              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4063              		.loc 1 458 63 view .LVU1344
 4064 18b1 4983C501 		add	r13, 1	# current_vector,
 4065              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4066              		.loc 1 459 41 view .LVU1345
 4067 18b5 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _177, offset: 0B], tmp332
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4068              		.loc 1 458 48 is_stmt 1 view .LVU1346
 4069              	.LVL166:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4070              		.loc 1 458 11 view .LVU1347
 4071 18b9 4883C020 		add	rax, 32	# ivtmp.269,
 4072              	.LVL167:
 4073              	.L329:
 459:sieve_extend.c ****     }
 4074              		.loc 1 459 9 view .LVU1348
 4075              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4076              		.loc 1 459 41 is_stmt 0 view .LVU1349
 4077 18bd C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp333, quadmask.56_166, MEM[base: _177, offset: 0B]
 4078              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4079              		.loc 1 458 63 view .LVU1350
 4080 18c1 4983C501 		add	r13, 1	# current_vector,
 4081              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4082              		.loc 1 459 41 view .LVU1351
 4083 18c5 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _177, offset: 0B], tmp333
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4084              		.loc 1 458 48 is_stmt 1 view .LVU1352
 4085              	.LVL168:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4086              		.loc 1 458 11 view .LVU1353
 4087 18c9 4883C020 		add	rax, 32	# ivtmp.269,
 4088              	.LVL169:
 4089              	.L328:
 459:sieve_extend.c ****     }
 4090              		.loc 1 459 9 view .LVU1354
 4091              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4092              		.loc 1 459 41 is_stmt 0 view .LVU1355
 4093 18cd C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp334, quadmask.56_166, MEM[base: _177, offset: 0B]
 4094              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4095              		.loc 1 458 63 view .LVU1356
 4096 18d1 4983C501 		add	r13, 1	# current_vector,
 4097              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 119


 459:sieve_extend.c ****     }
 4098              		.loc 1 459 41 view .LVU1357
 4099 18d5 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _177, offset: 0B], tmp334
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4100              		.loc 1 458 48 is_stmt 1 view .LVU1358
 4101              	.LVL170:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4102              		.loc 1 458 11 view .LVU1359
 4103 18d9 4883C020 		add	rax, 32	# ivtmp.269,
 4104              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4105              		.loc 1 458 5 is_stmt 0 view .LVU1360
 4106 18dd 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4107 18e0 7276     		jb	.L232	#,
 4108              	.LVL171:
 4109              	.L233:
 459:sieve_extend.c ****     }
 4110              		.loc 1 459 9 is_stmt 1 view .LVU1361
 4111              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4112              		.loc 1 459 41 is_stmt 0 view .LVU1362
 4113 18e2 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp272, quadmask.56_166, MEM[base: _177, offset: 0B]
 4114 18e6 C57DEB48 		vpor	ymm9, ymm0, YMMWORD PTR 32[rax]	# tmp275, quadmask.56_166, MEM[base: _177, offset: 0B]
 4114      20
 4115 18eb C57DEB50 		vpor	ymm10, ymm0, YMMWORD PTR 64[rax]	# tmp278, quadmask.56_166, MEM[base: _177, offset: 0B]
 4115      40
 4116 18f0 C57DEB58 		vpor	ymm11, ymm0, YMMWORD PTR 96[rax]	# tmp281, quadmask.56_166, MEM[base: _177, offset: 0B]
 4116      60
 4117 18f5 C57DEBA0 		vpor	ymm12, ymm0, YMMWORD PTR 128[rax]	# tmp284, quadmask.56_166, MEM[base: _177, offset: 0B]
 4117      80000000 
 4118 18fd C57DEBA8 		vpor	ymm13, ymm0, YMMWORD PTR 160[rax]	# tmp287, quadmask.56_166, MEM[base: _177, offset: 0B]
 4118      A0000000 
 4119 1905 C57DEBB0 		vpor	ymm14, ymm0, YMMWORD PTR 192[rax]	# tmp290, quadmask.56_166, MEM[base: _177, offset: 0B]
 4119      C0000000 
 4120 190d C57DEBB8 		vpor	ymm15, ymm0, YMMWORD PTR 224[rax]	# tmp293, quadmask.56_166, MEM[base: _177, offset: 0B]
 4120      E0000000 
 4121              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4122              		.loc 1 458 63 view .LVU1363
 4123 1915 4983C508 		add	r13, 8	# current_vector,
 4124 1919 48050001 		add	rax, 256	# ivtmp.269,
 4124      0000
 4125              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4126              		.loc 1 459 41 view .LVU1364
 4127 191f C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _177, offset: 0B], tmp272
 4127      00FFFFFF 
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4128              		.loc 1 458 48 is_stmt 1 view .LVU1365
 4129              	.LVL172:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4130              		.loc 1 458 11 view .LVU1366
 459:sieve_extend.c ****     }
 4131              		.loc 1 459 9 view .LVU1367
 4132              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4133              		.loc 1 459 41 is_stmt 0 view .LVU1368
GAS LISTING /tmp/ccW4ZvF5.s 			page 120


 4134 1927 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _177, offset: 0B], tmp275
 4134      20FFFFFF 
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4135              		.loc 1 458 48 is_stmt 1 view .LVU1369
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4136              		.loc 1 458 11 view .LVU1370
 459:sieve_extend.c ****     }
 4137              		.loc 1 459 9 view .LVU1371
 4138              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4139              		.loc 1 459 41 is_stmt 0 view .LVU1372
 4140 192f C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _177, offset: 0B], tmp278
 4140      40FFFFFF 
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4141              		.loc 1 458 48 is_stmt 1 view .LVU1373
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4142              		.loc 1 458 11 view .LVU1374
 459:sieve_extend.c ****     }
 4143              		.loc 1 459 9 view .LVU1375
 4144              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4145              		.loc 1 459 41 is_stmt 0 view .LVU1376
 4146 1937 C57D7F98 		vmovdqa	YMMWORD PTR -160[rax], ymm11	# MEM[base: _177, offset: 0B], tmp281
 4146      60FFFFFF 
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4147              		.loc 1 458 48 is_stmt 1 view .LVU1377
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4148              		.loc 1 458 11 view .LVU1378
 459:sieve_extend.c ****     }
 4149              		.loc 1 459 9 view .LVU1379
 4150              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4151              		.loc 1 459 41 is_stmt 0 view .LVU1380
 4152 193f C57D7F60 		vmovdqa	YMMWORD PTR -128[rax], ymm12	# MEM[base: _177, offset: 0B], tmp284
 4152      80
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4153              		.loc 1 458 48 is_stmt 1 view .LVU1381
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4154              		.loc 1 458 11 view .LVU1382
 459:sieve_extend.c ****     }
 4155              		.loc 1 459 9 view .LVU1383
 4156              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4157              		.loc 1 459 41 is_stmt 0 view .LVU1384
 4158 1944 C57D7F68 		vmovdqa	YMMWORD PTR -96[rax], ymm13	# MEM[base: _177, offset: 0B], tmp287
 4158      A0
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4159              		.loc 1 458 48 is_stmt 1 view .LVU1385
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4160              		.loc 1 458 11 view .LVU1386
 459:sieve_extend.c ****     }
 4161              		.loc 1 459 9 view .LVU1387
 4162              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4163              		.loc 1 459 41 is_stmt 0 view .LVU1388
 4164 1949 C57D7F70 		vmovdqa	YMMWORD PTR -64[rax], ymm14	# MEM[base: _177, offset: 0B], tmp290
 4164      C0
GAS LISTING /tmp/ccW4ZvF5.s 			page 121


 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4165              		.loc 1 458 48 is_stmt 1 view .LVU1389
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4166              		.loc 1 458 11 view .LVU1390
 459:sieve_extend.c ****     }
 4167              		.loc 1 459 9 view .LVU1391
 4168              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4169              		.loc 1 459 41 is_stmt 0 view .LVU1392
 4170 194e C57D7F78 		vmovdqa	YMMWORD PTR -32[rax], ymm15	# MEM[base: _177, offset: 0B], tmp293
 4170      E0
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4171              		.loc 1 458 48 is_stmt 1 view .LVU1393
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4172              		.loc 1 458 11 view .LVU1394
 4173              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4174              		.loc 1 458 5 is_stmt 0 view .LVU1395
 4175 1953 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4176 1956 738A     		jnb	.L233	#,
 4177              	.LVL173:
 4178              	.L232:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4179              		.loc 1 458 5 view .LVU1396
 4180              	.LBE336:
 4181              	.LBE338:
 4182              	.LBE329:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4183              		.loc 1 493 41 is_stmt 1 view .LVU1397
 4184              	# sieve_extend.c:493:     for (counter_t index = range_start; index < range_stop_unique;) {
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4185              		.loc 1 493 5 is_stmt 0 view .LVU1398
 4186 1958 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4187 195b 0F874FFB 		ja	.L234	#,
 4187      FFFF
 4188              	.LVL174:
 4189              	.L396:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4190              		.loc 1 493 5 view .LVU1399
 4191 1961 C5F877   		vzeroupper
 4192              	.L216:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4193              		.loc 1 493 5 view .LVU1400
 4194              	.LBE328:
 4195              	# sieve_extend.c:513: }
 513:sieve_extend.c **** 
 4196              		.loc 1 513 1 view .LVU1401
 4197 1964 488B4424 		mov	rax, QWORD PTR 88[rsp]	# tmp512, D.6830
 4197      58
 4198 1969 64483304 		xor	rax, QWORD PTR fs:40	# tmp512, MEM[(<address-space-1> long unsigned int *)40B]
 4198      25280000 
 4198      00
 4199 1972 0F855C04 		jne	.L399	#,
 4199      0000
 4200 1978 488D65D8 		lea	rsp, -40[rbp]	#,
 4201 197c 5B       		pop	rbx	#
 4202 197d 415C     		pop	r12	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 122


 4203 197f 415D     		pop	r13	#
 4204 1981 415E     		pop	r14	#
 4205 1983 415F     		pop	r15	#
 4206 1985 5D       		pop	rbp	#
 4207              		.cfi_remember_state
 4208              		.cfi_def_cfa 7, 8
 4209 1986 C3       		ret	
 4210              	.LVL175:
 4211              	.L397:
 4212              		.cfi_restore_state
 513:sieve_extend.c **** 
 4213              		.loc 1 513 1 view .LVU1402
 4214 1987 4C39E9   		cmp	rcx, r13	# range_stop_vector, step_4
 4215 198a B8000000 		mov	eax, 0	# tmp188,
 4215      00
 4216              	.LVL176:
 513:sieve_extend.c **** 
 4217              		.loc 1 513 1 view .LVU1403
 4218 198f 4889D1   		mov	rcx, rdx	# _200, step
 4219 1992 4989D1   		mov	r9, rdx	# _207, step
 4220 1995 480F47C3 		cmova	rax, rbx	# iftmp.57_71,, tmp188
 4221 1999 488D1C52 		lea	rbx, [rdx+rdx*2]	# tmp191,
 4222 199d 4989D4   		mov	r12, rdx	# _211, step
 4223              	.LBB341:
 4224              	.LBB340:
 4225              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4226              		.loc 1 502 31 view .LVU1404
 4227 19a0 41BB0100 		mov	r11d, 1	# tmp197,
 4227      0000
 4228 19a6 48C1E107 		sal	rcx, 7	# _200,
 4229 19aa 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, range_stop_unique
 4229      10
 4230 19af 4989CA   		mov	r10, rcx	# _200, _200
 4231              	.LVL177:
 502:sieve_extend.c ****             index += step;
 4232              		.loc 1 502 31 view .LVU1405
 4233 19b2 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, bitarray_word
 4233      18
 4234 19b7 4889C7   		mov	rdi, rax	# iftmp.57_93, iftmp.57_93
 4235              	.LVL178:
 502:sieve_extend.c ****             index += step;
 4236              		.loc 1 502 31 view .LVU1406
 4237 19ba 49C1E105 		sal	r9, 5	# _207,
 4238 19be 48C1E305 		sal	rbx, 5	# tmp192,
 4239              	# sieve_extend.c:495:         register bitvector_t quadmask = { };
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4240              		.loc 1 495 30 view .LVU1407
 4241 19c2 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp193
 4242 19c6 49C1E406 		sal	r12, 6	# _211,
 4243 19ca 660F1F44 		.p2align 4
 4243      0000
 4244              		.p2align 3
 4245              	.L228:
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 4246              		.loc 1 494 9 is_stmt 1 view .LVU1408
 4247              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
GAS LISTING /tmp/ccW4ZvF5.s 			page 123


 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 4248              		.loc 1 494 54 is_stmt 0 view .LVU1409
 4249 19d0 4889F0   		mov	rax, rsi	# current_vector, range_start
 4250              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 4251              		.loc 1 496 35 view .LVU1410
 4252 19d3 4989F6   		mov	r14, rsi	# tmp194, range_start
 4253              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 4254              		.loc 1 494 54 view .LVU1411
 4255 19d6 48C1E808 		shr	rax, 8	# current_vector,
 4256              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 4257              		.loc 1 496 35 view .LVU1412
 4258 19da 49C1EE06 		shr	r14, 6	# tmp194,
 4259              	# sieve_extend.c:494:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 494:sieve_extend.c ****         register bitvector_t quadmask = { };
 4260              		.loc 1 494 25 view .LVU1413
 4261 19de 488D0C85 		lea	rcx, 0[0+rax*4]	# current_vector_start_word,
 4261      00000000 
 4262              	.LVL179:
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4263              		.loc 1 495 9 is_stmt 1 view .LVU1414
 4264              	# sieve_extend.c:495:         register bitvector_t quadmask = { };
 495:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4265              		.loc 1 495 30 is_stmt 0 view .LVU1415
 4266 19e6 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp193
 4266      2420
 496:sieve_extend.c ****         
 4267              		.loc 1 496 9 is_stmt 1 view .LVU1416
 4268              	# sieve_extend.c:496:         register counter_t word = wordindex(index) - current_vector_start_wor
 496:sieve_extend.c ****         
 4269              		.loc 1 496 28 is_stmt 0 view .LVU1417
 4270 19ec 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4271              	.LVL180:
 4272              	.L223:
 502:sieve_extend.c ****             index += step;
 4273              		.loc 1 502 13 is_stmt 1 discriminator 1 view .LVU1418
 4274              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4275              		.loc 1 502 31 is_stmt 0 discriminator 1 view .LVU1419
 4276 19ef C442C9F7 		shlx	r15, r11, rsi	# tmp196, tmp197, range_start
 4276      FB
 4277              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4278              		.loc 1 503 19 discriminator 1 view .LVU1420
 4279 19f4 4801D6   		add	rsi, rdx	# range_start, step
 4280              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4281              		.loc 1 502 28 discriminator 1 view .LVU1421
 4282 19f7 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp196
 4282      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4283              		.loc 1 503 13 is_stmt 1 discriminator 1 view .LVU1422
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4284              		.loc 1 504 13 discriminator 1 view .LVU1423
 4285              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccW4ZvF5.s 			page 124


 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4286              		.loc 1 504 20 is_stmt 0 discriminator 1 view .LVU1424
 4287 19fc 4989F6   		mov	r14, rsi	# tmp198, range_start
 4288              	.LVL181:
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4289              		.loc 1 504 20 discriminator 1 view .LVU1425
 4290 19ff 49C1EE06 		shr	r14, 6	# tmp198,
 4291              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4292              		.loc 1 504 18 discriminator 1 view .LVU1426
 4293 1a03 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4294              		.loc 1 505 17 is_stmt 1 discriminator 1 view .LVU1427
 4295              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4296              		.loc 1 505 9 is_stmt 0 discriminator 1 view .LVU1428
 4297 1a06 4983FE03 		cmp	r14, 3	# word,
 4298 1a0a 0F87E000 		ja	.L371	#,
 4298      0000
 502:sieve_extend.c ****             index += step;
 4299              		.loc 1 502 13 is_stmt 1 view .LVU1429
 4300              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4301              		.loc 1 502 31 is_stmt 0 view .LVU1430
 4302 1a10 C442C9F7 		shlx	r15, r11, rsi	# tmp399, tmp197, range_start
 4302      FB
 4303              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4304              		.loc 1 503 19 view .LVU1431
 4305 1a15 4801D6   		add	rsi, rdx	# range_start, step
 4306              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4307              		.loc 1 502 28 view .LVU1432
 4308 1a18 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp399
 4308      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4309              		.loc 1 503 13 is_stmt 1 view .LVU1433
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4310              		.loc 1 504 13 view .LVU1434
 4311              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4312              		.loc 1 504 20 is_stmt 0 view .LVU1435
 4313 1a1d 4989F6   		mov	r14, rsi	# tmp400, range_start
 4314 1a20 49C1EE06 		shr	r14, 6	# tmp400,
 4315              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4316              		.loc 1 504 18 view .LVU1436
 4317 1a24 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4318              		.loc 1 505 17 is_stmt 1 view .LVU1437
 4319              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4320              		.loc 1 505 9 is_stmt 0 view .LVU1438
 4321 1a27 4983FE03 		cmp	r14, 3	# word,
 4322 1a2b 0F87BF00 		ja	.L371	#,
 4322      0000
 502:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 125


 4323              		.loc 1 502 13 is_stmt 1 view .LVU1439
 4324              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4325              		.loc 1 502 31 is_stmt 0 view .LVU1440
 4326 1a31 C442C9F7 		shlx	r15, r11, rsi	# tmp402, tmp197, range_start
 4326      FB
 4327              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4328              		.loc 1 503 19 view .LVU1441
 4329 1a36 4801D6   		add	rsi, rdx	# range_start, step
 4330              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4331              		.loc 1 502 28 view .LVU1442
 4332 1a39 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp402
 4332      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4333              		.loc 1 503 13 is_stmt 1 view .LVU1443
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4334              		.loc 1 504 13 view .LVU1444
 4335              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4336              		.loc 1 504 20 is_stmt 0 view .LVU1445
 4337 1a3e 4989F6   		mov	r14, rsi	# tmp403, range_start
 4338 1a41 49C1EE06 		shr	r14, 6	# tmp403,
 4339              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4340              		.loc 1 504 18 view .LVU1446
 4341 1a45 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4342              		.loc 1 505 17 is_stmt 1 view .LVU1447
 4343              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4344              		.loc 1 505 9 is_stmt 0 view .LVU1448
 4345 1a48 4983FE03 		cmp	r14, 3	# word,
 4346 1a4c 0F879E00 		ja	.L371	#,
 4346      0000
 502:sieve_extend.c ****             index += step;
 4347              		.loc 1 502 13 is_stmt 1 view .LVU1449
 4348              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4349              		.loc 1 502 31 is_stmt 0 view .LVU1450
 4350 1a52 C442C9F7 		shlx	r15, r11, rsi	# tmp405, tmp197, range_start
 4350      FB
 4351              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4352              		.loc 1 503 19 view .LVU1451
 4353 1a57 4801D6   		add	rsi, rdx	# range_start, step
 4354              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4355              		.loc 1 502 28 view .LVU1452
 4356 1a5a 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp405
 4356      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4357              		.loc 1 503 13 is_stmt 1 view .LVU1453
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4358              		.loc 1 504 13 view .LVU1454
 4359              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccW4ZvF5.s 			page 126


 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4360              		.loc 1 504 20 is_stmt 0 view .LVU1455
 4361 1a5f 4989F6   		mov	r14, rsi	# tmp406, range_start
 4362 1a62 49C1EE06 		shr	r14, 6	# tmp406,
 4363              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4364              		.loc 1 504 18 view .LVU1456
 4365 1a66 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4366              		.loc 1 505 17 is_stmt 1 view .LVU1457
 4367              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4368              		.loc 1 505 9 is_stmt 0 view .LVU1458
 4369 1a69 4983FE03 		cmp	r14, 3	# word,
 4370 1a6d 0F877D00 		ja	.L371	#,
 4370      0000
 502:sieve_extend.c ****             index += step;
 4371              		.loc 1 502 13 is_stmt 1 view .LVU1459
 4372              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4373              		.loc 1 502 31 is_stmt 0 view .LVU1460
 4374 1a73 C442C9F7 		shlx	r15, r11, rsi	# tmp408, tmp197, range_start
 4374      FB
 4375              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4376              		.loc 1 503 19 view .LVU1461
 4377 1a78 4801D6   		add	rsi, rdx	# range_start, step
 4378              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4379              		.loc 1 502 28 view .LVU1462
 4380 1a7b 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp408
 4380      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4381              		.loc 1 503 13 is_stmt 1 view .LVU1463
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4382              		.loc 1 504 13 view .LVU1464
 4383              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4384              		.loc 1 504 20 is_stmt 0 view .LVU1465
 4385 1a80 4989F6   		mov	r14, rsi	# tmp409, range_start
 4386 1a83 49C1EE06 		shr	r14, 6	# tmp409,
 4387              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4388              		.loc 1 504 18 view .LVU1466
 4389 1a87 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4390              		.loc 1 505 17 is_stmt 1 view .LVU1467
 4391              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4392              		.loc 1 505 9 is_stmt 0 view .LVU1468
 4393 1a8a 4983FE03 		cmp	r14, 3	# word,
 4394 1a8e 7760     		ja	.L371	#,
 502:sieve_extend.c ****             index += step;
 4395              		.loc 1 502 13 is_stmt 1 view .LVU1469
 4396              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4397              		.loc 1 502 31 is_stmt 0 view .LVU1470
GAS LISTING /tmp/ccW4ZvF5.s 			page 127


 4398 1a90 C442C9F7 		shlx	r15, r11, rsi	# tmp411, tmp197, range_start
 4398      FB
 4399              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4400              		.loc 1 503 19 view .LVU1471
 4401 1a95 4801D6   		add	rsi, rdx	# range_start, step
 4402              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4403              		.loc 1 502 28 view .LVU1472
 4404 1a98 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp411
 4404      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4405              		.loc 1 503 13 is_stmt 1 view .LVU1473
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4406              		.loc 1 504 13 view .LVU1474
 4407              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4408              		.loc 1 504 20 is_stmt 0 view .LVU1475
 4409 1a9d 4989F6   		mov	r14, rsi	# tmp412, range_start
 4410 1aa0 49C1EE06 		shr	r14, 6	# tmp412,
 4411              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4412              		.loc 1 504 18 view .LVU1476
 4413 1aa4 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4414              		.loc 1 505 17 is_stmt 1 view .LVU1477
 4415              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4416              		.loc 1 505 9 is_stmt 0 view .LVU1478
 4417 1aa7 4983FE03 		cmp	r14, 3	# word,
 4418 1aab 7743     		ja	.L371	#,
 502:sieve_extend.c ****             index += step;
 4419              		.loc 1 502 13 is_stmt 1 view .LVU1479
 4420              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4421              		.loc 1 502 31 is_stmt 0 view .LVU1480
 4422 1aad C442C9F7 		shlx	r15, r11, rsi	# tmp414, tmp197, range_start
 4422      FB
 4423              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4424              		.loc 1 503 19 view .LVU1481
 4425 1ab2 4801D6   		add	rsi, rdx	# range_start, step
 4426              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4427              		.loc 1 502 28 view .LVU1482
 4428 1ab5 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp414
 4428      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4429              		.loc 1 503 13 is_stmt 1 view .LVU1483
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4430              		.loc 1 504 13 view .LVU1484
 4431              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4432              		.loc 1 504 20 is_stmt 0 view .LVU1485
 4433 1aba 4989F6   		mov	r14, rsi	# tmp415, range_start
 4434 1abd 49C1EE06 		shr	r14, 6	# tmp415,
 4435              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccW4ZvF5.s 			page 128


 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4436              		.loc 1 504 18 view .LVU1486
 4437 1ac1 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 505:sieve_extend.c ****         
 4438              		.loc 1 505 17 is_stmt 1 view .LVU1487
 4439              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4440              		.loc 1 505 9 is_stmt 0 view .LVU1488
 4441 1ac4 4983FE03 		cmp	r14, 3	# word,
 4442 1ac8 7726     		ja	.L371	#,
 502:sieve_extend.c ****             index += step;
 4443              		.loc 1 502 13 is_stmt 1 view .LVU1489
 4444              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4445              		.loc 1 502 31 is_stmt 0 view .LVU1490
 4446 1aca C442C9F7 		shlx	r15, r11, rsi	# tmp417, tmp197, range_start
 4446      FB
 4447              	# sieve_extend.c:503:             index += step;
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4448              		.loc 1 503 19 view .LVU1491
 4449 1acf 4801D6   		add	rsi, rdx	# range_start, step
 4450              	# sieve_extend.c:502:             quadmask[word] |= markmask(index);
 502:sieve_extend.c ****             index += step;
 4451              		.loc 1 502 28 view .LVU1492
 4452 1ad2 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp417
 4452      20
 503:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4453              		.loc 1 503 13 is_stmt 1 view .LVU1493
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4454              		.loc 1 504 13 view .LVU1494
 4455              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4456              		.loc 1 504 20 is_stmt 0 view .LVU1495
 4457 1ad7 4989F6   		mov	r14, rsi	# tmp418, range_start
 4458 1ada 49C1EE06 		shr	r14, 6	# tmp418,
 4459              	.LVL182:
 4460              	# sieve_extend.c:504:             word = wordindex(index) - current_vector_start_word;
 504:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4461              		.loc 1 504 18 view .LVU1496
 4462 1ade 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4463              	.LVL183:
 505:sieve_extend.c ****         
 4464              		.loc 1 505 17 is_stmt 1 view .LVU1497
 4465              	# sieve_extend.c:505:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 505:sieve_extend.c ****         
 4466              		.loc 1 505 9 is_stmt 0 view .LVU1498
 4467 1ae1 4983FE03 		cmp	r14, 3	# word,
 4468 1ae5 0F8604FF 		jbe	.L223	#,
 4468      FFFF
 4469              	.LVL184:
 4470 1aeb 0F1F4400 		.p2align 4
 4470      00
 4471              		.p2align 3
 4472              	.L371:
 508:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 4473              		.loc 1 508 9 is_stmt 1 view .LVU1499
 511:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 129


 4474              		.loc 1 511 9 view .LVU1500
 4475 1af0 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.56_36, quadmask
 4475      2420
 4476              	.LVL185:
 4477              	.LBB339:
 435:sieve_extend.c **** 
 4478              		.loc 1 435 20 view .LVU1501
 4479              	.LBB337:
 438:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 4480              		.loc 1 438 5 view .LVU1502
 439:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 4481              		.loc 1 439 5 view .LVU1503
 440:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 4482              		.loc 1 440 5 view .LVU1504
 441:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 4483              		.loc 1 441 5 view .LVU1505
 442:sieve_extend.c **** 
 4484              		.loc 1 442 5 view .LVU1506
 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4485              		.loc 1 444 5 view .LVU1507
 4486              	# sieve_extend.c:444:     if (current_vector+step_4 <= range_stop_vector) {
 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4487              		.loc 1 444 23 is_stmt 0 view .LVU1508
 4488 1af6 4E8D3428 		lea	r14, [rax+r13]	# current_vector,
 4489              	# sieve_extend.c:444:     if (current_vector+step_4 <= range_stop_vector) {
 444:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4490              		.loc 1 444 8 view .LVU1509
 4491 1afa 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4492 1afd 0F820501 		jb	.L224	#,
 4492      0000
 4493              	.LBB335:
 445:sieve_extend.c ****         //#pragma GCC unroll 16
 4494              		.loc 1 445 9 is_stmt 1 view .LVU1510
 4495              	.LVL186:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4496              		.loc 1 448 15 view .LVU1511
 4497              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4498              		.loc 1 448 9 is_stmt 0 view .LVU1512
 4499 1b03 4839F8   		cmp	rax, rdi	# current_vector, iftmp.57_93
 4500 1b06 0F87FC00 		ja	.L224	#,
 4500      0000
 4501 1b0c 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# bitarray_word, %sfp
 4501      18
 4502              	.LVL187:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4503              		.loc 1 448 9 view .LVU1513
 4504 1b11 48C1E005 		sal	rax, 5	# tmp200,
 4505              	.LVL188:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4506              		.loc 1 448 9 view .LVU1514
 4507 1b15 4801C1   		add	rcx, rax	# ivtmp.287, tmp200
 4508              	.L225:
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4509              		.loc 1 449 13 is_stmt 1 view .LVU1515
 4510              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 130


 4511              		.loc 1 449 52 is_stmt 0 view .LVU1516
 4512 1b18 C5FDEB09 		vpor	ymm1, ymm0, YMMWORD PTR [rcx]	# tmp201, quadmask.56_36, MEM[base: _204, offset: 0B]
 4513              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4514              		.loc 1 448 66 view .LVU1517
 4515 1b1c 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4516              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4517              		.loc 1 449 52 view .LVU1518
 4518 1b1f C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: _204, offset: 0B], tmp201
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4519              		.loc 1 450 13 is_stmt 1 view .LVU1519
 4520              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4521              		.loc 1 450 52 is_stmt 0 view .LVU1520
 4522 1b23 C4A17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+r9]	# tmp202, quadmask.56_36, MEM[base: _204, index: _207, offse
 4522      1C09
 4523 1b29 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm3	# MEM[base: _204, index: _207, offset: 0B], tmp202
 4523      1C09
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4524              		.loc 1 451 13 is_stmt 1 view .LVU1521
 4525              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4526              		.loc 1 451 52 is_stmt 0 view .LVU1522
 4527 1b2f C4A17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [rcx+r12]	# tmp203, quadmask.56_36, MEM[base: _204, index: _211, offs
 4527      2421
 4528 1b35 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm4	# MEM[base: _204, index: _211, offset: 0B], tmp203
 4528      2421
 452:sieve_extend.c ****         }
 4529              		.loc 1 452 13 is_stmt 1 view .LVU1523
 4530              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 4531              		.loc 1 452 52 is_stmt 0 view .LVU1524
 4532 1b3b C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rcx+rbx]	# tmp204, quadmask.56_36, MEM[base: _204, index: _215, offs
 4532      19
 4533 1b40 C5FD7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm5	# MEM[base: _204, index: _215, offset: 0B], tmp204
 4533      19
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4534              		.loc 1 448 51 is_stmt 1 view .LVU1525
 4535              	.LVL189:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4536              		.loc 1 448 15 view .LVU1526
 4537 1b45 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4538              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4539              		.loc 1 448 9 is_stmt 0 view .LVU1527
 4540 1b48 4939FE   		cmp	r14, rdi	# current_vector, iftmp.57_93
 4541 1b4b 0F87B700 		ja	.L224	#,
 4541      0000
 4542              	.LVL190:
 4543              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4544              		.loc 1 449 52 view .LVU1528
 4545 1b51 C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp241, quadmask.56_36, MEM[base: _204, offset: 0B]
 4546 1b55 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4547              		.loc 1 449 13 is_stmt 1 view .LVU1529
GAS LISTING /tmp/ccW4ZvF5.s 			page 131


 4548              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4549              		.loc 1 449 52 is_stmt 0 view .LVU1530
 4550 1b59 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _204, offset: 0B], tmp241
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4551              		.loc 1 450 13 is_stmt 1 view .LVU1531
 4552              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4553              		.loc 1 448 66 is_stmt 0 view .LVU1532
 4554 1b5d 4C89F8   		mov	rax, r15	# current_vector, current_vector
 4555              	.LVL191:
 4556              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4557              		.loc 1 450 52 view .LVU1533
 4558 1b60 C4A17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [rcx+r9]	# tmp242, quadmask.56_36, MEM[base: _204, index: _207, offse
 4558      3C09
 4559 1b66 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm7	# MEM[base: _204, index: _207, offset: 0B], tmp242
 4559      3C09
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4560              		.loc 1 451 13 is_stmt 1 view .LVU1534
 4561              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4562              		.loc 1 451 52 is_stmt 0 view .LVU1535
 4563 1b6c C4217DEB 		vpor	ymm8, ymm0, YMMWORD PTR [rcx+r12]	# tmp243, quadmask.56_36, MEM[base: _204, index: _211, offs
 4563      0421
 4564 1b72 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm8	# MEM[base: _204, index: _211, offset: 0B], tmp243
 4564      0421
 452:sieve_extend.c ****         }
 4565              		.loc 1 452 13 is_stmt 1 view .LVU1536
 4566              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 4567              		.loc 1 452 52 is_stmt 0 view .LVU1537
 4568 1b78 C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rcx+rbx]	# tmp244, quadmask.56_36, MEM[base: _204, index: _215, offs
 4568      19
 4569 1b7d C57D7F0C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm9	# MEM[base: _204, index: _215, offset: 0B], tmp244
 4569      19
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4570              		.loc 1 448 51 is_stmt 1 view .LVU1538
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4571              		.loc 1 448 15 view .LVU1539
 4572 1b82 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4573              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4574              		.loc 1 448 9 is_stmt 0 view .LVU1540
 4575 1b85 4939FF   		cmp	r15, rdi	# current_vector, iftmp.57_93
 4576 1b88 777E     		ja	.L224	#,
 4577              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4578              		.loc 1 449 52 view .LVU1541
 4579 1b8a C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp389, quadmask.56_36, MEM[base: _204, offset: 0B]
 4580 1b8e 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4581              	.LVL192:
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4582              		.loc 1 449 13 is_stmt 1 view .LVU1542
 4583              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4584              		.loc 1 449 52 is_stmt 0 view .LVU1543
GAS LISTING /tmp/ccW4ZvF5.s 			page 132


 4585 1b92 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _204, offset: 0B], tmp389
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4586              		.loc 1 450 13 is_stmt 1 view .LVU1544
 4587              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4588              		.loc 1 448 66 is_stmt 0 view .LVU1545
 4589 1b96 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4590              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4591              		.loc 1 450 52 view .LVU1546
 4592 1b99 C4217DEB 		vpor	ymm11, ymm0, YMMWORD PTR [rcx+r9]	# tmp390, quadmask.56_36, MEM[base: _204, index: _207, offs
 4592      1C09
 4593 1b9f C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm11	# MEM[base: _204, index: _207, offset: 0B], tmp390
 4593      1C09
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4594              		.loc 1 451 13 is_stmt 1 view .LVU1547
 4595              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4596              		.loc 1 451 52 is_stmt 0 view .LVU1548
 4597 1ba5 C4217DEB 		vpor	ymm12, ymm0, YMMWORD PTR [rcx+r12]	# tmp391, quadmask.56_36, MEM[base: _204, index: _211, off
 4597      2421
 4598 1bab C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm12	# MEM[base: _204, index: _211, offset: 0B], tmp391
 4598      2421
 452:sieve_extend.c ****         }
 4599              		.loc 1 452 13 is_stmt 1 view .LVU1549
 4600              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 4601              		.loc 1 452 52 is_stmt 0 view .LVU1550
 4602 1bb1 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rcx+rbx]	# tmp392, quadmask.56_36, MEM[base: _204, index: _215, off
 4602      19
 4603 1bb6 C57D7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm13	# MEM[base: _204, index: _215, offset: 0B], tmp392
 4603      19
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4604              		.loc 1 448 51 is_stmt 1 view .LVU1551
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4605              		.loc 1 448 15 view .LVU1552
 4606 1bbb 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4607              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4608              		.loc 1 448 9 is_stmt 0 view .LVU1553
 4609 1bbe 4939FE   		cmp	r14, rdi	# current_vector, iftmp.57_93
 4610 1bc1 7745     		ja	.L224	#,
 4611              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4612              		.loc 1 449 52 view .LVU1554
 4613 1bc3 C57DEB31 		vpor	ymm14, ymm0, YMMWORD PTR [rcx]	# tmp395, quadmask.56_36, MEM[base: _204, offset: 0B]
 4614 1bc7 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4615              		.loc 1 449 13 is_stmt 1 view .LVU1555
 4616              	# sieve_extend.c:449:             bitarray_vector[current_vector       ] |= mask;
 449:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 4617              		.loc 1 449 52 is_stmt 0 view .LVU1556
 4618 1bcb C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: _204, offset: 0B], tmp395
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4619              		.loc 1 450 13 is_stmt 1 view .LVU1557
 4620              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 133


 4621              		.loc 1 448 66 is_stmt 0 view .LVU1558
 4622 1bcf 4C89F8   		mov	rax, r15	# current_vector, current_vector
 4623              	# sieve_extend.c:450:             bitarray_vector[current_vector+step  ] |= mask;
 450:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 4624              		.loc 1 450 52 view .LVU1559
 4625 1bd2 C4217DEB 		vpor	ymm15, ymm0, YMMWORD PTR [rcx+r9]	# tmp396, quadmask.56_36, MEM[base: _204, index: _207, offs
 4625      3C09
 4626 1bd8 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm15	# MEM[base: _204, index: _207, offset: 0B], tmp396
 4626      3C09
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4627              		.loc 1 451 13 is_stmt 1 view .LVU1560
 4628              	# sieve_extend.c:451:             bitarray_vector[current_vector+step_2] |= mask;
 451:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 4629              		.loc 1 451 52 is_stmt 0 view .LVU1561
 4630 1bde C4A17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [rcx+r12]	# tmp397, quadmask.56_36, MEM[base: _204, index: _211, offs
 4630      0C21
 4631 1be4 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm1	# MEM[base: _204, index: _211, offset: 0B], tmp397
 4631      0C21
 452:sieve_extend.c ****         }
 4632              		.loc 1 452 13 is_stmt 1 view .LVU1562
 4633              	# sieve_extend.c:452:             bitarray_vector[current_vector+step_3] |= mask;
 452:sieve_extend.c ****         }
 4634              		.loc 1 452 52 is_stmt 0 view .LVU1563
 4635 1bea C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+rbx]	# tmp398, quadmask.56_36, MEM[base: _204, index: _215, offs
 4635      19
 4636 1bef C5FD7F1C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm3	# MEM[base: _204, index: _215, offset: 0B], tmp398
 4636      19
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4637              		.loc 1 448 51 is_stmt 1 view .LVU1564
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4638              		.loc 1 448 15 view .LVU1565
 4639 1bf4 4C01D1   		add	rcx, r10	# ivtmp.287, _200
 4640              	# sieve_extend.c:448:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4641              		.loc 1 448 9 is_stmt 0 view .LVU1566
 4642 1bf7 4939FF   		cmp	r15, rdi	# current_vector, iftmp.57_93
 4643 1bfa 770C     		ja	.L224	#,
 4644              	.LVL193:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4645              		.loc 1 448 9 view .LVU1567
 4646 1bfc 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4647              	.LVL194:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4648              		.loc 1 448 9 view .LVU1568
 4649 1c00 E913FFFF 		jmp	.L225	#
 4649      FF
 4650              	.LVL195:
 4651              		.p2align 4,,7
 4652 1c05 0F1F00   		.p2align 3
 4653              	.L224:
 448:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
 4654              		.loc 1 448 9 view .LVU1569
 4655              	.LBE335:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4656              		.loc 1 458 11 is_stmt 1 view .LVU1570
 4657              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 134


 4658              		.loc 1 458 5 is_stmt 0 view .LVU1571
 4659 1c08 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
 4660 1c0b 0F82BF00 		jb	.L226	#,
 4660      0000
 4661 1c11 4989C7   		mov	r15, rax	# tmp205, current_vector
 4662 1c14 49C1E705 		sal	r15, 5	# tmp205,
 4663 1c18 4C037C24 		add	r15, QWORD PTR 24[rsp]	# ivtmp.281, %sfp
 4663      18
 4664              	.L227:
 459:sieve_extend.c ****     }
 4665              		.loc 1 459 9 is_stmt 1 view .LVU1572
 4666              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4667              		.loc 1 458 63 is_stmt 0 view .LVU1573
 4668 1c1d 4C8D3410 		lea	r14, [rax+rdx]	# current_vector,
 4669              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4670              		.loc 1 459 41 view .LVU1574
 4671 1c21 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r15]	# tmp206, quadmask.56_36, MEM[base: _196, offset: 0B]
 4671      27
 4672              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4673              		.loc 1 458 5 view .LVU1575
 4674 1c26 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4675 1c29 4B8D0C0F 		lea	rcx, [r15+r9]	# ivtmp.281,
 4676              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4677              		.loc 1 459 41 view .LVU1576
 4678 1c2d C4C17D7F 		vmovdqa	YMMWORD PTR [r15], ymm4	# MEM[base: _196, offset: 0B], tmp206
 4678      27
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4679              		.loc 1 458 48 is_stmt 1 view .LVU1577
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4680              		.loc 1 458 11 view .LVU1578
 4681              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4682              		.loc 1 458 5 is_stmt 0 view .LVU1579
 4683 1c32 0F829800 		jb	.L226	#,
 4683      0000
 459:sieve_extend.c ****     }
 4684              		.loc 1 459 9 is_stmt 1 view .LVU1580
 4685              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4686              		.loc 1 459 41 is_stmt 0 view .LVU1581
 4687 1c38 C5FDEB29 		vpor	ymm5, ymm0, YMMWORD PTR [rcx]	# tmp369, quadmask.56_36, MEM[base: _196, offset: 0B]
 4688              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4689              		.loc 1 458 63 view .LVU1582
 4690 1c3c 4901D6   		add	r14, rdx	# current_vector, step
 4691              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4692              		.loc 1 459 41 view .LVU1583
 4693 1c3f C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: _196, offset: 0B], tmp369
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4694              		.loc 1 458 48 is_stmt 1 view .LVU1584
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4695              		.loc 1 458 11 view .LVU1585
GAS LISTING /tmp/ccW4ZvF5.s 			page 135


 4696 1c43 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4697              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4698              		.loc 1 458 5 is_stmt 0 view .LVU1586
 4699 1c46 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4700 1c49 0F828100 		jb	.L226	#,
 4700      0000
 459:sieve_extend.c ****     }
 4701              		.loc 1 459 9 is_stmt 1 view .LVU1587
 4702              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4703              		.loc 1 459 41 is_stmt 0 view .LVU1588
 4704 1c4f C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp372, quadmask.56_36, MEM[base: _196, offset: 0B]
 4705              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4706              		.loc 1 458 63 view .LVU1589
 4707 1c53 4901D6   		add	r14, rdx	# current_vector, step
 4708              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4709              		.loc 1 459 41 view .LVU1590
 4710 1c56 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _196, offset: 0B], tmp372
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4711              		.loc 1 458 48 is_stmt 1 view .LVU1591
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4712              		.loc 1 458 11 view .LVU1592
 4713 1c5a 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4714              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4715              		.loc 1 458 5 is_stmt 0 view .LVU1593
 4716 1c5d 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4717 1c60 726E     		jb	.L226	#,
 459:sieve_extend.c ****     }
 4718              		.loc 1 459 9 is_stmt 1 view .LVU1594
 4719              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4720              		.loc 1 459 41 is_stmt 0 view .LVU1595
 4721 1c62 C5FDEB39 		vpor	ymm7, ymm0, YMMWORD PTR [rcx]	# tmp375, quadmask.56_36, MEM[base: _196, offset: 0B]
 4722              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4723              		.loc 1 458 63 view .LVU1596
 4724 1c66 4901D6   		add	r14, rdx	# current_vector, step
 4725              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4726              		.loc 1 459 41 view .LVU1597
 4727 1c69 C5FD7F39 		vmovdqa	YMMWORD PTR [rcx], ymm7	# MEM[base: _196, offset: 0B], tmp375
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4728              		.loc 1 458 48 is_stmt 1 view .LVU1598
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4729              		.loc 1 458 11 view .LVU1599
 4730 1c6d 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4731              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4732              		.loc 1 458 5 is_stmt 0 view .LVU1600
 4733 1c70 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4734 1c73 725B     		jb	.L226	#,
 459:sieve_extend.c ****     }
 4735              		.loc 1 459 9 is_stmt 1 view .LVU1601
GAS LISTING /tmp/ccW4ZvF5.s 			page 136


 4736              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4737              		.loc 1 459 41 is_stmt 0 view .LVU1602
 4738 1c75 C57DEB01 		vpor	ymm8, ymm0, YMMWORD PTR [rcx]	# tmp378, quadmask.56_36, MEM[base: _196, offset: 0B]
 4739              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4740              		.loc 1 458 63 view .LVU1603
 4741 1c79 4901D6   		add	r14, rdx	# current_vector, step
 4742              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4743              		.loc 1 459 41 view .LVU1604
 4744 1c7c C57D7F01 		vmovdqa	YMMWORD PTR [rcx], ymm8	# MEM[base: _196, offset: 0B], tmp378
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4745              		.loc 1 458 48 is_stmt 1 view .LVU1605
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4746              		.loc 1 458 11 view .LVU1606
 4747 1c80 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4748              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4749              		.loc 1 458 5 is_stmt 0 view .LVU1607
 4750 1c83 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4751 1c86 7248     		jb	.L226	#,
 459:sieve_extend.c ****     }
 4752              		.loc 1 459 9 is_stmt 1 view .LVU1608
 4753              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4754              		.loc 1 459 41 is_stmt 0 view .LVU1609
 4755 1c88 C57DEB09 		vpor	ymm9, ymm0, YMMWORD PTR [rcx]	# tmp381, quadmask.56_36, MEM[base: _196, offset: 0B]
 4756              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4757              		.loc 1 458 63 view .LVU1610
 4758 1c8c 4901D6   		add	r14, rdx	# current_vector, step
 4759              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4760              		.loc 1 459 41 view .LVU1611
 4761 1c8f C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: _196, offset: 0B], tmp381
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4762              		.loc 1 458 48 is_stmt 1 view .LVU1612
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4763              		.loc 1 458 11 view .LVU1613
 4764 1c93 4C01C9   		add	rcx, r9	# ivtmp.281, _207
 4765              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4766              		.loc 1 458 5 is_stmt 0 view .LVU1614
 4767 1c96 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4768 1c99 7235     		jb	.L226	#,
 459:sieve_extend.c ****     }
 4769              		.loc 1 459 9 is_stmt 1 view .LVU1615
 4770              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4771              		.loc 1 458 63 is_stmt 0 view .LVU1616
 4772 1c9b 4901D6   		add	r14, rdx	# current_vector, step
 4773              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4774              		.loc 1 459 41 view .LVU1617
 4775 1c9e C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp384, quadmask.56_36, MEM[base: _196, offset: 0B]
 4776              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 137


 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4777              		.loc 1 458 5 view .LVU1618
 4778 1ca2 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4779 1ca5 4E8D3C09 		lea	r15, [rcx+r9]	# ivtmp.281,
 4780              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4781              		.loc 1 459 41 view .LVU1619
 4782 1ca9 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _196, offset: 0B], tmp384
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4783              		.loc 1 458 48 is_stmt 1 view .LVU1620
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4784              		.loc 1 458 11 view .LVU1621
 4785              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4786              		.loc 1 458 5 is_stmt 0 view .LVU1622
 4787 1cad 7221     		jb	.L226	#,
 459:sieve_extend.c ****     }
 4788              		.loc 1 459 9 is_stmt 1 view .LVU1623
 4789              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4790              		.loc 1 459 41 is_stmt 0 view .LVU1624
 4791 1caf C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r15]	# tmp387, quadmask.56_36, MEM[base: _196, offset: 0B]
 4791      1F
 4792              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4793              		.loc 1 458 63 view .LVU1625
 4794 1cb4 498D0416 		lea	rax, [r14+rdx]	# current_vector,
 4795              	# sieve_extend.c:459:         bitarray_vector[current_vector] |= mask;
 459:sieve_extend.c ****     }
 4796              		.loc 1 459 41 view .LVU1626
 4797 1cb8 C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm11	# MEM[base: _196, offset: 0B], tmp387
 4797      1F
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4798              		.loc 1 458 48 is_stmt 1 view .LVU1627
 4799              	.LVL196:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4800              		.loc 1 458 11 view .LVU1628
 4801 1cbd 4D01CF   		add	r15, r9	# ivtmp.281, _207
 4802              	# sieve_extend.c:458:     for(; current_vector <= range_stop_vector; current_vector += step) {
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4803              		.loc 1 458 5 is_stmt 0 view .LVU1629
 4804 1cc0 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
 4805 1cc3 0F8354FF 		jnb	.L227	#,
 4805      FFFF
 4806              	.LVL197:
 4807 1cc9 0F1F8000 		.p2align 4
 4807      000000
 4808              		.p2align 3
 4809              	.L226:
 458:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 4810              		.loc 1 458 5 view .LVU1630
 4811              	.LBE337:
 4812              	.LBE339:
 4813              	.LBE340:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4814              		.loc 1 493 41 is_stmt 1 view .LVU1631
 4815              	# sieve_extend.c:493:     for (counter_t index = range_start; index < range_stop_unique;) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 138


 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4816              		.loc 1 493 5 is_stmt 0 view .LVU1632
 4817 1cd0 48397424 		cmp	QWORD PTR 16[rsp], rsi	# %sfp, range_start
 4817      10
 4818 1cd5 0F87F5FC 		ja	.L228	#,
 4818      FFFF
 4819 1cdb E981FCFF 		jmp	.L396	#
 4819      FF
 4820              	.LVL198:
 4821              	.L218:
 493:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4822              		.loc 1 493 5 view .LVU1633
 4823              	.LBE341:
 4824              	.LBB342:
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4825              		.loc 1 476 49 is_stmt 1 view .LVU1634
 4826              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4827              		.loc 1 476 13 is_stmt 0 view .LVU1635
 4828 1ce0 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4829              		.p2align 4,,3
 4830 1ce3 0F877BFC 		ja	.L216	#,
 4830      FFFF
 4831              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4832              		.loc 1 477 52 view .LVU1636
 4833 1ce9 41BE0100 		mov	r14d, 1	# tmp179,
 4833      0000
 4834              	.LVL199:
 4835              	.L221:
 477:sieve_extend.c ****             return;                 
 4836              		.loc 1 477 17 is_stmt 1 discriminator 3 view .LVU1637
 4837              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4838              		.loc 1 477 49 is_stmt 0 discriminator 3 view .LVU1638
 4839 1cef 4989F7   		mov	r15, rsi	# tmp175, range_start
 4840              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4841              		.loc 1 477 52 discriminator 3 view .LVU1639
 4842 1cf2 C442C9F7 		shlx	r9, r14, rsi	# tmp178, tmp179, range_start
 4842      CE
 4843              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4844              		.loc 1 477 49 discriminator 3 view .LVU1640
 4845 1cf7 49C1EF06 		shr	r15, 6	# tmp175,
 4846              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4847              		.loc 1 476 76 discriminator 3 view .LVU1641
 4848 1cfb 4801D6   		add	rsi, rdx	# range_start, step
 4849              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4850              		.loc 1 477 49 discriminator 3 view .LVU1642
 4851 1cfe 4E090CFF 		or	QWORD PTR [rdi+r15*8], r9	# *_14, tmp178
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4852              		.loc 1 476 70 is_stmt 1 discriminator 3 view .LVU1643
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4853              		.loc 1 476 49 discriminator 3 view .LVU1644
GAS LISTING /tmp/ccW4ZvF5.s 			page 139


 4854              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4855              		.loc 1 476 13 is_stmt 0 discriminator 3 view .LVU1645
 4856 1d02 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4857 1d05 0F8259FC 		jb	.L216	#,
 4857      FFFF
 477:sieve_extend.c ****             return;                 
 4858              		.loc 1 477 17 is_stmt 1 view .LVU1646
 4859              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4860              		.loc 1 477 49 is_stmt 0 view .LVU1647
 4861 1d0b 4989F4   		mov	r12, rsi	# tmp294, range_start
 4862              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4863              		.loc 1 477 52 view .LVU1648
 4864 1d0e C442C9F7 		shlx	r13, r14, rsi	# tmp297, tmp179, range_start
 4864      EE
 4865              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4866              		.loc 1 477 49 view .LVU1649
 4867 1d13 49C1EC06 		shr	r12, 6	# tmp294,
 4868              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4869              		.loc 1 476 76 view .LVU1650
 4870 1d17 4801D6   		add	rsi, rdx	# range_start, step
 4871              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4872              		.loc 1 477 49 view .LVU1651
 4873 1d1a 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp297
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4874              		.loc 1 476 70 is_stmt 1 view .LVU1652
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4875              		.loc 1 476 49 view .LVU1653
 4876              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4877              		.loc 1 476 13 is_stmt 0 view .LVU1654
 4878 1d1e 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4879 1d21 0F823DFC 		jb	.L216	#,
 4879      FFFF
 477:sieve_extend.c ****             return;                 
 4880              		.loc 1 477 17 is_stmt 1 view .LVU1655
 4881              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4882              		.loc 1 477 49 is_stmt 0 view .LVU1656
 4883 1d27 4889F0   		mov	rax, rsi	# tmp299, range_start
 4884              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4885              		.loc 1 477 52 view .LVU1657
 4886 1d2a C4C2C9F7 		shlx	rbx, r14, rsi	# tmp302, tmp179, range_start
 4886      DE
 4887              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4888              		.loc 1 477 49 view .LVU1658
 4889 1d2f 48C1E806 		shr	rax, 6	# tmp299,
 4890              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4891              		.loc 1 476 76 view .LVU1659
GAS LISTING /tmp/ccW4ZvF5.s 			page 140


 4892 1d33 4801D6   		add	rsi, rdx	# range_start, step
 4893              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4894              		.loc 1 477 49 view .LVU1660
 4895 1d36 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_14, tmp302
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4896              		.loc 1 476 70 is_stmt 1 view .LVU1661
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4897              		.loc 1 476 49 view .LVU1662
 4898              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4899              		.loc 1 476 13 is_stmt 0 view .LVU1663
 4900 1d3a 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4901 1d3d 0F8221FC 		jb	.L216	#,
 4901      FFFF
 477:sieve_extend.c ****             return;                 
 4902              		.loc 1 477 17 is_stmt 1 view .LVU1664
 4903              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4904              		.loc 1 477 49 is_stmt 0 view .LVU1665
 4905 1d43 4989F0   		mov	r8, rsi	# tmp304, range_start
 4906              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4907              		.loc 1 477 52 view .LVU1666
 4908 1d46 C442C9F7 		shlx	r10, r14, rsi	# tmp307, tmp179, range_start
 4908      D6
 4909              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4910              		.loc 1 477 49 view .LVU1667
 4911 1d4b 49C1E806 		shr	r8, 6	# tmp304,
 4912              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4913              		.loc 1 476 76 view .LVU1668
 4914 1d4f 4801D6   		add	rsi, rdx	# range_start, step
 4915              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4916              		.loc 1 477 49 view .LVU1669
 4917 1d52 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp307
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4918              		.loc 1 476 70 is_stmt 1 view .LVU1670
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4919              		.loc 1 476 49 view .LVU1671
 4920              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4921              		.loc 1 476 13 is_stmt 0 view .LVU1672
 4922 1d56 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4923 1d59 0F8205FC 		jb	.L216	#,
 4923      FFFF
 477:sieve_extend.c ****             return;                 
 4924              		.loc 1 477 17 is_stmt 1 view .LVU1673
 4925              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4926              		.loc 1 477 49 is_stmt 0 view .LVU1674
 4927 1d5f 4989F3   		mov	r11, rsi	# tmp309, range_start
 4928              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4929              		.loc 1 477 52 view .LVU1675
GAS LISTING /tmp/ccW4ZvF5.s 			page 141


 4930 1d62 C442C9F7 		shlx	r15, r14, rsi	# tmp312, tmp179, range_start
 4930      FE
 4931              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4932              		.loc 1 477 49 view .LVU1676
 4933 1d67 49C1EB06 		shr	r11, 6	# tmp309,
 4934              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4935              		.loc 1 476 76 view .LVU1677
 4936 1d6b 4801D6   		add	rsi, rdx	# range_start, step
 4937              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4938              		.loc 1 477 49 view .LVU1678
 4939 1d6e 4E093CDF 		or	QWORD PTR [rdi+r11*8], r15	# *_14, tmp312
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4940              		.loc 1 476 70 is_stmt 1 view .LVU1679
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4941              		.loc 1 476 49 view .LVU1680
 4942              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4943              		.loc 1 476 13 is_stmt 0 view .LVU1681
 4944 1d72 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4945 1d75 0F82E9FB 		jb	.L216	#,
 4945      FFFF
 477:sieve_extend.c ****             return;                 
 4946              		.loc 1 477 17 is_stmt 1 view .LVU1682
 4947              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4948              		.loc 1 477 49 is_stmt 0 view .LVU1683
 4949 1d7b 4989F4   		mov	r12, rsi	# tmp314, range_start
 4950              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4951              		.loc 1 477 52 view .LVU1684
 4952 1d7e C442C9F7 		shlx	r9, r14, rsi	# tmp317, tmp179, range_start
 4952      CE
 4953              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4954              		.loc 1 477 49 view .LVU1685
 4955 1d83 49C1EC06 		shr	r12, 6	# tmp314,
 4956              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4957              		.loc 1 476 76 view .LVU1686
 4958 1d87 4801D6   		add	rsi, rdx	# range_start, step
 4959              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4960              		.loc 1 477 49 view .LVU1687
 4961 1d8a 4E090CE7 		or	QWORD PTR [rdi+r12*8], r9	# *_14, tmp317
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4962              		.loc 1 476 70 is_stmt 1 view .LVU1688
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4963              		.loc 1 476 49 view .LVU1689
 4964              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4965              		.loc 1 476 13 is_stmt 0 view .LVU1690
 4966 1d8e 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4967 1d91 0F82CDFB 		jb	.L216	#,
 4967      FFFF
GAS LISTING /tmp/ccW4ZvF5.s 			page 142


 477:sieve_extend.c ****             return;                 
 4968              		.loc 1 477 17 is_stmt 1 view .LVU1691
 4969              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4970              		.loc 1 477 49 is_stmt 0 view .LVU1692
 4971 1d97 4989F5   		mov	r13, rsi	# tmp319, range_start
 4972              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4973              		.loc 1 477 52 view .LVU1693
 4974 1d9a C4C2C9F7 		shlx	rax, r14, rsi	# tmp322, tmp179, range_start
 4974      C6
 4975              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4976              		.loc 1 477 49 view .LVU1694
 4977 1d9f 49C1ED06 		shr	r13, 6	# tmp319,
 4978              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4979              		.loc 1 476 76 view .LVU1695
 4980 1da3 4801D6   		add	rsi, rdx	# range_start, step
 4981              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4982              		.loc 1 477 49 view .LVU1696
 4983 1da6 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp322
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4984              		.loc 1 476 70 is_stmt 1 view .LVU1697
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4985              		.loc 1 476 49 view .LVU1698
 4986              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4987              		.loc 1 476 13 is_stmt 0 view .LVU1699
 4988 1daa 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4989 1dad 0F82B1FB 		jb	.L216	#,
 4989      FFFF
 477:sieve_extend.c ****             return;                 
 4990              		.loc 1 477 17 is_stmt 1 view .LVU1700
 4991              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4992              		.loc 1 477 49 is_stmt 0 view .LVU1701
 4993 1db3 4889F3   		mov	rbx, rsi	# tmp324, range_start
 4994              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4995              		.loc 1 477 52 view .LVU1702
 4996 1db6 C442C9F7 		shlx	r8, r14, rsi	# tmp327, tmp179, range_start
 4996      C6
 4997              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 4998              		.loc 1 477 49 view .LVU1703
 4999 1dbb 48C1EB06 		shr	rbx, 6	# tmp324,
 5000              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5001              		.loc 1 476 76 view .LVU1704
 5002 1dbf 4801D6   		add	rsi, rdx	# range_start, step
 5003              	# sieve_extend.c:477:                 bitarray_word[wordindex(index)] |= markmask(index);
 477:sieve_extend.c ****             return;                 
 5004              		.loc 1 477 49 view .LVU1705
 5005 1dc2 4C0904DF 		or	QWORD PTR [rdi+rbx*8], r8	# *_14, tmp327
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccW4ZvF5.s 			page 143


 5006              		.loc 1 476 70 is_stmt 1 view .LVU1706
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5007              		.loc 1 476 49 view .LVU1707
 5008              	# sieve_extend.c:476:             for (counter_t index = range_start; index <= range_stop; index +=
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5009              		.loc 1 476 13 is_stmt 0 view .LVU1708
 5010 1dc6 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5011 1dc9 0F8320FF 		jnb	.L221	#,
 5011      FFFF
 5012 1dcf E990FBFF 		jmp	.L216	#
 5012      FF
 5013              	.LVL200:
 5014              	.L399:
 476:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5015              		.loc 1 476 13 view .LVU1709
 5016              	.LBE342:
 5017              	# sieve_extend.c:513: }
 513:sieve_extend.c **** 
 5018              		.loc 1 513 1 view .LVU1710
 5019 1dd4 E8000000 		call	__stack_chk_fail@PLT	#
 5019      00
 5020              	.LVL201:
 5021              		.cfi_endproc
 5022              	.LFE67:
 5024 1dd9 0F1F8000 		.p2align 4
 5024      000000
 5026              	extendSieve_aligned:
 5027              	.LVL202:
 5028              	.LFB69:
 549:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5029              		.loc 1 549 140 is_stmt 1 view -0
 5030              		.cfi_startproc
 550:sieve_extend.c **** 
 5031              		.loc 1 550 5 view .LVU1712
 552:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5032              		.loc 1 552 5 view .LVU1713
 5033              	# sieve_extend.c:549: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 549:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5034              		.loc 1 549 140 is_stmt 0 view .LVU1714
 5035 1de0 55       		push	rbp	#
 5036              		.cfi_def_cfa_offset 16
 5037              		.cfi_offset 6, -16
 5038 1de1 4889E5   		mov	rbp, rsp	#,
 5039              		.cfi_def_cfa_register 6
 5040 1de4 4157     		push	r15	#
 5041 1de6 4156     		push	r14	#
 5042 1de8 4155     		push	r13	#
 5043              		.cfi_offset 15, -24
 5044              		.cfi_offset 14, -32
 5045              		.cfi_offset 13, -40
 5046 1dea 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5047 1ded 4154     		push	r12	#
 5048              		.cfi_offset 12, -48
 5049 1def 4989D4   		mov	r12, rdx	# size, tmp297
 5050 1df2 53       		push	rbx	#
 5051              		.cfi_offset 3, -56
 5052              	# sieve_extend.c:552:     const counter_t destination_stop_word = wordindex(destination_stop);
GAS LISTING /tmp/ccW4ZvF5.s 			page 144


 552:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5053              		.loc 1 552 21 view .LVU1715
 5054 1df3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5055              	# sieve_extend.c:553:     const counter_t copy_start = source_start + size;
 553:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5056              		.loc 1 553 21 view .LVU1716
 5057 1df6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5058              	.LVL203:
 5059              	# sieve_extend.c:549: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 549:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5060              		.loc 1 549 140 view .LVU1717
 5061 1dfa 4883E4E0 		and	rsp, -32	#,
 5062              	# sieve_extend.c:555:     counter_t copy_word = wordindex(copy_start);
 555:sieve_extend.c ****     
 5063              		.loc 1 555 15 view .LVU1718
 5064 1dfe 4889C8   		mov	rax, rcx	# ivtmp.342, copy_start
 5065              	# sieve_extend.c:554:     counter_t source_word = wordindex(source_start);
 554:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5066              		.loc 1 554 15 view .LVU1719
 5067 1e01 48C1EE06 		shr	rsi, 6	# source_start,
 5068              	.LVL204:
 5069              	# sieve_extend.c:549: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 549:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5070              		.loc 1 549 140 view .LVU1720
 5071 1e05 488D6424 		lea	rsp, -32[rsp]	#,
 5071      E0
 5072              	# sieve_extend.c:555:     counter_t copy_word = wordindex(copy_start);
 555:sieve_extend.c ****     
 5073              		.loc 1 555 15 view .LVU1721
 5074 1e0a 48C1E806 		shr	rax, 6	# ivtmp.342,
 5075              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5076              		.loc 1 557 35 view .LVU1722
 5077 1e0e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5077      00000000 
 5078              	.LVL205:
 5079              	# sieve_extend.c:552:     const counter_t destination_stop_word = wordindex(destination_stop);
 552:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5080              		.loc 1 552 21 view .LVU1723
 5081 1e16 48C1EB06 		shr	rbx, 6	# tmp298,
 5082              	.LVL206:
 553:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5083              		.loc 1 553 5 is_stmt 1 view .LVU1724
 554:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5084              		.loc 1 554 5 view .LVU1725
 5085              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5086              		.loc 1 557 35 is_stmt 0 view .LVU1726
 5087 1e1a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5087      00
 5088              	# sieve_extend.c:554:     counter_t source_word = wordindex(source_start);
 554:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5089              		.loc 1 554 15 view .LVU1727
 5090 1e1f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5090      08
 5091              	.LVL207:
 555:sieve_extend.c ****     
GAS LISTING /tmp/ccW4ZvF5.s 			page 145


 5092              		.loc 1 555 5 is_stmt 1 view .LVU1728
 557:sieve_extend.c **** 
 5093              		.loc 1 557 5 view .LVU1729
 5094              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5095              		.loc 1 557 52 is_stmt 0 view .LVU1730
 5096 1e24 89CE     		mov	esi, ecx	# tmp183, copy_start
 5097              	.LVL208:
 5098              	# sieve_extend.c:559:     while (copy_word + size <= destination_stop_word) {
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5099              		.loc 1 559 22 view .LVU1731
 5100 1e26 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.342,
 5101              	.LVL209:
 5102              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5103              		.loc 1 557 52 view .LVU1732
 5104 1e2a F7D6     		not	esi	# tmp183
 5105              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5106              		.loc 1 557 35 view .LVU1733
 5107 1e2c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5108              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5109              		.loc 1 557 52 view .LVU1734
 5110 1e30 48C7C2FF 		mov	rdx, -1	# tmp186,
 5110      FFFFFF
 5111              	.LVL210:
 557:sieve_extend.c **** 
 5112              		.loc 1 557 52 view .LVU1735
 5113 1e37 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5113      C2
 5114              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5115              		.loc 1 557 49 view .LVU1736
 5116 1e3c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5116      0E
 5117              	# sieve_extend.c:557:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 557:sieve_extend.c **** 
 5118              		.loc 1 557 25 view .LVU1737
 5119 1e41 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5119      00
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5120              		.loc 1 559 5 is_stmt 1 view .LVU1738
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5121              		.loc 1 559 11 view .LVU1739
 5122 1e46 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5123 1e49 0F827101 		jb	.L401	#,
 5123      0000
 5124 1e4f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5124      00000000 
 5125 1e57 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5125      00000000 
 5126              	.LVL211:
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5127              		.loc 1 559 11 is_stmt 0 view .LVU1740
 5128 1e5f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5129              	# sieve_extend.c:560:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
GAS LISTING /tmp/ccW4ZvF5.s 			page 146


 560:sieve_extend.c ****         copy_word += size;
 5130              		.loc 1 560 9 view .LVU1741
 5131 1e62 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5131      00000000 
 5132 1e6a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5133 1e6d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5133      18
 5134              	.LVL212:
 5135              	.L402:
 560:sieve_extend.c ****         copy_word += size;
 5136              		.loc 1 560 9 is_stmt 1 view .LVU1742
 5137              	.LBB343:
 5138              	.LBI343:
 5139              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5140              		.loc 2 31 1 view .LVU1743
 5141              	.LBB344:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5142              		.loc 2 34 3 view .LVU1744
 5143              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5144              		.loc 2 34 10 is_stmt 0 view .LVU1745
 5145 1e72 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5145      18
 5146 1e77 4C89FA   		mov	rdx, r15	#, _15
 5147 1e7a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
GAS LISTING /tmp/ccW4ZvF5.s 			page 147


 5147      10
 5148 1e7f 4C89F6   		mov	rsi, r14	#, _5
 5149 1e82 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5150 1e86 E8000000 		call	memcpy@PLT	#
 5150      00
 5151              	.LVL213:
 5152              		.loc 2 34 10 view .LVU1746
 5153              	.LBE344:
 5154              	.LBE343:
 561:sieve_extend.c ****     }
 5155              		.loc 1 561 9 is_stmt 1 view .LVU1747
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5156              		.loc 1 559 11 view .LVU1748
 5157 1e8b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5157      10
 5158 1e90 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5159 1e94 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5160 1e97 0F822301 		jb	.L401	#,
 5160      0000
 560:sieve_extend.c ****         copy_word += size;
 5161              		.loc 1 560 9 view .LVU1749
 5162              	.LVL214:
 5163              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5164              		.loc 2 31 1 view .LVU1750
 5165              	.LBB345:
 5166              		.loc 2 34 3 view .LVU1751
 5167              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5168              		.loc 2 34 10 is_stmt 0 view .LVU1752
 5169 1e9d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5169      18
 5170 1ea2 4C89F6   		mov	rsi, r14	#, _5
 5171 1ea5 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
 5171      10
 5172              	.LVL215:
 5173              		.loc 2 34 10 view .LVU1753
 5174 1eaa 4C89FA   		mov	rdx, r15	#, _15
 5175 1ead 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5176 1eb1 E8000000 		call	memcpy@PLT	#
 5176      00
 5177              	.LVL216:
 5178              		.loc 2 34 10 view .LVU1754
 5179              	.LBE345:
 5180              	.LBE352:
 561:sieve_extend.c ****     }
 5181              		.loc 1 561 9 is_stmt 1 view .LVU1755
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5182              		.loc 1 559 11 view .LVU1756
 5183 1eb6 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5183      10
 5184 1ebb 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.342,
 5185 1ebf 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.342
 5186 1ec2 0F82F800 		jb	.L401	#,
 5186      0000
 560:sieve_extend.c ****         copy_word += size;
 5187              		.loc 1 560 9 view .LVU1757
 5188              	.LVL217:
GAS LISTING /tmp/ccW4ZvF5.s 			page 148


 5189              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5190              		.loc 2 31 1 view .LVU1758
 5191              	.LBB346:
 5192              		.loc 2 34 3 view .LVU1759
 5193              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5194              		.loc 2 34 10 is_stmt 0 view .LVU1760
 5195 1ec8 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5195      18
 5196 1ecd 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.342
 5196      10
 5197 1ed2 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5198 1ed6 4C89FA   		mov	rdx, r15	#, _15
 5199 1ed9 4C89F6   		mov	rsi, r14	#, _5
 5200 1edc E8000000 		call	memcpy@PLT	#
 5200      00
 5201              	.LVL218:
 5202              		.loc 2 34 10 view .LVU1761
 5203              	.LBE346:
 5204              	.LBE353:
 561:sieve_extend.c ****     }
 5205              		.loc 1 561 9 is_stmt 1 view .LVU1762
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5206              		.loc 1 559 11 view .LVU1763
 5207 1ee1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5207      10
 5208 1ee6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.342,
 5209 1eea 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.342
 5210 1eed 0F82CD00 		jb	.L401	#,
 5210      0000
 560:sieve_extend.c ****         copy_word += size;
 5211              		.loc 1 560 9 view .LVU1764
 5212              	.LVL219:
 5213              	.LBB354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5214              		.loc 2 31 1 view .LVU1765
 5215              	.LBB347:
 5216              		.loc 2 34 3 view .LVU1766
 5217              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5218              		.loc 2 34 10 is_stmt 0 view .LVU1767
 5219 1ef3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5219      18
 5220 1ef8 4C89FA   		mov	rdx, r15	#, _15
 5221 1efb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.342
 5221      10
 5222 1f00 4C89F6   		mov	rsi, r14	#, _5
 5223 1f03 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5224 1f07 E8000000 		call	memcpy@PLT	#
 5224      00
 5225              	.LVL220:
 5226              		.loc 2 34 10 view .LVU1768
 5227              	.LBE347:
 5228              	.LBE354:
 561:sieve_extend.c ****     }
 5229              		.loc 1 561 9 is_stmt 1 view .LVU1769
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5230              		.loc 1 559 11 view .LVU1770
GAS LISTING /tmp/ccW4ZvF5.s 			page 149


 5231 1f0c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5231      10
 5232 1f11 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.342,
 5233 1f15 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.342
 5234 1f18 0F82A200 		jb	.L401	#,
 5234      0000
 560:sieve_extend.c ****         copy_word += size;
 5235              		.loc 1 560 9 view .LVU1771
 5236              	.LVL221:
 5237              	.LBB355:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5238              		.loc 2 31 1 view .LVU1772
 5239              	.LBB348:
 5240              		.loc 2 34 3 view .LVU1773
 5241              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5242              		.loc 2 34 10 is_stmt 0 view .LVU1774
 5243 1f1e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5243      18
 5244 1f23 4C89FA   		mov	rdx, r15	#, _15
 5245 1f26 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.342
 5245      10
 5246 1f2b 4C89F6   		mov	rsi, r14	#, _5
 5247 1f2e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5248 1f32 E8000000 		call	memcpy@PLT	#
 5248      00
 5249              	.LVL222:
 5250              		.loc 2 34 10 view .LVU1775
 5251              	.LBE348:
 5252              	.LBE355:
 561:sieve_extend.c ****     }
 5253              		.loc 1 561 9 is_stmt 1 view .LVU1776
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5254              		.loc 1 559 11 view .LVU1777
 5255 1f37 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5255      10
 5256 1f3c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5257 1f40 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5258 1f43 727B     		jb	.L401	#,
 560:sieve_extend.c ****         copy_word += size;
 5259              		.loc 1 560 9 view .LVU1778
 5260              	.LVL223:
 5261              	.LBB356:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5262              		.loc 2 31 1 view .LVU1779
 5263              	.LBB349:
 5264              		.loc 2 34 3 view .LVU1780
 5265              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5266              		.loc 2 34 10 is_stmt 0 view .LVU1781
 5267 1f45 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5267      18
 5268 1f4a 4C89F6   		mov	rsi, r14	#, _5
 5269 1f4d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.342
 5269      10
 5270 1f52 4C89FA   		mov	rdx, r15	#, _15
 5271 1f55 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5272 1f59 E8000000 		call	memcpy@PLT	#
 5272      00
GAS LISTING /tmp/ccW4ZvF5.s 			page 150


 5273              	.LVL224:
 5274              		.loc 2 34 10 view .LVU1782
 5275              	.LBE349:
 5276              	.LBE356:
 561:sieve_extend.c ****     }
 5277              		.loc 1 561 9 is_stmt 1 view .LVU1783
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5278              		.loc 1 559 11 view .LVU1784
 5279 1f5e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5279      10
 5280 1f63 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.342,
 5281 1f67 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.342
 5282 1f6a 7254     		jb	.L401	#,
 560:sieve_extend.c ****         copy_word += size;
 5283              		.loc 1 560 9 view .LVU1785
 5284              	.LVL225:
 5285              	.LBB357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5286              		.loc 2 31 1 view .LVU1786
 5287              	.LBB350:
 5288              		.loc 2 34 3 view .LVU1787
 5289              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5290              		.loc 2 34 10 is_stmt 0 view .LVU1788
 5291 1f6c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5291      18
 5292 1f71 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.342
 5292      10
 5293 1f76 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5294 1f7a 4C89FA   		mov	rdx, r15	#, _15
 5295 1f7d 4C89F6   		mov	rsi, r14	#, _5
 5296 1f80 E8000000 		call	memcpy@PLT	#
 5296      00
 5297              	.LVL226:
 5298              		.loc 2 34 10 view .LVU1789
 5299              	.LBE350:
 5300              	.LBE357:
 561:sieve_extend.c ****     }
 5301              		.loc 1 561 9 is_stmt 1 view .LVU1790
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5302              		.loc 1 559 11 view .LVU1791
 5303 1f85 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5303      10
 5304 1f8a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.342,
 5305 1f8e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.342
 5306 1f91 722D     		jb	.L401	#,
 560:sieve_extend.c ****         copy_word += size;
 5307              		.loc 1 560 9 view .LVU1792
 5308              	.LVL227:
 5309              	.LBB358:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5310              		.loc 2 31 1 view .LVU1793
 5311              	.LBB351:
 5312              		.loc 2 34 3 view .LVU1794
 5313              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5314              		.loc 2 34 10 is_stmt 0 view .LVU1795
 5315 1f93 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5315      18
GAS LISTING /tmp/ccW4ZvF5.s 			page 151


 5316 1f98 4C89FA   		mov	rdx, r15	#, _15
 5317 1f9b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.342
 5317      10
 5318 1fa0 4C89F6   		mov	rsi, r14	#, _5
 5319 1fa3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5320 1fa7 E8000000 		call	memcpy@PLT	#
 5320      00
 5321              	.LVL228:
 5322              		.loc 2 34 10 view .LVU1796
 5323              	.LBE351:
 5324              	.LBE358:
 561:sieve_extend.c ****     }
 5325              		.loc 1 561 9 is_stmt 1 view .LVU1797
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5326              		.loc 1 559 11 view .LVU1798
 5327 1fac 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.342, %sfp
 5327      10
 5328              	.LVL229:
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5329              		.loc 1 559 11 is_stmt 0 view .LVU1799
 5330 1fb1 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.342,
 5331              	.LVL230:
 559:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5332              		.loc 1 559 11 view .LVU1800
 5333 1fb5 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.342
 5334 1fb8 0F83B4FE 		jnb	.L402	#,
 5334      FFFF
 5335              	.LVL231:
 5336 1fbe 6690     		.p2align 4
 5337              		.p2align 3
 5338              	.L401:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5339              		.loc 1 564 10 is_stmt 1 view .LVU1801
 5340 1fc0 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.342
 5341 1fc3 0F864902 		jbe	.L512	#,
 5341      0000
 5342 1fc9 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5343 1fcd 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5343      00000000 
 5344              	.LVL232:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5345              		.loc 1 564 10 is_stmt 0 view .LVU1802
 5346 1fd5 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5346      20
 5347 1fda 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5348 1fde 4D39FA   		cmp	r10, r15	# _4, tmp199
 5349 1fe1 410F9DC3 		setge	r11b	#, tmp201
 5350 1fe5 4939FC   		cmp	r12, rdi	# _41, tmp202
 5351 1fe8 400F9DC6 		setge	sil	#, tmp204
 5352 1fec 4108F3   		or	r11b, sil	# tmp201, tmp204
 5353 1fef 0F844B02 		je	.L404	#,
 5353      0000
 5354 1ff5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5355 1ff9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.342
 5356 1ffc 4883FA05 		cmp	rdx, 5	# tmp207,
 5357 2000 0F863A02 		jbe	.L404	#,
 5357      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 152


 5358 2006 4D89F7   		mov	r15, r14	# tmp210, _5
 5359 2009 49C1EF03 		shr	r15, 3	# tmp210,
 5360 200d 49F7DF   		neg	r15	# tmp211
 5361 2010 4183E703 		and	r15d, 3	# prolog_loop_niters.310,
 5362 2014 0F842E03 		je	.L411	#,
 5362      0000
 565:sieve_extend.c ****         source_word++;
 5363              		.loc 1 565 9 is_stmt 1 view .LVU1803
 5364              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5365              		.loc 1 565 39 is_stmt 0 view .LVU1804
 5366 201a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5367 201d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.310,
 5368              	# sieve_extend.c:566:         source_word++;
 566:sieve_extend.c ****         copy_word++;
 5369              		.loc 1 566 20 view .LVU1805
 5370 2021 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5370      08
 5371              	# sieve_extend.c:567:         copy_word++;
 567:sieve_extend.c ****     }
 5372              		.loc 1 567 18 view .LVU1806
 5373 2026 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5374              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5375              		.loc 1 565 29 view .LVU1807
 5376 202a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5376      00
 566:sieve_extend.c ****         copy_word++;
 5377              		.loc 1 566 9 is_stmt 1 view .LVU1808
 5378              	# sieve_extend.c:566:         source_word++;
 566:sieve_extend.c ****         copy_word++;
 5379              		.loc 1 566 20 is_stmt 0 view .LVU1809
 5380 202f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5381              	.LVL233:
 567:sieve_extend.c ****     }
 5382              		.loc 1 567 9 is_stmt 1 view .LVU1810
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5383              		.loc 1 564 10 view .LVU1811
 5384 2033 742A     		je	.L405	#,
 565:sieve_extend.c ****         source_word++;
 5385              		.loc 1 565 9 view .LVU1812
 5386              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5387              		.loc 1 565 39 is_stmt 0 view .LVU1813
 5388 2035 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5388      00
 5389 203a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.310,
 5390              	# sieve_extend.c:566:         source_word++;
 566:sieve_extend.c ****         copy_word++;
 5391              		.loc 1 566 20 view .LVU1814
 5392 203e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5393              	.LVL234:
 5394              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5395              		.loc 1 565 29 view .LVU1815
 5396 2042 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5396      00
GAS LISTING /tmp/ccW4ZvF5.s 			page 153


 566:sieve_extend.c ****         copy_word++;
 5397              		.loc 1 566 9 is_stmt 1 view .LVU1816
 5398              	.LVL235:
 567:sieve_extend.c ****     }
 5399              		.loc 1 567 9 view .LVU1817
 5400              	# sieve_extend.c:567:         copy_word++;
 567:sieve_extend.c ****     }
 5401              		.loc 1 567 18 is_stmt 0 view .LVU1818
 5402 2047 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5403              	.LVL236:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5404              		.loc 1 564 10 is_stmt 1 view .LVU1819
 5405 204b 7512     		jne	.L405	#,
 565:sieve_extend.c ****         source_word++;
 5406              		.loc 1 565 9 view .LVU1820
 5407              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5408              		.loc 1 565 39 is_stmt 0 view .LVU1821
 5409 204d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5409      00
 5410              	# sieve_extend.c:566:         source_word++;
 566:sieve_extend.c ****         copy_word++;
 5411              		.loc 1 566 20 view .LVU1822
 5412 2052 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5413              	.LVL237:
 5414              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5415              		.loc 1 565 29 view .LVU1823
 5416 2056 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5416      00
 566:sieve_extend.c ****         copy_word++;
 5417              		.loc 1 566 9 is_stmt 1 view .LVU1824
 5418              	.LVL238:
 567:sieve_extend.c ****     }
 5419              		.loc 1 567 9 view .LVU1825
 5420              	# sieve_extend.c:567:         copy_word++;
 567:sieve_extend.c ****     }
 5421              		.loc 1 567 18 is_stmt 0 view .LVU1826
 5422 205b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5423              	.LVL239:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5424              		.loc 1 564 10 is_stmt 1 view .LVU1827
 5425              	.L405:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5426              		.loc 1 564 10 is_stmt 0 view .LVU1828
 5427 205f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5427      08
 5428 2064 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5429 2067 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.310
 5430 206a 4929C3   		sub	r11, rax	# niters.311, ivtmp.342
 5431 206d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.310
 5432 2070 4D89D8   		mov	r8, r11	# bnd.312, niters.311
 5433 2073 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.310
 5434 2076 49C1E802 		shr	r8, 2	# bnd.312,
 5435 207a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.320,
 5435      00
 5436 207f 49C1E005 		sal	r8, 5	# _182,
GAS LISTING /tmp/ccW4ZvF5.s 			page 154


 5437              	# sieve_extend.c:554:     counter_t source_word = wordindex(source_start);
 554:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5438              		.loc 1 554 15 view .LVU1829
 5439 2083 31C0     		xor	eax, eax	# ivtmp.333
 5440 2085 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5441 2089 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.317,
 5441      00
 5442 208e 48C1EA05 		shr	rdx, 5	# tmp226,
 5443 2092 4883C201 		add	rdx, 1	# tmp229,
 5444 2096 83E207   		and	edx, 7	# tmp230,
 5445 2099 0F849500 		je	.L407	#,
 5445      0000
 5446 209f 4883FA01 		cmp	rdx, 1	# tmp230,
 5447 20a3 7477     		je	.L471	#,
 5448 20a5 4883FA02 		cmp	rdx, 2	# tmp230,
 5449 20a9 7462     		je	.L472	#,
 5450 20ab 4883FA03 		cmp	rdx, 3	# tmp230,
 5451 20af 744D     		je	.L473	#,
 5452 20b1 4883FA04 		cmp	rdx, 4	# tmp230,
 5453 20b5 7438     		je	.L474	#,
 5454 20b7 4883FA05 		cmp	rdx, 5	# tmp230,
 5455 20bb 7423     		je	.L475	#,
 5456 20bd 4883FA06 		cmp	rdx, 6	# tmp230,
 5457 20c1 740E     		je	.L476	#,
 565:sieve_extend.c ****         source_word++;
 5458              		.loc 1 565 9 is_stmt 1 view .LVU1830
 5459              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5460              		.loc 1 565 29 is_stmt 0 view .LVU1831
 5461 20c3 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.317_119, index: ivtmp.333_180, offset: 0
 5462 20c7 B8200000 		mov	eax, 32	# ivtmp.333,
 5462      00
 5463 20cc C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], tmp3
 5463      0F
 566:sieve_extend.c ****         copy_word++;
 5464              		.loc 1 566 9 is_stmt 1 view .LVU1832
 567:sieve_extend.c ****     }
 5465              		.loc 1 567 9 view .LVU1833
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5466              		.loc 1 564 10 view .LVU1834
 5467              	.L476:
 565:sieve_extend.c ****         source_word++;
 5468              		.loc 1 565 9 view .LVU1835
 5469              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5470              		.loc 1 565 29 is_stmt 0 view .LVU1836
 5471 20d1 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5471      06
 5472 20d6 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5472      3C07
 566:sieve_extend.c ****         copy_word++;
 5473              		.loc 1 566 9 is_stmt 1 view .LVU1837
 567:sieve_extend.c ****     }
 5474              		.loc 1 567 9 view .LVU1838
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5475              		.loc 1 564 10 view .LVU1839
 5476 20dc 4883C020 		add	rax, 32	# ivtmp.333,
GAS LISTING /tmp/ccW4ZvF5.s 			page 155


 5477              	.L475:
 565:sieve_extend.c ****         source_word++;
 5478              		.loc 1 565 9 view .LVU1840
 5479              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5480              		.loc 1 565 29 is_stmt 0 view .LVU1841
 5481 20e0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5481      06
 5482 20e5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5482      3407
 566:sieve_extend.c ****         copy_word++;
 5483              		.loc 1 566 9 is_stmt 1 view .LVU1842
 567:sieve_extend.c ****     }
 5484              		.loc 1 567 9 view .LVU1843
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5485              		.loc 1 564 10 view .LVU1844
 5486 20eb 4883C020 		add	rax, 32	# ivtmp.333,
 5487              	.L474:
 565:sieve_extend.c ****         source_word++;
 5488              		.loc 1 565 9 view .LVU1845
 5489              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5490              		.loc 1 565 29 is_stmt 0 view .LVU1846
 5491 20ef C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5491      06
 5492 20f4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5492      2C07
 566:sieve_extend.c ****         copy_word++;
 5493              		.loc 1 566 9 is_stmt 1 view .LVU1847
 567:sieve_extend.c ****     }
 5494              		.loc 1 567 9 view .LVU1848
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5495              		.loc 1 564 10 view .LVU1849
 5496 20fa 4883C020 		add	rax, 32	# ivtmp.333,
 5497              	.L473:
 565:sieve_extend.c ****         source_word++;
 5498              		.loc 1 565 9 view .LVU1850
 5499              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5500              		.loc 1 565 29 is_stmt 0 view .LVU1851
 5501 20fe C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5501      06
 5502 2103 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5502      2407
 566:sieve_extend.c ****         copy_word++;
 5503              		.loc 1 566 9 is_stmt 1 view .LVU1852
 567:sieve_extend.c ****     }
 5504              		.loc 1 567 9 view .LVU1853
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5505              		.loc 1 564 10 view .LVU1854
 5506 2109 4883C020 		add	rax, 32	# ivtmp.333,
 5507              	.L472:
 565:sieve_extend.c ****         source_word++;
 5508              		.loc 1 565 9 view .LVU1855
 5509              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5510              		.loc 1 565 29 is_stmt 0 view .LVU1856
GAS LISTING /tmp/ccW4ZvF5.s 			page 156


 5511 210d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5511      06
 5512 2112 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5512      0407
 566:sieve_extend.c ****         copy_word++;
 5513              		.loc 1 566 9 is_stmt 1 view .LVU1857
 567:sieve_extend.c ****     }
 5514              		.loc 1 567 9 view .LVU1858
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5515              		.loc 1 564 10 view .LVU1859
 5516 2118 4883C020 		add	rax, 32	# ivtmp.333,
 5517              	.L471:
 565:sieve_extend.c ****         source_word++;
 5518              		.loc 1 565 9 view .LVU1860
 5519              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5520              		.loc 1 565 29 is_stmt 0 view .LVU1861
 5521 211c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5521      06
 5522 2121 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5522      1407
 566:sieve_extend.c ****         copy_word++;
 5523              		.loc 1 566 9 is_stmt 1 view .LVU1862
 567:sieve_extend.c ****     }
 5524              		.loc 1 567 9 view .LVU1863
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5525              		.loc 1 564 10 view .LVU1864
 5526 2127 4883C020 		add	rax, 32	# ivtmp.333,
 5527 212b 4C39C0   		cmp	rax, r8	# ivtmp.333, _182
 5528 212e 0F848D00 		je	.L508	#,
 5528      0000
 5529              	.L407:
 565:sieve_extend.c ****         source_word++;
 5530              		.loc 1 565 9 view .LVU1865
 5531              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5532              		.loc 1 565 29 is_stmt 0 view .LVU1866
 5533 2134 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.317_119, index: ivtmp.333_180, offse
 5533      06
 5534 2139 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B], 
 5534      1C07
 566:sieve_extend.c ****         copy_word++;
 5535              		.loc 1 566 9 is_stmt 1 view .LVU1867
 567:sieve_extend.c ****     }
 5536              		.loc 1 567 9 view .LVU1868
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5537              		.loc 1 564 10 view .LVU1869
 565:sieve_extend.c ****         source_word++;
 5538              		.loc 1 565 9 view .LVU1870
 5539              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5540              		.loc 1 565 29 is_stmt 0 view .LVU1871
 5541 213f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.317_119, index: ivtmp.333_180, off
 5541      0620
 5542 2145 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B]
 5542      440720
 566:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 157


 5543              		.loc 1 566 9 is_stmt 1 view .LVU1872
 567:sieve_extend.c ****     }
 5544              		.loc 1 567 9 view .LVU1873
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5545              		.loc 1 564 10 view .LVU1874
 565:sieve_extend.c ****         source_word++;
 5546              		.loc 1 565 9 view .LVU1875
 5547              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5548              		.loc 1 565 29 is_stmt 0 view .LVU1876
 5549 214c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.317_119, index: ivtmp.333_180, off
 5549      0640
 5550 2152 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B]
 5550      4C0740
 566:sieve_extend.c ****         copy_word++;
 5551              		.loc 1 566 9 is_stmt 1 view .LVU1877
 567:sieve_extend.c ****     }
 5552              		.loc 1 567 9 view .LVU1878
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5553              		.loc 1 564 10 view .LVU1879
 565:sieve_extend.c ****         source_word++;
 5554              		.loc 1 565 9 view .LVU1880
 5555              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5556              		.loc 1 565 29 is_stmt 0 view .LVU1881
 5557 2159 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.317_119, index: ivtmp.333_180, of
 5557      0660
 5558 215f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0B
 5558      540760
 566:sieve_extend.c ****         copy_word++;
 5559              		.loc 1 566 9 is_stmt 1 view .LVU1882
 567:sieve_extend.c ****     }
 5560              		.loc 1 567 9 view .LVU1883
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5561              		.loc 1 564 10 view .LVU1884
 565:sieve_extend.c ****         source_word++;
 5562              		.loc 1 565 9 view .LVU1885
 5563              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5564              		.loc 1 565 29 is_stmt 0 view .LVU1886
 5565 2166 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5565      06800000 
 5565      00
 5566 216f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5566      9C078000 
 5566      0000
 566:sieve_extend.c ****         copy_word++;
 5567              		.loc 1 566 9 is_stmt 1 view .LVU1887
 567:sieve_extend.c ****     }
 5568              		.loc 1 567 9 view .LVU1888
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5569              		.loc 1 564 10 view .LVU1889
 565:sieve_extend.c ****         source_word++;
 5570              		.loc 1 565 9 view .LVU1890
 5571              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5572              		.loc 1 565 29 is_stmt 0 view .LVU1891
GAS LISTING /tmp/ccW4ZvF5.s 			page 158


 5573 2179 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5573      06A00000 
 5573      00
 5574 2182 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5574      A407A000 
 5574      0000
 566:sieve_extend.c ****         copy_word++;
 5575              		.loc 1 566 9 is_stmt 1 view .LVU1892
 567:sieve_extend.c ****     }
 5576              		.loc 1 567 9 view .LVU1893
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5577              		.loc 1 564 10 view .LVU1894
 565:sieve_extend.c ****         source_word++;
 5578              		.loc 1 565 9 view .LVU1895
 5579              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5580              		.loc 1 565 29 is_stmt 0 view .LVU1896
 5581 218c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5581      06C00000 
 5581      00
 5582 2195 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5582      AC07C000 
 5582      0000
 566:sieve_extend.c ****         copy_word++;
 5583              		.loc 1 566 9 is_stmt 1 view .LVU1897
 567:sieve_extend.c ****     }
 5584              		.loc 1 567 9 view .LVU1898
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5585              		.loc 1 564 10 view .LVU1899
 565:sieve_extend.c ****         source_word++;
 5586              		.loc 1 565 9 view .LVU1900
 5587              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5588              		.loc 1 565 29 is_stmt 0 view .LVU1901
 5589 219f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.317_119, index: ivtmp.333_180, o
 5589      06E00000 
 5589      00
 5590 21a8 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.320_125, index: ivtmp.333_180, offset: 0
 5590      B407E000 
 5590      0000
 566:sieve_extend.c ****         copy_word++;
 5591              		.loc 1 566 9 is_stmt 1 view .LVU1902
 567:sieve_extend.c ****     }
 5592              		.loc 1 567 9 view .LVU1903
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5593              		.loc 1 564 10 view .LVU1904
 5594 21b2 48050001 		add	rax, 256	# ivtmp.333,
 5594      0000
 5595 21b8 4C39C0   		cmp	rax, r8	# ivtmp.333, _182
 5596 21bb 0F8573FF 		jne	.L407	#,
 5596      FFFF
 5597              	.L508:
 5598 21c1 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.313, niters.311
 5599 21c4 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.313,
 5600 21c8 4D01CC   		add	r12, r9	# tmp.314, niters_vector_mult_vf.313
 5601 21cb 4D01CE   		add	r14, r9	# tmp.315, niters_vector_mult_vf.313
 5602 21ce 4D39CB   		cmp	r11, r9	# niters.311, niters_vector_mult_vf.313
GAS LISTING /tmp/ccW4ZvF5.s 			page 159


 5603 21d1 7455     		je	.L511	#,
 5604              	.LVL240:
 565:sieve_extend.c ****         source_word++;
 5605              		.loc 1 565 9 view .LVU1905
 5606              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5607              		.loc 1 565 39 is_stmt 0 view .LVU1906
 5608 21d3 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5608      00
 5609              	# sieve_extend.c:567:         copy_word++;
 567:sieve_extend.c ****     }
 5610              		.loc 1 567 18 view .LVU1907
 5611 21d8 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5612              	# sieve_extend.c:566:         source_word++;
 566:sieve_extend.c ****         copy_word++;
 5613              		.loc 1 566 20 view .LVU1908
 5614 21dc 4983C401 		add	r12, 1	# source_word,
 5615              	.LVL241:
 5616              	# sieve_extend.c:564:    while (copy_word < destination_stop_word) {
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5617              		.loc 1 564 10 view .LVU1909
 5618 21e0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5619              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5620              		.loc 1 565 29 view .LVU1910
 5621 21e3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5621      00
 566:sieve_extend.c ****         copy_word++;
 5622              		.loc 1 566 9 is_stmt 1 view .LVU1911
 5623              	.LVL242:
 567:sieve_extend.c ****     }
 5624              		.loc 1 567 9 view .LVU1912
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5625              		.loc 1 564 10 view .LVU1913
 5626 21e8 763E     		jbe	.L511	#,
 565:sieve_extend.c ****         source_word++;
 5627              		.loc 1 565 9 view .LVU1914
 5628              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5629              		.loc 1 565 39 is_stmt 0 view .LVU1915
 5630 21ea 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5630      00000000 
 5631              	# sieve_extend.c:567:         copy_word++;
 567:sieve_extend.c ****     }
 5632              		.loc 1 567 18 view .LVU1916
 5633 21f2 4983C602 		add	r14, 2	# copy_word,
 5634              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5635              		.loc 1 565 39 view .LVU1917
 5636 21f6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5636      00
 5637              	# sieve_extend.c:564:    while (copy_word < destination_stop_word) {
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5638              		.loc 1 564 10 view .LVU1918
 5639 21fb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5640              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 160


 5641              		.loc 1 565 29 view .LVU1919
 5642 21fe 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5642      00
 566:sieve_extend.c ****         copy_word++;
 5643              		.loc 1 566 9 is_stmt 1 view .LVU1920
 567:sieve_extend.c ****     }
 5644              		.loc 1 567 9 view .LVU1921
 5645              	.LVL243:
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5646              		.loc 1 564 10 view .LVU1922
 5647 2203 7623     		jbe	.L511	#,
 565:sieve_extend.c ****         source_word++;
 5648              		.loc 1 565 9 view .LVU1923
 5649              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5650              		.loc 1 565 39 is_stmt 0 view .LVU1924
 5651 2205 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5651      08
 5652              	.LVL244:
 5653              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5654              		.loc 1 565 29 view .LVU1925
 5655 220a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5655      00
 566:sieve_extend.c ****         copy_word++;
 5656              		.loc 1 566 9 is_stmt 1 view .LVU1926
 567:sieve_extend.c ****     }
 5657              		.loc 1 567 9 view .LVU1927
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5658              		.loc 1 564 10 view .LVU1928
 5659 220f C5F877   		vzeroupper
 5660              	.LVL245:
 5661              	.L512:
 5662              	# sieve_extend.c:570: }
 570:sieve_extend.c **** 
 5663              		.loc 1 570 1 is_stmt 0 view .LVU1929
 5664 2212 488D65D8 		lea	rsp, -40[rbp]	#,
 5665 2216 5B       		pop	rbx	#
 5666 2217 415C     		pop	r12	#
 5667 2219 415D     		pop	r13	#
 5668 221b 415E     		pop	r14	#
 5669 221d 415F     		pop	r15	#
 5670 221f 5D       		pop	rbp	#
 5671              		.cfi_remember_state
 5672              		.cfi_def_cfa 7, 8
 5673 2220 C3       		ret	
 5674              	.LVL246:
 5675              		.p2align 4,,7
 5676 2221 0F1F8000 		.p2align 3
 5676      000000
 5677              	.L511:
 5678              		.cfi_restore_state
 570:sieve_extend.c **** 
 5679              		.loc 1 570 1 view .LVU1930
 5680 2228 C5F877   		vzeroupper
 5681 222b 488D65D8 		lea	rsp, -40[rbp]	#,
 5682 222f 5B       		pop	rbx	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 161


 5683              	.LVL247:
 570:sieve_extend.c **** 
 5684              		.loc 1 570 1 view .LVU1931
 5685 2230 415C     		pop	r12	#
 5686 2232 415D     		pop	r13	#
 5687              	.LVL248:
 570:sieve_extend.c **** 
 5688              		.loc 1 570 1 view .LVU1932
 5689 2234 415E     		pop	r14	#
 5690 2236 415F     		pop	r15	#
 5691 2238 5D       		pop	rbp	#
 5692              		.cfi_remember_state
 5693              		.cfi_def_cfa 7, 8
 5694 2239 C3       		ret	
 5695              	.LVL249:
 5696 223a 660F1F44 		.p2align 4,,7
 5696      0000
 5697              		.p2align 3
 5698              	.L404:
 5699              		.cfi_restore_state
 5700              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5701              		.loc 1 565 39 view .LVU1933
 5702 2240 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5702      08
 5703 2245 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.328,
 5703      00
 5704 224a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5704      00
 5705              	.LVL250:
 565:sieve_extend.c ****         source_word++;
 5706              		.loc 1 565 39 view .LVU1934
 5707 224f 4C89EE   		mov	rsi, r13	# tmp221, _179
 5708 2252 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.328
 5709 2255 4829C7   		sub	rdi, rax	# source_word, ivtmp.342
 5710 2258 4883EE08 		sub	rsi, 8	# tmp222,
 5711 225c 48C1EE03 		shr	rsi, 3	# tmp220,
 5712 2260 4883C601 		add	rsi, 1	# tmp223,
 5713 2264 83E607   		and	esi, 7	# tmp224,
 5714 2267 0F848100 		je	.L409	#,
 5714      0000
 5715 226d 4883FE01 		cmp	rsi, 1	# tmp224,
 5716 2271 7466     		je	.L477	#,
 5717 2273 4883FE02 		cmp	rsi, 2	# tmp224,
 5718 2277 7454     		je	.L478	#,
 5719 2279 4883FE03 		cmp	rsi, 3	# tmp224,
 5720 227d 7442     		je	.L479	#,
 5721 227f 4883FE04 		cmp	rsi, 4	# tmp224,
 5722 2283 7430     		je	.L480	#,
 5723 2285 4883FE05 		cmp	rsi, 5	# tmp224,
 5724 2289 741E     		je	.L481	#,
 5725 228b 4883FE06 		cmp	rsi, 6	# tmp224,
 5726 228f 740C     		je	.L482	#,
 5727              	.LVL251:
 565:sieve_extend.c ****         source_word++;
 5728              		.loc 1 565 9 is_stmt 1 view .LVU1935
 5729              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW4ZvF5.s 			page 162


 565:sieve_extend.c ****         source_word++;
 5730              		.loc 1 565 39 is_stmt 0 view .LVU1936
 5731 2291 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5732 2295 4983C608 		add	r14, 8	# ivtmp.328,
 5733              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5734              		.loc 1 565 29 view .LVU1937
 5735 2299 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5736              		.loc 1 566 9 is_stmt 1 view .LVU1938
 567:sieve_extend.c ****     }
 5737              		.loc 1 567 9 view .LVU1939
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5738              		.loc 1 564 10 view .LVU1940
 5739              	.L482:
 565:sieve_extend.c ****         source_word++;
 5740              		.loc 1 565 9 view .LVU1941
 5741              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5742              		.loc 1 565 39 is_stmt 0 view .LVU1942
 5743 229d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5744 22a1 4983C608 		add	r14, 8	# ivtmp.328,
 5745              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5746              		.loc 1 565 29 view .LVU1943
 5747 22a5 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5748              		.loc 1 566 9 is_stmt 1 view .LVU1944
 567:sieve_extend.c ****     }
 5749              		.loc 1 567 9 view .LVU1945
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5750              		.loc 1 564 10 view .LVU1946
 5751              	.L481:
 565:sieve_extend.c ****         source_word++;
 5752              		.loc 1 565 9 view .LVU1947
 5753              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5754              		.loc 1 565 39 is_stmt 0 view .LVU1948
 5755 22a9 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5756 22ad 4983C608 		add	r14, 8	# ivtmp.328,
 5757              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5758              		.loc 1 565 29 view .LVU1949
 5759 22b1 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5760              		.loc 1 566 9 is_stmt 1 view .LVU1950
 567:sieve_extend.c ****     }
 5761              		.loc 1 567 9 view .LVU1951
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5762              		.loc 1 564 10 view .LVU1952
 5763              	.L480:
 565:sieve_extend.c ****         source_word++;
 5764              		.loc 1 565 9 view .LVU1953
 5765              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5766              		.loc 1 565 39 is_stmt 0 view .LVU1954
 5767 22b5 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 163


 5768 22b9 4983C608 		add	r14, 8	# ivtmp.328,
 5769              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5770              		.loc 1 565 29 view .LVU1955
 5771 22bd 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5772              		.loc 1 566 9 is_stmt 1 view .LVU1956
 567:sieve_extend.c ****     }
 5773              		.loc 1 567 9 view .LVU1957
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5774              		.loc 1 564 10 view .LVU1958
 5775              	.L479:
 565:sieve_extend.c ****         source_word++;
 5776              		.loc 1 565 9 view .LVU1959
 5777              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5778              		.loc 1 565 39 is_stmt 0 view .LVU1960
 5779 22c1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5780 22c5 4983C608 		add	r14, 8	# ivtmp.328,
 5781              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5782              		.loc 1 565 29 view .LVU1961
 5783 22c9 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5784              		.loc 1 566 9 is_stmt 1 view .LVU1962
 567:sieve_extend.c ****     }
 5785              		.loc 1 567 9 view .LVU1963
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5786              		.loc 1 564 10 view .LVU1964
 5787              	.L478:
 565:sieve_extend.c ****         source_word++;
 5788              		.loc 1 565 9 view .LVU1965
 5789              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5790              		.loc 1 565 39 is_stmt 0 view .LVU1966
 5791 22cd 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5792 22d1 4983C608 		add	r14, 8	# ivtmp.328,
 5793              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5794              		.loc 1 565 29 view .LVU1967
 5795 22d5 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5796              		.loc 1 566 9 is_stmt 1 view .LVU1968
 567:sieve_extend.c ****     }
 5797              		.loc 1 567 9 view .LVU1969
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5798              		.loc 1 564 10 view .LVU1970
 5799              	.L477:
 565:sieve_extend.c ****         source_word++;
 5800              		.loc 1 565 9 view .LVU1971
 5801              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5802              		.loc 1 565 39 is_stmt 0 view .LVU1972
 5803 22d9 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5804 22dd 4983C608 		add	r14, 8	# ivtmp.328,
 5805              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 164


 5806              		.loc 1 565 29 view .LVU1973
 5807 22e1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5808              		.loc 1 566 9 is_stmt 1 view .LVU1974
 567:sieve_extend.c ****     }
 5809              		.loc 1 567 9 view .LVU1975
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5810              		.loc 1 564 10 view .LVU1976
 5811 22e5 4D39EE   		cmp	r14, r13	# ivtmp.328, _179
 5812 22e8 0F8424FF 		je	.L512	#,
 5812      FFFF
 5813              	.LVL252:
 5814              	.L409:
 565:sieve_extend.c ****         source_word++;
 5815              		.loc 1 565 9 view .LVU1977
 5816              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5817              		.loc 1 565 39 is_stmt 0 view .LVU1978
 5818 22ee 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5819              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5820              		.loc 1 565 29 view .LVU1979
 5821 22f2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5822              		.loc 1 566 9 is_stmt 1 view .LVU1980
 567:sieve_extend.c ****     }
 5823              		.loc 1 567 9 view .LVU1981
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5824              		.loc 1 564 10 view .LVU1982
 565:sieve_extend.c ****         source_word++;
 5825              		.loc 1 565 9 view .LVU1983
 5826              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5827              		.loc 1 565 39 is_stmt 0 view .LVU1984
 5828 22f5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5828      08
 5829              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5830              		.loc 1 565 29 view .LVU1985
 5831 22fa 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5832              		.loc 1 566 9 is_stmt 1 view .LVU1986
 567:sieve_extend.c ****     }
 5833              		.loc 1 567 9 view .LVU1987
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5834              		.loc 1 564 10 view .LVU1988
 565:sieve_extend.c ****         source_word++;
 5835              		.loc 1 565 9 view .LVU1989
 5836              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5837              		.loc 1 565 39 is_stmt 0 view .LVU1990
 5838 22fe 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5838      10
 5839              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5840              		.loc 1 565 29 view .LVU1991
 5841 2303 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
GAS LISTING /tmp/ccW4ZvF5.s 			page 165


 566:sieve_extend.c ****         copy_word++;
 5842              		.loc 1 566 9 is_stmt 1 view .LVU1992
 567:sieve_extend.c ****     }
 5843              		.loc 1 567 9 view .LVU1993
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5844              		.loc 1 564 10 view .LVU1994
 565:sieve_extend.c ****         source_word++;
 5845              		.loc 1 565 9 view .LVU1995
 5846              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5847              		.loc 1 565 39 is_stmt 0 view .LVU1996
 5848 2307 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5848      18
 5849              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5850              		.loc 1 565 29 view .LVU1997
 5851 230c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5852              		.loc 1 566 9 is_stmt 1 view .LVU1998
 567:sieve_extend.c ****     }
 5853              		.loc 1 567 9 view .LVU1999
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5854              		.loc 1 564 10 view .LVU2000
 565:sieve_extend.c ****         source_word++;
 5855              		.loc 1 565 9 view .LVU2001
 5856              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5857              		.loc 1 565 39 is_stmt 0 view .LVU2002
 5858 2310 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5858      20
 5859              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5860              		.loc 1 565 29 view .LVU2003
 5861 2315 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5862              		.loc 1 566 9 is_stmt 1 view .LVU2004
 567:sieve_extend.c ****     }
 5863              		.loc 1 567 9 view .LVU2005
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5864              		.loc 1 564 10 view .LVU2006
 565:sieve_extend.c ****         source_word++;
 5865              		.loc 1 565 9 view .LVU2007
 5866              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5867              		.loc 1 565 39 is_stmt 0 view .LVU2008
 5868 2319 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5868      28
 5869              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5870              		.loc 1 565 29 view .LVU2009
 5871 231e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5872              		.loc 1 566 9 is_stmt 1 view .LVU2010
 567:sieve_extend.c ****     }
 5873              		.loc 1 567 9 view .LVU2011
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5874              		.loc 1 564 10 view .LVU2012
GAS LISTING /tmp/ccW4ZvF5.s 			page 166


 565:sieve_extend.c ****         source_word++;
 5875              		.loc 1 565 9 view .LVU2013
 5876              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5877              		.loc 1 565 39 is_stmt 0 view .LVU2014
 5878 2322 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5878      30
 5879              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5880              		.loc 1 565 29 view .LVU2015
 5881 2327 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5882              		.loc 1 566 9 is_stmt 1 view .LVU2016
 567:sieve_extend.c ****     }
 5883              		.loc 1 567 9 view .LVU2017
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5884              		.loc 1 564 10 view .LVU2018
 565:sieve_extend.c ****         source_word++;
 5885              		.loc 1 565 9 view .LVU2019
 5886              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5887              		.loc 1 565 39 is_stmt 0 view .LVU2020
 5888 232b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5888      38
 5889 2330 4983C640 		add	r14, 64	# ivtmp.328,
 5890              	# sieve_extend.c:565:         bitarray[copy_word] = bitarray[source_word];
 565:sieve_extend.c ****         source_word++;
 5891              		.loc 1 565 29 view .LVU2021
 5892 2334 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 566:sieve_extend.c ****         copy_word++;
 5893              		.loc 1 566 9 is_stmt 1 view .LVU2022
 567:sieve_extend.c ****     }
 5894              		.loc 1 567 9 view .LVU2023
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5895              		.loc 1 564 10 view .LVU2024
 5896 2338 4D39EE   		cmp	r14, r13	# ivtmp.328, _179
 5897 233b 75B1     		jne	.L409	#,
 5898 233d E9D0FEFF 		jmp	.L512	#
 5898      FF
 5899              	.LVL253:
 5900              		.p2align 4,,7
 5901 2342 660F1F44 		.p2align 3
 5901      0000
 5902              	.L411:
 5903              	# sieve_extend.c:554:     counter_t source_word = wordindex(source_start);
 554:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5904              		.loc 1 554 15 is_stmt 0 view .LVU2025
 5905 2348 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5905      08
 5906              	# sieve_extend.c:564:    while (copy_word < destination_stop_word) {
 564:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5907              		.loc 1 564 10 view .LVU2026
 5908 234d 4989C6   		mov	r14, rax	# copy_word, ivtmp.342
 5909 2350 E90AFDFF 		jmp	.L405	#
 5909      FF
 5910              		.cfi_endproc
 5911              	.LFE69:
GAS LISTING /tmp/ccW4ZvF5.s 			page 167


 5913 2355 66662E0F 		.p2align 4
 5913      1F840000 
 5913      000000
 5915              	extendSieve_shiftleft:
 5916              	.LVL254:
 5917              	.LFB75:
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5918              		.loc 1 800 142 is_stmt 1 view -0
 5919              		.cfi_startproc
 801:sieve_extend.c **** 
 5920              		.loc 1 801 5 view .LVU2028
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5921              		.loc 1 803 5 view .LVU2029
 5922              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5923              		.loc 1 800 142 is_stmt 0 view .LVU2030
 5924 2360 55       		push	rbp	#
 5925              		.cfi_def_cfa_offset 16
 5926              		.cfi_offset 6, -16
 5927              	# sieve_extend.c:803:     const counter_t destination_stop_word = wordindex(destination_stop);
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5928              		.loc 1 803 21 view .LVU2031
 5929 2361 48C1E906 		shr	rcx, 6	# tmp1104,
 5930              	.LVL255:
 5931              	# sieve_extend.c:804:     const counter_t copy_start = source_start + size;
 804:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5932              		.loc 1 804 21 view .LVU2032
 5933 2365 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 5934              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5935              		.loc 1 800 142 view .LVU2033
 5936 2369 4889E5   		mov	rbp, rsp	#,
 5937              		.cfi_def_cfa_register 6
 5938 236c 4989D2   		mov	r10, rdx	# size, tmp1103
 5939 236f 4157     		push	r15	#
 5940              	# sieve_extend.c:808:     register counter_t copy_word = wordindex(copy_start);
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5941              		.loc 1 808 24 view .LVU2034
 5942 2371 4D89C3   		mov	r11, r8	# copy_word, copy_start
 5943              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5944              		.loc 1 800 142 view .LVU2035
 5945 2374 4156     		push	r14	#
 5946              	# sieve_extend.c:808:     register counter_t copy_word = wordindex(copy_start);
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5947              		.loc 1 808 24 view .LVU2036
 5948 2376 49C1EB06 		shr	r11, 6	# copy_word,
 5949              		.cfi_offset 15, -24
 5950              		.cfi_offset 14, -32
 5951              	# sieve_extend.c:803:     const counter_t destination_stop_word = wordindex(destination_stop);
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5952              		.loc 1 803 21 view .LVU2037
 5953 237a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 5954              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5955              		.loc 1 800 142 view .LVU2038
 5956 237d 4155     		push	r13	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 168


 5957 237f 4154     		push	r12	#
 5958 2381 53       		push	rbx	#
 5959              		.cfi_offset 13, -40
 5960              		.cfi_offset 12, -48
 5961              		.cfi_offset 3, -56
 5962 2382 4889FB   		mov	rbx, rdi	# bitarray, tmp1101
 5963 2385 4883E4E0 		and	rsp, -32	#,
 5964 2389 488D6424 		lea	rsp, -96[rsp]	#,
 5964      A0
 5965              	# sieve_extend.c:803:     const counter_t destination_stop_word = wordindex(destination_stop);
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5966              		.loc 1 803 21 view .LVU2039
 5967 238e 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 5967      58
 5968              	.LVL256:
 804:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5969              		.loc 1 804 5 is_stmt 1 view .LVU2040
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5970              		.loc 1 805 5 view .LVU2041
 5971              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5972              		.loc 1 805 39 is_stmt 0 view .LVU2042
 5973 2393 4889F1   		mov	rcx, rsi	# _4, source_start
 5974              	.LVL257:
 5975              	# sieve_extend.c:807:     register counter_t source_word = wordindex(source_start);
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5976              		.loc 1 807 24 view .LVU2043
 5977 2396 48C1EE06 		shr	rsi, 6	# source_start,
 5978              	.LVL258:
 5979              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5980              		.loc 1 805 39 view .LVU2044
 5981 239a 83E13F   		and	ecx, 63	# _4,
 5982              	.LVL259:
 5983              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5984              		.loc 1 800 142 view .LVU2045
 5985 239d 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5985      18
 5986              	# sieve_extend.c:807:     register counter_t source_word = wordindex(source_start);
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5987              		.loc 1 807 24 view .LVU2046
 5988 23a2 4989F1   		mov	r9, rsi	# source_word, source_start
 5989              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5990              		.loc 1 805 69 view .LVU2047
 5991 23a5 4C89C2   		mov	rdx, r8	# _5, copy_start
 5992              	.LVL260:
 5993              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5994              		.loc 1 805 31 view .LVU2048
 5995 23a8 4989CF   		mov	r15, rcx	# shift, _4
 5996              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5997              		.loc 1 810 41 view .LVU2049
 5998 23ab 4D8D6101 		lea	r12, 1[r9]	# tmp.369,
 5999              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
GAS LISTING /tmp/ccW4ZvF5.s 			page 169


 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6000              		.loc 1 805 69 view .LVU2050
 6001 23af 83E23F   		and	edx, 63	# _5,
 6002              	.LVL261:
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6003              		.loc 1 806 5 is_stmt 1 view .LVU2051
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6004              		.loc 1 807 5 view .LVU2052
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6005              		.loc 1 808 5 view .LVU2053
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6006              		.loc 1 809 5 view .LVU2054
 6007              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6008              		.loc 1 805 31 is_stmt 0 view .LVU2055
 6009 23b2 4929D7   		sub	r15, rdx	# shift, _5
 6010              	.LVL262:
 6011              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6012              		.loc 1 816 41 view .LVU2056
 6013 23b5 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
 6014              	.LVL263:
 6015              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6016              		.loc 1 809 25 view .LVU2057
 6017 23b9 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6017      00000000 
 6018              	# sieve_extend.c:806:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6019              		.loc 1 806 31 view .LVU2058
 6020 23c1 4829CA   		sub	rdx, rcx	# tmp550, _4
 6021              	.LVL264:
 6022              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6023              		.loc 1 809 38 view .LVU2059
 6024 23c4 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 6024      00000000 
 6025              	# sieve_extend.c:806:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6026              		.loc 1 806 31 view .LVU2060
 6027 23cc 4883C240 		add	rdx, 64	# shift_flipped,
 6028              	.LVL265:
 6029              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 6030              		.loc 1 811 33 view .LVU2061
 6031 23d0 41F7D0   		not	r8d	# tmp557
 6032              	.LVL266:
 6033              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6034              		.loc 1 810 57 view .LVU2062
 6035 23d3 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 6035      6C0708
 6036              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6037              		.loc 1 809 52 view .LVU2063
 6038 23da 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 6039              	.LVL267:
GAS LISTING /tmp/ccW4ZvF5.s 			page 170


 6040              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 6041              		.loc 1 811 33 view .LVU2064
 6042 23de 48C7C1FF 		mov	rcx, -1	# tmp560,
 6042      FFFFFF
 6043              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6044              		.loc 1 809 52 view .LVU2065
 6045 23e5 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 6045      CF
 6046              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 6047              		.loc 1 811 33 view .LVU2066
 6048 23ea C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 6048      C1
 6049              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6050              		.loc 1 809 52 view .LVU2067
 6051 23ef 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 6051      48
 6052              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6053              		.loc 1 810 30 view .LVU2068
 6054 23f4 4D09E9   		or	r9, r13	# tmp556, tmp552
 6055              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 6056              		.loc 1 811 30 view .LVU2069
 6057 23f7 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 6057      E9
 6058              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6059              		.loc 1 809 25 view .LVU2070
 6060 23fc 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 813:sieve_extend.c ****     source_word++;
 6061              		.loc 1 813 5 is_stmt 1 view .LVU2071
 6062              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6063              		.loc 1 816 21 is_stmt 0 view .LVU2072
 6064 2400 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 6065              	.LBB364:
 6066              	.LBB365:
 6067              	# sieve_extend.c:707:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 707:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6068              		.loc 1 707 91 view .LVU2073
 6069 2403 41B90200 		mov	r9d, 2	# tmp564,
 6069      0000
 6070              	.LBE365:
 6071              	.LBE364:
 6072              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6073              		.loc 1 810 57 view .LVU2074
 6074 2409 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 6075              	# sieve_extend.c:813:     copy_word++;
 813:sieve_extend.c ****     source_word++;
 6076              		.loc 1 813 14 view .LVU2075
 6077 240d 4D8D6B01 		lea	r13, 1[r11]	# tmp.370,
 6078              	.LVL268:
GAS LISTING /tmp/ccW4ZvF5.s 			page 171


 814:sieve_extend.c **** 
 6079              		.loc 1 814 5 is_stmt 1 view .LVU2076
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6080              		.loc 1 816 5 view .LVU2077
 6081              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6082              		.loc 1 816 21 is_stmt 0 view .LVU2078
 6083 2411 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 6084 2415 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 6084      50
 6085              	.LVL269:
 817:sieve_extend.c ****     source_word += distance;
 6086              		.loc 1 817 5 is_stmt 1 view .LVU2079
 6087              	.LBB390:
 6088              	.LBI364:
 706:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6089              		.loc 1 706 25 view .LVU2080
 6090              	.LBB387:
 707:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6091              		.loc 1 707 5 view .LVU2081
 6092              	# sieve_extend.c:707:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 707:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6093              		.loc 1 707 91 is_stmt 0 view .LVU2082
 6094 241a 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 6095 241e 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 6096              	# sieve_extend.c:707:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 707:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6097              		.loc 1 707 21 view .LVU2083
 6098 2422 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 6099 2426 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 6099      30
 6100              	.LVL270:
 708:sieve_extend.c ****     counter_t distance = 0;
 6101              		.loc 1 708 5 is_stmt 1 view .LVU2084
 709:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6102              		.loc 1 709 5 view .LVU2085
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6103              		.loc 1 710 5 view .LVU2086
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6104              		.loc 1 710 11 view .LVU2087
 6105 242b 4939FD   		cmp	r13, rdi	# tmp.370, fast_loop_stop_word
 6106 242e 0F83A004 		jnb	.L515	#,
 6106      0000
 6107 2434 4D29D9   		sub	r9, r11	# tmp565, copy_word
 6108 2437 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 6109              	.LVL271:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6110              		.loc 1 710 11 is_stmt 0 view .LVU2088
 6111 243b 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
 6112 243f 498D49FC 		lea	rcx, -4[r9]	# _282,
 6113 2443 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 6114              	.LVL272:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6115              		.loc 1 710 11 view .LVU2089
 6116 2447 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 6117 244a 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 6117      38
GAS LISTING /tmp/ccW4ZvF5.s 			page 172


 6118 244f 488D4808 		lea	rcx, 8[rax]	# tmp787,
 6119 2453 410F9EC1 		setle	r9b	#, tmp570
 6120 2457 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 6121 245a 400F9EC7 		setle	dil	#, tmp574
 6122              	.LVL273:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6123              		.loc 1 710 11 view .LVU2090
 6124 245e 4109F9   		or	r9d, edi	# tmp575, tmp574
 6125 2461 488D7850 		lea	rdi, 80[rax]	# tmp576,
 6126 2465 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 6126      28
 6127 246a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 6128 246d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6128      27
 6129 2472 4883C010 		add	rax, 16	# tmp581,
 6130 2476 4939C6   		cmp	r14, rax	# tmp571, tmp581
 6131 2479 400F9EC7 		setle	dil	#, tmp583
 6132 247d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 6132      27
 6133 2482 4421CF   		and	edi, r9d	# tmp585, tmp575
 6134 2485 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6134      380B
 6135 248b 410F97C1 		seta	r9b	#, tmp587
 6136 248f 4421CF   		and	edi, r9d	# tmp588, tmp587
 6137 2492 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 6138 2496 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 6139 2499 410F9EC2 		setle	r10b	#, tmp592
 6140 249d 4883C640 		add	rsi, 64	# tmp593,
 6141 24a1 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 6142 24a4 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6142      27
 6143 24a9 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 6143      27
 6144 24ae 4421D7   		and	edi, r10d	# tmp598, tmp597
 6145 24b1 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
 6145      28
 6146 24b6 410F9EC2 		setle	r10b	#, tmp602
 6147 24ba 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 6148 24bd 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6148      28
 6149 24c2 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 6149      28
 6150 24c7 4484D7   		test	dil, r10b	# tmp598, tmp607
 6151 24ca 0F84E80C 		je	.L516	#,
 6151      0000
 6152 24d0 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 6153 24d3 410F9EC6 		setle	r14b	#, tmp612
 6154 24d7 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 6155 24da 400F9EC6 		setle	sil	#, tmp616
 6156 24de 4108F6   		or	r14b, sil	# tmp612, tmp616
 6157 24e1 0F84D10C 		je	.L516	#,
 6157      0000
 6158 24e7 4801D9   		add	rcx, rbx	# vectp.391, bitarray
 6159 24ea 4801D8   		add	rax, rbx	# vectp.395, bitarray
 6160              	.LBB366:
 6161              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW4ZvF5.s 			page 173


 6162              		.loc 1 712 19 view .LVU2091
 6163 24ed C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], MEM[
 6164 24f1 C4C1796E 		vmovd	xmm3, r15d	# _12,
 6164      DF
 6165 24f6 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B], M
 6165      20
 6166 24fb C5F96EE2 		vmovd	xmm4, edx	# _18,
 6167              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6168              		.loc 1 711 19 view .LVU2092
 6169 24ff C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.391_440, index: ivtmp.446_748, offset: 
 6170              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6171              		.loc 1 712 19 view .LVU2093
 6172 2503 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6173 2507 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B]
 6174              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6175              		.loc 1 711 19 view .LVU2094
 6176 250b C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.391_440, index: ivt
 6176      20
 6177 2510 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 6177      38
 6178              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6179              		.loc 1 712 19 view .LVU2095
 6180 2515 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 6180      C5D8
 6181              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6182              		.loc 1 711 19 view .LVU2096
 6183 251b C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 6183      F2D8
 6184              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6185              		.loc 1 712 19 view .LVU2097
 6186 2521 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 6186      FED8
 6187              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6188              		.loc 1 713 63 view .LVU2098
 6189 2527 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.399, vect_perm_even_457, _18
 6190              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6191              		.loc 1 713 42 view .LVU2099
 6192 252b C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.398, tmp627, _12
 6193              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6194              		.loc 1 715 42 view .LVU2100
 6195 252f C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.401, vect_perm_even_457, _12
 6196              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6197              		.loc 1 715 63 view .LVU2101
 6198 2533 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.402, tmp641, _18
 6199 2537 49C1EE03 		shr	r14, 3	# _282,
 6200              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccW4ZvF5.s 			page 174


 6201              		.loc 1 713 52 view .LVU2102
 6202 253b C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.400, vect__98.398, vect__100.399
 6202      DA
 6203              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6204              		.loc 1 715 52 view .LVU2103
 6205 2540 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.403, vect__110.402, vect__109.401
 6206 2544 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 6207              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6208              		.loc 1 713 31 view .LVU2104
 6209 2548 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.400
 6209      DD01
 6210 254e 4183E201 		and	r10d, 1	# tmp811,
 6211              	.LVL274:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6212              		.loc 1 711 9 is_stmt 1 view .LVU2105
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6213              		.loc 1 712 9 view .LVU2106
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6214              		.loc 1 713 9 view .LVU2107
 6215              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6216              		.loc 1 715 31 is_stmt 0 view .LVU2108
 6217 2552 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.403
 6217      EF01
 6218 2558 4983FE01 		cmp	r14, 1	# bnd.384,
 6219              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6220              		.loc 1 713 31 view .LVU2109
 6221 255c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp634
 6221      1C0B
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6222              		.loc 1 713 31 view .LVU2110
 6223 2562 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
 6224 2566 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp63
 6224      5C0B1001 
 6225 256e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 6226 2572 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp638
 6226      6C0B20
 6227 2579 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp63
 6227      6C0B3001 
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6228              		.loc 1 714 9 is_stmt 1 view .LVU2111
 6229              	.LVL275:
 715:sieve_extend.c ****         copy_word += 2;
 6230              		.loc 1 715 9 view .LVU2112
 6231 2581 41B90100 		mov	r9d, 1	# ivtmp.444,
 6231      0000
 6232              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6233              		.loc 1 715 31 is_stmt 0 view .LVU2113
 6234 2587 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp648
 6234      2C03
 715:sieve_extend.c ****         copy_word += 2;
 6235              		.loc 1 715 31 view .LVU2114
 6236 258d C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp648
GAS LISTING /tmp/ccW4ZvF5.s 			page 175


 6236      6C031001 
 6237 2595 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp652
 6237      7C0320
 6238 259c C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp652
 6238      7C033001 
 716:sieve_extend.c ****         source_word += 2;
 6239              		.loc 1 716 9 is_stmt 1 view .LVU2115
 717:sieve_extend.c ****         distance += 2;
 6240              		.loc 1 717 9 view .LVU2116
 718:sieve_extend.c ****     }
 6241              		.loc 1 718 9 view .LVU2117
 718:sieve_extend.c ****     }
 6242              		.loc 1 718 9 is_stmt 0 view .LVU2118
 6243              	.LBE366:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6244              		.loc 1 710 11 is_stmt 1 view .LVU2119
 6245 25a4 41B84000 		mov	r8d, 64	# ivtmp.446,
 6245      0000
 6246 25aa 0F86EC01 		jbe	.L661	#,
 6246      0000
 6247 25b0 4D85D2   		test	r10, r10	# tmp811
 6248 25b3 0F84A700 		je	.L517	#,
 6248      0000
 6249              	.LBB367:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6250              		.loc 1 711 9 view .LVU2120
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6251              		.loc 1 712 9 view .LVU2121
 6252              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6253              		.loc 1 712 19 is_stmt 0 view .LVU2122
 6254 25b9 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], ME
 6254      40
 6255 25be 4983FE02 		cmp	r14, 2	# bnd.384,
 6256 25c2 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B], 
 6256      60
 6257 25c7 41B90200 		mov	r9d, 2	# ivtmp.444,
 6257      0000
 6258              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6259              		.loc 1 711 19 view .LVU2123
 6260 25cd C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.391_440, index: ivtmp.446_748, offset
 6260      40
 6261              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6262              		.loc 1 712 19 view .LVU2124
 6263 25d2 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B
 6263      D2
 6264 25d7 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B
 6264      C2
 6265              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6266              		.loc 1 711 19 view .LVU2125
 6267 25dc C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.391_440, index: i
 6267      60
 6268              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW4ZvF5.s 			page 176


 6269              		.loc 1 712 19 view .LVU2126
 6270 25e1 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
 6270      DAD8
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6271              		.loc 1 713 9 is_stmt 1 view .LVU2127
 6272              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6273              		.loc 1 711 19 is_stmt 0 view .LVU2128
 6274 25e7 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 6274      ECD8
 6275              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6276              		.loc 1 712 19 view .LVU2129
 6277 25ed C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 6277      F8D8
 6278 25f3 41B88000 		mov	r8d, 128	# ivtmp.446,
 6278      0000
 6279              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6280              		.loc 1 713 42 view .LVU2130
 6281 25f9 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.398, tmp1080, _12
 6282              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6283              		.loc 1 713 63 view .LVU2131
 6284 25fd C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.399, vect_perm_even_457, _18
 6285              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6286              		.loc 1 715 42 view .LVU2132
 6287 2601 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.401, vect_perm_even_457, _12
 6288              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6289              		.loc 1 715 63 view .LVU2133
 6290 2605 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.402, tmp1091, _18
 6291              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6292              		.loc 1 713 52 view .LVU2134
 6293 2609 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.400, vect__98.398, vect__100.399
 6293      CF
 6294              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6295              		.loc 1 715 52 view .LVU2135
 6296 260e C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.403, vect__110.402, vect__109.401
 6296      D2
 6297              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6298              		.loc 1 713 31 view .LVU2136
 6299 2613 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.400
 6299      CD01
 6300              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6301              		.loc 1 715 31 view .LVU2137
 6302 2619 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.403
 6302      D601
 6303              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6304              		.loc 1 713 31 view .LVU2138
 6305 261f C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp1084
GAS LISTING /tmp/ccW4ZvF5.s 			page 177


 6305      4B40
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6306              		.loc 1 713 31 view .LVU2139
 6307 2625 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp1084
 6307      4B5001
 6308 262c C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp1087
 6308      6B60
 6309 2632 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp1087
 6309      6B7001
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6310              		.loc 1 714 9 is_stmt 1 view .LVU2140
 715:sieve_extend.c ****         copy_word += 2;
 6311              		.loc 1 715 9 view .LVU2141
 6312              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6313              		.loc 1 715 31 is_stmt 0 view .LVU2142
 6314 2639 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp1095
 6314      40
 715:sieve_extend.c ****         copy_word += 2;
 6315              		.loc 1 715 31 view .LVU2143
 6316 263e C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp1095
 6316      575001
 6317 2645 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp1098
 6317      60
 6318 264a C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp1098
 6318      777001
 716:sieve_extend.c ****         source_word += 2;
 6319              		.loc 1 716 9 is_stmt 1 view .LVU2144
 717:sieve_extend.c ****         distance += 2;
 6320              		.loc 1 717 9 view .LVU2145
 718:sieve_extend.c ****     }
 6321              		.loc 1 718 9 view .LVU2146
 718:sieve_extend.c ****     }
 6322              		.loc 1 718 9 is_stmt 0 view .LVU2147
 6323              	.LBE367:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6324              		.loc 1 710 11 is_stmt 1 view .LVU2148
 6325 2651 0F864501 		jbe	.L661	#,
 6325      0000
 6326 2657 660F1F84 		.p2align 4
 6326      00000000 
 6326      00
 6327              		.p2align 3
 6328              	.L517:
 6329              	.LBB368:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6330              		.loc 1 711 9 view .LVU2149
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6331              		.loc 1 712 9 view .LVU2150
 6332              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6333              		.loc 1 712 19 is_stmt 0 view .LVU2151
 6334 2660 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B], 
 6334      2400
 6335 2666 4983C102 		add	r9, 2	# ivtmp.444,
 6336 266a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B
 6336      6C0020
GAS LISTING /tmp/ccW4ZvF5.s 			page 178


 6337              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6338              		.loc 1 711 19 view .LVU2152
 6339 2671 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.391_440, index: ivtmp.446_748, offse
 6339      0C01
 6340              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6341              		.loc 1 712 19 view .LVU2153
 6342 2677 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0
 6342      F5
 6343 267c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0
 6343      DD
 6344              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6345              		.loc 1 711 19 view .LVU2154
 6346 2681 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.391_440, index: 
 6346      440120
 6347              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6348              		.loc 1 712 19 view .LVU2155
 6349 2688 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
 6349      FED8
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6350              		.loc 1 713 9 is_stmt 1 view .LVU2156
 6351              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6352              		.loc 1 711 19 is_stmt 0 view .LVU2157
 6353 268e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 6353      E8D8
 6354              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6355              		.loc 1 712 19 view .LVU2158
 6356 2694 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 6356      F3D8
 6357              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6358              		.loc 1 713 42 view .LVU2159
 6359 269a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.398, tmp823, _12
 6360              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6361              		.loc 1 713 63 view .LVU2160
 6362 269e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.399, vect_perm_even_457, _18
 6363              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6364              		.loc 1 715 42 view .LVU2161
 6365 26a2 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.401, vect_perm_even_457, _12
 6366              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6367              		.loc 1 715 63 view .LVU2162
 6368 26a6 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.402, tmp834, _18
 6369              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6370              		.loc 1 713 52 view .LVU2163
 6371 26aa C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.400, vect__98.398, vect__100.399
 6372              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6373              		.loc 1 715 52 view .LVU2164
GAS LISTING /tmp/ccW4ZvF5.s 			page 179


 6374 26ae C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.403, vect__110.402, vect__109.401
 6374      F5
 6375              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6376              		.loc 1 713 31 view .LVU2165
 6377 26b3 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.400
 6377      CA01
 6378              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6379              		.loc 1 715 31 view .LVU2166
 6380 26b9 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.403
 6380      F101
 6381              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6382              		.loc 1 713 31 view .LVU2167
 6383 26bf C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp827
 6383      0C03
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6384              		.loc 1 713 31 view .LVU2168
 6385 26c5 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp827
 6385      4C031001 
 6386 26cd C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp830
 6386      540320
 6387 26d4 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp830
 6387      54033001 
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6388              		.loc 1 714 9 is_stmt 1 view .LVU2169
 715:sieve_extend.c ****         copy_word += 2;
 6389              		.loc 1 715 9 view .LVU2170
 6390              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6391              		.loc 1 715 31 is_stmt 0 view .LVU2171
 6392 26dc C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp838
 6392      3407
 715:sieve_extend.c ****         copy_word += 2;
 6393              		.loc 1 715 31 view .LVU2172
 6394 26e2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp83
 6394      74071001 
 6395 26ea C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp841
 6395      4C0720
 6396 26f1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp841
 6396      4C073001 
 716:sieve_extend.c ****         source_word += 2;
 6397              		.loc 1 716 9 is_stmt 1 view .LVU2173
 717:sieve_extend.c ****         distance += 2;
 6398              		.loc 1 717 9 view .LVU2174
 718:sieve_extend.c ****     }
 6399              		.loc 1 718 9 view .LVU2175
 718:sieve_extend.c ****     }
 6400              		.loc 1 718 9 is_stmt 0 view .LVU2176
 6401              	.LBE368:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6402              		.loc 1 710 11 is_stmt 1 view .LVU2177
 6403              	.LBB369:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6404              		.loc 1 711 9 view .LVU2178
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW4ZvF5.s 			page 180


 6405              		.loc 1 712 9 view .LVU2179
 6406              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6407              		.loc 1 712 19 is_stmt 0 view .LVU2180
 6408 26f9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6408      440040
 6409 2700 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 32B]
 6409      440060
 6410              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6411              		.loc 1 711 19 view .LVU2181
 6412 2707 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.391_440, index: ivtmp.446_748, off
 6412      7C0140
 6413              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6414              		.loc 1 712 19 view .LVU2182
 6415 270e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B],
 6416 2712 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.395_449, index: ivtmp.446_748, offset: 0B]
 6417              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6418              		.loc 1 711 19 view .LVU2183
 6419 2716 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.391_440, index:
 6419      540160
 6420              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6421              		.loc 1 712 19 view .LVU2184
 6422 271d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 6422      CDD8
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6423              		.loc 1 713 9 is_stmt 1 view .LVU2185
 6424              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6425              		.loc 1 711 19 is_stmt 0 view .LVU2186
 6426 2723 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 6426      D2D8
 6427              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6428              		.loc 1 712 19 view .LVU2187
 6429 2729 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 6429      CFD8
 6430              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6431              		.loc 1 713 42 view .LVU2188
 6432 272f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.398, tmp853, _12
 6433              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6434              		.loc 1 713 63 view .LVU2189
 6435 2733 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.399, vect_perm_even_457, _18
 6436              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6437              		.loc 1 715 42 view .LVU2190
 6438 2737 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.401, vect_perm_even_457, _12
 6439              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6440              		.loc 1 715 63 view .LVU2191
 6441 273b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.402, tmp864, _18
 6442              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccW4ZvF5.s 			page 181


 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6443              		.loc 1 713 52 view .LVU2192
 6444 273f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.400, vect__98.398, vect__100.399
 6445              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6446              		.loc 1 715 52 view .LVU2193
 6447 2743 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.403, vect__110.402, vect__109.401
 6448              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6449              		.loc 1 713 31 view .LVU2194
 6450 2747 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.400
 6450      E601
 6451              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6452              		.loc 1 715 31 view .LVU2195
 6453 274d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.403
 6453      EF01
 6454              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6455              		.loc 1 713 31 view .LVU2196
 6456 2753 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.446_748, offset: 0B], tmp857
 6456      640340
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6457              		.loc 1 713 31 view .LVU2197
 6458 275a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 16B], tmp85
 6458      64035001 
 6459 2762 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.446_748, offset: 32B], tmp860
 6459      740360
 6460 2769 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.446_748, offset: 48B], tmp8
 6460      74037001 
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6461              		.loc 1 714 9 is_stmt 1 view .LVU2198
 715:sieve_extend.c ****         copy_word += 2;
 6462              		.loc 1 715 9 view .LVU2199
 6463              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6464              		.loc 1 715 31 is_stmt 0 view .LVU2200
 6465 2771 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.446_748, offset: 0B], tmp868
 6465      6C0740
 715:sieve_extend.c ****         copy_word += 2;
 6466              		.loc 1 715 31 view .LVU2201
 6467 2778 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 16B], tmp868
 6467      6C075001 
 6468 2780 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.446_748, offset: 32B], tmp871
 6468      7C0760
 6469 2787 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.446_748, offset: 48B], tmp87
 6469      7C077001 
 716:sieve_extend.c ****         source_word += 2;
 6470              		.loc 1 716 9 is_stmt 1 view .LVU2202
 717:sieve_extend.c ****         distance += 2;
 6471              		.loc 1 717 9 view .LVU2203
 718:sieve_extend.c ****     }
 6472              		.loc 1 718 9 view .LVU2204
 718:sieve_extend.c ****     }
 6473              		.loc 1 718 9 is_stmt 0 view .LVU2205
 6474              	.LBE369:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccW4ZvF5.s 			page 182


 6475              		.loc 1 710 11 is_stmt 1 view .LVU2206
 6476 278f 4983E880 		sub	r8, -128	# ivtmp.446,
 6477 2793 4D39CE   		cmp	r14, r9	# bnd.384, ivtmp.444
 6478 2796 0F87C4FE 		ja	.L517	#,
 6478      FFFF
 6479              	.L661:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6480              		.loc 1 710 11 is_stmt 0 view .LVU2207
 6481 279c 49C1E603 		sal	r14, 3	# _433,
 6482 27a0 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.386,
 6483 27a4 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.387,
 6483      00
 6484              	.LVL276:
 6485              	.LBB370:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6486              		.loc 1 711 9 is_stmt 1 view .LVU2208
 6487              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6488              		.loc 1 711 37 is_stmt 0 view .LVU2209
 6489 27a9 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 6489      00000000 
 6490              	.LVL277:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6491              		.loc 1 712 9 is_stmt 1 view .LVU2210
 6492              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6493              		.loc 1 713 42 is_stmt 0 view .LVU2211
 6494 27b1 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 6494      34CB
 6495              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6496              		.loc 1 712 19 view .LVU2212
 6497 27b7 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 6497      08
 6498              	.LVL278:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6499              		.loc 1 713 9 is_stmt 1 view .LVU2213
 6500              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6501              		.loc 1 713 63 is_stmt 0 view .LVU2214
 6502 27bc C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 6502      D7
 6503              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6504              		.loc 1 713 52 view .LVU2215
 6505 27c1 4C09D6   		or	rsi, r10	# tmp659, tmp658
 6506              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6507              		.loc 1 715 42 view .LVU2216
 6508 27c4 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 6508      FF
 6509              	.LVL279:
 6510              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6511              		.loc 1 713 52 view .LVU2217
 6512 27c9 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 6513              	.LVL280:
GAS LISTING /tmp/ccW4ZvF5.s 			page 183


 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6514              		.loc 1 714 9 is_stmt 1 view .LVU2218
 6515              	# sieve_extend.c:714:         bitword_t source2 = bitarray[source_word+2];
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6516              		.loc 1 714 37 is_stmt 0 view .LVU2219
 6517 27cd 4C8D4902 		lea	r9, 2[rcx]	# _652,
 6518              	.LVL281:
 715:sieve_extend.c ****         copy_word += 2;
 6519              		.loc 1 715 9 is_stmt 1 view .LVU2220
 6520              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6521              		.loc 1 715 63 is_stmt 0 view .LVU2221
 6522 27d1 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 6522      10
 6523 27d6 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 6523      D8
 6524              	.LVL282:
 6525              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6526              		.loc 1 715 52 view .LVU2222
 6527 27db 4C09DF   		or	rdi, r11	# tmp663, tmp660
 6528              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 6529              		.loc 1 716 19 view .LVU2223
 6530 27de 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 6531              	.LVL283:
 716:sieve_extend.c ****         source_word += 2;
 6532              		.loc 1 716 19 view .LVU2224
 6533              	.LBE370:
 6534              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6535              		.loc 1 710 11 view .LVU2225
 6536 27e2 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6536      30
 6537              	.LBB371:
 6538              	# sieve_extend.c:718:         distance += 2;
 718:sieve_extend.c ****     }
 6539              		.loc 1 718 18 view .LVU2226
 6540 27e7 4D8D5602 		lea	r10, 2[r14]	# distance,
 6541              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6542              		.loc 1 715 52 view .LVU2227
 6543 27eb 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 6543      08
 6544              	.LVL284:
 716:sieve_extend.c ****         source_word += 2;
 6545              		.loc 1 716 9 is_stmt 1 view .LVU2228
 717:sieve_extend.c ****         distance += 2;
 6546              		.loc 1 717 9 view .LVU2229
 718:sieve_extend.c ****     }
 6547              		.loc 1 718 9 view .LVU2230
 718:sieve_extend.c ****     }
 6548              		.loc 1 718 9 is_stmt 0 view .LVU2231
 6549              	.LBE371:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6550              		.loc 1 710 11 is_stmt 1 view .LVU2232
 6551 27f0 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
GAS LISTING /tmp/ccW4ZvF5.s 			page 184


 6552 27f3 0F86D500 		jbe	.L520	#,
 6552      0000
 6553              	.LBB372:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6554              		.loc 1 711 9 view .LVU2233
 6555              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6556              		.loc 1 713 42 is_stmt 0 view .LVU2234
 6557 27f9 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 6558              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6559              		.loc 1 711 37 view .LVU2235
 6560 27fd 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 6560      00000000 
 6561              	.LVL285:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6562              		.loc 1 712 9 is_stmt 1 view .LVU2236
 6563              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6564              		.loc 1 712 19 is_stmt 0 view .LVU2237
 6565 2805 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
 6565      08
 6566              	.LVL286:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6567              		.loc 1 713 9 is_stmt 1 view .LVU2238
 6568              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6569              		.loc 1 713 42 is_stmt 0 view .LVU2239
 6570 280a C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 6570      F6
 6571              	.LVL287:
 6572              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6573              		.loc 1 713 63 view .LVU2240
 6574 280f C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
 6574      CF
 6575              	.LVL288:
 6576              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6577              		.loc 1 713 52 view .LVU2241
 6578 2814 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6579 2817 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 6580              	.LVL289:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6581              		.loc 1 714 9 is_stmt 1 view .LVU2242
 6582              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6583              		.loc 1 715 42 is_stmt 0 view .LVU2243
 6584 281b C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
 6584      FF
 6585              	.LVL290:
 6586              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6587              		.loc 1 715 63 view .LVU2244
 6588 2820 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 6588      10
 6589 2825 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 185


 6589      F2
 6590              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6591              		.loc 1 715 52 view .LVU2245
 6592 282a 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6593              	# sieve_extend.c:714:         bitword_t source2 = bitarray[source_word+2];
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6594              		.loc 1 714 37 view .LVU2246
 6595 282d 4C8D4904 		lea	r9, 4[rcx]	# _682,
 715:sieve_extend.c ****         copy_word += 2;
 6596              		.loc 1 715 9 is_stmt 1 view .LVU2247
 6597              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6598              		.loc 1 715 52 is_stmt 0 view .LVU2248
 6599 2831 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 6599      08
 716:sieve_extend.c ****         source_word += 2;
 6600              		.loc 1 716 9 is_stmt 1 view .LVU2249
 6601              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 6602              		.loc 1 716 19 is_stmt 0 view .LVU2250
 6603 2836 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 6604              	.LVL291:
 717:sieve_extend.c ****         distance += 2;
 6605              		.loc 1 717 9 is_stmt 1 view .LVU2251
 718:sieve_extend.c ****     }
 6606              		.loc 1 718 9 view .LVU2252
 718:sieve_extend.c ****     }
 6607              		.loc 1 718 9 is_stmt 0 view .LVU2253
 6608              	.LBE372:
 6609              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6610              		.loc 1 710 11 view .LVU2254
 6611 283a 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6612              	.LBB373:
 6613              	# sieve_extend.c:718:         distance += 2;
 718:sieve_extend.c ****     }
 6614              		.loc 1 718 18 view .LVU2255
 6615 283d 4D8D5604 		lea	r10, 4[r14]	# distance,
 6616              	.LVL292:
 718:sieve_extend.c ****     }
 6617              		.loc 1 718 18 view .LVU2256
 6618              	.LBE373:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6619              		.loc 1 710 11 is_stmt 1 view .LVU2257
 6620 2841 0F868700 		jbe	.L520	#,
 6620      0000
 6621              	.LBB374:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6622              		.loc 1 711 9 view .LVU2258
 6623              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6624              		.loc 1 711 37 is_stmt 0 view .LVU2259
 6625 2847 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 6625      00000000 
 6626              	.LVL293:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW4ZvF5.s 			page 186


 6627              		.loc 1 712 9 is_stmt 1 view .LVU2260
 6628              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 6629              		.loc 1 716 19 is_stmt 0 view .LVU2261
 6630 284f 4883C006 		add	rax, 6	# copy_word,
 6631              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6632              		.loc 1 712 19 view .LVU2262
 6633 2853 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 6633      08
 6634              	.LVL294:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6635              		.loc 1 713 9 is_stmt 1 view .LVU2263
 6636              	# sieve_extend.c:714:         bitword_t source2 = bitarray[source_word+2];
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6637              		.loc 1 714 37 is_stmt 0 view .LVU2264
 6638 2858 4883C106 		add	rcx, 6	# _712,
 6639              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6640              		.loc 1 713 42 view .LVU2265
 6641 285c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
 6642              	.LVL295:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6643              		.loc 1 713 42 view .LVU2266
 6644 2860 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 6644      F1
 6645              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6646              		.loc 1 713 63 view .LVU2267
 6647 2865 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 6647      CF
 6648              	.LVL296:
 6649              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6650              		.loc 1 713 52 view .LVU2268
 6651 286a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 6652 286d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 6653              	.LVL297:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6654              		.loc 1 714 9 is_stmt 1 view .LVU2269
 715:sieve_extend.c ****         copy_word += 2;
 6655              		.loc 1 715 9 view .LVU2270
 6656              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6657              		.loc 1 715 42 is_stmt 0 view .LVU2271
 6658 2871 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 6658      FF
 6659              	.LVL298:
 6660              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6661              		.loc 1 715 63 view .LVU2272
 6662 2876 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 6662      10
 6663              	.LVL299:
 715:sieve_extend.c ****         copy_word += 2;
 6664              		.loc 1 715 63 view .LVU2273
 6665 287b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 187


 6665      F2
 6666              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6667              		.loc 1 715 52 view .LVU2274
 6668 2880 4809F7   		or	rdi, rsi	# tmp679, tmp676
 6669              	.LBE374:
 6670              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6671              		.loc 1 710 11 view .LVU2275
 6672 2883 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 6673              	.LBB375:
 6674              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6675              		.loc 1 715 52 view .LVU2276
 6676 2886 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 6676      08
 716:sieve_extend.c ****         source_word += 2;
 6677              		.loc 1 716 9 is_stmt 1 view .LVU2277
 6678              	.LVL300:
 717:sieve_extend.c ****         distance += 2;
 6679              		.loc 1 717 9 view .LVU2278
 718:sieve_extend.c ****     }
 6680              		.loc 1 718 9 view .LVU2279
 6681              	# sieve_extend.c:718:         distance += 2;
 718:sieve_extend.c ****     }
 6682              		.loc 1 718 18 is_stmt 0 view .LVU2280
 6683 288b 4D8D5606 		lea	r10, 6[r14]	# distance,
 6684              	.LVL301:
 718:sieve_extend.c ****     }
 6685              		.loc 1 718 18 view .LVU2281
 6686              	.LBE375:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6687              		.loc 1 710 11 is_stmt 1 view .LVU2282
 6688 288f 763D     		jbe	.L520	#,
 6689              	.LBB376:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6690              		.loc 1 711 9 view .LVU2283
 6691              	# sieve_extend.c:711:         bitword_t source0 = bitarray[source_word  ];
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6692              		.loc 1 711 37 is_stmt 0 view .LVU2284
 6693 2891 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 6693      00000000 
 6694              	.LVL302:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6695              		.loc 1 712 9 is_stmt 1 view .LVU2285
 6696              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6697              		.loc 1 712 19 is_stmt 0 view .LVU2286
 6698 2899 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
 6698      08
 6699              	.LVL303:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6700              		.loc 1 713 9 is_stmt 1 view .LVU2287
 6701              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6702              		.loc 1 713 63 is_stmt 0 view .LVU2288
 6703 289e C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 188


 6703      C1
 6704              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6705              		.loc 1 713 42 view .LVU2289
 6706 28a3 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 6707              	.LVL304:
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6708              		.loc 1 713 42 view .LVU2290
 6709 28a7 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 6709      D1
 6710              	.LVL305:
 6711              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6712              		.loc 1 713 52 view .LVU2291
 6713 28ac 4D09C2   		or	r10, r8	# tmp683, tmp682
 6714 28af 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6715              		.loc 1 714 9 is_stmt 1 view .LVU2292
 6716              	.LVL306:
 715:sieve_extend.c ****         copy_word += 2;
 6717              		.loc 1 715 9 view .LVU2293
 6718              	# sieve_extend.c:718:         distance += 2;
 718:sieve_extend.c ****     }
 6719              		.loc 1 718 18 is_stmt 0 view .LVU2294
 6720 28b3 4D8D5608 		lea	r10, 8[r14]	# distance,
 6721              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6722              		.loc 1 715 63 view .LVU2295
 6723 28b7 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 6723      10
 6724              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6725              		.loc 1 715 42 view .LVU2296
 6726 28bc C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 6726      D9
 6727              	.LVL307:
 6728              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6729              		.loc 1 715 63 view .LVU2297
 6730 28c1 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 6730      FE
 6731              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 6732              		.loc 1 715 52 view .LVU2298
 6733 28c6 4909FB   		or	r11, rdi	# tmp687, tmp684
 6734 28c9 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 6734      08
 716:sieve_extend.c ****         source_word += 2;
 6735              		.loc 1 716 9 is_stmt 1 view .LVU2299
 717:sieve_extend.c ****         distance += 2;
 6736              		.loc 1 717 9 view .LVU2300
 718:sieve_extend.c ****     }
 6737              		.loc 1 718 9 view .LVU2301
 6738              	.LVL308:
 718:sieve_extend.c ****     }
 6739              		.loc 1 718 9 is_stmt 0 view .LVU2302
 6740              	.LBE376:
GAS LISTING /tmp/ccW4ZvF5.s 			page 189


 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6741              		.loc 1 710 11 is_stmt 1 view .LVU2303
 6742              	.L520:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6743              		.loc 1 710 11 is_stmt 0 view .LVU2304
 6744 28ce 4D01D4   		add	r12, r10	# tmp.369, distance
 6745 28d1 4D01D5   		add	r13, r10	# tmp.370, distance
 6746              	.LVL309:
 6747              	.L515:
 720:sieve_extend.c **** }
 6748              		.loc 1 720 5 is_stmt 1 view .LVU2305
 720:sieve_extend.c **** }
 6749              		.loc 1 720 5 is_stmt 0 view .LVU2306
 6750              	.LBE387:
 6751              	.LBE390:
 818:sieve_extend.c ****     copy_word += distance;
 6752              		.loc 1 818 5 is_stmt 1 view .LVU2307
 819:sieve_extend.c **** 
 6753              		.loc 1 819 5 view .LVU2308
 821:sieve_extend.c **** 
 6754              		.loc 1 821 6 view .LVU2309
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6755              		.loc 1 824 11 view .LVU2310
 6756              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6757              		.loc 1 824 5 is_stmt 0 view .LVU2311
 6758 28d4 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 6758      50
 6759 28d9 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.370
 6760 28dc 0F82BE0A 		jb	.L537	#,
 6760      0000
 6761 28e2 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 6761      00000000 
 6762 28ea 498D4B01 		lea	rcx, 1[r11]	# tmp.357,
 6763 28ee 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.364,
 6764 28f2 4989C8   		mov	r8, rcx	# niters.363, tmp.357
 6765 28f5 4889F8   		mov	rax, rdi	# tmp698, vectp.364
 6766 28f8 4D29EB   		sub	r11, r13	# tmp700, tmp.370
 6767 28fb 48C1E803 		shr	rax, 3	# tmp698,
 6768 28ff 4D29E8   		sub	r8, r13	# niters.363, tmp.370
 6769 2902 48F7D8   		neg	rax	# tmp699
 6770 2905 41B90500 		mov	r9d, 5	# tmp702,
 6770      0000
 6771 290b 83E003   		and	eax, 3	# prolog_loop_niters.365,
 6772 290e 488D7003 		lea	rsi, 3[rax]	# tmp701,
 6773 2912 4883FE05 		cmp	rsi, 5	# tmp701,
 6774 2916 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 6775 291a 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 6776 291d 0F823F03 		jb	.L522	#,
 6776      0000
 6777 2923 4885C0   		test	rax, rax	# prolog_loop_niters.365
 6778 2926 0F844408 		je	.L538	#,
 6778      0000
 6779              	.LVL310:
 825:sieve_extend.c ****     }
 6780              		.loc 1 825 9 is_stmt 1 view .LVU2312
 6781              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW4ZvF5.s 			page 190


 825:sieve_extend.c ****     }
 6782              		.loc 1 825 94 is_stmt 0 view .LVU2313
 6783 292c 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 6783      08
 6784              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6785              		.loc 1 825 77 view .LVU2314
 6786 2931 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6786      01
 6787              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6788              		.loc 1 825 56 view .LVU2315
 6789 2936 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.364_27], MEM[(uint64_t *)vectp.364_27]
 6790              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6791              		.loc 1 825 94 view .LVU2316
 6792 2939 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 6792      CB
 6793              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6794              		.loc 1 825 56 view .LVU2317
 6795 293e C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.364_27], shift
 6795      F7
 6796              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6797              		.loc 1 825 66 view .LVU2318
 6798 2943 4D09F1   		or	r9, r14	# tmp707, tmp705
 6799 2946 4883F801 		cmp	rax, 1	# prolog_loop_niters.365,
 6800              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6801              		.loc 1 825 77 view .LVU2319
 6802 294a 4989F2   		mov	r10, rsi	# source_word, tmp788
 6803              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6804              		.loc 1 825 66 view .LVU2320
 6805 294d 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6806              		.loc 1 824 43 is_stmt 1 view .LVU2321
 6807              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6808              		.loc 1 824 52 is_stmt 0 view .LVU2322
 6809 2951 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 6810              	.LVL311:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6811              		.loc 1 824 11 is_stmt 1 view .LVU2323
 6812 2955 7456     		je	.L523	#,
 825:sieve_extend.c ****     }
 6813              		.loc 1 825 9 view .LVU2324
 6814              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6815              		.loc 1 825 40 is_stmt 0 view .LVU2325
 6816 2957 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 6816      00000000 
 6817              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6818              		.loc 1 825 94 view .LVU2326
 6819 295f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
GAS LISTING /tmp/ccW4ZvF5.s 			page 191


 6819      4C1B08
 6820              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6821              		.loc 1 825 56 view .LVU2327
 6822 2966 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 6823 296a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 6823      DF
 6824              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6825              		.loc 1 825 66 view .LVU2328
 6826 296f 4D09D9   		or	r9, r11	# tmp712, tmp710
 6827 2972 4883F803 		cmp	rax, 3	# prolog_loop_niters.365,
 6828 2976 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6829              		.loc 1 824 43 is_stmt 1 view .LVU2329
 6830              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6831              		.loc 1 825 77 is_stmt 0 view .LVU2330
 6832 297a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 6832      02
 6833              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6834              		.loc 1 824 52 view .LVU2331
 6835 297f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 6836              	.LVL312:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6837              		.loc 1 824 11 is_stmt 1 view .LVU2332
 6838 2983 7528     		jne	.L523	#,
 825:sieve_extend.c ****     }
 6839              		.loc 1 825 9 view .LVU2333
 6840              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6841              		.loc 1 825 40 is_stmt 0 view .LVU2334
 6842 2985 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 6842      00000000 
 6843              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6844              		.loc 1 825 94 view .LVU2335
 6845 298d C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 6845      7C0B08
 6846              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6847              		.loc 1 825 56 view .LVU2336
 6848 2994 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 6849 2998 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 6849      CB
 6850              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6851              		.loc 1 825 66 view .LVU2337
 6852 299d 4C09CF   		or	rdi, r9	# tmp717, tmp715
 6853              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6854              		.loc 1 825 77 view .LVU2338
 6855 29a0 4D8D5424 		lea	r10, 3[r12]	# source_word,
 6855      03
 6856              	.LVL313:
 6857              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW4ZvF5.s 			page 192


 825:sieve_extend.c ****     }
 6858              		.loc 1 825 66 view .LVU2339
 6859 29a5 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6860              		.loc 1 824 43 is_stmt 1 view .LVU2340
 6861              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6862              		.loc 1 824 52 is_stmt 0 view .LVU2341
 6863 29a9 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 6864              	.LVL314:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6865              		.loc 1 824 11 is_stmt 1 view .LVU2342
 6866              	.L523:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6867              		.loc 1 824 11 is_stmt 0 view .LVU2343
 6868 29ad 4929C0   		sub	r8, rax	# niters.366, prolog_loop_niters.365
 6869 29b0 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.365
 6870 29b3 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 6871 29b7 4C01E8   		add	rax, r13	# tmp723, tmp.370
 6872 29ba 4D89C5   		mov	r13, r8	# bnd.367, niters.366
 6873 29bd 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.376,
 6874 29c1 49C1ED02 		shr	r13, 2	# bnd.367,
 6875 29c5 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.381,
 6876 29c9 49C1E505 		sal	r13, 5	# _733,
 6877              	# sieve_extend.c:818:     source_word += distance;
 818:sieve_extend.c ****     copy_word += distance;
 6878              		.loc 1 818 17 view .LVU2344
 6879 29cd 31C0     		xor	eax, eax	# ivtmp.422
 6880 29cf 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 6881 29d3 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.372,
 6882 29d7 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 6882      2448
 6883 29dd 48C1EE05 		shr	rsi, 5	# tmp797,
 6884 29e1 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 6884      2440
 6885 29e7 4883C601 		add	rsi, 1	# tmp800,
 6886 29eb 83E607   		and	esi, 7	# tmp801,
 6887 29ee 0F841201 		je	.L525	#,
 6887      0000
 6888 29f4 4883FE01 		cmp	rsi, 1	# tmp801,
 6889 29f8 0F84DB00 		je	.L618	#,
 6889      0000
 6890 29fe 4883FE02 		cmp	rsi, 2	# tmp801,
 6891 2a02 0F84AE00 		je	.L619	#,
 6891      0000
 6892 2a08 4883FE03 		cmp	rsi, 3	# tmp801,
 6893 2a0c 0F848000 		je	.L620	#,
 6893      0000
 6894 2a12 4883FE04 		cmp	rsi, 4	# tmp801,
 6895 2a16 7456     		je	.L621	#,
 6896 2a18 4883FE05 		cmp	rsi, 5	# tmp801,
 6897 2a1c 742D     		je	.L622	#,
 6898 2a1e 4883FE06 		cmp	rsi, 6	# tmp801,
 6899 2a22 0F856807 		jne	.L690	#,
 6899      0000
 6900              	.L623:
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 193


 6901              		.loc 1 825 9 is_stmt 1 view .LVU2345
 6902              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6903              		.loc 1 825 56 is_stmt 0 view .LVU2346
 6904 2a28 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 6904      2C03
 6905              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6906              		.loc 1 825 94 view .LVU2347
 6907 2a2e C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.376_264, index: ivtmp.422_731, off
 6907      07
 6908              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6909              		.loc 1 825 56 view .LVU2348
 6910 2a33 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.374, tmp1262, _12
 6910      F2
 6911              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6912              		.loc 1 825 94 view .LVU2349
 6913 2a38 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.378, tmp1263, _18
 6913      CB
 6914              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6915              		.loc 1 825 66 view .LVU2350
 6916 2a3d C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.379, vect__38.374, vect__43.378
 6917              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6918              		.loc 1 825 29 view .LVU2351
 6919 2a41 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6919      0401
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6920              		.loc 1 824 43 is_stmt 1 view .LVU2352
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6921              		.loc 1 824 11 view .LVU2353
 6922 2a47 4883C020 		add	rax, 32	# ivtmp.422,
 6923              	.L622:
 825:sieve_extend.c ****     }
 6924              		.loc 1 825 9 view .LVU2354
 6925              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6926              		.loc 1 825 56 is_stmt 0 view .LVU2355
 6927 2a4b C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6927      0403
 6928              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6929              		.loc 1 825 94 view .LVU2356
 6930 2a51 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6930      07
 6931              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6932              		.loc 1 825 56 view .LVU2357
 6933 2a56 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.374, tmp1264, _12
 6933      EA
 6934              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6935              		.loc 1 825 94 view .LVU2358
 6936 2a5b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.378, tmp1265, _18
GAS LISTING /tmp/ccW4ZvF5.s 			page 194


 6936      FB
 6937              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6938              		.loc 1 825 66 view .LVU2359
 6939 2a60 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.379, vect__38.374, vect__43.378
 6940              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6941              		.loc 1 825 29 view .LVU2360
 6942 2a64 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6942      1C01
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6943              		.loc 1 824 43 is_stmt 1 view .LVU2361
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6944              		.loc 1 824 11 view .LVU2362
 6945 2a6a 4883C020 		add	rax, 32	# ivtmp.422,
 6946              	.L621:
 825:sieve_extend.c ****     }
 6947              		.loc 1 825 9 view .LVU2363
 6948              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6949              		.loc 1 825 56 is_stmt 0 view .LVU2364
 6950 2a6e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6950      1403
 6951              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6952              		.loc 1 825 94 view .LVU2365
 6953 2a74 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6953      07
 6954              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6955              		.loc 1 825 56 view .LVU2366
 6956 2a79 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.374, tmp1266, _12
 6956      F2
 6957              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6958              		.loc 1 825 94 view .LVU2367
 6959 2a7e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.378, tmp1267, _18
 6959      E3
 6960              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6961              		.loc 1 825 66 view .LVU2368
 6962 2a83 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.379, vect__38.374, vect__43.378
 6962      EC
 6963              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6964              		.loc 1 825 29 view .LVU2369
 6965 2a88 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], 
 6965      2C01
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6966              		.loc 1 824 43 is_stmt 1 view .LVU2370
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6967              		.loc 1 824 11 view .LVU2371
 6968 2a8e 4883C020 		add	rax, 32	# ivtmp.422,
 6969              	.L620:
 825:sieve_extend.c ****     }
 6970              		.loc 1 825 9 view .LVU2372
 6971              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW4ZvF5.s 			page 195


 825:sieve_extend.c ****     }
 6972              		.loc 1 825 56 is_stmt 0 view .LVU2373
 6973 2a92 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 6973      3403
 6974              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6975              		.loc 1 825 94 view .LVU2374
 6976 2a98 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6976      07
 6977              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6978              		.loc 1 825 56 view .LVU2375
 6979 2a9d C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.374, tmp1268, _12
 6979      FA
 6980              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6981              		.loc 1 825 94 view .LVU2376
 6982 2aa2 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.378, tmp1269, _18
 6982      C3
 6983              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6984              		.loc 1 825 66 view .LVU2377
 6985 2aa7 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.379, vect__38.374, vect__43.378
 6985      C0
 6986              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6987              		.loc 1 825 29 view .LVU2378
 6988 2aac C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 6988      0401
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6989              		.loc 1 824 43 is_stmt 1 view .LVU2379
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6990              		.loc 1 824 11 view .LVU2380
 6991 2ab2 4883C020 		add	rax, 32	# ivtmp.422,
 6992              	.L619:
 825:sieve_extend.c ****     }
 6993              		.loc 1 825 9 view .LVU2381
 6994              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6995              		.loc 1 825 56 is_stmt 0 view .LVU2382
 6996 2ab6 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 6996      2C03
 6997              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 6998              		.loc 1 825 94 view .LVU2383
 6999 2abc C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 6999      07
 7000              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7001              		.loc 1 825 56 view .LVU2384
 7002 2ac1 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.374, tmp1270, _12
 7002      CA
 7003              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7004              		.loc 1 825 94 view .LVU2385
 7005 2ac6 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.378, tmp1271, _18
 7005      DB
GAS LISTING /tmp/ccW4ZvF5.s 			page 196


 7006              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7007              		.loc 1 825 66 view .LVU2386
 7008 2acb C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.379, vect__38.374, vect__43.378
 7009              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7010              		.loc 1 825 29 view .LVU2387
 7011 2acf C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 7011      1401
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7012              		.loc 1 824 43 is_stmt 1 view .LVU2388
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7013              		.loc 1 824 11 view .LVU2389
 7014 2ad5 4883C020 		add	rax, 32	# ivtmp.422,
 7015              	.L618:
 825:sieve_extend.c ****     }
 7016              		.loc 1 825 9 view .LVU2390
 7017              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7018              		.loc 1 825 56 is_stmt 0 view .LVU2391
 7019 2ad9 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.372_257, index: ivtmp.422_731, offs
 7019      3403
 7020              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7021              		.loc 1 825 94 view .LVU2392
 7022 2adf C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 7022      07
 7023              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7024              		.loc 1 825 56 view .LVU2393
 7025 2ae4 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.374, tmp1272, _12
 7025      E2
 7026              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7027              		.loc 1 825 94 view .LVU2394
 7028 2ae9 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.378, tmp1273, _18
 7028      EB
 7029              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7030              		.loc 1 825 66 view .LVU2395
 7031 2aee C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.379, vect__38.374, vect__43.378
 7031      F5
 7032              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7033              		.loc 1 825 29 view .LVU2396
 7034 2af3 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], 
 7034      3401
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7035              		.loc 1 824 43 is_stmt 1 view .LVU2397
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7036              		.loc 1 824 11 view .LVU2398
 7037 2af9 4883C020 		add	rax, 32	# ivtmp.422,
 7038 2afd 4C39E8   		cmp	rax, r13	# ivtmp.422, _733
 7039 2b00 0F844401 		je	.L666	#,
 7039      0000
 7040              	.L525:
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 197


 7041              		.loc 1 825 9 discriminator 2 view .LVU2399
 7042              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7043              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2400
 7044 2b06 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.372_257, index: ivtmp.422_731, off
 7044      3C03
 7045              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7046              		.loc 1 825 94 discriminator 2 view .LVU2401
 7047 2b0c C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.376_264, index: ivtmp.422_731, offs
 7047      07
 7048              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7049              		.loc 1 825 56 discriminator 2 view .LVU2402
 7050 2b11 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.374, tmp1206, _12
 7050      CA
 7051              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7052              		.loc 1 825 94 discriminator 2 view .LVU2403
 7053 2b16 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.378, tmp1207, _18
 7053      C3
 7054              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7055              		.loc 1 825 66 discriminator 2 view .LVU2404
 7056 2b1b C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.379, vect__38.374, vect__43.378
 7057              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7058              		.loc 1 825 29 discriminator 2 view .LVU2405
 7059 2b1f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], v
 7059      2C01
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7060              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2406
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7061              		.loc 1 824 11 discriminator 2 view .LVU2407
 825:sieve_extend.c ****     }
 7062              		.loc 1 825 9 discriminator 2 view .LVU2408
 7063              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7064              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2409
 7065 2b25 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.372_257, index: ivtmp.422_731, of
 7065      4C0320
 7066              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7067              		.loc 1 825 94 discriminator 2 view .LVU2410
 7068 2b2c C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.376_264, index: ivtmp.422_731, of
 7068      0720
 7069              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7070              		.loc 1 825 56 discriminator 2 view .LVU2411
 7071 2b32 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.374, tmp1208, _12
 7071      FA
 7072              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7073              		.loc 1 825 94 discriminator 2 view .LVU2412
 7074 2b37 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.378, tmp1209, _18
 7074      D3
 7075              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW4ZvF5.s 			page 198


 825:sieve_extend.c ****     }
 7076              		.loc 1 825 66 discriminator 2 view .LVU2413
 7077 2b3c C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.379, vect__38.374, vect__43.378
 7078              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7079              		.loc 1 825 29 discriminator 2 view .LVU2414
 7080 2b40 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B],
 7080      740120
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7081              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2415
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7082              		.loc 1 824 11 discriminator 2 view .LVU2416
 825:sieve_extend.c ****     }
 7083              		.loc 1 825 9 discriminator 2 view .LVU2417
 7084              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7085              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2418
 7086 2b47 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7086      640340
 7087              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7088              		.loc 1 825 94 discriminator 2 view .LVU2419
 7089 2b4e C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.376_264, index: ivtmp.422_731, of
 7089      0740
 7090              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7091              		.loc 1 825 56 discriminator 2 view .LVU2420
 7092 2b54 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.374, tmp1210, _12
 7092      EA
 7093              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7094              		.loc 1 825 94 discriminator 2 view .LVU2421
 7095 2b59 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.378, tmp1211, _18
 7095      F3
 7096              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7097              		.loc 1 825 66 discriminator 2 view .LVU2422
 7098 2b5e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.379, vect__38.374, vect__43.378
 7098      FE
 7099              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7100              		.loc 1 825 29 discriminator 2 view .LVU2423
 7101 2b63 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7101      7C0140
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7102              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2424
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7103              		.loc 1 824 11 discriminator 2 view .LVU2425
 825:sieve_extend.c ****     }
 7104              		.loc 1 825 9 discriminator 2 view .LVU2426
 7105              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7106              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2427
 7107 2b6a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.372_257, index: ivtmp.422_731, of
 7107      4C0360
 7108              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 199


 7109              		.loc 1 825 94 discriminator 2 view .LVU2428
 7110 2b71 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.376_264, index: ivtmp.422_731, of
 7110      0760
 7111              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7112              		.loc 1 825 56 discriminator 2 view .LVU2429
 7113 2b77 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.374, tmp1212, _12
 7113      C2
 7114              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7115              		.loc 1 825 94 discriminator 2 view .LVU2430
 7116 2b7c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.378, tmp1213, _18
 7116      EB
 7117              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7118              		.loc 1 825 66 discriminator 2 view .LVU2431
 7119 2b81 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.379, vect__38.374, vect__43.378
 7120              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7121              		.loc 1 825 29 discriminator 2 view .LVU2432
 7122 2b85 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B],
 7122      4C0160
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7123              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2433
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7124              		.loc 1 824 11 discriminator 2 view .LVU2434
 825:sieve_extend.c ****     }
 7125              		.loc 1 825 9 discriminator 2 view .LVU2435
 7126              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7127              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2436
 7128 2b8c C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7128      BC038000 
 7128      0000
 7129              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7130              		.loc 1 825 94 discriminator 2 view .LVU2437
 7131 2b96 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7131      07800000 
 7131      00
 7132              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7133              		.loc 1 825 56 discriminator 2 view .LVU2438
 7134 2b9f C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.374, tmp1214, _12
 7134      D2
 7135              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7136              		.loc 1 825 94 discriminator 2 view .LVU2439
 7137 2ba4 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.378, tmp1215, _18
 7137      F3
 7138              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7139              		.loc 1 825 66 discriminator 2 view .LVU2440
 7140 2ba9 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.379, vect__38.374, vect__43.378
 7141              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7142              		.loc 1 825 29 discriminator 2 view .LVU2441
GAS LISTING /tmp/ccW4ZvF5.s 			page 200


 7143 2bad C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B
 7143      A4018000 
 7143      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7144              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2442
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7145              		.loc 1 824 11 discriminator 2 view .LVU2443
 825:sieve_extend.c ****     }
 7146              		.loc 1 825 9 discriminator 2 view .LVU2444
 7147              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7148              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2445
 7149 2bb7 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.372_257, index: ivtmp.422_731, 
 7149      AC03A000 
 7149      0000
 7150              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7151              		.loc 1 825 94 discriminator 2 view .LVU2446
 7152 2bc1 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7152      07A00000 
 7152      00
 7153              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7154              		.loc 1 825 56 discriminator 2 view .LVU2447
 7155 2bca C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.374, tmp1216, _12
 7155      F2
 7156              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7157              		.loc 1 825 94 discriminator 2 view .LVU2448
 7158 2bcf C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.378, tmp1217, _18
 7158      FB
 7159              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7160              		.loc 1 825 66 discriminator 2 view .LVU2449
 7161 2bd4 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.379, vect__38.374, vect__43.378
 7161      CF
 7162              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7163              		.loc 1 825 29 discriminator 2 view .LVU2450
 7164 2bd9 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7164      8C01A000 
 7164      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7165              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2451
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7166              		.loc 1 824 11 discriminator 2 view .LVU2452
 825:sieve_extend.c ****     }
 7167              		.loc 1 825 9 discriminator 2 view .LVU2453
 7168              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7169              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2454
 7170 2be3 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7170      8403C000 
 7170      0000
 7171              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7172              		.loc 1 825 94 discriminator 2 view .LVU2455
GAS LISTING /tmp/ccW4ZvF5.s 			page 201


 7173 2bed C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7173      07C00000 
 7173      00
 7174              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7175              		.loc 1 825 56 discriminator 2 view .LVU2456
 7176 2bf6 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.374, tmp1218, _12
 7176      C2
 7177              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7178              		.loc 1 825 94 discriminator 2 view .LVU2457
 7179 2bfb C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.378, tmp1219, _18
 7179      CB
 7180              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7181              		.loc 1 825 66 discriminator 2 view .LVU2458
 7182 2c00 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.379, vect__38.374, vect__43.378
 7182      F9
 7183              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7184              		.loc 1 825 29 discriminator 2 view .LVU2459
 7185 2c05 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B]
 7185      BC01C000 
 7185      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7186              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2460
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7187              		.loc 1 824 11 discriminator 2 view .LVU2461
 825:sieve_extend.c ****     }
 7188              		.loc 1 825 9 discriminator 2 view .LVU2462
 7189              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7190              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU2463
 7191 2c0f C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.372_257, index: ivtmp.422_731, o
 7191      9403E000 
 7191      0000
 7192              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7193              		.loc 1 825 94 discriminator 2 view .LVU2464
 7194 2c19 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.376_264, index: ivtmp.422_731, o
 7194      07E00000 
 7194      00
 7195              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7196              		.loc 1 825 56 discriminator 2 view .LVU2465
 7197 2c22 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.374, tmp1220, _12
 7197      F2
 7198              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7199              		.loc 1 825 94 discriminator 2 view .LVU2466
 7200 2c27 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.378, tmp1221, _18
 7200      E3
 7201              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7202              		.loc 1 825 66 discriminator 2 view .LVU2467
 7203 2c2c C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.379, vect__38.374, vect__43.378
 7203      EC
GAS LISTING /tmp/ccW4ZvF5.s 			page 202


 7204              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7205              		.loc 1 825 29 discriminator 2 view .LVU2468
 7206 2c31 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B
 7206      AC01E000 
 7206      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7207              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU2469
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7208              		.loc 1 824 11 discriminator 2 view .LVU2470
 7209 2c3b 48050001 		add	rax, 256	# ivtmp.422,
 7209      0000
 7210 2c41 4C39E8   		cmp	rax, r13	# ivtmp.422, _733
 7211 2c44 0F85BCFE 		jne	.L525	#,
 7211      FFFF
 7212              	.L666:
 7213 2c4a 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.368, niters.366
 7214 2c4d 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.368,
 7215 2c51 4D39D8   		cmp	r8, r11	# niters.366, niters_vector_mult_vf.368
 7216 2c54 4F8D241A 		lea	r12, [r10+r11]	# tmp.369,
 7217 2c58 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.370,
 7218 2c5c 0F84DA00 		je	.L521	#,
 7218      0000
 7219              	.L522:
 7220              	.LVL315:
 825:sieve_extend.c ****     }
 7221              		.loc 1 825 9 view .LVU2471
 7222              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7223              		.loc 1 824 5 is_stmt 0 view .LVU2472
 7224 2c62 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 7224      50
 7225              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7226              		.loc 1 824 52 view .LVU2473
 7227 2c67 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 7228              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7229              		.loc 1 825 94 view .LVU2474
 7230 2c6b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 7230      44E308
 7231              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7232              		.loc 1 825 56 view .LVU2475
 7233 2c72 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 7233      34E3
 7234              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7235              		.loc 1 825 66 view .LVU2476
 7236 2c78 4D09F0   		or	r8, r14	# tmp737, tmp735
 7237              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7238              		.loc 1 825 77 view .LVU2477
 7239 2c7b 4D8D5424 		lea	r10, 1[r12]	# _519,
 7239      01
 7240              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 203


 7241              		.loc 1 825 66 view .LVU2478
 7242 2c80 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7243              		.loc 1 824 43 is_stmt 1 view .LVU2479
 7244              	.LVL316:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7245              		.loc 1 824 11 view .LVU2480
 7246              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7247              		.loc 1 824 5 is_stmt 0 view .LVU2481
 7248 2c84 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
 7249 2c87 0F82AF00 		jb	.L521	#,
 7249      0000
 825:sieve_extend.c ****     }
 7250              		.loc 1 825 9 is_stmt 1 view .LVU2482
 7251              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7252              		.loc 1 825 56 is_stmt 0 view .LVU2483
 7253 2c8d 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 7254              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7255              		.loc 1 825 94 view .LVU2484
 7256 2c91 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 7256      74D308
 7257              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7258              		.loc 1 824 52 view .LVU2485
 7259 2c98 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 7260              	.LVL317:
 7261              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7262              		.loc 1 825 56 view .LVU2486
 7263 2c9c C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 7263      C7
 7264              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7265              		.loc 1 825 66 view .LVU2487
 7266 2ca1 4809C6   		or	rsi, rax	# tmp742, tmp740
 7267              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7268              		.loc 1 824 5 view .LVU2488
 7269 2ca4 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7270              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7271              		.loc 1 825 66 view .LVU2489
 7272 2ca7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7273              		.loc 1 824 43 is_stmt 1 view .LVU2490
 7274              	.LVL318:
 7275              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7276              		.loc 1 825 77 is_stmt 0 view .LVU2491
 7277 2cab 4D8D4424 		lea	r8, 2[r12]	# _536,
 7277      02
 7278              	.LVL319:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7279              		.loc 1 824 11 is_stmt 1 view .LVU2492
GAS LISTING /tmp/ccW4ZvF5.s 			page 204


 7280              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7281              		.loc 1 824 5 is_stmt 0 view .LVU2493
 7282 2cb0 0F828600 		jb	.L521	#,
 7282      0000
 825:sieve_extend.c ****     }
 7283              		.loc 1 825 9 is_stmt 1 view .LVU2494
 7284              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7285              		.loc 1 825 94 is_stmt 0 view .LVU2495
 7286 2cb6 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
 7286      4CC308
 7287              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7288              		.loc 1 825 56 view .LVU2496
 7289 2cbd 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 7290              	.LVL320:
 825:sieve_extend.c ****     }
 7291              		.loc 1 825 56 view .LVU2497
 7292 2cc1 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 7292      F0
 7293              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7294              		.loc 1 825 66 view .LVU2498
 7295 2cc6 4909F1   		or	r9, rsi	# tmp747, tmp745
 7296 2cc9 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7297              		.loc 1 824 43 is_stmt 1 view .LVU2499
 7298              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7299              		.loc 1 824 52 is_stmt 0 view .LVU2500
 7300 2ccd 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 7301              	.LVL321:
 7302              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7303              		.loc 1 824 5 view .LVU2501
 7304 2cd1 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7305              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7306              		.loc 1 825 77 view .LVU2502
 7307 2cd4 4D8D7424 		lea	r14, 3[r12]	# _553,
 7307      03
 7308              	.LVL322:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7309              		.loc 1 824 11 is_stmt 1 view .LVU2503
 7310              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7311              		.loc 1 824 5 is_stmt 0 view .LVU2504
 7312 2cd9 7261     		jb	.L521	#,
 825:sieve_extend.c ****     }
 7313              		.loc 1 825 9 is_stmt 1 view .LVU2505
 7314              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7315              		.loc 1 825 94 is_stmt 0 view .LVU2506
 7316 2cdb C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 7316      44F308
 7317              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW4ZvF5.s 			page 205


 825:sieve_extend.c ****     }
 7318              		.loc 1 825 56 view .LVU2507
 7319 2ce2 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 7320 2ce6 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 7320      F7
 7321              	.LVL323:
 7322              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7323              		.loc 1 825 66 view .LVU2508
 7324 2ceb 4C09F0   		or	rax, r14	# tmp752, tmp750
 7325 2cee 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7326              		.loc 1 824 43 is_stmt 1 view .LVU2509
 7327              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7328              		.loc 1 824 52 is_stmt 0 view .LVU2510
 7329 2cf2 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 7330              	.LVL324:
 7331              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7332              		.loc 1 824 5 view .LVU2511
 7333 2cf6 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7334              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7335              		.loc 1 825 77 view .LVU2512
 7336 2cf9 4D8D4C24 		lea	r9, 4[r12]	# _570,
 7336      04
 7337              	.LVL325:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7338              		.loc 1 824 11 is_stmt 1 view .LVU2513
 7339              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7340              		.loc 1 824 5 is_stmt 0 view .LVU2514
 7341 2cfe 723C     		jb	.L521	#,
 825:sieve_extend.c ****     }
 7342              		.loc 1 825 9 is_stmt 1 view .LVU2515
 7343              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7344              		.loc 1 824 52 is_stmt 0 view .LVU2516
 7345 2d00 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 7346              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7347              		.loc 1 825 94 view .LVU2517
 7348 2d04 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 7348      44CB08
 7349              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7350              		.loc 1 825 56 view .LVU2518
 7351 2d0b 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
 7352 2d0f C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 7352      CE
 7353              	.LVL326:
 7354              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7355              		.loc 1 825 66 view .LVU2519
 7356 2d14 4D09C8   		or	r8, r9	# tmp757, tmp755
 7357              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 206


 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7358              		.loc 1 824 5 view .LVU2520
 7359 2d17 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 7360              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7361              		.loc 1 825 66 view .LVU2521
 7362 2d1a 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7363              		.loc 1 824 43 is_stmt 1 view .LVU2522
 7364              	.LVL327:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7365              		.loc 1 824 11 view .LVU2523
 7366              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7367              		.loc 1 825 77 is_stmt 0 view .LVU2524
 7368 2d1e 4D8D6424 		lea	r12, 5[r12]	# _587,
 7368      05
 7369              	.LVL328:
 7370              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7371              		.loc 1 824 5 view .LVU2525
 7372 2d23 7217     		jb	.L521	#,
 825:sieve_extend.c ****     }
 7373              		.loc 1 825 9 is_stmt 1 view .LVU2526
 7374              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7375              		.loc 1 825 56 is_stmt 0 view .LVU2527
 7376 2d25 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 7377              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7378              		.loc 1 825 94 view .LVU2528
 7379 2d29 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 7379      54E308
 7380              	.LVL329:
 7381              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7382              		.loc 1 825 56 view .LVU2529
 7383 2d30 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 7383      FB
 7384              	.LVL330:
 7385              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 7386              		.loc 1 825 66 view .LVU2530
 7387 2d35 4C09FA   		or	rdx, r15	# tmp762, tmp760
 7388 2d38 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7389              		.loc 1 824 43 is_stmt 1 view .LVU2531
 7390              	.LVL331:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7391              		.loc 1 824 11 view .LVU2532
 7392              	.L521:
 828:sieve_extend.c **** 
 7393              		.loc 1 828 5 view .LVU2533
 7394              	# sieve_extend.c:828:     if (copy_word >= destination_stop_word) return;
 828:sieve_extend.c **** 
 7395              		.loc 1 828 8 is_stmt 0 view .LVU2534
 7396 2d3c 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
GAS LISTING /tmp/ccW4ZvF5.s 			page 207


 7396      58
 7397 2d41 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.357
 7398 2d44 0F860E04 		jbe	.L687	#,
 7398      0000
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7399              		.loc 1 830 5 is_stmt 1 view .LVU2535
 7400              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7401              		.loc 1 830 17 is_stmt 0 view .LVU2536
 7402 2d4a 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 7402      18
 7403 2d4f 4989CC   		mov	r12, rcx	# tmp.356, tmp.357
 7404              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7405              		.loc 1 834 21 view .LVU2537
 7406 2d52 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.417,
 7407              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7408              		.loc 1 830 17 view .LVU2538
 7409 2d56 4929FC   		sub	r12, rdi	# tmp.356, size
 7410              	.LVL332:
 831:sieve_extend.c **** 
 7411              		.loc 1 831 5 is_stmt 1 view .LVU2539
 7412              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7413              		.loc 1 834 5 is_stmt 0 view .LVU2540
 7414 2d59 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.417
 7415              	# sieve_extend.c:831:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 831:sieve_extend.c **** 
 7416              		.loc 1 831 18 view .LVU2541
 7417 2d5c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 7417      00000000 
 7418              	.LVL333:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7419              		.loc 1 834 11 is_stmt 1 view .LVU2542
 7420              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7421              		.loc 1 834 5 is_stmt 0 view .LVU2543
 7422 2d64 0F826B01 		jb	.L528	#,
 7422      0000
 7423 2d6a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 7424 2d6e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 7424      00000000 
 7425              	.LVL334:
 7426              	# sieve_extend.c:835:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 835:sieve_extend.c **** 
 7427              		.loc 1 835 38 view .LVU2544
 7428 2d76 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 7429 2d7a 4929CD   		sub	r13, rcx	# _437, tmp766
 7430 2d7d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.356
 7430      48
 7431 2d82 4989FC   		mov	r12, rdi	# size, size
 7432              	.LVL335:
 835:sieve_extend.c **** 
 7433              		.loc 1 835 38 view .LVU2545
 7434 2d85 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7434      40
GAS LISTING /tmp/ccW4ZvF5.s 			page 208


 7435 2d8a 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 7436              	.LVL336:
 835:sieve_extend.c **** 
 7437              		.loc 1 835 38 view .LVU2546
 7438 2d8d C5F877   		vzeroupper
 7439              	.LVL337:
 7440              	.L529:
 835:sieve_extend.c **** 
 7441              		.loc 1 835 9 is_stmt 1 discriminator 2 view .LVU2547
 7442              	.LBB391:
 7443              	.LBI391:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7444              		.loc 2 31 1 discriminator 2 view .LVU2548
 7445              	.LBB392:
 7446              		.loc 2 34 3 discriminator 2 view .LVU2549
 7447              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7448              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2550
 7449 2d90 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 7449      00
 7450 2d95 4C89F2   		mov	rdx, r14	#, memsize
 7451 2d98 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.417
 7451      50
 7452 2d9d 4C89FE   		mov	rsi, r15	#, _48
 7453 2da0 E8000000 		call	memcpy@PLT	#
 7453      00
 7454              	.LVL338:
 7455              		.loc 2 34 10 discriminator 2 view .LVU2551
 7456              	.LBE392:
 7457              	.LBE391:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7458              		.loc 1 834 54 is_stmt 1 discriminator 2 view .LVU2552
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7459              		.loc 1 834 11 discriminator 2 view .LVU2553
 7460 2da5 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7460      50
 7461 2daa 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.417,
 7462              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7463              		.loc 1 834 5 is_stmt 0 discriminator 2 view .LVU2554
 7464 2dae 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.417
 7465 2db1 0F820901 		jb	.L675	#,
 7465      0000
 835:sieve_extend.c **** 
 7466              		.loc 1 835 9 is_stmt 1 view .LVU2555
 7467              	.LVL339:
 7468              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7469              		.loc 2 31 1 view .LVU2556
 7470              	.LBB393:
 7471              		.loc 2 34 3 view .LVU2557
 7472              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7473              		.loc 2 34 10 is_stmt 0 view .LVU2558
 7474 2db7 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 7474      00
 7475 2dbc 4C89F2   		mov	rdx, r14	#, memsize
 7476 2dbf 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.417
 7476      50
GAS LISTING /tmp/ccW4ZvF5.s 			page 209


 7477              	.LVL340:
 7478              		.loc 2 34 10 view .LVU2559
 7479 2dc4 4C89FE   		mov	rsi, r15	#, _48
 7480 2dc7 E8000000 		call	memcpy@PLT	#
 7480      00
 7481              	.LVL341:
 7482              		.loc 2 34 10 view .LVU2560
 7483              	.LBE393:
 7484              	.LBE400:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7485              		.loc 1 834 54 is_stmt 1 view .LVU2561
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7486              		.loc 1 834 11 view .LVU2562
 7487 2dcc 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7487      50
 7488 2dd1 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.417,
 7489              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7490              		.loc 1 834 5 is_stmt 0 view .LVU2563
 7491 2dd5 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.417
 7492 2dd8 0F82E200 		jb	.L675	#,
 7492      0000
 835:sieve_extend.c **** 
 7493              		.loc 1 835 9 is_stmt 1 view .LVU2564
 7494              	.LVL342:
 7495              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7496              		.loc 2 31 1 view .LVU2565
 7497              	.LBB394:
 7498              		.loc 2 34 3 view .LVU2566
 7499              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7500              		.loc 2 34 10 is_stmt 0 view .LVU2567
 7501 2dde 4C89FE   		mov	rsi, r15	#, _48
 7502 2de1 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 7502      00
 7503 2de6 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.417
 7503      50
 7504 2deb 4C89F2   		mov	rdx, r14	#, memsize
 7505 2dee E8000000 		call	memcpy@PLT	#
 7505      00
 7506              	.LVL343:
 7507              		.loc 2 34 10 view .LVU2568
 7508              	.LBE394:
 7509              	.LBE401:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7510              		.loc 1 834 54 is_stmt 1 view .LVU2569
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7511              		.loc 1 834 11 view .LVU2570
 7512 2df3 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7512      50
 7513 2df8 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.417,
 7514              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7515              		.loc 1 834 5 is_stmt 0 view .LVU2571
 7516 2dfc 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.417
 7517 2dff 0F82BB00 		jb	.L675	#,
 7517      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 210


 835:sieve_extend.c **** 
 7518              		.loc 1 835 9 is_stmt 1 view .LVU2572
 7519              	.LVL344:
 7520              	.LBB402:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7521              		.loc 2 31 1 view .LVU2573
 7522              	.LBB395:
 7523              		.loc 2 34 3 view .LVU2574
 7524              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7525              		.loc 2 34 10 is_stmt 0 view .LVU2575
 7526 2e05 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
 7526      00
 7527 2e0a 4C89F2   		mov	rdx, r14	#, memsize
 7528 2e0d 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.417
 7528      50
 7529 2e12 4C89FE   		mov	rsi, r15	#, _48
 7530 2e15 E8000000 		call	memcpy@PLT	#
 7530      00
 7531              	.LVL345:
 7532              		.loc 2 34 10 view .LVU2576
 7533              	.LBE395:
 7534              	.LBE402:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7535              		.loc 1 834 54 is_stmt 1 view .LVU2577
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7536              		.loc 1 834 11 view .LVU2578
 7537 2e1a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7537      50
 7538 2e1f 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.417,
 7539              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7540              		.loc 1 834 5 is_stmt 0 view .LVU2579
 7541 2e23 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.417
 7542 2e26 0F829400 		jb	.L675	#,
 7542      0000
 835:sieve_extend.c **** 
 7543              		.loc 1 835 9 is_stmt 1 view .LVU2580
 7544              	.LVL346:
 7545              	.LBB403:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7546              		.loc 2 31 1 view .LVU2581
 7547              	.LBB396:
 7548              		.loc 2 34 3 view .LVU2582
 7549              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7550              		.loc 2 34 10 is_stmt 0 view .LVU2583
 7551 2e2c 4C89F2   		mov	rdx, r14	#, memsize
 7552 2e2f 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 7552      00
 7553 2e34 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.417
 7553      50
 7554 2e39 4C89FE   		mov	rsi, r15	#, _48
 7555 2e3c E8000000 		call	memcpy@PLT	#
 7555      00
 7556              	.LVL347:
 7557              		.loc 2 34 10 view .LVU2584
 7558              	.LBE396:
 7559              	.LBE403:
GAS LISTING /tmp/ccW4ZvF5.s 			page 211


 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7560              		.loc 1 834 54 is_stmt 1 view .LVU2585
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7561              		.loc 1 834 11 view .LVU2586
 7562 2e41 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7562      50
 7563 2e46 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.417,
 7564              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7565              		.loc 1 834 5 is_stmt 0 view .LVU2587
 7566 2e4a 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.417
 7567 2e4d 7271     		jb	.L675	#,
 835:sieve_extend.c **** 
 7568              		.loc 1 835 9 is_stmt 1 view .LVU2588
 7569              	.LVL348:
 7570              	.LBB404:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7571              		.loc 2 31 1 view .LVU2589
 7572              	.LBB397:
 7573              		.loc 2 34 3 view .LVU2590
 7574              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7575              		.loc 2 34 10 is_stmt 0 view .LVU2591
 7576 2e4f 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 7576      00
 7577 2e54 4C89FE   		mov	rsi, r15	#, _48
 7578 2e57 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.417
 7578      50
 7579 2e5c 4C89F2   		mov	rdx, r14	#, memsize
 7580 2e5f E8000000 		call	memcpy@PLT	#
 7580      00
 7581              	.LVL349:
 7582              		.loc 2 34 10 view .LVU2592
 7583              	.LBE397:
 7584              	.LBE404:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7585              		.loc 1 834 54 is_stmt 1 view .LVU2593
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7586              		.loc 1 834 11 view .LVU2594
 7587 2e64 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7587      50
 7588 2e69 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.417,
 7589              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7590              		.loc 1 834 5 is_stmt 0 view .LVU2595
 7591 2e6d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.417
 7592 2e70 724E     		jb	.L675	#,
 835:sieve_extend.c **** 
 7593              		.loc 1 835 9 is_stmt 1 view .LVU2596
 7594              	.LVL350:
 7595              	.LBB405:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7596              		.loc 2 31 1 view .LVU2597
 7597              	.LBB398:
 7598              		.loc 2 34 3 view .LVU2598
 7599              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7600              		.loc 2 34 10 is_stmt 0 view .LVU2599
 7601 2e72 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
GAS LISTING /tmp/ccW4ZvF5.s 			page 212


 7601      00
 7602 2e77 4C89F2   		mov	rdx, r14	#, memsize
 7603 2e7a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.417
 7603      50
 7604 2e7f 4C89FE   		mov	rsi, r15	#, _48
 7605 2e82 E8000000 		call	memcpy@PLT	#
 7605      00
 7606              	.LVL351:
 7607              		.loc 2 34 10 view .LVU2600
 7608              	.LBE398:
 7609              	.LBE405:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7610              		.loc 1 834 54 is_stmt 1 view .LVU2601
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7611              		.loc 1 834 11 view .LVU2602
 7612 2e87 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7612      50
 7613 2e8c 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.417,
 7614              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7615              		.loc 1 834 5 is_stmt 0 view .LVU2603
 7616 2e90 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.417
 7617 2e93 722B     		jb	.L675	#,
 835:sieve_extend.c **** 
 7618              		.loc 1 835 9 is_stmt 1 view .LVU2604
 7619              	.LVL352:
 7620              	.LBB406:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7621              		.loc 2 31 1 view .LVU2605
 7622              	.LBB399:
 7623              		.loc 2 34 3 view .LVU2606
 7624              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7625              		.loc 2 34 10 is_stmt 0 view .LVU2607
 7626 2e95 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 7626      00
 7627 2e9a 4C89F2   		mov	rdx, r14	#, memsize
 7628 2e9d 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.417
 7628      50
 7629 2ea2 4C89FE   		mov	rsi, r15	#, _48
 7630 2ea5 E8000000 		call	memcpy@PLT	#
 7630      00
 7631              	.LVL353:
 7632              		.loc 2 34 10 view .LVU2608
 7633              	.LBE399:
 7634              	.LBE406:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7635              		.loc 1 834 54 is_stmt 1 view .LVU2609
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7636              		.loc 1 834 11 view .LVU2610
 7637 2eaa 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.417, %sfp
 7637      50
 7638              	.LVL354:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7639              		.loc 1 834 11 is_stmt 0 view .LVU2611
 7640 2eaf 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.417,
 7641              	.LVL355:
 7642              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
GAS LISTING /tmp/ccW4ZvF5.s 			page 213


 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7643              		.loc 1 834 5 view .LVU2612
 7644 2eb3 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.417
 7645 2eb6 0F83D4FE 		jnb	.L529	#,
 7645      FFFF
 7646              	.LVL356:
 7647 2ebc 0F1F4000 		.p2align 4
 7648              		.p2align 3
 7649              	.L675:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7650              		.loc 1 834 5 view .LVU2613
 7651 2ec0 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.356, %sfp
 7651      48
 7652              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7653              		.loc 1 838 5 view .LVU2614
 7654 2ec5 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.357
 7654      58
 7655 2eca 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7655      40
 7656              	.LVL357:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7657              		.loc 1 838 11 is_stmt 1 view .LVU2615
 7658              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7659              		.loc 1 838 5 is_stmt 0 view .LVU2616
 7660 2ecf 0F827402 		jb	.L688	#,
 7660      0000
 7661              	.LVL358:
 7662              	.L528:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7663              		.loc 1 838 5 view .LVU2617
 7664 2ed5 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.351,
 7665 2ed9 41B80500 		mov	r8d, 5	# tmp778,
 7665      0000
 7666 2edf 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7666      58
 7667              	.LVL359:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7668              		.loc 1 838 5 view .LVU2618
 7669 2ee4 4989FD   		mov	r13, rdi	# tmp775, vectp.351
 7670 2ee7 49C1ED03 		shr	r13, 3	# tmp775,
 7671 2eeb 49F7DD   		neg	r13	# tmp776
 7672 2eee 4183E503 		and	r13d, 3	# prolog_loop_niters.352,
 7673 2ef2 4D8D7E01 		lea	r15, 1[r14]	# _49,
 7674 2ef6 498D7503 		lea	rsi, 3[r13]	# tmp777,
 7675 2efa 4883FE05 		cmp	rsi, 5	# tmp777,
 7676 2efe 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 7677 2f02 4929CE   		sub	r14, rcx	# tmp779, tmp.357
 7678 2f05 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 7679 2f08 0F87BA01 		ja	.L531	#,
 7679      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7680              		.loc 1 838 5 view .LVU2619
 7681 2f0e 4D85ED   		test	r13, r13	# prolog_loop_niters.352
 7682 2f11 0F846902 		je	.L539	#,
 7682      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 214


 839:sieve_extend.c **** 
 7683              		.loc 1 839 9 is_stmt 1 view .LVU2620
 7684              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7685              		.loc 1 839 39 is_stmt 0 view .LVU2621
 7686 2f17 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.351_198]
 7687 2f1a 4983FD01 		cmp	r13, 1	# prolog_loop_niters.352,
 7688              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7689              		.loc 1 838 57 view .LVU2622
 7690 2f1e 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
 7691              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7692              		.loc 1 838 71 view .LVU2623
 7693 2f22 4D8D7424 		lea	r14, 1[r12]	# source_word,
 7693      01
 7694              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7695              		.loc 1 839 29 view .LVU2624
 7696 2f27 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7697              		.loc 1 838 48 is_stmt 1 view .LVU2625
 7698              	.LVL360:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7699              		.loc 1 838 11 view .LVU2626
 7700 2f2b 7428     		je	.L532	#,
 839:sieve_extend.c **** 
 7701              		.loc 1 839 9 view .LVU2627
 7702              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7703              		.loc 1 839 39 is_stmt 0 view .LVU2628
 7704 2f2d 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 7705 2f31 4983FD03 		cmp	r13, 3	# prolog_loop_niters.352,
 7706              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7707              		.loc 1 838 71 view .LVU2629
 7708 2f35 4D8D7424 		lea	r14, 2[r12]	# source_word,
 7708      02
 7709              	.LVL361:
 7710              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7711              		.loc 1 839 29 view .LVU2630
 7712 2f3a 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7713              		.loc 1 838 48 is_stmt 1 view .LVU2631
 7714              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7715              		.loc 1 838 57 is_stmt 0 view .LVU2632
 7716 2f3e 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
 7717              	.LVL362:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7718              		.loc 1 838 11 is_stmt 1 view .LVU2633
 7719 2f42 7511     		jne	.L532	#,
 839:sieve_extend.c **** 
 7720              		.loc 1 839 9 view .LVU2634
 7721              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 215


 7722              		.loc 1 839 39 is_stmt 0 view .LVU2635
 7723 2f44 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
 7724              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7725              		.loc 1 838 71 view .LVU2636
 7726 2f48 4D8D7424 		lea	r14, 3[r12]	# source_word,
 7726      03
 7727              	.LVL363:
 7728              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7729              		.loc 1 839 29 view .LVU2637
 7730 2f4d 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7731              		.loc 1 838 48 is_stmt 1 view .LVU2638
 7732              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7733              		.loc 1 838 57 is_stmt 0 view .LVU2639
 7734 2f51 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 7735              	.LVL364:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7736              		.loc 1 838 11 is_stmt 1 view .LVU2640
 7737              	.L532:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7738              		.loc 1 838 11 is_stmt 0 view .LVU2641
 7739 2f55 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.352
 7740 2f58 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.352
 7741 2f5b 4929CF   		sub	r15, rcx	# niters.353, tmp.357
 7742 2f5e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.352
 7743 2f61 4C89FF   		mov	rdi, r15	# bnd.354, niters.353
 7744              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7745              		.loc 1 830 17 view .LVU2642
 7746 2f64 31F6     		xor	esi, esi	# ivtmp.409
 7747 2f66 48C1EF02 		shr	rdi, 2	# bnd.354,
 7748 2f6a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.359,
 7749 2f6e 48C1E705 		sal	rdi, 5	# _635,
 7750 2f72 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.362,
 7751 2f76 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 7752 2f7a 49C1ED05 		shr	r13, 5	# tmp791,
 7753 2f7e 4983C501 		add	r13, 1	# tmp794,
 7754 2f82 4183E507 		and	r13d, 7	# tmp795,
 7755 2f86 0F849600 		je	.L534	#,
 7755      0000
 7756 2f8c 4983FD01 		cmp	r13, 1	# tmp795,
 7757 2f90 7478     		je	.L625	#,
 7758 2f92 4983FD02 		cmp	r13, 2	# tmp795,
 7759 2f96 7463     		je	.L626	#,
 7760 2f98 4983FD03 		cmp	r13, 3	# tmp795,
 7761 2f9c 744E     		je	.L627	#,
 7762 2f9e 4983FD04 		cmp	r13, 4	# tmp795,
 7763 2fa2 7439     		je	.L628	#,
 7764 2fa4 4983FD05 		cmp	r13, 5	# tmp795,
 7765 2fa8 7424     		je	.L629	#,
 7766 2faa 4983FD06 		cmp	r13, 6	# tmp795,
 7767 2fae 740F     		je	.L630	#,
 7768              	.LVL365:
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 216


 7769              		.loc 1 839 9 is_stmt 1 view .LVU2643
 7770              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7771              		.loc 1 839 29 is_stmt 0 view .LVU2644
 7772 2fb0 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.359_120, index: ivtmp.409_513, offset:
 7772      1424
 7773 2fb6 BE200000 		mov	esi, 32	# ivtmp.409,
 7773      00
 7774 2fbb C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], tmp1
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7775              		.loc 1 838 48 is_stmt 1 view .LVU2645
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7776              		.loc 1 838 11 view .LVU2646
 7777              	.L630:
 839:sieve_extend.c **** 
 7778              		.loc 1 839 9 view .LVU2647
 7779              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7780              		.loc 1 839 29 is_stmt 0 view .LVU2648
 7781 2fbf C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7781      1C34
 7782 2fc5 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7782      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7783              		.loc 1 838 48 is_stmt 1 view .LVU2649
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7784              		.loc 1 838 11 view .LVU2650
 7785 2fca 4883C620 		add	rsi, 32	# ivtmp.409,
 7786              	.L629:
 839:sieve_extend.c **** 
 7787              		.loc 1 839 9 view .LVU2651
 7788              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7789              		.loc 1 839 29 is_stmt 0 view .LVU2652
 7790 2fce C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7790      3434
 7791 2fd4 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7791      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7792              		.loc 1 838 48 is_stmt 1 view .LVU2653
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7793              		.loc 1 838 11 view .LVU2654
 7794 2fd9 4883C620 		add	rsi, 32	# ivtmp.409,
 7795              	.L628:
 839:sieve_extend.c **** 
 7796              		.loc 1 839 9 view .LVU2655
 7797              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7798              		.loc 1 839 29 is_stmt 0 view .LVU2656
 7799 2fdd C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7799      2434
 7800 2fe3 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7800      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7801              		.loc 1 838 48 is_stmt 1 view .LVU2657
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7802              		.loc 1 838 11 view .LVU2658
GAS LISTING /tmp/ccW4ZvF5.s 			page 217


 7803 2fe8 4883C620 		add	rsi, 32	# ivtmp.409,
 7804              	.L627:
 839:sieve_extend.c **** 
 7805              		.loc 1 839 9 view .LVU2659
 7806              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7807              		.loc 1 839 29 is_stmt 0 view .LVU2660
 7808 2fec C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.359_120, index: ivtmp.409_513, off
 7808      3C34
 7809 2ff2 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], 
 7809      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7810              		.loc 1 838 48 is_stmt 1 view .LVU2661
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7811              		.loc 1 838 11 view .LVU2662
 7812 2ff7 4883C620 		add	rsi, 32	# ivtmp.409,
 7813              	.L626:
 839:sieve_extend.c **** 
 7814              		.loc 1 839 9 view .LVU2663
 7815              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7816              		.loc 1 839 29 is_stmt 0 view .LVU2664
 7817 2ffb C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7817      0C34
 7818 3001 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7818      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7819              		.loc 1 838 48 is_stmt 1 view .LVU2665
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7820              		.loc 1 838 11 view .LVU2666
 7821 3006 4883C620 		add	rsi, 32	# ivtmp.409,
 7822              	.L625:
 839:sieve_extend.c **** 
 7823              		.loc 1 839 9 view .LVU2667
 7824              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7825              		.loc 1 839 29 is_stmt 0 view .LVU2668
 7826 300a C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7826      0434
 7827 3010 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7827      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7828              		.loc 1 838 48 is_stmt 1 view .LVU2669
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7829              		.loc 1 838 11 view .LVU2670
 7830 3015 4883C620 		add	rsi, 32	# ivtmp.409,
 7831 3019 4839FE   		cmp	rsi, rdi	# ivtmp.409, _635
 7832 301c 0F848E00 		je	.L664	#,
 7832      0000
 7833              	.L534:
 839:sieve_extend.c **** 
 7834              		.loc 1 839 9 discriminator 2 view .LVU2671
 7835              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7836              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2672
 7837 3022 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.359_120, index: ivtmp.409_513, offs
 7837      0434
GAS LISTING /tmp/ccW4ZvF5.s 			page 218


 7838 3028 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B], t
 7838      31
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7839              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2673
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7840              		.loc 1 838 11 discriminator 2 view .LVU2674
 839:sieve_extend.c **** 
 7841              		.loc 1 839 9 discriminator 2 view .LVU2675
 7842              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7843              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2676
 7844 302d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7844      6C3420
 7845 3034 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7845      3120
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7846              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2677
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7847              		.loc 1 838 11 discriminator 2 view .LVU2678
 839:sieve_extend.c **** 
 7848              		.loc 1 839 9 discriminator 2 view .LVU2679
 7849              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7850              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2680
 7851 303a C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7851      4C3440
 7852 3041 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7852      3140
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7853              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2681
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7854              		.loc 1 838 11 discriminator 2 view .LVU2682
 839:sieve_extend.c **** 
 7855              		.loc 1 839 9 discriminator 2 view .LVU2683
 7856              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7857              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2684
 7858 3047 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.359_120, index: ivtmp.409_513, of
 7858      7C3460
 7859 304e C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B],
 7859      3160
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7860              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2685
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7861              		.loc 1 838 11 discriminator 2 view .LVU2686
 839:sieve_extend.c **** 
 7862              		.loc 1 839 9 discriminator 2 view .LVU2687
 7863              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7864              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2688
 7865 3054 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7865      94348000 
 7865      0000
 7866 305e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7866      31800000 
 7866      00
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW4ZvF5.s 			page 219


 7867              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2689
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7868              		.loc 1 838 11 discriminator 2 view .LVU2690
 839:sieve_extend.c **** 
 7869              		.loc 1 839 9 discriminator 2 view .LVU2691
 7870              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7871              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2692
 7872 3067 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7872      B434A000 
 7872      0000
 7873 3071 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7873      31A00000 
 7873      00
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7874              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2693
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7875              		.loc 1 838 11 discriminator 2 view .LVU2694
 839:sieve_extend.c **** 
 7876              		.loc 1 839 9 discriminator 2 view .LVU2695
 7877              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7878              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2696
 7879 307a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.359_120, index: ivtmp.409_513, o
 7879      9C34C000 
 7879      0000
 7880 3084 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B]
 7880      31C00000 
 7880      00
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7881              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2697
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7882              		.loc 1 838 11 discriminator 2 view .LVU2698
 839:sieve_extend.c **** 
 7883              		.loc 1 839 9 discriminator 2 view .LVU2699
 7884              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7885              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU2700
 7886 308d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.359_120, index: ivtmp.409_513, 
 7886      A434E000 
 7886      0000
 7887 3097 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.362_97, index: ivtmp.409_513, offset: 0B
 7887      31E00000 
 7887      00
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7888              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU2701
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7889              		.loc 1 838 11 discriminator 2 view .LVU2702
 7890 30a0 4881C600 		add	rsi, 256	# ivtmp.409,
 7890      010000
 7891 30a7 4839FE   		cmp	rsi, rdi	# ivtmp.409, _635
 7892 30aa 0F8572FF 		jne	.L534	#,
 7892      FFFF
 7893              	.L664:
 7894 30b0 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.355, niters.353
 7895 30b3 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.355,
 7896 30b7 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.355, niters.353
GAS LISTING /tmp/ccW4ZvF5.s 			page 220


 7897 30ba 4F8D2430 		lea	r12, [r8+r14]	# tmp.356,
 7898 30be 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.357,
 7899 30c2 0F849000 		je	.L687	#,
 7899      0000
 7900              	.L531:
 7901              	.LVL366:
 839:sieve_extend.c **** 
 7902              		.loc 1 839 9 view .LVU2703
 7903              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7904              		.loc 1 838 5 is_stmt 0 view .LVU2704
 7905 30c8 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7905      58
 7906              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7907              		.loc 1 838 57 view .LVU2705
 7908 30cd 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 7909              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7910              		.loc 1 839 39 view .LVU2706
 7911 30d1 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
 7912              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7913              		.loc 1 838 71 view .LVU2707
 7914 30d5 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 7914      01
 7915              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7916              		.loc 1 838 5 view .LVU2708
 7917 30da 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 7918              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7919              		.loc 1 839 29 view .LVU2709
 7920 30dd 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7921              		.loc 1 838 48 is_stmt 1 view .LVU2710
 7922              	.LVL367:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7923              		.loc 1 838 11 view .LVU2711
 7924              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7925              		.loc 1 838 5 is_stmt 0 view .LVU2712
 7926 30e1 7275     		jb	.L687	#,
 839:sieve_extend.c **** 
 7927              		.loc 1 839 9 is_stmt 1 view .LVU2713
 7928              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7929              		.loc 1 839 39 is_stmt 0 view .LVU2714
 7930 30e3 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
 7931              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7932              		.loc 1 838 57 view .LVU2715
 7933 30e7 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 7934              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7935              		.loc 1 838 5 view .LVU2716
 7936 30eb 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
GAS LISTING /tmp/ccW4ZvF5.s 			page 221


 7937              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7938              		.loc 1 838 71 view .LVU2717
 7939 30ee 498D4424 		lea	rax, 2[r12]	# source_word,
 7939      02
 7940              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7941              		.loc 1 839 29 view .LVU2718
 7942 30f3 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7943              		.loc 1 838 48 is_stmt 1 view .LVU2719
 7944              	.LVL368:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7945              		.loc 1 838 11 view .LVU2720
 7946              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7947              		.loc 1 838 5 is_stmt 0 view .LVU2721
 7948 30f7 725F     		jb	.L687	#,
 839:sieve_extend.c **** 
 7949              		.loc 1 839 9 is_stmt 1 view .LVU2722
 7950              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7951              		.loc 1 839 39 is_stmt 0 view .LVU2723
 7952 30f9 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 7953              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7954              		.loc 1 838 57 view .LVU2724
 7955 30fd 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 7956              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7957              		.loc 1 838 5 view .LVU2725
 7958 3101 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 7959              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7960              		.loc 1 838 71 view .LVU2726
 7961 3104 498D7424 		lea	rsi, 3[r12]	# source_word,
 7961      03
 7962              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7963              		.loc 1 839 29 view .LVU2727
 7964 3109 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7965              		.loc 1 838 48 is_stmt 1 view .LVU2728
 7966              	.LVL369:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7967              		.loc 1 838 11 view .LVU2729
 7968              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7969              		.loc 1 838 5 is_stmt 0 view .LVU2730
 7970 310d 7249     		jb	.L687	#,
 839:sieve_extend.c **** 
 7971              		.loc 1 839 9 is_stmt 1 view .LVU2731
 7972              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7973              		.loc 1 839 39 is_stmt 0 view .LVU2732
 7974 310f 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 7975              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/ccW4ZvF5.s 			page 222


 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7976              		.loc 1 838 57 view .LVU2733
 7977 3113 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 7978              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7979              		.loc 1 838 71 view .LVU2734
 7980 3117 4983C404 		add	r12, 4	# source_word,
 7981              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7982              		.loc 1 838 5 view .LVU2735
 7983 311b 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
 7984              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7985              		.loc 1 839 29 view .LVU2736
 7986 311e 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7987              		.loc 1 838 48 is_stmt 1 view .LVU2737
 7988              	.LVL370:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7989              		.loc 1 838 11 view .LVU2738
 7990              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7991              		.loc 1 838 5 is_stmt 0 view .LVU2739
 7992 3122 7734     		ja	.L687	#,
 839:sieve_extend.c **** 
 7993              		.loc 1 839 9 is_stmt 1 view .LVU2740
 7994              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 7995              		.loc 1 839 39 is_stmt 0 view .LVU2741
 7996 3124 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 7996      00000000 
 7997              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7998              		.loc 1 838 57 view .LVU2742
 7999 312c 4883C105 		add	rcx, 5	# copy_word,
 8000              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 8001              		.loc 1 839 39 view .LVU2743
 8002 3130 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 8003              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8004              		.loc 1 838 5 view .LVU2744
 8005 3134 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 8006              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 8007              		.loc 1 839 29 view .LVU2745
 8008 3137 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8009              		.loc 1 838 48 is_stmt 1 view .LVU2746
 8010              	.LVL371:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8011              		.loc 1 838 11 view .LVU2747
 8012              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8013              		.loc 1 838 5 is_stmt 0 view .LVU2748
 8014 313b 721B     		jb	.L687	#,
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 223


 8015              		.loc 1 839 9 is_stmt 1 view .LVU2749
 8016              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 8017              		.loc 1 839 39 is_stmt 0 view .LVU2750
 8018 313d 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 8018      08
 8019              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 8020              		.loc 1 839 29 view .LVU2751
 8021 3142 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8022              		.loc 1 838 48 is_stmt 1 view .LVU2752
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8023              		.loc 1 838 11 view .LVU2753
 8024 3146 C5F877   		vzeroupper
 8025              	.L688:
 8026              	# sieve_extend.c:842:  }
 842:sieve_extend.c **** 
 8027              		.loc 1 842 2 is_stmt 0 view .LVU2754
 8028 3149 488D65D8 		lea	rsp, -40[rbp]	#,
 8029              	.LVL372:
 842:sieve_extend.c **** 
 8030              		.loc 1 842 2 view .LVU2755
 8031 314d 5B       		pop	rbx	#
 8032 314e 415C     		pop	r12	#
 8033 3150 415D     		pop	r13	#
 8034 3152 415E     		pop	r14	#
 8035 3154 415F     		pop	r15	#
 8036 3156 5D       		pop	rbp	#
 8037              		.cfi_remember_state
 8038              		.cfi_def_cfa 7, 8
 8039              	.LVL373:
 842:sieve_extend.c **** 
 8040              		.loc 1 842 2 view .LVU2756
 8041 3157 C3       		ret	
 8042              	.LVL374:
 8043              		.p2align 4,,7
 8044              		.p2align 3
 8045              	.L687:
 8046              		.cfi_restore_state
 842:sieve_extend.c **** 
 8047              		.loc 1 842 2 view .LVU2757
 8048 3158 C5F877   		vzeroupper
 8049 315b 488D65D8 		lea	rsp, -40[rbp]	#,
 8050              	.LVL375:
 842:sieve_extend.c **** 
 8051              		.loc 1 842 2 view .LVU2758
 8052 315f 5B       		pop	rbx	#
 8053 3160 415C     		pop	r12	#
 8054 3162 415D     		pop	r13	#
 8055 3164 415E     		pop	r14	#
 8056 3166 415F     		pop	r15	#
 8057 3168 5D       		pop	rbp	#
 8058              		.cfi_remember_state
 8059              		.cfi_def_cfa 7, 8
 8060              	.LVL376:
 842:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 224


 8061              		.loc 1 842 2 view .LVU2759
 8062 3169 C3       		ret	
 8063              	.LVL377:
 8064 316a 660F1F44 		.p2align 4,,7
 8064      0000
 8065              		.p2align 3
 8066              	.L538:
 8067              		.cfi_restore_state
 8068              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8069              		.loc 1 824 5 view .LVU2760
 8070 3170 4D89EE   		mov	r14, r13	# copy_word, tmp.370
 8071              	# sieve_extend.c:818:     source_word += distance;
 818:sieve_extend.c ****     copy_word += distance;
 8072              		.loc 1 818 17 view .LVU2761
 8073 3173 4D89E2   		mov	r10, r12	# source_word, tmp.369
 8074 3176 498D7424 		lea	rsi, 1[r12]	# tmp788,
 8074      01
 8075 317b E92DF8FF 		jmp	.L523	#
 8075      FF
 8076              	.LVL378:
 8077              		.p2align 4,,7
 8078              		.p2align 3
 8079              	.L539:
 8080              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8081              		.loc 1 824 5 view .LVU2762
 8082 3180 4989CB   		mov	r11, rcx	# copy_word, tmp.357
 8083              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8084              		.loc 1 830 17 view .LVU2763
 8085 3183 4D89E6   		mov	r14, r12	# source_word, tmp.356
 8086 3186 E9CAFDFF 		jmp	.L532	#
 8086      FF
 8087              	.LVL379:
 8088 318b 0F1F4400 		.p2align 4,,7
 8088      00
 8089              		.p2align 3
 8090              	.L690:
 825:sieve_extend.c ****     }
 8091              		.loc 1 825 9 is_stmt 1 view .LVU2764
 8092              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8093              		.loc 1 825 56 is_stmt 0 view .LVU2765
 8094 3190 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.372_257, index: ivtmp.422_731, offset: 
 8094      1B
 8095 3195 B8200000 		mov	eax, 32	# ivtmp.422,
 8095      00
 8096              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8097              		.loc 1 825 94 view .LVU2766
 8098 319a C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.376_264, index: ivtmp.422_731, offset: 
 8099              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8100              		.loc 1 825 56 view .LVU2767
 8101 319e C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.374, tmp1260, _12
 8101      D2
GAS LISTING /tmp/ccW4ZvF5.s 			page 225


 8102              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8103              		.loc 1 825 94 view .LVU2768
 8104 31a3 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.378, tmp1261, _18
 8104      F3
 8105              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8106              		.loc 1 825 66 view .LVU2769
 8107 31a8 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.379, vect__38.374, vect__43.378
 8108              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 8109              		.loc 1 825 29 view .LVU2770
 8110 31ac C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.381_273, index: ivtmp.422_731, offset: 0B], vect
 8110      21
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8111              		.loc 1 824 43 is_stmt 1 view .LVU2771
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8112              		.loc 1 824 11 view .LVU2772
 8113 31b1 E972F8FF 		jmp	.L623	#
 8113      FF
 8114              	.LVL380:
 8115              		.p2align 4,,7
 8116 31b6 6690     		.p2align 3
 8117              	.L516:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8118              		.loc 1 824 11 is_stmt 0 view .LVU2773
 8119 31b8 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8119      30
 8120 31bd 4D89E8   		mov	r8, r13	# tmp804, tmp.370
 8121 31c0 49F7D0   		not	r8	# tmp804
 8122 31c3 4801D9   		add	rcx, rbx	# ivtmp.437, bitarray
 8123              	.LBB407:
 8124              	.LBB388:
 8125              	.LBB377:
 8126              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8127              		.loc 1 713 42 view .LVU2774
 8128 31c6 4489F8   		mov	eax, r15d	# tmp1194, _12
 8129              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8130              		.loc 1 713 63 view .LVU2775
 8131 31c9 89D7     		mov	edi, edx	# tmp1195, _18
 8132 31cb 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 8133              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8134              		.loc 1 713 42 view .LVU2776
 8135 31ce C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 8135      01
 8136              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8137              		.loc 1 712 19 view .LVU2777
 8138 31d3 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8139              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8140              		.loc 1 713 63 view .LVU2778
 8141 31d7 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 8141      FE
GAS LISTING /tmp/ccW4ZvF5.s 			page 226


 8142 31dc 49D1E8   		shr	r8	# tmp803
 8143              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8144              		.loc 1 713 52 view .LVU2779
 8145 31df 4809F8   		or	rax, rdi	# tmp692, tmp691
 8146              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8147              		.loc 1 716 19 view .LVU2780
 8148 31e2 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 8149              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8150              		.loc 1 713 63 view .LVU2781
 8151 31e6 4189D2   		mov	r10d, edx	# _18, shift_flipped
 8152 31e9 49F7D3   		not	r11	# tmp790
 8153 31ec 4183E003 		and	r8d, 3	# tmp806,
 8154              	.LVL381:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8155              		.loc 1 711 9 is_stmt 1 view .LVU2782
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8156              		.loc 1 712 9 view .LVU2783
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8157              		.loc 1 713 9 view .LVU2784
 8158              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8159              		.loc 1 713 52 is_stmt 0 view .LVU2785
 8160 31f0 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8161              	.LVL382:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8162              		.loc 1 714 9 is_stmt 1 view .LVU2786
 715:sieve_extend.c ****         copy_word += 2;
 8163              		.loc 1 715 9 view .LVU2787
 8164              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8165              		.loc 1 713 42 is_stmt 0 view .LVU2788
 8166 31f4 4589F9   		mov	r9d, r15d	# _12, shift
 8167              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8168              		.loc 1 715 63 view .LVU2789
 8169 31f7 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 8169      4110
 8170              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8171              		.loc 1 715 42 view .LVU2790
 8172 31fd C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 8172      F6
 8173              	.LVL383:
 8174              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8175              		.loc 1 715 52 view .LVU2791
 8176 3202 4809C6   		or	rsi, rax	# tmp696, tmp693
 8177              	.LBE377:
 8178              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8179              		.loc 1 710 11 view .LVU2792
 8180 3205 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8181 3208 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8182 320c 488D4110 		lea	rax, 16[rcx]	# ivtmp.437,
GAS LISTING /tmp/ccW4ZvF5.s 			page 227


 8183              	.LBB378:
 8184              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8185              		.loc 1 715 52 view .LVU2793
 8186 3210 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8186      08
 8187              	.LVL384:
 716:sieve_extend.c ****         source_word += 2;
 8188              		.loc 1 716 9 is_stmt 1 view .LVU2794
 717:sieve_extend.c ****         distance += 2;
 8189              		.loc 1 717 9 view .LVU2795
 718:sieve_extend.c ****     }
 8190              		.loc 1 718 9 view .LVU2796
 718:sieve_extend.c ****     }
 8191              		.loc 1 718 9 is_stmt 0 view .LVU2797
 8192              	.LBE378:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8193              		.loc 1 710 11 is_stmt 1 view .LVU2798
 8194 3215 0F86B3F6 		jbe	.L520	#,
 8194      FFFF
 8195 321b 4D85C0   		test	r8, r8	# tmp806
 8196 321e 0F849700 		je	.L678	#,
 8196      0000
 8197 3224 4983F801 		cmp	r8, 1	# tmp806,
 8198 3228 7446     		je	.L637	#,
 8199 322a 4983F802 		cmp	r8, 2	# tmp806,
 8200 322e 0F857401 		jne	.L691	#,
 8200      0000
 8201              	.LVL385:
 8202              	.L638:
 8203              	.LBB379:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8204              		.loc 1 711 9 view .LVU2799
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8205              		.loc 1 712 9 view .LVU2800
 8206              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8207              		.loc 1 712 19 is_stmt 0 view .LVU2801
 8208 3234 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8209              		.loc 1 713 9 is_stmt 1 view .LVU2802
 8210              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8211              		.loc 1 713 42 is_stmt 0 view .LVU2803
 8212 3238 4489F9   		mov	ecx, r15d	# tmp1278, _12
 8213              	.LVL386:
 8214              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8215              		.loc 1 713 63 view .LVU2804
 8216 323b 4189D0   		mov	r8d, edx	# tmp1279, _18
 8217              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8218              		.loc 1 713 42 view .LVU2805
 8219 323e C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 8219      08
 8220              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccW4ZvF5.s 			page 228


 8221              		.loc 1 713 63 view .LVU2806
 8222 3243 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
 8222      CE
 8223              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8224              		.loc 1 713 52 view .LVU2807
 8225 3248 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 8226              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8227              		.loc 1 713 42 view .LVU2808
 8228 324b 4589FA   		mov	r10d, r15d	# _12, shift
 8229              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8230              		.loc 1 713 63 view .LVU2809
 8231 324e 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8232              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8233              		.loc 1 713 52 view .LVU2810
 8234 3251 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8235              	.LVL387:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8236              		.loc 1 714 9 is_stmt 1 view .LVU2811
 715:sieve_extend.c ****         copy_word += 2;
 8237              		.loc 1 715 9 view .LVU2812
 8238              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8239              		.loc 1 715 42 is_stmt 0 view .LVU2813
 8240 3255 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 8240      F6
 8241              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8242              		.loc 1 715 63 view .LVU2814
 8243 325a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 8243      4810
 8244              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8245              		.loc 1 715 52 view .LVU2815
 8246 3260 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 8247 3263 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8247      08
 8248              	.LVL388:
 716:sieve_extend.c ****         source_word += 2;
 8249              		.loc 1 716 9 is_stmt 1 view .LVU2816
 8250 3268 4883C010 		add	rax, 16	# ivtmp.437,
 8251              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8252              		.loc 1 716 19 is_stmt 0 view .LVU2817
 8253 326c 4883C702 		add	rdi, 2	# copy_word,
 717:sieve_extend.c ****         distance += 2;
 8254              		.loc 1 717 9 is_stmt 1 view .LVU2818
 718:sieve_extend.c ****     }
 8255              		.loc 1 718 9 view .LVU2819
 718:sieve_extend.c ****     }
 8256              		.loc 1 718 9 is_stmt 0 view .LVU2820
 8257              	.LBE379:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8258              		.loc 1 710 11 is_stmt 1 view .LVU2821
GAS LISTING /tmp/ccW4ZvF5.s 			page 229


 8259              	.LVL389:
 8260              	.L637:
 8261              	.LBB380:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8262              		.loc 1 711 9 view .LVU2822
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8263              		.loc 1 712 9 view .LVU2823
 8264              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8265              		.loc 1 712 19 is_stmt 0 view .LVU2824
 8266 3270 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8267              		.loc 1 713 9 is_stmt 1 view .LVU2825
 8268              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8269              		.loc 1 713 42 is_stmt 0 view .LVU2826
 8270 3274 4589F8   		mov	r8d, r15d	# tmp1282, _12
 8271              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8272              		.loc 1 713 63 view .LVU2827
 8273 3277 4189D1   		mov	r9d, edx	# tmp1283, _18
 8274              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8275              		.loc 1 713 42 view .LVU2828
 8276 327a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 8276      08
 8277              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8278              		.loc 1 713 63 view .LVU2829
 8279 327f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 8279      C6
 8280              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8281              		.loc 1 713 52 view .LVU2830
 8282 3284 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
 8283              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8284              		.loc 1 713 42 view .LVU2831
 8285 3287 4589FA   		mov	r10d, r15d	# _12, shift
 8286              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8287              		.loc 1 713 63 view .LVU2832
 8288 328a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8289              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8290              		.loc 1 713 52 view .LVU2833
 8291 328d 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8292              	.LVL390:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8293              		.loc 1 714 9 is_stmt 1 view .LVU2834
 715:sieve_extend.c ****         copy_word += 2;
 8294              		.loc 1 715 9 view .LVU2835
 8295              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8296              		.loc 1 715 42 is_stmt 0 view .LVU2836
 8297 3291 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 8297      F6
GAS LISTING /tmp/ccW4ZvF5.s 			page 230


 8298              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8299              		.loc 1 715 63 view .LVU2837
 8300 3296 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 8300      4810
 8301              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8302              		.loc 1 715 52 view .LVU2838
 8303 329c 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 8304 329f 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8304      08
 8305              	.LVL391:
 716:sieve_extend.c ****         source_word += 2;
 8306              		.loc 1 716 9 is_stmt 1 view .LVU2839
 8307              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8308              		.loc 1 716 19 is_stmt 0 view .LVU2840
 8309 32a4 4883C702 		add	rdi, 2	# copy_word,
 717:sieve_extend.c ****         distance += 2;
 8310              		.loc 1 717 9 is_stmt 1 view .LVU2841
 718:sieve_extend.c ****     }
 8311              		.loc 1 718 9 view .LVU2842
 8312 32a8 4883C010 		add	rax, 16	# ivtmp.437,
 8313              	.LBE380:
 8314              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8315              		.loc 1 710 11 is_stmt 0 view .LVU2843
 8316 32ac 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8316      30
 8317 32b1 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8318              		.loc 1 710 11 is_stmt 1 view .LVU2844
 8319 32b5 0F8613F6 		jbe	.L520	#,
 8319      FFFF
 8320              	.LVL392:
 8321              	.L678:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8322              		.loc 1 710 11 is_stmt 0 view .LVU2845
 8323 32bb 4489F9   		mov	ecx, r15d	# _12, shift
 8324 32be 4189D0   		mov	r8d, edx	# _18, shift_flipped
 8325 32c1 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.369
 8325      38
 8326              	.LVL393:
 8327              	.L519:
 8328              	.LBB381:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8329              		.loc 1 711 9 is_stmt 1 view .LVU2846
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8330              		.loc 1 712 9 view .LVU2847
 8331              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8332              		.loc 1 712 19 is_stmt 0 view .LVU2848
 8333 32c6 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8334              		.loc 1 713 9 is_stmt 1 view .LVU2849
 8335              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccW4ZvF5.s 			page 231


 8336              		.loc 1 713 42 is_stmt 0 view .LVU2850
 8337 32ca C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
 8337      08
 8338              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8339              		.loc 1 713 63 view .LVU2851
 8340 32cf C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 8340      F4
 8341              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8342              		.loc 1 713 52 view .LVU2852
 8343 32d4 4D09F1   		or	r9, r14	# tmp880, tmp879
 8344              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8345              		.loc 1 715 42 view .LVU2853
 8346 32d7 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 8346      D4
 8347              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8348              		.loc 1 713 52 view .LVU2854
 8349 32dc 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 0
 8350              	.LVL394:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8351              		.loc 1 714 9 is_stmt 1 view .LVU2855
 715:sieve_extend.c ****         copy_word += 2;
 8352              		.loc 1 715 9 view .LVU2856
 8353              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8354              		.loc 1 715 63 is_stmt 0 view .LVU2857
 8355 32e0 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 8355      7010
 8356              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8357              		.loc 1 715 52 view .LVU2858
 8358 32e6 4C09D6   		or	rsi, r10	# tmp884, tmp883
 8359 32e9 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8359      08
 8360              	.LVL395:
 716:sieve_extend.c ****         source_word += 2;
 8361              		.loc 1 716 9 is_stmt 1 view .LVU2859
 8362              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8363              		.loc 1 716 19 is_stmt 0 view .LVU2860
 8364 32ee 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 717:sieve_extend.c ****         distance += 2;
 8365              		.loc 1 717 9 is_stmt 1 view .LVU2861
 718:sieve_extend.c ****     }
 8366              		.loc 1 718 9 view .LVU2862
 718:sieve_extend.c ****     }
 8367              		.loc 1 718 9 is_stmt 0 view .LVU2863
 8368              	.LBE381:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8369              		.loc 1 710 11 is_stmt 1 view .LVU2864
 8370              	.LBB382:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8371              		.loc 1 711 9 view .LVU2865
 8372              	.LVL396:
GAS LISTING /tmp/ccW4ZvF5.s 			page 232


 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8373              		.loc 1 712 9 view .LVU2866
 8374              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8375              		.loc 1 712 19 is_stmt 0 view .LVU2867
 8376 32f2 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8377              		.loc 1 713 9 is_stmt 1 view .LVU2868
 8378              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8379              		.loc 1 713 42 is_stmt 0 view .LVU2869
 8380 32f6 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 8380      7010
 8381              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8382              		.loc 1 713 63 view .LVU2870
 8383 32fc C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 8383      F1
 8384              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8385              		.loc 1 713 52 view .LVU2871
 8386 3301 4C09F6   		or	rsi, r14	# tmp892, tmp891
 8387 3304 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8388              	.LVL397:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8389              		.loc 1 714 9 is_stmt 1 view .LVU2872
 715:sieve_extend.c ****         copy_word += 2;
 8390              		.loc 1 715 9 view .LVU2873
 8391              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8392              		.loc 1 715 42 is_stmt 0 view .LVU2874
 8393 3308 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 8393      C9
 8394              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8395              		.loc 1 715 63 view .LVU2875
 8396 330d 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8397 3311 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 8397      F2
 8398              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8399              		.loc 1 715 52 view .LVU2876
 8400 3316 4909F1   		or	r9, rsi	# tmp896, tmp894
 8401 3319 4883C040 		add	rax, 64	# ivtmp.437,
 8402 331d 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8402      08
 8403              	.LVL398:
 716:sieve_extend.c ****         source_word += 2;
 8404              		.loc 1 716 9 is_stmt 1 view .LVU2877
 8405              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8406              		.loc 1 716 19 is_stmt 0 view .LVU2878
 8407 3322 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 717:sieve_extend.c ****         distance += 2;
 8408              		.loc 1 717 9 is_stmt 1 view .LVU2879
 718:sieve_extend.c ****     }
 8409              		.loc 1 718 9 view .LVU2880
GAS LISTING /tmp/ccW4ZvF5.s 			page 233


 718:sieve_extend.c ****     }
 8410              		.loc 1 718 9 is_stmt 0 view .LVU2881
 8411              	.LBE382:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8412              		.loc 1 710 11 is_stmt 1 view .LVU2882
 8413              	.LBB383:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8414              		.loc 1 711 9 view .LVU2883
 8415              	.LVL399:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8416              		.loc 1 712 9 view .LVU2884
 8417              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8418              		.loc 1 712 19 is_stmt 0 view .LVU2885
 8419 3326 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8420              		.loc 1 713 9 is_stmt 1 view .LVU2886
 8421              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8422              		.loc 1 713 42 is_stmt 0 view .LVU2887
 8423 332a C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
 8423      70E0
 8424              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8425              		.loc 1 713 63 view .LVU2888
 8426 3330 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 8426      F2
 8427              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8428              		.loc 1 713 52 view .LVU2889
 8429 3335 4C09F6   		or	rsi, r14	# tmp904, tmp903
 8430 3338 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8431              	.LVL400:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8432              		.loc 1 714 9 is_stmt 1 view .LVU2890
 715:sieve_extend.c ****         copy_word += 2;
 8433              		.loc 1 715 9 view .LVU2891
 8434              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8435              		.loc 1 715 42 is_stmt 0 view .LVU2892
 8436 333c C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 8436      D2
 8437              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8438              		.loc 1 715 63 view .LVU2893
 8439 3341 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8440 3345 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 8440      F1
 8441              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8442              		.loc 1 715 52 view .LVU2894
 8443 334a 4909F2   		or	r10, rsi	# tmp908, tmp906
 8444 334d 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8444      08
 8445              	.LVL401:
 716:sieve_extend.c ****         source_word += 2;
 8446              		.loc 1 716 9 is_stmt 1 view .LVU2895
GAS LISTING /tmp/ccW4ZvF5.s 			page 234


 8447              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8448              		.loc 1 716 19 is_stmt 0 view .LVU2896
 8449 3352 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 717:sieve_extend.c ****         distance += 2;
 8450              		.loc 1 717 9 is_stmt 1 view .LVU2897
 718:sieve_extend.c ****     }
 8451              		.loc 1 718 9 view .LVU2898
 718:sieve_extend.c ****     }
 8452              		.loc 1 718 9 is_stmt 0 view .LVU2899
 8453              	.LBE383:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8454              		.loc 1 710 11 is_stmt 1 view .LVU2900
 8455              	.LBB384:
 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8456              		.loc 1 711 9 view .LVU2901
 8457              	.LVL402:
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8458              		.loc 1 712 9 view .LVU2902
 8459              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8460              		.loc 1 712 19 is_stmt 0 view .LVU2903
 8461 3356 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8462              		.loc 1 713 9 is_stmt 1 view .LVU2904
 8463              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8464              		.loc 1 713 42 is_stmt 0 view .LVU2905
 8465 335a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 8465      70F0
 8466              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8467              		.loc 1 713 63 view .LVU2906
 8468 3360 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 8468      F1
 8469              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8470              		.loc 1 713 52 view .LVU2907
 8471 3365 4C09F6   		or	rsi, r14	# tmp916, tmp915
 8472 3368 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8473              	.LVL403:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8474              		.loc 1 714 9 is_stmt 1 view .LVU2908
 715:sieve_extend.c ****         copy_word += 2;
 8475              		.loc 1 715 9 view .LVU2909
 8476              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8477              		.loc 1 716 19 is_stmt 0 view .LVU2910
 8478 336c 4883C708 		add	rdi, 8	# copy_word,
 8479              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8480              		.loc 1 715 42 view .LVU2911
 8481 3370 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 8481      C9
 8482              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8483              		.loc 1 715 63 view .LVU2912
GAS LISTING /tmp/ccW4ZvF5.s 			page 235


 8484 3375 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8485 3378 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
 8485      F2
 8486              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8487              		.loc 1 715 52 view .LVU2913
 8488 337d 4909F1   		or	r9, rsi	# tmp920, tmp918
 8489              	.LBE384:
 8490              	# sieve_extend.c:710:     while (copy_word < fast_loop_stop_word) {
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8491              		.loc 1 710 11 view .LVU2914
 8492 3380 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8492      30
 8493 3385 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8494              	.LBB385:
 8495              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8496              		.loc 1 715 52 view .LVU2915
 8497 3389 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8497      08
 8498              	.LVL404:
 716:sieve_extend.c ****         source_word += 2;
 8499              		.loc 1 716 9 is_stmt 1 view .LVU2916
 717:sieve_extend.c ****         distance += 2;
 8500              		.loc 1 717 9 view .LVU2917
 718:sieve_extend.c ****     }
 8501              		.loc 1 718 9 view .LVU2918
 718:sieve_extend.c ****     }
 8502              		.loc 1 718 9 is_stmt 0 view .LVU2919
 8503              	.LBE385:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8504              		.loc 1 710 11 is_stmt 1 view .LVU2920
 8505 338e 0F8732FF 		ja	.L519	#,
 8505      FFFF
 8506 3394 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.369, %sfp
 8506      38
 8507 3399 E930F5FF 		jmp	.L520	#
 8507      FF
 8508              	.LVL405:
 8509 339e 6690     		.p2align 4,,7
 8510              		.p2align 3
 8511              	.L537:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8512              		.loc 1 710 11 is_stmt 0 view .LVU2921
 8513              	.LBE388:
 8514              	.LBE407:
 8515              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8516              		.loc 1 824 5 view .LVU2922
 8517 33a0 4C89E9   		mov	rcx, r13	# tmp.357, tmp.370
 8518 33a3 E994F9FF 		jmp	.L521	#
 8518      FF
 8519              	.LVL406:
 8520              	.L691:
 8521              	.LBB408:
 8522              	.LBB389:
 8523              	.LBB386:
GAS LISTING /tmp/ccW4ZvF5.s 			page 236


 711:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8524              		.loc 1 711 9 is_stmt 1 view .LVU2923
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8525              		.loc 1 712 9 view .LVU2924
 8526              	# sieve_extend.c:712:         bitword_t source1 = bitarray[source_word+1];
 712:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8527              		.loc 1 712 19 is_stmt 0 view .LVU2925
 8528 33a8 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8529              		.loc 1 713 9 is_stmt 1 view .LVU2926
 8530              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8531              		.loc 1 713 42 is_stmt 0 view .LVU2927
 8532 33ac 4589F8   		mov	r8d, r15d	# tmp1274, _12
 8533 33af C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 8533      30
 8534              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8535              		.loc 1 713 63 view .LVU2928
 8536 33b4 4189D0   		mov	r8d, edx	# tmp1275, _18
 8537 33b7 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
 8537      C1
 8538              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8539              		.loc 1 713 52 view .LVU2929
 8540 33bc 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 8541 33bf 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8542              	.LVL407:
 714:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8543              		.loc 1 714 9 is_stmt 1 view .LVU2930
 715:sieve_extend.c ****         copy_word += 2;
 8544              		.loc 1 715 9 view .LVU2931
 8545              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8546              		.loc 1 713 42 is_stmt 0 view .LVU2932
 8547 33c3 4589FA   		mov	r10d, r15d	# _12, shift
 8548              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8549              		.loc 1 715 63 view .LVU2933
 8550 33c6 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8551              	# sieve_extend.c:713:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 713:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8552              		.loc 1 713 63 view .LVU2934
 8553 33ca 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8554              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8555              		.loc 1 715 42 view .LVU2935
 8556 33cd C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 8556      C9
 8557              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8558              		.loc 1 715 63 view .LVU2936
 8559 33d2 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 8559      C0
 8560              	# sieve_extend.c:715:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 715:sieve_extend.c ****         copy_word += 2;
 8561              		.loc 1 715 52 view .LVU2937
GAS LISTING /tmp/ccW4ZvF5.s 			page 237


 8562 33d7 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 8563 33da 488D4120 		lea	rax, 32[rcx]	# ivtmp.437,
 8564 33de 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8564      08
 8565              	.LVL408:
 716:sieve_extend.c ****         source_word += 2;
 8566              		.loc 1 716 9 is_stmt 1 view .LVU2938
 8567              	# sieve_extend.c:716:         copy_word += 2;
 716:sieve_extend.c ****         source_word += 2;
 8568              		.loc 1 716 19 is_stmt 0 view .LVU2939
 8569 33e3 498D7D04 		lea	rdi, 4[r13]	# copy_word,
 717:sieve_extend.c ****         distance += 2;
 8570              		.loc 1 717 9 is_stmt 1 view .LVU2940
 718:sieve_extend.c ****     }
 8571              		.loc 1 718 9 view .LVU2941
 718:sieve_extend.c ****     }
 8572              		.loc 1 718 9 is_stmt 0 view .LVU2942
 8573              	.LBE386:
 710:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8574              		.loc 1 710 11 is_stmt 1 view .LVU2943
 8575 33e7 E948FEFF 		jmp	.L638	#
 8575      FF
 8576              	.LBE389:
 8577              	.LBE408:
 8578              		.cfi_endproc
 8579              	.LFE75:
 8581              		.section	.rodata.str1.1,"aMS",@progbits,1
 8582              	.LC4:
 8583 0000 25336A75 		.string	"%3ju "
 8583      2000
 8584              	.LC5:
 8585 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8585      6E642025 
 8585      6A752070 
 8585      72696D65 
 8585      7320756E 
 8586              		.text
 8587 33ec 0F1F4000 		.p2align 4
 8589              	show_primes.isra.0:
 8590              	.LVL409:
 8591              	.LFB100:
 975:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8592              		.loc 1 975 13 view -0
 8593              		.cfi_startproc
 8594              	.LBB409:
 977:sieve_extend.c ****         primeCount++;
 8595              		.loc 1 977 30 view .LVU2945
 8596              	.LBE409:
 8597              	# sieve_extend.c:975: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 975:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8598              		.loc 1 975 13 is_stmt 0 view .LVU2946
 8599 33f0 4157     		push	r15	#
 8600              		.cfi_def_cfa_offset 16
 8601              		.cfi_offset 15, -16
 8602 33f2 4156     		push	r14	#
 8603              		.cfi_def_cfa_offset 24
 8604              		.cfi_offset 14, -24
GAS LISTING /tmp/ccW4ZvF5.s 			page 238


 8605 33f4 4155     		push	r13	#
 8606              		.cfi_def_cfa_offset 32
 8607              		.cfi_offset 13, -32
 8608 33f6 4154     		push	r12	#
 8609              		.cfi_def_cfa_offset 40
 8610              		.cfi_offset 12, -40
 8611 33f8 4989F4   		mov	r12, rsi	# ISRA.73, tmp168
 8612 33fb 55       		push	rbp	#
 8613              		.cfi_def_cfa_offset 48
 8614              		.cfi_offset 6, -48
 8615 33fc 53       		push	rbx	#
 8616              		.cfi_def_cfa_offset 56
 8617              		.cfi_offset 3, -56
 8618 33fd 488D6424 		lea	rsp, -8[rsp]	#,
 8618      F8
 8619              		.cfi_def_cfa_offset 64
 8620              	.LBB426:
 8621              	# sieve_extend.c:977:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 977:sieve_extend.c ****         primeCount++;
 8622              		.loc 1 977 44 view .LVU2947
 8623 3402 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.73_32(D)
 8624              	# sieve_extend.c:977:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 977:sieve_extend.c ****         primeCount++;
 8625              		.loc 1 977 5 view .LVU2948
 8626 3405 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8627 3409 0F867501 		jbe	.L699	#,
 8627      0000
 8628              	# sieve_extend.c:979:         if (factor < maxFactor/2) {
 979:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8629              		.loc 1 979 31 view .LVU2949
 8630 340f 48D1EA   		shr	rdx	# maxFactor
 8631              	.LVL410:
 979:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8632              		.loc 1 979 31 view .LVU2950
 8633 3412 4989FD   		mov	r13, rdi	# ISRA.72, tmp167
 8634              	# sieve_extend.c:977:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 977:sieve_extend.c ****         primeCount++;
 8635              		.loc 1 977 20 view .LVU2951
 8636 3415 BB010000 		mov	ebx, 1	# factor,
 8636      00
 8637              	# sieve_extend.c:979:         if (factor < maxFactor/2) {
 979:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8638              		.loc 1 979 31 view .LVU2952
 8639 341a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8640              	.LBE426:
 8641              	# sieve_extend.c:976:     counter_t primeCount = 1;    // We already have 2
 976:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8642              		.loc 1 976 15 view .LVU2953
 8643 341d 41BF0100 		mov	r15d, 1	# primeCount,
 8643      0000
 8644              	.LBB427:
 8645              	.LBB410:
 8646              	.LBB411:
 8647              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8648              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
GAS LISTING /tmp/ccW4ZvF5.s 			page 239


   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
GAS LISTING /tmp/ccW4ZvF5.s 			page 240


  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8649              		.loc 3 107 10 view .LVU2954
 8650 3423 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8650      CCCCCCCC 
 8650      CCCC
 8651              	.LVL411:
 8652 342d 0F1F00   		.p2align 4
 8653              		.p2align 3
 8654              	.L698:
 8655              		.loc 3 107 10 view .LVU2955
GAS LISTING /tmp/ccW4ZvF5.s 			page 241


 8656              	.LBE411:
 8657              	.LBE410:
 978:sieve_extend.c ****         if (factor < maxFactor/2) {
 8658              		.loc 1 978 9 is_stmt 1 view .LVU2956
 8659              	# sieve_extend.c:978:         primeCount++;
 978:sieve_extend.c ****         if (factor < maxFactor/2) {
 8660              		.loc 1 978 19 is_stmt 0 view .LVU2957
 8661 3430 4983C701 		add	r15, 1	# primeCount,
 8662              	.LVL412:
 979:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8663              		.loc 1 979 9 is_stmt 1 view .LVU2958
 8664              	# sieve_extend.c:979:         if (factor < maxFactor/2) {
 979:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8665              		.loc 1 979 12 is_stmt 0 view .LVU2959
 8666 3434 4839DD   		cmp	rbp, rbx	# _4, factor
 8667 3437 0F87FB00 		ja	.L722	#,
 8667      0000
 8668              	.L694:
 977:sieve_extend.c ****         primeCount++;
 8669              		.loc 1 977 52 is_stmt 1 view .LVU2960
 8670              	.LVL413:
 8671              	# sieve_extend.c:977:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 977:sieve_extend.c ****         primeCount++;
 8672              		.loc 1 977 61 is_stmt 0 view .LVU2961
 8673 343d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.72_33(D)
 8674 3441 4883C301 		add	rbx, 1	# factor,
 8675              	.LVL414:
 8676              	.L721:
 8677              	.LBB416:
 8678              	.LBI416:
 128:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8679              		.loc 1 128 25 is_stmt 1 view .LVU2962
 8680              	.LBB417:
 129:sieve_extend.c ****     return index;
 8681              		.loc 1 129 5 view .LVU2963
 129:sieve_extend.c ****     return index;
 8682              		.loc 1 129 11 view .LVU2964
 8683              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8684              		.loc 1 129 21 is_stmt 0 view .LVU2965
 8685 3445 4889D9   		mov	rcx, rbx	# tmp124, factor
 8686 3448 48C1E906 		shr	rcx, 6	# tmp124,
 8687              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8688              		.loc 1 129 12 view .LVU2966
 8689 344c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8690              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8691              		.loc 1 129 11 view .LVU2967
 8692 3450 490FA3D9 		bt	r9, rbx	# *_39, factor
 8693 3454 0F83A600 		jnc	.L696	#,
 8693      0000
 129:sieve_extend.c ****     return index;
 8694              		.loc 1 129 58 is_stmt 1 view .LVU2968
 8695              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8696              		.loc 1 129 63 is_stmt 0 view .LVU2969
GAS LISTING /tmp/ccW4ZvF5.s 			page 242


 8697 345a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8698              	.LVL415:
 8699              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8700              		.loc 1 129 21 view .LVU2970
 8701 345e 4D89D3   		mov	r11, r10	# tmp129, factor
 8702              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8703              		.loc 1 129 63 view .LVU2971
 8704 3461 4C89D3   		mov	rbx, r10	# factor, tmp138
 129:sieve_extend.c ****     return index;
 8705              		.loc 1 129 11 is_stmt 1 view .LVU2972
 8706              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8707              		.loc 1 129 21 is_stmt 0 view .LVU2973
 8708 3464 49C1EB06 		shr	r11, 6	# tmp129,
 8709              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8710              		.loc 1 129 12 view .LVU2974
 8711 3468 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8712              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8713              		.loc 1 129 11 view .LVU2975
 8714 346c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8715 3470 0F838A00 		jnc	.L696	#,
 8715      0000
 129:sieve_extend.c ****     return index;
 8716              		.loc 1 129 58 is_stmt 1 view .LVU2976
 8717              	.LVL416:
 8718              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8719              		.loc 1 129 63 is_stmt 0 view .LVU2977
 8720 3476 4883C301 		add	rbx, 1	# factor,
 8721              	.LVL417:
 129:sieve_extend.c ****     return index;
 8722              		.loc 1 129 11 is_stmt 1 view .LVU2978
 8723              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8724              		.loc 1 129 21 is_stmt 0 view .LVU2979
 8725 347a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8726 347d 48C1EA06 		shr	rdx, 6	# tmp139,
 8727              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8728              		.loc 1 129 12 view .LVU2980
 8729 3481 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8730              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8731              		.loc 1 129 11 view .LVU2981
 8732 3485 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8733 3489 7375     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
 8734              		.loc 1 129 58 is_stmt 1 view .LVU2982
 8735              	.LVL418:
 8736              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8737              		.loc 1 129 63 is_stmt 0 view .LVU2983
 8738 348b 498D5A02 		lea	rbx, 2[r10]	# factor,
GAS LISTING /tmp/ccW4ZvF5.s 			page 243


 8739              	.LVL419:
 129:sieve_extend.c ****     return index;
 8740              		.loc 1 129 11 is_stmt 1 view .LVU2984
 8741              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8742              		.loc 1 129 21 is_stmt 0 view .LVU2985
 8743 348f 4889D9   		mov	rcx, rbx	# tmp143, factor
 8744 3492 48C1E906 		shr	rcx, 6	# tmp143,
 8745              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8746              		.loc 1 129 12 view .LVU2986
 8747 3496 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8748              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8749              		.loc 1 129 11 view .LVU2987
 8750 349a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8751 349e 7360     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
 8752              		.loc 1 129 58 is_stmt 1 view .LVU2988
 8753              	.LVL420:
 8754              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8755              		.loc 1 129 63 is_stmt 0 view .LVU2989
 8756 34a0 498D5A03 		lea	rbx, 3[r10]	# factor,
 8757              	.LVL421:
 129:sieve_extend.c ****     return index;
 8758              		.loc 1 129 11 is_stmt 1 view .LVU2990
 8759              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8760              		.loc 1 129 21 is_stmt 0 view .LVU2991
 8761 34a4 4989DB   		mov	r11, rbx	# tmp147, factor
 8762 34a7 49C1EB06 		shr	r11, 6	# tmp147,
 8763              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8764              		.loc 1 129 12 view .LVU2992
 8765 34ab 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8766              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8767              		.loc 1 129 11 view .LVU2993
 8768 34af 480FA3D8 		bt	rax, rbx	# *_16, factor
 8769 34b3 734B     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
 8770              		.loc 1 129 58 is_stmt 1 view .LVU2994
 8771              	.LVL422:
 8772              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8773              		.loc 1 129 63 is_stmt 0 view .LVU2995
 8774 34b5 498D5A04 		lea	rbx, 4[r10]	# factor,
 8775              	.LVL423:
 129:sieve_extend.c ****     return index;
 8776              		.loc 1 129 11 is_stmt 1 view .LVU2996
 8777              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8778              		.loc 1 129 21 is_stmt 0 view .LVU2997
 8779 34b9 4889DA   		mov	rdx, rbx	# tmp151, factor
 8780 34bc 48C1EA06 		shr	rdx, 6	# tmp151,
 8781              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 244


 129:sieve_extend.c ****     return index;
 8782              		.loc 1 129 12 view .LVU2998
 8783 34c0 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8784              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8785              		.loc 1 129 11 view .LVU2999
 8786 34c4 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8787 34c8 7336     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
 8788              		.loc 1 129 58 is_stmt 1 view .LVU3000
 8789              	.LVL424:
 8790              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8791              		.loc 1 129 63 is_stmt 0 view .LVU3001
 8792 34ca 498D5A05 		lea	rbx, 5[r10]	# factor,
 8793              	.LVL425:
 129:sieve_extend.c ****     return index;
 8794              		.loc 1 129 11 is_stmt 1 view .LVU3002
 8795              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8796              		.loc 1 129 21 is_stmt 0 view .LVU3003
 8797 34ce 4889D9   		mov	rcx, rbx	# tmp155, factor
 8798 34d1 48C1E906 		shr	rcx, 6	# tmp155,
 8799              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8800              		.loc 1 129 12 view .LVU3004
 8801 34d5 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8802              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8803              		.loc 1 129 11 view .LVU3005
 8804 34d9 490FA3D9 		bt	r9, rbx	# *_16, factor
 8805 34dd 7321     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
 8806              		.loc 1 129 58 is_stmt 1 view .LVU3006
 8807              	.LVL426:
 8808              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8809              		.loc 1 129 63 is_stmt 0 view .LVU3007
 8810 34df 498D5A06 		lea	rbx, 6[r10]	# factor,
 8811              	.LVL427:
 129:sieve_extend.c ****     return index;
 8812              		.loc 1 129 11 is_stmt 1 view .LVU3008
 8813              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8814              		.loc 1 129 21 is_stmt 0 view .LVU3009
 8815 34e3 4989DB   		mov	r11, rbx	# tmp159, factor
 8816 34e6 49C1EB06 		shr	r11, 6	# tmp159,
 8817              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8818              		.loc 1 129 12 view .LVU3010
 8819 34ea 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8820              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8821              		.loc 1 129 11 view .LVU3011
 8822 34ee 480FA3D8 		bt	rax, rbx	# *_16, factor
 8823 34f2 730C     		jnc	.L696	#,
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 245


 8824              		.loc 1 129 58 is_stmt 1 view .LVU3012
 8825              	.LVL428:
 8826              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 8827              		.loc 1 129 63 is_stmt 0 view .LVU3013
 8828 34f4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8829              	.LVL429:
 129:sieve_extend.c ****     return index;
 8830              		.loc 1 129 11 is_stmt 1 view .LVU3014
 8831 34f8 E948FFFF 		jmp	.L721	#
 8831      FF
 8832 34fd 0F1F00   		.p2align 4,,7
 8833              		.p2align 3
 8834              	.L696:
 8835              	.LVL430:
 129:sieve_extend.c ****     return index;
 8836              		.loc 1 129 11 is_stmt 0 view .LVU3015
 8837              	.LBE417:
 8838              	.LBE416:
 977:sieve_extend.c ****         primeCount++;
 8839              		.loc 1 977 30 is_stmt 1 view .LVU3016
 8840              	# sieve_extend.c:977:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 977:sieve_extend.c ****         primeCount++;
 8841              		.loc 1 977 5 is_stmt 0 view .LVU3017
 8842 3500 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8843 3503 0F8227FF 		jb	.L698	#,
 8843      FFFF
 8844              	.LVL431:
 8845              	.L693:
 977:sieve_extend.c ****         primeCount++;
 8846              		.loc 1 977 5 view .LVU3018
 8847              	.LBE427:
 984:sieve_extend.c **** }
 8848              		.loc 1 984 5 is_stmt 1 view .LVU3019
 8849              	.LBB428:
 8850              	.LBI428:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8851              		.loc 3 105 1 view .LVU3020
 8852              	.LBB429:
 8853              		.loc 3 107 3 view .LVU3021
 8854              	.LBE429:
 8855              	.LBE428:
 8856              	# sieve_extend.c:985: }
 985:sieve_extend.c **** 
 8857              		.loc 1 985 1 is_stmt 0 view .LVU3022
 8858 3509 488D6424 		lea	rsp, 8[rsp]	#,
 8858      08
 8859              		.cfi_remember_state
 8860              		.cfi_def_cfa_offset 56
 8861              	.LBB433:
 8862              	.LBB430:
 8863              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8864              		.loc 3 107 10 view .LVU3023
 8865 350e 4C89FA   		mov	rdx, r15	#, primeCount
 8866              	.LBE430:
 8867              	.LBE433:
 8868              	# sieve_extend.c:985: }
GAS LISTING /tmp/ccW4ZvF5.s 			page 246


 985:sieve_extend.c **** 
 8869              		.loc 1 985 1 view .LVU3024
 8870 3511 5B       		pop	rbx	#
 8871              		.cfi_def_cfa_offset 48
 8872              	# sieve_extend.c:984:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 984:sieve_extend.c **** }
 8873              		.loc 1 984 5 view .LVU3025
 8874 3512 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8874      01
 8875              	.LBB434:
 8876              	.LBB431:
 8877              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8878              		.loc 3 107 10 view .LVU3026
 8879 3517 BF010000 		mov	edi, 1	#,
 8879      00
 8880 351c 31C0     		xor	eax, eax	#
 8881 351e 488D3500 		lea	rsi, .LC5[rip]	#,
 8881      000000
 8882              	.LBE431:
 8883              	.LBE434:
 8884              	# sieve_extend.c:985: }
 985:sieve_extend.c **** 
 8885              		.loc 1 985 1 view .LVU3027
 8886 3525 5D       		pop	rbp	#
 8887              		.cfi_def_cfa_offset 40
 8888 3526 415C     		pop	r12	#
 8889              		.cfi_def_cfa_offset 32
 8890 3528 415D     		pop	r13	#
 8891              		.cfi_def_cfa_offset 24
 8892 352a 415E     		pop	r14	#
 8893              		.cfi_def_cfa_offset 16
 8894 352c 415F     		pop	r15	#
 8895              		.cfi_def_cfa_offset 8
 8896              	.LBB435:
 8897              	.LBB432:
 8898              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8899              		.loc 3 107 10 view .LVU3028
 8900 352e E9000000 		jmp	__printf_chk@PLT	#
 8900      00
 8901              	.LVL432:
 8902              		.p2align 4,,7
 8903 3533 0F1F4400 		.p2align 3
 8903      00
 8904              	.L722:
 8905              		.cfi_restore_state
 8906              		.loc 3 107 10 view .LVU3029
 8907              	.LBE432:
 8908              	.LBE435:
 8909              	.LBB436:
 980:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8910              		.loc 1 980 13 is_stmt 1 view .LVU3030
 8911              	.LBB418:
 8912              	.LBI410:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8913              		.loc 3 105 1 view .LVU3031
 8914              	.LBB412:
 8915              		.loc 3 107 3 view .LVU3032
GAS LISTING /tmp/ccW4ZvF5.s 			page 247


 8916              	.LBE412:
 8917              	.LBE418:
 8918              	# sieve_extend.c:980:             printf("%3ju ",(uintmax_t)factor*2+1);
 980:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8919              		.loc 1 980 13 is_stmt 0 view .LVU3033
 8920 3538 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8920      01
 8921              	.LBB419:
 8922              	.LBB413:
 8923              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8924              		.loc 3 107 10 view .LVU3034
 8925 353d BF010000 		mov	edi, 1	#,
 8925      00
 8926 3542 31C0     		xor	eax, eax	#
 8927 3544 488D3500 		lea	rsi, .LC4[rip]	#,
 8927      000000
 8928 354b E8000000 		call	__printf_chk@PLT	#
 8928      00
 8929              	.LVL433:
 8930              		.loc 3 107 10 view .LVU3035
 8931              	.LBE413:
 8932              	.LBE419:
 981:sieve_extend.c ****         }
 8933              		.loc 1 981 13 is_stmt 1 view .LVU3036
 8934              	.LBB420:
 8935              	.LBB414:
 8936              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8937              		.loc 3 107 10 is_stmt 0 view .LVU3037
 8938 3550 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8939              	.LBE414:
 8940              	.LBE420:
 8941              	# sieve_extend.c:981:             if (primeCount % 10 == 0) printf("\n");
 981:sieve_extend.c ****         }
 8942              		.loc 1 981 16 view .LVU3038
 8943 3553 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8943      99999999 
 8943      9919
 8944              	.LBB421:
 8945              	.LBB415:
 8946              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8947              		.loc 3 107 10 view .LVU3039
 8948 355d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8949 3561 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8949      D001
 8950              	.LBE415:
 8951              	.LBE421:
 8952              	# sieve_extend.c:981:             if (primeCount % 10 == 0) printf("\n");
 981:sieve_extend.c ****         }
 8953              		.loc 1 981 16 view .LVU3040
 8954 3567 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8955 356a 760C     		jbe	.L695	#,
 8956              	.L720:
 8957 356c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.73_32(D)
 8958              	.LBB422:
 8959              	.LBB423:
 8960              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8961              		.loc 3 107 10 view .LVU3041
GAS LISTING /tmp/ccW4ZvF5.s 			page 248


 8962 3570 E9C8FEFF 		jmp	.L694	#
 8962      FF
 8963              		.p2align 4,,7
 8964 3575 0F1F00   		.p2align 3
 8965              	.L695:
 8966              	.LBE423:
 8967              	.LBE422:
 981:sieve_extend.c ****         }
 8968              		.loc 1 981 39 is_stmt 1 view .LVU3042
 8969              	.LVL434:
 8970              	.LBB425:
 8971              	.LBI422:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8972              		.loc 3 105 1 view .LVU3043
 8973              	.LBB424:
 8974              		.loc 3 107 3 view .LVU3044
 8975              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8976              		.loc 3 107 10 is_stmt 0 view .LVU3045
 8977 3578 BF0A0000 		mov	edi, 10	#,
 8977      00
 8978 357d E8000000 		call	putchar@PLT	#
 8978      00
 8979              	.LVL435:
 8980 3582 EBE8     		jmp	.L720	#
 8981              	.LVL436:
 8982              	.L699:
 8983              		.loc 3 107 10 view .LVU3046
 8984              	.LBE424:
 8985              	.LBE425:
 8986              	.LBE436:
 8987              	# sieve_extend.c:976:     counter_t primeCount = 1;    // We already have 2
 976:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8988              		.loc 1 976 15 view .LVU3047
 8989 3584 41BF0100 		mov	r15d, 1	# primeCount,
 8989      0000
 8990 358a E97AFFFF 		jmp	.L693	#
 8990      FF
 8991              		.cfi_endproc
 8992              	.LFE100:
 8994 358f 90       		.p2align 4
 8996              	sieve_shake:
 8997              	.LVL437:
 8998              	.LFB79:
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8999              		.loc 1 934 88 is_stmt 1 view -0
 9000              		.cfi_startproc
 935:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9001              		.loc 1 935 5 view .LVU3049
 9002              	# sieve_extend.c:934: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9003              		.loc 1 934 88 is_stmt 0 view .LVU3050
 9004 3590 4157     		push	r15	#
 9005              		.cfi_def_cfa_offset 16
 9006              		.cfi_offset 15, -16
 9007 3592 4156     		push	r14	#
 9008              		.cfi_def_cfa_offset 24
 9009              		.cfi_offset 14, -24
GAS LISTING /tmp/ccW4ZvF5.s 			page 249


 9010 3594 4155     		push	r13	#
 9011              		.cfi_def_cfa_offset 32
 9012              		.cfi_offset 13, -32
 9013 3596 4154     		push	r12	#
 9014              		.cfi_def_cfa_offset 40
 9015              		.cfi_offset 12, -40
 9016 3598 55       		push	rbp	#
 9017              		.cfi_def_cfa_offset 48
 9018              		.cfi_offset 6, -48
 9019 3599 53       		push	rbx	#
 9020              		.cfi_def_cfa_offset 56
 9021              		.cfi_offset 3, -56
 9022 359a 4889FB   		mov	rbx, rdi	# maxints, tmp493
 9023              	.LVL438:
 9024              	.LBB468:
 9025              	.LBI468:
 109:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 9026              		.loc 1 109 24 is_stmt 1 view .LVU3051
 9027              	.LBB469:
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9028              		.loc 1 110 5 view .LVU3052
 9029              	# sieve_extend.c:110:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9030              		.loc 1 110 29 is_stmt 0 view .LVU3053
 9031 359d BF080000 		mov	edi, 8	#,
 9031      00
 9032              	.LVL439:
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9033              		.loc 1 110 29 view .LVU3054
 9034              	.LBE469:
 9035              	.LBE468:
 9036              	# sieve_extend.c:934: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9037              		.loc 1 934 88 view .LVU3055
 9038 35a2 488D6424 		lea	rsp, -88[rsp]	#,
 9038      A8
 9039              		.cfi_def_cfa_offset 144
 9040              	.LBB473:
 9041              	.LBB470:
 9042              	# sieve_extend.c:111:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 111:sieve_extend.c **** 
 9043              		.loc 1 111 22 view .LVU3056
 9044 35a7 4989DE   		mov	r14, rbx	# prephitmp_564, maxints
 9045 35aa 49D1EE   		shr	r14	# prephitmp_564
 9046              	.LBE470:
 9047              	.LBE473:
 9048              	# sieve_extend.c:934: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9049              		.loc 1 934 88 view .LVU3057
 9050 35ad 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, tmp494
 9050      38
 9051              	.LBB474:
 9052              	.LBB471:
 9053              	# sieve_extend.c:110:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9054              		.loc 1 110 29 view .LVU3058
 9055 35b2 BE180000 		mov	esi, 24	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 250


 9055      00
 9056              	.LVL440:
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9057              		.loc 1 110 29 view .LVU3059
 9058 35b7 E8000000 		call	aligned_alloc@PLT	#
 9058      00
 9059              	.LVL441:
 9060              	# sieve_extend.c:111:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 111:sieve_extend.c **** 
 9061              		.loc 1 111 22 view .LVU3060
 9062 35bc 498DB600 		lea	rsi, 1024[r14]	# tmp275,
 9062      040000
 9063              	# sieve_extend.c:113:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9064              		.loc 1 113 23 view .LVU3061
 9065 35c3 BF800000 		mov	edi, 128	#,
 9065      00
 9066              	# sieve_extend.c:110:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 110:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9067              		.loc 1 110 29 view .LVU3062
 9068 35c8 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, <retval>
 9068      28
 9069 35cd 4889C5   		mov	rbp, rax	# <retval>, tmp495
 9070              	.LVL442:
 111:sieve_extend.c **** 
 9071              		.loc 1 111 5 is_stmt 1 view .LVU3063
 9072              	# sieve_extend.c:111:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 111:sieve_extend.c **** 
 9073              		.loc 1 111 22 is_stmt 0 view .LVU3064
 9074 35d0 48C1EE0A 		shr	rsi, 10	# tmp276,
 9075              	# sieve_extend.c:111:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 111:sieve_extend.c **** 
 9076              		.loc 1 111 12 view .LVU3065
 9077 35d4 48C1E607 		sal	rsi, 7	# memSize,
 9078              	# sieve_extend.c:111:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 111:sieve_extend.c **** 
 9079              		.loc 1 111 22 view .LVU3066
 9080 35d8 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_564
 9080      08
 9081              	.LVL443:
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9082              		.loc 1 113 5 is_stmt 1 view .LVU3067
 9083              	# sieve_extend.c:113:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9084              		.loc 1 113 23 is_stmt 0 view .LVU3068
 9085 35dd E8000000 		call	aligned_alloc@PLT	#
 9085      00
 9086              	.LVL444:
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9087              		.loc 1 113 23 view .LVU3069
 9088              	.LBE471:
 9089              	.LBE474:
 9090              	.LBB475:
 9091              	.LBB476:
 9092              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9093              		.loc 1 905 5 view .LVU3070
GAS LISTING /tmp/ccW4ZvF5.s 			page 251


 9094 35e2 4D85F6   		test	r14, r14	# prephitmp_564
 9095              	.LBE476:
 9096              	.LBE475:
 9097              	.LBB514:
 9098              	.LBB472:
 9099              	# sieve_extend.c:113:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9100              		.loc 1 113 23 view .LVU3071
 9101 35e5 4989C7   		mov	r15, rax	# _94, tmp496
 9102              	# sieve_extend.c:113:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 113:sieve_extend.c ****     sieve->bits     = size >> 1;
 9103              		.loc 1 113 21 view .LVU3072
 9104 35e8 48894500 		mov	QWORD PTR 0[rbp], rax	# sieve_89->bitarray, _94
 114:sieve_extend.c ****     sieve->size     = size;
 9105              		.loc 1 114 5 is_stmt 1 view .LVU3073
 9106              	# sieve_extend.c:114:     sieve->bits     = size >> 1;
 114:sieve_extend.c ****     sieve->size     = size;
 9107              		.loc 1 114 21 is_stmt 0 view .LVU3074
 9108 35ec 4C897508 		mov	QWORD PTR 8[rbp], r14	# sieve_89->bits, prephitmp_564
 115:sieve_extend.c **** 
 9109              		.loc 1 115 5 is_stmt 1 view .LVU3075
 9110              	# sieve_extend.c:115:     sieve->size     = size;
 115:sieve_extend.c **** 
 9111              		.loc 1 115 21 is_stmt 0 view .LVU3076
 9112 35f0 48895D10 		mov	QWORD PTR 16[rbp], rbx	# sieve_89->size, maxints
 119:sieve_extend.c **** }
 9113              		.loc 1 119 5 is_stmt 1 view .LVU3077
 9114              	.LVL445:
 119:sieve_extend.c **** }
 9115              		.loc 1 119 5 is_stmt 0 view .LVU3078
 9116              	.LBE472:
 9117              	.LBE514:
 936:sieve_extend.c **** 
 9118              		.loc 1 936 5 is_stmt 1 view .LVU3079
 938:sieve_extend.c **** 
 9119              		.loc 1 938 5 view .LVU3080
 941:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9120              		.loc 1 941 5 view .LVU3081
 9121              	.LBB515:
 9122              	.LBI475:
 895:sieve_extend.c ****     register counter_t prime   = 0;
 9123              		.loc 1 895 21 view .LVU3082
 9124              	.LBB507:
 896:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9125              		.loc 1 896 5 view .LVU3083
 897:sieve_extend.c ****     counter_t pattern_start    = 0;
 9126              		.loc 1 897 5 view .LVU3084
 898:sieve_extend.c ****     counter_t range_stop       = block_start;
 9127              		.loc 1 898 5 view .LVU3085
 899:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9128              		.loc 1 899 5 view .LVU3086
 900:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9129              		.loc 1 900 5 view .LVU3087
 901:sieve_extend.c **** 
 9130              		.loc 1 901 5 view .LVU3088
 903:sieve_extend.c ****     
 9131              		.loc 1 903 5 view .LVU3089
GAS LISTING /tmp/ccW4ZvF5.s 			page 252


 9132              	# sieve_extend.c:903:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 903:sieve_extend.c ****     
 9133              		.loc 1 903 24 is_stmt 0 view .LVU3090
 9134 35f4 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_94],
 9134      000000
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9135              		.loc 1 905 5 is_stmt 1 view .LVU3091
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9136              		.loc 1 905 11 view .LVU3092
 9137              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9138              		.loc 1 905 5 is_stmt 0 view .LVU3093
 9139 35fb 0F84730A 		je	.L933	#,
 9139      0000
 9140              	.LBB477:
 9141              	# sieve_extend.c:906:         prime = searchBitFalse(bitarray, prime+1);
 906:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9142              		.loc 1 906 17 view .LVU3094
 9143 3601 48C74424 		mov	QWORD PTR 16[rsp], 1	# %sfp,
 9143      10010000 
 9143      00
 9144              	.LBE477:
 9145              	# sieve_extend.c:901:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 901:sieve_extend.c **** 
 9146              		.loc 1 901 18 view .LVU3095
 9147 360a 31D2     		xor	edx, edx	# block$pattern_size
 9148              	# sieve_extend.c:898:     counter_t pattern_start    = 0;
 898:sieve_extend.c ****     counter_t range_stop       = block_start;
 9149              		.loc 1 898 15 view .LVU3096
 9150 360c 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 9150      18000000 
 9150      00
 9151              	# sieve_extend.c:897:     counter_t patternsize_bits = 1;
 897:sieve_extend.c ****     counter_t pattern_start    = 0;
 9152              		.loc 1 897 15 view .LVU3097
 9153 3615 41BD0100 		mov	r13d, 1	# patternsize_bits,
 9153      0000
 9154              	# sieve_extend.c:901:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 901:sieve_extend.c **** 
 9155              		.loc 1 901 18 view .LVU3098
 9156 361b 31F6     		xor	esi, esi	# block$pattern_start
 9157              	# sieve_extend.c:896:     register counter_t prime   = 0;
 896:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9158              		.loc 1 896 24 view .LVU3099
 9159 361d 31C9     		xor	ecx, ecx	# prime
 9160 361f 488B4424 		mov	rax, QWORD PTR 16[rsp]	# index, %sfp
 9160      10
 9161              	.LVL446:
 9162 3624 66662E0F 		.p2align 4
 9162      1F840000 
 9162      00000090 
 9163              		.p2align 3
 9164              	.L724:
 9165              	.LBB500:
 9166              	.LBB478:
 9167              	.LBB479:
 130:sieve_extend.c **** }
GAS LISTING /tmp/ccW4ZvF5.s 			page 253


 9168              		.loc 1 130 5 is_stmt 1 view .LVU3100
 130:sieve_extend.c **** }
 9169              		.loc 1 130 5 is_stmt 0 view .LVU3101
 9170              	.LBE479:
 9171              	.LBE478:
 907:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9172              		.loc 1 907 9 is_stmt 1 view .LVU3102
 9173              	# sieve_extend.c:907:         counter_t start = prime * prime * 2 + prime * 2;
 907:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9174              		.loc 1 907 45 is_stmt 0 view .LVU3103
 9175 3630 488D5801 		lea	rbx, 1[rax]	# index,
 9176 3634 4C8D2400 		lea	r12, [rax+rax]	# _304,
 9177              	# sieve_extend.c:907:         counter_t start = prime * prime * 2 + prime * 2;
 907:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9178              		.loc 1 907 19 view .LVU3104
 9179 3638 4889DD   		mov	rbp, rbx	# index, index
 9180 363b 490FAFEC 		imul	rbp, r12	# index, _304
 9181              	.LVL447:
 908:sieve_extend.c **** 
 9182              		.loc 1 908 9 is_stmt 1 view .LVU3105
 9183              	# sieve_extend.c:908:         if unlikely(start > block_stop) break;
 908:sieve_extend.c **** 
 9184              		.loc 1 908 12 is_stmt 0 view .LVU3106
 9185 363f 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9185      08
 9186 3644 0F871B04 		ja	.L934	#,
 9186      0000
 910:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9187              		.loc 1 910 9 is_stmt 1 view .LVU3107
 9188              	# sieve_extend.c:910:         const counter_t step  = prime * 2 + 1;
 910:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9189              		.loc 1 910 25 is_stmt 0 view .LVU3108
 9190 364a 4983C401 		add	r12, 1	# step,
 9191              	.LVL448:
 911:sieve_extend.c **** 
 9192              		.loc 1 911 9 is_stmt 1 view .LVU3109
 9193              	# sieve_extend.c:911:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 911:sieve_extend.c **** 
 9194              		.loc 1 911 12 is_stmt 0 view .LVU3110
 9195 364e 4885DB   		test	rbx, rbx	# index
 9196 3651 7516     		jne	.L730	#,
 911:sieve_extend.c **** 
 9197              		.loc 1 911 41 is_stmt 1 view .LVU3111
 9198              	# sieve_extend.c:911:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 911:sieve_extend.c **** 
 9199              		.loc 1 911 102 is_stmt 0 view .LVU3112
 9200 3653 48C7C0FF 		mov	rax, -1	# tmp296,
 9200      FFFFFF
 9201 365a 31D2     		xor	edx, edx	# tmp295
 9202 365c 49F7F4   		div	r12	# step
 9203              	# sieve_extend.c:911:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 911:sieve_extend.c **** 
 9204              		.loc 1 911 47 view .LVU3113
 9205 365f 48C7C5FE 		mov	rbp, -2	# tmp297,
 9205      FFFFFF
 9206              	.LVL449:
 911:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 254


 9207              		.loc 1 911 47 view .LVU3114
 9208 3666 4829D5   		sub	rbp, rdx	# index, tmp295
 9209              	.LVL450:
 9210              	.L730:
 913:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9211              		.loc 1 913 9 is_stmt 1 view .LVU3115
 9212              	# sieve_extend.c:913:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 913:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9213              		.loc 1 913 53 is_stmt 0 view .LVU3116
 9214 3669 4C89E6   		mov	rsi, r12	# _66, step
 9215 366c 490FAFF5 		imul	rsi, r13	# _66, patternsize_bits
 9216 3670 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, _66
 9216      30
 9217              	# sieve_extend.c:913:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 913:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9218              		.loc 1 913 60 view .LVU3117
 9219 3675 4C8D3436 		lea	r14, [rsi+rsi]	# _67,
 9220              	.LVL451:
 914:sieve_extend.c ****         block.pattern_start = pattern_start;
 9221              		.loc 1 914 9 is_stmt 1 view .LVU3118
 915:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9222              		.loc 1 915 9 view .LVU3119
 916:sieve_extend.c **** 
 9223              		.loc 1 916 9 view .LVU3120
 9224              	# sieve_extend.c:916:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 916:sieve_extend.c **** 
 9225              		.loc 1 916 12 is_stmt 0 view .LVU3121
 9226 3679 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9226      08
 9227 367e 0F87B109 		ja	.L935	#,
 9227      0000
 918:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9228              		.loc 1 918 9 is_stmt 1 view .LVU3122
 9229 3684 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9229      18
 9230              	# sieve_extend.c:918:         if (patternsize_bits>1) {
 918:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9231              		.loc 1 918 12 is_stmt 0 view .LVU3123
 9232 3689 4983FD01 		cmp	r13, 1	# patternsize_bits,
 9233 368d 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, pattern_start
 9233      20
 9234 3692 0F878803 		ja	.L936	#,
 9234      0000
 9235              	.L733:
 9236              	.LVL452:
 922:sieve_extend.c **** 
 9237              		.loc 1 922 9 is_stmt 1 view .LVU3124
 926:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9238              		.loc 1 926 9 view .LVU3125
 9239              	# sieve_extend.c:926:         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitar
 926:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9240              		.loc 1 926 12 is_stmt 0 view .LVU3126
 9241 3698 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 9241      000000
 9242 369f 0F830B01 		jnb	.L737	#,
 9242      0000
 926:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
GAS LISTING /tmp/ccW4ZvF5.s 			page 255


 9243              		.loc 1 926 43 is_stmt 1 view .LVU3127
 9244 36a5 4C89F1   		mov	rcx, r14	#, _67
 9245 36a8 4C89E2   		mov	rdx, r12	#, step
 9246 36ab 4889EE   		mov	rsi, rbp	#, index
 9247 36ae 4C89FF   		mov	rdi, r15	#, _94
 9248 36b1 E87ADCFF 		call	setBitsTrue_largeRange_vector	#
 9248      FF
 9249              	.LVL453:
 9250              	.L738:
 926:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9251              		.loc 1 926 43 is_stmt 0 view .LVU3128
 9252              	.LBE500:
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9253              		.loc 1 905 11 is_stmt 1 view .LVU3129
 9254              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9255              		.loc 1 905 5 is_stmt 0 view .LVU3130
 9256 36b6 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9256      08
 9257 36bb 0F83EB02 		jnb	.L937	#,
 9257      0000
 9258              	.LVL454:
 9259              	.L747:
 9260              	.LBB501:
 906:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9261              		.loc 1 906 9 is_stmt 1 view .LVU3131
 9262              	.LBB481:
 9263              	.LBI478:
 128:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9264              		.loc 1 128 25 view .LVU3132
 9265              	.LBB480:
 129:sieve_extend.c ****     return index;
 9266              		.loc 1 129 5 view .LVU3133
 129:sieve_extend.c ****     return index;
 9267              		.loc 1 129 11 view .LVU3134
 9268              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9269              		.loc 1 129 21 is_stmt 0 view .LVU3135
 9270 36c1 4989D9   		mov	r9, rbx	# tmp279, index
 9271 36c4 49C1E906 		shr	r9, 6	# tmp279,
 9272              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9273              		.loc 1 129 12 view .LVU3136
 9274 36c8 4F8B1CCF 		mov	r11, QWORD PTR [r15+r9*8]	# *_344,* _94
 9275              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9276              		.loc 1 129 11 view .LVU3137
 9277 36cc 490FA3DB 		bt	r11, rbx	# *_344, index
 9278 36d0 0F83AA00 		jnc	.L726	#,
 9278      0000
 129:sieve_extend.c ****     return index;
 9279              		.loc 1 129 58 is_stmt 1 view .LVU3138
 9280              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9281              		.loc 1 129 63 is_stmt 0 view .LVU3139
 9282 36d6 488D4B01 		lea	rcx, 1[rbx]	# tmp394,
 9283              	.LVL455:
GAS LISTING /tmp/ccW4ZvF5.s 			page 256


 9284              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9285              		.loc 1 129 21 view .LVU3140
 9286 36da 4889C8   		mov	rax, rcx	# tmp284, index
 9287              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9288              		.loc 1 129 63 view .LVU3141
 9289 36dd 4889CB   		mov	rbx, rcx	# index, tmp394
 129:sieve_extend.c ****     return index;
 9290              		.loc 1 129 11 is_stmt 1 view .LVU3142
 9291              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9292              		.loc 1 129 21 is_stmt 0 view .LVU3143
 9293 36e0 48C1E806 		shr	rax, 6	# tmp284,
 9294              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9295              		.loc 1 129 12 view .LVU3144
 9296 36e4 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_47, *_47
 9297              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9298              		.loc 1 129 11 view .LVU3145
 9299 36e8 480FA3CE 		bt	rsi, rcx	# *_47, index
 9300 36ec 0F838E00 		jnc	.L726	#,
 9300      0000
 129:sieve_extend.c ****     return index;
 9301              		.loc 1 129 58 is_stmt 1 view .LVU3146
 9302              	.LVL456:
 9303              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9304              		.loc 1 129 63 is_stmt 0 view .LVU3147
 9305 36f2 4883C301 		add	rbx, 1	# index,
 9306              	.LVL457:
 129:sieve_extend.c ****     return index;
 9307              		.loc 1 129 11 is_stmt 1 view .LVU3148
 9308              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9309              		.loc 1 129 21 is_stmt 0 view .LVU3149
 9310 36f6 4989DC   		mov	r12, rbx	# tmp459, index
 9311 36f9 49C1EC06 		shr	r12, 6	# tmp459,
 9312              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9313              		.loc 1 129 12 view .LVU3150
 9314 36fd 4B8B2CE7 		mov	rbp, QWORD PTR [r15+r12*8]	# *_47, *_47
 9315              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9316              		.loc 1 129 11 view .LVU3151
 9317 3701 480FA3DD 		bt	rbp, rbx	# *_47, index
 9318 3705 7379     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9319              		.loc 1 129 58 is_stmt 1 view .LVU3152
 9320              	.LVL458:
 9321              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9322              		.loc 1 129 63 is_stmt 0 view .LVU3153
 9323 3707 488D5902 		lea	rbx, 2[rcx]	# index,
 9324              	.LVL459:
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 257


 9325              		.loc 1 129 11 is_stmt 1 view .LVU3154
 9326              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9327              		.loc 1 129 21 is_stmt 0 view .LVU3155
 9328 370b 4989DE   		mov	r14, rbx	# tmp463, index
 9329 370e 49C1EE06 		shr	r14, 6	# tmp463,
 9330              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9331              		.loc 1 129 12 view .LVU3156
 9332 3712 4F8B14F7 		mov	r10, QWORD PTR [r15+r14*8]	# *_47, *_47
 9333              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9334              		.loc 1 129 11 view .LVU3157
 9335 3716 490FA3DA 		bt	r10, rbx	# *_47, index
 9336 371a 7364     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9337              		.loc 1 129 58 is_stmt 1 view .LVU3158
 9338              	.LVL460:
 9339              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9340              		.loc 1 129 63 is_stmt 0 view .LVU3159
 9341 371c 488D5903 		lea	rbx, 3[rcx]	# index,
 9342              	.LVL461:
 129:sieve_extend.c ****     return index;
 9343              		.loc 1 129 11 is_stmt 1 view .LVU3160
 9344              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9345              		.loc 1 129 21 is_stmt 0 view .LVU3161
 9346 3720 4889DA   		mov	rdx, rbx	# tmp467, index
 9347 3723 48C1EA06 		shr	rdx, 6	# tmp467,
 9348              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9349              		.loc 1 129 12 view .LVU3162
 9350 3727 498B3CD7 		mov	rdi, QWORD PTR [r15+rdx*8]	# *_47, *_47
 9351              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9352              		.loc 1 129 11 view .LVU3163
 9353 372b 480FA3DF 		bt	rdi, rbx	# *_47, index
 9354 372f 734F     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9355              		.loc 1 129 58 is_stmt 1 view .LVU3164
 9356              	.LVL462:
 9357              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9358              		.loc 1 129 63 is_stmt 0 view .LVU3165
 9359 3731 488D5904 		lea	rbx, 4[rcx]	# index,
 9360              	.LVL463:
 129:sieve_extend.c ****     return index;
 9361              		.loc 1 129 11 is_stmt 1 view .LVU3166
 9362              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9363              		.loc 1 129 21 is_stmt 0 view .LVU3167
 9364 3735 4989D8   		mov	r8, rbx	# tmp471, index
 9365 3738 49C1E806 		shr	r8, 6	# tmp471,
 9366              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9367              		.loc 1 129 12 view .LVU3168
GAS LISTING /tmp/ccW4ZvF5.s 			page 258


 9368 373c 4F8B0CC7 		mov	r9, QWORD PTR [r15+r8*8]	# *_47, *_47
 9369              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9370              		.loc 1 129 11 view .LVU3169
 9371 3740 490FA3D9 		bt	r9, rbx	# *_47, index
 9372 3744 733A     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9373              		.loc 1 129 58 is_stmt 1 view .LVU3170
 9374              	.LVL464:
 9375              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9376              		.loc 1 129 63 is_stmt 0 view .LVU3171
 9377 3746 488D5905 		lea	rbx, 5[rcx]	# index,
 9378              	.LVL465:
 129:sieve_extend.c ****     return index;
 9379              		.loc 1 129 11 is_stmt 1 view .LVU3172
 9380              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9381              		.loc 1 129 21 is_stmt 0 view .LVU3173
 9382 374a 4989DB   		mov	r11, rbx	# tmp475, index
 9383 374d 49C1EB06 		shr	r11, 6	# tmp475,
 9384              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9385              		.loc 1 129 12 view .LVU3174
 9386 3751 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_47, *_47
 9387              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9388              		.loc 1 129 11 view .LVU3175
 9389 3755 480FA3D8 		bt	rax, rbx	# *_47, index
 9390 3759 7325     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9391              		.loc 1 129 58 is_stmt 1 view .LVU3176
 9392              	.LVL466:
 9393              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9394              		.loc 1 129 63 is_stmt 0 view .LVU3177
 9395 375b 488D5906 		lea	rbx, 6[rcx]	# index,
 9396              	.LVL467:
 129:sieve_extend.c ****     return index;
 9397              		.loc 1 129 11 is_stmt 1 view .LVU3178
 9398              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9399              		.loc 1 129 21 is_stmt 0 view .LVU3179
 9400 375f 4889DE   		mov	rsi, rbx	# tmp479, index
 9401 3762 48C1EE06 		shr	rsi, 6	# tmp479,
 9402              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9403              		.loc 1 129 12 view .LVU3180
 9404 3766 4D8B24F7 		mov	r12, QWORD PTR [r15+rsi*8]	# *_47, *_47
 9405              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9406              		.loc 1 129 11 view .LVU3181
 9407 376a 490FA3DC 		bt	r12, rbx	# *_47, index
 9408 376e 7310     		jnc	.L726	#,
 129:sieve_extend.c ****     return index;
 9409              		.loc 1 129 58 is_stmt 1 view .LVU3182
 9410              	.LVL468:
GAS LISTING /tmp/ccW4ZvF5.s 			page 259


 9411              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 9412              		.loc 1 129 63 is_stmt 0 view .LVU3183
 9413 3770 488D5907 		lea	rbx, 7[rcx]	# index,
 9414              	.LVL469:
 129:sieve_extend.c ****     return index;
 9415              		.loc 1 129 11 is_stmt 1 view .LVU3184
 9416 3774 E948FFFF 		jmp	.L747	#
 9416      FF
 9417              	.LVL470:
 9418 3779 0F1F8000 		.p2align 4,,7
 9418      000000
 9419              		.p2align 3
 9420              	.L726:
 129:sieve_extend.c ****     return index;
 9421              		.loc 1 129 11 is_stmt 0 view .LVU3185
 9422              	.LBE480:
 9423              	.LBE481:
 9424              	.LBE501:
 9425              	.LBE507:
 9426              	.LBE515:
 9427              	# sieve_extend.c:934: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9428              		.loc 1 934 88 view .LVU3186
 9429 3780 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# pattern_start, %sfp
 9429      20
 9430 3785 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 9431              	.LVL471:
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9432              		.loc 1 934 88 view .LVU3187
 9433 3788 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9433      18
 9434              	.LVL472:
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9435              		.loc 1 934 88 view .LVU3188
 9436 378d 4889D8   		mov	rax, rbx	# index, index
 9437 3790 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# patternsize_bits, %sfp
 9437      30
 9438 3795 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, pattern_start
 9438      18
 9439 379a 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# prime, %sfp
 9439      10
 9440              	.LVL473:
 934:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9441              		.loc 1 934 88 view .LVU3189
 9442 379f 48895C24 		mov	QWORD PTR 16[rsp], rbx	# %sfp, index
 9442      10
 9443 37a4 E987FEFF 		jmp	.L724	#
 9443      FF
 9444              	.LVL474:
 9445 37a9 0F1F8000 		.p2align 4,,7
 9445      000000
 9446              		.p2align 3
 9447              	.L737:
 9448              	.LBB516:
 9449              	.LBB508:
 9450              	.LBB502:
GAS LISTING /tmp/ccW4ZvF5.s 			page 260


 927:sieve_extend.c ****         block.prime = prime;
 9451              		.loc 1 927 43 is_stmt 1 view .LVU3190
 9452              	.LBB482:
 9453              	.LBI482:
 398:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9454              		.loc 1 398 20 view .LVU3191
 9455              	.LBB483:
 399:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9456              		.loc 1 399 5 view .LVU3192
 400:sieve_extend.c **** 
 9457              		.loc 1 400 5 view .LVU3193
 9458              	# sieve_extend.c:400:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 400:sieve_extend.c **** 
 9459              		.loc 1 400 74 is_stmt 0 view .LVU3194
 9460 37b0 4D89E2   		mov	r10, r12	# tmp303, step
 9461 37b3 49C1E206 		sal	r10, 6	# tmp303,
 9462              	# sieve_extend.c:400:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 400:sieve_extend.c **** 
 9463              		.loc 1 400 21 view .LVU3195
 9464 37b7 4901EA   		add	r10, rbp	# range_stop_unique, index
 9465              	.LVL475:
 9466              	.LBB484:
 404:sieve_extend.c ****         #if __APPLE__
 9467              		.loc 1 404 10 is_stmt 1 view .LVU3196
 404:sieve_extend.c ****         #if __APPLE__
 9468              		.loc 1 404 50 view .LVU3197
 9469              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 9470              		.loc 1 404 5 is_stmt 0 view .LVU3198
 9471 37ba 4C39D5   		cmp	rbp, r10	# index, range_stop_unique
 9472 37bd 0F83F3FE 		jnb	.L738	#,
 9472      FFFF
 9473              	.LBB485:
 9474              	.LBB486:
 9475              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9476              		.loc 1 181 20 view .LVU3199
 9477 37c3 4D89F3   		mov	r11, r14	# range_stop_word, _67
 9478              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 9479              		.loc 1 183 110 view .LVU3200
 9480 37c6 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp306,
 9481              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9482              		.loc 1 181 20 view .LVU3201
 9483 37ca 49C1EB06 		shr	r11, 6	# range_stop_word,
 9484              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 9485              		.loc 1 207 29 view .LVU3202
 9486 37ce 4489F1   		mov	ecx, r14d	# tmp308, _67
 9487              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 9488              		.loc 1 183 133 view .LVU3203
 9489 37d1 4D89D9   		mov	r9, r11	# tmp312, range_stop_word
 9490              	# sieve_extend.c:200:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 200:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9491              		.loc 1 200 41 view .LVU3204
GAS LISTING /tmp/ccW4ZvF5.s 			page 261


 9492 37d4 4F8D04DF 		lea	r8, [r15+r11*8]	# range_stop_ptr,
 9493              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 9494              		.loc 1 183 133 view .LVU3205
 9495 37d8 4929F9   		sub	r9, rdi	# tmp312, tmp306
 9496              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 9497              		.loc 1 183 53 view .LVU3206
 9498 37db 4939FB   		cmp	r11, rdi	# range_stop_word, tmp306
 9499 37de 4F8D0CCF 		lea	r9, [r15+r9*8]	# tmp314,
 9500 37e2 4D89E3   		mov	r11, r12	# _537, step
 9501              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 9502              		.loc 1 207 29 view .LVU3207
 9503 37e5 F7D1     		not	ecx	# tmp308
 9504              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 9505              		.loc 1 183 53 view .LVU3208
 9506 37e7 4D0F46CF 		cmovbe	r9, r15	# _94,, fast_loop_ptr
 9507              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 9508              		.loc 1 207 29 view .LVU3209
 9509 37eb 48C7C0FF 		mov	rax, -1	# tmp641,
 9509      FFFFFF
 9510              	# sieve_extend.c:189:        index_ptr+=step;
 189:sieve_extend.c ****        *index_ptr |= mask;
 9511              		.loc 1 189 17 view .LVU3210
 9512 37f2 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _119,
 9512      00000000 
 9513 37fa 48C1E703 		sal	rdi, 3	# tmp318,
 9514              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 9515              		.loc 1 207 29 view .LVU3211
 9516 37fe C4E2F3F7 		shrx	rsi, rax, rcx	# _151, tmp641, tmp308
 9516      F0
 9517 3803 49C1E304 		sal	r11, 4	# _537,
 9518 3807 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, _151
 9518      40
 9519              	.LVL476:
 9520 380c 0F1F4000 		.p2align 4
 9521              		.p2align 3
 9522              	.L745:
 207:sieve_extend.c ****    }
 9523              		.loc 1 207 29 view .LVU3212
 9524              	.LBE486:
 9525              	.LBE485:
 408:sieve_extend.c ****         #endif
 9526              		.loc 1 408 13 is_stmt 1 view .LVU3213
 9527 3810 4889E8   		mov	rax, rbp	# tmp321, index
 9528 3813 B9010000 		mov	ecx, 1	# tmp644,
 9528      00
 9529 3818 48C1E806 		shr	rax, 6	# tmp321,
 9530 381c C4E2D1F7 		shlx	rcx, rcx, rbp	# _104, tmp644, index
 9530      C9
 9531              	.LVL477:
 9532              	.LBB489:
 9533              	.LBI485:
GAS LISTING /tmp/ccW4ZvF5.s 			page 262


 180:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9534              		.loc 1 180 20 view .LVU3214
 9535              	.LBB487:
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9536              		.loc 1 181 4 view .LVU3215
 182:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9537              		.loc 1 182 4 view .LVU3216
 9538              	# sieve_extend.c:182:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 182:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9539              		.loc 1 182 78 is_stmt 0 view .LVU3217
 9540 3821 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 9541              	.LVL478:
 183:sieve_extend.c **** 
 9542              		.loc 1 183 4 is_stmt 1 view .LVU3218
 187:sieve_extend.c ****        *index_ptr |= mask;
 9543              		.loc 1 187 10 view .LVU3219
 9544 3825 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 9545 3828 0F830201 		jnb	.L740	#,
 9545      0000
 187:sieve_extend.c ****        *index_ptr |= mask;
 9546              		.loc 1 187 10 is_stmt 0 view .LVU3220
 9547 382e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.542,
 9548              	.L741:
 188:sieve_extend.c ****        index_ptr+=step;
 9549              		.loc 1 188 8 is_stmt 1 view .LVU3221
 9550              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9551              		.loc 1 188 19 is_stmt 0 view .LVU3222
 9552 3832 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9553              		.loc 1 189 8 is_stmt 1 view .LVU3223
 9554              	.LVL479:
 190:sieve_extend.c ****        index_ptr+=step;
 9555              		.loc 1 190 8 view .LVU3224
 9556              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9557              		.loc 1 190 19 is_stmt 0 view .LVU3225
 9558 3835 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9559              		.loc 1 191 8 is_stmt 1 view .LVU3226
 9560              	.LVL480:
 192:sieve_extend.c ****        index_ptr+=step;
 9561              		.loc 1 192 8 view .LVU3227
 9562              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9563              		.loc 1 192 19 is_stmt 0 view .LVU3228
 9564 3839 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9565              		.loc 1 193 8 is_stmt 1 view .LVU3229
 9566              	.LVL481:
 194:sieve_extend.c ****        index_ptr+=step;
 9567              		.loc 1 194 8 view .LVU3230
 9568              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9569              		.loc 1 194 19 is_stmt 0 view .LVU3231
 9570 383c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 263


 9571              		.loc 1 195 8 is_stmt 1 view .LVU3232
 9572              	.LVL482:
 196:sieve_extend.c ****        index_ptr+=step;
 9573              		.loc 1 196 8 view .LVU3233
 9574 3840 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9575              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9576              		.loc 1 196 19 is_stmt 0 view .LVU3234
 9577 3843 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9578              		.loc 1 197 8 is_stmt 1 view .LVU3235
 9579 3847 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9580              	.LVL483:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9581              		.loc 1 187 10 view .LVU3236
 9582 384a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9583 384d 0F86DD00 		jbe	.L740	#,
 9583      0000
 188:sieve_extend.c ****        index_ptr+=step;
 9584              		.loc 1 188 8 view .LVU3237
 9585              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9586              		.loc 1 188 19 is_stmt 0 view .LVU3238
 9587 3853 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9588              		.loc 1 189 8 is_stmt 1 view .LVU3239
 9589              	.LVL484:
 190:sieve_extend.c ****        index_ptr+=step;
 9590              		.loc 1 190 8 view .LVU3240
 9591              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9592              		.loc 1 190 19 is_stmt 0 view .LVU3241
 9593 3856 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9594              		.loc 1 191 8 is_stmt 1 view .LVU3242
 9595              	.LVL485:
 192:sieve_extend.c ****        index_ptr+=step;
 9596              		.loc 1 192 8 view .LVU3243
 9597              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9598              		.loc 1 192 19 is_stmt 0 view .LVU3244
 9599 385a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9600              		.loc 1 193 8 is_stmt 1 view .LVU3245
 9601              	.LVL486:
 194:sieve_extend.c ****        index_ptr+=step;
 9602              		.loc 1 194 8 view .LVU3246
 9603              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9604              		.loc 1 194 19 is_stmt 0 view .LVU3247
 9605 385d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9606              		.loc 1 195 8 is_stmt 1 view .LVU3248
 9607              	.LVL487:
 196:sieve_extend.c ****        index_ptr+=step;
 9608              		.loc 1 196 8 view .LVU3249
 9609 3861 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
GAS LISTING /tmp/ccW4ZvF5.s 			page 264


 9610              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9611              		.loc 1 196 19 is_stmt 0 view .LVU3250
 9612 3864 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9613              		.loc 1 197 8 is_stmt 1 view .LVU3251
 9614 3868 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9615              	.LVL488:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9616              		.loc 1 187 10 view .LVU3252
 9617 386b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9618 386e 0F86BC00 		jbe	.L740	#,
 9618      0000
 188:sieve_extend.c ****        index_ptr+=step;
 9619              		.loc 1 188 8 view .LVU3253
 9620              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9621              		.loc 1 188 19 is_stmt 0 view .LVU3254
 9622 3874 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9623              		.loc 1 189 8 is_stmt 1 view .LVU3255
 9624              	.LVL489:
 190:sieve_extend.c ****        index_ptr+=step;
 9625              		.loc 1 190 8 view .LVU3256
 9626              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9627              		.loc 1 190 19 is_stmt 0 view .LVU3257
 9628 3877 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9629              		.loc 1 191 8 is_stmt 1 view .LVU3258
 9630              	.LVL490:
 192:sieve_extend.c ****        index_ptr+=step;
 9631              		.loc 1 192 8 view .LVU3259
 9632              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9633              		.loc 1 192 19 is_stmt 0 view .LVU3260
 9634 387b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9635              		.loc 1 193 8 is_stmt 1 view .LVU3261
 9636              	.LVL491:
 194:sieve_extend.c ****        index_ptr+=step;
 9637              		.loc 1 194 8 view .LVU3262
 9638              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9639              		.loc 1 194 19 is_stmt 0 view .LVU3263
 9640 387e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9641              		.loc 1 195 8 is_stmt 1 view .LVU3264
 9642              	.LVL492:
 196:sieve_extend.c ****        index_ptr+=step;
 9643              		.loc 1 196 8 view .LVU3265
 9644 3882 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9645              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9646              		.loc 1 196 19 is_stmt 0 view .LVU3266
 9647 3885 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
GAS LISTING /tmp/ccW4ZvF5.s 			page 265


 9648              		.loc 1 197 8 is_stmt 1 view .LVU3267
 9649 3889 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9650              	.LVL493:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9651              		.loc 1 187 10 view .LVU3268
 9652 388c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9653 388f 0F869B00 		jbe	.L740	#,
 9653      0000
 188:sieve_extend.c ****        index_ptr+=step;
 9654              		.loc 1 188 8 view .LVU3269
 9655              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9656              		.loc 1 188 19 is_stmt 0 view .LVU3270
 9657 3895 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9658              		.loc 1 189 8 is_stmt 1 view .LVU3271
 9659              	.LVL494:
 190:sieve_extend.c ****        index_ptr+=step;
 9660              		.loc 1 190 8 view .LVU3272
 9661              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9662              		.loc 1 190 19 is_stmt 0 view .LVU3273
 9663 3898 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9664              		.loc 1 191 8 is_stmt 1 view .LVU3274
 9665              	.LVL495:
 192:sieve_extend.c ****        index_ptr+=step;
 9666              		.loc 1 192 8 view .LVU3275
 9667              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9668              		.loc 1 192 19 is_stmt 0 view .LVU3276
 9669 389c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9670              		.loc 1 193 8 is_stmt 1 view .LVU3277
 9671              	.LVL496:
 194:sieve_extend.c ****        index_ptr+=step;
 9672              		.loc 1 194 8 view .LVU3278
 9673              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9674              		.loc 1 194 19 is_stmt 0 view .LVU3279
 9675 389f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9676              		.loc 1 195 8 is_stmt 1 view .LVU3280
 9677              	.LVL497:
 196:sieve_extend.c ****        index_ptr+=step;
 9678              		.loc 1 196 8 view .LVU3281
 9679 38a3 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9680              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9681              		.loc 1 196 19 is_stmt 0 view .LVU3282
 9682 38a6 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9683              		.loc 1 197 8 is_stmt 1 view .LVU3283
 9684 38aa 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9685              	.LVL498:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9686              		.loc 1 187 10 view .LVU3284
GAS LISTING /tmp/ccW4ZvF5.s 			page 266


 9687 38ad 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9688 38b0 767E     		jbe	.L740	#,
 188:sieve_extend.c ****        index_ptr+=step;
 9689              		.loc 1 188 8 view .LVU3285
 9690              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9691              		.loc 1 188 19 is_stmt 0 view .LVU3286
 9692 38b2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9693              		.loc 1 189 8 is_stmt 1 view .LVU3287
 9694              	.LVL499:
 190:sieve_extend.c ****        index_ptr+=step;
 9695              		.loc 1 190 8 view .LVU3288
 9696              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9697              		.loc 1 190 19 is_stmt 0 view .LVU3289
 9698 38b5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9699              		.loc 1 191 8 is_stmt 1 view .LVU3290
 9700              	.LVL500:
 192:sieve_extend.c ****        index_ptr+=step;
 9701              		.loc 1 192 8 view .LVU3291
 9702              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9703              		.loc 1 192 19 is_stmt 0 view .LVU3292
 9704 38b9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9705              		.loc 1 193 8 is_stmt 1 view .LVU3293
 9706              	.LVL501:
 194:sieve_extend.c ****        index_ptr+=step;
 9707              		.loc 1 194 8 view .LVU3294
 9708              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9709              		.loc 1 194 19 is_stmt 0 view .LVU3295
 9710 38bc 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9711              		.loc 1 195 8 is_stmt 1 view .LVU3296
 9712              	.LVL502:
 196:sieve_extend.c ****        index_ptr+=step;
 9713              		.loc 1 196 8 view .LVU3297
 9714 38c0 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9715              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9716              		.loc 1 196 19 is_stmt 0 view .LVU3298
 9717 38c3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9718              		.loc 1 197 8 is_stmt 1 view .LVU3299
 9719 38c7 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9720              	.LVL503:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9721              		.loc 1 187 10 view .LVU3300
 9722 38ca 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9723 38cd 7661     		jbe	.L740	#,
 188:sieve_extend.c ****        index_ptr+=step;
 9724              		.loc 1 188 8 view .LVU3301
 9725              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 267


 9726              		.loc 1 188 19 is_stmt 0 view .LVU3302
 9727 38cf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9728              		.loc 1 189 8 is_stmt 1 view .LVU3303
 9729              	.LVL504:
 190:sieve_extend.c ****        index_ptr+=step;
 9730              		.loc 1 190 8 view .LVU3304
 9731              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9732              		.loc 1 190 19 is_stmt 0 view .LVU3305
 9733 38d2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9734              		.loc 1 191 8 is_stmt 1 view .LVU3306
 9735              	.LVL505:
 192:sieve_extend.c ****        index_ptr+=step;
 9736              		.loc 1 192 8 view .LVU3307
 9737              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9738              		.loc 1 192 19 is_stmt 0 view .LVU3308
 9739 38d6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9740              		.loc 1 193 8 is_stmt 1 view .LVU3309
 9741              	.LVL506:
 194:sieve_extend.c ****        index_ptr+=step;
 9742              		.loc 1 194 8 view .LVU3310
 9743              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9744              		.loc 1 194 19 is_stmt 0 view .LVU3311
 9745 38d9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9746              		.loc 1 195 8 is_stmt 1 view .LVU3312
 9747              	.LVL507:
 196:sieve_extend.c ****        index_ptr+=step;
 9748              		.loc 1 196 8 view .LVU3313
 9749 38dd 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9750              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9751              		.loc 1 196 19 is_stmt 0 view .LVU3314
 9752 38e0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9753              		.loc 1 197 8 is_stmt 1 view .LVU3315
 9754 38e4 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9755              	.LVL508:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9756              		.loc 1 187 10 view .LVU3316
 9757 38e7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9758 38ea 7644     		jbe	.L740	#,
 188:sieve_extend.c ****        index_ptr+=step;
 9759              		.loc 1 188 8 view .LVU3317
 9760              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9761              		.loc 1 188 19 is_stmt 0 view .LVU3318
 9762 38ec 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9763              		.loc 1 189 8 is_stmt 1 view .LVU3319
 9764              	.LVL509:
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW4ZvF5.s 			page 268


 9765              		.loc 1 190 8 view .LVU3320
 9766              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9767              		.loc 1 190 19 is_stmt 0 view .LVU3321
 9768 38ef 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
 9769              		.loc 1 191 8 is_stmt 1 view .LVU3322
 9770              	.LVL510:
 192:sieve_extend.c ****        index_ptr+=step;
 9771              		.loc 1 192 8 view .LVU3323
 9772              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9773              		.loc 1 192 19 is_stmt 0 view .LVU3324
 9774 38f3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9775              		.loc 1 193 8 is_stmt 1 view .LVU3325
 9776              	.LVL511:
 194:sieve_extend.c ****        index_ptr+=step;
 9777              		.loc 1 194 8 view .LVU3326
 9778              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9779              		.loc 1 194 19 is_stmt 0 view .LVU3327
 9780 38f6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9781              		.loc 1 195 8 is_stmt 1 view .LVU3328
 9782              	.LVL512:
 196:sieve_extend.c ****        index_ptr+=step;
 9783              		.loc 1 196 8 view .LVU3329
 9784 38fa 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9785              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9786              		.loc 1 196 19 is_stmt 0 view .LVU3330
 9787 38fd 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9788              		.loc 1 197 8 is_stmt 1 view .LVU3331
 9789 3901 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9790              	.LVL513:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9791              		.loc 1 187 10 view .LVU3332
 9792 3904 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9793 3907 7627     		jbe	.L740	#,
 188:sieve_extend.c ****        index_ptr+=step;
 9794              		.loc 1 188 8 view .LVU3333
 9795              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9796              		.loc 1 188 19 is_stmt 0 view .LVU3334
 9797 3909 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_334, offset: 0B], _104
 189:sieve_extend.c ****        *index_ptr |= mask;
 9798              		.loc 1 189 8 is_stmt 1 view .LVU3335
 9799              	.LVL514:
 190:sieve_extend.c ****        index_ptr+=step;
 9800              		.loc 1 190 8 view .LVU3336
 9801              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9802              		.loc 1 190 19 is_stmt 0 view .LVU3337
 9803 390c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_334, index: _119, offset: 0B], _104
 191:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 269


 9804              		.loc 1 191 8 is_stmt 1 view .LVU3338
 9805              	.LVL515:
 192:sieve_extend.c ****        index_ptr+=step;
 9806              		.loc 1 192 8 view .LVU3339
 9807              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9808              		.loc 1 192 19 is_stmt 0 view .LVU3340
 9809 3910 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _529, offset: 0B], _104
 193:sieve_extend.c ****        *index_ptr |= mask;
 9810              		.loc 1 193 8 is_stmt 1 view .LVU3341
 9811              	.LVL516:
 194:sieve_extend.c ****        index_ptr+=step;
 9812              		.loc 1 194 8 view .LVU3342
 9813              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 9814              		.loc 1 194 19 is_stmt 0 view .LVU3343
 9815 3913 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _529, index: _119, offset: 0B], _104
 195:sieve_extend.c ****        *index_ptr |= mask;
 9816              		.loc 1 195 8 is_stmt 1 view .LVU3344
 9817              	.LVL517:
 196:sieve_extend.c ****        index_ptr+=step;
 9818              		.loc 1 196 8 view .LVU3345
 9819 3917 4801FE   		add	rsi, rdi	# ivtmp.542, tmp318
 9820              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 9821              		.loc 1 196 19 is_stmt 0 view .LVU3346
 9822 391a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_334, index: _119, step: 4, offset: 0B], _104
 197:sieve_extend.c ****    }
 9823              		.loc 1 197 8 is_stmt 1 view .LVU3347
 9824 391e 4801F8   		add	rax, rdi	# index_ptr, tmp318
 9825              	.LVL518:
 187:sieve_extend.c ****        *index_ptr |= mask;
 9826              		.loc 1 187 10 view .LVU3348
 9827 3921 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9828 3924 0F8708FF 		ja	.L741	#,
 9828      FFFF
 9829 392a 660F1F44 		.p2align 4
 9829      0000
 9830              		.p2align 3
 9831              	.L740:
 200:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9832              		.loc 1 200 4 view .LVU3349
 201:sieve_extend.c ****        *index_ptr |= mask;
 9833              		.loc 1 201 4 view .LVU3350
 201:sieve_extend.c ****        *index_ptr |= mask;
 9834              		.loc 1 201 10 view .LVU3351
 9835 3930 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9836 3933 765B     		jbe	.L742	#,
 9837              	.L743:
 202:sieve_extend.c ****        index_ptr+=step;
 9838              		.loc 1 202 8 view .LVU3352
 9839              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9840              		.loc 1 202 19 is_stmt 0 view .LVU3353
 9841 3935 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9842              		.loc 1 203 8 is_stmt 1 view .LVU3354
GAS LISTING /tmp/ccW4ZvF5.s 			page 270


 9843              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9844              		.loc 1 203 17 is_stmt 0 view .LVU3355
 9845 3938 4801D0   		add	rax, rdx	# index_ptr, _119
 9846              	.LVL519:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9847              		.loc 1 201 10 is_stmt 1 view .LVU3356
 9848 393b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9849 393e 7650     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9850              		.loc 1 202 8 view .LVU3357
 9851              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9852              		.loc 1 202 19 is_stmt 0 view .LVU3358
 9853 3940 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9854              		.loc 1 203 8 is_stmt 1 view .LVU3359
 9855              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9856              		.loc 1 203 17 is_stmt 0 view .LVU3360
 9857 3943 4801D0   		add	rax, rdx	# index_ptr, _119
 9858              	.LVL520:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9859              		.loc 1 201 10 is_stmt 1 view .LVU3361
 9860 3946 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9861 3949 7645     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9862              		.loc 1 202 8 view .LVU3362
 9863              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9864              		.loc 1 202 19 is_stmt 0 view .LVU3363
 9865 394b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9866              		.loc 1 203 8 is_stmt 1 view .LVU3364
 9867              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9868              		.loc 1 203 17 is_stmt 0 view .LVU3365
 9869 394e 4801D0   		add	rax, rdx	# index_ptr, _119
 9870              	.LVL521:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9871              		.loc 1 201 10 is_stmt 1 view .LVU3366
 9872 3951 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9873 3954 763A     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9874              		.loc 1 202 8 view .LVU3367
 9875              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9876              		.loc 1 202 19 is_stmt 0 view .LVU3368
 9877 3956 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9878              		.loc 1 203 8 is_stmt 1 view .LVU3369
 9879              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9880              		.loc 1 203 17 is_stmt 0 view .LVU3370
 9881 3959 4801D0   		add	rax, rdx	# index_ptr, _119
 9882              	.LVL522:
 201:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 271


 9883              		.loc 1 201 10 is_stmt 1 view .LVU3371
 9884 395c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9885 395f 762F     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9886              		.loc 1 202 8 view .LVU3372
 9887              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9888              		.loc 1 202 19 is_stmt 0 view .LVU3373
 9889 3961 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9890              		.loc 1 203 8 is_stmt 1 view .LVU3374
 9891              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9892              		.loc 1 203 17 is_stmt 0 view .LVU3375
 9893 3964 4801D0   		add	rax, rdx	# index_ptr, _119
 9894              	.LVL523:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9895              		.loc 1 201 10 is_stmt 1 view .LVU3376
 9896 3967 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9897 396a 7624     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9898              		.loc 1 202 8 view .LVU3377
 9899              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9900              		.loc 1 202 19 is_stmt 0 view .LVU3378
 9901 396c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9902              		.loc 1 203 8 is_stmt 1 view .LVU3379
 9903              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9904              		.loc 1 203 17 is_stmt 0 view .LVU3380
 9905 396f 4801D0   		add	rax, rdx	# index_ptr, _119
 9906              	.LVL524:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9907              		.loc 1 201 10 is_stmt 1 view .LVU3381
 9908 3972 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9909 3975 7619     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9910              		.loc 1 202 8 view .LVU3382
 9911              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 9912              		.loc 1 202 19 is_stmt 0 view .LVU3383
 9913 3977 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9914              		.loc 1 203 8 is_stmt 1 view .LVU3384
 9915              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9916              		.loc 1 203 17 is_stmt 0 view .LVU3385
 9917 397a 4801D0   		add	rax, rdx	# index_ptr, _119
 9918              	.LVL525:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9919              		.loc 1 201 10 is_stmt 1 view .LVU3386
 9920 397d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9921 3980 760E     		jbe	.L742	#,
 202:sieve_extend.c ****        index_ptr+=step;
 9922              		.loc 1 202 8 view .LVU3387
 9923              	# sieve_extend.c:202:        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 272


 202:sieve_extend.c ****        index_ptr+=step;
 9924              		.loc 1 202 19 is_stmt 0 view .LVU3388
 9925 3982 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_331, offset: 0B], _104
 203:sieve_extend.c ****    }
 9926              		.loc 1 203 8 is_stmt 1 view .LVU3389
 9927              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 9928              		.loc 1 203 17 is_stmt 0 view .LVU3390
 9929 3985 4801D0   		add	rax, rdx	# index_ptr, _119
 9930              	.LVL526:
 201:sieve_extend.c ****        *index_ptr |= mask;
 9931              		.loc 1 201 10 is_stmt 1 view .LVU3391
 9932 3988 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9933 398b 77A8     		ja	.L743	#,
 9934 398d 0F1F00   		.p2align 4
 9935              		.p2align 3
 9936              	.L742:
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9937              		.loc 1 206 4 view .LVU3392
 9938              	# sieve_extend.c:206:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9939              		.loc 1 206 7 is_stmt 0 view .LVU3393
 9940 3990 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9941 3993 747B     		je	.L938	#,
 9942              	.LVL527:
 9943              	.L744:
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9944              		.loc 1 206 7 view .LVU3394
 9945              	.LBE487:
 9946              	.LBE489:
 404:sieve_extend.c ****         #if __APPLE__
 9947              		.loc 1 404 77 is_stmt 1 view .LVU3395
 9948              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 9949              		.loc 1 404 83 is_stmt 0 view .LVU3396
 9950 3995 4C01E5   		add	rbp, r12	# index, step
 9951              	.LVL528:
 404:sieve_extend.c ****         #if __APPLE__
 9952              		.loc 1 404 50 is_stmt 1 view .LVU3397
 9953              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 9954              		.loc 1 404 5 is_stmt 0 view .LVU3398
 9955 3998 4939EA   		cmp	r10, rbp	# range_stop_unique, index
 9956 399b 0F876FFE 		ja	.L745	#,
 9956      FFFF
 9957              	.LVL529:
 404:sieve_extend.c ****         #if __APPLE__
 9958              		.loc 1 404 5 view .LVU3399
 9959              	.LBE484:
 9960              	.LBE483:
 9961              	.LBE482:
 9962              	.LBE502:
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9963              		.loc 1 905 11 is_stmt 1 view .LVU3400
 9964              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9965              		.loc 1 905 5 is_stmt 0 view .LVU3401
GAS LISTING /tmp/ccW4ZvF5.s 			page 273


 9966 39a1 4C3B7424 		cmp	r14, QWORD PTR 8[rsp]	# _67, %sfp
 9966      08
 9967 39a6 0F8215FD 		jb	.L747	#,
 9967      FFFF
 9968              	.L937:
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9969              		.loc 1 905 5 view .LVU3402
 9970 39ac 488B6C24 		mov	rbp, QWORD PTR 16[rsp]	# index, %sfp
 9970      10
 9971 39b1 BA010000 		mov	edx, 1	# tmp327,
 9971      00
 9972 39b6 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# <retval>, %sfp
 9972      28
 9973 39bb 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9973      18
 9974 39c0 4989EE   		mov	r14, rbp	# tmp324, index
 9975              	.LVL530:
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9976              		.loc 1 905 5 view .LVU3403
 9977 39c3 89EF     		mov	edi, ebp	# tmp653, index
 9978 39c5 4C8B6308 		mov	r12, QWORD PTR 8[rbx]	# prephitmp_564, sieve_89->bits
 9979              	.LVL531:
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9980              		.loc 1 905 5 view .LVU3404
 9981 39c9 C462C1F7 		shlx	r8, rdx, rdi	# prephitmp_502, tmp327, tmp653
 9981      C2
 9982 39ce 49C1EE06 		shr	r14, 6	# tmp324,
 9983 39d2 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 9984 39d5 4F8D14F7 		lea	r10, [r15+r14*8]	# prephitmp_505,
 9985              	.LBE508:
 9986              	.LBE516:
 9987              	.LBB517:
 9988              	.LBB518:
 9989              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9990              		.loc 1 845 8 view .LVU3405
 9991 39d9 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9992 39dd 4C896424 		mov	QWORD PTR 8[rsp], r12	# %sfp, prephitmp_564
 9992      08
 9993              	.LVL532:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9994              		.loc 1 845 8 view .LVU3406
 9995 39e2 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, prephitmp_502
 9995      30
 9996              	.LVL533:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9997              		.loc 1 845 8 view .LVU3407
 9998              	.LBE518:
 9999              	.LBE517:
 10000              	.LBB523:
 10001              	.LBB509:
 10002              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10003              		.loc 1 905 5 view .LVU3408
 10004 39e7 48896C24 		mov	QWORD PTR 72[rsp], rbp	# %sfp, index
 10004      48
 931:sieve_extend.c **** }
GAS LISTING /tmp/ccW4ZvF5.s 			page 274


 10005              		.loc 1 931 5 is_stmt 1 view .LVU3409
 10006              	.LVL534:
 931:sieve_extend.c **** }
 10007              		.loc 1 931 5 is_stmt 0 view .LVU3410
 10008              	.LBE509:
 10009              	.LBE523:
 942:sieve_extend.c ****     counter_t startprime = block.prime;
 10010              		.loc 1 942 5 is_stmt 1 view .LVU3411
 10011              	.LBB524:
 10012              	.LBI517:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10013              		.loc 1 844 20 view .LVU3412
 10014              	.LBB519:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10015              		.loc 1 845 5 view .LVU3413
 10016 39ec 4C895424 		mov	QWORD PTR 64[rsp], r10	# %sfp, prephitmp_505
 10016      40
 10017              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10018              		.loc 1 845 8 is_stmt 0 view .LVU3414
 10019 39f1 0F87AB00 		ja	.L748	#,
 10019      0000
 10020              	.LVL535:
 10021              	.L725:
 846:sieve_extend.c ****         return; // rapid exit for small sizes
 10022              		.loc 1 846 9 is_stmt 1 view .LVU3415
 10023 39f7 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10023      08
 10024 39fc 4C89FF   		mov	rdi, r15	#, _94
 10025 39ff E8FCC5FF 		call	extendSieve_smallSize	#
 10025      FF
 10026              	.LVL536:
 847:sieve_extend.c ****     }
 10027              		.loc 1 847 9 view .LVU3416
 10028 3a04 E9C30000 		jmp	.L749	#
 10028      00
 10029              	.LVL537:
 10030 3a09 0F1F8000 		.p2align 4,,7
 10030      000000
 10031              		.p2align 3
 10032              	.L938:
 847:sieve_extend.c ****     }
 10033              		.loc 1 847 9 is_stmt 0 view .LVU3417
 10034              	.LBE519:
 10035              	.LBE524:
 10036              	.LBB525:
 10037              	.LBB510:
 10038              	.LBB503:
 10039              	.LBB493:
 10040              	.LBB492:
 10041              	.LBB491:
 10042              	.LBB490:
 10043              	.LBB488:
 207:sieve_extend.c ****    }
 10044              		.loc 1 207 7 is_stmt 1 view .LVU3418
 10045              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
GAS LISTING /tmp/ccW4ZvF5.s 			page 275


 10046              		.loc 1 207 27 is_stmt 0 view .LVU3419
 10047 3a10 48234C24 		and	rcx, QWORD PTR 64[rsp]	# tmp323, %sfp
 10047      40
 10048              	.LVL538:
 10049              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 10050              		.loc 1 207 18 view .LVU3420
 10051 3a15 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_330, tmp323
 10052 3a18 E978FFFF 		jmp	.L744	#
 10052      FF
 10053              	.LVL539:
 10054 3a1d 0F1F00   		.p2align 4,,7
 10055              		.p2align 3
 10056              	.L936:
 207:sieve_extend.c ****    }
 10057              		.loc 1 207 18 view .LVU3421
 10058              	.LBE488:
 10059              	.LBE490:
 10060              	.LBE491:
 10061              	.LBE492:
 10062              	.LBE493:
 919:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 10063              		.loc 1 919 13 is_stmt 1 view .LVU3422
 920:sieve_extend.c ****         }
 10064              		.loc 1 920 13 view .LVU3423
 10065              	.LBB494:
 10066              	.LBI494:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10067              		.loc 1 844 20 view .LVU3424
 10068              	.LBB495:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10069              		.loc 1 845 5 view .LVU3425
 10070              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10071              		.loc 1 845 8 is_stmt 0 view .LVU3426
 10072 3a20 4983FD3F 		cmp	r13, 63	# patternsize_bits,
 10073 3a24 0F86E305 		jbe	.L939	#,
 10073      0000
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10074              		.loc 1 850 5 is_stmt 1 view .LVU3427
 10075              	.LVL540:
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10076              		.loc 1 851 5 view .LVU3428
 10077              	# sieve_extend.c:850:     const counter_t copy_start  = source_start + size;
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10078              		.loc 1 850 21 is_stmt 0 view .LVU3429
 10079 3a2a 4F8D442D 		lea	r8, [r13+r13]	# copy_start,
 10079      00
 10080              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 10081              		.loc 1 852 22 view .LVU3430
 10082 3a2f 4D89E9   		mov	r9, r13	# source_bit, patternsize_bits
 10083              	# sieve_extend.c:851:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10084              		.loc 1 851 22 view .LVU3431
 10085 3a32 4183E03F 		and	r8d, 63	# copy_bit,
 10086              	.LVL541:
GAS LISTING /tmp/ccW4ZvF5.s 			page 276


 852:sieve_extend.c **** 
 10087              		.loc 1 852 5 is_stmt 1 view .LVU3432
 10088              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 10089              		.loc 1 852 22 is_stmt 0 view .LVU3433
 10090 3a36 4183E13F 		and	r9d, 63	# source_bit,
 10091              	.LVL542:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10092              		.loc 1 854 5 is_stmt 1 view .LVU3434
 10093              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10094              		.loc 1 854 13 is_stmt 0 view .LVU3435
 10095 3a3a 4D39C8   		cmp	r8, r9	# copy_bit, source_bit
 10096              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10097              		.loc 1 854 37 view .LVU3436
 10098 3a3d 4C89F1   		mov	rcx, r14	#, _67
 10099 3a40 4C89EA   		mov	rdx, r13	#, patternsize_bits
 10100 3a43 4C89EE   		mov	rsi, r13	#, patternsize_bits
 10101 3a46 4C89FF   		mov	rdi, r15	#, _94
 10102              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10103              		.loc 1 854 13 view .LVU3437
 10104 3a49 0F827204 		jb	.L940	#,
 10104      0000
 10105              	.LVL543:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10106              		.loc 1 855 10 is_stmt 1 view .LVU3438
 10107              	# sieve_extend.c:855:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10108              		.loc 1 855 13 is_stmt 0 view .LVU3439
 10109 3a4f 0F865D04 		jbe	.L736	#,
 10109      0000
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10110              		.loc 1 855 37 is_stmt 1 view .LVU3440
 10111 3a55 E866CCFF 		call	extendSieve_shiftright_ivdep	#
 10111      FF
 10112              	.LVL544:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10113              		.loc 1 855 37 is_stmt 0 view .LVU3441
 10114 3a5a 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 10114      20
 10115 3a5f 90       		.p2align 4,,3
 10116 3a60 E933FCFF 		jmp	.L733	#
 10116      FF
 10117              	.LVL545:
 10118              	.L934:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10119              		.loc 1 855 37 view .LVU3442
 10120 3a65 4C8B6C24 		mov	r13, QWORD PTR 40[rsp]	# <retval>, %sfp
 10120      28
 10121 3a6a 4989CB   		mov	r11, rcx	# tmp289, prime
 10122 3a6d 49C1EB06 		shr	r11, 6	# tmp289,
 10123 3a71 41BC0100 		mov	r12d, 1	# tmp292,
 10123      0000
 10124 3a77 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, prime
 10124      48
GAS LISTING /tmp/ccW4ZvF5.s 			page 277


 10125 3a7c 4B8D04DF 		lea	rax, [r15+r11*8]	# prephitmp_505,
 10126 3a80 4D8B4D08 		mov	r9, QWORD PTR 8[r13]	# prephitmp_564, sieve_89->bits
 10127 3a84 C4C2F1F7 		shlx	rbx, r12, rcx	# prephitmp_502, tmp292, tmp624
 10127      DC
 10128 3a89 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, prephitmp_505
 10128      40
 10129 3a8e 48895C24 		mov	QWORD PTR 48[rsp], rbx	# %sfp, prephitmp_502
 10129      30
 10130 3a93 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, prephitmp_564
 10130      08
 10131              	.LVL546:
 10132              	.L732:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10133              		.loc 1 855 37 view .LVU3443
 10134              	.LBE495:
 10135              	.LBE494:
 10136              	.LBE503:
 10137              	.LBE510:
 10138              	.LBE525:
 942:sieve_extend.c ****     counter_t startprime = block.prime;
 10139              		.loc 1 942 5 is_stmt 1 view .LVU3444
 10140              	.LBB526:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10141              		.loc 1 844 20 view .LVU3445
 10142              	.LBB520:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10143              		.loc 1 845 5 view .LVU3446
 10144              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10145              		.loc 1 845 8 is_stmt 0 view .LVU3447
 10146 3a98 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10147 3a9c 0F8655FF 		jbe	.L725	#,
 10147      FFFF
 10148              	.LVL547:
 10149              	.L748:
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10150              		.loc 1 850 5 is_stmt 1 view .LVU3448
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10151              		.loc 1 851 5 view .LVU3449
 10152              	# sieve_extend.c:850:     const counter_t copy_start  = source_start + size;
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10153              		.loc 1 850 21 is_stmt 0 view .LVU3450
 10154 3aa2 488D2C16 		lea	rbp, [rsi+rdx]	# copy_start,
 10155              	.LVL548:
 10156              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 10157              		.loc 1 852 22 view .LVU3451
 10158 3aa6 4989F6   		mov	r14, rsi	# source_bit, block$pattern_start
 10159              	# sieve_extend.c:851:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10160              		.loc 1 851 22 view .LVU3452
 10161 3aa9 83E53F   		and	ebp, 63	# copy_bit,
 10162              	.LVL549:
 852:sieve_extend.c **** 
 10163              		.loc 1 852 5 is_stmt 1 view .LVU3453
 10164              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 278


 10165              		.loc 1 852 22 is_stmt 0 view .LVU3454
 10166 3aac 4183E63F 		and	r14d, 63	# source_bit,
 10167              	.LVL550:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10168              		.loc 1 854 5 is_stmt 1 view .LVU3455
 10169              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10170              		.loc 1 854 13 is_stmt 0 view .LVU3456
 10171 3ab0 4C39F5   		cmp	rbp, r14	# copy_bit, source_bit
 10172              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10173              		.loc 1 854 37 view .LVU3457
 10174 3ab3 4C89FF   		mov	rdi, r15	#, _94
 10175 3ab6 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10175      08
 10176              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10177              		.loc 1 854 13 view .LVU3458
 10178 3abb 0F826705 		jb	.L941	#,
 10178      0000
 10179              	.LVL551:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10180              		.loc 1 855 10 is_stmt 1 view .LVU3459
 10181              	# sieve_extend.c:855:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10182              		.loc 1 855 13 is_stmt 0 view .LVU3460
 10183 3ac1 0F870904 		ja	.L942	#,
 10183      0000
 856:sieve_extend.c **** }
 10184              		.loc 1 856 37 is_stmt 1 view .LVU3461
 10185 3ac7 E814E3FF 		call	extendSieve_aligned	#
 10185      FF
 10186              	.LVL552:
 10187              	.L749:
 856:sieve_extend.c **** }
 10188              		.loc 1 856 37 is_stmt 0 view .LVU3462
 10189              	.LBE520:
 10190              	.LBE526:
 943:sieve_extend.c **** 
 10191              		.loc 1 943 5 is_stmt 1 view .LVU3463
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10192              		.loc 1 946 5 view .LVU3464
 10193              	.LBB527:
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10194              		.loc 1 946 10 view .LVU3465
 10195              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10196              		.loc 1 946 38 is_stmt 0 view .LVU3466
 10197 3acc 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# blocksize, %sfp
 10197      38
 10198              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10199              		.loc 1 946 20 view .LVU3467
 10200 3ad1 4531F6   		xor	r14d, r14d	# block_start
 10201              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10202              		.loc 1 946 83 view .LVU3468
GAS LISTING /tmp/ccW4ZvF5.s 			page 279


 10203 3ad4 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# <retval>, %sfp
 10203      28
 10204              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10205              		.loc 1 946 38 view .LVU3469
 10206 3ad9 4C8D66FF 		lea	r12, -1[rsi]	# block_stop,
 10207              	.LVL553:
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10208              		.loc 1 946 63 is_stmt 1 view .LVU3470
 10209              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10210              		.loc 1 946 83 is_stmt 0 view .LVU3471
 10211 3add 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _7, sieve_89->bits
 10212              	.LVL554:
 10213 3ae1 66662E0F 		.p2align 4
 10213      1F840000 
 10213      0000000F 
 10213      1F4000
 10214              		.p2align 3
 10215              	.L755:
 10216              	.LBB528:
 947:sieve_extend.c ****         counter_t prime = searchBitFalse(bitarray, startprime);
 10217              		.loc 1 947 9 is_stmt 1 view .LVU3472
 10218              	.LBB529:
 10219              	.LBB530:
 10220              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10221              		.loc 1 129 11 is_stmt 0 view .LVU3473
 10222 3af0 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	# prephitmp_505, %sfp
 10222      40
 10223 3af5 4C39E2   		cmp	rdx, r12	# _7, block_stop
 10224 3af8 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# prephitmp_502, %sfp
 10224      30
 10225 3afd 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# index, %sfp
 10225      48
 10226 3b02 4C0F46E2 		cmovbe	r12, rdx	# _7,, block_stop
 10227              	.LVL555:
 129:sieve_extend.c ****     return index;
 10228              		.loc 1 129 11 view .LVU3474
 10229 3b06 4C896424 		mov	QWORD PTR 8[rsp], r12	# %sfp, block_stop
 10229      08
 10230              	.LVL556:
 129:sieve_extend.c ****     return index;
 10231              		.loc 1 129 11 view .LVU3475
 10232              	.LBE530:
 10233              	.LBE529:
 948:sieve_extend.c ****         sieve_block_stripe(bitarray, block_start, block_stop, prime);
 10234              		.loc 1 948 9 is_stmt 1 view .LVU3476
 10235              	.LBB532:
 10236              	.LBI529:
 128:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10237              		.loc 1 128 25 view .LVU3477
 10238              	.LBB531:
 129:sieve_extend.c ****     return index;
 10239              		.loc 1 129 5 view .LVU3478
 129:sieve_extend.c ****     return index;
 10240              		.loc 1 129 11 view .LVU3479
GAS LISTING /tmp/ccW4ZvF5.s 			page 280


 10241 3b0b 4C852F   		test	QWORD PTR [rdi], r13	# MEM[(uint64_t *)prephitmp_505], prephitmp_502
 10242 3b0e 0F84BC00 		je	.L752	#,
 10242      0000
 10243              	.LVL557:
 10244              	.L753:
 129:sieve_extend.c ****     return index;
 10245              		.loc 1 129 58 view .LVU3480
 10246              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10247              		.loc 1 129 63 is_stmt 0 view .LVU3481
 10248 3b14 4D8D4801 		lea	r9, 1[r8]	# tmp393,
 10249              	.LVL558:
 10250              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10251              		.loc 1 129 21 view .LVU3482
 10252 3b18 4D89CB   		mov	r11, r9	# tmp330, index
 10253              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10254              		.loc 1 129 63 view .LVU3483
 10255 3b1b 4D89C8   		mov	r8, r9	# index, tmp393
 129:sieve_extend.c ****     return index;
 10256              		.loc 1 129 11 is_stmt 1 view .LVU3484
 10257              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10258              		.loc 1 129 21 is_stmt 0 view .LVU3485
 10259 3b1e 49C1EB06 		shr	r11, 6	# tmp330,
 10260              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10261              		.loc 1 129 12 view .LVU3486
 10262 3b22 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_32, *_32
 10263              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10264              		.loc 1 129 11 view .LVU3487
 10265 3b26 4C0FA3C8 		bt	rax, r9	# *_32, index
 10266 3b2a 0F83A000 		jnc	.L752	#,
 10266      0000
 129:sieve_extend.c ****     return index;
 10267              		.loc 1 129 58 is_stmt 1 view .LVU3488
 10268              	.LVL559:
 10269              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10270              		.loc 1 129 63 is_stmt 0 view .LVU3489
 10271 3b30 4983C001 		add	r8, 1	# index,
 10272              	.LVL560:
 129:sieve_extend.c ****     return index;
 10273              		.loc 1 129 11 is_stmt 1 view .LVU3490
 10274              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10275              		.loc 1 129 21 is_stmt 0 view .LVU3491
 10276 3b34 4D89C4   		mov	r12, r8	# tmp431, index
 10277 3b37 49C1EC06 		shr	r12, 6	# tmp431,
 10278              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10279              		.loc 1 129 12 view .LVU3492
 10280 3b3b 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
 10281              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 281


 10282              		.loc 1 129 11 view .LVU3493
 10283 3b3f 4C0FA3C1 		bt	rcx, r8	# *_32, index
 10284 3b43 0F838700 		jnc	.L752	#,
 10284      0000
 129:sieve_extend.c ****     return index;
 10285              		.loc 1 129 58 is_stmt 1 view .LVU3494
 10286              	.LVL561:
 10287              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10288              		.loc 1 129 63 is_stmt 0 view .LVU3495
 10289 3b49 4D8D4102 		lea	r8, 2[r9]	# index,
 10290              	.LVL562:
 129:sieve_extend.c ****     return index;
 10291              		.loc 1 129 11 is_stmt 1 view .LVU3496
 10292              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10293              		.loc 1 129 21 is_stmt 0 view .LVU3497
 10294 3b4d 4C89C3   		mov	rbx, r8	# tmp435, index
 10295 3b50 48C1EB06 		shr	rbx, 6	# tmp435,
 10296              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10297              		.loc 1 129 12 view .LVU3498
 10298 3b54 498B2CDF 		mov	rbp, QWORD PTR [r15+rbx*8]	# *_32, *_32
 10299              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10300              		.loc 1 129 11 view .LVU3499
 10301 3b58 4C0FA3C5 		bt	rbp, r8	# *_32, index
 10302 3b5c 7372     		jnc	.L752	#,
 129:sieve_extend.c ****     return index;
 10303              		.loc 1 129 58 is_stmt 1 view .LVU3500
 10304              	.LVL563:
 10305              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10306              		.loc 1 129 63 is_stmt 0 view .LVU3501
 10307 3b5e 4D8D4103 		lea	r8, 3[r9]	# index,
 10308              	.LVL564:
 129:sieve_extend.c ****     return index;
 10309              		.loc 1 129 11 is_stmt 1 view .LVU3502
 10310              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10311              		.loc 1 129 21 is_stmt 0 view .LVU3503
 10312 3b62 4C89C6   		mov	rsi, r8	# tmp439, index
 10313 3b65 48C1EE06 		shr	rsi, 6	# tmp439,
 10314              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10315              		.loc 1 129 12 view .LVU3504
 10316 3b69 4D8B14F7 		mov	r10, QWORD PTR [r15+rsi*8]	# *_32, *_32
 10317              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10318              		.loc 1 129 11 view .LVU3505
 10319 3b6d 4D0FA3C2 		bt	r10, r8	# *_32, index
 10320 3b71 735D     		jnc	.L752	#,
 129:sieve_extend.c ****     return index;
 10321              		.loc 1 129 58 is_stmt 1 view .LVU3506
 10322              	.LVL565:
 10323              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 282


 10324              		.loc 1 129 63 is_stmt 0 view .LVU3507
 10325 3b73 4D8D4104 		lea	r8, 4[r9]	# index,
 10326              	.LVL566:
 129:sieve_extend.c ****     return index;
 10327              		.loc 1 129 11 is_stmt 1 view .LVU3508
 10328              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10329              		.loc 1 129 21 is_stmt 0 view .LVU3509
 10330 3b77 4C89C7   		mov	rdi, r8	# tmp443, index
 10331 3b7a 48C1EF06 		shr	rdi, 6	# tmp443,
 10332              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10333              		.loc 1 129 12 view .LVU3510
 10334 3b7e 4D8B2CFF 		mov	r13, QWORD PTR [r15+rdi*8]	# *_32, *_32
 10335              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10336              		.loc 1 129 11 view .LVU3511
 10337 3b82 4D0FA3C5 		bt	r13, r8	# *_32, index
 10338 3b86 7348     		jnc	.L752	#,
 129:sieve_extend.c ****     return index;
 10339              		.loc 1 129 58 is_stmt 1 view .LVU3512
 10340              	.LVL567:
 10341              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10342              		.loc 1 129 63 is_stmt 0 view .LVU3513
 10343 3b88 4D8D4105 		lea	r8, 5[r9]	# index,
 10344              	.LVL568:
 129:sieve_extend.c ****     return index;
 10345              		.loc 1 129 11 is_stmt 1 view .LVU3514
 10346              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10347              		.loc 1 129 21 is_stmt 0 view .LVU3515
 10348 3b8c 4D89C3   		mov	r11, r8	# tmp447, index
 10349 3b8f 49C1EB06 		shr	r11, 6	# tmp447,
 10350              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10351              		.loc 1 129 12 view .LVU3516
 10352 3b93 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_32, *_32
 10353              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10354              		.loc 1 129 11 view .LVU3517
 10355 3b97 4C0FA3C0 		bt	rax, r8	# *_32, index
 10356 3b9b 7333     		jnc	.L752	#,
 129:sieve_extend.c ****     return index;
 10357              		.loc 1 129 58 is_stmt 1 view .LVU3518
 10358              	.LVL569:
 10359              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10360              		.loc 1 129 63 is_stmt 0 view .LVU3519
 10361 3b9d 4D8D4106 		lea	r8, 6[r9]	# index,
 10362              	.LVL570:
 129:sieve_extend.c ****     return index;
 10363              		.loc 1 129 11 is_stmt 1 view .LVU3520
 10364              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10365              		.loc 1 129 21 is_stmt 0 view .LVU3521
 10366 3ba1 4D89C4   		mov	r12, r8	# tmp451, index
GAS LISTING /tmp/ccW4ZvF5.s 			page 283


 10367 3ba4 49C1EC06 		shr	r12, 6	# tmp451,
 10368              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10369              		.loc 1 129 12 view .LVU3522
 10370 3ba8 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
 10371              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10372              		.loc 1 129 11 view .LVU3523
 10373 3bac 4C0FA3C1 		bt	rcx, r8	# *_32, index
 10374 3bb0 731E     		jnc	.L752	#,
 129:sieve_extend.c ****     return index;
 10375              		.loc 1 129 58 is_stmt 1 view .LVU3524
 10376              	.LVL571:
 10377              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10378              		.loc 1 129 63 is_stmt 0 view .LVU3525
 10379 3bb2 4D8D4107 		lea	r8, 7[r9]	# index,
 10380              	.LVL572:
 129:sieve_extend.c ****     return index;
 10381              		.loc 1 129 11 is_stmt 1 view .LVU3526
 10382              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10383              		.loc 1 129 21 is_stmt 0 view .LVU3527
 10384 3bb6 4D89C1   		mov	r9, r8	# tmp455, index
 10385 3bb9 49C1E906 		shr	r9, 6	# tmp455,
 10386              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10387              		.loc 1 129 12 view .LVU3528
 10388 3bbd 4B8B1CCF 		mov	rbx, QWORD PTR [r15+r9*8]	# *_32, *_32
 10389              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 10390              		.loc 1 129 11 view .LVU3529
 10391 3bc1 4C0FA3C3 		bt	rbx, r8	# *_32, index
 10392 3bc5 0F8249FF 		jc	.L753	#,
 10392      FFFF
 10393              	.LVL573:
 10394 3bcb 0F1F4400 		.p2align 4
 10394      00
 10395              		.p2align 3
 10396              	.L752:
 130:sieve_extend.c **** }
 10397              		.loc 1 130 5 is_stmt 1 view .LVU3530
 130:sieve_extend.c **** }
 10398              		.loc 1 130 5 is_stmt 0 view .LVU3531
 10399              	.LBE531:
 10400              	.LBE532:
 949:sieve_extend.c ****     } 
 10401              		.loc 1 949 9 is_stmt 1 view .LVU3532
 10402              	.LBB533:
 10403              	.LBI533:
 859:sieve_extend.c ****     counter_t prime = prime_start;
 10404              		.loc 1 859 13 view .LVU3533
 10405              	.LBB534:
 860:sieve_extend.c ****     counter_t start = 0;
 10406              		.loc 1 860 5 view .LVU3534
 861:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10407              		.loc 1 861 5 view .LVU3535
GAS LISTING /tmp/ccW4ZvF5.s 			page 284


 862:sieve_extend.c **** 
 10408              		.loc 1 862 5 view .LVU3536
 10409              	# sieve_extend.c:862:     counter_t step  = prime * 2 + 1;
 862:sieve_extend.c **** 
 10410              		.loc 1 862 15 is_stmt 0 view .LVU3537
 10411 3bd0 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 10411      01
 10412              	.LVL574:
 864:sieve_extend.c ****     
 10413              		.loc 1 864 5 is_stmt 1 view .LVU3538
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10414              		.loc 1 866 5 view .LVU3539
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10415              		.loc 1 866 11 view .LVU3540
 10416              	# sieve_extend.c:866:     while (prime*step <= block_stop) {
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10417              		.loc 1 866 17 is_stmt 0 view .LVU3541
 10418 3bd5 4C89C5   		mov	rbp, r8	# tmp336, index
 10419 3bd8 490FAFEA 		imul	rbp, r10	# tmp336, step
 10420              	# sieve_extend.c:866:     while (prime*step <= block_stop) {
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 10421              		.loc 1 866 11 view .LVU3542
 10422 3bdc 48396C24 		cmp	QWORD PTR 8[rsp], rbp	# %sfp, tmp336
 10422      08
 10423 3be1 0F829D02 		jb	.L772	#,
 10423      0000
 10424              	.LBB535:
 10425              	.LBB536:
 10426              	.LBB537:
 10427              	.LBB538:
 10428              	.LBB539:
 10429              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10430              		.loc 1 181 20 view .LVU3543
 10431 3be7 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# block_stop, %sfp
 10431      08
 10432              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 10433              		.loc 1 207 29 view .LVU3544
 10434 3bec 48C7C7FF 		mov	rdi, -1	# tmp671,
 10434      FFFFFF
 10435 3bf3 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, block_start
 10435      18
 10436              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10437              		.loc 1 181 20 view .LVU3545
 10438 3bf8 4889D6   		mov	rsi, rdx	# range_stop_word, block_stop
 10439              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 10440              		.loc 1 207 29 view .LVU3546
 10441 3bfb F7D2     		not	edx	# tmp338
 10442              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10443              		.loc 1 181 20 view .LVU3547
 10444 3bfd 48C1EE06 		shr	rsi, 6	# range_stop_word,
 10445              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
GAS LISTING /tmp/ccW4ZvF5.s 			page 285


 10446              		.loc 1 207 29 view .LVU3548
 10447 3c01 C462EBF7 		shrx	r13, rdi, rdx	# _264, tmp671, tmp338
 10447      EF
 10448              	# sieve_extend.c:181:    const counter_t range_stop_word = wordindex(range_stop);
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10449              		.loc 1 181 20 view .LVU3549
 10450 3c06 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, range_stop_word
 10450      20
 10451              	# sieve_extend.c:200:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 200:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10452              		.loc 1 200 41 view .LVU3550
 10453 3c0b 498D1CF7 		lea	rbx, [r15+rsi*8]	# range_stop_ptr,
 10454              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 10455              		.loc 1 207 29 view .LVU3551
 10456 3c0f 4C896C24 		mov	QWORD PTR 16[rsp], r13	# %sfp, _264
 10456      10
 10457              	.LVL575:
 10458 3c14 66662E0F 		.p2align 4
 10458      1F840000 
 10458      00000090 
 10459              		.p2align 3
 10460              	.L771:
 207:sieve_extend.c ****    }
 10461              		.loc 1 207 29 view .LVU3552
 10462              	.LBE539:
 10463              	.LBE538:
 10464              	.LBE537:
 10465              	.LBE536:
 10466              	.LBE535:
 867:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10467              		.loc 1 867 9 is_stmt 1 view .LVU3553
 10468              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) 
 867:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10469              		.loc 1 867 12 is_stmt 0 view .LVU3554
 10470 3c20 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 10470      18
 10471 3c25 498D6801 		lea	rbp, 1[r8]	# _158,
 10472 3c29 4839E8   		cmp	rax, rbp	# block_start, _158
 10473 3c2c 0F82B603 		jb	.L757	#,
 10473      0000
 868:sieve_extend.c ****         else 
 10474              		.loc 1 868 13 is_stmt 1 view .LVU3555
 10475              	# sieve_extend.c:868:             start = block_start + prime + prime - ((block_start + prime) % st
 868:sieve_extend.c ****         else 
 10476              		.loc 1 868 33 is_stmt 0 view .LVU3556
 10477 3c32 4C01C0   		add	rax, r8	# _162, index
 10478              	# sieve_extend.c:868:             start = block_start + prime + prime - ((block_start + prime) % st
 868:sieve_extend.c ****         else 
 10479              		.loc 1 868 74 view .LVU3557
 10480 3c35 31D2     		xor	edx, edx	# tmp343
 10481              	# sieve_extend.c:868:             start = block_start + prime + prime - ((block_start + prime) % st
 868:sieve_extend.c ****         else 
 10482              		.loc 1 868 41 view .LVU3558
 10483 3c37 4A8D3400 		lea	rsi, [rax+r8]	# tmp341,
 10484              	# sieve_extend.c:868:             start = block_start + prime + prime - ((block_start + prime) % st
 868:sieve_extend.c ****         else 
GAS LISTING /tmp/ccW4ZvF5.s 			page 286


 10485              		.loc 1 868 74 view .LVU3559
 10486 3c3b 49F7F2   		div	r10	# step
 10487              	# sieve_extend.c:868:             start = block_start + prime + prime - ((block_start + prime) % st
 868:sieve_extend.c ****         else 
 10488              		.loc 1 868 19 view .LVU3560
 10489 3c3e 4829D6   		sub	rsi, rdx	# index, tmp343
 10490              	.LVL576:
 10491              	.L758:
 872:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10492              		.loc 1 872 9 is_stmt 1 view .LVU3561
 10493 3c41 4989EB   		mov	r11, rbp	# tmp346, _158
 10494 3c44 49C1EB06 		shr	r11, 6	# tmp346,
 10495 3c48 49C1E303 		sal	r11, 3	# _527,
 10496              	# sieve_extend.c:872:         if (step < VECTORSTEP_FASTER) {
 872:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10497              		.loc 1 872 12 is_stmt 0 view .LVU3562
 10498 3c4c 4C391500 		cmp	QWORD PTR global_VECTORSTEP_FASTER[rip], r10	# global_VECTORSTEP_FASTER, step
 10498      000000
 10499 3c53 4F8D241F 		lea	r12, [r15+r11]	# _528,
 10500 3c57 0F879302 		ja	.L943	#,
 10500      0000
 877:sieve_extend.c ****             prime = searchBitFalse_longRange(bitarray, prime+1 );
 10501              		.loc 1 877 13 is_stmt 1 view .LVU3563
 10502              	.LVL577:
 10503              	.LBB550:
 10504              	.LBI535:
 398:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10505              		.loc 1 398 20 view .LVU3564
 10506              	.LBB548:
 399:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10507              		.loc 1 399 5 view .LVU3565
 400:sieve_extend.c **** 
 10508              		.loc 1 400 5 view .LVU3566
 10509              	# sieve_extend.c:400:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 400:sieve_extend.c **** 
 10510              		.loc 1 400 74 is_stmt 0 view .LVU3567
 10511 3c5d 4D89D5   		mov	r13, r10	# tmp356, step
 10512 3c60 49C1E506 		sal	r13, 6	# tmp356,
 10513              	# sieve_extend.c:400:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 400:sieve_extend.c **** 
 10514              		.loc 1 400 21 view .LVU3568
 10515 3c64 4901F5   		add	r13, rsi	# range_stop_unique, index
 10516              	.LVL578:
 10517              	.LBB546:
 404:sieve_extend.c ****         #if __APPLE__
 10518              		.loc 1 404 10 is_stmt 1 view .LVU3569
 404:sieve_extend.c ****         #if __APPLE__
 10519              		.loc 1 404 50 view .LVU3570
 10520              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 10521              		.loc 1 404 5 is_stmt 0 view .LVU3571
 10522 3c67 4C39EE   		cmp	rsi, r13	# index, range_stop_unique
 10523 3c6a 0F83C501 		jnb	.L770	#,
 10523      0000
 10524              	.LBB543:
 10525              	.LBB540:
 10526              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/ccW4ZvF5.s 			page 287


 183:sieve_extend.c **** 
 10527              		.loc 1 183 133 view .LVU3572
 10528 3c70 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# range_stop_word, %sfp
 10528      20
 10529              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 10530              		.loc 1 183 110 view .LVU3573
 10531 3c75 4F8D0492 		lea	r8, [r10+r10*4]	# tmp365,
 10532              	# sieve_extend.c:189:        index_ptr+=step;
 189:sieve_extend.c ****        *index_ptr |= mask;
 10533              		.loc 1 189 17 view .LVU3574
 10534 3c79 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _232,
 10534      00000000 
 10535              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 10536              		.loc 1 183 133 view .LVU3575
 10537 3c81 4C89F1   		mov	rcx, r14	# tmp367, range_stop_word
 10538 3c84 4C29C1   		sub	rcx, r8	# tmp367, tmp365
 10539              	# sieve_extend.c:183:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 183:sieve_extend.c **** 
 10540              		.loc 1 183 53 view .LVU3576
 10541 3c87 4D39C6   		cmp	r14, r8	# range_stop_word, tmp365
 10542 3c8a 4D8D0CCF 		lea	r9, [r15+rcx*8]	# tmp369,
 10543 3c8e 4D89D6   		mov	r14, r10	# _555, step
 10544 3c91 4D0F46CF 		cmovbe	r9, r15	# _94,, fast_loop_ptr
 10545 3c95 49C1E003 		sal	r8, 3	# tmp373,
 10546 3c99 49C1E604 		sal	r14, 4	# _555,
 10547              	.LVL579:
 10548 3c9d 0F1F00   		.p2align 4
 10549              		.p2align 3
 10550              	.L769:
 183:sieve_extend.c **** 
 10551              		.loc 1 183 53 view .LVU3577
 10552              	.LBE540:
 10553              	.LBE543:
 408:sieve_extend.c ****         #endif
 10554              		.loc 1 408 13 is_stmt 1 view .LVU3578
 10555 3ca0 4889F0   		mov	rax, rsi	# tmp376, index
 10556 3ca3 BF010000 		mov	edi, 1	# tmp681,
 10556      00
 10557 3ca8 48C1E806 		shr	rax, 6	# tmp376,
 10558 3cac C4E2C9F7 		shlx	rcx, rdi, rsi	# _217, tmp681, index
 10558      CF
 10559              	.LVL580:
 10560              	.LBB544:
 10561              	.LBI538:
 180:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10562              		.loc 1 180 20 view .LVU3579
 10563              	.LBB541:
 181:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10564              		.loc 1 181 4 view .LVU3580
 182:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10565              		.loc 1 182 4 view .LVU3581
 10566              	# sieve_extend.c:182:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 182:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10567              		.loc 1 182 78 is_stmt 0 view .LVU3582
 10568 3cb1 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
GAS LISTING /tmp/ccW4ZvF5.s 			page 288


 10569              	.LVL581:
 183:sieve_extend.c **** 
 10570              		.loc 1 183 4 is_stmt 1 view .LVU3583
 187:sieve_extend.c ****        *index_ptr |= mask;
 10571              		.loc 1 187 10 view .LVU3584
 10572 3cb5 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 10573 3cb8 0F830201 		jnb	.L764	#,
 10573      0000
 187:sieve_extend.c ****        *index_ptr |= mask;
 10574              		.loc 1 187 10 is_stmt 0 view .LVU3585
 10575 3cbe 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.505,
 10576              	.L765:
 188:sieve_extend.c ****        index_ptr+=step;
 10577              		.loc 1 188 8 is_stmt 1 view .LVU3586
 10578              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10579              		.loc 1 188 19 is_stmt 0 view .LVU3587
 10580 3cc2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10581              		.loc 1 189 8 is_stmt 1 view .LVU3588
 10582              	.LVL582:
 190:sieve_extend.c ****        index_ptr+=step;
 10583              		.loc 1 190 8 view .LVU3589
 10584              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10585              		.loc 1 190 19 is_stmt 0 view .LVU3590
 10586 3cc5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10587              		.loc 1 191 8 is_stmt 1 view .LVU3591
 10588              	.LVL583:
 192:sieve_extend.c ****        index_ptr+=step;
 10589              		.loc 1 192 8 view .LVU3592
 10590              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10591              		.loc 1 192 19 is_stmt 0 view .LVU3593
 10592 3cc9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10593              		.loc 1 193 8 is_stmt 1 view .LVU3594
 10594              	.LVL584:
 194:sieve_extend.c ****        index_ptr+=step;
 10595              		.loc 1 194 8 view .LVU3595
 10596              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10597              		.loc 1 194 19 is_stmt 0 view .LVU3596
 10598 3ccc 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10599              		.loc 1 195 8 is_stmt 1 view .LVU3597
 10600              	.LVL585:
 196:sieve_extend.c ****        index_ptr+=step;
 10601              		.loc 1 196 8 view .LVU3598
 10602 3cd0 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10603              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10604              		.loc 1 196 19 is_stmt 0 view .LVU3599
 10605 3cd3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10606              		.loc 1 197 8 is_stmt 1 view .LVU3600
GAS LISTING /tmp/ccW4ZvF5.s 			page 289


 10607 3cd7 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10608              	.LVL586:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10609              		.loc 1 187 10 view .LVU3601
 10610 3cda 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10611 3cdd 0F86DD00 		jbe	.L764	#,
 10611      0000
 188:sieve_extend.c ****        index_ptr+=step;
 10612              		.loc 1 188 8 view .LVU3602
 10613              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10614              		.loc 1 188 19 is_stmt 0 view .LVU3603
 10615 3ce3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10616              		.loc 1 189 8 is_stmt 1 view .LVU3604
 10617              	.LVL587:
 190:sieve_extend.c ****        index_ptr+=step;
 10618              		.loc 1 190 8 view .LVU3605
 10619              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10620              		.loc 1 190 19 is_stmt 0 view .LVU3606
 10621 3ce6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10622              		.loc 1 191 8 is_stmt 1 view .LVU3607
 10623              	.LVL588:
 192:sieve_extend.c ****        index_ptr+=step;
 10624              		.loc 1 192 8 view .LVU3608
 10625              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10626              		.loc 1 192 19 is_stmt 0 view .LVU3609
 10627 3cea 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10628              		.loc 1 193 8 is_stmt 1 view .LVU3610
 10629              	.LVL589:
 194:sieve_extend.c ****        index_ptr+=step;
 10630              		.loc 1 194 8 view .LVU3611
 10631              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10632              		.loc 1 194 19 is_stmt 0 view .LVU3612
 10633 3ced 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10634              		.loc 1 195 8 is_stmt 1 view .LVU3613
 10635              	.LVL590:
 196:sieve_extend.c ****        index_ptr+=step;
 10636              		.loc 1 196 8 view .LVU3614
 10637 3cf1 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10638              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10639              		.loc 1 196 19 is_stmt 0 view .LVU3615
 10640 3cf4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10641              		.loc 1 197 8 is_stmt 1 view .LVU3616
 10642 3cf8 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10643              	.LVL591:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10644              		.loc 1 187 10 view .LVU3617
 10645 3cfb 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccW4ZvF5.s 			page 290


 10646 3cfe 0F86BC00 		jbe	.L764	#,
 10646      0000
 188:sieve_extend.c ****        index_ptr+=step;
 10647              		.loc 1 188 8 view .LVU3618
 10648              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10649              		.loc 1 188 19 is_stmt 0 view .LVU3619
 10650 3d04 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10651              		.loc 1 189 8 is_stmt 1 view .LVU3620
 10652              	.LVL592:
 190:sieve_extend.c ****        index_ptr+=step;
 10653              		.loc 1 190 8 view .LVU3621
 10654              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10655              		.loc 1 190 19 is_stmt 0 view .LVU3622
 10656 3d07 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10657              		.loc 1 191 8 is_stmt 1 view .LVU3623
 10658              	.LVL593:
 192:sieve_extend.c ****        index_ptr+=step;
 10659              		.loc 1 192 8 view .LVU3624
 10660              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10661              		.loc 1 192 19 is_stmt 0 view .LVU3625
 10662 3d0b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10663              		.loc 1 193 8 is_stmt 1 view .LVU3626
 10664              	.LVL594:
 194:sieve_extend.c ****        index_ptr+=step;
 10665              		.loc 1 194 8 view .LVU3627
 10666              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10667              		.loc 1 194 19 is_stmt 0 view .LVU3628
 10668 3d0e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10669              		.loc 1 195 8 is_stmt 1 view .LVU3629
 10670              	.LVL595:
 196:sieve_extend.c ****        index_ptr+=step;
 10671              		.loc 1 196 8 view .LVU3630
 10672 3d12 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10673              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10674              		.loc 1 196 19 is_stmt 0 view .LVU3631
 10675 3d15 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10676              		.loc 1 197 8 is_stmt 1 view .LVU3632
 10677 3d19 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10678              	.LVL596:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10679              		.loc 1 187 10 view .LVU3633
 10680 3d1c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10681 3d1f 0F869B00 		jbe	.L764	#,
 10681      0000
 188:sieve_extend.c ****        index_ptr+=step;
 10682              		.loc 1 188 8 view .LVU3634
 10683              	# sieve_extend.c:188:        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 291


 188:sieve_extend.c ****        index_ptr+=step;
 10684              		.loc 1 188 19 is_stmt 0 view .LVU3635
 10685 3d25 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10686              		.loc 1 189 8 is_stmt 1 view .LVU3636
 10687              	.LVL597:
 190:sieve_extend.c ****        index_ptr+=step;
 10688              		.loc 1 190 8 view .LVU3637
 10689              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10690              		.loc 1 190 19 is_stmt 0 view .LVU3638
 10691 3d28 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10692              		.loc 1 191 8 is_stmt 1 view .LVU3639
 10693              	.LVL598:
 192:sieve_extend.c ****        index_ptr+=step;
 10694              		.loc 1 192 8 view .LVU3640
 10695              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10696              		.loc 1 192 19 is_stmt 0 view .LVU3641
 10697 3d2c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10698              		.loc 1 193 8 is_stmt 1 view .LVU3642
 10699              	.LVL599:
 194:sieve_extend.c ****        index_ptr+=step;
 10700              		.loc 1 194 8 view .LVU3643
 10701              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10702              		.loc 1 194 19 is_stmt 0 view .LVU3644
 10703 3d2f 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10704              		.loc 1 195 8 is_stmt 1 view .LVU3645
 10705              	.LVL600:
 196:sieve_extend.c ****        index_ptr+=step;
 10706              		.loc 1 196 8 view .LVU3646
 10707 3d33 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10708              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10709              		.loc 1 196 19 is_stmt 0 view .LVU3647
 10710 3d36 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10711              		.loc 1 197 8 is_stmt 1 view .LVU3648
 10712 3d3a 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10713              	.LVL601:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10714              		.loc 1 187 10 view .LVU3649
 10715 3d3d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10716 3d40 767E     		jbe	.L764	#,
 188:sieve_extend.c ****        index_ptr+=step;
 10717              		.loc 1 188 8 view .LVU3650
 10718              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10719              		.loc 1 188 19 is_stmt 0 view .LVU3651
 10720 3d42 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10721              		.loc 1 189 8 is_stmt 1 view .LVU3652
 10722              	.LVL602:
GAS LISTING /tmp/ccW4ZvF5.s 			page 292


 190:sieve_extend.c ****        index_ptr+=step;
 10723              		.loc 1 190 8 view .LVU3653
 10724              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10725              		.loc 1 190 19 is_stmt 0 view .LVU3654
 10726 3d45 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10727              		.loc 1 191 8 is_stmt 1 view .LVU3655
 10728              	.LVL603:
 192:sieve_extend.c ****        index_ptr+=step;
 10729              		.loc 1 192 8 view .LVU3656
 10730              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10731              		.loc 1 192 19 is_stmt 0 view .LVU3657
 10732 3d49 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10733              		.loc 1 193 8 is_stmt 1 view .LVU3658
 10734              	.LVL604:
 194:sieve_extend.c ****        index_ptr+=step;
 10735              		.loc 1 194 8 view .LVU3659
 10736              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10737              		.loc 1 194 19 is_stmt 0 view .LVU3660
 10738 3d4c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10739              		.loc 1 195 8 is_stmt 1 view .LVU3661
 10740              	.LVL605:
 196:sieve_extend.c ****        index_ptr+=step;
 10741              		.loc 1 196 8 view .LVU3662
 10742 3d50 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10743              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10744              		.loc 1 196 19 is_stmt 0 view .LVU3663
 10745 3d53 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10746              		.loc 1 197 8 is_stmt 1 view .LVU3664
 10747 3d57 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10748              	.LVL606:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10749              		.loc 1 187 10 view .LVU3665
 10750 3d5a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10751 3d5d 7661     		jbe	.L764	#,
 188:sieve_extend.c ****        index_ptr+=step;
 10752              		.loc 1 188 8 view .LVU3666
 10753              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10754              		.loc 1 188 19 is_stmt 0 view .LVU3667
 10755 3d5f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10756              		.loc 1 189 8 is_stmt 1 view .LVU3668
 10757              	.LVL607:
 190:sieve_extend.c ****        index_ptr+=step;
 10758              		.loc 1 190 8 view .LVU3669
 10759              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10760              		.loc 1 190 19 is_stmt 0 view .LVU3670
 10761 3d62 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
GAS LISTING /tmp/ccW4ZvF5.s 			page 293


 191:sieve_extend.c ****        *index_ptr |= mask;
 10762              		.loc 1 191 8 is_stmt 1 view .LVU3671
 10763              	.LVL608:
 192:sieve_extend.c ****        index_ptr+=step;
 10764              		.loc 1 192 8 view .LVU3672
 10765              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10766              		.loc 1 192 19 is_stmt 0 view .LVU3673
 10767 3d66 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10768              		.loc 1 193 8 is_stmt 1 view .LVU3674
 10769              	.LVL609:
 194:sieve_extend.c ****        index_ptr+=step;
 10770              		.loc 1 194 8 view .LVU3675
 10771              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10772              		.loc 1 194 19 is_stmt 0 view .LVU3676
 10773 3d69 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10774              		.loc 1 195 8 is_stmt 1 view .LVU3677
 10775              	.LVL610:
 196:sieve_extend.c ****        index_ptr+=step;
 10776              		.loc 1 196 8 view .LVU3678
 10777 3d6d 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10778              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10779              		.loc 1 196 19 is_stmt 0 view .LVU3679
 10780 3d70 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10781              		.loc 1 197 8 is_stmt 1 view .LVU3680
 10782 3d74 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10783              	.LVL611:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10784              		.loc 1 187 10 view .LVU3681
 10785 3d77 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10786 3d7a 7644     		jbe	.L764	#,
 188:sieve_extend.c ****        index_ptr+=step;
 10787              		.loc 1 188 8 view .LVU3682
 10788              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10789              		.loc 1 188 19 is_stmt 0 view .LVU3683
 10790 3d7c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10791              		.loc 1 189 8 is_stmt 1 view .LVU3684
 10792              	.LVL612:
 190:sieve_extend.c ****        index_ptr+=step;
 10793              		.loc 1 190 8 view .LVU3685
 10794              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10795              		.loc 1 190 19 is_stmt 0 view .LVU3686
 10796 3d7f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10797              		.loc 1 191 8 is_stmt 1 view .LVU3687
 10798              	.LVL613:
 192:sieve_extend.c ****        index_ptr+=step;
 10799              		.loc 1 192 8 view .LVU3688
 10800              	# sieve_extend.c:192:        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 294


 192:sieve_extend.c ****        index_ptr+=step;
 10801              		.loc 1 192 19 is_stmt 0 view .LVU3689
 10802 3d83 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10803              		.loc 1 193 8 is_stmt 1 view .LVU3690
 10804              	.LVL614:
 194:sieve_extend.c ****        index_ptr+=step;
 10805              		.loc 1 194 8 view .LVU3691
 10806              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10807              		.loc 1 194 19 is_stmt 0 view .LVU3692
 10808 3d86 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10809              		.loc 1 195 8 is_stmt 1 view .LVU3693
 10810              	.LVL615:
 196:sieve_extend.c ****        index_ptr+=step;
 10811              		.loc 1 196 8 view .LVU3694
 10812 3d8a 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10813              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10814              		.loc 1 196 19 is_stmt 0 view .LVU3695
 10815 3d8d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10816              		.loc 1 197 8 is_stmt 1 view .LVU3696
 10817 3d91 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10818              	.LVL616:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10819              		.loc 1 187 10 view .LVU3697
 10820 3d94 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10821 3d97 7627     		jbe	.L764	#,
 188:sieve_extend.c ****        index_ptr+=step;
 10822              		.loc 1 188 8 view .LVU3698
 10823              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10824              		.loc 1 188 19 is_stmt 0 view .LVU3699
 10825 3d99 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_325, offset: 0B], _217
 189:sieve_extend.c ****        *index_ptr |= mask;
 10826              		.loc 1 189 8 is_stmt 1 view .LVU3700
 10827              	.LVL617:
 190:sieve_extend.c ****        index_ptr+=step;
 10828              		.loc 1 190 8 view .LVU3701
 10829              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10830              		.loc 1 190 19 is_stmt 0 view .LVU3702
 10831 3d9c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_325, index: _232, offset: 0B], _217
 191:sieve_extend.c ****        *index_ptr |= mask;
 10832              		.loc 1 191 8 is_stmt 1 view .LVU3703
 10833              	.LVL618:
 192:sieve_extend.c ****        index_ptr+=step;
 10834              		.loc 1 192 8 view .LVU3704
 10835              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10836              		.loc 1 192 19 is_stmt 0 view .LVU3705
 10837 3da0 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _549, offset: 0B], _217
 193:sieve_extend.c ****        *index_ptr |= mask;
 10838              		.loc 1 193 8 is_stmt 1 view .LVU3706
 10839              	.LVL619:
GAS LISTING /tmp/ccW4ZvF5.s 			page 295


 194:sieve_extend.c ****        index_ptr+=step;
 10840              		.loc 1 194 8 view .LVU3707
 10841              	# sieve_extend.c:194:        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 10842              		.loc 1 194 19 is_stmt 0 view .LVU3708
 10843 3da3 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _549, index: _232, offset: 0B], _217
 195:sieve_extend.c ****        *index_ptr |= mask;
 10844              		.loc 1 195 8 is_stmt 1 view .LVU3709
 10845              	.LVL620:
 196:sieve_extend.c ****        index_ptr+=step;
 10846              		.loc 1 196 8 view .LVU3710
 10847 3da7 4C01C7   		add	rdi, r8	# ivtmp.505, tmp373
 10848              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 10849              		.loc 1 196 19 is_stmt 0 view .LVU3711
 10850 3daa 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_325, index: _232, step: 4, offset: 0B], _217
 197:sieve_extend.c ****    }
 10851              		.loc 1 197 8 is_stmt 1 view .LVU3712
 10852 3dae 4C01C0   		add	rax, r8	# index_ptr, tmp373
 10853              	.LVL621:
 187:sieve_extend.c ****        *index_ptr |= mask;
 10854              		.loc 1 187 10 view .LVU3713
 10855 3db1 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 10856 3db4 0F8708FF 		ja	.L765	#,
 10856      FFFF
 10857 3dba 660F1F44 		.p2align 4
 10857      0000
 10858              		.p2align 3
 10859              	.L764:
 200:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10860              		.loc 1 200 4 view .LVU3714
 201:sieve_extend.c ****        *index_ptr |= mask;
 10861              		.loc 1 201 4 view .LVU3715
 201:sieve_extend.c ****        *index_ptr |= mask;
 10862              		.loc 1 201 10 view .LVU3716
 10863 3dc0 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10864 3dc3 765B     		jbe	.L766	#,
 10865              	.L767:
 202:sieve_extend.c ****        index_ptr+=step;
 10866              		.loc 1 202 8 view .LVU3717
 10867              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10868              		.loc 1 202 19 is_stmt 0 view .LVU3718
 10869 3dc5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10870              		.loc 1 203 8 is_stmt 1 view .LVU3719
 10871              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10872              		.loc 1 203 17 is_stmt 0 view .LVU3720
 10873 3dc8 4801D0   		add	rax, rdx	# index_ptr, _232
 10874              	.LVL622:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10875              		.loc 1 201 10 is_stmt 1 view .LVU3721
 10876 3dcb 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10877 3dce 7650     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10878              		.loc 1 202 8 view .LVU3722
GAS LISTING /tmp/ccW4ZvF5.s 			page 296


 10879              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10880              		.loc 1 202 19 is_stmt 0 view .LVU3723
 10881 3dd0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10882              		.loc 1 203 8 is_stmt 1 view .LVU3724
 10883              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10884              		.loc 1 203 17 is_stmt 0 view .LVU3725
 10885 3dd3 4801D0   		add	rax, rdx	# index_ptr, _232
 10886              	.LVL623:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10887              		.loc 1 201 10 is_stmt 1 view .LVU3726
 10888 3dd6 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10889 3dd9 7645     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10890              		.loc 1 202 8 view .LVU3727
 10891              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10892              		.loc 1 202 19 is_stmt 0 view .LVU3728
 10893 3ddb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10894              		.loc 1 203 8 is_stmt 1 view .LVU3729
 10895              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10896              		.loc 1 203 17 is_stmt 0 view .LVU3730
 10897 3dde 4801D0   		add	rax, rdx	# index_ptr, _232
 10898              	.LVL624:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10899              		.loc 1 201 10 is_stmt 1 view .LVU3731
 10900 3de1 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10901 3de4 763A     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10902              		.loc 1 202 8 view .LVU3732
 10903              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10904              		.loc 1 202 19 is_stmt 0 view .LVU3733
 10905 3de6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10906              		.loc 1 203 8 is_stmt 1 view .LVU3734
 10907              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10908              		.loc 1 203 17 is_stmt 0 view .LVU3735
 10909 3de9 4801D0   		add	rax, rdx	# index_ptr, _232
 10910              	.LVL625:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10911              		.loc 1 201 10 is_stmt 1 view .LVU3736
 10912 3dec 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10913 3def 762F     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10914              		.loc 1 202 8 view .LVU3737
 10915              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10916              		.loc 1 202 19 is_stmt 0 view .LVU3738
 10917 3df1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10918              		.loc 1 203 8 is_stmt 1 view .LVU3739
GAS LISTING /tmp/ccW4ZvF5.s 			page 297


 10919              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10920              		.loc 1 203 17 is_stmt 0 view .LVU3740
 10921 3df4 4801D0   		add	rax, rdx	# index_ptr, _232
 10922              	.LVL626:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10923              		.loc 1 201 10 is_stmt 1 view .LVU3741
 10924 3df7 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10925 3dfa 7624     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10926              		.loc 1 202 8 view .LVU3742
 10927              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10928              		.loc 1 202 19 is_stmt 0 view .LVU3743
 10929 3dfc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10930              		.loc 1 203 8 is_stmt 1 view .LVU3744
 10931              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10932              		.loc 1 203 17 is_stmt 0 view .LVU3745
 10933 3dff 4801D0   		add	rax, rdx	# index_ptr, _232
 10934              	.LVL627:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10935              		.loc 1 201 10 is_stmt 1 view .LVU3746
 10936 3e02 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10937 3e05 7619     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10938              		.loc 1 202 8 view .LVU3747
 10939              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10940              		.loc 1 202 19 is_stmt 0 view .LVU3748
 10941 3e07 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10942              		.loc 1 203 8 is_stmt 1 view .LVU3749
 10943              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10944              		.loc 1 203 17 is_stmt 0 view .LVU3750
 10945 3e0a 4801D0   		add	rax, rdx	# index_ptr, _232
 10946              	.LVL628:
 201:sieve_extend.c ****        *index_ptr |= mask;
 10947              		.loc 1 201 10 is_stmt 1 view .LVU3751
 10948 3e0d 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10949 3e10 760E     		jbe	.L766	#,
 202:sieve_extend.c ****        index_ptr+=step;
 10950              		.loc 1 202 8 view .LVU3752
 10951              	# sieve_extend.c:202:        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 10952              		.loc 1 202 19 is_stmt 0 view .LVU3753
 10953 3e12 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_258, offset: 0B], _217
 203:sieve_extend.c ****    }
 10954              		.loc 1 203 8 is_stmt 1 view .LVU3754
 10955              	# sieve_extend.c:203:        index_ptr+=step;
 203:sieve_extend.c ****    }
 10956              		.loc 1 203 17 is_stmt 0 view .LVU3755
 10957 3e15 4801D0   		add	rax, rdx	# index_ptr, _232
 10958              	.LVL629:
 201:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW4ZvF5.s 			page 298


 10959              		.loc 1 201 10 is_stmt 1 view .LVU3756
 10960 3e18 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10961 3e1b 77A8     		ja	.L767	#,
 10962 3e1d 0F1F00   		.p2align 4
 10963              		.p2align 3
 10964              	.L766:
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10965              		.loc 1 206 4 view .LVU3757
 10966              	# sieve_extend.c:206:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10967              		.loc 1 206 7 is_stmt 0 view .LVU3758
 10968 3e20 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 10969 3e23 0F84B700 		je	.L944	#,
 10969      0000
 10970              	.LVL630:
 10971              	.L768:
 206:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10972              		.loc 1 206 7 view .LVU3759
 10973              	.LBE541:
 10974              	.LBE544:
 404:sieve_extend.c ****         #if __APPLE__
 10975              		.loc 1 404 77 is_stmt 1 view .LVU3760
 10976              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 10977              		.loc 1 404 83 is_stmt 0 view .LVU3761
 10978 3e29 4C01D6   		add	rsi, r10	# index, step
 10979              	.LVL631:
 404:sieve_extend.c ****         #if __APPLE__
 10980              		.loc 1 404 50 is_stmt 1 view .LVU3762
 10981              	# sieve_extend.c:404:     for (register counter_t index = range_start; index < range_stop_unique; i
 404:sieve_extend.c ****         #if __APPLE__
 10982              		.loc 1 404 5 is_stmt 0 view .LVU3763
 10983 3e2c 4939F5   		cmp	r13, rsi	# range_stop_unique, index
 10984 3e2f 0F876BFE 		ja	.L769	#,
 10984      FFFF
 10985              	.L770:
 10986              	.LVL632:
 404:sieve_extend.c ****         #if __APPLE__
 10987              		.loc 1 404 5 view .LVU3764
 10988              	.LBE546:
 10989              	.LBE548:
 10990              	.LBE550:
 878:sieve_extend.c ****         }
 10991              		.loc 1 878 13 is_stmt 1 view .LVU3765
 10992              	.LBB551:
 10993              	.LBI551:
 134:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 10994              		.loc 1 134 25 view .LVU3766
 10995              	.LBB552:
 137:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 10996              		.loc 1 137 4 view .LVU3767
 138:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10997              		.loc 1 138 4 view .LVU3768
 10998              	# sieve_extend.c:139:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 139:sieve_extend.c ****    index += distance;
 10999              		.loc 1 139 89 is_stmt 0 view .LVU3769
 11000 3e35 498B3424 		mov	rsi, QWORD PTR [r12]	# MEM[(uint64_t *)_528], MEM[(uint64_t *)_528]
GAS LISTING /tmp/ccW4ZvF5.s 			page 299


 11001              	# sieve_extend.c:138:    bitshift_t index_bit  = bitindex_calc(index);
 138:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11002              		.loc 1 138 15 view .LVU3770
 11003 3e39 4989EA   		mov	r10, rbp	# index_bit, _158
 11004              	.LVL633:
 138:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11005              		.loc 1 138 15 view .LVU3771
 11006 3e3c 4183E23F 		and	r10d, 63	# index_bit,
 11007              	.LVL634:
 139:sieve_extend.c ****    index += distance;
 11008              		.loc 1 139 4 is_stmt 1 view .LVU3772
 11009              	# sieve_extend.c:139:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 139:sieve_extend.c ****    index += distance;
 11010              		.loc 1 139 89 is_stmt 0 view .LVU3773
 11011 3e40 C462ABF7 		shrx	r12, rsi, r10	# tmp358, MEM[(uint64_t *)_528], index_bit
 11011      E6
 11012              	# sieve_extend.c:139:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 139:sieve_extend.c ****    index += distance;
 11013              		.loc 1 139 66 view .LVU3774
 11014 3e45 49F7D4   		not	r12	# tmp360
 11015              	# sieve_extend.c:139:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 139:sieve_extend.c ****    index += distance;
 11016              		.loc 1 139 25 view .LVU3775
 11017 3e48 F34D0FBC 		tzcnt	r13, r12	# distance, tmp360
 11017      EC
 11018              	.LVL635:
 140:sieve_extend.c ****    distance += index_bit;
 11019              		.loc 1 140 4 is_stmt 1 view .LVU3776
 11020              	# sieve_extend.c:140:    index += distance;
 140:sieve_extend.c ****    distance += index_bit;
 11021              		.loc 1 140 10 is_stmt 0 view .LVU3777
 11022 3e4d 4E8D442D 		lea	r8, 0[rbp+r13]	# index,
 11022      00
 11023              	.LVL636:
 141:sieve_extend.c **** 
 11024              		.loc 1 141 4 is_stmt 1 view .LVU3778
 143:sieve_extend.c ****        index_word++;
 11025              		.loc 1 143 4 view .LVU3779
 143:sieve_extend.c ****        index_word++;
 11026              		.loc 1 143 10 view .LVU3780
 11027              	# sieve_extend.c:141:    distance += index_bit;
 141:sieve_extend.c **** 
 11028              		.loc 1 141 13 is_stmt 0 view .LVU3781
 11029 3e52 4D01D5   		add	r13, r10	# distance, index_bit
 11030              	.LVL637:
 11031              	# sieve_extend.c:143:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 143:sieve_extend.c ****        index_word++;
 11032              		.loc 1 143 10 view .LVU3782
 11033 3e55 4983FD40 		cmp	r13, 64	# distance,
 11034 3e59 0F849901 		je	.L945	#,
 11034      0000
 11035              	.LVL638:
 11036              	.L760:
 143:sieve_extend.c ****        index_word++;
 11037              		.loc 1 143 10 view .LVU3783
 11038              	.LBE552:
 11039              	.LBE551:
GAS LISTING /tmp/ccW4ZvF5.s 			page 300


 881:sieve_extend.c ****         step  = prime * 2 + 1;
 11040              		.loc 1 881 9 is_stmt 1 view .LVU3784
 882:sieve_extend.c ****     }
 11041              		.loc 1 882 9 view .LVU3785
 11042              	# sieve_extend.c:882:         step  = prime * 2 + 1;
 882:sieve_extend.c ****     }
 11043              		.loc 1 882 15 is_stmt 0 view .LVU3786
 11044 3e5f 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 11044      01
 11045              	.LVL639:
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11046              		.loc 1 866 11 is_stmt 1 view .LVU3787
 11047              	# sieve_extend.c:866:     while (prime*step <= block_stop) {
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11048              		.loc 1 866 17 is_stmt 0 view .LVU3788
 11049 3e64 4C89C6   		mov	rsi, r8	# tmp384, index
 11050 3e67 490FAFF2 		imul	rsi, r10	# tmp384, step
 11051              	# sieve_extend.c:866:     while (prime*step <= block_stop) {
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11052              		.loc 1 866 11 view .LVU3789
 11053 3e6b 48397424 		cmp	QWORD PTR 8[rsp], rsi	# %sfp, tmp384
 11053      08
 11054 3e70 0F83AAFD 		jnb	.L771	#,
 11054      FFFF
 11055 3e76 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# <retval>, %sfp
 11055      28
 11056 3e7b 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# block_start, %sfp
 11056      18
 11057 3e80 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _7, sieve_89->bits
 11058              	.LVL640:
 11059              	.L772:
 866:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11060              		.loc 1 866 11 view .LVU3790
 11061              	.LBE534:
 11062              	.LBE533:
 11063              	.LBE528:
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11064              		.loc 1 946 91 is_stmt 1 view .LVU3791
 11065              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11066              		.loc 1 946 103 is_stmt 0 view .LVU3792
 11067 3e84 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# blocksize, %sfp
 11067      38
 11068              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11069              		.loc 1 946 128 view .LVU3793
 11070 3e89 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# block_stop, %sfp
 11070      08
 11071              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11072              		.loc 1 946 103 view .LVU3794
 11073 3e8e 4D01C6   		add	r14, r8	# block_start, blocksize
 11074              	.LVL641:
 11075              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11076              		.loc 1 946 128 view .LVU3795
 11077 3e91 4D01C4   		add	r12, r8	# block_stop, blocksize
GAS LISTING /tmp/ccW4ZvF5.s 			page 301


 11078              	.LVL642:
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11079              		.loc 1 946 63 is_stmt 1 view .LVU3796
 11080              	# sieve_extend.c:946:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 946:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11081              		.loc 1 946 5 is_stmt 0 view .LVU3797
 11082 3e94 4C39F2   		cmp	rdx, r14	# _7, block_start
 11083 3e97 0F8353FC 		jnb	.L755	#,
 11083      FFFF
 11084              	.LBE527:
 11085              	# sieve_extend.c:953: }
 953:sieve_extend.c **** 
 11086              		.loc 1 953 1 view .LVU3798
 11087 3e9d 488B4424 		mov	rax, QWORD PTR 40[rsp]	#, %sfp
 11087      28
 11088 3ea2 488D6424 		lea	rsp, 88[rsp]	#,
 11088      58
 11089              		.cfi_remember_state
 11090              		.cfi_def_cfa_offset 56
 11091 3ea7 5B       		pop	rbx	#
 11092              		.cfi_def_cfa_offset 48
 11093 3ea8 5D       		pop	rbp	#
 11094              		.cfi_def_cfa_offset 40
 11095 3ea9 415C     		pop	r12	#
 11096              		.cfi_def_cfa_offset 32
 11097              	.LVL643:
 953:sieve_extend.c **** 
 11098              		.loc 1 953 1 view .LVU3799
 11099 3eab 415D     		pop	r13	#
 11100              		.cfi_def_cfa_offset 24
 11101 3ead 415E     		pop	r14	#
 11102              		.cfi_def_cfa_offset 16
 11103              	.LVL644:
 953:sieve_extend.c **** 
 11104              		.loc 1 953 1 view .LVU3800
 11105 3eaf 415F     		pop	r15	#
 11106              		.cfi_def_cfa_offset 8
 11107              	.LVL645:
 953:sieve_extend.c **** 
 11108              		.loc 1 953 1 view .LVU3801
 11109 3eb1 C3       		ret	
 11110              	.LVL646:
 11111              	.L736:
 11112              		.cfi_restore_state
 11113              	.LBB563:
 11114              	.LBB511:
 11115              	.LBB504:
 11116              	.LBB498:
 11117              	.LBB496:
 856:sieve_extend.c **** }
 11118              		.loc 1 856 37 is_stmt 1 view .LVU3802
 11119 3eb2 E829DFFF 		call	extendSieve_aligned	#
 11119      FF
 11120              	.LVL647:
 856:sieve_extend.c **** }
 11121              		.loc 1 856 37 is_stmt 0 view .LVU3803
 11122 3eb7 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
GAS LISTING /tmp/ccW4ZvF5.s 			page 302


 11122      20
 11123 3ebc E9D7F7FF 		jmp	.L733	#
 11123      FF
 11124              	.LVL648:
 11125              	.L940:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11126              		.loc 1 854 37 is_stmt 1 view .LVU3804
 11127 3ec1 E89AE4FF 		call	extendSieve_shiftleft	#
 11127      FF
 11128              	.LVL649:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11129              		.loc 1 854 37 is_stmt 0 view .LVU3805
 11130 3ec6 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 11130      20
 11131 3ecb E9C8F7FF 		jmp	.L733	#
 11131      FF
 11132              	.LVL650:
 11133              	.L942:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11134              		.loc 1 854 37 view .LVU3806
 11135              	.LBE496:
 11136              	.LBE498:
 11137              	.LBE504:
 11138              	.LBE511:
 11139              	.LBE563:
 11140              	.LBB564:
 11141              	.LBB521:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11142              		.loc 1 855 37 is_stmt 1 view .LVU3807
 11143 3ed0 E8EBC7FF 		call	extendSieve_shiftright_ivdep	#
 11143      FF
 11144              	.LVL651:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11145              		.loc 1 855 37 is_stmt 0 view .LVU3808
 11146              		.p2align 4,,3
 11147 3ed5 E9F2FBFF 		jmp	.L749	#
 11147      FF
 11148              	.LVL652:
 11149 3eda 660F1F44 		.p2align 4,,7
 11149      0000
 11150              		.p2align 3
 11151              	.L944:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11152              		.loc 1 855 37 view .LVU3809
 11153              	.LBE521:
 11154              	.LBE564:
 11155              	.LBB565:
 11156              	.LBB562:
 11157              	.LBB561:
 11158              	.LBB560:
 11159              	.LBB554:
 11160              	.LBB549:
 11161              	.LBB547:
 11162              	.LBB545:
 11163              	.LBB542:
 207:sieve_extend.c ****    }
 11164              		.loc 1 207 7 is_stmt 1 view .LVU3810
GAS LISTING /tmp/ccW4ZvF5.s 			page 303


 11165              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 11166              		.loc 1 207 27 is_stmt 0 view .LVU3811
 11167 3ee0 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp378, %sfp
 11167      10
 11168              	.LVL653:
 11169              	# sieve_extend.c:207:       *index_ptr |= (mask & chopmask(range_stop));
 207:sieve_extend.c ****    }
 11170              		.loc 1 207 18 view .LVU3812
 11171 3ee5 48090B   		or	QWORD PTR [rbx], rcx	# *index_ptr_267, tmp378
 11172 3ee8 E93CFFFF 		jmp	.L768	#
 11172      FF
 11173              	.LVL654:
 11174 3eed 0F1F00   		.p2align 4,,7
 11175              		.p2align 3
 11176              	.L943:
 207:sieve_extend.c ****    }
 11177              		.loc 1 207 18 view .LVU3813
 11178              	.LBE542:
 11179              	.LBE545:
 11180              	.LBE547:
 11181              	.LBE549:
 11182              	.LBE554:
 873:sieve_extend.c ****             prime = searchBitFalse(bitarray, prime+1 );
 11183              		.loc 1 873 13 is_stmt 1 view .LVU3814
 11184 3ef0 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11184      08
 11185 3ef5 4C89D2   		mov	rdx, r10	#, step
 11186 3ef8 4C89FF   		mov	rdi, r15	#, _94
 11187 3efb E830D4FF 		call	setBitsTrue_largeRange_vector	#
 11187      FF
 11188              	.LVL655:
 874:sieve_extend.c ****         }
 11189              		.loc 1 874 13 view .LVU3815
 11190              	.LBB555:
 11191              	.LBI555:
 128:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11192              		.loc 1 128 25 view .LVU3816
 11193              	.LBB556:
 129:sieve_extend.c ****     return index;
 11194              		.loc 1 129 5 view .LVU3817
 129:sieve_extend.c ****     return index;
 11195              		.loc 1 129 11 view .LVU3818
 11196              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11197              		.loc 1 129 12 is_stmt 0 view .LVU3819
 11198 3f00 498B1424 		mov	rdx, QWORD PTR [r12]	# MEM[(uint64_t *)_528], MEM[(uint64_t *)_528]
 11199              	.LBE556:
 11200              	.LBE555:
 11201              	# sieve_extend.c:867:         if likely(block_start >= (prime + 1)) 
 867:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11202              		.loc 1 867 12 view .LVU3820
 11203 3f04 4989E8   		mov	r8, rbp	# index, _158
 11204              	.LBB558:
 11205              	.LBB557:
 11206              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 304


 11207              		.loc 1 129 11 view .LVU3821
 11208 3f07 480FA3EA 		bt	rdx, rbp	# MEM[(uint64_t *)_528], _158
 11209 3f0b 0F834EFF 		jnc	.L760	#,
 11209      FFFF
 11210              	.LVL656:
 11211              	.L761:
 129:sieve_extend.c ****     return index;
 11212              		.loc 1 129 58 is_stmt 1 view .LVU3822
 11213              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11214              		.loc 1 129 63 is_stmt 0 view .LVU3823
 11215 3f11 4D8D4801 		lea	r9, 1[r8]	# tmp392,
 11216              	.LVL657:
 11217              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11218              		.loc 1 129 21 view .LVU3824
 11219 3f15 4D89CE   		mov	r14, r9	# tmp351, index
 11220              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11221              		.loc 1 129 63 view .LVU3825
 11222 3f18 4D89C8   		mov	r8, r9	# index, tmp392
 129:sieve_extend.c ****     return index;
 11223              		.loc 1 129 11 is_stmt 1 view .LVU3826
 11224              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11225              		.loc 1 129 21 is_stmt 0 view .LVU3827
 11226 3f1b 49C1EE06 		shr	r14, 6	# tmp351,
 11227              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11228              		.loc 1 129 12 view .LVU3828
 11229 3f1f 4B8B0CF7 		mov	rcx, QWORD PTR [r15+r14*8]	# *_175, *_175
 11230              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11231              		.loc 1 129 11 view .LVU3829
 11232 3f23 4C0FA3C9 		bt	rcx, r9	# *_175, index
 11233 3f27 0F8332FF 		jnc	.L760	#,
 11233      FFFF
 129:sieve_extend.c ****     return index;
 11234              		.loc 1 129 58 is_stmt 1 view .LVU3830
 11235              	.LVL658:
 11236              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11237              		.loc 1 129 63 is_stmt 0 view .LVU3831
 11238 3f2d 4983C001 		add	r8, 1	# index,
 11239              	.LVL659:
 129:sieve_extend.c ****     return index;
 11240              		.loc 1 129 11 is_stmt 1 view .LVU3832
 11241              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11242              		.loc 1 129 21 is_stmt 0 view .LVU3833
 11243 3f31 4C89C0   		mov	rax, r8	# tmp397, index
 11244 3f34 48C1E806 		shr	rax, 6	# tmp397,
 11245              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11246              		.loc 1 129 12 view .LVU3834
 11247 3f38 498B3CC7 		mov	rdi, QWORD PTR [r15+rax*8]	# *_175, *_175
 11248              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 305


 129:sieve_extend.c ****     return index;
 11249              		.loc 1 129 11 view .LVU3835
 11250 3f3c 4C0FA3C7 		bt	rdi, r8	# *_175, index
 11251 3f40 0F8319FF 		jnc	.L760	#,
 11251      FFFF
 129:sieve_extend.c ****     return index;
 11252              		.loc 1 129 58 is_stmt 1 view .LVU3836
 11253              	.LVL660:
 11254              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11255              		.loc 1 129 63 is_stmt 0 view .LVU3837
 11256 3f46 4D8D4102 		lea	r8, 2[r9]	# index,
 11257              	.LVL661:
 129:sieve_extend.c ****     return index;
 11258              		.loc 1 129 11 is_stmt 1 view .LVU3838
 11259              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11260              		.loc 1 129 21 is_stmt 0 view .LVU3839
 11261 3f4a 4D89C2   		mov	r10, r8	# tmp401, index
 11262 3f4d 49C1EA06 		shr	r10, 6	# tmp401,
 11263              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11264              		.loc 1 129 12 view .LVU3840
 11265 3f51 4B8B34D7 		mov	rsi, QWORD PTR [r15+r10*8]	# *_175, *_175
 11266              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11267              		.loc 1 129 11 view .LVU3841
 11268 3f55 4C0FA3C6 		bt	rsi, r8	# *_175, index
 11269 3f59 0F8300FF 		jnc	.L760	#,
 11269      FFFF
 129:sieve_extend.c ****     return index;
 11270              		.loc 1 129 58 is_stmt 1 view .LVU3842
 11271              	.LVL662:
 11272              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11273              		.loc 1 129 63 is_stmt 0 view .LVU3843
 11274 3f5f 4D8D4103 		lea	r8, 3[r9]	# index,
 11275              	.LVL663:
 129:sieve_extend.c ****     return index;
 11276              		.loc 1 129 11 is_stmt 1 view .LVU3844
 11277              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11278              		.loc 1 129 21 is_stmt 0 view .LVU3845
 11279 3f63 4D89C4   		mov	r12, r8	# tmp405, index
 11280 3f66 49C1EC06 		shr	r12, 6	# tmp405,
 11281              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11282              		.loc 1 129 12 view .LVU3846
 11283 3f6a 4F8B2CE7 		mov	r13, QWORD PTR [r15+r12*8]	# *_175, *_175
 11284              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11285              		.loc 1 129 11 view .LVU3847
 11286 3f6e 4D0FA3C5 		bt	r13, r8	# *_175, index
 11287 3f72 0F83E7FE 		jnc	.L760	#,
 11287      FFFF
 129:sieve_extend.c ****     return index;
 11288              		.loc 1 129 58 is_stmt 1 view .LVU3848
GAS LISTING /tmp/ccW4ZvF5.s 			page 306


 11289              	.LVL664:
 11290              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11291              		.loc 1 129 63 is_stmt 0 view .LVU3849
 11292 3f78 4D8D4104 		lea	r8, 4[r9]	# index,
 11293              	.LVL665:
 129:sieve_extend.c ****     return index;
 11294              		.loc 1 129 11 is_stmt 1 view .LVU3850
 11295              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11296              		.loc 1 129 21 is_stmt 0 view .LVU3851
 11297 3f7c 4C89C5   		mov	rbp, r8	# tmp409, index
 11298 3f7f 48C1ED06 		shr	rbp, 6	# tmp409,
 11299              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11300              		.loc 1 129 12 view .LVU3852
 11301 3f83 4D8B1CEF 		mov	r11, QWORD PTR [r15+rbp*8]	# *_175, *_175
 11302              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11303              		.loc 1 129 11 view .LVU3853
 11304 3f87 4D0FA3C3 		bt	r11, r8	# *_175, index
 11305 3f8b 0F83CEFE 		jnc	.L760	#,
 11305      FFFF
 129:sieve_extend.c ****     return index;
 11306              		.loc 1 129 58 is_stmt 1 view .LVU3854
 11307              	.LVL666:
 11308              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11309              		.loc 1 129 63 is_stmt 0 view .LVU3855
 11310 3f91 4D8D4105 		lea	r8, 5[r9]	# index,
 11311              	.LVL667:
 129:sieve_extend.c ****     return index;
 11312              		.loc 1 129 11 is_stmt 1 view .LVU3856
 11313              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11314              		.loc 1 129 21 is_stmt 0 view .LVU3857
 11315 3f95 4C89C2   		mov	rdx, r8	# tmp413, index
 11316 3f98 48C1EA06 		shr	rdx, 6	# tmp413,
 11317              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11318              		.loc 1 129 12 view .LVU3858
 11319 3f9c 4D8B34D7 		mov	r14, QWORD PTR [r15+rdx*8]	# *_175, *_175
 11320              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11321              		.loc 1 129 11 view .LVU3859
 11322 3fa0 4D0FA3C6 		bt	r14, r8	# *_175, index
 11323 3fa4 0F83B5FE 		jnc	.L760	#,
 11323      FFFF
 129:sieve_extend.c ****     return index;
 11324              		.loc 1 129 58 is_stmt 1 view .LVU3860
 11325              	.LVL668:
 11326              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11327              		.loc 1 129 63 is_stmt 0 view .LVU3861
 11328 3faa 4D8D4106 		lea	r8, 6[r9]	# index,
 11329              	.LVL669:
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 307


 11330              		.loc 1 129 11 is_stmt 1 view .LVU3862
 11331              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11332              		.loc 1 129 21 is_stmt 0 view .LVU3863
 11333 3fae 4C89C1   		mov	rcx, r8	# tmp417, index
 11334 3fb1 48C1E906 		shr	rcx, 6	# tmp417,
 11335              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11336              		.loc 1 129 12 view .LVU3864
 11337 3fb5 498B04CF 		mov	rax, QWORD PTR [r15+rcx*8]	# *_175, *_175
 11338              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11339              		.loc 1 129 11 view .LVU3865
 11340 3fb9 4C0FA3C0 		bt	rax, r8	# *_175, index
 11341 3fbd 0F839CFE 		jnc	.L760	#,
 11341      FFFF
 129:sieve_extend.c ****     return index;
 11342              		.loc 1 129 58 is_stmt 1 view .LVU3866
 11343              	.LVL670:
 11344              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11345              		.loc 1 129 63 is_stmt 0 view .LVU3867
 11346 3fc3 4D8D4107 		lea	r8, 7[r9]	# index,
 11347              	.LVL671:
 129:sieve_extend.c ****     return index;
 11348              		.loc 1 129 11 is_stmt 1 view .LVU3868
 11349              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11350              		.loc 1 129 21 is_stmt 0 view .LVU3869
 11351 3fc7 4D89C1   		mov	r9, r8	# tmp421, index
 11352 3fca 49C1E906 		shr	r9, 6	# tmp421,
 11353              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11354              		.loc 1 129 12 view .LVU3870
 11355 3fce 4B8B3CCF 		mov	rdi, QWORD PTR [r15+r9*8]	# *_175, *_175
 11356              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 11357              		.loc 1 129 11 view .LVU3871
 11358 3fd2 4C0FA3C7 		bt	rdi, r8	# *_175, index
 11359 3fd6 0F8235FF 		jc	.L761	#,
 11359      FFFF
 11360 3fdc E97EFEFF 		jmp	.L760	#
 11360      FF
 11361              	.LVL672:
 11362              		.p2align 4,,7
 11363 3fe1 0F1F8000 		.p2align 3
 11363      000000
 11364              	.L757:
 129:sieve_extend.c ****     return index;
 11365              		.loc 1 129 11 view .LVU3872
 11366              	.LBE557:
 11367              	.LBE558:
 870:sieve_extend.c **** 
 11368              		.loc 1 870 13 is_stmt 1 view .LVU3873
 11369              	# sieve_extend.c:870:             start = prime * prime * 2 + prime * 2;
 870:sieve_extend.c **** 
 11370              		.loc 1 870 19 is_stmt 0 view .LVU3874
GAS LISTING /tmp/ccW4ZvF5.s 			page 308


 11371 3fe8 4C0FAFC5 		imul	r8, rbp	# tmp345, _158
 11372 3fec 4B8D3400 		lea	rsi, [r8+r8]	# index,
 11373              	.LVL673:
 870:sieve_extend.c **** 
 11374              		.loc 1 870 19 view .LVU3875
 11375 3ff0 E94CFCFF 		jmp	.L758	#
 11375      FF
 11376              	.LVL674:
 11377              		.p2align 4,,7
 11378 3ff5 0F1F00   		.p2align 3
 11379              	.L945:
 11380              	.LBB559:
 11381              	.LBB553:
 144:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11382              		.loc 1 144 8 is_stmt 1 view .LVU3876
 145:sieve_extend.c ****        index += distance;
 11383              		.loc 1 145 8 view .LVU3877
 11384              	# sieve_extend.c:145:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 145:sieve_extend.c ****        index += distance;
 11385              		.loc 1 145 48 is_stmt 0 view .LVU3878
 11386 3ff8 4B8B6C1F 		mov	rbp, QWORD PTR 8[r15+r11]	# *_200, *_200
 11386      08
 11387              	.LVL675:
 145:sieve_extend.c ****        index += distance;
 11388              		.loc 1 145 48 view .LVU3879
 11389 3ffd 48F7D5   		not	rbp	# tmp379
 11390              	.LVL676:
 146:sieve_extend.c ****    }
 11391              		.loc 1 146 8 is_stmt 1 view .LVU3880
 11392              	# sieve_extend.c:145:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 145:sieve_extend.c ****        index += distance;
 11393              		.loc 1 145 17 is_stmt 0 view .LVU3881
 11394 4000 F34C0FBC 		tzcnt	r11, rbp	# distance, tmp379
 11394      DD
 11395              	.LVL677:
 11396              	# sieve_extend.c:146:        index += distance;
 146:sieve_extend.c ****    }
 11397              		.loc 1 146 14 view .LVU3882
 11398 4005 4D01D8   		add	r8, r11	# index, distance
 11399              	.LVL678:
 143:sieve_extend.c ****        index_word++;
 11400              		.loc 1 143 10 is_stmt 1 view .LVU3883
 11401 4008 E952FEFF 		jmp	.L760	#
 11401      FF
 11402              	.LVL679:
 11403              	.L939:
 143:sieve_extend.c ****        index_word++;
 11404              		.loc 1 143 10 is_stmt 0 view .LVU3884
 11405              	.LBE553:
 11406              	.LBE559:
 11407              	.LBE560:
 11408              	.LBE561:
 11409              	.LBE562:
 11410              	.LBE565:
 11411              	.LBB566:
 11412              	.LBB512:
 11413              	.LBB505:
GAS LISTING /tmp/ccW4ZvF5.s 			page 309


 11414              	.LBB499:
 11415              	.LBB497:
 846:sieve_extend.c ****         return; // rapid exit for small sizes
 11416              		.loc 1 846 9 is_stmt 1 view .LVU3885
 11417 400d 4C89F1   		mov	rcx, r14	#, _67
 11418 4010 4C89EA   		mov	rdx, r13	#, patternsize_bits
 11419 4013 4C89EE   		mov	rsi, r13	#, patternsize_bits
 11420 4016 4C89FF   		mov	rdi, r15	#, _94
 11421 4019 E8E2BFFF 		call	extendSieve_smallSize	#
 11421      FF
 11422              	.LVL680:
 847:sieve_extend.c ****     }
 11423              		.loc 1 847 9 view .LVU3886
 11424 401e 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, patternsize_bits
 11424      20
 11425 4023 E970F6FF 		jmp	.L733	#
 11425      FF
 11426              	.LVL681:
 11427              	.L941:
 847:sieve_extend.c ****     }
 11428              		.loc 1 847 9 is_stmt 0 view .LVU3887
 11429              	.LBE497:
 11430              	.LBE499:
 11431              	.LBE505:
 11432              	.LBE512:
 11433              	.LBE566:
 11434              	.LBB567:
 11435              	.LBB522:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11436              		.loc 1 854 37 is_stmt 1 view .LVU3888
 11437 4028 E833E3FF 		call	extendSieve_shiftleft	#
 11437      FF
 11438              	.LVL682:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11439              		.loc 1 854 37 is_stmt 0 view .LVU3889
 11440 402d 0F1F00   		.p2align 4,,3
 11441 4030 E997FAFF 		jmp	.L749	#
 11441      FF
 11442              	.LVL683:
 11443              	.L935:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11444              		.loc 1 854 37 view .LVU3890
 11445 4035 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# <retval>, %sfp
 11445      28
 11446              	.LVL684:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11447              		.loc 1 854 37 view .LVU3891
 11448 403a 4989CA   		mov	r10, rcx	# tmp298, prime
 11449 403d 49C1EA06 		shr	r10, 6	# tmp298,
 11450 4041 BF010000 		mov	edi, 1	# tmp301,
 11450      00
 11451 4046 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, prime
 11451      48
 11452 404b 4B8D14D7 		lea	rdx, [r15+r10*8]	# prephitmp_505,
 11453 404f 4C8B7508 		mov	r14, QWORD PTR 8[rbp]	# prephitmp_564, sieve_89->bits
 11454              	.LVL685:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
GAS LISTING /tmp/ccW4ZvF5.s 			page 310


 11455              		.loc 1 854 37 view .LVU3892
 11456 4053 C462F1F7 		shlx	r8, rdi, rcx	# prephitmp_502, tmp301, tmp634
 11456      C7
 11457              	.LBE522:
 11458              	.LBE567:
 11459              	.LBB568:
 11460              	.LBB513:
 11461              	.LBB506:
 11462              	# sieve_extend.c:916:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 916:sieve_extend.c **** 
 11463              		.loc 1 916 12 view .LVU3893
 11464 4058 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 11464      18
 11465              	.LVL686:
 916:sieve_extend.c **** 
 11466              		.loc 1 916 12 view .LVU3894
 11467 405d 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, prephitmp_505
 11467      40
 11468 4062 4C89EA   		mov	rdx, r13	# block$pattern_size, patternsize_bits
 11469 4065 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_564
 11469      08
 11470              	.LVL687:
 916:sieve_extend.c **** 
 11471              		.loc 1 916 12 view .LVU3895
 11472 406a 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, prephitmp_502
 11472      30
 11473              	.LVL688:
 916:sieve_extend.c **** 
 11474              		.loc 1 916 12 view .LVU3896
 11475 406f E924FAFF 		jmp	.L732	#
 11475      FF
 11476              	.LVL689:
 11477              	.L933:
 916:sieve_extend.c **** 
 11478              		.loc 1 916 12 view .LVU3897
 11479              	.LBE506:
 11480              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 11481              		.loc 1 905 5 view .LVU3898
 11482 4074 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _94
 11482      40
 11483              	# sieve_extend.c:901:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 901:sieve_extend.c **** 
 11484              		.loc 1 901 18 view .LVU3899
 11485 4079 31D2     		xor	edx, edx	# block$pattern_size
 11486              	# sieve_extend.c:896:     register counter_t prime   = 0;
 896:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11487              		.loc 1 896 24 view .LVU3900
 11488 407b 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 11488      48000000 
 11488      00
 11489              	# sieve_extend.c:901:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 901:sieve_extend.c **** 
 11490              		.loc 1 901 18 view .LVU3901
 11491 4084 31F6     		xor	esi, esi	# block$pattern_start
 11492              	# sieve_extend.c:905:     for (;range_stop < block_stop;) {
 905:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/ccW4ZvF5.s 			page 311


 11493              		.loc 1 905 5 view .LVU3902
 11494 4086 48C74424 		mov	QWORD PTR 48[rsp], 1	# %sfp,
 11494      30010000 
 11494      00
 11495 408f E963F9FF 		jmp	.L725	#
 11495      FF
 11496              	.LBE513:
 11497              	.LBE568:
 11498              		.cfi_endproc
 11499              	.LFE79:
 11501 4094 66662E0F 		.p2align 4
 11501      1F840000 
 11501      00000090 
 11503              	tune_benchmark:
 11504              	.LVL690:
 11505              	.LFB87:
1079:sieve_extend.c **** 
1080:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11506              		.loc 1 1080 94 is_stmt 1 view -0
 11507              		.cfi_startproc
 11508              		.loc 1 1080 94 is_stmt 0 view .LVU3904
 11509 40a0 4154     		push	r12	#
 11510              		.cfi_def_cfa_offset 16
 11511              		.cfi_offset 12, -16
 11512 40a2 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 11513              	# sieve_extend.c:1086:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1081:sieve_extend.c ****     counter_t passes = 0;
1082:sieve_extend.c ****     double elapsed_time = 0;
1083:sieve_extend.c ****     struct timespec start_time,end_time;
1084:sieve_extend.c ****     struct sieve_t *sieve;
1085:sieve_extend.c **** 
1086:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11514              		.loc 1 1086 44 view .LVU3905
 11515 40a5 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 11516              	.LVL691:
 11517              	# sieve_extend.c:1080: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1080:sieve_extend.c ****     counter_t passes = 0;
 11518              		.loc 1 1080 94 view .LVU3906
 11519 40a9 55       		push	rbp	#
 11520              		.cfi_def_cfa_offset 24
 11521              		.cfi_offset 6, -24
 11522              	# sieve_extend.c:1086:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11523              		.loc 1 1086 44 view .LVU3907
 11524 40aa 48C1E705 		sal	rdi, 5	# tmp115,
 11525              	# sieve_extend.c:1081:     counter_t passes = 0;
1081:sieve_extend.c ****     counter_t passes = 0;
 11526              		.loc 1 1081 15 view .LVU3908
 11527 40ae 4531E4   		xor	r12d, r12d	# passes
 11528              	# sieve_extend.c:1080: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1080:sieve_extend.c ****     counter_t passes = 0;
 11529              		.loc 1 1080 94 view .LVU3909
 11530 40b1 53       		push	rbx	#
 11531              		.cfi_def_cfa_offset 32
 11532              		.cfi_offset 3, -32
 11533              	# sieve_extend.c:1086:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11534              		.loc 1 1086 44 view .LVU3910
 11535 40b2 498D1C38 		lea	rbx, [r8+rdi]	# _2,
GAS LISTING /tmp/ccW4ZvF5.s 			page 312


 11536              	# sieve_extend.c:1090:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1087:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1088:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1089:sieve_extend.c **** 
1090:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11537              		.loc 1 1090 5 view .LVU3911
 11538 40b6 BF010000 		mov	edi, 1	#,
 11538      00
 11539              	# sieve_extend.c:1080: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1080:sieve_extend.c ****     counter_t passes = 0;
 11540              		.loc 1 1080 94 view .LVU3912
 11541 40bb 488D6424 		lea	rsp, -48[rsp]	#,
 11541      D0
 11542              		.cfi_def_cfa_offset 80
 11543              	# sieve_extend.c:1087:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1087:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11544              		.loc 1 1087 30 view .LVU3913
 11545 40c0 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11546              	# sieve_extend.c:1090:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11547              		.loc 1 1090 5 view .LVU3914
 11548 40c4 4889E6   		mov	rsi, rsp	# tmp119,
 11549              	.LVL692:
 11550              	# sieve_extend.c:1088:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1088:sieve_extend.c **** 
 11551              		.loc 1 1088 30 view .LVU3915
 11552 40c7 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 11553              	# sieve_extend.c:1080: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1080:sieve_extend.c ****     counter_t passes = 0;
 11554              		.loc 1 1080 94 view .LVU3916
 11555 40cb 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 11555      25280000 
 11555      00
 11556 40d4 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7192, tmp160
 11556      28
 11557 40d9 31C0     		xor	eax, eax	# tmp160
1081:sieve_extend.c ****     double elapsed_time = 0;
 11558              		.loc 1 1081 5 is_stmt 1 view .LVU3917
 11559              	.LVL693:
1082:sieve_extend.c ****     struct timespec start_time,end_time;
 11560              		.loc 1 1082 5 view .LVU3918
1083:sieve_extend.c ****     struct sieve_t *sieve;
 11561              		.loc 1 1083 5 view .LVU3919
1084:sieve_extend.c **** 
 11562              		.loc 1 1084 5 view .LVU3920
1086:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11563              		.loc 1 1086 5 view .LVU3921
 11564              	# sieve_extend.c:1086:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1086:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11565              		.loc 1 1086 29 is_stmt 0 view .LVU3922
 11566 40db 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11567              	# sieve_extend.c:1087:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1087:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11568              		.loc 1 1087 30 view .LVU3923
 11569 40df 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11569      000000
 11570              	# sieve_extend.c:1088:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1088:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 313


 11571              		.loc 1 1088 30 view .LVU3924
 11572 40e6 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 11572      000000
 11573              	# sieve_extend.c:1086:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1086:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11574              		.loc 1 1086 29 view .LVU3925
 11575 40ed 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11575      000000
1087:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11576              		.loc 1 1087 5 is_stmt 1 view .LVU3926
1088:sieve_extend.c **** 
 11577              		.loc 1 1088 5 view .LVU3927
 11578              		.loc 1 1090 5 view .LVU3928
 11579 40f4 E8000000 		call	clock_gettime@PLT	#
 11579      00
 11580              	.LVL694:
1091:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11581              		.loc 1 1091 5 view .LVU3929
 11582              		.loc 1 1091 11 view .LVU3930
 11583 40f9 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 11584 40fd C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11584      40
 11585 4102 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 11585      00000000 
 11586 410a 7676     		jbe	.L947	#,
 11587 410c E99E0000 		jmp	.L948	#
 11587      00
 11588              	.LVL695:
 11589              		.p2align 4,,7
 11590 4111 0F1F8000 		.p2align 3
 11590      000000
 11591              	.L951:
1092:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11592              		.loc 1 1092 9 view .LVU3931
 11593              	# sieve_extend.c:1092:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
 11594              		.loc 1 1092 17 is_stmt 0 view .LVU3932
 11595 4118 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11596              	# sieve_extend.c:1094:         passes++;
1093:sieve_extend.c ****         sieve_delete(sieve);
1094:sieve_extend.c ****         passes++;
 11597              		.loc 1 1094 15 view .LVU3933
 11598 411c 4983C401 		add	r12, 1	# passes,
 11599              	.LVL696:
 11600              	# sieve_extend.c:1092:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1092:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11601              		.loc 1 1092 17 view .LVU3934
 11602 4120 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11603 4123 E868F4FF 		call	sieve_shake	#
 11603      FF
 11604              	.LVL697:
 11605              	.LBB569:
 11606              	.LBB570:
 11607              	# sieve_extend.c:123:     free(sieve->bitarray);
 123:sieve_extend.c ****     free(sieve);
 11608              		.loc 1 123 5 view .LVU3935
 11609 4128 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitarray
 11610              	.LBE570:
GAS LISTING /tmp/ccW4ZvF5.s 			page 314


 11611              	.LBE569:
 11612              	# sieve_extend.c:1092:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1092:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11613              		.loc 1 1092 17 view .LVU3936
 11614 412b 4889C5   		mov	rbp, rax	# sieve, tmp151
 11615              	.LVL698:
1093:sieve_extend.c ****         sieve_delete(sieve);
 11616              		.loc 1 1093 9 is_stmt 1 view .LVU3937
 11617              	.LBB572:
 11618              	.LBI569:
 122:sieve_extend.c ****     free(sieve->bitarray);
 11619              		.loc 1 122 13 view .LVU3938
 11620              	.LBB571:
 123:sieve_extend.c ****     free(sieve);
 11621              		.loc 1 123 5 view .LVU3939
 11622 412e E8000000 		call	free@PLT	#
 11622      00
 11623              	.LVL699:
 124:sieve_extend.c **** }
 11624              		.loc 1 124 5 view .LVU3940
 11625 4133 4889EF   		mov	rdi, rbp	#, sieve
 11626 4136 E8000000 		call	free@PLT	#
 11626      00
 11627              	.LVL700:
 124:sieve_extend.c **** }
 11628              		.loc 1 124 5 is_stmt 0 view .LVU3941
 11629              	.LBE571:
 11630              	.LBE572:
 11631              		.loc 1 1094 9 is_stmt 1 view .LVU3942
1095:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11632              		.loc 1 1095 9 view .LVU3943
 11633 413b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 11633      10
 11634 4140 BF010000 		mov	edi, 1	#,
 11634      00
 11635 4145 E8000000 		call	clock_gettime@PLT	#
 11635      00
 11636              	.LVL701:
1096:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11637              		.loc 1 1096 9 view .LVU3944
 11638              	# sieve_extend.c:1096:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11639              		.loc 1 1096 58 is_stmt 0 view .LVU3945
 11640 414a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 11640      442418
 11641              	# sieve_extend.c:1096:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11642              		.loc 1 1096 64 view .LVU3946
 11643 4151 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 11643      0C24
 11644              	# sieve_extend.c:1096:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11645              		.loc 1 1096 104 view .LVU3947
 11646 4157 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 11646      5C2408
 11647              	# sieve_extend.c:1096:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11648              		.loc 1 1096 40 view .LVU3948
 11649 415e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 11649      542410
 11650 4165 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
GAS LISTING /tmp/ccW4ZvF5.s 			page 315


 11650      05000000 
 11650      00
 11651 416e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 11651      1D000000 
 11651      00
 11652              	# sieve_extend.c:1096:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11653              		.loc 1 1096 22 view .LVU3949
 11654 4177 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 11655              	.LVL702:
1091:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11656              		.loc 1 1091 11 is_stmt 1 view .LVU3950
 11657 417b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11657      40
 11658 4180 7706     		ja	.L962	#,
 11659              	.LVL703:
 11660              	.L947:
 11661              	# sieve_extend.c:1091:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1091:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11662              		.loc 1 1091 79 is_stmt 0 discriminator 1 view .LVU3951
 11663 4182 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 11664 4186 7790     		ja	.L951	#,
 11665              	.L962:
1091:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11666              		.loc 1 1091 79 discriminator 1 view .LVU3952
 11667 4188 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 11667      F4
 11668 418d 4D85E4   		test	r12, r12	# passes
 11669 4190 7919     		jns	.L953	#,
1091:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11670              		.loc 1 1091 79 discriminator 1 view .LVU3953
 11671 4192 4C89E6   		mov	rsi, r12	# tmp135, passes
 11672 4195 4D89E1   		mov	r9, r12	# tmp136, passes
 11673 4198 48D1EE   		shr	rsi	# tmp135
 11674 419b 4183E101 		and	r9d, 1	# tmp136,
 11675 419f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 11676 41a2 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 11676      EE
 11677 41a7 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 11678              	.L953:
1091:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11679              		.loc 1 1091 79 discriminator 1 view .LVU3954
 11680 41ab C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 11681              	.LVL704:
 11682              	.L948:
1097:sieve_extend.c ****     }
1098:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 11683              		.loc 1 1098 5 is_stmt 1 view .LVU3955
 11684              	# sieve_extend.c:1098:     tuning_result[tuning_result_index].passes = passes;
 11685              		.loc 1 1098 47 is_stmt 0 view .LVU3956
 11686 41af 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1099:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11687              		.loc 1 1099 5 is_stmt 1 view .LVU3957
 11688              	# sieve_extend.c:1099:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11689              		.loc 1 1099 53 is_stmt 0 view .LVU3958
 11690 41b3 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 11690      50
1100:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
GAS LISTING /tmp/ccW4ZvF5.s 			page 316


 11691              		.loc 1 1100 5 is_stmt 1 view .LVU3959
 11692              	# sieve_extend.c:1100:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11693              		.loc 1 1100 44 is_stmt 0 view .LVU3960
 11694 41b8 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 11694      58
 11695              	# sieve_extend.c:1101: }
1101:sieve_extend.c **** }
 11696              		.loc 1 1101 1 view .LVU3961
 11697 41bd 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7192
 11697      28
 11698 41c2 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 11698      25280000 
 11698      00
 11699 41cb 750A     		jne	.L963	#,
 11700 41cd 488D6424 		lea	rsp, 48[rsp]	#,
 11700      30
 11701              		.cfi_remember_state
 11702              		.cfi_def_cfa_offset 32
 11703 41d2 5B       		pop	rbx	#
 11704              		.cfi_def_cfa_offset 24
 11705 41d3 5D       		pop	rbp	#
 11706              		.cfi_def_cfa_offset 16
 11707 41d4 415C     		pop	r12	#
 11708              		.cfi_def_cfa_offset 8
 11709 41d6 C3       		ret	
 11710              	.L963:
 11711              		.cfi_restore_state
 11712 41d7 E8000000 		call	__stack_chk_fail@PLT	#
 11712      00
 11713              	.LVL705:
 11714              		.cfi_endproc
 11715              	.LFE87:
 11717 41dc 0F1F4000 		.p2align 4
 11718              		.globl	shiftvec
 11720              	shiftvec:
 11721              	.LVL706:
 11722              	.LFB70:
 576:sieve_extend.c ****     int i = 0;
 11723              		.loc 1 576 1 is_stmt 1 view -0
 11724              		.cfi_startproc
 576:sieve_extend.c ****     int i = 0;
 11725              		.loc 1 576 1 is_stmt 0 view .LVU3963
 11726 41e0 F30F1EFA 		endbr64	
 577:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 11727              		.loc 1 577 5 is_stmt 1 view .LVU3964
 11728              	.LVL707:
 579:sieve_extend.c ****     {
 11729              		.loc 1 579 5 view .LVU3965
 579:sieve_extend.c ****     {
 11730              		.loc 1 579 12 view .LVU3966
 11731              	# sieve_extend.c:579:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 579:sieve_extend.c ****     {
 11732              		.loc 1 579 5 is_stmt 0 view .LVU3967
 11733 41e4 83FA04   		cmp	edx, 4	# size,
 11734 41e7 0F8E9D03 		jle	.L1009	#,
 11734      0000
 11735 41ed 41BB4000 		mov	r11d, 64	# tmp130,
GAS LISTING /tmp/ccW4ZvF5.s 			page 317


 11735      0000
 11736 41f3 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 11737 41f7 4489D8   		mov	eax, r11d	# _4, tmp130
 11738 41fa C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 11739 41fe 29C8     		sub	eax, ecx	# _4, shift
 11740              	.LBB573:
 11741              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11742              		.loc 1 582 25 view .LVU3968
 11743 4200 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114, off
 11743      1655
 11744              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11745              		.loc 1 582 34 view .LVU3969
 11746 4206 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0B]
 11747 420a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 11747      C0
 11748 420f 41C1E802 		shr	r8d, 2	# _25,
 11749 4213 41B90100 		mov	r9d, 1	# ivtmp.578,
 11749      0000
 11750              	.LBE573:
 11751              	.LBB574:
 11752              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11753              		.loc 1 584 34 view .LVU3970
 11754 4219 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.568, vect__102.567, _4
 11755              	.LBE574:
 11756              	.LBB575:
 11757              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11758              		.loc 1 582 34 view .LVU3971
 11759 421d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.572, tmp269, shift
 11760 4221 458D5001 		lea	r10d, 1[r8]	# tmp164,
 11761 4225 4589C3   		mov	r11d, r8d	# tmp169, _25
 11762              	.LBE575:
 11763              	.LBB576:
 11764              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11765              		.loc 1 584 22 view .LVU3972
 11766 4228 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.573, vect__57.568, vect__104.572
 11767 422c 4183E307 		and	r11d, 7	# tmp169,
 11768              	.LVL708:
 584:sieve_extend.c ****     }
 11769              		.loc 1 584 22 view .LVU3973
 11770              	.LBE576:
 11771              	.LBB577:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11772              		.loc 1 581 25 is_stmt 1 view .LVU3974
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11773              		.loc 1 582 13 view .LVU3975
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11774              		.loc 1 581 32 view .LVU3976
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11775              		.loc 1 581 25 view .LVU3977
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11776              		.loc 1 582 13 view .LVU3978
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW4ZvF5.s 			page 318


 11777              		.loc 1 581 32 view .LVU3979
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11778              		.loc 1 581 25 view .LVU3980
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11779              		.loc 1 582 13 view .LVU3981
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11780              		.loc 1 581 32 view .LVU3982
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11781              		.loc 1 581 25 view .LVU3983
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11782              		.loc 1 582 13 view .LVU3984
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11783              		.loc 1 581 32 view .LVU3985
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11784              		.loc 1 581 25 view .LVU3986
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11785              		.loc 1 581 25 is_stmt 0 view .LVU3987
 11786              	.LBE577:
 11787              	.LBB578:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11788              		.loc 1 583 25 is_stmt 1 view .LVU3988
 584:sieve_extend.c ****     }
 11789              		.loc 1 584 13 view .LVU3989
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11790              		.loc 1 583 32 view .LVU3990
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11791              		.loc 1 583 25 view .LVU3991
 584:sieve_extend.c ****     }
 11792              		.loc 1 584 13 view .LVU3992
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11793              		.loc 1 583 32 view .LVU3993
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11794              		.loc 1 583 25 view .LVU3994
 584:sieve_extend.c ****     }
 11795              		.loc 1 584 13 view .LVU3995
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11796              		.loc 1 583 32 view .LVU3996
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11797              		.loc 1 583 25 view .LVU3997
 584:sieve_extend.c ****     }
 11798              		.loc 1 584 13 view .LVU3998
 11799 4230 4183FA01 		cmp	r10d, 1	# tmp164,
 11800 4234 B8200000 		mov	eax, 32	# ivtmp.581,
 11800      00
 11801              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11802              		.loc 1 584 22 is_stmt 0 view .LVU3999
 11803 4239 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect__58
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11804              		.loc 1 583 32 is_stmt 1 view .LVU4000
 11805              	.LVL709:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11806              		.loc 1 583 25 view .LVU4001
 11807              	.LBE578:
 579:sieve_extend.c ****     {
 11808              		.loc 1 579 24 view .LVU4002
 579:sieve_extend.c ****     {
GAS LISTING /tmp/ccW4ZvF5.s 			page 319


 11809              		.loc 1 579 12 view .LVU4003
 11810 423d 0F866002 		jbe	.L1007	#,
 11810      0000
 11811 4243 4585DB   		test	r11d, r11d	# tmp169
 11812 4246 0F841E01 		je	.L967	#,
 11812      0000
 11813 424c 4183FB01 		cmp	r11d, 1	# tmp169,
 11814 4250 0F84E500 		je	.L994	#,
 11814      0000
 11815 4256 4183FB02 		cmp	r11d, 2	# tmp169,
 11816 425a 0F84B600 		je	.L995	#,
 11816      0000
 11817 4260 4183FB03 		cmp	r11d, 3	# tmp169,
 11818 4264 0F848700 		je	.L996	#,
 11818      0000
 11819 426a 4183FB04 		cmp	r11d, 4	# tmp169,
 11820 426e 745B     		je	.L997	#,
 11821 4270 4183FB05 		cmp	r11d, 5	# tmp169,
 11822 4274 7430     		je	.L998	#,
 11823 4276 4183FB06 		cmp	r11d, 6	# tmp169,
 11824 427a 0F85DC02 		jne	.L1010	#,
 11824      0000
 11825              	.L999:
 11826              	.LVL710:
 11827              	.LBB579:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11828              		.loc 1 581 25 view .LVU4004
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11829              		.loc 1 582 13 view .LVU4005
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11830              		.loc 1 581 32 view .LVU4006
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11831              		.loc 1 581 25 view .LVU4007
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11832              		.loc 1 582 13 view .LVU4008
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11833              		.loc 1 581 32 view .LVU4009
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11834              		.loc 1 581 25 view .LVU4010
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11835              		.loc 1 582 13 view .LVU4011
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11836              		.loc 1 581 32 view .LVU4012
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11837              		.loc 1 581 25 view .LVU4013
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11838              		.loc 1 582 13 view .LVU4014
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11839              		.loc 1 581 32 view .LVU4015
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11840              		.loc 1 581 25 view .LVU4016
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11841              		.loc 1 581 25 is_stmt 0 view .LVU4017
 11842              	.LBE579:
 11843              	.LBB580:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11844              		.loc 1 583 25 is_stmt 1 view .LVU4018
GAS LISTING /tmp/ccW4ZvF5.s 			page 320


 584:sieve_extend.c ****     }
 11845              		.loc 1 584 13 view .LVU4019
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11846              		.loc 1 583 32 view .LVU4020
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11847              		.loc 1 583 25 view .LVU4021
 584:sieve_extend.c ****     }
 11848              		.loc 1 584 13 view .LVU4022
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11849              		.loc 1 583 32 view .LVU4023
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11850              		.loc 1 583 25 view .LVU4024
 584:sieve_extend.c ****     }
 11851              		.loc 1 584 13 view .LVU4025
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11852              		.loc 1 583 32 view .LVU4026
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11853              		.loc 1 583 25 view .LVU4027
 584:sieve_extend.c ****     }
 11854              		.loc 1 584 13 view .LVU4028
 11855              	.LBE580:
 11856              	.LBB581:
 11857              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11858              		.loc 1 582 25 is_stmt 0 view .LVU4029
 11859 4280 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 11859      240655
 11860 4287 4183C101 		add	r9d, 1	# ivtmp.578,
 11861              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11862              		.loc 1 582 34 view .LVU4030
 11863 428b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 11863      06
 11864              	.LBE581:
 11865              	.LBB582:
 11866              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11867              		.loc 1 584 34 view .LVU4031
 11868 4290 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.568, vect__102.567, _4
 11869              	.LBE582:
 11870              	.LBB583:
 11871              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11872              		.loc 1 582 34 view .LVU4032
 11873 4294 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.572, tmp279, shift
 11874              	.LBE583:
 11875              	.LBB584:
 11876              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11877              		.loc 1 584 22 view .LVU4033
 11878 4298 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.573, vect__57.568, vect__104.572
 11878      D7
 11879 429d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 11879      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11880              		.loc 1 583 32 is_stmt 1 view .LVU4034
 11881              	.LVL711:
GAS LISTING /tmp/ccW4ZvF5.s 			page 321


 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11882              		.loc 1 583 25 view .LVU4035
 11883              	.LBE584:
 579:sieve_extend.c ****     {
 11884              		.loc 1 579 24 view .LVU4036
 579:sieve_extend.c ****     {
 11885              		.loc 1 579 12 view .LVU4037
 11886 42a2 4883C020 		add	rax, 32	# ivtmp.581,
 11887              	.L998:
 11888              	.LVL712:
 11889              	.LBB585:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11890              		.loc 1 581 25 view .LVU4038
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11891              		.loc 1 582 13 view .LVU4039
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11892              		.loc 1 581 32 view .LVU4040
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11893              		.loc 1 581 25 view .LVU4041
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11894              		.loc 1 582 13 view .LVU4042
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11895              		.loc 1 581 32 view .LVU4043
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11896              		.loc 1 581 25 view .LVU4044
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11897              		.loc 1 582 13 view .LVU4045
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11898              		.loc 1 581 32 view .LVU4046
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11899              		.loc 1 581 25 view .LVU4047
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11900              		.loc 1 582 13 view .LVU4048
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11901              		.loc 1 581 32 view .LVU4049
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11902              		.loc 1 581 25 view .LVU4050
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11903              		.loc 1 581 25 is_stmt 0 view .LVU4051
 11904              	.LBE585:
 11905              	.LBB586:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11906              		.loc 1 583 25 is_stmt 1 view .LVU4052
 584:sieve_extend.c ****     }
 11907              		.loc 1 584 13 view .LVU4053
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11908              		.loc 1 583 32 view .LVU4054
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11909              		.loc 1 583 25 view .LVU4055
 584:sieve_extend.c ****     }
 11910              		.loc 1 584 13 view .LVU4056
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11911              		.loc 1 583 32 view .LVU4057
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11912              		.loc 1 583 25 view .LVU4058
 584:sieve_extend.c ****     }
 11913              		.loc 1 584 13 view .LVU4059
GAS LISTING /tmp/ccW4ZvF5.s 			page 322


 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11914              		.loc 1 583 32 view .LVU4060
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11915              		.loc 1 583 25 view .LVU4061
 584:sieve_extend.c ****     }
 11916              		.loc 1 584 13 view .LVU4062
 11917              	.LBE586:
 11918              	.LBB587:
 11919              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11920              		.loc 1 582 25 is_stmt 0 view .LVU4063
 11921 42a6 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 11921      2C0655
 11922 42ad 4183C101 		add	r9d, 1	# ivtmp.578,
 11923              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11924              		.loc 1 582 34 view .LVU4064
 11925 42b1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 11925      06
 11926              	.LBE587:
 11927              	.LBB588:
 11928              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11929              		.loc 1 584 34 view .LVU4065
 11930 42b6 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.568, vect__102.567, _4
 11931              	.LBE588:
 11932              	.LBB589:
 11933              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11934              		.loc 1 582 34 view .LVU4066
 11935 42ba C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.572, tmp280, shift
 11936              	.LBE589:
 11937              	.LBB590:
 11938              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11939              		.loc 1 584 22 view .LVU4067
 11940 42be C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.573, vect__57.568, vect__104.572
 11941 42c2 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 11941      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11942              		.loc 1 583 32 is_stmt 1 view .LVU4068
 11943              	.LVL713:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11944              		.loc 1 583 25 view .LVU4069
 11945              	.LBE590:
 579:sieve_extend.c ****     {
 11946              		.loc 1 579 24 view .LVU4070
 579:sieve_extend.c ****     {
 11947              		.loc 1 579 12 view .LVU4071
 11948 42c7 4883C020 		add	rax, 32	# ivtmp.581,
 11949              	.L997:
 11950              	.LVL714:
 11951              	.LBB591:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11952              		.loc 1 581 25 view .LVU4072
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11953              		.loc 1 582 13 view .LVU4073
GAS LISTING /tmp/ccW4ZvF5.s 			page 323


 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11954              		.loc 1 581 32 view .LVU4074
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11955              		.loc 1 581 25 view .LVU4075
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11956              		.loc 1 582 13 view .LVU4076
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11957              		.loc 1 581 32 view .LVU4077
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11958              		.loc 1 581 25 view .LVU4078
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11959              		.loc 1 582 13 view .LVU4079
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11960              		.loc 1 581 32 view .LVU4080
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11961              		.loc 1 581 25 view .LVU4081
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11962              		.loc 1 582 13 view .LVU4082
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11963              		.loc 1 581 32 view .LVU4083
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11964              		.loc 1 581 25 view .LVU4084
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11965              		.loc 1 581 25 is_stmt 0 view .LVU4085
 11966              	.LBE591:
 11967              	.LBB592:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11968              		.loc 1 583 25 is_stmt 1 view .LVU4086
 584:sieve_extend.c ****     }
 11969              		.loc 1 584 13 view .LVU4087
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11970              		.loc 1 583 32 view .LVU4088
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11971              		.loc 1 583 25 view .LVU4089
 584:sieve_extend.c ****     }
 11972              		.loc 1 584 13 view .LVU4090
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11973              		.loc 1 583 32 view .LVU4091
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11974              		.loc 1 583 25 view .LVU4092
 584:sieve_extend.c ****     }
 11975              		.loc 1 584 13 view .LVU4093
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11976              		.loc 1 583 32 view .LVU4094
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11977              		.loc 1 583 25 view .LVU4095
 584:sieve_extend.c ****     }
 11978              		.loc 1 584 13 view .LVU4096
 11979              	.LBE592:
 11980              	.LBB593:
 11981              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11982              		.loc 1 582 25 is_stmt 0 view .LVU4097
 11983 42cb C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 11983      040655
 11984 42d2 4183C101 		add	r9d, 1	# ivtmp.578,
 11985              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW4ZvF5.s 			page 324


 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11986              		.loc 1 582 34 view .LVU4098
 11987 42d6 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 11987      06
 11988              	.LBE593:
 11989              	.LBB594:
 11990              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 11991              		.loc 1 584 34 view .LVU4099
 11992 42db C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.568, vect__102.567, _4
 11993              	.LBE594:
 11994              	.LBB595:
 11995              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11996              		.loc 1 582 34 view .LVU4100
 11997 42df C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.572, tmp281, shift
 11998              	.LBE595:
 11999              	.LBB596:
 12000              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12001              		.loc 1 584 22 view .LVU4101
 12002 42e3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.573, vect__57.568, vect__104.572
 12002      E3
 12003 42e8 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vec
 12003      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12004              		.loc 1 583 32 is_stmt 1 view .LVU4102
 12005              	.LVL715:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12006              		.loc 1 583 25 view .LVU4103
 12007              	.LBE596:
 579:sieve_extend.c ****     {
 12008              		.loc 1 579 24 view .LVU4104
 579:sieve_extend.c ****     {
 12009              		.loc 1 579 12 view .LVU4105
 12010 42ed 4883C020 		add	rax, 32	# ivtmp.581,
 12011              	.L996:
 12012              	.LVL716:
 12013              	.LBB597:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12014              		.loc 1 581 25 view .LVU4106
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12015              		.loc 1 582 13 view .LVU4107
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12016              		.loc 1 581 32 view .LVU4108
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12017              		.loc 1 581 25 view .LVU4109
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12018              		.loc 1 582 13 view .LVU4110
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12019              		.loc 1 581 32 view .LVU4111
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12020              		.loc 1 581 25 view .LVU4112
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12021              		.loc 1 582 13 view .LVU4113
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12022              		.loc 1 581 32 view .LVU4114
GAS LISTING /tmp/ccW4ZvF5.s 			page 325


 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12023              		.loc 1 581 25 view .LVU4115
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12024              		.loc 1 582 13 view .LVU4116
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12025              		.loc 1 581 32 view .LVU4117
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12026              		.loc 1 581 25 view .LVU4118
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12027              		.loc 1 581 25 is_stmt 0 view .LVU4119
 12028              	.LBE597:
 12029              	.LBB598:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12030              		.loc 1 583 25 is_stmt 1 view .LVU4120
 584:sieve_extend.c ****     }
 12031              		.loc 1 584 13 view .LVU4121
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12032              		.loc 1 583 32 view .LVU4122
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12033              		.loc 1 583 25 view .LVU4123
 584:sieve_extend.c ****     }
 12034              		.loc 1 584 13 view .LVU4124
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12035              		.loc 1 583 32 view .LVU4125
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12036              		.loc 1 583 25 view .LVU4126
 584:sieve_extend.c ****     }
 12037              		.loc 1 584 13 view .LVU4127
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12038              		.loc 1 583 32 view .LVU4128
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12039              		.loc 1 583 25 view .LVU4129
 584:sieve_extend.c ****     }
 12040              		.loc 1 584 13 view .LVU4130
 12041              	.LBE598:
 12042              	.LBB599:
 12043              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12044              		.loc 1 582 25 is_stmt 0 view .LVU4131
 12045 42f1 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 12045      2C0655
 12046 42f8 4183C101 		add	r9d, 1	# ivtmp.578,
 12047              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12048              		.loc 1 582 34 view .LVU4132
 12049 42fc C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 12049      06
 12050              	.LBE599:
 12051              	.LBB600:
 12052              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12053              		.loc 1 584 34 view .LVU4133
 12054 4301 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.568, vect__102.567, _4
 12055              	.LBE600:
 12056              	.LBB601:
 12057              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccW4ZvF5.s 			page 326


 12058              		.loc 1 582 34 view .LVU4134
 12059 4305 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.572, tmp282, shift
 12060              	.LBE601:
 12061              	.LBB602:
 12062              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12063              		.loc 1 584 22 view .LVU4135
 12064 4309 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.573, vect__57.568, vect__104.572
 12065 430d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12065      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12066              		.loc 1 583 32 is_stmt 1 view .LVU4136
 12067              	.LVL717:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12068              		.loc 1 583 25 view .LVU4137
 12069              	.LBE602:
 579:sieve_extend.c ****     {
 12070              		.loc 1 579 24 view .LVU4138
 579:sieve_extend.c ****     {
 12071              		.loc 1 579 12 view .LVU4139
 12072 4312 4883C020 		add	rax, 32	# ivtmp.581,
 12073              	.L995:
 12074              	.LVL718:
 12075              	.LBB603:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12076              		.loc 1 581 25 view .LVU4140
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12077              		.loc 1 582 13 view .LVU4141
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12078              		.loc 1 581 32 view .LVU4142
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12079              		.loc 1 581 25 view .LVU4143
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12080              		.loc 1 582 13 view .LVU4144
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12081              		.loc 1 581 32 view .LVU4145
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12082              		.loc 1 581 25 view .LVU4146
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12083              		.loc 1 582 13 view .LVU4147
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12084              		.loc 1 581 32 view .LVU4148
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12085              		.loc 1 581 25 view .LVU4149
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12086              		.loc 1 582 13 view .LVU4150
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12087              		.loc 1 581 32 view .LVU4151
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12088              		.loc 1 581 25 view .LVU4152
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12089              		.loc 1 581 25 is_stmt 0 view .LVU4153
 12090              	.LBE603:
 12091              	.LBB604:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12092              		.loc 1 583 25 is_stmt 1 view .LVU4154
 584:sieve_extend.c ****     }
GAS LISTING /tmp/ccW4ZvF5.s 			page 327


 12093              		.loc 1 584 13 view .LVU4155
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12094              		.loc 1 583 32 view .LVU4156
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12095              		.loc 1 583 25 view .LVU4157
 584:sieve_extend.c ****     }
 12096              		.loc 1 584 13 view .LVU4158
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12097              		.loc 1 583 32 view .LVU4159
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12098              		.loc 1 583 25 view .LVU4160
 584:sieve_extend.c ****     }
 12099              		.loc 1 584 13 view .LVU4161
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12100              		.loc 1 583 32 view .LVU4162
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12101              		.loc 1 583 25 view .LVU4163
 584:sieve_extend.c ****     }
 12102              		.loc 1 584 13 view .LVU4164
 12103              	.LBE604:
 12104              	.LBB605:
 12105              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12106              		.loc 1 582 25 is_stmt 0 view .LVU4165
 12107 4316 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 12107      240655
 12108 431d 4183C101 		add	r9d, 1	# ivtmp.578,
 12109              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12110              		.loc 1 582 34 view .LVU4166
 12111 4321 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 12111      06
 12112              	.LBE605:
 12113              	.LBB606:
 12114              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12115              		.loc 1 584 34 view .LVU4167
 12116 4326 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.568, vect__102.567, _4
 12117              	.LBE606:
 12118              	.LBB607:
 12119              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12120              		.loc 1 582 34 view .LVU4168
 12121 432a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.572, tmp283, shift
 12122              	.LBE607:
 12123              	.LBB608:
 12124              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12125              		.loc 1 584 22 view .LVU4169
 12126 432e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.573, vect__57.568, vect__104.572
 12127 4332 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12127      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12128              		.loc 1 583 32 is_stmt 1 view .LVU4170
 12129              	.LVL719:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12130              		.loc 1 583 25 view .LVU4171
GAS LISTING /tmp/ccW4ZvF5.s 			page 328


 12131              	.LBE608:
 579:sieve_extend.c ****     {
 12132              		.loc 1 579 24 view .LVU4172
 579:sieve_extend.c ****     {
 12133              		.loc 1 579 12 view .LVU4173
 12134 4337 4883C020 		add	rax, 32	# ivtmp.581,
 12135              	.L994:
 12136              	.LVL720:
 12137              	.LBB609:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12138              		.loc 1 581 25 view .LVU4174
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12139              		.loc 1 582 13 view .LVU4175
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12140              		.loc 1 581 32 view .LVU4176
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12141              		.loc 1 581 25 view .LVU4177
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12142              		.loc 1 582 13 view .LVU4178
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12143              		.loc 1 581 32 view .LVU4179
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12144              		.loc 1 581 25 view .LVU4180
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12145              		.loc 1 582 13 view .LVU4181
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12146              		.loc 1 581 32 view .LVU4182
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12147              		.loc 1 581 25 view .LVU4183
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12148              		.loc 1 582 13 view .LVU4184
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12149              		.loc 1 581 32 view .LVU4185
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12150              		.loc 1 581 25 view .LVU4186
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12151              		.loc 1 581 25 is_stmt 0 view .LVU4187
 12152              	.LBE609:
 12153              	.LBB610:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12154              		.loc 1 583 25 is_stmt 1 view .LVU4188
 584:sieve_extend.c ****     }
 12155              		.loc 1 584 13 view .LVU4189
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12156              		.loc 1 583 32 view .LVU4190
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12157              		.loc 1 583 25 view .LVU4191
 584:sieve_extend.c ****     }
 12158              		.loc 1 584 13 view .LVU4192
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12159              		.loc 1 583 32 view .LVU4193
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12160              		.loc 1 583 25 view .LVU4194
 584:sieve_extend.c ****     }
 12161              		.loc 1 584 13 view .LVU4195
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12162              		.loc 1 583 32 view .LVU4196
GAS LISTING /tmp/ccW4ZvF5.s 			page 329


 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12163              		.loc 1 583 25 view .LVU4197
 584:sieve_extend.c ****     }
 12164              		.loc 1 584 13 view .LVU4198
 12165              	.LBE610:
 12166              	.LBB611:
 12167              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12168              		.loc 1 582 25 is_stmt 0 view .LVU4199
 12169 433b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114,
 12169      0C0655
 12170 4342 4183C101 		add	r9d, 1	# ivtmp.578,
 12171              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12172              		.loc 1 582 34 view .LVU4200
 12173 4346 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.581_114, offset: 
 12173      06
 12174              	.LBE611:
 12175              	.LBB612:
 12176              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12177              		.loc 1 584 34 view .LVU4201
 12178 434b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.568, vect__102.567, _4
 12179              	.LBE612:
 12180              	.LBB613:
 12181              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12182              		.loc 1 582 34 view .LVU4202
 12183 434f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.572, tmp284, shift
 12184              	.LBE613:
 12185              	.LBB614:
 12186              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12187              		.loc 1 584 22 view .LVU4203
 12188 4353 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.573, vect__57.568, vect__104.572
 12188      EC
 12189 4358 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vec
 12189      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12190              		.loc 1 583 32 is_stmt 1 view .LVU4204
 12191              	.LVL721:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12192              		.loc 1 583 25 view .LVU4205
 12193              	.LBE614:
 579:sieve_extend.c ****     {
 12194              		.loc 1 579 24 view .LVU4206
 579:sieve_extend.c ****     {
 12195              		.loc 1 579 12 view .LVU4207
 12196 435d 4883C020 		add	rax, 32	# ivtmp.581,
 12197 4361 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.578
 12198 4364 0F863901 		jbe	.L1007	#,
 12198      0000
 12199              	.L967:
 12200              	.LVL722:
 12201              	.LBB615:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12202              		.loc 1 581 25 view .LVU4208
GAS LISTING /tmp/ccW4ZvF5.s 			page 330


 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12203              		.loc 1 582 13 view .LVU4209
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12204              		.loc 1 581 32 view .LVU4210
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12205              		.loc 1 581 25 view .LVU4211
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12206              		.loc 1 582 13 view .LVU4212
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12207              		.loc 1 581 32 view .LVU4213
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12208              		.loc 1 581 25 view .LVU4214
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12209              		.loc 1 582 13 view .LVU4215
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12210              		.loc 1 581 32 view .LVU4216
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12211              		.loc 1 581 25 view .LVU4217
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12212              		.loc 1 582 13 view .LVU4218
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12213              		.loc 1 581 32 view .LVU4219
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12214              		.loc 1 581 25 view .LVU4220
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12215              		.loc 1 581 25 is_stmt 0 view .LVU4221
 12216              	.LBE615:
 12217              	.LBB616:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12218              		.loc 1 583 25 is_stmt 1 view .LVU4222
 584:sieve_extend.c ****     }
 12219              		.loc 1 584 13 view .LVU4223
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12220              		.loc 1 583 32 view .LVU4224
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12221              		.loc 1 583 25 view .LVU4225
 584:sieve_extend.c ****     }
 12222              		.loc 1 584 13 view .LVU4226
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12223              		.loc 1 583 32 view .LVU4227
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12224              		.loc 1 583 25 view .LVU4228
 584:sieve_extend.c ****     }
 12225              		.loc 1 584 13 view .LVU4229
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12226              		.loc 1 583 32 view .LVU4230
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12227              		.loc 1 583 25 view .LVU4231
 584:sieve_extend.c ****     }
 12228              		.loc 1 584 13 view .LVU4232
 12229              	.LBE616:
 12230              	.LBB617:
 12231              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12232              		.loc 1 582 25 is_stmt 0 view .LVU4233
 12233 436a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114
 12233      340655
GAS LISTING /tmp/ccW4ZvF5.s 			page 331


 12234 4371 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_11
 12234      74062055 
 12235              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12236              		.loc 1 582 34 view .LVU4234
 12237 4379 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0
 12237      06
 12238              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12239              		.loc 1 582 25 view .LVU4235
 12240 437e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12240      54064055 
 12241              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12242              		.loc 1 582 34 view .LVU4236
 12243 4386 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.581_114, offset:
 12243      0620
 12244 438c 4183C108 		add	r9d, 8	# ivtmp.578,
 12245              	.LBE617:
 12246              	.LBB618:
 12247              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12248              		.loc 1 584 34 view .LVU4237
 12249 4390 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.568, vect__102.567, _4
 12250 4394 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.568, vect__102.567, _4
 12251              	.LBE618:
 12252              	.LBB619:
 12253              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12254              		.loc 1 582 34 view .LVU4238
 12255 4398 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.572, tmp270, shift
 12256 439c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.572, tmp271, shift
 12257 43a0 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12257      0640
 12258              	.LBE619:
 12259              	.LBB620:
 12260              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12261              		.loc 1 584 22 view .LVU4239
 12262 43a6 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.573, vect__57.568, vect__104.572
 12263              	.LBE620:
 12264              	.LBB621:
 12265              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12266              		.loc 1 582 34 view .LVU4240
 12267 43aa C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12267      06800000 
 12267      00
 12268              	.LBE621:
 12269              	.LBB622:
 12270              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12271              		.loc 1 584 22 view .LVU4241
 12272 43b3 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.573, vect__57.568, vect__104.572
 12272      C8
 12273              	.LBE622:
 12274              	.LBB623:
GAS LISTING /tmp/ccW4ZvF5.s 			page 332


 12275              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12276              		.loc 1 582 25 view .LVU4242
 12277 43b8 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12277      7C066055 
 12278 43c0 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12278      BC068000 
 12278      000055
 12279              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12280              		.loc 1 582 34 view .LVU4243
 12281 43cb C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.581_114, offset:
 12281      0660
 12282              	.LBE623:
 12283              	.LBB624:
 12284              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12285              		.loc 1 584 34 view .LVU4244
 12286 43d1 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.568, vect__102.567, _4
 12287              	.LBE624:
 12288              	.LBB625:
 12289              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12290              		.loc 1 582 34 view .LVU4245
 12291 43d5 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.572, tmp272, shift
 12292              	.LBE625:
 12293              	.LBB626:
 12294              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12295              		.loc 1 584 34 view .LVU4246
 12296 43d9 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.568, vect__102.567, _4
 12297              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12298              		.loc 1 584 22 view .LVU4247
 12299 43dd C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect
 12299      07
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12300              		.loc 1 583 32 is_stmt 1 view .LVU4248
 12301              	.LVL723:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12302              		.loc 1 583 25 view .LVU4249
 12303              	.LBE626:
 579:sieve_extend.c ****     {
 12304              		.loc 1 579 24 view .LVU4250
 579:sieve_extend.c ****     {
 12305              		.loc 1 579 12 view .LVU4251
 12306              	.LBB627:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12307              		.loc 1 581 25 view .LVU4252
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12308              		.loc 1 582 13 view .LVU4253
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12309              		.loc 1 581 32 view .LVU4254
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12310              		.loc 1 581 25 view .LVU4255
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12311              		.loc 1 582 13 view .LVU4256
GAS LISTING /tmp/ccW4ZvF5.s 			page 333


 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12312              		.loc 1 581 32 view .LVU4257
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12313              		.loc 1 581 25 view .LVU4258
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12314              		.loc 1 582 13 view .LVU4259
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12315              		.loc 1 581 32 view .LVU4260
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12316              		.loc 1 581 25 view .LVU4261
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12317              		.loc 1 582 13 view .LVU4262
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12318              		.loc 1 581 32 view .LVU4263
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12319              		.loc 1 581 25 view .LVU4264
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12320              		.loc 1 581 25 is_stmt 0 view .LVU4265
 12321              	.LBE627:
 12322              	.LBB628:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12323              		.loc 1 583 25 is_stmt 1 view .LVU4266
 584:sieve_extend.c ****     }
 12324              		.loc 1 584 13 view .LVU4267
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12325              		.loc 1 583 32 view .LVU4268
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12326              		.loc 1 583 25 view .LVU4269
 584:sieve_extend.c ****     }
 12327              		.loc 1 584 13 view .LVU4270
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12328              		.loc 1 583 32 view .LVU4271
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12329              		.loc 1 583 25 view .LVU4272
 584:sieve_extend.c ****     }
 12330              		.loc 1 584 13 view .LVU4273
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12331              		.loc 1 583 32 view .LVU4274
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12332              		.loc 1 583 25 view .LVU4275
 584:sieve_extend.c ****     }
 12333              		.loc 1 584 13 view .LVU4276
 12334              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12335              		.loc 1 584 22 is_stmt 0 view .LVU4277
 12336 43e2 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.573, vect__57.568, vect__104.572
 12336      F5
 12337              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12338              		.loc 1 584 34 view .LVU4278
 12339 43e7 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.568, vect__102.567, _4
 12340              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12341              		.loc 1 584 22 view .LVU4279
 12342 43eb C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], ve
 12342      0720
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccW4ZvF5.s 			page 334


 12343              		.loc 1 583 32 is_stmt 1 view .LVU4280
 12344              	.LVL724:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12345              		.loc 1 583 25 view .LVU4281
 12346              	.LBE628:
 579:sieve_extend.c ****     {
 12347              		.loc 1 579 24 view .LVU4282
 579:sieve_extend.c ****     {
 12348              		.loc 1 579 12 view .LVU4283
 12349              	.LBB629:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12350              		.loc 1 581 25 view .LVU4284
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12351              		.loc 1 582 13 view .LVU4285
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12352              		.loc 1 581 32 view .LVU4286
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12353              		.loc 1 581 25 view .LVU4287
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12354              		.loc 1 582 13 view .LVU4288
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12355              		.loc 1 581 32 view .LVU4289
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12356              		.loc 1 581 25 view .LVU4290
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12357              		.loc 1 582 13 view .LVU4291
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12358              		.loc 1 581 32 view .LVU4292
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12359              		.loc 1 581 25 view .LVU4293
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12360              		.loc 1 582 13 view .LVU4294
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12361              		.loc 1 581 32 view .LVU4295
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12362              		.loc 1 581 25 view .LVU4296
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12363              		.loc 1 581 25 is_stmt 0 view .LVU4297
 12364              	.LBE629:
 12365              	.LBB630:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12366              		.loc 1 583 25 is_stmt 1 view .LVU4298
 584:sieve_extend.c ****     }
 12367              		.loc 1 584 13 view .LVU4299
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12368              		.loc 1 583 32 view .LVU4300
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12369              		.loc 1 583 25 view .LVU4301
 584:sieve_extend.c ****     }
 12370              		.loc 1 584 13 view .LVU4302
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12371              		.loc 1 583 32 view .LVU4303
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12372              		.loc 1 583 25 view .LVU4304
 584:sieve_extend.c ****     }
 12373              		.loc 1 584 13 view .LVU4305
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccW4ZvF5.s 			page 335


 12374              		.loc 1 583 32 view .LVU4306
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12375              		.loc 1 583 25 view .LVU4307
 584:sieve_extend.c ****     }
 12376              		.loc 1 584 13 view .LVU4308
 12377              	.LBE630:
 12378              	.LBB631:
 12379              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12380              		.loc 1 582 25 is_stmt 0 view .LVU4309
 12381 43f1 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_
 12381      9C06A000 
 12381      000055
 12382              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12383              		.loc 1 582 34 view .LVU4310
 12384 43fc C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.572, tmp273, shift
 12385 4400 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.572, tmp274, shift
 12386 4404 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.581_114, offse
 12386      06A00000 
 12386      00
 12387              	.LBE631:
 12388              	.LBB632:
 12389              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12390              		.loc 1 584 22 view .LVU4311
 12391 440d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.573, vect__57.568, vect__104.572
 12392              	.LBE632:
 12393              	.LBB633:
 12394              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12395              		.loc 1 582 34 view .LVU4312
 12396 4411 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.581_114, offset
 12396      06E00000 
 12396      00
 12397              	.LBE633:
 12398              	.LBB634:
 12399              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12400              		.loc 1 584 22 view .LVU4313
 12401 441a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.573, vect__57.568, vect__104.572
 12401      D1
 12402              	.LBE634:
 12403              	.LBB635:
 12404              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12405              		.loc 1 582 25 view .LVU4314
 12406 441f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12406      9406C000 
 12406      000055
 12407 442a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_1
 12407      8406E000 
 12407      000055
 12408              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12409              		.loc 1 582 34 view .LVU4315
 12410 4435 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.581_114, offset
GAS LISTING /tmp/ccW4ZvF5.s 			page 336


 12410      06C00000 
 12410      00
 12411              	.LBE635:
 12412              	.LBB636:
 12413              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12414              		.loc 1 584 22 view .LVU4316
 12415 443e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], v
 12415      0740
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12416              		.loc 1 583 32 is_stmt 1 view .LVU4317
 12417              	.LVL725:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12418              		.loc 1 583 25 view .LVU4318
 12419              	.LBE636:
 579:sieve_extend.c ****     {
 12420              		.loc 1 579 24 view .LVU4319
 579:sieve_extend.c ****     {
 12421              		.loc 1 579 12 view .LVU4320
 12422              	.LBB637:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12423              		.loc 1 581 25 view .LVU4321
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12424              		.loc 1 582 13 view .LVU4322
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12425              		.loc 1 581 32 view .LVU4323
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12426              		.loc 1 581 25 view .LVU4324
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12427              		.loc 1 582 13 view .LVU4325
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12428              		.loc 1 581 32 view .LVU4326
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12429              		.loc 1 581 25 view .LVU4327
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12430              		.loc 1 582 13 view .LVU4328
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12431              		.loc 1 581 32 view .LVU4329
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12432              		.loc 1 581 25 view .LVU4330
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12433              		.loc 1 582 13 view .LVU4331
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12434              		.loc 1 581 32 view .LVU4332
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12435              		.loc 1 581 25 view .LVU4333
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12436              		.loc 1 581 25 is_stmt 0 view .LVU4334
 12437              	.LBE637:
 12438              	.LBB638:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12439              		.loc 1 583 25 is_stmt 1 view .LVU4335
 584:sieve_extend.c ****     }
 12440              		.loc 1 584 13 view .LVU4336
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12441              		.loc 1 583 32 view .LVU4337
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccW4ZvF5.s 			page 337


 12442              		.loc 1 583 25 view .LVU4338
 584:sieve_extend.c ****     }
 12443              		.loc 1 584 13 view .LVU4339
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12444              		.loc 1 583 32 view .LVU4340
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12445              		.loc 1 583 25 view .LVU4341
 584:sieve_extend.c ****     }
 12446              		.loc 1 584 13 view .LVU4342
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12447              		.loc 1 583 32 view .LVU4343
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12448              		.loc 1 583 25 view .LVU4344
 584:sieve_extend.c ****     }
 12449              		.loc 1 584 13 view .LVU4345
 12450              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12451              		.loc 1 584 34 is_stmt 0 view .LVU4346
 12452 4444 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.568, vect__102.567, _4
 12453              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12454              		.loc 1 584 22 view .LVU4347
 12455 4448 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], ve
 12455      0760
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12456              		.loc 1 583 32 is_stmt 1 view .LVU4348
 12457              	.LVL726:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12458              		.loc 1 583 25 view .LVU4349
 12459              	.LBE638:
 579:sieve_extend.c ****     {
 12460              		.loc 1 579 24 view .LVU4350
 579:sieve_extend.c ****     {
 12461              		.loc 1 579 12 view .LVU4351
 12462              	.LBB639:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12463              		.loc 1 581 25 view .LVU4352
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12464              		.loc 1 582 13 view .LVU4353
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12465              		.loc 1 581 32 view .LVU4354
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12466              		.loc 1 581 25 view .LVU4355
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12467              		.loc 1 582 13 view .LVU4356
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12468              		.loc 1 581 32 view .LVU4357
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12469              		.loc 1 581 25 view .LVU4358
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12470              		.loc 1 582 13 view .LVU4359
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12471              		.loc 1 581 32 view .LVU4360
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12472              		.loc 1 581 25 view .LVU4361
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12473              		.loc 1 582 13 view .LVU4362
GAS LISTING /tmp/ccW4ZvF5.s 			page 338


 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12474              		.loc 1 581 32 view .LVU4363
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12475              		.loc 1 581 25 view .LVU4364
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12476              		.loc 1 581 25 is_stmt 0 view .LVU4365
 12477              	.LBE639:
 12478              	.LBB640:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12479              		.loc 1 583 25 is_stmt 1 view .LVU4366
 584:sieve_extend.c ****     }
 12480              		.loc 1 584 13 view .LVU4367
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12481              		.loc 1 583 32 view .LVU4368
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12482              		.loc 1 583 25 view .LVU4369
 584:sieve_extend.c ****     }
 12483              		.loc 1 584 13 view .LVU4370
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12484              		.loc 1 583 32 view .LVU4371
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12485              		.loc 1 583 25 view .LVU4372
 584:sieve_extend.c ****     }
 12486              		.loc 1 584 13 view .LVU4373
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12487              		.loc 1 583 32 view .LVU4374
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12488              		.loc 1 583 25 view .LVU4375
 584:sieve_extend.c ****     }
 12489              		.loc 1 584 13 view .LVU4376
 12490              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12491              		.loc 1 584 22 is_stmt 0 view .LVU4377
 12492 444e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12492      07800000 
 12492      00
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12493              		.loc 1 583 32 is_stmt 1 view .LVU4378
 12494              	.LVL727:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12495              		.loc 1 583 25 view .LVU4379
 12496              	.LBE640:
 579:sieve_extend.c ****     {
 12497              		.loc 1 579 24 view .LVU4380
 579:sieve_extend.c ****     {
 12498              		.loc 1 579 12 view .LVU4381
 12499              	.LBB641:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12500              		.loc 1 581 25 view .LVU4382
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12501              		.loc 1 582 13 view .LVU4383
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12502              		.loc 1 581 32 view .LVU4384
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12503              		.loc 1 581 25 view .LVU4385
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12504              		.loc 1 582 13 view .LVU4386
GAS LISTING /tmp/ccW4ZvF5.s 			page 339


 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12505              		.loc 1 581 32 view .LVU4387
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12506              		.loc 1 581 25 view .LVU4388
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12507              		.loc 1 582 13 view .LVU4389
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12508              		.loc 1 581 32 view .LVU4390
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12509              		.loc 1 581 25 view .LVU4391
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12510              		.loc 1 582 13 view .LVU4392
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12511              		.loc 1 581 32 view .LVU4393
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12512              		.loc 1 581 25 view .LVU4394
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12513              		.loc 1 581 25 is_stmt 0 view .LVU4395
 12514              	.LBE641:
 12515              	.LBB642:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12516              		.loc 1 583 25 is_stmt 1 view .LVU4396
 584:sieve_extend.c ****     }
 12517              		.loc 1 584 13 view .LVU4397
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12518              		.loc 1 583 32 view .LVU4398
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12519              		.loc 1 583 25 view .LVU4399
 584:sieve_extend.c ****     }
 12520              		.loc 1 584 13 view .LVU4400
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12521              		.loc 1 583 32 view .LVU4401
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12522              		.loc 1 583 25 view .LVU4402
 584:sieve_extend.c ****     }
 12523              		.loc 1 584 13 view .LVU4403
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12524              		.loc 1 583 32 view .LVU4404
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12525              		.loc 1 583 25 view .LVU4405
 584:sieve_extend.c ****     }
 12526              		.loc 1 584 13 view .LVU4406
 12527              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12528              		.loc 1 584 34 is_stmt 0 view .LVU4407
 12529 4457 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.568, vect__102.567, _4
 12530              	.LBE642:
 12531              	.LBB643:
 12532              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12533              		.loc 1 582 34 view .LVU4408
 12534 445b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.572, tmp275, shift
 12535              	.LBE643:
 12536              	.LBB644:
 12537              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12538              		.loc 1 584 34 view .LVU4409
GAS LISTING /tmp/ccW4ZvF5.s 			page 340


 12539 445f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.568, vect__102.567, _4
 12540              	.LBE644:
 12541              	.LBB645:
 12542              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12543              		.loc 1 582 34 view .LVU4410
 12544 4463 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.572, tmp276, shift
 12545 4467 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.572, tmp277, shift
 12546              	.LBE645:
 12547              	.LBB646:
 12548              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12549              		.loc 1 584 22 view .LVU4411
 12550 446b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.573, vect__57.568, vect__104.572
 12550      FE
 12551 4470 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.573, vect__57.568, vect__104.572
 12552 4474 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12552      07A00000 
 12552      00
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12553              		.loc 1 583 32 is_stmt 1 view .LVU4412
 12554              	.LVL728:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12555              		.loc 1 583 25 view .LVU4413
 12556              	.LBE646:
 579:sieve_extend.c ****     {
 12557              		.loc 1 579 24 view .LVU4414
 579:sieve_extend.c ****     {
 12558              		.loc 1 579 12 view .LVU4415
 12559              	.LBB647:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12560              		.loc 1 581 25 view .LVU4416
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12561              		.loc 1 582 13 view .LVU4417
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12562              		.loc 1 581 32 view .LVU4418
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12563              		.loc 1 581 25 view .LVU4419
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12564              		.loc 1 582 13 view .LVU4420
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12565              		.loc 1 581 32 view .LVU4421
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12566              		.loc 1 581 25 view .LVU4422
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12567              		.loc 1 582 13 view .LVU4423
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12568              		.loc 1 581 32 view .LVU4424
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12569              		.loc 1 581 25 view .LVU4425
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12570              		.loc 1 582 13 view .LVU4426
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12571              		.loc 1 581 32 view .LVU4427
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12572              		.loc 1 581 25 view .LVU4428
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW4ZvF5.s 			page 341


 12573              		.loc 1 581 25 is_stmt 0 view .LVU4429
 12574              	.LBE647:
 12575              	.LBB648:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12576              		.loc 1 583 25 is_stmt 1 view .LVU4430
 584:sieve_extend.c ****     }
 12577              		.loc 1 584 13 view .LVU4431
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12578              		.loc 1 583 32 view .LVU4432
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12579              		.loc 1 583 25 view .LVU4433
 584:sieve_extend.c ****     }
 12580              		.loc 1 584 13 view .LVU4434
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12581              		.loc 1 583 32 view .LVU4435
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12582              		.loc 1 583 25 view .LVU4436
 584:sieve_extend.c ****     }
 12583              		.loc 1 584 13 view .LVU4437
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12584              		.loc 1 583 32 view .LVU4438
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12585              		.loc 1 583 25 view .LVU4439
 584:sieve_extend.c ****     }
 12586              		.loc 1 584 13 view .LVU4440
 12587              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12588              		.loc 1 584 22 is_stmt 0 view .LVU4441
 12589 447d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.573, vect__57.568, vect__104.572
 12589      DA
 12590 4482 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], v
 12590      07C00000 
 12590      00
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12591              		.loc 1 583 32 is_stmt 1 view .LVU4442
 12592              	.LVL729:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12593              		.loc 1 583 25 view .LVU4443
 12594              	.LBE648:
 579:sieve_extend.c ****     {
 12595              		.loc 1 579 24 view .LVU4444
 579:sieve_extend.c ****     {
 12596              		.loc 1 579 12 view .LVU4445
 12597              	.LBB649:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12598              		.loc 1 581 25 view .LVU4446
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12599              		.loc 1 582 13 view .LVU4447
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12600              		.loc 1 581 32 view .LVU4448
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12601              		.loc 1 581 25 view .LVU4449
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12602              		.loc 1 582 13 view .LVU4450
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12603              		.loc 1 581 32 view .LVU4451
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW4ZvF5.s 			page 342


 12604              		.loc 1 581 25 view .LVU4452
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12605              		.loc 1 582 13 view .LVU4453
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12606              		.loc 1 581 32 view .LVU4454
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12607              		.loc 1 581 25 view .LVU4455
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12608              		.loc 1 582 13 view .LVU4456
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12609              		.loc 1 581 32 view .LVU4457
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12610              		.loc 1 581 25 view .LVU4458
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12611              		.loc 1 581 25 is_stmt 0 view .LVU4459
 12612              	.LBE649:
 12613              	.LBB650:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12614              		.loc 1 583 25 is_stmt 1 view .LVU4460
 584:sieve_extend.c ****     }
 12615              		.loc 1 584 13 view .LVU4461
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12616              		.loc 1 583 32 view .LVU4462
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12617              		.loc 1 583 25 view .LVU4463
 584:sieve_extend.c ****     }
 12618              		.loc 1 584 13 view .LVU4464
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12619              		.loc 1 583 32 view .LVU4465
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12620              		.loc 1 583 25 view .LVU4466
 584:sieve_extend.c ****     }
 12621              		.loc 1 584 13 view .LVU4467
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12622              		.loc 1 583 32 view .LVU4468
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12623              		.loc 1 583 25 view .LVU4469
 584:sieve_extend.c ****     }
 12624              		.loc 1 584 13 view .LVU4470
 12625              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12626              		.loc 1 584 22 is_stmt 0 view .LVU4471
 12627 448b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], 
 12627      07E00000 
 12627      00
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12628              		.loc 1 583 32 is_stmt 1 view .LVU4472
 12629              	.LVL730:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12630              		.loc 1 583 25 view .LVU4473
 12631              	.LBE650:
 579:sieve_extend.c ****     {
 12632              		.loc 1 579 24 view .LVU4474
 579:sieve_extend.c ****     {
 12633              		.loc 1 579 12 view .LVU4475
 12634 4494 48050001 		add	rax, 256	# ivtmp.581,
 12634      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 343


 12635 449a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.578
 12636 449d 0F87C7FE 		ja	.L967	#,
 12636      FFFF
 12637              	.L1007:
 12638 44a3 4589C3   		mov	r11d, r8d	# _25, _25
 12639 44a6 428D0495 		lea	eax, 0[0+r10*4]	# i,
 12639      00000000 
 12640 44ae 4983C301 		add	r11, 1	# tmp140,
 12641 44b2 49C1E305 		sal	r11, 5	# _105,
 12642 44b6 4C01DF   		add	rdi, r11	# dst, _105
 12643 44b9 4C01DE   		add	rsi, r11	# src, _105
 12644 44bc C5F877   		vzeroupper
 12645              	.LVL731:
 12646              	.L968:
 586:sieve_extend.c ****     {
 12647              		.loc 1 586 12 view .LVU4476
 12648              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12649              		.loc 1 586 5 is_stmt 0 view .LVU4477
 12650 44bf 39C2     		cmp	edx, eax	# size, i
 12651 44c1 0F8E9400 		jle	.L1011	#,
 12651      0000
 12652              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12653              		.loc 1 588 35 view .LVU4478
 12654 44c7 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 12655 44cb 41B84000 		mov	r8d, 64	# tmp142,
 12655      0000
 12656              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12657              		.loc 1 588 23 view .LVU4479
 12658 44d1 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 12658      0E
 12659 44d6 4129C8   		sub	r8d, ecx	# _97, shift
 588:sieve_extend.c ****     }    
 12660              		.loc 1 588 9 is_stmt 1 view .LVU4480
 12661              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12662              		.loc 1 588 43 is_stmt 0 view .LVU4481
 12663 44d9 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 12663      DA
 12664              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12665              		.loc 1 588 32 view .LVU4482
 12666 44de 4D09D9   		or	r9, r11	# tmp146, tmp145
 12667 44e1 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 586:sieve_extend.c ****     {
 12668              		.loc 1 586 22 is_stmt 1 view .LVU4483
 12669              	.LVL732:
 586:sieve_extend.c ****     {
 12670              		.loc 1 586 12 view .LVU4484
 12671              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12672              		.loc 1 586 22 is_stmt 0 view .LVU4485
 12673 44e4 448D4801 		lea	r9d, 1[rax]	# i,
 12674              	.LVL733:
 12675              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
GAS LISTING /tmp/ccW4ZvF5.s 			page 344


 586:sieve_extend.c ****     {
 12676              		.loc 1 586 5 view .LVU4486
 12677 44e8 4439CA   		cmp	edx, r9d	# size, i
 12678 44eb 7E6D     		jle	.L1008	#,
 588:sieve_extend.c ****     }    
 12679              		.loc 1 588 9 is_stmt 1 view .LVU4487
 12680              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12681              		.loc 1 588 35 is_stmt 0 view .LVU4488
 12682 44ed 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 12683              	.LVL734:
 12684              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12685              		.loc 1 588 23 view .LVU4489
 12686 44f1 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 12686      D2
 12687              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12688              		.loc 1 588 43 view .LVU4490
 12689 44f6 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 12689      D9
 12690              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12691              		.loc 1 588 32 view .LVU4491
 12692 44fb 4D09DA   		or	r10, r11	# tmp150, tmp149
 12693 44fe 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 586:sieve_extend.c ****     {
 12694              		.loc 1 586 22 is_stmt 1 view .LVU4492
 12695              	.LVL735:
 586:sieve_extend.c ****     {
 12696              		.loc 1 586 12 view .LVU4493
 12697              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12698              		.loc 1 586 22 is_stmt 0 view .LVU4494
 12699 4502 448D5002 		lea	r10d, 2[rax]	# i,
 12700              	.LVL736:
 12701              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12702              		.loc 1 586 5 view .LVU4495
 12703 4506 4439D2   		cmp	edx, r10d	# size, i
 12704 4509 7E4F     		jle	.L1008	#,
 588:sieve_extend.c ****     }    
 12705              		.loc 1 588 9 is_stmt 1 view .LVU4496
 12706              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12707              		.loc 1 588 35 is_stmt 0 view .LVU4497
 12708 450b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 12709              	.LVL737:
 12710              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12711              		.loc 1 588 23 view .LVU4498
 12712 450f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 12712      C9
 12713              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12714              		.loc 1 588 43 view .LVU4499
 12715 4514 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
GAS LISTING /tmp/ccW4ZvF5.s 			page 345


 12715      DA
 12716              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12717              		.loc 1 588 32 view .LVU4500
 12718 4519 4D09D9   		or	r9, r11	# tmp154, tmp153
 12719 451c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 586:sieve_extend.c ****     {
 12720              		.loc 1 586 22 is_stmt 1 view .LVU4501
 12721              	.LVL738:
 586:sieve_extend.c ****     {
 12722              		.loc 1 586 12 view .LVU4502
 12723              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12724              		.loc 1 586 22 is_stmt 0 view .LVU4503
 12725 4520 448D4803 		lea	r9d, 3[rax]	# i,
 12726              	.LVL739:
 12727              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12728              		.loc 1 586 5 view .LVU4504
 12729 4524 4439CA   		cmp	edx, r9d	# size, i
 12730 4527 7E31     		jle	.L1008	#,
 588:sieve_extend.c ****     }    
 12731              		.loc 1 588 9 is_stmt 1 view .LVU4505
 12732              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12733              		.loc 1 588 35 is_stmt 0 view .LVU4506
 12734 4529 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 12735              	.LVL740:
 12736              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12737              		.loc 1 586 22 view .LVU4507
 12738 452d 83C004   		add	eax, 4	# i,
 12739              	.LVL741:
 12740              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12741              		.loc 1 588 23 view .LVU4508
 12742 4530 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 12742      D2
 12743              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12744              		.loc 1 588 43 view .LVU4509
 12745 4535 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 12745      D9
 12746              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12747              		.loc 1 588 32 view .LVU4510
 12748 453a 4D09DA   		or	r10, r11	# tmp158, tmp157
 12749              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12750              		.loc 1 586 5 view .LVU4511
 12751 453d 39C2     		cmp	edx, eax	# size, i
 12752              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12753              		.loc 1 588 32 view .LVU4512
 12754 453f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 586:sieve_extend.c ****     {
 12755              		.loc 1 586 22 is_stmt 1 view .LVU4513
GAS LISTING /tmp/ccW4ZvF5.s 			page 346


 12756              	.LVL742:
 586:sieve_extend.c ****     {
 12757              		.loc 1 586 12 view .LVU4514
 12758              	# sieve_extend.c:586:     for (; i < size; ++i,++src,++dst)
 586:sieve_extend.c ****     {
 12759              		.loc 1 586 5 is_stmt 0 view .LVU4515
 12760 4543 7E15     		jle	.L1008	#,
 588:sieve_extend.c ****     }    
 12761              		.loc 1 588 9 is_stmt 1 discriminator 2 view .LVU4516
 12762              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12763              		.loc 1 588 43 is_stmt 0 discriminator 2 view .LVU4517
 12764 4545 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 12765              	.LVL743:
 12766              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12767              		.loc 1 588 23 discriminator 2 view .LVU4518
 12768 4549 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 12768      C9
 12769              	.LVL744:
 12770              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12771              		.loc 1 588 43 discriminator 2 view .LVU4519
 12772 454e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 12772      F2
 12773              	.LVL745:
 12774              	# sieve_extend.c:588:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 588:sieve_extend.c ****     }    
 12775              		.loc 1 588 32 discriminator 2 view .LVU4520
 12776 4553 4809F1   		or	rcx, rsi	# tmp163, tmp160
 12777 4556 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 586:sieve_extend.c ****     {
 12778              		.loc 1 586 22 is_stmt 1 discriminator 2 view .LVU4521
 12779              	.LVL746:
 586:sieve_extend.c ****     {
 12780              		.loc 1 586 12 discriminator 2 view .LVU4522
 12781              	.L1008:
 12782              	# sieve_extend.c:590: }
 590:sieve_extend.c **** 
 12783              		.loc 1 590 1 is_stmt 0 view .LVU4523
 12784 455a C3       		ret	
 12785              	.LVL747:
 12786              	.L1011:
 590:sieve_extend.c **** 
 12787              		.loc 1 590 1 view .LVU4524
 12788 455b C3       		ret	
 12789              	.LVL748:
 12790              	.L1010:
 12791              	.LBB651:
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12792              		.loc 1 581 25 is_stmt 1 view .LVU4525
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12793              		.loc 1 582 13 view .LVU4526
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12794              		.loc 1 581 32 view .LVU4527
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12795              		.loc 1 581 25 view .LVU4528
GAS LISTING /tmp/ccW4ZvF5.s 			page 347


 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12796              		.loc 1 582 13 view .LVU4529
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12797              		.loc 1 581 32 view .LVU4530
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12798              		.loc 1 581 25 view .LVU4531
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12799              		.loc 1 582 13 view .LVU4532
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12800              		.loc 1 581 32 view .LVU4533
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12801              		.loc 1 581 25 view .LVU4534
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12802              		.loc 1 582 13 view .LVU4535
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12803              		.loc 1 581 32 view .LVU4536
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12804              		.loc 1 581 25 view .LVU4537
 581:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12805              		.loc 1 581 25 is_stmt 0 view .LVU4538
 12806              	.LBE651:
 12807              	.LBB652:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12808              		.loc 1 583 25 is_stmt 1 view .LVU4539
 584:sieve_extend.c ****     }
 12809              		.loc 1 584 13 view .LVU4540
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12810              		.loc 1 583 32 view .LVU4541
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12811              		.loc 1 583 25 view .LVU4542
 584:sieve_extend.c ****     }
 12812              		.loc 1 584 13 view .LVU4543
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12813              		.loc 1 583 32 view .LVU4544
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12814              		.loc 1 583 25 view .LVU4545
 584:sieve_extend.c ****     }
 12815              		.loc 1 584 13 view .LVU4546
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12816              		.loc 1 583 32 view .LVU4547
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12817              		.loc 1 583 25 view .LVU4548
 584:sieve_extend.c ****     }
 12818              		.loc 1 584 13 view .LVU4549
 12819              	.LBE652:
 12820              	.LBB653:
 12821              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12822              		.loc 1 582 25 is_stmt 0 view .LVU4550
 12823 455c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.567, MEM[base: src_35(D), index: ivtmp.581_114, o
 12823      7E2055
 12824 4563 41B90200 		mov	r9d, 2	# ivtmp.578,
 12824      0000
 12825              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12826              		.loc 1 582 34 view .LVU4551
 12827 4569 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.581_114, offset: 0B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 348


 12827      20
 12828 456e B8400000 		mov	eax, 64	# ivtmp.581,
 12828      00
 12829              	.LBE653:
 12830              	.LBB654:
 12831              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12832              		.loc 1 584 34 view .LVU4552
 12833 4573 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.568, vect__102.567, _4
 12834              	.LBE654:
 12835              	.LBB655:
 12836              	# sieve_extend.c:582:             *(dst+j) = (*(src+j))<<shift;
 582:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12837              		.loc 1 582 34 view .LVU4553
 12838 4577 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.572, tmp278, shift
 12839              	.LBE655:
 12840              	.LBB656:
 12841              	# sieve_extend.c:584:             *(dst+j) |= (*(src+1)>>(64-shift));
 584:sieve_extend.c ****     }
 12842              		.loc 1 584 22 view .LVU4554
 12843 457b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.573, vect__57.568, vect__104.572
 12843      DA
 12844 4580 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.581_114, offset: 0B], vect_
 12844      20
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12845              		.loc 1 583 32 is_stmt 1 view .LVU4555
 12846              	.LVL749:
 583:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12847              		.loc 1 583 25 view .LVU4556
 12848              	.LBE656:
 579:sieve_extend.c ****     {
 12849              		.loc 1 579 24 view .LVU4557
 579:sieve_extend.c ****     {
 12850              		.loc 1 579 12 view .LVU4558
 12851 4585 E9F6FCFF 		jmp	.L999	#
 12851      FF
 12852              	.LVL750:
 12853              	.L1009:
 12854              	# sieve_extend.c:577:     int i = 0;
 577:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 12855              		.loc 1 577 9 is_stmt 0 view .LVU4559
 12856 458a 31C0     		xor	eax, eax	# i
 12857 458c E92EFFFF 		jmp	.L968	#
 12857      FF
 12858              		.cfi_endproc
 12859              	.LFE70:
 12861              		.section	.rodata.str1.8,"aMS",@progbits,1
 12862              		.align 8
 12863              	.LC9:
 12864 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 12864      6C743A20 
 12864      53696576 
 12864      6573697A 
 12864      6520256A 
 12865 0055 000000   		.align 8
 12866              	.LC10:
 12867 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
GAS LISTING /tmp/ccW4ZvF5.s 			page 349


 12867      616C6964 
 12867      20726573 
 12867      756C742E 
 12867      20536965 
 12868              		.section	.rodata.str1.1
 12869              	.LC11:
 12870 0023 44656570 		.string	"DeepAnalyzing"
 12870      416E616C 
 12870      797A696E 
 12870      6700
 12871              		.section	.rodata.str1.8
 12872 00bb 00000000 		.align 8
 12872      00
 12873              	.LC12:
 12874 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 12874      65722025 
 12874      6A752028 
 12874      256A7529 
 12874      20776173 
 12875              		.align 8
 12876              	.LC13:
 12877 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 12877      65722025 
 12877      6A752028 
 12877      256A7529 
 12877      20776173 
 12878              		.text
 12879 4591 66662E0F 		.p2align 4
 12879      1F840000 
 12879      0000000F 
 12879      1F4000
 12880              		.globl	validatePrimeCount
 12882              	validatePrimeCount:
 12883              	.LVL751:
 12884              	.LFB84:
1016:sieve_extend.c **** 
 12885              		.loc 1 1016 72 is_stmt 1 view -0
 12886              		.cfi_startproc
1016:sieve_extend.c **** 
 12887              		.loc 1 1016 72 is_stmt 0 view .LVU4561
 12888 45a0 F30F1EFA 		endbr64	
1018:sieve_extend.c ****     counter_t valid_primes = 0;
 12889              		.loc 1 1018 5 is_stmt 1 view .LVU4562
 12890              	# sieve_extend.c:1016: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
1016:sieve_extend.c **** 
 12891              		.loc 1 1016 72 is_stmt 0 view .LVU4563
 12892 45a4 4157     		push	r15	#
 12893              		.cfi_def_cfa_offset 16
 12894              		.cfi_offset 15, -16
 12895 45a6 4156     		push	r14	#
 12896              		.cfi_def_cfa_offset 24
 12897              		.cfi_offset 14, -24
 12898 45a8 4155     		push	r13	#
 12899              		.cfi_def_cfa_offset 32
 12900              		.cfi_offset 13, -32
 12901 45aa 4154     		push	r12	#
 12902              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/ccW4ZvF5.s 			page 350


 12903              		.cfi_offset 12, -40
 12904 45ac 55       		push	rbp	#
 12905              		.cfi_def_cfa_offset 48
 12906              		.cfi_offset 6, -48
 12907 45ad 4889FD   		mov	rbp, rdi	# sieve, tmp307
 12908 45b0 53       		push	rbx	#
 12909              		.cfi_def_cfa_offset 56
 12910              		.cfi_offset 3, -56
 12911 45b1 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 12912 45b3 488D6424 		lea	rsp, -56[rsp]	#,
 12912      C8
 12913              		.cfi_def_cfa_offset 112
 12914              	# sieve_extend.c:1018:     counter_t primecount = count_primes(sieve);
1018:sieve_extend.c ****     counter_t valid_primes = 0;
 12915              		.loc 1 1018 28 view .LVU4564
 12916 45b8 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 12917 45bb 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 12918              	.LVL752:
 12919              	.LBB678:
 12920              	.LBI678:
 987:sieve_extend.c ****     counter_t primeCount = 1;
 12921              		.loc 1 987 18 is_stmt 1 view .LVU4565
 12922              	.LBB679:
 12923              	.LBB680:
 989:sieve_extend.c ****     return primeCount;
 12924              		.loc 1 989 30 view .LVU4566
 12925 45bf 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 12926              	# sieve_extend.c:989:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 989:sieve_extend.c ****     return primeCount;
 12927              		.loc 1 989 5 is_stmt 0 view .LVU4567
 12928 45c3 4883FF01 		cmp	rdi, 1	# _25,
 12929 45c7 0F860B05 		jbe	.L1013	#,
 12929      0000
 12930              	# sieve_extend.c:989:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 989:sieve_extend.c ****     return primeCount;
 12931              		.loc 1 989 20 view .LVU4568
 12932 45cd B8010000 		mov	eax, 1	# factor,
 12932      00
 12933              	.LBE680:
 12934              	# sieve_extend.c:988:     counter_t primeCount = 1;
 988:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 12935              		.loc 1 988 15 view .LVU4569
 12936 45d2 41B80100 		mov	r8d, 1	# primeCount,
 12936      0000
 12937              	.LVL753:
 12938 45d8 0F1F8400 		.p2align 4
 12938      00000000 
 12939              		.p2align 3
 12940              	.L1016:
 12941              	.LBB683:
 989:sieve_extend.c ****     return primeCount;
 12942              		.loc 1 989 104 is_stmt 1 view .LVU4570
 12943              	# sieve_extend.c:989:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 989:sieve_extend.c ****     return primeCount;
 12944              		.loc 1 989 114 is_stmt 0 view .LVU4571
 12945 45e0 4983C001 		add	r8, 1	# primeCount,
 12946              	.LVL754:
GAS LISTING /tmp/ccW4ZvF5.s 			page 351


 989:sieve_extend.c ****     return primeCount;
 12947              		.loc 1 989 52 is_stmt 1 view .LVU4572
 12948              	# sieve_extend.c:989:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 989:sieve_extend.c ****     return primeCount;
 12949              		.loc 1 989 61 is_stmt 0 view .LVU4573
 12950 45e4 4883C001 		add	rax, 1	# factor,
 12951              	.LVL755:
 12952              	.L1160:
 12953              	.LBB681:
 12954              	.LBI681:
 128:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12955              		.loc 1 128 25 is_stmt 1 view .LVU4574
 12956              	.LBB682:
 129:sieve_extend.c ****     return index;
 12957              		.loc 1 129 5 view .LVU4575
 129:sieve_extend.c ****     return index;
 12958              		.loc 1 129 11 view .LVU4576
 12959              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12960              		.loc 1 129 21 is_stmt 0 view .LVU4577
 12961 45e8 4889C1   		mov	rcx, rax	# tmp162, factor
 12962 45eb 48C1E906 		shr	rcx, 6	# tmp162,
 12963              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12964              		.loc 1 129 12 view .LVU4578
 12965 45ef 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 12966              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12967              		.loc 1 129 11 view .LVU4579
 12968 45f3 490FA3C3 		bt	r11, rax	# *_106, factor
 12969 45f7 0F83A300 		jnc	.L1014	#,
 12969      0000
 129:sieve_extend.c ****     return index;
 12970              		.loc 1 129 58 is_stmt 1 view .LVU4580
 12971              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12972              		.loc 1 129 63 is_stmt 0 view .LVU4581
 12973 45fd 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 12974              	.LVL756:
 12975              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12976              		.loc 1 129 21 view .LVU4582
 12977 4601 4D89EE   		mov	r14, r13	# tmp167, factor
 12978              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12979              		.loc 1 129 63 view .LVU4583
 12980 4604 4C89E8   		mov	rax, r13	# factor, tmp235
 129:sieve_extend.c ****     return index;
 12981              		.loc 1 129 11 is_stmt 1 view .LVU4584
 12982              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12983              		.loc 1 129 21 is_stmt 0 view .LVU4585
 12984 4607 49C1EE06 		shr	r14, 6	# tmp167,
 12985              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12986              		.loc 1 129 12 view .LVU4586
 12987 460b 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
GAS LISTING /tmp/ccW4ZvF5.s 			page 352


 12988              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12989              		.loc 1 129 11 view .LVU4587
 12990 460f 4D0FA3EF 		bt	r15, r13	# *_35, factor
 12991 4613 0F838700 		jnc	.L1014	#,
 12991      0000
 129:sieve_extend.c ****     return index;
 12992              		.loc 1 129 58 is_stmt 1 view .LVU4588
 12993              	.LVL757:
 12994              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 12995              		.loc 1 129 63 is_stmt 0 view .LVU4589
 12996 4619 4883C001 		add	rax, 1	# factor,
 12997              	.LVL758:
 129:sieve_extend.c ****     return index;
 12998              		.loc 1 129 11 is_stmt 1 view .LVU4590
 12999              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13000              		.loc 1 129 21 is_stmt 0 view .LVU4591
 13001 461d 4989C4   		mov	r12, rax	# tmp279, factor
 13002 4620 49C1EC06 		shr	r12, 6	# tmp279,
 13003              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13004              		.loc 1 129 12 view .LVU4592
 13005 4624 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 13006              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13007              		.loc 1 129 11 view .LVU4593
 13008 4628 480FA3C6 		bt	rsi, rax	# *_35, factor
 13009 462c 7372     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13010              		.loc 1 129 58 is_stmt 1 view .LVU4594
 13011              	.LVL759:
 13012              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13013              		.loc 1 129 63 is_stmt 0 view .LVU4595
 13014 462e 498D4502 		lea	rax, 2[r13]	# factor,
 13015              	.LVL760:
 129:sieve_extend.c ****     return index;
 13016              		.loc 1 129 11 is_stmt 1 view .LVU4596
 13017              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13018              		.loc 1 129 21 is_stmt 0 view .LVU4597
 13019 4632 4989C2   		mov	r10, rax	# tmp283, factor
 13020 4635 49C1EA06 		shr	r10, 6	# tmp283,
 13021              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13022              		.loc 1 129 12 view .LVU4598
 13023 4639 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 13024              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13025              		.loc 1 129 11 view .LVU4599
 13026 463d 480FA3C1 		bt	rcx, rax	# *_35, factor
 13027 4641 735D     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13028              		.loc 1 129 58 is_stmt 1 view .LVU4600
 13029              	.LVL761:
GAS LISTING /tmp/ccW4ZvF5.s 			page 353


 13030              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13031              		.loc 1 129 63 is_stmt 0 view .LVU4601
 13032 4643 498D4503 		lea	rax, 3[r13]	# factor,
 13033              	.LVL762:
 129:sieve_extend.c ****     return index;
 13034              		.loc 1 129 11 is_stmt 1 view .LVU4602
 13035              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13036              		.loc 1 129 21 is_stmt 0 view .LVU4603
 13037 4647 4989C3   		mov	r11, rax	# tmp287, factor
 13038 464a 49C1EB06 		shr	r11, 6	# tmp287,
 13039              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13040              		.loc 1 129 12 view .LVU4604
 13041 464e 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 13042              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13043              		.loc 1 129 11 view .LVU4605
 13044 4652 490FA3C6 		bt	r14, rax	# *_35, factor
 13045 4656 7348     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13046              		.loc 1 129 58 is_stmt 1 view .LVU4606
 13047              	.LVL763:
 13048              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13049              		.loc 1 129 63 is_stmt 0 view .LVU4607
 13050 4658 498D4504 		lea	rax, 4[r13]	# factor,
 13051              	.LVL764:
 129:sieve_extend.c ****     return index;
 13052              		.loc 1 129 11 is_stmt 1 view .LVU4608
 13053              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13054              		.loc 1 129 21 is_stmt 0 view .LVU4609
 13055 465c 4989C7   		mov	r15, rax	# tmp291, factor
 13056 465f 49C1EF06 		shr	r15, 6	# tmp291,
 13057              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13058              		.loc 1 129 12 view .LVU4610
 13059 4663 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 13060              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13061              		.loc 1 129 11 view .LVU4611
 13062 4667 490FA3C4 		bt	r12, rax	# *_35, factor
 13063 466b 7333     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13064              		.loc 1 129 58 is_stmt 1 view .LVU4612
 13065              	.LVL765:
 13066              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13067              		.loc 1 129 63 is_stmt 0 view .LVU4613
 13068 466d 498D4505 		lea	rax, 5[r13]	# factor,
 13069              	.LVL766:
 129:sieve_extend.c ****     return index;
 13070              		.loc 1 129 11 is_stmt 1 view .LVU4614
 13071              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW4ZvF5.s 			page 354


 13072              		.loc 1 129 21 is_stmt 0 view .LVU4615
 13073 4671 4889C6   		mov	rsi, rax	# tmp295, factor
 13074 4674 48C1EE06 		shr	rsi, 6	# tmp295,
 13075              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13076              		.loc 1 129 12 view .LVU4616
 13077 4678 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 13078              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13079              		.loc 1 129 11 view .LVU4617
 13080 467c 490FA3C2 		bt	r10, rax	# *_35, factor
 13081 4680 731E     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13082              		.loc 1 129 58 is_stmt 1 view .LVU4618
 13083              	.LVL767:
 13084              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13085              		.loc 1 129 63 is_stmt 0 view .LVU4619
 13086 4682 498D4506 		lea	rax, 6[r13]	# factor,
 13087              	.LVL768:
 129:sieve_extend.c ****     return index;
 13088              		.loc 1 129 11 is_stmt 1 view .LVU4620
 13089              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13090              		.loc 1 129 21 is_stmt 0 view .LVU4621
 13091 4686 4889C1   		mov	rcx, rax	# tmp299, factor
 13092 4689 48C1E906 		shr	rcx, 6	# tmp299,
 13093              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13094              		.loc 1 129 12 view .LVU4622
 13095 468d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 13096              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13097              		.loc 1 129 11 view .LVU4623
 13098 4691 490FA3C3 		bt	r11, rax	# *_35, factor
 13099 4695 7309     		jnc	.L1014	#,
 129:sieve_extend.c ****     return index;
 13100              		.loc 1 129 58 is_stmt 1 view .LVU4624
 13101              	.LVL769:
 13102              	# sieve_extend.c:129:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 129:sieve_extend.c ****     return index;
 13103              		.loc 1 129 63 is_stmt 0 view .LVU4625
 13104 4697 498D4507 		lea	rax, 7[r13]	# factor,
 13105              	.LVL770:
 129:sieve_extend.c ****     return index;
 13106              		.loc 1 129 11 is_stmt 1 view .LVU4626
 13107 469b E948FFFF 		jmp	.L1160	#
 13107      FF
 13108              		.p2align 4,,7
 13109              		.p2align 3
 13110              	.L1014:
 13111              	.LVL771:
 129:sieve_extend.c ****     return index;
 13112              		.loc 1 129 11 is_stmt 0 view .LVU4627
 13113              	.LBE682:
 13114              	.LBE681:
 989:sieve_extend.c ****     return primeCount;
GAS LISTING /tmp/ccW4ZvF5.s 			page 355


 13115              		.loc 1 989 30 is_stmt 1 view .LVU4628
 13116              	# sieve_extend.c:989:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 989:sieve_extend.c ****     return primeCount;
 13117              		.loc 1 989 5 is_stmt 0 view .LVU4629
 13118 46a0 4839C7   		cmp	rdi, rax	# _25, factor
 13119 46a3 0F8737FF 		ja	.L1016	#,
 13119      FFFF
 989:sieve_extend.c ****     return primeCount;
 13120              		.loc 1 989 5 view .LVU4630
 13121              	.LBE683:
 990:sieve_extend.c **** }
 13122              		.loc 1 990 5 is_stmt 1 view .LVU4631
 13123              	.LVL772:
 990:sieve_extend.c **** }
 13124              		.loc 1 990 5 is_stmt 0 view .LVU4632
 13125              	.LBE679:
 13126              	.LBE678:
1019:sieve_extend.c ****     switch(sieve->size) {
 13127              		.loc 1 1019 5 is_stmt 1 view .LVU4633
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13128              		.loc 1 1020 5 view .LVU4634
 13129 46a9 83FB03   		cmp	ebx, 3	# option_verboselevel,
 13130 46ac 0F9FC2   		setg	dl	#, tmp172
 13131 46af 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13131      860100
 13132 46b6 0F843406 		je	.L1017	#,
 13132      0000
 13133 46bc 0F86D402 		jbe	.L1161	#,
 13133      0000
 13134 46c2 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13134      E1F505
 13135 46c9 0F84E005 		je	.L1025	#,
 13135      0000
 13136 46cf 90       		.p2align 4,,4
 13137 46d0 0F863A03 		jbe	.L1162	#,
 13137      0000
 13138 46d6 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13138      CA9A3B
 13139 46dd 0F85F105 		jne	.L1023	#,
 13139      0000
 13140 46e3 4981F82E 		cmp	r8, 50847534	# primeCount,
 13140      DF0703
 13141              	# sieve_extend.c:1029:         case 1000000000:    valid_primes = 50847534; break;
1029:sieve_extend.c ****         default:            valid_primes= 0;
 13142              		.loc 1 1029 42 is_stmt 0 view .LVU4635
 13143 46ea B92EDF07 		mov	ecx, 50847534	# valid_primes,
 13143      03
 13144 46ef 410F94C5 		sete	r13b	#, tmp189
 13145 46f3 4421EA   		and	edx, r13d	# _253, tmp189
 13146 46f6 4981F82E 		cmp	r8, 50847534	# primeCount,
 13146      DF0703
 13147 46fd 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 13148 4701 410F95C4 		setne	r12b	#, _135
1029:sieve_extend.c ****         default:            valid_primes= 0;
 13149              		.loc 1 1029 29 is_stmt 1 view .LVU4636
 13150              	.LVL773:
1029:sieve_extend.c ****         default:            valid_primes= 0;
GAS LISTING /tmp/ccW4ZvF5.s 			page 356


 13151              		.loc 1 1029 54 view .LVU4637
 13152 4705 66662E0F 		.p2align 4
 13152      1F840000 
 13152      000000
 13153              		.p2align 3
 13154              	.L1030:
1033:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13155              		.loc 1 1033 5 view .LVU4638
1034:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13156              		.loc 1 1034 5 view .LVU4639
 13157              	# sieve_extend.c:1034:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1034:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13158              		.loc 1 1034 8 is_stmt 0 view .LVU4640
 13159 4710 84D2     		test	dl, dl	# _253
 13160 4712 0F841704 		je	.L1031	#,
 13160      0000
1034:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13161              		.loc 1 1034 45 is_stmt 1 discriminator 1 view .LVU4641
 13162              	.LVL774:
 13163              	.LBB685:
 13164              	.LBI685:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13165              		.loc 3 105 1 discriminator 1 view .LVU4642
 13166              	.LBB686:
 13167              		.loc 3 107 3 discriminator 1 view .LVU4643
 13168              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13169              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4644
 13170 4718 4C89CA   		mov	rdx, r9	#, pretmp_201
 13171 471b 488D3500 		lea	rsi, .LC9[rip]	#,
 13171      000000
 13172 4722 BF010000 		mov	edi, 1	#,
 13172      00
 13173 4727 31C0     		xor	eax, eax	#
 13174 4729 E8000000 		call	__printf_chk@PLT	#
 13174      00
 13175              	.LVL775:
 13176              		.loc 3 107 10 discriminator 1 view .LVU4645
 13177              	.LBE686:
 13178              	.LBE685:
1035:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13179              		.loc 1 1035 5 is_stmt 1 discriminator 1 view .LVU4646
 13180              	.L1032:
1039:sieve_extend.c ****     return (valid);
 13181              		.loc 1 1039 5 view .LVU4647
 13182              	# sieve_extend.c:1039:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
1039:sieve_extend.c ****     return (valid);
 13183              		.loc 1 1039 8 is_stmt 0 view .LVU4648
 13184 472e 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13185 4731 0F8E4C02 		jle	.L1012	#,
 13185      0000
 13186 4737 4584E4   		test	r12b, r12b	# _135
 13187 473a 0F844302 		je	.L1012	#,
 13187      0000
 13188              	.L1034:
1039:sieve_extend.c ****     return (valid);
 13189              		.loc 1 1039 45 is_stmt 1 discriminator 1 view .LVU4649
 13190              	.LBB687:
GAS LISTING /tmp/ccW4ZvF5.s 			page 357


 13191              	.LBI687:
 993:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13192              		.loc 1 993 13 discriminator 1 view .LVU4650
 13193              	.LVL776:
 13194              	.LBB688:
 994:sieve_extend.c ****     counter_t warn_prime = 0;
 13195              		.loc 1 994 5 discriminator 1 view .LVU4651
 13196              	.LBB689:
 13197              	.LBI689:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13198              		.loc 3 105 1 discriminator 1 view .LVU4652
 13199              	.LBB690:
 13200              		.loc 3 107 3 discriminator 1 view .LVU4653
 13201              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13202              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4654
 13203 4740 488D3D00 		lea	rdi, .LC11[rip]	#,
 13203      000000
 13204 4747 E8000000 		call	puts@PLT	#
 13204      00
 13205              	.LVL777:
 13206              		.loc 3 107 10 discriminator 1 view .LVU4655
 13207              	.LBE690:
 13208              	.LBE689:
 995:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13209              		.loc 1 995 5 is_stmt 1 discriminator 1 view .LVU4656
 996:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13210              		.loc 1 996 5 discriminator 1 view .LVU4657
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13211              		.loc 1 997 5 discriminator 1 view .LVU4658
 13212              	.LBB691:
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13213              		.loc 1 997 10 discriminator 1 view .LVU4659
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13214              		.loc 1 997 31 discriminator 1 view .LVU4660
 13215              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13216              		.loc 1 997 44 is_stmt 0 discriminator 1 view .LVU4661
 13217 474c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13218              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13219              		.loc 1 997 5 discriminator 1 view .LVU4662
 13220 4750 4883FF01 		cmp	rdi, 1	# _137,
 13221 4754 0F862902 		jbe	.L1012	#,
 13221      0000
 13222              	.LBB692:
 13223              	.LBB693:
 13224              	.LBB694:
 13225              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13226              		.loc 3 107 10 view .LVU4663
 13227 475a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 13227      24
 13228              	.LBE694:
 13229              	.LBE693:
 13230              	.LBE692:
 13231              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13232              		.loc 1 997 5 view .LVU4664
GAS LISTING /tmp/ccW4ZvF5.s 			page 358


 13233 475f 41BE0200 		mov	r14d, 2	# ivtmp.614,
 13233      0000
 13234 4765 41BC0300 		mov	r12d, 3	# ivtmp.612,
 13234      0000
 13235              	.LBE691:
 13236              	# sieve_extend.c:995:     counter_t warn_prime = 0;
 995:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13237              		.loc 1 995 15 view .LVU4665
 13238 476b 4531C0   		xor	r8d, r8d	# warn_prime
 13239              	# sieve_extend.c:996:     counter_t warn_nonprime = 0;
 996:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13240              		.loc 1 996 15 view .LVU4666
 13241 476e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 13241      18000000 
 13241      00
 13242              	.LBB713:
 13243              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13244              		.loc 1 997 20 view .LVU4667
 13245 4777 41BF0100 		mov	r15d, 1	# prime,
 13245      0000
 13246              	.LBB701:
 13247              	.LBB698:
 13248              	.LBB695:
 13249              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13250              		.loc 3 107 10 view .LVU4668
 13251 477d 4989ED   		mov	r13, rbp	# sieve, sieve
 13252              	.LVL778:
 13253              		.p2align 4
 13254              		.p2align 3
 13255              	.L1043:
 13256              		.loc 3 107 10 view .LVU4669
 13257              	.LBE695:
 13258              	.LBE698:
 13259              	.LBE701:
 998:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13260              		.loc 1 998 9 is_stmt 1 view .LVU4670
 13261              	# sieve_extend.c:998:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 998:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13262              		.loc 1 998 29 is_stmt 0 view .LVU4671
 13263 4780 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 13264              	# sieve_extend.c:998:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 998:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13265              		.loc 1 998 30 view .LVU4672
 13266 4784 4C89FB   		mov	rbx, r15	# tmp198, prime
 13267 4787 48C1EB06 		shr	rbx, 6	# tmp198,
 13268              	# sieve_extend.c:998:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 998:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13269              		.loc 1 998 71 view .LVU4673
 13270 478b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 13270      00
 13271 4790 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 13271      C9
 13272              	# sieve_extend.c:998:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 998:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13273              		.loc 1 998 12 view .LVU4674
 13274 4795 83E101   		and	ecx, 1	# c,
GAS LISTING /tmp/ccW4ZvF5.s 			page 359


 13275 4798 0F84BA02 		je	.L1035	#,
 13275      0000
 13276              	.LVL779:
 13277              	.LBB702:
 13278              	.LBB703:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13279              		.loc 1 1007 32 is_stmt 1 view .LVU4675
 13280              	.LBE703:
 13281              	# sieve_extend.c:1006:             counter_t c_prime = 0;
1006:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13282              		.loc 1 1006 23 is_stmt 0 view .LVU4676
 13283 479e 31ED     		xor	ebp, ebp	# c_prime
 13284              	.LBB704:
 13285              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13286              		.loc 1 1007 13 view .LVU4677
 13287 47a0 4885FF   		test	rdi, rdi	# _137
 13288 47a3 BE030000 		mov	esi, 3	# ivtmp.604,
 13288      00
 13289 47a8 0F84E003 		je	.L1150	#,
 13289      0000
 13290 47ae 4989FB   		mov	r11, rdi	# tmp231, _137
 13291 47b1 4929CB   		sub	r11, rcx	# tmp231, c
 13292 47b4 4183E303 		and	r11d, 3	# tmp231,
 13293 47b8 4D89DA   		mov	r10, r11	# tmp232, tmp231
 13294 47bb 0F84BF00 		je	.L1036	#,
 13294      0000
 13295              	.LVL780:
1008:sieve_extend.c ****             }
 13296              		.loc 1 1008 17 is_stmt 1 view .LVU4678
 13297              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13298              		.loc 1 1008 48 is_stmt 0 view .LVU4679
 13299 47c1 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 13300 47c5 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.614
 13301 47c8 7411     		je	.L1090	#,
 13302              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13303              		.loc 1 1008 33 view .LVU4680
 13304 47ca 31D2     		xor	edx, edx	# tmp241
 13305 47cc 4C89E0   		mov	rax, r12	# tmp242, ivtmp.612
 13306 47cf 48F7F6   		div	rsi	# ivtmp.604
 13307              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13308              		.loc 1 1008 82 view .LVU4681
 13309 47d2 31ED     		xor	ebp, ebp	# c_prime
1008:sieve_extend.c ****             }
 13310              		.loc 1 1008 82 view .LVU4682
 13311 47d4 4885D2   		test	rdx, rdx	# tmp241
 13312 47d7 400F94C5 		sete	bpl	#, c_prime
 13313              	.LVL781:
 13314              	.L1090:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13315              		.loc 1 1007 68 is_stmt 1 view .LVU4683
 13316              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13317              		.loc 1 1007 69 is_stmt 0 view .LVU4684
GAS LISTING /tmp/ccW4ZvF5.s 			page 360


 13318 47db 4883C101 		add	rcx, 1	# c,
 13319              	.LVL782:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13320              		.loc 1 1007 32 is_stmt 1 view .LVU4685
 13321              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13322              		.loc 1 1007 13 is_stmt 0 view .LVU4686
 13323 47df 4839F9   		cmp	rcx, rdi	# c, _137
 13324 47e2 0F877801 		ja	.L1042	#,
 13324      0000
 13325              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13326              		.loc 1 1007 51 view .LVU4687
 13327 47e8 4989C9   		mov	r9, rcx	# tmp244, c
 13328 47eb BE050000 		mov	esi, 5	# ivtmp.604,
 13328      00
 13329 47f0 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 13330              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13331              		.loc 1 1007 47 view .LVU4688
 13332 47f4 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.612
 13333 47f7 0F876301 		ja	.L1042	#,
 13333      0000
 13334 47fd 4983FA01 		cmp	r10, 1	# tmp232,
 13335 4801 747D     		je	.L1036	#,
 13336 4803 4983FA02 		cmp	r10, 2	# tmp232,
 13337 4807 7438     		je	.L1121	#,
1008:sieve_extend.c ****             }
 13338              		.loc 1 1008 17 is_stmt 1 view .LVU4689
 13339              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13340              		.loc 1 1008 48 is_stmt 0 view .LVU4690
 13341 4809 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 13342 480d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.614
 13343 4810 7417     		je	.L1092	#,
 13344              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13345              		.loc 1 1008 33 view .LVU4691
 13346 4812 31D2     		xor	edx, edx	# tmp247
 13347 4814 4C89E0   		mov	rax, r12	# tmp248, ivtmp.612
 13348 4817 48F7F6   		div	rsi	# ivtmp.604
 13349              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13350              		.loc 1 1008 20 view .LVU4692
 13351 481a 4885D2   		test	rdx, rdx	# tmp247
 13352 481d 410F94C3 		sete	r11b	#, tmp249
 13353              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13354              		.loc 1 1008 82 view .LVU4693
 13355 4821 4180FB01 		cmp	r11b, 1	# tmp249,
 13356 4825 4883DDFF 		sbb	rbp, -1	# c_prime,
 13357              	.LVL783:
 13358              	.L1092:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13359              		.loc 1 1007 68 is_stmt 1 view .LVU4694
 13360              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 361


 13361              		.loc 1 1007 69 is_stmt 0 view .LVU4695
 13362 4829 4883C101 		add	rcx, 1	# c,
 13363              	.LVL784:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13364              		.loc 1 1007 32 is_stmt 1 view .LVU4696
 13365 482d 4883C602 		add	rsi, 2	# ivtmp.604,
 13366              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13367              		.loc 1 1007 51 is_stmt 0 view .LVU4697
 13368 4831 4989CA   		mov	r10, rcx	# tmp250, c
 13369 4834 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 13370              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13371              		.loc 1 1007 47 view .LVU4698
 13372 4838 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.612
 13373 483b 0F871F01 		ja	.L1042	#,
 13373      0000
 13374              	.L1121:
1008:sieve_extend.c ****             }
 13375              		.loc 1 1008 17 is_stmt 1 view .LVU4699
 13376              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13377              		.loc 1 1008 48 is_stmt 0 view .LVU4700
 13378 4841 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 13379 4845 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.614
 13380 4848 7415     		je	.L1095	#,
 13381              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13382              		.loc 1 1008 33 view .LVU4701
 13383 484a 31D2     		xor	edx, edx	# tmp253
 13384 484c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.612
 13385 484f 48F7F6   		div	rsi	# ivtmp.604
 13386              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13387              		.loc 1 1008 20 view .LVU4702
 13388 4852 4885D2   		test	rdx, rdx	# tmp253
 13389 4855 0F94C3   		sete	bl	#, tmp255
 13390              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13391              		.loc 1 1008 82 view .LVU4703
 13392 4858 80FB01   		cmp	bl, 1	# tmp255,
 13393 485b 4883DDFF 		sbb	rbp, -1	# c_prime,
 13394              	.LVL785:
 13395              	.L1095:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13396              		.loc 1 1007 68 is_stmt 1 view .LVU4704
 13397              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13398              		.loc 1 1007 69 is_stmt 0 view .LVU4705
 13399 485f 4883C101 		add	rcx, 1	# c,
 13400              	.LVL786:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13401              		.loc 1 1007 32 is_stmt 1 view .LVU4706
 13402 4863 4883C602 		add	rsi, 2	# ivtmp.604,
 13403              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13404              		.loc 1 1007 51 is_stmt 0 view .LVU4707
GAS LISTING /tmp/ccW4ZvF5.s 			page 362


 13405 4867 4989CB   		mov	r11, rcx	# tmp256, c
 13406 486a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 13407              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13408              		.loc 1 1007 47 view .LVU4708
 13409 486e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.612
 13410 4871 0F87E900 		ja	.L1042	#,
 13410      0000
 13411              	.LVL787:
 13412 4877 660F1F84 		.p2align 4
 13412      00000000 
 13412      00
 13413              		.p2align 3
 13414              	.L1036:
1008:sieve_extend.c ****             }
 13415              		.loc 1 1008 17 is_stmt 1 view .LVU4709
 13416              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13417              		.loc 1 1008 48 is_stmt 0 view .LVU4710
 13418 4880 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 13419 4884 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.614
 13420 4887 7417     		je	.L1041	#,
 13421              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13422              		.loc 1 1008 33 view .LVU4711
 13423 4889 31D2     		xor	edx, edx	# tmp214
 13424 488b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.612
 13425 488e 48F7F6   		div	rsi	# ivtmp.604
 13426              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13427              		.loc 1 1008 20 view .LVU4712
 13428 4891 4885D2   		test	rdx, rdx	# tmp214
 13429 4894 410F94C1 		sete	r9b	#, tmp217
 13430              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13431              		.loc 1 1008 82 view .LVU4713
 13432 4898 4180F901 		cmp	r9b, 1	# tmp217,
 13433 489c 4883DDFF 		sbb	rbp, -1	# c_prime,
 13434              	.LVL788:
 13435              	.L1041:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13436              		.loc 1 1007 68 is_stmt 1 view .LVU4714
 13437              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13438              		.loc 1 1007 69 is_stmt 0 view .LVU4715
 13439 48a0 4883C101 		add	rcx, 1	# tmp234,
 13440              	.LVL789:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13441              		.loc 1 1007 32 is_stmt 1 view .LVU4716
 13442              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13443              		.loc 1 1007 13 is_stmt 0 view .LVU4717
 13444 48a4 4839F9   		cmp	rcx, rdi	# tmp234, _137
 13445 48a7 0F87B300 		ja	.L1042	#,
 13445      0000
 13446              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 363


 13447              		.loc 1 1007 51 view .LVU4718
 13448 48ad 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 13449 48b0 4883C602 		add	rsi, 2	# tmp233,
 13450 48b4 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 13451              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13452              		.loc 1 1007 47 view .LVU4719
 13453 48b8 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.612
 13454 48bb 0F879F00 		ja	.L1042	#,
 13454      0000
1008:sieve_extend.c ****             }
 13455              		.loc 1 1008 17 is_stmt 1 view .LVU4720
 13456              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13457              		.loc 1 1008 48 is_stmt 0 view .LVU4721
 13458 48c1 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 13459 48c5 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.614
 13460 48c8 7417     		je	.L1099	#,
 13461              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13462              		.loc 1 1008 33 view .LVU4722
 13463 48ca 31D2     		xor	edx, edx	# tmp259
 13464 48cc 4C89E0   		mov	rax, r12	# tmp260, ivtmp.612
 13465 48cf 48F7F6   		div	rsi	# tmp233
 13466              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13467              		.loc 1 1008 20 view .LVU4723
 13468 48d2 4885D2   		test	rdx, rdx	# tmp259
 13469 48d5 410F94C2 		sete	r10b	#, tmp261
 13470              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13471              		.loc 1 1008 82 view .LVU4724
 13472 48d9 4180FA01 		cmp	r10b, 1	# tmp261,
 13473 48dd 4883DDFF 		sbb	rbp, -1	# c_prime,
 13474              	.LVL790:
 13475              	.L1099:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13476              		.loc 1 1007 68 is_stmt 1 view .LVU4725
 13477              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13478              		.loc 1 1007 69 is_stmt 0 view .LVU4726
 13479 48e1 4C8D4901 		lea	r9, 1[rcx]	# c,
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13480              		.loc 1 1007 32 is_stmt 1 view .LVU4727
 13481 48e5 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.604,
 13482              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13483              		.loc 1 1007 51 is_stmt 0 view .LVU4728
 13484 48e9 4D89CB   		mov	r11, r9	# tmp264, c
 13485 48ec 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13486              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13487              		.loc 1 1007 47 view .LVU4729
 13488 48f0 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.612
 13489 48f3 776B     		ja	.L1042	#,
1008:sieve_extend.c ****             }
 13490              		.loc 1 1008 17 is_stmt 1 view .LVU4730
GAS LISTING /tmp/ccW4ZvF5.s 			page 364


 13491              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13492              		.loc 1 1008 48 is_stmt 0 view .LVU4731
 13493 48f5 4D01C9   		add	r9, r9	# tmp265
 13494 48f8 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.614
 13495 48fb 7417     		je	.L1101	#,
 13496              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13497              		.loc 1 1008 33 view .LVU4732
 13498 48fd 31D2     		xor	edx, edx	# tmp267
 13499 48ff 4C89E0   		mov	rax, r12	# tmp268, ivtmp.612
 13500 4902 48F7F3   		div	rbx	# ivtmp.604
 13501              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13502              		.loc 1 1008 20 view .LVU4733
 13503 4905 4885D2   		test	rdx, rdx	# tmp267
 13504 4908 410F94C2 		sete	r10b	#, tmp269
 13505              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13506              		.loc 1 1008 82 view .LVU4734
 13507 490c 4180FA01 		cmp	r10b, 1	# tmp269,
 13508 4910 4883DDFF 		sbb	rbp, -1	# c_prime,
 13509              	.LVL791:
 13510              	.L1101:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13511              		.loc 1 1007 68 is_stmt 1 view .LVU4735
 13512              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13513              		.loc 1 1007 69 is_stmt 0 view .LVU4736
 13514 4914 4C8D4902 		lea	r9, 2[rcx]	# c,
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13515              		.loc 1 1007 32 is_stmt 1 view .LVU4737
 13516 4918 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.604,
 13517              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13518              		.loc 1 1007 51 is_stmt 0 view .LVU4738
 13519 491c 4D89CB   		mov	r11, r9	# tmp272, c
 13520 491f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13521              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13522              		.loc 1 1007 47 view .LVU4739
 13523 4923 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.612
 13524 4926 7738     		ja	.L1042	#,
1008:sieve_extend.c ****             }
 13525              		.loc 1 1008 17 is_stmt 1 view .LVU4740
 13526              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13527              		.loc 1 1008 48 is_stmt 0 view .LVU4741
 13528 4928 4D01C9   		add	r9, r9	# tmp273
 13529 492b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.614
 13530 492e 7417     		je	.L1103	#,
 13531              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13532              		.loc 1 1008 33 view .LVU4742
 13533 4930 31D2     		xor	edx, edx	# tmp275
 13534 4932 4C89E0   		mov	rax, r12	# tmp276, ivtmp.612
 13535 4935 48F7F3   		div	rbx	# ivtmp.604
GAS LISTING /tmp/ccW4ZvF5.s 			page 365


 13536              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13537              		.loc 1 1008 20 view .LVU4743
 13538 4938 4885D2   		test	rdx, rdx	# tmp275
 13539 493b 410F94C2 		sete	r10b	#, tmp277
 13540              	# sieve_extend.c:1008:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1008:sieve_extend.c ****             }
 13541              		.loc 1 1008 82 view .LVU4744
 13542 493f 4180FA01 		cmp	r10b, 1	# tmp277,
 13543 4943 4883DDFF 		sbb	rbp, -1	# c_prime,
 13544              	.LVL792:
 13545              	.L1103:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13546              		.loc 1 1007 68 is_stmt 1 view .LVU4745
 13547              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13548              		.loc 1 1007 69 is_stmt 0 view .LVU4746
 13549 4947 4883C103 		add	rcx, 3	# c,
 13550              	.LVL793:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13551              		.loc 1 1007 32 is_stmt 1 view .LVU4747
 13552 494b 4883C606 		add	rsi, 6	# ivtmp.604,
 13553              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13554              		.loc 1 1007 51 is_stmt 0 view .LVU4748
 13555 494f 4989C9   		mov	r9, rcx	# tmp278, c
 13556 4952 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13557              	# sieve_extend.c:1007:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13558              		.loc 1 1007 47 view .LVU4749
 13559 4956 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.612
 13560 4959 0F8621FF 		jbe	.L1036	#,
 13560      FFFF
 13561              	.LVL794:
 13562 495f 90       		.p2align 4
 13563              		.p2align 3
 13564              	.L1042:
1007:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13565              		.loc 1 1007 47 view .LVU4750
 13566              	.LBE704:
1010:sieve_extend.c ****         }
 13567              		.loc 1 1010 13 is_stmt 1 view .LVU4751
 13568              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13569              		.loc 1 1010 16 is_stmt 0 view .LVU4752
 13570 4960 4885ED   		test	rbp, rbp	# c_prime
 13571 4963 0F840C02 		je	.L1163	#,
 13571      0000
 13572              	.LVL795:
 13573              	.L1039:
1010:sieve_extend.c ****         }
 13574              		.loc 1 1010 16 view .LVU4753
 13575              	.LBE702:
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13576              		.loc 1 997 52 is_stmt 1 view .LVU4754
 13577              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/ccW4ZvF5.s 			page 366


 13578              		.loc 1 997 57 is_stmt 0 view .LVU4755
 13579 4969 4983C701 		add	r15, 1	# prime,
 13580              	.LVL796:
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13581              		.loc 1 997 31 is_stmt 1 view .LVU4756
 13582 496d 4983C402 		add	r12, 2	# ivtmp.612,
 13583 4971 4983C602 		add	r14, 2	# ivtmp.614,
 13584              	# sieve_extend.c:997:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13585              		.loc 1 997 5 is_stmt 0 view .LVU4757
 13586 4975 4939FF   		cmp	r15, rdi	# prime, _137
 13587 4978 0F8202FE 		jb	.L1043	#,
 13587      FFFF
 13588              	.LVL797:
 13589              	.L1152:
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13590              		.loc 1 997 5 view .LVU4758
 13591 497e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 13591      24
 13592              	.LVL798:
 13593              	.L1012:
 997:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13594              		.loc 1 997 5 view .LVU4759
 13595              	.LBE713:
 13596              	.LBE688:
 13597              	.LBE687:
 13598              	# sieve_extend.c:1041: }
1041:sieve_extend.c **** 
 13599              		.loc 1 1041 1 view .LVU4760
 13600 4983 488D6424 		lea	rsp, 56[rsp]	#,
 13600      38
 13601              		.cfi_remember_state
 13602              		.cfi_def_cfa_offset 56
 13603 4988 4489E8   		mov	eax, r13d	#, <retval>
 13604 498b 5B       		pop	rbx	#
 13605              		.cfi_def_cfa_offset 48
 13606 498c 5D       		pop	rbp	#
 13607              		.cfi_def_cfa_offset 40
 13608 498d 415C     		pop	r12	#
 13609              		.cfi_def_cfa_offset 32
 13610 498f 415D     		pop	r13	#
 13611              		.cfi_def_cfa_offset 24
 13612 4991 415E     		pop	r14	#
 13613              		.cfi_def_cfa_offset 16
 13614 4993 415F     		pop	r15	#
 13615              		.cfi_def_cfa_offset 8
 13616 4995 C3       		ret	
 13617              	.LVL799:
 13618              	.L1161:
 13619              		.cfi_restore_state
 13620              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13621              		.loc 1 1020 5 view .LVU4761
 13622 4996 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13622      030000
 13623 499d 0F84E502 		je	.L1019	#,
 13623      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 367


 13624 49a3 7633     		jbe	.L1164	#,
 13625 49a5 4981F910 		cmp	r9, 10000	# pretmp_201,
 13625      270000
 13626 49ac 0F852203 		jne	.L1023	#,
 13626      0000
 13627 49b2 4981F8CD 		cmp	r8, 1229	# primeCount,
 13627      040000
 13628              	# sieve_extend.c:1024:         case 10000:         valid_primes = 1229;     break;
1024:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13629              		.loc 1 1024 42 view .LVU4762
 13630 49b9 B9CD0400 		mov	ecx, 1229	# valid_primes,
 13630      00
 13631 49be 400F94C6 		sete	sil	#, tmp179
 13632 49c2 21F2     		and	edx, esi	# _253, tmp179
 13633 49c4 4981F8CD 		cmp	r8, 1229	# primeCount,
 13633      040000
 13634 49cb 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13635 49cf 410F95C4 		setne	r12b	#, _135
1024:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13636              		.loc 1 1024 29 is_stmt 1 view .LVU4763
 13637              	.LVL800:
1024:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13638              		.loc 1 1024 54 view .LVU4764
 13639              	# sieve_extend.c:1024:         case 10000:         valid_primes = 1229;     break;
1024:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13640              		.loc 1 1024 9 is_stmt 0 view .LVU4765
 13641 49d3 E938FDFF 		jmp	.L1030	#
 13641      FF
 13642              	.LVL801:
 13643              	.L1164:
 13644              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13645              		.loc 1 1020 5 view .LVU4766
 13646 49d8 4983F90A 		cmp	r9, 10	# pretmp_201,
 13647 49dc 0F841902 		je	.L1021	#,
 13647      0000
 13648 49e2 4983F964 		cmp	r9, 100	# pretmp_201,
 13649 49e6 0F85E802 		jne	.L1023	#,
 13649      0000
 13650 49ec 4983F819 		cmp	r8, 25	# primeCount,
 13651 49f0 0F94C1   		sete	cl	#, tmp173
 13652 49f3 21CA     		and	edx, ecx	# _253, tmp173
 13653 49f5 4983F819 		cmp	r8, 25	# primeCount,
 13654 49f9 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13655 49fd 410F95C4 		setne	r12b	#, _135
 13656              	# sieve_extend.c:1022:         case 100:           valid_primes = 25;       break;
1022:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13657              		.loc 1 1022 42 view .LVU4767
 13658 4a01 B9190000 		mov	ecx, 25	# valid_primes,
 13658      00
 13659 4a06 E905FDFF 		jmp	.L1030	#
 13659      FF
 13660 4a0b 0F1F4400 		.p2align 4,,7
 13660      00
 13661              		.p2align 3
 13662              	.L1162:
 13663              	# sieve_extend.c:1020:     switch(sieve->size) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 368


1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13664              		.loc 1 1020 5 view .LVU4768
 13665 4a10 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13665      420F00
 13666 4a17 0F84B701 		je	.L1027	#,
 13666      0000
 13667 4a1d 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13667      969800
 13668 4a24 0F85AA02 		jne	.L1023	#,
 13668      0000
 13669 4a2a 4981F803 		cmp	r8, 664579	# primeCount,
 13669      240A00
 13670              	# sieve_extend.c:1027:         case 10000000:      valid_primes = 664579;   break;
1027:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13671              		.loc 1 1027 42 view .LVU4769
 13672 4a31 B903240A 		mov	ecx, 664579	# valid_primes,
 13672      00
 13673 4a36 410F94C7 		sete	r15b	#, tmp185
 13674 4a3a 4421FA   		and	edx, r15d	# _253, tmp185
 13675 4a3d 4981F803 		cmp	r8, 664579	# primeCount,
 13675      240A00
 13676 4a44 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13677 4a48 410F95C4 		setne	r12b	#, _135
1027:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13678              		.loc 1 1027 29 is_stmt 1 view .LVU4770
 13679              	.LVL802:
1027:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13680              		.loc 1 1027 54 view .LVU4771
 13681              	# sieve_extend.c:1027:         case 10000000:      valid_primes = 664579;   break;
1027:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13682              		.loc 1 1027 9 is_stmt 0 view .LVU4772
 13683 4a4c E9BFFCFF 		jmp	.L1030	#
 13683      FF
 13684              	.LVL803:
 13685              		.p2align 4,,7
 13686 4a51 0F1F8000 		.p2align 3
 13686      000000
 13687              	.L1035:
 13688              	.LBB718:
 13689              	.LBB716:
 13690              	.LBB714:
 13691              	.LBB711:
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13692              		.loc 1 999 32 is_stmt 1 view .LVU4773
 13693              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13694              		.loc 1 999 13 is_stmt 0 view .LVU4774
 13695 4a58 4885FF   		test	rdi, rdi	# _137
 13696 4a5b 0F841DFF 		je	.L1152	#,
 13696      FFFF
 13697              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13698              		.loc 1 999 27 view .LVU4775
 13699 4a61 BB010000 		mov	ebx, 1	# c,
 13699      00
 13700 4a66 EB20     		jmp	.L1040	#
 13701              	.LVL804:
GAS LISTING /tmp/ccW4ZvF5.s 			page 369


 13702              		.p2align 4,,7
 13703              		.p2align 3
 13704              	.L1049:
 13705              	# sieve_extend.c:1001:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1001:sieve_extend.c ****                 }
 13706              		.loc 1 1001 35 view .LVU4776
 13707 4a68 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13708              	.LVL805:
 13709              	.L1038:
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13710              		.loc 1 999 68 is_stmt 1 view .LVU4777
 13711              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13712              		.loc 1 999 69 is_stmt 0 view .LVU4778
 13713 4a6b 4883C301 		add	rbx, 1	# c,
 13714              	.LVL806:
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13715              		.loc 1 999 32 is_stmt 1 view .LVU4779
 13716              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13717              		.loc 1 999 13 is_stmt 0 view .LVU4780
 13718 4a6f 4839FB   		cmp	rbx, rdi	# c, _137
 13719 4a72 0F87F1FE 		ja	.L1039	#,
 13719      FFFF
 13720              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13721              		.loc 1 999 51 view .LVU4781
 13722 4a78 4989DB   		mov	r11, rbx	# tmp209, c
 13723 4a7b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 13724              	# sieve_extend.c:999:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 999:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13725              		.loc 1 999 47 view .LVU4782
 13726 4a7f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.612
 13727 4a82 0F87E1FE 		ja	.L1039	#,
 13727      FFFF
 13728              	.LVL807:
 13729              	.L1040:
1000:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13730              		.loc 1 1000 17 is_stmt 1 view .LVU4783
 13731 4a88 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 13732 4a8c 31D2     		xor	edx, edx	# tmp204
 13733 4a8e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.612
 13734              	# sieve_extend.c:1000:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1000:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13735              		.loc 1 1000 39 is_stmt 0 view .LVU4784
 13736 4a91 488D7501 		lea	rsi, 1[rbp]	# _55,
 13737 4a95 48F7F6   		div	rsi	# _55
 13738              	# sieve_extend.c:1000:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1000:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13739              		.loc 1 1000 48 view .LVU4785
 13740 4a98 4885D2   		test	rdx, rdx	# tmp204
 13741 4a9b 75CE     		jne	.L1038	#,
1000:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13742              		.loc 1 1000 48 view .LVU4786
 13743 4a9d 4939EE   		cmp	r14, rbp	# ivtmp.614, _218
 13744 4aa0 74C9     		je	.L1038	#,
1001:sieve_extend.c ****                 }
GAS LISTING /tmp/ccW4ZvF5.s 			page 370


 13745              		.loc 1 1001 21 is_stmt 1 view .LVU4787
 13746              	# sieve_extend.c:1001:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1001:sieve_extend.c ****                 }
 13747              		.loc 1 1001 24 is_stmt 0 view .LVU4788
 13748 4aa2 4983F81D 		cmp	r8, 29	# warn_prime,
 13749              	# sieve_extend.c:1001:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1001:sieve_extend.c ****                 }
 13750              		.loc 1 1001 35 view .LVU4789
 13751 4aa6 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 13752              	.LVL808:
 13753              	# sieve_extend.c:1001:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1001:sieve_extend.c ****                 }
 13754              		.loc 1 1001 24 view .LVU4790
 13755 4aaa 77BC     		ja	.L1049	#,
1001:sieve_extend.c ****                 }
 13756              		.loc 1 1001 44 is_stmt 1 view .LVU4791
 13757              	.LVL809:
 13758              	.LBB699:
 13759              	.LBI693:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13760              		.loc 3 105 1 view .LVU4792
 13761              	.LBB696:
 13762              		.loc 3 107 3 view .LVU4793
 13763              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13764              		.loc 3 107 10 is_stmt 0 view .LVU4794
 13765 4aac 4989F0   		mov	r8, rsi	#, _55
 13766 4aaf 4989C1   		mov	r9, rax	#, tmp203
 13767 4ab2 BF010000 		mov	edi, 1	#,
 13767      00
 13768 4ab7 4C89F9   		mov	rcx, r15	#, prime
 13769 4aba 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.612
 13770 4abe 4C89E2   		mov	rdx, r12	#, ivtmp.612
 13771 4ac1 488D3500 		lea	rsi, .LC12[rip]	#,
 13771      000000
 13772 4ac8 31C0     		xor	eax, eax	#
 13773 4aca E8000000 		call	__printf_chk@PLT	#
 13773      00
 13774              	.LVL810:
 13775 4acf 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13776              	.LBE696:
 13777              	.LBE699:
 13778              	# sieve_extend.c:1001:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1001:sieve_extend.c ****                 }
 13779              		.loc 1 1001 35 view .LVU4795
 13780 4ad3 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13781              	.LBB700:
 13782              	.LBB697:
 13783              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13784              		.loc 3 107 10 view .LVU4796
 13785 4ad6 EB93     		jmp	.L1038	#
 13786              	.LVL811:
 13787              	.L1013:
 13788              		.loc 3 107 10 view .LVU4797
 13789              	.LBE697:
 13790              	.LBE700:
 13791              	.LBE711:
 13792              	.LBE714:
GAS LISTING /tmp/ccW4ZvF5.s 			page 371


 13793              	.LBE716:
 13794              	.LBE718:
 13795              	.LBB719:
 13796              	.LBB684:
 990:sieve_extend.c **** }
 13797              		.loc 1 990 5 is_stmt 1 view .LVU4798
 990:sieve_extend.c **** }
 13798              		.loc 1 990 5 is_stmt 0 view .LVU4799
 13799              	.LBE684:
 13800              	.LBE719:
1019:sieve_extend.c ****     switch(sieve->size) {
 13801              		.loc 1 1019 5 is_stmt 1 view .LVU4800
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13802              		.loc 1 1020 5 view .LVU4801
 13803 4ad8 4531ED   		xor	r13d, r13d	# <retval>
 13804 4adb 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13804      860100
 13805 4ae2 41BC0100 		mov	r12d, 1	# _135,
 13805      0000
 13806 4ae8 41B80100 		mov	r8d, 1	# primeCount,
 13806      0000
 13807 4aee 0F842202 		je	.L1052	#,
 13807      0000
 13808 4af4 0F872201 		ja	.L1044	#,
 13808      0000
 13809 4afa 4983F964 		cmp	r9, 100	# pretmp_201,
 13810 4afe B9190000 		mov	ecx, 25	# valid_primes,
 13810      00
 13811 4b03 742A     		je	.L1031	#,
 13812              		.p2align 4,,2
 13813 4b05 0F863F01 		jbe	.L1165	#,
 13813      0000
 13814 4b0b 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13814      030000
 13815              	# sieve_extend.c:1023:         case 1000:          valid_primes = 168;      break;
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13816              		.loc 1 1023 42 is_stmt 0 view .LVU4802
 13817 4b12 B9A80000 		mov	ecx, 168	# valid_primes,
 13817      00
 13818              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13819              		.loc 1 1020 5 view .LVU4803
 13820 4b17 7416     		je	.L1031	#,
 13821 4b19 4981F910 		cmp	r9, 10000	# pretmp_201,
 13821      270000
 13822 4b20 B9CD0400 		mov	ecx, 1229	# tmp223,
 13822      00
 13823 4b25 41BA0000 		mov	r10d, 0	# tmp224,
 13823      0000
 13824 4b2b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 13825              	.LVL812:
 13826              	.L1031:
1035:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13827              		.loc 1 1035 5 is_stmt 1 view .LVU4804
 13828              	# sieve_extend.c:1035:     if (!valid && option_verboselevel >= 1) {
1035:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13829              		.loc 1 1035 8 is_stmt 0 view .LVU4805
GAS LISTING /tmp/ccW4ZvF5.s 			page 372


 13830 4b2f 85DB     		test	ebx, ebx	# option_verboselevel
 13831 4b31 0F8EF7FB 		jle	.L1032	#,
 13831      FFFF
 13832 4b37 4584E4   		test	r12b, r12b	# _135
 13833 4b3a 0F84EEFB 		je	.L1032	#,
 13833      FFFF
1036:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 13834              		.loc 1 1036 9 is_stmt 1 view .LVU4806
 13835              	.LVL813:
 13836              	.LBB720:
 13837              	.LBI720:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13838              		.loc 3 105 1 view .LVU4807
 13839              	.LBB721:
 13840              		.loc 3 107 3 view .LVU4808
 13841              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13842              		.loc 3 107 10 is_stmt 0 view .LVU4809
 13843 4b40 31C0     		xor	eax, eax	#
 13844 4b42 4C89CA   		mov	rdx, r9	#, pretmp_201
 13845 4b45 488D3500 		lea	rsi, .LC10[rip]	#,
 13845      000000
 13846 4b4c BF010000 		mov	edi, 1	#,
 13846      00
 13847 4b51 E8000000 		call	__printf_chk@PLT	#
 13847      00
 13848              	.LVL814:
 13849              		.loc 3 107 10 view .LVU4810
 13850              	.LBE721:
 13851              	.LBE720:
1037:sieve_extend.c ****     }
 13852              		.loc 1 1037 9 is_stmt 1 view .LVU4811
 13853              	# sieve_extend.c:1037:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1037:sieve_extend.c ****     }
 13854              		.loc 1 1037 12 is_stmt 0 view .LVU4812
 13855 4b56 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13856 4b59 0F8424FE 		je	.L1012	#,
 13856      FFFF
1037:sieve_extend.c ****     }
 13857              		.loc 1 1037 49 is_stmt 1 discriminator 1 view .LVU4813
 13858 4b5f 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 13859 4b63 BA640000 		mov	edx, 100	#,
 13859      00
 13860 4b68 4889EF   		mov	rdi, rbp	#, sieve
 13861 4b6b E880E8FF 		call	show_primes.isra.0	#
 13861      FF
 13862              	.LVL815:
1039:sieve_extend.c ****     return (valid);
 13863              		.loc 1 1039 5 discriminator 1 view .LVU4814
 13864 4b70 E9CBFBFF 		jmp	.L1034	#
 13864      FF
 13865              	.LVL816:
 13866              	.L1163:
 13867              	.LBB722:
 13868              	.LBB717:
 13869              	.LBB715:
 13870              	.LBB712:
 13871              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
GAS LISTING /tmp/ccW4ZvF5.s 			page 373


1010:sieve_extend.c ****         }
 13872              		.loc 1 1010 44 is_stmt 0 view .LVU4815
 13873 4b75 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13873      18
 13874              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13875              		.loc 1 1010 28 view .LVU4816
 13876 4b7a 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 13877              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13878              		.loc 1 1010 44 view .LVU4817
 13879 4b7e 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 13880              	.LVL817:
 13881              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13882              		.loc 1 1010 28 view .LVU4818
 13883 4b82 761D     		jbe	.L1047	#,
 13884              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13885              		.loc 1 1010 44 view .LVU4819
 13886 4b84 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13886      18
 13887 4b89 E9DBFDFF 		jmp	.L1039	#
 13887      FF
 13888              	.LVL818:
 13889              	.L1150:
1010:sieve_extend.c ****         }
 13890              		.loc 1 1010 44 view .LVU4820
 13891 4b8e 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13891      18
 13892              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13893              		.loc 1 1010 28 view .LVU4821
 13894 4b93 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 13895              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13896              		.loc 1 1010 44 view .LVU4822
 13897 4b97 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 13898              	.LVL819:
 13899              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13900              		.loc 1 1010 28 view .LVU4823
 13901 4b9b 0F87DDFD 		ja	.L1152	#,
 13901      FFFF
 13902              	.LVL820:
 13903              	.L1047:
 13904              	.LBB705:
 13905              	.LBB706:
 13906              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13907              		.loc 3 107 10 view .LVU4824
 13908 4ba1 BF010000 		mov	edi, 1	#,
 13908      00
 13909              	.LBE706:
 13910              	.LBE705:
 13911              	# sieve_extend.c:1010:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1010:sieve_extend.c ****         }
 13912              		.loc 1 1010 53 view .LVU4825
GAS LISTING /tmp/ccW4ZvF5.s 			page 374


 13913 4ba6 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 13913      01
 13914              	.LBB709:
 13915              	.LBB707:
 13916              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13917              		.loc 3 107 10 view .LVU4826
 13918 4bab 4C89F9   		mov	rcx, r15	#, prime
 13919 4bae 488D3500 		lea	rsi, .LC13[rip]	#,
 13919      000000
 13920 4bb5 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 13920      28
 13921              	.LBE707:
 13922              	.LBE709:
1010:sieve_extend.c ****         }
 13923              		.loc 1 1010 53 is_stmt 1 view .LVU4827
 13924              	.LVL821:
 13925              	.LBB710:
 13926              	.LBI705:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13927              		.loc 3 105 1 view .LVU4828
 13928              	.LBB708:
 13929              		.loc 3 107 3 view .LVU4829
 13930              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13931              		.loc 3 107 10 is_stmt 0 view .LVU4830
 13932 4bba 31C0     		xor	eax, eax	#
 13933 4bbc E8000000 		call	__printf_chk@PLT	#
 13933      00
 13934              	.LVL822:
 13935              		.loc 3 107 10 view .LVU4831
 13936 4bc1 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13937 4bc5 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 13937      28
 13938 4bca 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13938      18
 13939 4bcf E995FDFF 		jmp	.L1039	#
 13939      FF
 13940              	.LVL823:
 13941              	.L1027:
 13942              		.loc 3 107 10 view .LVU4832
 13943 4bd4 4981F8A2 		cmp	r8, 78498	# primeCount,
 13943      320100
 13944              	.LBE708:
 13945              	.LBE710:
 13946              	.LBE712:
 13947              	.LBE715:
 13948              	.LBE717:
 13949              	.LBE722:
 13950              	# sieve_extend.c:1026:         case 1000000:       valid_primes = 78498;    break;
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13951              		.loc 1 1026 42 view .LVU4833
 13952 4bdb B9A23201 		mov	ecx, 78498	# valid_primes,
 13952      00
 13953 4be0 410F94C6 		sete	r14b	#, tmp183
 13954 4be4 4421F2   		and	edx, r14d	# _253, tmp183
 13955 4be7 4981F8A2 		cmp	r8, 78498	# primeCount,
 13955      320100
 13956 4bee 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
GAS LISTING /tmp/ccW4ZvF5.s 			page 375


 13957 4bf2 410F95C4 		setne	r12b	#, _135
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13958              		.loc 1 1026 29 is_stmt 1 view .LVU4834
 13959              	.LVL824:
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13960              		.loc 1 1026 54 view .LVU4835
 13961              	# sieve_extend.c:1026:         case 1000000:       valid_primes = 78498;    break;
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13962              		.loc 1 1026 9 is_stmt 0 view .LVU4836
 13963 4bf6 E915FBFF 		jmp	.L1030	#
 13963      FF
 13964              	.LVL825:
 13965              	.L1021:
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13966              		.loc 1 1026 9 view .LVU4837
 13967 4bfb 4983F804 		cmp	r8, 4	# primeCount,
 13968              	# sieve_extend.c:1021:         case 10:            valid_primes = 4;        break;
1021:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 13969              		.loc 1 1021 42 view .LVU4838
 13970 4bff B9040000 		mov	ecx, 4	# valid_primes,
 13970      00
 13971 4c04 410F94C2 		sete	r10b	#, tmp175
 13972 4c08 4421D2   		and	edx, r10d	# _253, tmp175
 13973 4c0b 4983F804 		cmp	r8, 4	# primeCount,
 13974 4c0f 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 13975 4c13 410F95C4 		setne	r12b	#, _135
 13976 4c17 E9F4FAFF 		jmp	.L1030	#
 13976      FF
 13977              	.LVL826:
 13978              	.L1044:
 13979              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13980              		.loc 1 1020 5 view .LVU4839
 13981 4c1c 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13981      E1F505
 13982              	# sieve_extend.c:1028:         case 100000000:     valid_primes = 5761455;  break;
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13983              		.loc 1 1028 42 view .LVU4840
 13984 4c23 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13984      00
 13985              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13986              		.loc 1 1020 5 view .LVU4841
 13987 4c28 0F8401FF 		je	.L1031	#,
 13987      FFFF
 13988 4c2e 762C     		jbe	.L1166	#,
 13989 4c30 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13989      CA9A3B
 13990 4c37 B92EDF07 		mov	ecx, 50847534	# tmp227,
 13990      03
 13991 4c3c B8000000 		mov	eax, 0	# tmp228,
 13991      00
 13992 4c41 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 13993 4c45 E9E5FEFF 		jmp	.L1031	#
 13993      FF
 13994              	.L1165:
 13995 4c4a 31C9     		xor	ecx, ecx	# valid_primes
GAS LISTING /tmp/ccW4ZvF5.s 			page 376


 13996 4c4c 4983F90A 		cmp	r9, 10	# pretmp_201,
 13997 4c50 0F94C1   		sete	cl	#, valid_primes
 13998 4c53 48C1E102 		sal	rcx, 2	# valid_primes,
 13999 4c57 E9D3FEFF 		jmp	.L1031	#
 13999      FF
 14000              	.L1166:
 14001 4c5c 4981F940 		cmp	r9, 1000000	# pretmp_201,
 14001      420F00
 14002              	# sieve_extend.c:1026:         case 1000000:       valid_primes = 78498;    break;
1026:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14003              		.loc 1 1026 42 view .LVU4842
 14004 4c63 B9A23201 		mov	ecx, 78498	# valid_primes,
 14004      00
 14005              	# sieve_extend.c:1020:     switch(sieve->size) {
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14006              		.loc 1 1020 5 view .LVU4843
 14007 4c68 0F84C1FE 		je	.L1031	#,
 14007      FFFF
 14008 4c6e 4981F980 		cmp	r9, 10000000	# pretmp_201,
 14008      969800
 14009 4c75 B903240A 		mov	ecx, 664579	# tmp225,
 14009      00
 14010 4c7a BE000000 		mov	esi, 0	# tmp226,
 14010      00
 14011 4c7f 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 14012 4c83 E9A7FEFF 		jmp	.L1031	#
 14012      FF
 14013              	.LVL827:
 14014              	.L1019:
1020:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14015              		.loc 1 1020 5 view .LVU4844
 14016 4c88 4981F8A8 		cmp	r8, 168	# primeCount,
 14016      000000
 14017              	# sieve_extend.c:1023:         case 1000:          valid_primes = 168;      break;
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14018              		.loc 1 1023 42 view .LVU4845
 14019 4c8f B9A80000 		mov	ecx, 168	# valid_primes,
 14019      00
 14020 4c94 410F94C4 		sete	r12b	#, tmp177
 14021 4c98 4421E2   		and	edx, r12d	# _253, tmp177
 14022 4c9b 4981F8A8 		cmp	r8, 168	# primeCount,
 14022      000000
 14023 4ca2 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 14024 4ca6 410F95C4 		setne	r12b	#, _135
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14025              		.loc 1 1023 29 is_stmt 1 view .LVU4846
 14026              	.LVL828:
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14027              		.loc 1 1023 54 view .LVU4847
 14028              	# sieve_extend.c:1023:         case 1000:          valid_primes = 168;      break;
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14029              		.loc 1 1023 9 is_stmt 0 view .LVU4848
 14030 4caa E961FAFF 		jmp	.L1030	#
 14030      FF
 14031              	.LVL829:
 14032              	.L1025:
1023:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
GAS LISTING /tmp/ccW4ZvF5.s 			page 377


 14033              		.loc 1 1023 9 view .LVU4849
 14034 4caf 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14034      E95700
 14035              	# sieve_extend.c:1028:         case 100000000:     valid_primes = 5761455;  break;
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14036              		.loc 1 1028 42 view .LVU4850
 14037 4cb6 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14037      00
 14038 4cbb 0F94C0   		sete	al	#, tmp187
 14039 4cbe 21C2     		and	edx, eax	# _253, tmp187
 14040 4cc0 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14040      E95700
 14041 4cc7 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 14042 4ccb 410F95C4 		setne	r12b	#, _135
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14043              		.loc 1 1028 29 is_stmt 1 view .LVU4851
 14044              	.LVL830:
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14045              		.loc 1 1028 54 view .LVU4852
 14046              	# sieve_extend.c:1028:         case 100000000:     valid_primes = 5761455;  break;
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14047              		.loc 1 1028 9 is_stmt 0 view .LVU4853
 14048 4ccf E93CFAFF 		jmp	.L1030	#
 14048      FF
 14049              	.LVL831:
 14050              	.L1023:
1028:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14051              		.loc 1 1028 9 view .LVU4854
 14052 4cd4 4D85C0   		test	r8, r8	# primeCount
 14053 4cd7 410F94C3 		sete	r11b	#, tmp191
 14054 4cdb 4421DA   		and	edx, r11d	# _253, tmp191
 14055 4cde 4D85C0   		test	r8, r8	# primeCount
 14056 4ce1 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 14057 4ce5 410F95C4 		setne	r12b	#, _135
1030:sieve_extend.c ****     }
 14058              		.loc 1 1030 29 is_stmt 1 view .LVU4855
 14059              	# sieve_extend.c:1030:         default:            valid_primes= 0;
1030:sieve_extend.c ****     }
 14060              		.loc 1 1030 41 is_stmt 0 view .LVU4856
 14061 4ce9 31C9     		xor	ecx, ecx	# valid_primes
 14062 4ceb E920FAFF 		jmp	.L1030	#
 14062      FF
 14063              	.L1017:
1030:sieve_extend.c ****     }
 14064              		.loc 1 1030 41 view .LVU4857
 14065 4cf0 4981F878 		cmp	r8, 9592	# primeCount,
 14065      250000
 14066              	# sieve_extend.c:1025:         case 100000:        valid_primes = 9592;     break;
1025:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14067              		.loc 1 1025 42 view .LVU4858
 14068 4cf7 B9782500 		mov	ecx, 9592	# valid_primes,
 14068      00
 14069 4cfc 400F94C7 		sete	dil	#, tmp181
 14070 4d00 21FA     		and	edx, edi	# _253, tmp181
 14071 4d02 4981F878 		cmp	r8, 9592	# primeCount,
 14071      250000
 14072 4d09 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
GAS LISTING /tmp/ccW4ZvF5.s 			page 378


 14073 4d0d 410F95C4 		setne	r12b	#, _135
1025:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14074              		.loc 1 1025 29 is_stmt 1 view .LVU4859
 14075              	.LVL832:
1025:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14076              		.loc 1 1025 54 view .LVU4860
 14077              	# sieve_extend.c:1025:         case 100000:        valid_primes = 9592;     break;
1025:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14078              		.loc 1 1025 9 is_stmt 0 view .LVU4861
 14079 4d11 E9FAF9FF 		jmp	.L1030	#
 14079      FF
 14080              	.LVL833:
 14081              	.L1052:
 14082              	# sieve_extend.c:1025:         case 100000:        valid_primes = 9592;     break;
1025:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14083              		.loc 1 1025 42 view .LVU4862
 14084 4d16 B9782500 		mov	ecx, 9592	# valid_primes,
 14084      00
 14085 4d1b E90FFEFF 		jmp	.L1031	#
 14085      FF
 14086              		.cfi_endproc
 14087              	.LFE84:
 14089              		.section	.rodata.str1.8
 14090 0145 000000   		.align 8
 14091              	.LC14:
 14092 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14092      653A2025 
 14092      73205B6F 
 14092      7074696F 
 14092      6E735D20 
 14093              		.section	.rodata.str1.1
 14094              	.LC15:
 14095 0031 4F707469 		.string	"Options:\n"
 14095      6F6E733A 
 14095      0A00
 14096              		.section	.rodata.str1.8
 14097 0167 00       		.align 8
 14098              	.LC16:
 14099 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14099      76657262 
 14099      6F736520 
 14099      3C6C6576 
 14099      656C3E20 
 14100 01a3 00000000 		.align 8
 14100      00
 14101              	.LC17:
 14102 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14102      20202020 
 14102      20202020 
 14102      20202020 
 14102      20202020 
 14103 01d6 0000     		.align 8
 14104              	.LC18:
 14105 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14105      20202020 
 14105      20202020 
 14105      20202020 
GAS LISTING /tmp/ccW4ZvF5.s 			page 379


 14105      20202020 
 14106 0219 00000000 		.align 8
 14106      000000
 14107              	.LC19:
 14108 0220 20202020 		.string	"                     3 - show actual work\n"
 14108      20202020 
 14108      20202020 
 14108      20202020 
 14108      20202020 
 14109 024b 00000000 		.align 8
 14109      00
 14110              	.LC20:
 14111 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14111      63686563 
 14111      6B202020 
 14111      20202020 
 14111      20202020 
 14112 028d 000000   		.align 8
 14113              	.LC21:
 14114 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14114      73686F77 
 14114      203C6D61 
 14114      78696D75 
 14114      6D3E2020 
 14115 02ce 0000     		.align 8
 14116              	.LC22:
 14117 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14117      74756E65 
 14117      20203C6C 
 14117      6576656C 
 14117      3E202020 
 14118 031d 000000   		.align 8
 14119              	.LC23:
 14120 0320 20202020 		.string	"                     1 - fast tuning\n"
 14120      20202020 
 14120      20202020 
 14120      20202020 
 14120      20202020 
 14121 0346 0000     		.align 8
 14122              	.LC24:
 14123 0348 20202020 		.string	"                     2 - refined tuning\n"
 14123      20202020 
 14123      20202020 
 14123      20202020 
 14123      20202020 
 14124 0371 00000000 		.align 8
 14124      000000
 14125              	.LC25:
 14126 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14126      20202020 
 14126      20202020 
 14126      20202020 
 14126      20202020 
 14127              		.text
 14128              		.p2align 4
 14129              		.globl	usage
 14131              	usage:
GAS LISTING /tmp/ccW4ZvF5.s 			page 380


 14132              	.LVL834:
 14133              	.LFB85:
1043:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14134              		.loc 1 1043 24 is_stmt 1 view -0
 14135              		.cfi_startproc
1043:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14136              		.loc 1 1043 24 is_stmt 0 view .LVU4864
 14137 4d20 F30F1EFA 		endbr64	
 14138 4d24 50       		push	rax	#
 14139              		.cfi_def_cfa_offset 16
 14140 4d25 58       		pop	rax	#
 14141              		.cfi_def_cfa_offset 8
1044:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14142              		.loc 1 1044 5 is_stmt 1 view .LVU4865
 14143              	.LVL835:
 14144              	.LBB723:
 14145              	.LBI723:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14146              		.loc 3 98 1 view .LVU4866
 14147              	.LBB724:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14148              		.loc 3 100 3 view .LVU4867
 14149              	.LBE724:
 14150              	.LBE723:
 14151              	# sieve_extend.c:1043: void usage(char *name) {
1043:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14152              		.loc 1 1043 24 is_stmt 0 view .LVU4868
 14153 4d26 488D6424 		lea	rsp, -8[rsp]	#,
 14153      F8
 14154              		.cfi_def_cfa_offset 16
 14155              	# sieve_extend.c:1043: void usage(char *name) {
1043:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14156              		.loc 1 1043 24 view .LVU4869
 14157 4d2b 4889F9   		mov	rcx, rdi	# name, tmp107
 14158              	.LBB726:
 14159              	.LBB725:
 14160              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14161              		.loc 3 100 10 view .LVU4870
 14162 4d2e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14162      000000
 14163              	.LVL836:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14164              		.loc 3 100 10 view .LVU4871
 14165 4d35 488D1500 		lea	rdx, .LC14[rip]	#,
 14165      000000
 14166 4d3c BE010000 		mov	esi, 1	#,
 14166      00
 14167 4d41 31C0     		xor	eax, eax	#
 14168 4d43 E8000000 		call	__fprintf_chk@PLT	#
 14168      00
 14169              	.LVL837:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14170              		.loc 3 100 10 view .LVU4872
 14171              	.LBE725:
 14172              	.LBE726:
1045:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
GAS LISTING /tmp/ccW4ZvF5.s 			page 381


 14173              		.loc 1 1045 5 is_stmt 1 view .LVU4873
 14174              	.LBB727:
 14175              	.LBI727:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14176              		.loc 3 98 1 view .LVU4874
 14177              	.LBB728:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14178              		.loc 3 100 3 view .LVU4875
 14179              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14180              		.loc 3 100 10 is_stmt 0 view .LVU4876
 14181 4d48 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14181      000000
 14182 4d4f BA090000 		mov	edx, 9	#,
 14182      00
 14183 4d54 BE010000 		mov	esi, 1	#,
 14183      00
 14184 4d59 488D3D00 		lea	rdi, .LC15[rip]	#,
 14184      000000
 14185 4d60 E8000000 		call	fwrite@PLT	#
 14185      00
 14186              	.LVL838:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14187              		.loc 3 100 10 view .LVU4877
 14188              	.LBE728:
 14189              	.LBE727:
1046:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14190              		.loc 1 1046 5 is_stmt 1 view .LVU4878
 14191              	.LBB729:
 14192              	.LBI729:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14193              		.loc 3 98 1 view .LVU4879
 14194              	.LBB730:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14195              		.loc 3 100 3 view .LVU4880
 14196              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14197              		.loc 3 100 10 is_stmt 0 view .LVU4881
 14198 4d65 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14198      000000
 14199 4d6c BA3A0000 		mov	edx, 58	#,
 14199      00
 14200 4d71 BE010000 		mov	esi, 1	#,
 14200      00
 14201 4d76 488D3D00 		lea	rdi, .LC16[rip]	#,
 14201      000000
 14202 4d7d E8000000 		call	fwrite@PLT	#
 14202      00
 14203              	.LVL839:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14204              		.loc 3 100 10 view .LVU4882
 14205              	.LBE730:
 14206              	.LBE729:
1047:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14207              		.loc 1 1047 5 is_stmt 1 view .LVU4883
 14208              	.LBB731:
 14209              	.LBI731:
GAS LISTING /tmp/ccW4ZvF5.s 			page 382


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14210              		.loc 3 98 1 view .LVU4884
 14211              	.LBB732:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14212              		.loc 3 100 3 view .LVU4885
 14213              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14214              		.loc 3 100 10 is_stmt 0 view .LVU4886
 14215 4d82 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14215      000000
 14216 4d89 BA2D0000 		mov	edx, 45	#,
 14216      00
 14217 4d8e BE010000 		mov	esi, 1	#,
 14217      00
 14218 4d93 488D3D00 		lea	rdi, .LC17[rip]	#,
 14218      000000
 14219 4d9a E8000000 		call	fwrite@PLT	#
 14219      00
 14220              	.LVL840:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14221              		.loc 3 100 10 view .LVU4887
 14222              	.LBE732:
 14223              	.LBE731:
1048:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14224              		.loc 1 1048 5 is_stmt 1 view .LVU4888
 14225              	.LBB733:
 14226              	.LBI733:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14227              		.loc 3 98 1 view .LVU4889
 14228              	.LBB734:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14229              		.loc 3 100 3 view .LVU4890
 14230              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14231              		.loc 3 100 10 is_stmt 0 view .LVU4891
 14232 4d9f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14232      000000
 14233 4da6 BA400000 		mov	edx, 64	#,
 14233      00
 14234 4dab BE010000 		mov	esi, 1	#,
 14234      00
 14235 4db0 488D3D00 		lea	rdi, .LC18[rip]	#,
 14235      000000
 14236 4db7 E8000000 		call	fwrite@PLT	#
 14236      00
 14237              	.LVL841:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14238              		.loc 3 100 10 view .LVU4892
 14239              	.LBE734:
 14240              	.LBE733:
1049:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14241              		.loc 1 1049 5 is_stmt 1 view .LVU4893
 14242              	.LBB735:
 14243              	.LBI735:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14244              		.loc 3 98 1 view .LVU4894
 14245              	.LBB736:
GAS LISTING /tmp/ccW4ZvF5.s 			page 383


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14246              		.loc 3 100 3 view .LVU4895
 14247              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14248              		.loc 3 100 10 is_stmt 0 view .LVU4896
 14249 4dbc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14249      000000
 14250 4dc3 BA2A0000 		mov	edx, 42	#,
 14250      00
 14251 4dc8 BE010000 		mov	esi, 1	#,
 14251      00
 14252 4dcd 488D3D00 		lea	rdi, .LC19[rip]	#,
 14252      000000
 14253 4dd4 E8000000 		call	fwrite@PLT	#
 14253      00
 14254              	.LVL842:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14255              		.loc 3 100 10 view .LVU4897
 14256              	.LBE736:
 14257              	.LBE735:
1050:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14258              		.loc 1 1050 5 is_stmt 1 view .LVU4898
 14259              	.LBB737:
 14260              	.LBI737:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14261              		.loc 3 98 1 view .LVU4899
 14262              	.LBB738:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14263              		.loc 3 100 3 view .LVU4900
 14264              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14265              		.loc 3 100 10 is_stmt 0 view .LVU4901
 14266 4dd9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14266      000000
 14267 4de0 BA3C0000 		mov	edx, 60	#,
 14267      00
 14268 4de5 BE010000 		mov	esi, 1	#,
 14268      00
 14269 4dea 488D3D00 		lea	rdi, .LC20[rip]	#,
 14269      000000
 14270 4df1 E8000000 		call	fwrite@PLT	#
 14270      00
 14271              	.LVL843:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14272              		.loc 3 100 10 view .LVU4902
 14273              	.LBE738:
 14274              	.LBE737:
1051:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14275              		.loc 1 1051 5 is_stmt 1 view .LVU4903
 14276              	.LBB739:
 14277              	.LBI739:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14278              		.loc 3 98 1 view .LVU4904
 14279              	.LBB740:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14280              		.loc 3 100 3 view .LVU4905
 14281              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccW4ZvF5.s 			page 384


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14282              		.loc 3 100 10 is_stmt 0 view .LVU4906
 14283 4df6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14283      000000
 14284 4dfd BA3D0000 		mov	edx, 61	#,
 14284      00
 14285 4e02 BE010000 		mov	esi, 1	#,
 14285      00
 14286 4e07 488D3D00 		lea	rdi, .LC21[rip]	#,
 14286      000000
 14287 4e0e E8000000 		call	fwrite@PLT	#
 14287      00
 14288              	.LVL844:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14289              		.loc 3 100 10 view .LVU4907
 14290              	.LBE740:
 14291              	.LBE739:
1052:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14292              		.loc 1 1052 5 is_stmt 1 view .LVU4908
 14293              	.LBB741:
 14294              	.LBI741:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14295              		.loc 3 98 1 view .LVU4909
 14296              	.LBB742:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14297              		.loc 3 100 3 view .LVU4910
 14298              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14299              		.loc 3 100 10 is_stmt 0 view .LVU4911
 14300 4e13 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14300      000000
 14301 4e1a BA4C0000 		mov	edx, 76	#,
 14301      00
 14302 4e1f BE010000 		mov	esi, 1	#,
 14302      00
 14303 4e24 488D3D00 		lea	rdi, .LC22[rip]	#,
 14303      000000
 14304 4e2b E8000000 		call	fwrite@PLT	#
 14304      00
 14305              	.LVL845:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14306              		.loc 3 100 10 view .LVU4912
 14307              	.LBE742:
 14308              	.LBE741:
1053:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14309              		.loc 1 1053 5 is_stmt 1 view .LVU4913
 14310              	.LBB743:
 14311              	.LBI743:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14312              		.loc 3 98 1 view .LVU4914
 14313              	.LBB744:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14314              		.loc 3 100 3 view .LVU4915
 14315              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14316              		.loc 3 100 10 is_stmt 0 view .LVU4916
 14317 4e30 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
GAS LISTING /tmp/ccW4ZvF5.s 			page 385


 14317      000000
 14318 4e37 BA250000 		mov	edx, 37	#,
 14318      00
 14319 4e3c BE010000 		mov	esi, 1	#,
 14319      00
 14320 4e41 488D3D00 		lea	rdi, .LC23[rip]	#,
 14320      000000
 14321 4e48 E8000000 		call	fwrite@PLT	#
 14321      00
 14322              	.LVL846:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14323              		.loc 3 100 10 view .LVU4917
 14324              	.LBE744:
 14325              	.LBE743:
1054:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14326              		.loc 1 1054 5 is_stmt 1 view .LVU4918
 14327              	.LBB745:
 14328              	.LBI745:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14329              		.loc 3 98 1 view .LVU4919
 14330              	.LBB746:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14331              		.loc 3 100 3 view .LVU4920
 14332              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14333              		.loc 3 100 10 is_stmt 0 view .LVU4921
 14334 4e4d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14334      000000
 14335 4e54 BA280000 		mov	edx, 40	#,
 14335      00
 14336 4e59 BE010000 		mov	esi, 1	#,
 14336      00
 14337 4e5e 488D3D00 		lea	rdi, .LC24[rip]	#,
 14337      000000
 14338 4e65 E8000000 		call	fwrite@PLT	#
 14338      00
 14339              	.LVL847:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14340              		.loc 3 100 10 view .LVU4922
 14341              	.LBE746:
 14342              	.LBE745:
1055:sieve_extend.c ****     exit(1);
 14343              		.loc 1 1055 5 is_stmt 1 view .LVU4923
 14344              	.LBB747:
 14345              	.LBI747:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14346              		.loc 3 98 1 view .LVU4924
 14347              	.LBB748:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14348              		.loc 3 100 3 view .LVU4925
 14349              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14350              		.loc 3 100 10 is_stmt 0 view .LVU4926
 14351 4e6a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14351      000000
 14352 4e71 488D3D00 		lea	rdi, .LC25[rip]	#,
 14352      000000
GAS LISTING /tmp/ccW4ZvF5.s 			page 386


 14353 4e78 BA350000 		mov	edx, 53	#,
 14353      00
 14354 4e7d BE010000 		mov	esi, 1	#,
 14354      00
 14355 4e82 E8000000 		call	fwrite@PLT	#
 14355      00
 14356              	.LVL848:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14357              		.loc 3 100 10 view .LVU4927
 14358              	.LBE748:
 14359              	.LBE747:
1056:sieve_extend.c **** }
 14360              		.loc 1 1056 5 is_stmt 1 view .LVU4928
 14361 4e87 BF010000 		mov	edi, 1	#,
 14361      00
 14362 4e8c E8000000 		call	exit@PLT	#
 14362      00
 14363              	.LVL849:
 14364              		.cfi_endproc
 14365              	.LFE85:
 14367              		.section	.rodata.str1.1
 14368              	.LC26:
 14369 003b 256400   		.string	"%d"
 14370              	.LC27:
 14371 003e 2C253033 		.string	",%03d"
 14371      6400
 14372              		.text
 14373 4e91 66662E0F 		.p2align 4
 14373      1F840000 
 14373      0000000F 
 14373      1F4000
 14374              		.globl	printfcomma2
 14376              	printfcomma2:
 14377              	.LVL850:
 14378              	.LFB90:
1102:sieve_extend.c **** 
1103:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1104:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1105:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1106:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1107:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1108:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1109:sieve_extend.c **** }
1110:sieve_extend.c **** 
1111:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1112:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1113:sieve_extend.c **** 
1114:sieve_extend.c ****     double best_avg = 0;
1115:sieve_extend.c ****     best_blocksize_bits = 0;
1116:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1117:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1118:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1119:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1120:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1121:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1122:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1123:sieve_extend.c ****     counter_t sample_max = default_sample_max;
GAS LISTING /tmp/ccW4ZvF5.s 			page 387


1124:sieve_extend.c ****     double sample_duration = default_sample_duration;
1125:sieve_extend.c **** 
1126:sieve_extend.c ****     // determines the size of the resultset
1127:sieve_extend.c ****     switch (tune_level) {
1128:sieve_extend.c ****         case 1:
1129:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1130:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1131:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1132:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1133:sieve_extend.c ****             sample_max = 8;
1134:sieve_extend.c ****             sample_duration = 0.1;
1135:sieve_extend.c ****             break;
1136:sieve_extend.c ****         case 2:
1137:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1138:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1139:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1140:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1141:sieve_extend.c ****             sample_max = 8;
1142:sieve_extend.c ****             sample_duration = 0.2;
1143:sieve_extend.c ****             break;
1144:sieve_extend.c ****         case 3:
1145:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1146:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1147:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1148:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1149:sieve_extend.c ****             sample_max = 8;
1150:sieve_extend.c ****             sample_duration = 0.2;
1151:sieve_extend.c ****             break;
1152:sieve_extend.c ****     }
1153:sieve_extend.c ****     
1154:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
1155:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
1156:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1157:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1158:sieve_extend.c ****     counter_t tuning_results=0;
1159:sieve_extend.c ****     counter_t tuning_result_index=0;
1160:sieve_extend.c ****     
1161:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1162:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1163:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1164:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1165:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1166:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1167:sieve_extend.c **** 
1168:sieve_extend.c ****                         // set variables
1169:sieve_extend.c ****                         tuning_results++;
1170:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1171:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1172:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1173:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1174:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1175:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1176:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1177:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1178:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1179:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1180:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 388


1181:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1182:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1183:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1184:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1185:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1186:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1187:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1188:sieve_extend.c ****                         }
1189:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1190:sieve_extend.c ****                         tuning_result_index++;
1191:sieve_extend.c ****                     }
1192:sieve_extend.c ****                 }
1193:sieve_extend.c ****             }
1194:sieve_extend.c ****         }
1195:sieve_extend.c ****     }
1196:sieve_extend.c ****     if (option_verboselevel >= 2) {
1197:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
1198:sieve_extend.c ****         printf("Best options\n");
1199:sieve_extend.c ****     }
1200:sieve_extend.c ****     counter_t step=0;
1201:sieve_extend.c ****     while (tuning_results>4) {
1202:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1203:sieve_extend.c ****         step++;
1204:sieve_extend.c ****         if (option_verboselevel >= 2) {
1205:sieve_extend.c ****             tuning_result_index = 0;
1206:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1207:sieve_extend.c ****             if (option_verboselevel >= 3) {
1208:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1209:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1210:sieve_extend.c ****                 }
1211:sieve_extend.c ****             }
1212:sieve_extend.c ****         }
1213:sieve_extend.c **** 
1214:sieve_extend.c ****         tuning_results = tuning_results / 2;
1215:sieve_extend.c **** 
1216:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1217:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1218:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1219:sieve_extend.c ****         }
1220:sieve_extend.c ****         
1221:sieve_extend.c ****     }
1222:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1223:sieve_extend.c ****     if (option_verboselevel >= 1) {
1224:sieve_extend.c ****         tuning_result_index = 0;
1225:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1226:sieve_extend.c ****     }
1227:sieve_extend.c **** 
1228:sieve_extend.c ****     free(tuning_result);
1229:sieve_extend.c ****     return best_result;
1230:sieve_extend.c **** }
1231:sieve_extend.c **** 
1232:sieve_extend.c **** void printfcomma2 (int n) {
 14379              		.loc 1 1232 27 view -0
 14380              		.cfi_startproc
 14381              		.loc 1 1232 27 is_stmt 0 view .LVU4930
 14382 4ea0 F30F1EFA 		endbr64	
1233:sieve_extend.c ****     if (n < 1000) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 389


 14383              		.loc 1 1233 5 is_stmt 1 view .LVU4931
 14384              	# sieve_extend.c:1232: void printfcomma2 (int n) {
1232:sieve_extend.c ****     if (n < 1000) {
 14385              		.loc 1 1232 27 is_stmt 0 view .LVU4932
 14386 4ea4 4154     		push	r12	#
 14387              		.cfi_def_cfa_offset 16
 14388              		.cfi_offset 12, -16
 14389              	.LBB759:
 14390              	.LBB760:
 14391              	.LBB761:
 14392              	.LBB762:
 14393              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14394              		.loc 3 107 10 view .LVU4933
 14395 4ea6 89FA     		mov	edx, edi	#, n
 14396              	.LBE762:
 14397              	.LBE761:
 14398              	.LBE760:
 14399              	.LBE759:
 14400              	# sieve_extend.c:1232: void printfcomma2 (int n) {
1232:sieve_extend.c ****     if (n < 1000) {
 14401              		.loc 1 1232 27 view .LVU4934
 14402 4ea8 4189FC   		mov	r12d, edi	# n, tmp99
 14403 4eab 53       		push	rbx	#
 14404              		.cfi_def_cfa_offset 24
 14405              		.cfi_offset 3, -24
 14406              	.LBB766:
 14407              	.LBB765:
 14408              	.LBB764:
 14409              	.LBB763:
 14410              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14411              		.loc 3 107 10 view .LVU4935
 14412 4eac 488D3500 		lea	rsi, .LC26[rip]	#,
 14412      000000
 14413              	.LBE763:
 14414              	.LBE764:
 14415              	.LBE765:
 14416              	.LBE766:
 14417              	# sieve_extend.c:1232: void printfcomma2 (int n) {
1232:sieve_extend.c ****     if (n < 1000) {
 14418              		.loc 1 1232 27 view .LVU4936
 14419 4eb3 488D6424 		lea	rsp, -8[rsp]	#,
 14419      F8
 14420              		.cfi_def_cfa_offset 32
 14421              	# sieve_extend.c:1233:     if (n < 1000) {
 14422              		.loc 1 1233 8 view .LVU4937
 14423 4eb8 81FFE703 		cmp	edi, 999	# n,
 14423      0000
 14424 4ebe 7E2E     		jle	.L1172	#,
1234:sieve_extend.c ****         printf ("%d", n);
1235:sieve_extend.c ****         return;
1236:sieve_extend.c ****     }
1237:sieve_extend.c ****     printfcomma2 (n/1000);
 14425              		.loc 1 1237 5 is_stmt 1 view .LVU4938
 14426 4ec0 4863DF   		movsx	rbx, edi	# n, n
 14427 4ec3 89F8     		mov	eax, edi	# tmp90, n
 14428 4ec5 4869DBD3 		imul	rbx, rbx, 274877907	# tmp87, n,
 14428      4D6210
GAS LISTING /tmp/ccW4ZvF5.s 			page 390


 14429 4ecc C1F81F   		sar	eax, 31	# tmp90,
 14430 4ecf 48C1FB26 		sar	rbx, 38	# tmp89,
 14431 4ed3 29C3     		sub	ebx, eax	# tmp85, tmp90
 14432 4ed5 89DF     		mov	edi, ebx	#, tmp85
 14433              	.LVL851:
 14434              		.loc 1 1237 5 is_stmt 0 view .LVU4939
 14435 4ed7 E8000000 		call	printfcomma2	#
 14435      00
 14436              	.LVL852:
1238:sieve_extend.c ****     printf (",%03d", n%1000);
 14437              		.loc 1 1238 5 is_stmt 1 view .LVU4940
 14438              	.LBB767:
 14439              	.LBI767:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14440              		.loc 3 105 1 view .LVU4941
 14441              	.LBB768:
 14442              		.loc 3 107 3 view .LVU4942
 14443              	.LBE768:
 14444              	.LBE767:
 14445              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
 14446              		.loc 1 1238 5 is_stmt 0 view .LVU4943
 14447 4edc 69CBE803 		imul	ecx, ebx, 1000	# tmp97, tmp85,
 14447      0000
 14448 4ee2 4489E2   		mov	edx, r12d	# n, n
 14449              	.LBB773:
 14450              	.LBB769:
 14451              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14452              		.loc 3 107 10 view .LVU4944
 14453 4ee5 488D3500 		lea	rsi, .LC27[rip]	#,
 14453      000000
 14454              	.LBE769:
 14455              	.LBE773:
 14456              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
 14457              		.loc 1 1238 5 view .LVU4945
 14458 4eec 29CA     		sub	edx, ecx	# n, tmp97
 14459              	.LVL853:
 14460              	.L1172:
 14461              	# sieve_extend.c:1239: }
1239:sieve_extend.c **** }
 14462              		.loc 1 1239 1 view .LVU4946
 14463 4eee 488D6424 		lea	rsp, 8[rsp]	#,
 14463      08
 14464              		.cfi_def_cfa_offset 24
 14465              	.LBB774:
 14466              	.LBB770:
 14467              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14468              		.loc 3 107 10 view .LVU4947
 14469 4ef3 BF010000 		mov	edi, 1	#,
 14469      00
 14470              	.LBE770:
 14471              	.LBE774:
 14472              	# sieve_extend.c:1239: }
 14473              		.loc 1 1239 1 view .LVU4948
 14474 4ef8 5B       		pop	rbx	#
 14475              		.cfi_def_cfa_offset 16
 14476              	.LBB775:
 14477              	.LBB771:
GAS LISTING /tmp/ccW4ZvF5.s 			page 391


 14478              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14479              		.loc 3 107 10 view .LVU4949
 14480 4ef9 31C0     		xor	eax, eax	#
 14481              	.LBE771:
 14482              	.LBE775:
 14483              	# sieve_extend.c:1239: }
 14484              		.loc 1 1239 1 view .LVU4950
 14485 4efb 415C     		pop	r12	#
 14486              		.cfi_def_cfa_offset 8
 14487              	.LVL854:
 14488              	.LBB776:
 14489              	.LBB772:
 14490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14491              		.loc 3 107 10 view .LVU4951
 14492 4efd E9000000 		jmp	__printf_chk@PLT	#
 14492      00
 14493              	.LVL855:
 14494              	.LBE772:
 14495              	.LBE776:
 14496              		.cfi_endproc
 14497              	.LFE90:
 14499 4f02 66662E0F 		.p2align 4
 14499      1F840000 
 14499      0000000F 
 14499      1F00
 14500              		.globl	printfcomma
 14502              	printfcomma:
 14503              	.LVL856:
 14504              	.LFB91:
1240:sieve_extend.c **** 
1241:sieve_extend.c **** void printfcomma (int n) {
 14505              		.loc 1 1241 26 is_stmt 1 view -0
 14506              		.cfi_startproc
 14507              		.loc 1 1241 26 is_stmt 0 view .LVU4953
 14508 4f10 F30F1EFA 		endbr64	
1242:sieve_extend.c ****     if (n < 0) {
 14509              		.loc 1 1242 5 is_stmt 1 view .LVU4954
 14510              	# sieve_extend.c:1241: void printfcomma (int n) {
1241:sieve_extend.c ****     if (n < 0) {
 14511              		.loc 1 1241 26 is_stmt 0 view .LVU4955
 14512 4f14 4157     		push	r15	#
 14513              		.cfi_def_cfa_offset 16
 14514              		.cfi_offset 15, -16
 14515 4f16 4156     		push	r14	#
 14516              		.cfi_def_cfa_offset 24
 14517              		.cfi_offset 14, -24
 14518 4f18 4155     		push	r13	#
 14519              		.cfi_def_cfa_offset 32
 14520              		.cfi_offset 13, -32
 14521 4f1a 4154     		push	r12	#
 14522              		.cfi_def_cfa_offset 40
 14523              		.cfi_offset 12, -40
 14524 4f1c 4189FC   		mov	r12d, edi	# n, tmp159
 14525 4f1f 55       		push	rbp	#
 14526              		.cfi_def_cfa_offset 48
 14527              		.cfi_offset 6, -48
 14528 4f20 53       		push	rbx	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 392


 14529              		.cfi_def_cfa_offset 56
 14530              		.cfi_offset 3, -56
 14531 4f21 488D6424 		lea	rsp, -8[rsp]	#,
 14531      F8
 14532              		.cfi_def_cfa_offset 64
 14533              	# sieve_extend.c:1242:     if (n < 0) {
 14534              		.loc 1 1242 8 view .LVU4956
 14535 4f26 85FF     		test	edi, edi	# n
 14536 4f28 0F880A01 		js	.L1182	#,
 14536      0000
 14537              	.LVL857:
 14538              	.L1174:
1243:sieve_extend.c ****         printf ("-");
1244:sieve_extend.c ****         n = -n;
1245:sieve_extend.c ****     }
1246:sieve_extend.c ****     printfcomma2 (n);
 14539              		.loc 1 1246 5 is_stmt 1 view .LVU4957
 14540              	.LBB829:
 14541              	.LBI829:
1232:sieve_extend.c ****     if (n < 1000) {
 14542              		.loc 1 1232 6 view .LVU4958
 14543              	.LBB830:
1233:sieve_extend.c ****         printf ("%d", n);
 14544              		.loc 1 1233 5 view .LVU4959
 14545              	# sieve_extend.c:1233:     if (n < 1000) {
1233:sieve_extend.c ****         printf ("%d", n);
 14546              		.loc 1 1233 8 is_stmt 0 view .LVU4960
 14547 4f2e 4181FCE7 		cmp	r12d, 999	# n,
 14547      030000
 14548              	.LBB831:
 14549              	.LBB832:
 14550              	.LBB833:
 14551              	.LBB834:
 14552              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14553              		.loc 3 107 10 view .LVU4961
 14554 4f35 4489E2   		mov	edx, r12d	#, n
 14555 4f38 488D3500 		lea	rsi, .LC26[rip]	#,
 14555      000000
 14556              	.LBE834:
 14557              	.LBE833:
 14558              	.LBE832:
 14559              	.LBE831:
 14560              	# sieve_extend.c:1233:     if (n < 1000) {
1233:sieve_extend.c ****         printf ("%d", n);
 14561              		.loc 1 1233 8 view .LVU4962
 14562 4f3f 0F8EBF00 		jle	.L1181	#,
 14562      0000
 14563              	.LVL858:
1237:sieve_extend.c ****     printf (",%03d", n%1000);
 14564              		.loc 1 1237 5 is_stmt 1 view .LVU4963
 14565 4f45 4489E3   		mov	ebx, r12d	# n, n
 14566 4f48 4C69EBD3 		imul	r13, rbx, 274877907	# tmp90, n,
 14566      4D6210
 14567 4f4f 49C1ED26 		shr	r13, 38	# _8,
 14568              	.LVL859:
 14569              	.LBB835:
 14570              	.LBI835:
GAS LISTING /tmp/ccW4ZvF5.s 			page 393


1232:sieve_extend.c ****     if (n < 1000) {
 14571              		.loc 1 1232 6 view .LVU4964
 14572              	.LBB836:
1233:sieve_extend.c ****         printf ("%d", n);
 14573              		.loc 1 1233 5 view .LVU4965
 14574              	# sieve_extend.c:1233:     if (n < 1000) {
1233:sieve_extend.c ****         printf ("%d", n);
 14575              		.loc 1 1233 8 is_stmt 0 view .LVU4966
 14576 4f53 4181FC3F 		cmp	r12d, 999999	# n,
 14576      420F00
 14577 4f5a 0F8EC000 		jle	.L1183	#,
 14577      0000
1237:sieve_extend.c ****     printf (",%03d", n%1000);
 14578              		.loc 1 1237 5 is_stmt 1 view .LVU4967
 14579 4f60 4489ED   		mov	ebp, r13d	# _8, _8
 14580 4f63 4C69F5D3 		imul	r14, rbp, 274877907	# tmp98, _8,
 14580      4D6210
 14581 4f6a 49C1EE26 		shr	r14, 38	# _10,
 14582              	.LVL860:
 14583              	.LBB837:
 14584              	.LBI837:
1232:sieve_extend.c ****     if (n < 1000) {
 14585              		.loc 1 1232 6 view .LVU4968
 14586              	.LBB838:
1233:sieve_extend.c ****         printf ("%d", n);
 14587              		.loc 1 1233 5 view .LVU4969
 14588              	# sieve_extend.c:1233:     if (n < 1000) {
1233:sieve_extend.c ****         printf ("%d", n);
 14589              		.loc 1 1233 8 is_stmt 0 view .LVU4970
 14590 4f6e 4181FCFF 		cmp	r12d, 999999999	# n,
 14590      C99A3B
 14591 4f75 0F8ED500 		jle	.L1184	#,
 14591      0000
1237:sieve_extend.c ****     printf (",%03d", n%1000);
 14592              		.loc 1 1237 5 is_stmt 1 view .LVU4971
 14593              	.LVL861:
 14594              	.LBB839:
 14595              	.LBI839:
1232:sieve_extend.c ****     if (n < 1000) {
 14596              		.loc 1 1232 6 view .LVU4972
 14597              	.LBE839:
 14598              	.LBE838:
 14599              	.LBE837:
 14600              	.LBE836:
 14601              	.LBE835:
 14602              	.LBE830:
 14603              	.LBE829:
1233:sieve_extend.c ****         printf ("%d", n);
 14604              		.loc 1 1233 5 view .LVU4973
 14605              	.LBB905:
 14606              	.LBB900:
 14607              	.LBB887:
 14608              	.LBB884:
 14609              	.LBB872:
 14610              	.LBB870:
 14611              	.LBB856:
 14612              	.LBB840:
GAS LISTING /tmp/ccW4ZvF5.s 			page 394


 14613              	.LBI840:
1232:sieve_extend.c ****     if (n < 1000) {
 14614              		.loc 1 1232 6 view .LVU4974
 14615              	.LBB841:
1234:sieve_extend.c ****         return;
 14616              		.loc 1 1234 9 view .LVU4975
 14617              	.LBB842:
 14618              	.LBI842:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14619              		.loc 3 105 1 view .LVU4976
 14620              	.LBB843:
 14621              		.loc 3 107 3 view .LVU4977
 14622              	.LBE843:
 14623              	.LBE842:
 14624              	.LBE841:
 14625              	.LBE840:
 14626              	.LBE856:
 14627              	# sieve_extend.c:1237:     printfcomma2 (n/1000);
1237:sieve_extend.c ****     printf (",%03d", n%1000);
 14628              		.loc 1 1237 5 is_stmt 0 view .LVU4978
 14629 4f7b 4589F7   		mov	r15d, r14d	# _10, _10
 14630              	.LBB857:
 14631              	.LBB853:
 14632              	.LBB850:
 14633              	.LBB847:
 14634              	.LBB844:
 14635              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14636              		.loc 3 107 10 view .LVU4979
 14637 4f7e 488D3500 		lea	rsi, .LC26[rip]	#,
 14637      000000
 14638              	.LBE844:
 14639              	.LBE847:
 14640              	.LBE850:
 14641              	.LBE853:
 14642              	.LBE857:
 14643              	# sieve_extend.c:1237:     printfcomma2 (n/1000);
1237:sieve_extend.c ****     printf (",%03d", n%1000);
 14644              		.loc 1 1237 5 view .LVU4980
 14645 4f85 4D69FFD3 		imul	r15, r15, 274877907	# tmp107, _10,
 14645      4D6210
 14646              	.LBB858:
 14647              	.LBB854:
 14648              	.LBB851:
 14649              	.LBB848:
 14650              	.LBB845:
 14651              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14652              		.loc 3 107 10 view .LVU4981
 14653 4f8c BF010000 		mov	edi, 1	#,
 14653      00
 14654 4f91 31C0     		xor	eax, eax	#
 14655              	.LBE845:
 14656              	.LBE848:
 14657              	.LBE851:
 14658              	.LBE854:
 14659              	.LBE858:
 14660              	# sieve_extend.c:1237:     printfcomma2 (n/1000);
1237:sieve_extend.c ****     printf (",%03d", n%1000);
GAS LISTING /tmp/ccW4ZvF5.s 			page 395


 14661              		.loc 1 1237 5 view .LVU4982
 14662 4f93 49C1EF26 		shr	r15, 38	# tmp105,
 14663              	.LBB859:
 14664              	.LBB855:
 14665              	.LBB852:
 14666              	.LBB849:
 14667              	.LBB846:
 14668              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14669              		.loc 3 107 10 view .LVU4983
 14670 4f97 4489FA   		mov	edx, r15d	#, tmp105
 14671              	.LVL862:
 14672              		.loc 3 107 10 view .LVU4984
 14673 4f9a E8000000 		call	__printf_chk@PLT	#
 14673      00
 14674              	.LVL863:
 14675              		.loc 3 107 10 view .LVU4985
 14676              	.LBE846:
 14677              	.LBE849:
1235:sieve_extend.c ****     }
 14678              		.loc 1 1235 9 is_stmt 1 view .LVU4986
1235:sieve_extend.c ****     }
 14679              		.loc 1 1235 9 is_stmt 0 view .LVU4987
 14680              	.LBE852:
 14681              	.LBE855:
 14682              	.LBE859:
1238:sieve_extend.c **** }
 14683              		.loc 1 1238 5 is_stmt 1 view .LVU4988
 14684              	.LBB860:
 14685              	.LBI860:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14686              		.loc 3 105 1 view .LVU4989
 14687              	.LBB861:
 14688              		.loc 3 107 3 view .LVU4990
 14689              	.LBE861:
 14690              	.LBE860:
 14691              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14692              		.loc 1 1238 5 is_stmt 0 view .LVU4991
 14693 4f9f 4169C7E8 		imul	eax, r15d, 1000	# tmp119, tmp105,
 14693      030000
 14694 4fa6 4489F2   		mov	edx, r14d	# _10, _10
 14695              	.LBB864:
 14696              	.LBB862:
 14697              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14698              		.loc 3 107 10 view .LVU4992
 14699 4fa9 488D3500 		lea	rsi, .LC27[rip]	#,
 14699      000000
 14700 4fb0 BF010000 		mov	edi, 1	#,
 14700      00
 14701              	.LBE862:
 14702              	.LBE864:
 14703              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14704              		.loc 1 1238 5 view .LVU4993
 14705 4fb5 29C2     		sub	edx, eax	# _10, tmp119
 14706              	.LBB865:
 14707              	.LBB863:
GAS LISTING /tmp/ccW4ZvF5.s 			page 396


 14708              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14709              		.loc 3 107 10 view .LVU4994
 14710 4fb7 31C0     		xor	eax, eax	#
 14711 4fb9 E8000000 		call	__printf_chk@PLT	#
 14711      00
 14712              	.LVL864:
 14713              	.L1179:
 14714              		.loc 3 107 10 view .LVU4995
 14715              	.LBE863:
 14716              	.LBE865:
 14717              	.LBE870:
 14718              	.LBE872:
1238:sieve_extend.c **** }
 14719              		.loc 1 1238 5 is_stmt 1 view .LVU4996
 14720              	.LBB873:
 14721              	.LBI873:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14722              		.loc 3 105 1 view .LVU4997
 14723              	.LBB874:
 14724              		.loc 3 107 3 view .LVU4998
 14725              	.LBE874:
 14726              	.LBE873:
 14727              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14728              		.loc 1 1238 5 is_stmt 0 view .LVU4999
 14729 4fbe 4869D5D3 		imul	rdx, rbp, 274877907	# tmp131, _8,
 14729      4D6210
 14730              	.LBB877:
 14731              	.LBB875:
 14732              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14733              		.loc 3 107 10 view .LVU5000
 14734 4fc5 488D3500 		lea	rsi, .LC27[rip]	#,
 14734      000000
 14735 4fcc BF010000 		mov	edi, 1	#,
 14735      00
 14736 4fd1 31C0     		xor	eax, eax	#
 14737              	.LBE875:
 14738              	.LBE877:
 14739              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14740              		.loc 1 1238 5 view .LVU5001
 14741 4fd3 48C1EA26 		shr	rdx, 38	# tmp129,
 14742 4fd7 69CAE803 		imul	ecx, edx, 1000	# tmp133, tmp129,
 14742      0000
 14743 4fdd 4489EA   		mov	edx, r13d	# _8, _8
 14744 4fe0 29CA     		sub	edx, ecx	# _8, tmp133
 14745              	.LBB878:
 14746              	.LBB876:
 14747              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14748              		.loc 3 107 10 view .LVU5002
 14749 4fe2 E8000000 		call	__printf_chk@PLT	#
 14749      00
 14750              	.LVL865:
 14751              	.L1177:
 14752              		.loc 3 107 10 view .LVU5003
 14753              	.LBE876:
 14754              	.LBE878:
GAS LISTING /tmp/ccW4ZvF5.s 			page 397


 14755              	.LBE884:
 14756              	.LBE887:
1238:sieve_extend.c **** }
 14757              		.loc 1 1238 5 is_stmt 1 view .LVU5004
 14758              	.LBB888:
 14759              	.LBI888:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14760              		.loc 3 105 1 view .LVU5005
 14761              	.LBB889:
 14762              		.loc 3 107 3 view .LVU5006
 14763              	.LBE889:
 14764              	.LBE888:
 14765              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14766              		.loc 1 1238 5 is_stmt 0 view .LVU5007
 14767 4fe7 4869F3D3 		imul	rsi, rbx, 274877907	# tmp145, n,
 14767      4D6210
 14768 4fee 4489E2   		mov	edx, r12d	# n, n
 14769 4ff1 48C1EE26 		shr	rsi, 38	# tmp143,
 14770 4ff5 69FEE803 		imul	edi, esi, 1000	# tmp147, tmp143,
 14770      0000
 14771              	.LBB894:
 14772              	.LBB890:
 14773              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14774              		.loc 3 107 10 view .LVU5008
 14775 4ffb 488D3500 		lea	rsi, .LC27[rip]	#,
 14775      000000
 14776              	.LBE890:
 14777              	.LBE894:
 14778              	# sieve_extend.c:1238:     printf (",%03d", n%1000);
1238:sieve_extend.c **** }
 14779              		.loc 1 1238 5 view .LVU5009
 14780 5002 29FA     		sub	edx, edi	# n, tmp147
 14781              	.LVL866:
 14782              	.L1181:
1238:sieve_extend.c **** }
 14783              		.loc 1 1238 5 view .LVU5010
 14784              	.LBE900:
 14785              	.LBE905:
 14786              	# sieve_extend.c:1247: }
1247:sieve_extend.c **** }
 14787              		.loc 1 1247 1 view .LVU5011
 14788 5004 488D6424 		lea	rsp, 8[rsp]	#,
 14788      08
 14789              		.cfi_remember_state
 14790              		.cfi_def_cfa_offset 56
 14791              	.LBB906:
 14792              	.LBB901:
 14793              	.LBB895:
 14794              	.LBB891:
 14795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14796              		.loc 3 107 10 view .LVU5012
 14797 5009 BF010000 		mov	edi, 1	#,
 14797      00
 14798              	.LBE891:
 14799              	.LBE895:
 14800              	.LBE901:
GAS LISTING /tmp/ccW4ZvF5.s 			page 398


 14801              	.LBE906:
 14802              	# sieve_extend.c:1247: }
 14803              		.loc 1 1247 1 view .LVU5013
 14804 500e 5B       		pop	rbx	#
 14805              		.cfi_def_cfa_offset 48
 14806              	.LBB907:
 14807              	.LBB902:
 14808              	.LBB896:
 14809              	.LBB892:
 14810              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14811              		.loc 3 107 10 view .LVU5014
 14812 500f 31C0     		xor	eax, eax	#
 14813              	.LBE892:
 14814              	.LBE896:
 14815              	.LBE902:
 14816              	.LBE907:
 14817              	# sieve_extend.c:1247: }
 14818              		.loc 1 1247 1 view .LVU5015
 14819 5011 5D       		pop	rbp	#
 14820              		.cfi_def_cfa_offset 40
 14821 5012 415C     		pop	r12	#
 14822              		.cfi_def_cfa_offset 32
 14823              	.LVL867:
 14824              		.loc 1 1247 1 view .LVU5016
 14825 5014 415D     		pop	r13	#
 14826              		.cfi_def_cfa_offset 24
 14827 5016 415E     		pop	r14	#
 14828              		.cfi_def_cfa_offset 16
 14829 5018 415F     		pop	r15	#
 14830              		.cfi_def_cfa_offset 8
 14831              	.LBB908:
 14832              	.LBB903:
 14833              	.LBB897:
 14834              	.LBB893:
 14835              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14836              		.loc 3 107 10 view .LVU5017
 14837 501a E9000000 		jmp	__printf_chk@PLT	#
 14837      00
 14838              	.LVL868:
 14839 501f 90       		.p2align 4,,7
 14840              		.p2align 3
 14841              	.L1183:
 14842              		.cfi_restore_state
 14843              		.loc 3 107 10 view .LVU5018
 14844              	.LBE893:
 14845              	.LBE897:
 14846              	.LBB898:
 14847              	.LBB885:
 14848              	.LBB879:
 14849              	.LBI879:
1232:sieve_extend.c ****     if (n < 1000) {
 14850              		.loc 1 1232 6 is_stmt 1 view .LVU5019
 14851              	.LBB880:
1234:sieve_extend.c ****         return;
 14852              		.loc 1 1234 9 view .LVU5020
 14853              	.LBB881:
 14854              	.LBI881:
GAS LISTING /tmp/ccW4ZvF5.s 			page 399


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14855              		.loc 3 105 1 view .LVU5021
 14856              	.LBB882:
 14857              		.loc 3 107 3 view .LVU5022
 14858              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14859              		.loc 3 107 10 is_stmt 0 view .LVU5023
 14860 5020 4489EA   		mov	edx, r13d	#, _8
 14861              	.LVL869:
 14862              		.loc 3 107 10 view .LVU5024
 14863 5023 488D3500 		lea	rsi, .LC26[rip]	#,
 14863      000000
 14864 502a BF010000 		mov	edi, 1	#,
 14864      00
 14865 502f 31C0     		xor	eax, eax	#
 14866 5031 E8000000 		call	__printf_chk@PLT	#
 14866      00
 14867              	.LVL870:
 14868              		.loc 3 107 10 view .LVU5025
 14869              	.LBE882:
 14870              	.LBE881:
1235:sieve_extend.c ****     }
 14871              		.loc 1 1235 9 is_stmt 1 view .LVU5026
 14872 5036 EBAF     		jmp	.L1177	#
 14873              	.LVL871:
 14874              		.p2align 4,,7
 14875              		.p2align 3
 14876              	.L1182:
1235:sieve_extend.c ****     }
 14877              		.loc 1 1235 9 is_stmt 0 view .LVU5027
 14878              	.LBE880:
 14879              	.LBE879:
 14880              	.LBE885:
 14881              	.LBE898:
 14882              	.LBE903:
 14883              	.LBE908:
1243:sieve_extend.c ****         n = -n;
 14884              		.loc 1 1243 9 is_stmt 1 view .LVU5028
 14885              	.LBB909:
 14886              	.LBI909:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14887              		.loc 3 105 1 view .LVU5029
 14888              	.LBB910:
 14889              		.loc 3 107 3 view .LVU5030
 14890              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14891              		.loc 3 107 10 is_stmt 0 view .LVU5031
 14892 5038 BF2D0000 		mov	edi, 45	#,
 14892      00
 14893              	.LVL872:
 14894              		.loc 3 107 10 view .LVU5032
 14895              	.LBE910:
 14896              	.LBE909:
 14897              	# sieve_extend.c:1244:         n = -n;
1244:sieve_extend.c ****     }
 14898              		.loc 1 1244 11 view .LVU5033
 14899 503d 41F7DC   		neg	r12d	# n
 14900              	.LVL873:
 14901              	.LBB912:
GAS LISTING /tmp/ccW4ZvF5.s 			page 400


 14902              	.LBB911:
 14903              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14904              		.loc 3 107 10 view .LVU5034
 14905 5040 E8000000 		call	putchar@PLT	#
 14905      00
 14906              	.LVL874:
 14907              		.loc 3 107 10 view .LVU5035
 14908              	.LBE911:
 14909              	.LBE912:
1244:sieve_extend.c ****     }
 14910              		.loc 1 1244 9 is_stmt 1 view .LVU5036
1244:sieve_extend.c ****     }
 14911              		.loc 1 1244 9 is_stmt 0 view .LVU5037
 14912 5045 E9E4FEFF 		jmp	.L1174	#
 14912      FF
 14913              	.LVL875:
 14914 504a 660F1F44 		.p2align 4,,7
 14914      0000
 14915              		.p2align 3
 14916              	.L1184:
 14917              	.LBB913:
 14918              	.LBB904:
 14919              	.LBB899:
 14920              	.LBB886:
 14921              	.LBB883:
 14922              	.LBB871:
 14923              	.LBB866:
 14924              	.LBI866:
1232:sieve_extend.c ****     if (n < 1000) {
 14925              		.loc 1 1232 6 is_stmt 1 view .LVU5038
 14926              	.LBB867:
1234:sieve_extend.c ****         return;
 14927              		.loc 1 1234 9 view .LVU5039
 14928              	.LBB868:
 14929              	.LBI868:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14930              		.loc 3 105 1 view .LVU5040
 14931              	.LBB869:
 14932              		.loc 3 107 3 view .LVU5041
 14933              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14934              		.loc 3 107 10 is_stmt 0 view .LVU5042
 14935 5050 4489F2   		mov	edx, r14d	#, _10
 14936              	.LVL876:
 14937              		.loc 3 107 10 view .LVU5043
 14938 5053 488D3500 		lea	rsi, .LC26[rip]	#,
 14938      000000
 14939 505a BF010000 		mov	edi, 1	#,
 14939      00
 14940 505f 31C0     		xor	eax, eax	#
 14941 5061 E8000000 		call	__printf_chk@PLT	#
 14941      00
 14942              	.LVL877:
 14943              		.loc 3 107 10 view .LVU5044
 14944              	.LBE869:
 14945              	.LBE868:
1235:sieve_extend.c ****     }
 14946              		.loc 1 1235 9 is_stmt 1 view .LVU5045
GAS LISTING /tmp/ccW4ZvF5.s 			page 401


 14947 5066 E953FFFF 		jmp	.L1179	#
 14947      FF
 14948              	.LBE867:
 14949              	.LBE866:
 14950              	.LBE871:
 14951              	.LBE883:
 14952              	.LBE886:
 14953              	.LBE899:
 14954              	.LBE904:
 14955              	.LBE913:
 14956              		.cfi_endproc
 14957              	.LFE91:
 14959 506b 0F1F4400 		.p2align 4
 14959      00
 14960              		.globl	benchmark
 14962              	benchmark:
 14963              	.LVL878:
 14964              	.LFB92:
1248:sieve_extend.c **** 
1249:sieve_extend.c **** int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bitword_t* bitarray, count
 14965              		.loc 1 1249 111 view -0
 14966              		.cfi_startproc
 14967              		.loc 1 1249 111 is_stmt 0 view .LVU5047
 14968 5070 F30F1EFA 		endbr64	
 14969 5074 4157     		push	r15	#
 14970              		.cfi_def_cfa_offset 16
 14971              		.cfi_offset 15, -16
 14972 5076 4156     		push	r14	#
 14973              		.cfi_def_cfa_offset 24
 14974              		.cfi_offset 14, -24
 14975 5078 4155     		push	r13	#
 14976              		.cfi_def_cfa_offset 32
 14977              		.cfi_offset 13, -32
 14978 507a 4989D5   		mov	r13, rdx	# max, tmp138
 14979 507d 4154     		push	r12	#
 14980              		.cfi_def_cfa_offset 40
 14981              		.cfi_offset 12, -40
 14982              	# sieve_extend.c:1251:     int passes = 0;
1250:sieve_extend.c ****     struct timespec start_time,end_time;
1251:sieve_extend.c ****     int passes = 0;
 14983              		.loc 1 1251 9 view .LVU5048
 14984 507f 4531E4   		xor	r12d, r12d	# <retval>
 14985              	# sieve_extend.c:1249: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1249:sieve_extend.c ****     struct timespec start_time,end_time;
 14986              		.loc 1 1249 111 view .LVU5049
 14987 5082 55       		push	rbp	#
 14988              		.cfi_def_cfa_offset 48
 14989              		.cfi_offset 6, -48
 14990 5083 4889F5   		mov	rbp, rsi	# bitarray, tmp137
 14991 5086 53       		push	rbx	#
 14992              		.cfi_def_cfa_offset 56
 14993              		.cfi_offset 3, -56
 14994 5087 4889FB   		mov	rbx, rdi	# function, tmp136
 14995              	# sieve_extend.c:1253:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1252:sieve_extend.c ****     double elapsed_time = 0;
1253:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 14996              		.loc 1 1253 5 view .LVU5050
GAS LISTING /tmp/ccW4ZvF5.s 			page 402


 14997 508a BF010000 		mov	edi, 1	#,
 14997      00
 14998              	.LVL879:
 14999              	# sieve_extend.c:1249: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1249:sieve_extend.c ****     struct timespec start_time,end_time;
 15000              		.loc 1 1249 111 view .LVU5051
 15001 508f 488D6424 		lea	rsp, -72[rsp]	#,
 15001      B8
 15002              		.cfi_def_cfa_offset 128
 15003              	# sieve_extend.c:1249: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1249:sieve_extend.c ****     struct timespec start_time,end_time;
 15004              		.loc 1 1249 111 view .LVU5052
 15005 5094 C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, tmp135
 15005      2408
 15006              	# sieve_extend.c:1253:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15007              		.loc 1 1253 5 view .LVU5053
 15008 509a 488D7424 		lea	rsi, 16[rsp]	# tmp99,
 15008      10
 15009              	.LVL880:
 15010              	# sieve_extend.c:1249: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1249:sieve_extend.c ****     struct timespec start_time,end_time;
 15011              		.loc 1 1249 111 view .LVU5054
 15012 509f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp139, MEM[(<address-space-1> long unsigned int *)40B]
 15012      25280000 
 15012      00
 15013 50a8 48894424 		mov	QWORD PTR 56[rsp], rax	# D.7397, tmp139
 15013      38
 15014 50ad 31C0     		xor	eax, eax	# tmp139
1250:sieve_extend.c ****     int passes = 0;
 15015              		.loc 1 1250 5 is_stmt 1 view .LVU5055
1251:sieve_extend.c ****     double elapsed_time = 0;
 15016              		.loc 1 1251 5 view .LVU5056
 15017              	.LVL881:
1252:sieve_extend.c ****     double elapsed_time = 0;
 15018              		.loc 1 1252 5 view .LVU5057
 15019              		.loc 1 1253 5 view .LVU5058
 15020 50af E8000000 		call	clock_gettime@PLT	#
 15020      00
 15021              	.LVL882:
1254:sieve_extend.c ****     while (elapsed_time <= max_time) {
 15022              		.loc 1 1254 5 view .LVU5059
 15023              		.loc 1 1254 11 view .LVU5060
 15024 50b4 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# max_time, %sfp
 15024      2408
 15025 50ba C5F92F2D 		vcomisd	xmm5, QWORD PTR .LC6[rip]	# max_time,
 15025      00000000 
 15026 50c2 0F827801 		jb	.L1185	#,
 15026      0000
 15027 50c8 4C8D7424 		lea	r14, 32[rsp]	# tmp111,
 15027      20
 15028              	.LVL883:
 15029              	.L1188:
1255:sieve_extend.c ****         function(bitarray, max);
 15030              		.loc 1 1255 9 view .LVU5061
 15031 50cd 4C89EE   		mov	rsi, r13	#, max
 15032 50d0 4889EF   		mov	rdi, rbp	#, bitarray
 15033 50d3 FFD3     		call	rbx	# function
GAS LISTING /tmp/ccW4ZvF5.s 			page 403


 15034              	.LVL884:
1256:sieve_extend.c ****         passes++;
 15035              		.loc 1 1256 9 view .LVU5062
 15036              	# sieve_extend.c:1257:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1257:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15037              		.loc 1 1257 9 is_stmt 0 view .LVU5063
 15038 50d5 4C89F6   		mov	rsi, r14	#, tmp111
 15039 50d8 BF010000 		mov	edi, 1	#,
 15039      00
 15040 50dd E8000000 		call	clock_gettime@PLT	#
 15040      00
 15041              	.LVL885:
 15042              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
1258:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15043              		.loc 1 1258 58 view .LVU5064
 15044 50e2 C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 40[rsp]	# tmp102, end_time.tv_nsec
 15044      442428
 15045              	# sieve_extend.c:1256:         passes++;
1256:sieve_extend.c ****         passes++;
 15046              		.loc 1 1256 15 view .LVU5065
 15047 50e9 458D7C24 		lea	r15d, 1[r12]	# tmp113,
 15047      01
 15048              	.LVL886:
 15049              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15050              		.loc 1 1258 64 view .LVU5066
 15051 50ee C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR 16[rsp]	# tmp103, start_time.tv_sec
 15051      4C2410
 15052              	# sieve_extend.c:1256:         passes++;
1256:sieve_extend.c ****         passes++;
 15053              		.loc 1 1256 15 view .LVU5067
 15054 50f5 4589FC   		mov	r12d, r15d	# <retval>, tmp113
1257:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15055              		.loc 1 1257 9 is_stmt 1 view .LVU5068
 15056              		.loc 1 1258 9 view .LVU5069
 15057              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15058              		.loc 1 1258 104 is_stmt 0 view .LVU5070
 15059 50f8 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 24[rsp]	# tmp105, start_time.tv_nsec
 15059      5C2418
 15060              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15061              		.loc 1 1258 40 view .LVU5071
 15062 50ff C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp106, end_time.tv_sec
 15062      542420
 15063              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15064              		.loc 1 1254 11 view .LVU5072
 15065 5106 C5FB1064 		vmovsd	xmm4, QWORD PTR 8[rsp]	# max_time, %sfp
 15065      2408
 15066 510c C4E2F9BB 		vfmsub231sd	xmm1, xmm0, QWORD PTR .LC8[rip]	# _30, tmp102,
 15066      0D000000 
 15066      00
 15067 5115 C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _19, tmp106,
 15067      1D000000 
 15067      00
 15068              	.LVL887:
1254:sieve_extend.c ****         function(bitarray, max);
 15069              		.loc 1 1254 11 is_stmt 1 view .LVU5073
 15070              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
GAS LISTING /tmp/ccW4ZvF5.s 			page 404


 15071              		.loc 1 1258 22 is_stmt 0 view .LVU5074
 15072 511e C5E358F1 		vaddsd	xmm6, xmm3, xmm1	# elapsed_time, _19, _30
 15073              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15074              		.loc 1 1254 11 view .LVU5075
 15075 5122 C5F92FE6 		vcomisd	xmm4, xmm6	# max_time, elapsed_time
 15076 5126 0F821401 		jb	.L1185	#,
 15076      0000
 15077              	.LVL888:
1255:sieve_extend.c ****         passes++;
 15078              		.loc 1 1255 9 is_stmt 1 view .LVU5076
 15079 512c 4C89EE   		mov	rsi, r13	#, max
 15080 512f 4889EF   		mov	rdi, rbp	#, bitarray
 15081 5132 FFD3     		call	rbx	# function
 15082              	.LVL889:
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15083              		.loc 1 1256 9 view .LVU5077
 15084              	# sieve_extend.c:1257:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15085              		.loc 1 1257 9 is_stmt 0 view .LVU5078
 15086 5134 4C89F6   		mov	rsi, r14	#, tmp111
 15087 5137 BF010000 		mov	edi, 1	#,
 15087      00
 15088 513c E8000000 		call	clock_gettime@PLT	#
 15088      00
 15089              	.LVL890:
 15090              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15091              		.loc 1 1258 58 view .LVU5079
 15092 5141 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, QWORD PTR 40[rsp]	# tmp114, end_time.tv_nsec
 15092      7C2428
 15093              	# sieve_extend.c:1256:         passes++;
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15094              		.loc 1 1256 15 view .LVU5080
 15095 5148 4183C401 		add	r12d, 1	# <retval>,
 15096              	.LVL891:
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15097              		.loc 1 1257 9 is_stmt 1 view .LVU5081
 15098              		.loc 1 1258 9 view .LVU5082
 15099              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15100              		.loc 1 1258 64 is_stmt 0 view .LVU5083
 15101 514c C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 16[rsp]	# tmp115, start_time.tv_sec
 15101      442410
 15102              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15103              		.loc 1 1258 104 view .LVU5084
 15104 5153 C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 24[rsp]	# tmp117, start_time.tv_nsec
 15104      4C2418
 15105              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15106              		.loc 1 1258 40 view .LVU5085
 15107 515a C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 32[rsp]	# tmp118, end_time.tv_sec
 15107      542420
 15108              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15109              		.loc 1 1254 11 view .LVU5086
 15110 5161 C57B1064 		vmovsd	xmm12, QWORD PTR 8[rsp]	# max_time, %sfp
 15110      2408
 15111 5167 C462C1BB 		vfmsub231sd	xmm8, xmm7, QWORD PTR .LC8[rip]	# _30, tmp114,
 15111      05000000 
GAS LISTING /tmp/ccW4ZvF5.s 			page 405


 15111      00
 15112 5170 C462A99D 		vfnmadd132sd	xmm9, xmm10, QWORD PTR .LC8[rip]	# _19, tmp118,
 15112      0D000000 
 15112      00
 15113              	.LVL892:
1254:sieve_extend.c ****         function(bitarray, max);
 15114              		.loc 1 1254 11 is_stmt 1 view .LVU5087
 15115              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15116              		.loc 1 1258 22 is_stmt 0 view .LVU5088
 15117 5179 C4413358 		vaddsd	xmm11, xmm9, xmm8	# elapsed_time, _19, _30
 15117      D8
 15118              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15119              		.loc 1 1254 11 view .LVU5089
 15120 517e C441792F 		vcomisd	xmm12, xmm11	# max_time, elapsed_time
 15120      E3
 15121 5183 0F82B700 		jb	.L1185	#,
 15121      0000
 15122              	.LVL893:
1255:sieve_extend.c ****         passes++;
 15123              		.loc 1 1255 9 is_stmt 1 view .LVU5090
 15124 5189 4C89EE   		mov	rsi, r13	#, max
 15125 518c 4889EF   		mov	rdi, rbp	#, bitarray
 15126 518f FFD3     		call	rbx	# function
 15127              	.LVL894:
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15128              		.loc 1 1256 9 view .LVU5091
 15129              	# sieve_extend.c:1257:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15130              		.loc 1 1257 9 is_stmt 0 view .LVU5092
 15131 5191 4C89F6   		mov	rsi, r14	#, tmp111
 15132 5194 BF010000 		mov	edi, 1	#,
 15132      00
 15133 5199 E8000000 		call	clock_gettime@PLT	#
 15133      00
 15134              	.LVL895:
 15135              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15136              		.loc 1 1258 58 view .LVU5093
 15137 519e C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 40[rsp]	# tmp121, end_time.tv_nsec
 15137      6C2428
 15138              	# sieve_extend.c:1256:         passes++;
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15139              		.loc 1 1256 15 view .LVU5094
 15140 51a5 458D6702 		lea	r12d, 2[r15]	# <retval>,
 15141              	.LVL896:
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15142              		.loc 1 1257 9 is_stmt 1 view .LVU5095
 15143              		.loc 1 1258 9 view .LVU5096
 15144              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15145              		.loc 1 1258 64 is_stmt 0 view .LVU5097
 15146 51a9 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 16[rsp]	# tmp122, start_time.tv_sec
 15146      742410
 15147              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15148              		.loc 1 1258 104 view .LVU5098
 15149 51b0 C461832A 		vcvtsi2sd	xmm15, xmm15, QWORD PTR 24[rsp]	# tmp124, start_time.tv_nsec
 15149      7C2418
 15150              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
GAS LISTING /tmp/ccW4ZvF5.s 			page 406


 15151              		.loc 1 1258 40 view .LVU5099
 15152 51b7 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 32[rsp]	# tmp125, end_time.tv_sec
 15152      6C2420
 15153              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15154              		.loc 1 1254 11 view .LVU5100
 15155 51be C5FB104C 		vmovsd	xmm1, QWORD PTR 8[rsp]	# max_time, %sfp
 15155      2408
 15156 51c4 C46291BB 		vfmsub231sd	xmm14, xmm13, QWORD PTR .LC8[rip]	# _30, tmp121,
 15156      35000000 
 15156      00
 15157 51cd C462D19D 		vfnmadd132sd	xmm15, xmm5, QWORD PTR .LC8[rip]	# _19, tmp125,
 15157      3D000000 
 15157      00
 15158              	.LVL897:
1254:sieve_extend.c ****         function(bitarray, max);
 15159              		.loc 1 1254 11 is_stmt 1 view .LVU5101
 15160              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15161              		.loc 1 1258 22 is_stmt 0 view .LVU5102
 15162 51d6 C4C10358 		vaddsd	xmm0, xmm15, xmm14	# elapsed_time, _19, _30
 15162      C6
 15163              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15164              		.loc 1 1254 11 view .LVU5103
 15165 51db C5F92FC8 		vcomisd	xmm1, xmm0	# max_time, elapsed_time
 15166 51df 725F     		jb	.L1185	#,
 15167              	.LVL898:
1255:sieve_extend.c ****         passes++;
 15168              		.loc 1 1255 9 is_stmt 1 view .LVU5104
 15169 51e1 4C89EE   		mov	rsi, r13	#, max
 15170 51e4 4889EF   		mov	rdi, rbp	#, bitarray
 15171 51e7 FFD3     		call	rbx	# function
 15172              	.LVL899:
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15173              		.loc 1 1256 9 view .LVU5105
 15174              	# sieve_extend.c:1257:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15175              		.loc 1 1257 9 is_stmt 0 view .LVU5106
 15176 51e9 4C89F6   		mov	rsi, r14	#, tmp111
 15177 51ec BF010000 		mov	edi, 1	#,
 15177      00
 15178 51f1 E8000000 		call	clock_gettime@PLT	#
 15178      00
 15179              	.LVL900:
 15180              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15181              		.loc 1 1258 58 view .LVU5107
 15182 51f6 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 40[rsp]	# tmp128, end_time.tv_nsec
 15182      5C2428
 15183              	# sieve_extend.c:1256:         passes++;
1256:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15184              		.loc 1 1256 15 view .LVU5108
 15185 51fd 458D6703 		lea	r12d, 3[r15]	# <retval>,
 15186              	.LVL901:
1257:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15187              		.loc 1 1257 9 is_stmt 1 view .LVU5109
 15188              		.loc 1 1258 9 view .LVU5110
 15189              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
GAS LISTING /tmp/ccW4ZvF5.s 			page 407


 15190              		.loc 1 1258 64 is_stmt 0 view .LVU5111
 15191 5201 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 16[rsp]	# tmp129, start_time.tv_sec
 15191      742410
 15192              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15193              		.loc 1 1258 104 view .LVU5112
 15194 5208 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 24[rsp]	# tmp131, start_time.tv_nsec
 15194      642418
 15195              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15196              		.loc 1 1258 40 view .LVU5113
 15197 520f C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp132, end_time.tv_sec
 15197      542420
 15198              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15199              		.loc 1 1254 11 view .LVU5114
 15200 5216 C57B1044 		vmovsd	xmm8, QWORD PTR 8[rsp]	# max_time, %sfp
 15200      2408
 15201 521c C4E2E1BB 		vfmsub231sd	xmm6, xmm3, QWORD PTR .LC8[rip]	# _30, tmp128,
 15201      35000000 
 15201      00
 15202 5225 C4E2E99D 		vfnmadd132sd	xmm4, xmm2, QWORD PTR .LC8[rip]	# _19, tmp132,
 15202      25000000 
 15202      00
 15203              	.LVL902:
1254:sieve_extend.c ****         function(bitarray, max);
 15204              		.loc 1 1254 11 is_stmt 1 view .LVU5115
 15205              	# sieve_extend.c:1258:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15206              		.loc 1 1258 22 is_stmt 0 view .LVU5116
 15207 522e C5DB58FE 		vaddsd	xmm7, xmm4, xmm6	# elapsed_time, _19, _30
 15208              	# sieve_extend.c:1254:     while (elapsed_time <= max_time) {
1254:sieve_extend.c ****         function(bitarray, max);
 15209              		.loc 1 1254 11 view .LVU5117
 15210 5232 C5792FC7 		vcomisd	xmm8, xmm7	# max_time, elapsed_time
 15211 5236 0F8391FE 		jnb	.L1188	#,
 15211      FFFF
 15212              	.LVL903:
 15213 523c 0F1F4000 		.p2align 4
 15214              		.p2align 3
 15215              	.L1185:
 15216              	# sieve_extend.c:1261: }
1259:sieve_extend.c ****     }
1260:sieve_extend.c ****     return passes;
1261:sieve_extend.c **** }
 15217              		.loc 1 1261 1 view .LVU5118
 15218 5240 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp140, D.7397
 15218      38
 15219 5245 64483304 		xor	rax, QWORD PTR fs:40	# tmp140, MEM[(<address-space-1> long unsigned int *)40B]
 15219      25280000 
 15219      00
 15220 524e 7513     		jne	.L1201	#,
 15221 5250 488D6424 		lea	rsp, 72[rsp]	#,
 15221      48
 15222              		.cfi_remember_state
 15223              		.cfi_def_cfa_offset 56
 15224 5255 4489E0   		mov	eax, r12d	#, <retval>
 15225 5258 5B       		pop	rbx	#
 15226              		.cfi_def_cfa_offset 48
 15227              	.LVL904:
GAS LISTING /tmp/ccW4ZvF5.s 			page 408


 15228              		.loc 1 1261 1 view .LVU5119
 15229 5259 5D       		pop	rbp	#
 15230              		.cfi_def_cfa_offset 40
 15231              	.LVL905:
 15232              		.loc 1 1261 1 view .LVU5120
 15233 525a 415C     		pop	r12	#
 15234              		.cfi_def_cfa_offset 32
 15235 525c 415D     		pop	r13	#
 15236              		.cfi_def_cfa_offset 24
 15237              	.LVL906:
 15238              		.loc 1 1261 1 view .LVU5121
 15239 525e 415E     		pop	r14	#
 15240              		.cfi_def_cfa_offset 16
 15241 5260 415F     		pop	r15	#
 15242              		.cfi_def_cfa_offset 8
 15243 5262 C3       		ret	
 15244              	.LVL907:
 15245              	.L1201:
 15246              		.cfi_restore_state
 15247              		.loc 1 1261 1 view .LVU5122
 15248 5263 E8000000 		call	__stack_chk_fail@PLT	#
 15248      00
 15249              	.LVL908:
 15250              		.cfi_endproc
 15251              	.LFE92:
 15253 5268 0F1F8400 		.p2align 4
 15253      00000000 
 15254              		.globl	test
 15256              	test:
 15257              	.LVL909:
 15258              	.LFB93:
1262:sieve_extend.c **** 
1263:sieve_extend.c **** void test(bitword_t* __restrict bitarray, counter_t max) {
 15259              		.loc 1 1263 58 is_stmt 1 view -0
 15260              		.cfi_startproc
 15261              		.loc 1 1263 58 is_stmt 0 view .LVU5124
 15262 5270 F30F1EFA 		endbr64	
 15263              	.LBB915:
1264:sieve_extend.c ****     //#pragma GCC unroll 16
1265:sieve_extend.c ****     #pragma GCC ivdep 
1266:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
 15264              		.loc 1 1266 10 is_stmt 1 view .LVU5125
 15265              	.LVL910:
 15266              		.loc 1 1266 25 view .LVU5126
 15267              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
 15268              		.loc 1 1266 5 is_stmt 0 view .LVU5127
 15269 5274 4885F6   		test	rsi, rsi	# max
 15270 5277 0F846901 		je	.L1244	#,
 15270      0000
 15271 527d 4889F1   		mov	rcx, rsi	# tmp97, max
 15272              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
 15273              		.loc 1 1266 20 view .LVU5128
 15274 5280 31C0     		xor	eax, eax	# x
 15275 5282 83E107   		and	ecx, 7	# tmp97,
 15276              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
1267:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15277              		.loc 1 1267 34 view .LVU5129
GAS LISTING /tmp/ccW4ZvF5.s 			page 409


 15278 5285 BA010000 		mov	edx, 1	# tmp92,
 15278      00
 15279 528a 0F84AD00 		je	.L1204	#,
 15279      0000
 15280 5290 4883F901 		cmp	rcx, 1	# tmp97,
 15281 5294 0F848600 		je	.L1229	#,
 15281      0000
 15282 529a 4883F902 		cmp	rcx, 2	# tmp97,
 15283 529e 746C     		je	.L1230	#,
 15284 52a0 4883F903 		cmp	rcx, 3	# tmp97,
 15285 52a4 7452     		je	.L1231	#,
 15286 52a6 4883F904 		cmp	rcx, 4	# tmp97,
 15287 52aa 7438     		je	.L1232	#,
 15288 52ac 4883F905 		cmp	rcx, 5	# tmp97,
 15289 52b0 741E     		je	.L1233	#,
 15290 52b2 4883F906 		cmp	rcx, 6	# tmp97,
 15291 52b6 0F852C01 		jne	.L1245	#,
 15291      0000
 15292              	.LVL911:
 15293              	.L1234:
 15294              		.loc 1 1267 9 is_stmt 1 view .LVU5130
 15295              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15296              		.loc 1 1267 18 is_stmt 0 view .LVU5131
 15297 52bc 4989C1   		mov	r9, rax	# tmp122, x
 15298              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15299              		.loc 1 1267 34 view .LVU5132
 15300 52bf C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15300      C2
 15301              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15302              		.loc 1 1267 18 view .LVU5133
 15303 52c4 49C1E906 		shr	r9, 6	# tmp122,
 15304              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15305              		.loc 1 1266 33 view .LVU5134
 15306 52c8 4883C001 		add	rax, 1	# x,
 15307              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15308              		.loc 1 1267 34 view .LVU5135
 15309 52cc 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_4, tmp123
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15310              		.loc 1 1266 32 is_stmt 1 view .LVU5136
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15311              		.loc 1 1266 25 view .LVU5137
 15312              	.L1233:
 15313              		.loc 1 1267 9 view .LVU5138
 15314              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15315              		.loc 1 1267 18 is_stmt 0 view .LVU5139
 15316 52d0 4989C2   		mov	r10, rax	# tmp124, x
 15317              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15318              		.loc 1 1267 34 view .LVU5140
 15319 52d3 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15319      DA
 15320              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15321              		.loc 1 1267 18 view .LVU5141
 15322 52d8 49C1EA06 		shr	r10, 6	# tmp124,
 15323              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15324              		.loc 1 1266 33 view .LVU5142
GAS LISTING /tmp/ccW4ZvF5.s 			page 410


 15325 52dc 4883C001 		add	rax, 1	# x,
 15326              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15327              		.loc 1 1267 34 view .LVU5143
 15328 52e0 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp125
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15329              		.loc 1 1266 32 is_stmt 1 view .LVU5144
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15330              		.loc 1 1266 25 view .LVU5145
 15331              	.L1232:
 15332              		.loc 1 1267 9 view .LVU5146
 15333              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15334              		.loc 1 1267 18 is_stmt 0 view .LVU5147
 15335 52e4 4889C1   		mov	rcx, rax	# tmp126, x
 15336              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15337              		.loc 1 1267 34 view .LVU5148
 15338 52e7 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15338      CA
 15339              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15340              		.loc 1 1267 18 view .LVU5149
 15341 52ec 48C1E906 		shr	rcx, 6	# tmp126,
 15342              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15343              		.loc 1 1266 33 view .LVU5150
 15344 52f0 4883C001 		add	rax, 1	# x,
 15345              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15346              		.loc 1 1267 34 view .LVU5151
 15347 52f4 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_4, tmp127
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15348              		.loc 1 1266 32 is_stmt 1 view .LVU5152
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15349              		.loc 1 1266 25 view .LVU5153
 15350              	.L1231:
 15351              		.loc 1 1267 9 view .LVU5154
 15352              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15353              		.loc 1 1267 18 is_stmt 0 view .LVU5155
 15354 52f8 4989C2   		mov	r10, rax	# tmp128, x
 15355              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15356              		.loc 1 1267 34 view .LVU5156
 15357 52fb C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15357      C2
 15358              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15359              		.loc 1 1267 18 view .LVU5157
 15360 5300 49C1EA06 		shr	r10, 6	# tmp128,
 15361              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15362              		.loc 1 1266 33 view .LVU5158
 15363 5304 4883C001 		add	rax, 1	# x,
 15364              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15365              		.loc 1 1267 34 view .LVU5159
 15366 5308 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_4, tmp129
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15367              		.loc 1 1266 32 is_stmt 1 view .LVU5160
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15368              		.loc 1 1266 25 view .LVU5161
 15369              	.L1230:
 15370              		.loc 1 1267 9 view .LVU5162
 15371              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccW4ZvF5.s 			page 411


 15372              		.loc 1 1267 18 is_stmt 0 view .LVU5163
 15373 530c 4989C3   		mov	r11, rax	# tmp130, x
 15374              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15375              		.loc 1 1267 34 view .LVU5164
 15376 530f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15376      CA
 15377              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15378              		.loc 1 1267 18 view .LVU5165
 15379 5314 49C1EB06 		shr	r11, 6	# tmp130,
 15380              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15381              		.loc 1 1266 33 view .LVU5166
 15382 5318 4883C001 		add	rax, 1	# x,
 15383              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15384              		.loc 1 1267 34 view .LVU5167
 15385 531c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp131
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15386              		.loc 1 1266 32 is_stmt 1 view .LVU5168
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15387              		.loc 1 1266 25 view .LVU5169
 15388              	.L1229:
 15389              		.loc 1 1267 9 view .LVU5170
 15390              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15391              		.loc 1 1267 18 is_stmt 0 view .LVU5171
 15392 5320 4989C1   		mov	r9, rax	# tmp132, x
 15393              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15394              		.loc 1 1267 34 view .LVU5172
 15395 5323 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15395      D2
 15396              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15397              		.loc 1 1267 18 view .LVU5173
 15398 5328 49C1E906 		shr	r9, 6	# tmp132,
 15399              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15400              		.loc 1 1266 33 view .LVU5174
 15401 532c 4883C001 		add	rax, 1	# x,
 15402              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15403              		.loc 1 1267 34 view .LVU5175
 15404 5330 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp133
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15405              		.loc 1 1266 32 is_stmt 1 view .LVU5176
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15406              		.loc 1 1266 25 view .LVU5177
 15407              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15408              		.loc 1 1266 5 is_stmt 0 view .LVU5178
 15409 5334 4839C6   		cmp	rsi, rax	# max, x
 15410 5337 0F84BD00 		je	.L1246	#,
 15410      0000
 15411              	.L1204:
 15412              		.loc 1 1267 9 is_stmt 1 discriminator 3 view .LVU5179
 15413              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15414              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5180
 15415 533d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15416              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15417              		.loc 1 1267 18 discriminator 3 view .LVU5181
GAS LISTING /tmp/ccW4ZvF5.s 			page 412


 15418 5341 4989C3   		mov	r11, rax	# tmp90, x
 15419 5344 49C1EB06 		shr	r11, 6	# tmp90,
 15420 5348 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15421 534b 49C1E906 		shr	r9, 6	# tmp100,
 15422              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15423              		.loc 1 1267 34 discriminator 3 view .LVU5182
 15424 534f C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15424      C2
 15425 5354 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15425      D2
 15426 5359 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_4, tmp93
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15427              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5183
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15428              		.loc 1 1266 25 discriminator 3 view .LVU5184
 15429              		.loc 1 1267 9 discriminator 3 view .LVU5185
 15430              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15431              		.loc 1 1267 34 is_stmt 0 discriminator 3 view .LVU5186
 15432 535d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp101
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15433              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5187
 15434              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15435              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5188
 15436 5361 4C8D5802 		lea	r11, 2[rax]	# x,
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15437              		.loc 1 1266 25 is_stmt 1 discriminator 3 view .LVU5189
 15438              		.loc 1 1267 9 discriminator 3 view .LVU5190
 15439              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15440              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5191
 15441 5365 4C8D4803 		lea	r9, 3[rax]	# x,
 15442              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15443              		.loc 1 1267 18 discriminator 3 view .LVU5192
 15444 5369 4D89D8   		mov	r8, r11	# tmp103, x
 15445 536c 49C1E806 		shr	r8, 6	# tmp103,
 15446 5370 4D89CA   		mov	r10, r9	# tmp106, x
 15447 5373 49C1EA06 		shr	r10, 6	# tmp106,
 15448              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15449              		.loc 1 1267 34 discriminator 3 view .LVU5193
 15450 5377 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15450      CA
 15451 537c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15451      DA
 15452 5381 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_4, tmp104
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15453              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5194
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15454              		.loc 1 1266 25 discriminator 3 view .LVU5195
 15455              		.loc 1 1267 9 discriminator 3 view .LVU5196
 15456              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15457              		.loc 1 1267 34 is_stmt 0 discriminator 3 view .LVU5197
 15458 5385 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp107
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15459              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5198
 15460              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccW4ZvF5.s 			page 413


 15461              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5199
 15462 5389 488D4804 		lea	rcx, 4[rax]	# x,
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15463              		.loc 1 1266 25 is_stmt 1 discriminator 3 view .LVU5200
 15464              		.loc 1 1267 9 discriminator 3 view .LVU5201
 15465              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15466              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5202
 15467 538d 4C8D5005 		lea	r10, 5[rax]	# x,
 15468              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15469              		.loc 1 1267 18 discriminator 3 view .LVU5203
 15470 5391 4989C8   		mov	r8, rcx	# tmp109, x
 15471 5394 49C1E806 		shr	r8, 6	# tmp109,
 15472 5398 4D89D3   		mov	r11, r10	# tmp112, x
 15473 539b 49C1EB06 		shr	r11, 6	# tmp112,
 15474              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15475              		.loc 1 1267 34 discriminator 3 view .LVU5204
 15476 539f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15476      CA
 15477 53a4 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15477      CA
 15478 53a9 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_4, tmp110
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15479              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5205
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15480              		.loc 1 1266 25 discriminator 3 view .LVU5206
 15481              		.loc 1 1267 9 discriminator 3 view .LVU5207
 15482              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15483              		.loc 1 1267 34 is_stmt 0 discriminator 3 view .LVU5208
 15484 53ad 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp113
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15485              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5209
 15486              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15487              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5210
 15488 53b1 4C8D4806 		lea	r9, 6[rax]	# x,
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15489              		.loc 1 1266 25 is_stmt 1 discriminator 3 view .LVU5211
 15490              		.loc 1 1267 9 discriminator 3 view .LVU5212
 15491              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15492              		.loc 1 1266 33 is_stmt 0 discriminator 3 view .LVU5213
 15493 53b5 4C8D5807 		lea	r11, 7[rax]	# x,
 15494              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15495              		.loc 1 1267 18 discriminator 3 view .LVU5214
 15496 53b9 4D89C8   		mov	r8, r9	# tmp115, x
 15497              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15498              		.loc 1 1267 34 discriminator 3 view .LVU5215
 15499 53bc C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15499      D2
 15500              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15501              		.loc 1 1266 33 discriminator 3 view .LVU5216
 15502 53c1 4883C008 		add	rax, 8	# x,
 15503              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15504              		.loc 1 1267 18 discriminator 3 view .LVU5217
 15505 53c5 49C1E806 		shr	r8, 6	# tmp115,
GAS LISTING /tmp/ccW4ZvF5.s 			page 414


 15506 53c9 4D89D9   		mov	r9, r11	# tmp118, x
 15507 53cc 49C1E906 		shr	r9, 6	# tmp118,
 15508              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15509              		.loc 1 1266 5 discriminator 3 view .LVU5218
 15510 53d0 4839C6   		cmp	rsi, rax	# max, x
 15511              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15512              		.loc 1 1267 34 discriminator 3 view .LVU5219
 15513 53d3 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15513      CA
 15514 53d8 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_4, tmp116
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15515              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5220
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15516              		.loc 1 1266 25 discriminator 3 view .LVU5221
 15517              		.loc 1 1267 9 discriminator 3 view .LVU5222
 15518              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
 15519              		.loc 1 1267 34 is_stmt 0 discriminator 3 view .LVU5223
 15520 53dc 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_4, tmp119
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15521              		.loc 1 1266 32 is_stmt 1 discriminator 3 view .LVU5224
 15522              	.LVL912:
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15523              		.loc 1 1266 25 discriminator 3 view .LVU5225
 15524              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15525              		.loc 1 1266 5 is_stmt 0 discriminator 3 view .LVU5226
 15526 53e0 0F8557FF 		jne	.L1204	#,
 15526      FFFF
 15527              	.LVL913:
 15528              	.L1244:
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15529              		.loc 1 1266 5 discriminator 3 view .LVU5227
 15530              	.LBE915:
 15531              	# sieve_extend.c:1269: }
1268:sieve_extend.c ****     }
1269:sieve_extend.c **** }
 15532              		.loc 1 1269 1 view .LVU5228
 15533 53e6 C3       		ret	
 15534              	.LVL914:
 15535              		.p2align 4,,7
 15536 53e7 90       		.p2align 3
 15537              	.L1245:
 15538              	.LBB916:
1267:sieve_extend.c ****     }
 15539              		.loc 1 1267 9 is_stmt 1 view .LVU5229
 15540              	# sieve_extend.c:1267:         bitarray[wordindex(x)] = markmask(x);
1267:sieve_extend.c ****     }
 15541              		.loc 1 1267 34 is_stmt 0 view .LVU5230
 15542 53e8 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_4,
 15542      01000000 
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15543              		.loc 1 1266 32 is_stmt 1 view .LVU5231
 15544              	.LVL915:
 15545              	# sieve_extend.c:1266:     for (counter_t x=0; x<max; x++) {
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15546              		.loc 1 1266 33 is_stmt 0 view .LVU5232
GAS LISTING /tmp/ccW4ZvF5.s 			page 415


 15547 53f0 B8010000 		mov	eax, 1	# x,
 15547      00
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15548              		.loc 1 1266 25 is_stmt 1 view .LVU5233
 15549 53f5 E9C2FEFF 		jmp	.L1234	#
 15549      FF
 15550              	.L1246:
1266:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15551              		.loc 1 1266 25 is_stmt 0 view .LVU5234
 15552 53fa C3       		ret	
 15553              	.LBE916:
 15554              		.cfi_endproc
 15555              	.LFE93:
 15557 53fb 0F1F4400 		.p2align 4
 15557      00
 15558              		.globl	test2
 15560              	test2:
 15561              	.LFB107:
 15562              		.cfi_startproc
 15563 5400 F30F1EFA 		endbr64	
 15564 5404 4885F6   		test	rsi, rsi	# max
 15565 5407 0F846901 		je	.L1289	#,
 15565      0000
 15566 540d 4889F1   		mov	rcx, rsi	# tmp97, max
 15567 5410 31C0     		xor	eax, eax	# x
 15568 5412 83E107   		and	ecx, 7	# tmp97,
 15569 5415 BA010000 		mov	edx, 1	# tmp92,
 15569      00
 15570 541a 0F84AD00 		je	.L1249	#,
 15570      0000
 15571 5420 4883F901 		cmp	rcx, 1	# tmp97,
 15572 5424 0F848600 		je	.L1274	#,
 15572      0000
 15573 542a 4883F902 		cmp	rcx, 2	# tmp97,
 15574 542e 746C     		je	.L1275	#,
 15575 5430 4883F903 		cmp	rcx, 3	# tmp97,
 15576 5434 7452     		je	.L1276	#,
 15577 5436 4883F904 		cmp	rcx, 4	# tmp97,
 15578 543a 7438     		je	.L1277	#,
 15579 543c 4883F905 		cmp	rcx, 5	# tmp97,
 15580 5440 741E     		je	.L1278	#,
 15581 5442 4883F906 		cmp	rcx, 6	# tmp97,
 15582 5446 0F852C01 		jne	.L1290	#,
 15582      0000
 15583              	.L1279:
 15584 544c 4989C1   		mov	r9, rax	# tmp122, x
 15585 544f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15585      C2
 15586 5454 49C1E906 		shr	r9, 6	# tmp122,
 15587 5458 4883C001 		add	rax, 1	# x,
 15588 545c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_9, tmp123
 15589              	.L1278:
 15590 5460 4989C2   		mov	r10, rax	# tmp124, x
 15591 5463 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15591      DA
 15592 5468 49C1EA06 		shr	r10, 6	# tmp124,
 15593 546c 4883C001 		add	rax, 1	# x,
GAS LISTING /tmp/ccW4ZvF5.s 			page 416


 15594 5470 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp125
 15595              	.L1277:
 15596 5474 4889C1   		mov	rcx, rax	# tmp126, x
 15597 5477 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15597      CA
 15598 547c 48C1E906 		shr	rcx, 6	# tmp126,
 15599 5480 4883C001 		add	rax, 1	# x,
 15600 5484 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_9, tmp127
 15601              	.L1276:
 15602 5488 4989C2   		mov	r10, rax	# tmp128, x
 15603 548b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15603      C2
 15604 5490 49C1EA06 		shr	r10, 6	# tmp128,
 15605 5494 4883C001 		add	rax, 1	# x,
 15606 5498 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_9, tmp129
 15607              	.L1275:
 15608 549c 4989C3   		mov	r11, rax	# tmp130, x
 15609 549f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15609      CA
 15610 54a4 49C1EB06 		shr	r11, 6	# tmp130,
 15611 54a8 4883C001 		add	rax, 1	# x,
 15612 54ac 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp131
 15613              	.L1274:
 15614 54b0 4989C1   		mov	r9, rax	# tmp132, x
 15615 54b3 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15615      D2
 15616 54b8 49C1E906 		shr	r9, 6	# tmp132,
 15617 54bc 4883C001 		add	rax, 1	# x,
 15618 54c0 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp133
 15619 54c4 4839C6   		cmp	rsi, rax	# max, x
 15620 54c7 0F84BD00 		je	.L1291	#,
 15620      0000
 15621              	.L1249:
 15622 54cd 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15623 54d1 4989C3   		mov	r11, rax	# tmp90, x
 15624 54d4 49C1EB06 		shr	r11, 6	# tmp90,
 15625 54d8 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15626 54db 49C1E906 		shr	r9, 6	# tmp100,
 15627 54df C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15627      C2
 15628 54e4 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15628      D2
 15629 54e9 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_9, tmp93
 15630 54ed 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp101
 15631 54f1 4C8D5802 		lea	r11, 2[rax]	# x,
 15632 54f5 4C8D4803 		lea	r9, 3[rax]	# x,
 15633 54f9 4D89D8   		mov	r8, r11	# tmp103, x
 15634 54fc 49C1E806 		shr	r8, 6	# tmp103,
 15635 5500 4D89CA   		mov	r10, r9	# tmp106, x
 15636 5503 49C1EA06 		shr	r10, 6	# tmp106,
 15637 5507 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15637      CA
 15638 550c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15638      DA
 15639 5511 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_9, tmp104
 15640 5515 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp107
 15641 5519 488D4804 		lea	rcx, 4[rax]	# x,
GAS LISTING /tmp/ccW4ZvF5.s 			page 417


 15642 551d 4C8D5005 		lea	r10, 5[rax]	# x,
 15643 5521 4989C8   		mov	r8, rcx	# tmp109, x
 15644 5524 49C1E806 		shr	r8, 6	# tmp109,
 15645 5528 4D89D3   		mov	r11, r10	# tmp112, x
 15646 552b 49C1EB06 		shr	r11, 6	# tmp112,
 15647 552f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15647      CA
 15648 5534 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15648      CA
 15649 5539 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_9, tmp110
 15650 553d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp113
 15651 5541 4C8D4806 		lea	r9, 6[rax]	# x,
 15652 5545 4C8D5807 		lea	r11, 7[rax]	# x,
 15653 5549 4D89C8   		mov	r8, r9	# tmp115, x
 15654 554c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15654      D2
 15655 5551 4883C008 		add	rax, 8	# x,
 15656 5555 49C1E806 		shr	r8, 6	# tmp115,
 15657 5559 4D89D9   		mov	r9, r11	# tmp118, x
 15658 555c 49C1E906 		shr	r9, 6	# tmp118,
 15659 5560 4839C6   		cmp	rsi, rax	# max, x
 15660 5563 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15660      CA
 15661 5568 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_9, tmp116
 15662 556c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_9, tmp119
 15663 5570 0F8557FF 		jne	.L1249	#,
 15663      FFFF
 15664              	.L1289:
 15665 5576 C3       		ret	
 15666              		.p2align 4,,7
 15667 5577 90       		.p2align 3
 15668              	.L1290:
 15669 5578 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_9,
 15669      01000000 
 15670 5580 B8010000 		mov	eax, 1	# x,
 15670      00
 15671 5585 E9C2FEFF 		jmp	.L1279	#
 15671      FF
 15672              	.L1291:
 15673 558a C3       		ret	
 15674              		.cfi_endproc
 15675              	.LFE107:
 15677 558b 0F1F4400 		.p2align 4
 15677      00
 15678              		.globl	test3
 15680              	test3:
 15681              	.LVL916:
 15682              	.LFB95:
1270:sieve_extend.c **** 
1271:sieve_extend.c **** void test2(bitword_t* __restrict bitarray, counter_t max) {
1272:sieve_extend.c ****     //#pragma GCC unroll 16
1273:sieve_extend.c ****     #pragma GCC ivdep 
1274:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
1275:sieve_extend.c ****         *(bitarray+wordindex(x)) = markmask(x);
1276:sieve_extend.c ****     }
1277:sieve_extend.c **** }
1278:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 418


1279:sieve_extend.c **** void test3(bitword_t* __restrict bitarray, counter_t max) {
 15683              		.loc 1 1279 59 is_stmt 1 view -0
 15684              		.cfi_startproc
 15685              		.loc 1 1279 59 is_stmt 0 view .LVU5236
 15686 5590 F30F1EFA 		endbr64	
1280:sieve_extend.c ****     for (register counter_t x=0; x<max; ) {
 15687              		.loc 1 1280 5 is_stmt 1 view .LVU5237
 15688              	.LBB917:
 15689              		.loc 1 1280 10 view .LVU5238
 15690              	.LVL917:
 15691              		.loc 1 1280 34 view .LVU5239
 15692              	# sieve_extend.c:1280:     for (register counter_t x=0; x<max; ) {
 15693              		.loc 1 1280 5 is_stmt 0 view .LVU5240
 15694 5594 4885F6   		test	rsi, rsi	# max
 15695 5597 0F840401 		je	.L1316	#,
 15695      0000
 15696              	# sieve_extend.c:1280:     for (register counter_t x=0; x<max; ) {
 15697              		.loc 1 1280 29 view .LVU5241
 15698 559d 31C0     		xor	eax, eax	# x
 15699              	.LBB918:
 15700              	# sieve_extend.c:1286:             mask |= markmask(x);
1281:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
1282:sieve_extend.c ****         register counter_t index_word = wordstart(x);
1283:sieve_extend.c **** 
1284:sieve_extend.c ****         #pragma GCC ivdep
1285:sieve_extend.c ****         do {
1286:sieve_extend.c ****             mask |= markmask(x);
 15701              		.loc 1 1286 21 view .LVU5242
 15702 559f 41BA0100 		mov	r10d, 1	# tmp95,
 15702      0000
 15703              	.LVL918:
 15704 55a5 66662E0F 		.p2align 4
 15704      1F840000 
 15704      000000
 15705              		.p2align 3
 15706              	.L1295:
1281:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15707              		.loc 1 1281 9 is_stmt 1 view .LVU5243
1282:sieve_extend.c **** 
 15708              		.loc 1 1282 9 view .LVU5244
 15709              	# sieve_extend.c:1282:         register counter_t index_word = wordstart(x);
1282:sieve_extend.c **** 
 15710              		.loc 1 1282 28 is_stmt 0 view .LVU5245
 15711 55b0 4989C0   		mov	r8, rax	# index_word, x
 15712              	# sieve_extend.c:1281:         register bitword_t mask = SAFE_ZERO;
1281:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15713              		.loc 1 1281 28 view .LVU5246
 15714 55b3 31C9     		xor	ecx, ecx	# mask
 15715              	# sieve_extend.c:1282:         register counter_t index_word = wordstart(x);
1282:sieve_extend.c **** 
 15716              		.loc 1 1282 28 view .LVU5247
 15717 55b5 4983E0C0 		and	r8, -64	# index_word,
 15718              	.LVL919:
 15719              	.L1294:
 15720              		.loc 1 1286 13 is_stmt 1 discriminator 1 view .LVU5248
 15721              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 419


 15722              		.loc 1 1287 14 is_stmt 0 discriminator 1 view .LVU5249
 15723 55b9 4C8D4801 		lea	r9, 1[rax]	# tmp98,
 15724              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15725              		.loc 1 1286 21 discriminator 1 view .LVU5250
 15726 55bd C4C2F9F7 		shlx	rdx, r10, rax	# tmp94, tmp95, x
 15726      D2
 15727              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
1288:sieve_extend.c ****         } while(wordstart(x)==index_word);
 15728              		.loc 1 1288 17 discriminator 1 view .LVU5251
 15729 55c2 4D89CB   		mov	r11, r9	# tmp96, x
 15730              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15731              		.loc 1 1286 18 discriminator 1 view .LVU5252
 15732 55c5 4809D1   		or	rcx, rdx	# mask, tmp94
 15733              	.LVL920:
1287:sieve_extend.c ****             x++;
 15734              		.loc 1 1287 13 is_stmt 1 discriminator 1 view .LVU5253
 15735              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15736              		.loc 1 1288 17 is_stmt 0 discriminator 1 view .LVU5254
 15737 55c8 4983E3C0 		and	r11, -64	# tmp96,
 15738              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15739              		.loc 1 1287 14 discriminator 1 view .LVU5255
 15740 55cc 4C89C8   		mov	rax, r9	# x, tmp98
 15741              	.LVL921:
 15742              		.loc 1 1288 16 is_stmt 1 discriminator 1 view .LVU5256
 15743              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15744              		.loc 1 1288 9 is_stmt 0 discriminator 1 view .LVU5257
 15745 55cf 4D39C3   		cmp	r11, r8	# tmp96, index_word
 15746 55d2 0F85B800 		jne	.L1315	#,
 15746      0000
1286:sieve_extend.c ****             x++;
 15747              		.loc 1 1286 13 is_stmt 1 view .LVU5258
 15748              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15749              		.loc 1 1287 14 is_stmt 0 view .LVU5259
 15750 55d8 4883C001 		add	rax, 1	# x,
 15751              	.LVL922:
 15752              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15753              		.loc 1 1286 21 view .LVU5260
 15754 55dc C4C2B1F7 		shlx	rdx, r10, r9	# tmp99, tmp95, x
 15754      D2
 15755              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15756              		.loc 1 1288 17 view .LVU5261
 15757 55e1 4989C3   		mov	r11, rax	# tmp100, x
 15758              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15759              		.loc 1 1286 18 view .LVU5262
 15760 55e4 4809D1   		or	rcx, rdx	# mask, tmp99
 15761              	.LVL923:
1287:sieve_extend.c ****             x++;
 15762              		.loc 1 1287 13 is_stmt 1 view .LVU5263
 15763              		.loc 1 1288 16 view .LVU5264
 15764              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15765              		.loc 1 1288 17 is_stmt 0 view .LVU5265
GAS LISTING /tmp/ccW4ZvF5.s 			page 420


 15766 55e7 4983E3C0 		and	r11, -64	# tmp100,
 15767              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15768              		.loc 1 1288 9 view .LVU5266
 15769 55eb 4D39C3   		cmp	r11, r8	# tmp100, index_word
 15770 55ee 0F859C00 		jne	.L1315	#,
 15770      0000
1286:sieve_extend.c ****             x++;
 15771              		.loc 1 1286 13 is_stmt 1 view .LVU5267
 15772              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15773              		.loc 1 1286 21 is_stmt 0 view .LVU5268
 15774 55f4 C4C2F9F7 		shlx	rax, r10, rax	# tmp101, tmp95, x
 15774      C2
 15775              	.LVL924:
 15776              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15777              		.loc 1 1286 18 view .LVU5269
 15778 55f9 4809C1   		or	rcx, rax	# mask, tmp101
 15779              	.LVL925:
1287:sieve_extend.c ****             x++;
 15780              		.loc 1 1287 13 is_stmt 1 view .LVU5270
 15781              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15782              		.loc 1 1287 14 is_stmt 0 view .LVU5271
 15783 55fc 498D4102 		lea	rax, 2[r9]	# x,
 15784              	.LVL926:
 15785              		.loc 1 1288 16 is_stmt 1 view .LVU5272
 15786              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15787              		.loc 1 1288 17 is_stmt 0 view .LVU5273
 15788 5600 4889C2   		mov	rdx, rax	# tmp102, x
 15789 5603 4883E2C0 		and	rdx, -64	# tmp102,
 15790              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15791              		.loc 1 1288 9 view .LVU5274
 15792 5607 4C39C2   		cmp	rdx, r8	# tmp102, index_word
 15793 560a 0F858000 		jne	.L1315	#,
 15793      0000
1286:sieve_extend.c ****             x++;
 15794              		.loc 1 1286 13 is_stmt 1 view .LVU5275
 15795              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15796              		.loc 1 1286 21 is_stmt 0 view .LVU5276
 15797 5610 C442F9F7 		shlx	r11, r10, rax	# tmp103, tmp95, x
 15797      DA
 15798              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15799              		.loc 1 1287 14 view .LVU5277
 15800 5615 498D4103 		lea	rax, 3[r9]	# x,
 15801              	.LVL927:
 15802              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15803              		.loc 1 1288 17 view .LVU5278
 15804 5619 4889C2   		mov	rdx, rax	# tmp104, x
 15805              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15806              		.loc 1 1286 18 view .LVU5279
 15807 561c 4C09D9   		or	rcx, r11	# mask, tmp103
 15808              	.LVL928:
1287:sieve_extend.c ****             x++;
GAS LISTING /tmp/ccW4ZvF5.s 			page 421


 15809              		.loc 1 1287 13 is_stmt 1 view .LVU5280
 15810              		.loc 1 1288 16 view .LVU5281
 15811              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15812              		.loc 1 1288 17 is_stmt 0 view .LVU5282
 15813 561f 4883E2C0 		and	rdx, -64	# tmp104,
 15814              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15815              		.loc 1 1288 9 view .LVU5283
 15816 5623 4C39C2   		cmp	rdx, r8	# tmp104, index_word
 15817 5626 7568     		jne	.L1315	#,
1286:sieve_extend.c ****             x++;
 15818              		.loc 1 1286 13 is_stmt 1 view .LVU5284
 15819              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15820              		.loc 1 1286 21 is_stmt 0 view .LVU5285
 15821 5628 C4C2F9F7 		shlx	rax, r10, rax	# tmp105, tmp95, x
 15821      C2
 15822              	.LVL929:
 15823              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15824              		.loc 1 1286 18 view .LVU5286
 15825 562d 4809C1   		or	rcx, rax	# mask, tmp105
 15826              	.LVL930:
1287:sieve_extend.c ****             x++;
 15827              		.loc 1 1287 13 is_stmt 1 view .LVU5287
 15828              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15829              		.loc 1 1287 14 is_stmt 0 view .LVU5288
 15830 5630 498D4104 		lea	rax, 4[r9]	# x,
 15831              	.LVL931:
 15832              		.loc 1 1288 16 is_stmt 1 view .LVU5289
 15833              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15834              		.loc 1 1288 17 is_stmt 0 view .LVU5290
 15835 5634 4989C3   		mov	r11, rax	# tmp106, x
 15836 5637 4983E3C0 		and	r11, -64	# tmp106,
 15837              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15838              		.loc 1 1288 9 view .LVU5291
 15839 563b 4D39C3   		cmp	r11, r8	# tmp106, index_word
 15840 563e 7550     		jne	.L1315	#,
1286:sieve_extend.c ****             x++;
 15841              		.loc 1 1286 13 is_stmt 1 view .LVU5292
 15842              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15843              		.loc 1 1286 21 is_stmt 0 view .LVU5293
 15844 5640 C4C2F9F7 		shlx	rdx, r10, rax	# tmp107, tmp95, x
 15844      D2
 15845              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15846              		.loc 1 1287 14 view .LVU5294
 15847 5645 498D4105 		lea	rax, 5[r9]	# x,
 15848              	.LVL932:
 15849              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15850              		.loc 1 1288 17 view .LVU5295
 15851 5649 4989C3   		mov	r11, rax	# tmp108, x
 15852              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15853              		.loc 1 1286 18 view .LVU5296
 15854 564c 4809D1   		or	rcx, rdx	# mask, tmp107
GAS LISTING /tmp/ccW4ZvF5.s 			page 422


 15855              	.LVL933:
1287:sieve_extend.c ****             x++;
 15856              		.loc 1 1287 13 is_stmt 1 view .LVU5297
 15857              		.loc 1 1288 16 view .LVU5298
 15858              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15859              		.loc 1 1288 17 is_stmt 0 view .LVU5299
 15860 564f 4983E3C0 		and	r11, -64	# tmp108,
 15861              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15862              		.loc 1 1288 9 view .LVU5300
 15863 5653 4D39C3   		cmp	r11, r8	# tmp108, index_word
 15864 5656 7538     		jne	.L1315	#,
1286:sieve_extend.c ****             x++;
 15865              		.loc 1 1286 13 is_stmt 1 view .LVU5301
 15866              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15867              		.loc 1 1286 21 is_stmt 0 view .LVU5302
 15868 5658 C4C2F9F7 		shlx	rax, r10, rax	# tmp109, tmp95, x
 15868      C2
 15869              	.LVL934:
 15870              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15871              		.loc 1 1286 18 view .LVU5303
 15872 565d 4809C1   		or	rcx, rax	# mask, tmp109
 15873              	.LVL935:
1287:sieve_extend.c ****             x++;
 15874              		.loc 1 1287 13 is_stmt 1 view .LVU5304
 15875              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15876              		.loc 1 1287 14 is_stmt 0 view .LVU5305
 15877 5660 498D4106 		lea	rax, 6[r9]	# x,
 15878              	.LVL936:
 15879              		.loc 1 1288 16 is_stmt 1 view .LVU5306
 15880              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15881              		.loc 1 1288 17 is_stmt 0 view .LVU5307
 15882 5664 4889C2   		mov	rdx, rax	# tmp110, x
 15883 5667 4883E2C0 		and	rdx, -64	# tmp110,
 15884              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15885              		.loc 1 1288 9 view .LVU5308
 15886 566b 4C39C2   		cmp	rdx, r8	# tmp110, index_word
 15887 566e 7520     		jne	.L1315	#,
1286:sieve_extend.c ****             x++;
 15888              		.loc 1 1286 13 is_stmt 1 view .LVU5309
 15889              	# sieve_extend.c:1286:             mask |= markmask(x);
1286:sieve_extend.c ****             x++;
 15890              		.loc 1 1286 21 is_stmt 0 view .LVU5310
 15891 5670 C442F9F7 		shlx	r11, r10, rax	# tmp111, tmp95, x
 15891      DA
 15892              	# sieve_extend.c:1287:             x++;
1287:sieve_extend.c ****             x++;
 15893              		.loc 1 1287 14 view .LVU5311
 15894 5675 498D4107 		lea	rax, 7[r9]	# x,
 15895              	.LVL937:
 15896              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15897              		.loc 1 1288 17 view .LVU5312
 15898 5679 4989C1   		mov	r9, rax	# tmp112, x
 15899              	.LVL938:
 15900              	# sieve_extend.c:1286:             mask |= markmask(x);
GAS LISTING /tmp/ccW4ZvF5.s 			page 423


1286:sieve_extend.c ****             x++;
 15901              		.loc 1 1286 18 view .LVU5313
 15902 567c 4C09D9   		or	rcx, r11	# mask, tmp111
 15903              	.LVL939:
1287:sieve_extend.c ****             x++;
 15904              		.loc 1 1287 13 is_stmt 1 view .LVU5314
 15905              		.loc 1 1288 16 view .LVU5315
 15906              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15907              		.loc 1 1288 17 is_stmt 0 view .LVU5316
 15908 567f 4983E1C0 		and	r9, -64	# tmp112,
 15909              	# sieve_extend.c:1288:         } while(wordstart(x)==index_word);
 15910              		.loc 1 1288 9 view .LVU5317
 15911 5683 4D39C1   		cmp	r9, r8	# tmp112, index_word
 15912 5686 0F842DFF 		je	.L1294	#,
 15912      FFFF
 15913 568c 0F1F4000 		.p2align 4
 15914              		.p2align 3
 15915              	.L1315:
1289:sieve_extend.c ****         bitarray[wordindex(index_word)] = mask;
 15916              		.loc 1 1289 9 is_stmt 1 view .LVU5318
 15917              	# sieve_extend.c:1289:         bitarray[wordindex(index_word)] = mask;
 15918              		.loc 1 1289 18 is_stmt 0 view .LVU5319
 15919 5690 49C1E806 		shr	r8, 6	# tmp97,
 15920              	.LVL940:
 15921              		.loc 1 1289 18 view .LVU5320
 15922              	.LBE918:
 15923              	# sieve_extend.c:1280:     for (register counter_t x=0; x<max; ) {
1280:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15924              		.loc 1 1280 5 view .LVU5321
 15925 5694 4839C6   		cmp	rsi, rax	# max, x
 15926              	.LBB919:
 15927              	# sieve_extend.c:1289:         bitarray[wordindex(index_word)] = mask;
 15928              		.loc 1 1289 41 view .LVU5322
 15929 5697 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_6, mask
 15930              		.loc 1 1289 41 view .LVU5323
 15931              	.LBE919:
1280:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15932              		.loc 1 1280 34 is_stmt 1 view .LVU5324
 15933              	# sieve_extend.c:1280:     for (register counter_t x=0; x<max; ) {
1280:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15934              		.loc 1 1280 5 is_stmt 0 view .LVU5325
 15935 569b 0F870FFF 		ja	.L1295	#,
 15935      FFFF
 15936              	.LVL941:
 15937              	.L1316:
1280:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15938              		.loc 1 1280 5 view .LVU5326
 15939              	.LBE917:
 15940              	# sieve_extend.c:1291: }
1290:sieve_extend.c ****     }
1291:sieve_extend.c **** }
 15941              		.loc 1 1291 1 view .LVU5327
 15942 56a1 C3       		ret	
 15943              		.cfi_endproc
 15944              	.LFE95:
 15946 56a2 66662E0F 		.p2align 4
 15946      1F840000 
GAS LISTING /tmp/ccW4ZvF5.s 			page 424


 15946      0000000F 
 15946      1F00
 15947              		.globl	testshuffle_vector
 15949              	testshuffle_vector:
 15950              	.LVL942:
 15951              	.LFB96:
1292:sieve_extend.c **** 
1293:sieve_extend.c **** //void test4(bitword_t* __restrict bitarray, counter_t max) {
1294:sieve_extend.c **** //    bitvector_t* bitvector = (bitvector_t*) bitarray;
1295:sieve_extend.c **** //    for (register int x=0; x<max; ) {
1296:sieve_extend.c **** //        register bitvector_t mask = {};
1297:sieve_extend.c **** //        register counter_t index_vector = vectorstart(x);
1298:sieve_extend.c **** //        register counter_t index_word = wordindex(x);
1299:sieve_extend.c **** //        register word = wordindex(x);
1300:sieve_extend.c **** //        #pragma GCC ivdep
1301:sieve_extend.c **** //        do {
1302:sieve_extend.c **** //            mask[word[] |= markmask(x);
1303:sieve_extend.c **** //            x++;
1304:sieve_extend.c **** //            word =
1305:sieve_extend.c **** //        } while(wordstart(x)==index_word);
1306:sieve_extend.c **** //        bitvector[wordindex(index_word)] = mask;
1307:sieve_extend.c **** //    }
1308:sieve_extend.c **** //}
1309:sieve_extend.c **** 
1310:sieve_extend.c **** void testshuffle_vector(bitword_t* __restrict bitarray, counter_t max) {
 15952              		.loc 1 1310 72 is_stmt 1 view -0
 15953              		.cfi_startproc
 15954              		.loc 1 1310 72 is_stmt 0 view .LVU5329
 15955 56b0 F30F1EFA 		endbr64	
1311:sieve_extend.c ****     
1312:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
 15956              		.loc 1 1312 5 is_stmt 1 view .LVU5330
 15957              	.LVL943:
1313:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray;
 15958              		.loc 1 1313 5 view .LVU5331
1314:sieve_extend.c ****     
1315:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 15959              		.loc 1 1315 5 view .LVU5332
 15960              	.LBB920:
 15961              		.loc 1 1315 10 view .LVU5333
 15962              		.loc 1 1315 25 view .LVU5334
 15963              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 15964              		.loc 1 1315 5 is_stmt 0 view .LVU5335
 15965 56b4 4883FE01 		cmp	rsi, 1	# max,
 15966 56b8 0F86C300 		jbe	.L1318	#,
 15966      0000
 15967              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
1316:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15968              		.loc 1 1316 37 view .LVU5336
 15969 56be 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 15970              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15971              		.loc 1 1315 5 view .LVU5337
 15972 56c2 4883FE15 		cmp	rsi, 21	# max,
 15973              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 15974              		.loc 1 1316 40 view .LVU5338
 15975 56c6 B9010000 		mov	ecx, 1	# tmp134,
GAS LISTING /tmp/ccW4ZvF5.s 			page 425


 15975      00
 15976              		.loc 1 1316 9 is_stmt 1 view .LVU5339
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15977              		.loc 1 1315 44 view .LVU5340
 15978              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15979              		.loc 1 1315 45 is_stmt 0 view .LVU5341
 15980 56cb B8150000 		mov	eax, 21	# i,
 15980      00
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15981              		.loc 1 1315 25 is_stmt 1 view .LVU5342
 15982              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15983              		.loc 1 1315 5 is_stmt 0 view .LVU5343
 15984 56d0 0F86AB00 		jbe	.L1318	#,
 15984      0000
 15985              	.L1319:
 15986              		.loc 1 1316 9 is_stmt 1 discriminator 3 view .LVU5344
 15987              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 15988              		.loc 1 1316 37 is_stmt 0 discriminator 3 view .LVU5345
 15989 56d6 4889C2   		mov	rdx, rax	# tmp169, i
 15990              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 15991              		.loc 1 1315 45 discriminator 3 view .LVU5346
 15992 56d9 4C8D4814 		lea	r9, 20[rax]	# tmp167,
 15993              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 15994              		.loc 1 1316 37 discriminator 3 view .LVU5347
 15995 56dd 48C1EA06 		shr	rdx, 6	# tmp169,
 15996              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 15997              		.loc 1 1316 40 discriminator 3 view .LVU5348
 15998 56e1 C462F9F7 		shlx	r8, rcx, rax	# tmp172, tmp134, i
 15998      C1
 15999              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16000              		.loc 1 1316 37 discriminator 3 view .LVU5349
 16001 56e6 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp172
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16002              		.loc 1 1315 44 is_stmt 1 discriminator 3 view .LVU5350
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16003              		.loc 1 1315 25 discriminator 3 view .LVU5351
 16004              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16005              		.loc 1 1315 5 is_stmt 0 discriminator 3 view .LVU5352
 16006 56ea 4981F9FF 		cmp	r9, 511	# tmp167,
 16006      010000
 16007 56f1 0F878A00 		ja	.L1318	#,
 16007      0000
 16008 56f7 4C39CE   		cmp	rsi, r9	# max, tmp167
 16009 56fa 0F868100 		jbe	.L1318	#,
 16009      0000
 16010              		.loc 1 1316 9 is_stmt 1 view .LVU5353
 16011              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16012              		.loc 1 1316 37 is_stmt 0 view .LVU5354
 16013 5700 4D89CA   		mov	r10, r9	# tmp210, tmp167
 16014              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16015              		.loc 1 1315 45 view .LVU5355
 16016 5703 488D5028 		lea	rdx, 40[rax]	# i,
GAS LISTING /tmp/ccW4ZvF5.s 			page 426


 16017              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16018              		.loc 1 1316 37 view .LVU5356
 16019 5707 49C1EA06 		shr	r10, 6	# tmp210,
 16020              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16021              		.loc 1 1316 40 view .LVU5357
 16022 570b C462B1F7 		shlx	r11, rcx, r9	# tmp213, tmp134, tmp167
 16022      D9
 16023              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16024              		.loc 1 1316 37 view .LVU5358
 16025 5710 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_3, tmp213
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16026              		.loc 1 1315 44 is_stmt 1 view .LVU5359
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16027              		.loc 1 1315 25 view .LVU5360
 16028              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16029              		.loc 1 1315 5 is_stmt 0 view .LVU5361
 16030 5714 4839D6   		cmp	rsi, rdx	# max, i
 16031 5717 7668     		jbe	.L1318	#,
 16032              		.loc 1 1316 9 is_stmt 1 view .LVU5362
 16033              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16034              		.loc 1 1316 37 is_stmt 0 view .LVU5363
 16035 5719 4989D0   		mov	r8, rdx	# tmp217, i
 16036              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16037              		.loc 1 1315 45 view .LVU5364
 16038 571c 4C8D503C 		lea	r10, 60[rax]	# i,
 16039              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16040              		.loc 1 1316 37 view .LVU5365
 16041 5720 49C1E806 		shr	r8, 6	# tmp217,
 16042              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16043              		.loc 1 1316 40 view .LVU5366
 16044 5724 C462E9F7 		shlx	r9, rcx, rdx	# tmp220, tmp134, i
 16044      C9
 16045              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16046              		.loc 1 1316 37 view .LVU5367
 16047 5729 4E090CC7 		or	QWORD PTR [rdi+r8*8], r9	# *_3, tmp220
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16048              		.loc 1 1315 44 is_stmt 1 view .LVU5368
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16049              		.loc 1 1315 25 view .LVU5369
 16050              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16051              		.loc 1 1315 5 is_stmt 0 view .LVU5370
 16052 572d 4C39D6   		cmp	rsi, r10	# max, i
 16053 5730 764F     		jbe	.L1318	#,
 16054              		.loc 1 1316 9 is_stmt 1 view .LVU5371
 16055              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16056              		.loc 1 1316 37 is_stmt 0 view .LVU5372
 16057 5732 4D89D3   		mov	r11, r10	# tmp224, i
 16058              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16059              		.loc 1 1315 45 view .LVU5373
 16060 5735 4C8D4850 		lea	r9, 80[rax]	# i,
 16061              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16062              		.loc 1 1316 37 view .LVU5374
 16063 5739 49C1EB06 		shr	r11, 6	# tmp224,
GAS LISTING /tmp/ccW4ZvF5.s 			page 427


 16064              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16065              		.loc 1 1316 40 view .LVU5375
 16066 573d C4E2A9F7 		shlx	rdx, rcx, r10	# tmp227, tmp134, i
 16066      D1
 16067              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16068              		.loc 1 1316 37 view .LVU5376
 16069 5742 4A0914DF 		or	QWORD PTR [rdi+r11*8], rdx	# *_3, tmp227
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16070              		.loc 1 1315 44 is_stmt 1 view .LVU5377
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16071              		.loc 1 1315 25 view .LVU5378
 16072              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16073              		.loc 1 1315 5 is_stmt 0 view .LVU5379
 16074 5746 4C39CE   		cmp	rsi, r9	# max, i
 16075 5749 7636     		jbe	.L1318	#,
 16076              		.loc 1 1316 9 is_stmt 1 view .LVU5380
 16077              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16078              		.loc 1 1316 37 is_stmt 0 view .LVU5381
 16079 574b 4D89C8   		mov	r8, r9	# tmp231, i
 16080              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16081              		.loc 1 1315 45 view .LVU5382
 16082 574e 4C8D5864 		lea	r11, 100[rax]	# i,
 16083              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16084              		.loc 1 1316 37 view .LVU5383
 16085 5752 49C1E806 		shr	r8, 6	# tmp231,
 16086              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16087              		.loc 1 1316 40 view .LVU5384
 16088 5756 C462B1F7 		shlx	r10, rcx, r9	# tmp234, tmp134, i
 16088      D1
 16089              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16090              		.loc 1 1316 37 view .LVU5385
 16091 575b 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_3, tmp234
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16092              		.loc 1 1315 44 is_stmt 1 view .LVU5386
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16093              		.loc 1 1315 25 view .LVU5387
 16094              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16095              		.loc 1 1315 5 is_stmt 0 view .LVU5388
 16096 575f 4C39DE   		cmp	rsi, r11	# max, i
 16097 5762 761D     		jbe	.L1318	#,
 16098              		.loc 1 1316 9 is_stmt 1 view .LVU5389
 16099              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16100              		.loc 1 1316 37 is_stmt 0 view .LVU5390
 16101 5764 4D89D9   		mov	r9, r11	# tmp238, i
 16102              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16103              		.loc 1 1315 45 view .LVU5391
 16104 5767 4883C078 		add	rax, 120	# i,
 16105              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16106              		.loc 1 1316 37 view .LVU5392
 16107 576b 49C1E906 		shr	r9, 6	# tmp238,
 16108              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16109              		.loc 1 1316 40 view .LVU5393
 16110 576f C4E2A1F7 		shlx	rdx, rcx, r11	# tmp241, tmp134, i
GAS LISTING /tmp/ccW4ZvF5.s 			page 428


 16110      D1
 16111              	# sieve_extend.c:1316:         bitarray_word[wordindex(i)] |= markmask(i);
 16112              		.loc 1 1316 37 view .LVU5394
 16113 5774 4A0914CF 		or	QWORD PTR [rdi+r9*8], rdx	# *_3, tmp241
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16114              		.loc 1 1315 44 is_stmt 1 view .LVU5395
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16115              		.loc 1 1315 25 view .LVU5396
 16116              	# sieve_extend.c:1315:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16117              		.loc 1 1315 5 is_stmt 0 view .LVU5397
 16118 5778 4839C6   		cmp	rsi, rax	# max, i
 16119 577b 0F8755FF 		ja	.L1319	#,
 16119      FFFF
 16120              	.LVL944:
 16121              	.L1318:
1315:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16122              		.loc 1 1315 5 view .LVU5398
 16123              	.LBE920:
1317:sieve_extend.c ****     }
1318:sieve_extend.c **** 
1319:sieve_extend.c ****     counter_t source_start = 66+64;
 16124              		.loc 1 1319 5 is_stmt 1 view .LVU5399
1320:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16125              		.loc 1 1320 5 view .LVU5400
1321:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16126              		.loc 1 1321 5 view .LVU5401
1322:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16127              		.loc 1 1322 5 view .LVU5402
 16128              	# sieve_extend.c:1322:     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+
 16129              		.loc 1 1322 47 is_stmt 0 view .LVU5403
 16130 5781 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitarray_29(D) + 16B],
 16130      0C
1323:sieve_extend.c **** 
1324:sieve_extend.c **** 
1325:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16131              		.loc 1 1325 5 is_stmt 1 view .LVU5404
 16132              	.LVL945:
1326:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
 16133              		.loc 1 1326 5 view .LVU5405
1327:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 16134              		.loc 1 1327 5 view .LVU5406
1328:sieve_extend.c ****     
1329:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16135              		.loc 1 1329 5 view .LVU5407
1330:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16136              		.loc 1 1330 5 view .LVU5408
1331:sieve_extend.c **** 
1332:sieve_extend.c **** //    if (delta_bit) ....
1333:sieve_extend.c **** 
1334:sieve_extend.c ****     const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 16137              		.loc 1 1334 5 view .LVU5409
1335:sieve_extend.c ****     const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 16138              		.loc 1 1335 5 view .LVU5410
1336:sieve_extend.c ****     const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
 16139              		.loc 1 1336 5 view .LVU5411
1337:sieve_extend.c ****     const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_flipped, sh
GAS LISTING /tmp/ccW4ZvF5.s 			page 429


 16140              		.loc 1 1337 5 view .LVU5412
1338:sieve_extend.c **** 
1339:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
 16141              		.loc 1 1339 5 view .LVU5413
 16142              	.LBB921:
 16143              		.loc 1 1339 10 view .LVU5414
 16144              		.loc 1 1339 37 view .LVU5415
 16145 5786 488D7760 		lea	rsi, 96[rdi]	# ivtmp.687,
 16146              	.LVL946:
 16147              		.loc 1 1339 37 is_stmt 0 view .LVU5416
 16148 578a C57D6F47 		vmovdqa	ymm8, YMMWORD PTR 32[rdi]	# D__lsm1.661, MEM[(bitvector_t *)bitarray_29(D) + 32B]
 16148      20
 16149              	# sieve_extend.c:1339:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16150              		.loc 1 1339 20 view .LVU5417
 16151 578f B8030000 		mov	eax, 3	# copy_vector,
 16151      00
 16152 5794 C57D6F67 		vmovdqa	ymm12, YMMWORD PTR 64[rdi]	# D__lsm2.662, MEM[(bitvector_t *)bitarray_29(D) + 64B]
 16152      40
 16153 5799 C5FD6F27 		vmovdqa	ymm4, YMMWORD PTR [rdi]	# D__lsm0.660, MEM[(bitvector_t *)bitarray_29(D)]
 16154              	.LVL947:
 16155              	.L1321:
 16156              	.LBB922:
1340:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16157              		.loc 1 1340 9 is_stmt 1 discriminator 3 view .LVU5418
1341:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16158              		.loc 1 1341 9 discriminator 3 view .LVU5419
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16159              		.loc 1 1342 9 discriminator 3 view .LVU5420
1343:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16160              		.loc 1 1343 9 discriminator 3 view .LVU5421
1344:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16161              		.loc 1 1344 9 discriminator 3 view .LVU5422
 16162              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16163              		.loc 1 1342 29 is_stmt 0 discriminator 3 view .LVU5423
 16164 579d C4C35D46 		vperm2i128	ymm3, ymm4, ymm8, 33	# tmp140, D__lsm0.660, D__lsm1.661,
 16164      D821
 16165 57a3 C4C33D46 		vperm2i128	ymm7, ymm8, ymm12, 33	# tmp146, D__lsm1.661, D__lsm2.662,
 16165      FC21
 16166 57a9 C4E3650F 		vpalignr	ymm2, ymm3, ymm4, 8	# tmp141, tmp140, D__lsm0.660,
 16166      D408
 16167              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16168              		.loc 1 1343 21 discriminator 3 view .LVU5424
 16169 57af C5D573F3 		vpsllq	ymm5, ymm3, 10	# dest2, tmp140,
 16169      0A
 16170              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16171              		.loc 1 1342 21 discriminator 3 view .LVU5425
 16172 57b4 C5DD73D2 		vpsrlq	ymm4, ymm2, 54	# dest1, tmp141,
 16172      36
 16173              	.LVL948:
 16174              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16175              		.loc 1 1344 46 discriminator 3 view .LVU5426
 16176 57b9 C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# D__lsm0.660, dest1, dest2
 16177              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
GAS LISTING /tmp/ccW4ZvF5.s 			page 430


 16178              		.loc 1 1343 21 discriminator 3 view .LVU5427
 16179 57bd C5B573F7 		vpsllq	ymm9, ymm7, 10	# dest2, tmp146,
 16179      0A
 16180              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16181              		.loc 1 1342 29 discriminator 3 view .LVU5428
 16182 57c2 C4C3450F 		vpalignr	ymm1, ymm7, ymm8, 8	# tmp147, tmp146, D__lsm1.661,
 16182      C808
 16183 57c8 C4631D46 		vperm2i128	ymm11, ymm12, ymm6, 33	# tmp152, D__lsm2.662, D__lsm0.660,
 16183      DE21
 16184              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16185              		.loc 1 1342 21 discriminator 3 view .LVU5429
 16186 57ce C5BD73D1 		vpsrlq	ymm8, ymm1, 54	# dest1, tmp147,
 16186      36
 16187              	.LVL949:
 16188              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16189              		.loc 1 1342 29 discriminator 3 view .LVU5430
 16190 57d3 C4C3250F 		vpalignr	ymm0, ymm11, ymm12, 8	# tmp153, tmp152, D__lsm2.662,
 16190      C408
 16191              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16192              		.loc 1 1344 46 discriminator 3 view .LVU5431
 16193 57d9 C4413DEB 		vpor	ymm10, ymm8, ymm9	# D__lsm1.661, dest1, dest2
 16193      D1
 16194              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16195              		.loc 1 1342 21 discriminator 3 view .LVU5432
 16196 57de C59D73D0 		vpsrlq	ymm12, ymm0, 54	# dest1, tmp153,
 16196      36
 16197              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16198              		.loc 1 1343 21 discriminator 3 view .LVU5433
 16199 57e3 C4C11573 		vpsllq	ymm13, ymm11, 10	# dest2, tmp152,
 16199      F30A
 16200              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16201              		.loc 1 1342 29 discriminator 3 view .LVU5434
 16202 57e9 C4434D46 		vperm2i128	ymm15, ymm6, ymm10, 33	# tmp181, D__lsm0.660, D__lsm1.661,
 16202      FA21
 16203              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16204              		.loc 1 1344 46 discriminator 3 view .LVU5435
 16205 57ef C4411DEB 		vpor	ymm14, ymm12, ymm13	# D__lsm2.662, dest1, dest2
 16205      F5
 16206              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16207              		.loc 1 1343 21 discriminator 3 view .LVU5436
 16208 57f4 C4C15D73 		vpsllq	ymm4, ymm15, 10	# dest2, tmp181,
 16208      F70A
 16209              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16210              		.loc 1 1344 38 discriminator 3 view .LVU5437
 16211 57fa C5FD7F36 		vmovdqa	YMMWORD PTR [rsi], ymm6	# MEM[base: _134, offset: 0B], D__lsm0.660
 16212              	.LBE922:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16213              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5438
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16214              		.loc 1 1339 37 discriminator 3 view .LVU5439
GAS LISTING /tmp/ccW4ZvF5.s 			page 431


 16215              	.LBB923:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16216              		.loc 1 1340 9 discriminator 3 view .LVU5440
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16217              		.loc 1 1341 9 discriminator 3 view .LVU5441
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16218              		.loc 1 1342 9 discriminator 3 view .LVU5442
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16219              		.loc 1 1343 9 discriminator 3 view .LVU5443
 16220              		.loc 1 1344 9 discriminator 3 view .LVU5444
 16221              	.LBE923:
 16222              	# sieve_extend.c:1339:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16223              		.loc 1 1339 65 is_stmt 0 discriminator 3 view .LVU5445
 16224 57fe 4883C009 		add	rax, 9	# copy_vector,
 16225              	.LBB924:
 16226              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16227              		.loc 1 1342 29 discriminator 3 view .LVU5446
 16228 5802 C4E3050F 		vpalignr	ymm3, ymm15, ymm6, 8	# tmp182, tmp181, D__lsm0.660,
 16228      DE08
 16229 5808 C4C32D46 		vperm2i128	ymm6, ymm10, ymm14, 33	# tmp186, D__lsm1.661, D__lsm2.662,
 16229      F621
 16230              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16231              		.loc 1 1342 21 discriminator 3 view .LVU5447
 16232 580e C5ED73D3 		vpsrlq	ymm2, ymm3, 54	# dest1, tmp182,
 16232      36
 16233              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16234              		.loc 1 1342 29 discriminator 3 view .LVU5448
 16235 5813 C4C34D0F 		vpalignr	ymm7, ymm6, ymm10, 8	# tmp187, tmp186, D__lsm1.661,
 16235      FA08
 16236              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16237              		.loc 1 1344 46 discriminator 3 view .LVU5449
 16238 5819 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# D__lsm0.660, dest1, dest2
 16239              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16240              		.loc 1 1342 21 discriminator 3 view .LVU5450
 16241 581d C5F573D7 		vpsrlq	ymm1, ymm7, 54	# dest1, tmp187,
 16241      36
 16242              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16243              		.loc 1 1343 21 discriminator 3 view .LVU5451
 16244 5822 C5BD73F6 		vpsllq	ymm8, ymm6, 10	# dest2, tmp186,
 16244      0A
 16245 5827 488D8EC0 		lea	rcx, 192[rsi]	# ivtmp.687,
 16245      000000
 16246              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16247              		.loc 1 1344 38 discriminator 3 view .LVU5452
 16248 582e C57D7F56 		vmovdqa	YMMWORD PTR 32[rsi], ymm10	# MEM[base: _134, offset: 32B], D__lsm1.661
 16248      20
 16249              	.LBE924:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16250              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5453
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16251              		.loc 1 1339 37 discriminator 3 view .LVU5454
GAS LISTING /tmp/ccW4ZvF5.s 			page 432


 16252              	.LBB925:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16253              		.loc 1 1340 9 discriminator 3 view .LVU5455
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16254              		.loc 1 1341 9 discriminator 3 view .LVU5456
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16255              		.loc 1 1342 9 discriminator 3 view .LVU5457
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16256              		.loc 1 1343 9 discriminator 3 view .LVU5458
 16257              		.loc 1 1344 9 discriminator 3 view .LVU5459
 16258              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16259              		.loc 1 1344 46 is_stmt 0 discriminator 3 view .LVU5460
 16260 5833 C44175EB 		vpor	ymm9, ymm1, ymm8	# D__lsm1.661, dest1, dest2
 16260      C8
 16261              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16262              		.loc 1 1342 29 discriminator 3 view .LVU5461
 16263 5838 C4630D46 		vperm2i128	ymm10, ymm14, ymm5, 33	# tmp191, D__lsm2.662, D__lsm0.660,
 16263      D521
 16264 583e 4881C620 		add	rsi, 288	# ivtmp.687,
 16264      010000
 16265              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16266              		.loc 1 1344 38 discriminator 3 view .LVU5462
 16267 5845 C57D7FB6 		vmovdqa	YMMWORD PTR -224[rsi], ymm14	# MEM[base: _134, offset: 64B], D__lsm2.662
 16267      20FFFFFF 
 16268              	.LBE925:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16269              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5463
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16270              		.loc 1 1339 37 discriminator 3 view .LVU5464
 16271              	.LBB926:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16272              		.loc 1 1340 9 discriminator 3 view .LVU5465
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16273              		.loc 1 1341 9 discriminator 3 view .LVU5466
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16274              		.loc 1 1342 9 discriminator 3 view .LVU5467
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16275              		.loc 1 1343 9 discriminator 3 view .LVU5468
 16276              		.loc 1 1344 9 discriminator 3 view .LVU5469
 16277              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16278              		.loc 1 1343 21 is_stmt 0 discriminator 3 view .LVU5470
 16279 584d C4C11D73 		vpsllq	ymm12, ymm10, 10	# dest2, tmp191,
 16279      F20A
 16280              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16281              		.loc 1 1342 29 discriminator 3 view .LVU5471
 16282 5853 C4432D0F 		vpalignr	ymm11, ymm10, ymm14, 8	# tmp192, tmp191, D__lsm2.662,
 16282      DE08
 16283 5859 C4435546 		vperm2i128	ymm14, ymm5, ymm9, 33	# tmp198, D__lsm0.660, D__lsm1.661,
 16283      F121
 16284              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16285              		.loc 1 1342 21 discriminator 3 view .LVU5472
 16286 585f C4C17D73 		vpsrlq	ymm0, ymm11, 54	# dest1, tmp192,
 16286      D336
GAS LISTING /tmp/ccW4ZvF5.s 			page 433


 16287              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16288              		.loc 1 1342 29 discriminator 3 view .LVU5473
 16289 5865 C4630D0F 		vpalignr	ymm15, ymm14, ymm5, 8	# tmp199, tmp198, D__lsm0.660,
 16289      FD08
 16290              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16291              		.loc 1 1344 46 discriminator 3 view .LVU5474
 16292 586b C4417DEB 		vpor	ymm13, ymm0, ymm12	# D__lsm2.662, dest1, dest2
 16292      EC
 16293              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16294              		.loc 1 1342 21 discriminator 3 view .LVU5475
 16295 5870 C4C16D73 		vpsrlq	ymm2, ymm15, 54	# dest1, tmp199,
 16295      D736
 16296              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16297              		.loc 1 1344 38 discriminator 3 view .LVU5476
 16298 5876 C5FD7FAE 		vmovdqa	YMMWORD PTR -192[rsi], ymm5	# MEM[base: _134, offset: 0B], D__lsm0.660
 16298      40FFFFFF 
 16299              	.LBE926:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16300              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5477
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16301              		.loc 1 1339 37 discriminator 3 view .LVU5478
 16302              	.LBB927:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16303              		.loc 1 1340 9 discriminator 3 view .LVU5479
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16304              		.loc 1 1341 9 discriminator 3 view .LVU5480
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16305              		.loc 1 1342 9 discriminator 3 view .LVU5481
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16306              		.loc 1 1343 9 discriminator 3 view .LVU5482
 16307              		.loc 1 1344 9 discriminator 3 view .LVU5483
 16308              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16309              		.loc 1 1343 21 is_stmt 0 discriminator 3 view .LVU5484
 16310 587e C4C16573 		vpsllq	ymm3, ymm14, 10	# dest2, tmp198,
 16310      F60A
 16311              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16312              		.loc 1 1342 29 discriminator 3 view .LVU5485
 16313 5884 C4C33546 		vperm2i128	ymm5, ymm9, ymm13, 33	# tmp202, D__lsm1.661, D__lsm2.662,
 16313      ED21
 16314              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16315              		.loc 1 1344 46 discriminator 3 view .LVU5486
 16316 588a C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# D__lsm0.660, dest1, dest2
 16317              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16318              		.loc 1 1344 38 discriminator 3 view .LVU5487
 16319 588e C57D7F8E 		vmovdqa	YMMWORD PTR -160[rsi], ymm9	# MEM[base: _134, offset: 32B], D__lsm1.661
 16319      60FFFFFF 
 16320              	.LBE927:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16321              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5488
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16322              		.loc 1 1339 37 discriminator 3 view .LVU5489
 16323              	.LBB928:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
GAS LISTING /tmp/ccW4ZvF5.s 			page 434


 16324              		.loc 1 1340 9 discriminator 3 view .LVU5490
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16325              		.loc 1 1341 9 discriminator 3 view .LVU5491
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16326              		.loc 1 1342 9 discriminator 3 view .LVU5492
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16327              		.loc 1 1343 9 discriminator 3 view .LVU5493
 16328              		.loc 1 1344 9 discriminator 3 view .LVU5494
 16329              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16330              		.loc 1 1343 21 is_stmt 0 discriminator 3 view .LVU5495
 16331 5896 C5F573F5 		vpsllq	ymm1, ymm5, 10	# dest2, tmp202,
 16331      0A
 16332              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16333              		.loc 1 1342 29 discriminator 3 view .LVU5496
 16334 589b C4C3550F 		vpalignr	ymm6, ymm5, ymm9, 8	# tmp203, tmp202, D__lsm1.661,
 16334      F108
 16335 58a1 C4631546 		vperm2i128	ymm9, ymm13, ymm4, 33	# tmp206, D__lsm2.662, D__lsm0.660,
 16335      CC21
 16336              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16337              		.loc 1 1342 21 discriminator 3 view .LVU5497
 16338 58a7 C5C573D6 		vpsrlq	ymm7, ymm6, 54	# dest1, tmp203,
 16338      36
 16339              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16340              		.loc 1 1342 29 discriminator 3 view .LVU5498
 16341 58ac C443350F 		vpalignr	ymm10, ymm9, ymm13, 8	# tmp207, tmp206, D__lsm2.662,
 16341      D508
 16342              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16343              		.loc 1 1343 21 discriminator 3 view .LVU5499
 16344 58b2 C4C17D73 		vpsllq	ymm0, ymm9, 10	# dest2, tmp206,
 16344      F10A
 16345              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16346              		.loc 1 1342 21 discriminator 3 view .LVU5500
 16347 58b8 C4C12573 		vpsrlq	ymm11, ymm10, 54	# dest1, tmp207,
 16347      D236
 16348              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16349              		.loc 1 1344 38 discriminator 3 view .LVU5501
 16350 58be C57D7F6E 		vmovdqa	YMMWORD PTR -128[rsi], ymm13	# MEM[base: _134, offset: 64B], D__lsm2.662
 16350      80
 16351              	.LBE928:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16352              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5502
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16353              		.loc 1 1339 37 discriminator 3 view .LVU5503
 16354              	.LBB929:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16355              		.loc 1 1340 9 discriminator 3 view .LVU5504
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16356              		.loc 1 1341 9 discriminator 3 view .LVU5505
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16357              		.loc 1 1342 9 discriminator 3 view .LVU5506
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
GAS LISTING /tmp/ccW4ZvF5.s 			page 435


 16358              		.loc 1 1343 9 discriminator 3 view .LVU5507
 16359              		.loc 1 1344 9 discriminator 3 view .LVU5508
 16360              	.LVL950:
 16361              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16362              		.loc 1 1344 46 is_stmt 0 discriminator 3 view .LVU5509
 16363 58c3 C545EBC1 		vpor	ymm8, ymm7, ymm1	# D__lsm1.661, dest1, dest2
 16364              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16365              		.loc 1 1344 38 discriminator 3 view .LVU5510
 16366 58c7 C5FD7F66 		vmovdqa	YMMWORD PTR -96[rsi], ymm4	# MEM[base: _134, offset: 0B], D__lsm0.660
 16366      A0
 16367              	.LBE929:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16368              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5511
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16369              		.loc 1 1339 37 discriminator 3 view .LVU5512
 16370              	.LBB930:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16371              		.loc 1 1340 9 discriminator 3 view .LVU5513
 16372              	.LVL951:
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16373              		.loc 1 1341 9 discriminator 3 view .LVU5514
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16374              		.loc 1 1342 9 discriminator 3 view .LVU5515
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16375              		.loc 1 1343 9 discriminator 3 view .LVU5516
 16376              		.loc 1 1344 9 discriminator 3 view .LVU5517
 16377              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16378              		.loc 1 1344 46 is_stmt 0 discriminator 3 view .LVU5518
 16379 58cc C525EBE0 		vpor	ymm12, ymm11, ymm0	# D__lsm2.662, dest1, dest2
 16380              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16381              		.loc 1 1344 38 discriminator 3 view .LVU5519
 16382 58d0 C57D7F41 		vmovdqa	YMMWORD PTR 32[rcx], ymm8	# MEM[base: _134, offset: 32B], D__lsm1.661
 16382      20
 16383              	.LBE930:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16384              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5520
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16385              		.loc 1 1339 37 discriminator 3 view .LVU5521
 16386              	.LBB931:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16387              		.loc 1 1340 9 discriminator 3 view .LVU5522
 16388              	.LVL952:
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16389              		.loc 1 1341 9 discriminator 3 view .LVU5523
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16390              		.loc 1 1342 9 discriminator 3 view .LVU5524
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16391              		.loc 1 1343 9 discriminator 3 view .LVU5525
 16392              		.loc 1 1344 9 discriminator 3 view .LVU5526
 16393              		.loc 1 1344 9 is_stmt 0 discriminator 3 view .LVU5527
 16394 58d5 483D8F01 		cmp	rax, 399	# copy_vector,
 16394      0000
 16395              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16396              		.loc 1 1344 38 discriminator 3 view .LVU5528
 16397 58db C57D7F61 		vmovdqa	YMMWORD PTR 64[rcx], ymm12	# MEM[base: _134, offset: 64B], D__lsm2.662
 16397      40
 16398              	.LBE931:
GAS LISTING /tmp/ccW4ZvF5.s 			page 436


1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16399              		.loc 1 1339 54 is_stmt 1 discriminator 3 view .LVU5529
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16400              		.loc 1 1339 37 discriminator 3 view .LVU5530
 16401 58e0 0F85B7FE 		jne	.L1321	#,
 16401      FFFF
 16402 58e6 4C8D8780 		lea	r8, 12672[rdi]	# ivtmp.672,
 16402      310000
 16403 58ed 488DBFA0 		lea	rdi, 12704[rdi]	# _24,
 16403      310000
 16404              	.LVL953:
 16405 58f4 66662E0F 		.p2align 4
 16405      1F840000 
 16405      00000090 
 16406              		.p2align 3
 16407              	.L1322:
 16408              	.LBB932:
1340:sieve_extend.c ****         bitvector_t source1 = bitarray_vector[source_vector+1];
 16409              		.loc 1 1340 9 view .LVU5531
1341:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16410              		.loc 1 1341 9 view .LVU5532
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16411              		.loc 1 1342 9 view .LVU5533
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16412              		.loc 1 1343 9 view .LVU5534
 16413              		.loc 1 1344 9 view .LVU5535
 16414              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16415              		.loc 1 1343 29 is_stmt 0 view .LVU5536
 16416 5900 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r8]	# tmp247, MEM[base: _102, offset: 0B]
 16416      28
 16417 5905 4983C020 		add	r8, 32	# ivtmp.672,
 16418              	.LVL954:
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16419              		.loc 1 1343 29 view .LVU5537
 16420 5909 C4431546 		vperm2i128	ymm14, ymm13, YMMWORD PTR [r8], 33	# tmp158, tmp247, MEM[base: _102, offset: 32B],
 16420      3021
 16421              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16422              		.loc 1 1342 29 view .LVU5538
 16423 590f C4C30D0F 		vpalignr	ymm2, ymm14, YMMWORD PTR -32[r8], 8	# tmp162, tmp158, MEM[base: _102, offset: 0B],
 16423      50E008
 16424              	# sieve_extend.c:1343:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1343:sieve_extend.c ****         bitarray_vector[copy_vector] = dest1 | dest2;
 16425              		.loc 1 1343 21 view .LVU5539
 16426 5916 C4C10573 		vpsllq	ymm15, ymm14, 10	# dest2, tmp158,
 16426      F60A
 16427              	# sieve_extend.c:1342:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1342:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16428              		.loc 1 1342 21 view .LVU5540
 16429 591c C5E573D2 		vpsrlq	ymm3, ymm2, 54	# dest1, tmp162,
 16429      36
 16430              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16431              		.loc 1 1344 46 view .LVU5541
 16432 5921 C585EBE3 		vpor	ymm4, ymm15, ymm3	# tmp164, dest2, dest1
 16433              	# sieve_extend.c:1344:         bitarray_vector[copy_vector] = dest1 | dest2;
 16434              		.loc 1 1344 38 view .LVU5542
GAS LISTING /tmp/ccW4ZvF5.s 			page 437


 16435 5925 C4C17D7F 		vmovdqa	YMMWORD PTR 64[r8], ymm4	# MEM[base: _84, offset: 12768B], tmp164
 16435      6040
 16436              	.LBE932:
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16437              		.loc 1 1339 54 is_stmt 1 view .LVU5543
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16438              		.loc 1 1339 37 view .LVU5544
 16439              	# sieve_extend.c:1339:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1339:sieve_extend.c ****         bitvector_t source0 = bitarray_vector[source_vector];
 16440              		.loc 1 1339 5 is_stmt 0 view .LVU5545
 16441 592b 4C39C7   		cmp	rdi, r8	# _24, ivtmp.672
 16442 592e 75D0     		jne	.L1322	#,
 16443 5930 C5F877   		vzeroupper
 16444              	.LBE921:
 16445              	# sieve_extend.c:1346: }
1345:sieve_extend.c ****     }
1346:sieve_extend.c **** }
 16446              		.loc 1 1346 1 view .LVU5546
 16447 5933 C3       		ret	
 16448              		.cfi_endproc
 16449              	.LFE96:
 16451 5934 66662E0F 		.p2align 4
 16451      1F840000 
 16451      00000090 
 16452              		.globl	testshuffle_vector2
 16454              	testshuffle_vector2:
 16455              	.LFB109:
 16456              		.cfi_startproc
 16457 5940 F30F1EFA 		endbr64	
 16458 5944 E967FDFF 		jmp	testshuffle_vector	#
 16458      FF
 16459              		.cfi_endproc
 16460              	.LFE109:
 16462 5949 0F1F8000 		.p2align 4
 16462      000000
 16463              		.globl	testshuffle_word
 16465              	testshuffle_word:
 16466              	.LVL955:
 16467              	.LFB98:
1347:sieve_extend.c **** 
1348:sieve_extend.c **** void testshuffle_vector2(bitword_t* __restrict bitarray, counter_t max) {
1349:sieve_extend.c ****     
1350:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
1351:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray;
1352:sieve_extend.c **** 
1353:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1354:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
1355:sieve_extend.c ****     }
1356:sieve_extend.c **** 
1357:sieve_extend.c ****     counter_t source_start = 66+64;
1358:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
1359:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
1360:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
1361:sieve_extend.c **** 
1362:sieve_extend.c **** 
1363:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
1364:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
GAS LISTING /tmp/ccW4ZvF5.s 			page 438


1365:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
1366:sieve_extend.c ****     
1367:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
1368:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
1369:sieve_extend.c **** 
1370:sieve_extend.c **** //    if (delta_bit) ....
1371:sieve_extend.c **** 
1372:sieve_extend.c ****     register const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
1373:sieve_extend.c ****     register const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
1374:sieve_extend.c ****     register const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
1375:sieve_extend.c ****     register const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_fl
1376:sieve_extend.c **** 
1377:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
1378:sieve_extend.c ****         register bitvector_t source0 = bitarray_vector[source_vector];
1379:sieve_extend.c ****         register bitvector_t source1 = bitarray_vector[source_vector+1];
1380:sieve_extend.c ****         bitarray_vector[copy_vector] = (__builtin_shuffle(source0,source1,shuffle1) >> shift_flippe
1381:sieve_extend.c ****     }
1382:sieve_extend.c **** }
1383:sieve_extend.c **** 
1384:sieve_extend.c **** void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
 16468              		.loc 1 1384 70 is_stmt 1 view -0
 16469              		.cfi_startproc
 16470              		.loc 1 1384 70 is_stmt 0 view .LVU5548
 16471 5950 F30F1EFA 		endbr64	
1385:sieve_extend.c ****     
1386:sieve_extend.c ****     bitword_t* bitarray_word     = (bitword_t*)bitarray;
 16472              		.loc 1 1386 5 is_stmt 1 view .LVU5549
 16473              	.LVL956:
1387:sieve_extend.c **** 
1388:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16474              		.loc 1 1388 5 view .LVU5550
 16475              	.LBB933:
 16476              		.loc 1 1388 10 view .LVU5551
 16477              		.loc 1 1388 25 view .LVU5552
 16478              	.LBE933:
 16479              	# sieve_extend.c:1384: void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
1384:sieve_extend.c ****     
 16480              		.loc 1 1384 70 is_stmt 0 view .LVU5553
 16481 5954 4157     		push	r15	#
 16482              		.cfi_def_cfa_offset 16
 16483              		.cfi_offset 15, -16
 16484              	.LBB934:
 16485              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16486              		.loc 1 1388 5 view .LVU5554
 16487 5956 4883FE01 		cmp	rsi, 1	# max,
 16488              	.LBE934:
 16489              	# sieve_extend.c:1384: void testshuffle_word(bitword_t* __restrict bitarray, counter_t max) {
1384:sieve_extend.c ****     
 16490              		.loc 1 1384 70 view .LVU5555
 16491 595a 4156     		push	r14	#
 16492              		.cfi_def_cfa_offset 24
 16493              		.cfi_offset 14, -24
 16494 595c 4155     		push	r13	#
 16495              		.cfi_def_cfa_offset 32
 16496              		.cfi_offset 13, -32
 16497 595e 4154     		push	r12	#
 16498              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/ccW4ZvF5.s 			page 439


 16499              		.cfi_offset 12, -40
 16500 5960 55       		push	rbp	#
 16501              		.cfi_def_cfa_offset 48
 16502              		.cfi_offset 6, -48
 16503 5961 53       		push	rbx	#
 16504              		.cfi_def_cfa_offset 56
 16505              		.cfi_offset 3, -56
 16506              	.LBB935:
 16507              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16508              		.loc 1 1388 5 view .LVU5556
 16509 5962 0F86C300 		jbe	.L1350	#,
 16509      0000
 16510              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
1389:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16511              		.loc 1 1389 37 view .LVU5557
 16512 5968 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 16513              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16514              		.loc 1 1388 5 view .LVU5558
 16515 596c 4883FE15 		cmp	rsi, 21	# max,
 16516              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16517              		.loc 1 1389 40 view .LVU5559
 16518 5970 B9010000 		mov	ecx, 1	# tmp185,
 16518      00
 16519              		.loc 1 1389 9 is_stmt 1 view .LVU5560
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16520              		.loc 1 1388 42 view .LVU5561
 16521              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16522              		.loc 1 1388 43 is_stmt 0 view .LVU5562
 16523 5975 B8150000 		mov	eax, 21	# i,
 16523      00
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16524              		.loc 1 1388 25 is_stmt 1 view .LVU5563
 16525              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16526              		.loc 1 1388 5 is_stmt 0 view .LVU5564
 16527 597a 0F86AB00 		jbe	.L1350	#,
 16527      0000
 16528              	.L1351:
 16529              		.loc 1 1389 9 is_stmt 1 discriminator 3 view .LVU5565
 16530              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16531              		.loc 1 1389 37 is_stmt 0 discriminator 3 view .LVU5566
 16532 5980 4889C2   		mov	rdx, rax	# tmp248, i
 16533              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16534              		.loc 1 1388 43 discriminator 3 view .LVU5567
 16535 5983 488D5814 		lea	rbx, 20[rax]	# tmp246,
 16536              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16537              		.loc 1 1389 37 discriminator 3 view .LVU5568
 16538 5987 48C1EA06 		shr	rdx, 6	# tmp248,
 16539              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16540              		.loc 1 1389 40 discriminator 3 view .LVU5569
 16541 598b C462F9F7 		shlx	r8, rcx, rax	# tmp251, tmp185, i
 16541      C1
 16542              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16543              		.loc 1 1389 37 discriminator 3 view .LVU5570
GAS LISTING /tmp/ccW4ZvF5.s 			page 440


 16544 5990 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp251
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16545              		.loc 1 1388 42 is_stmt 1 discriminator 3 view .LVU5571
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16546              		.loc 1 1388 25 discriminator 3 view .LVU5572
 16547              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16548              		.loc 1 1388 5 is_stmt 0 discriminator 3 view .LVU5573
 16549 5994 4881FBFF 		cmp	rbx, 511	# tmp246,
 16549      010000
 16550 599b 0F878A00 		ja	.L1350	#,
 16550      0000
 16551 59a1 4839DE   		cmp	rsi, rbx	# max, tmp246
 16552 59a4 0F868100 		jbe	.L1350	#,
 16552      0000
 16553              		.loc 1 1389 9 is_stmt 1 view .LVU5574
 16554              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16555              		.loc 1 1389 37 is_stmt 0 view .LVU5575
 16556 59aa 4889DD   		mov	rbp, rbx	# tmp255, tmp246
 16557              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16558              		.loc 1 1388 43 view .LVU5576
 16559 59ad 4C8D5028 		lea	r10, 40[rax]	# i,
 16560              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16561              		.loc 1 1389 37 view .LVU5577
 16562 59b1 48C1ED06 		shr	rbp, 6	# tmp255,
 16563              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16564              		.loc 1 1389 40 view .LVU5578
 16565 59b5 C462E1F7 		shlx	r9, rcx, rbx	# tmp258, tmp185, tmp246
 16565      C9
 16566              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16567              		.loc 1 1389 37 view .LVU5579
 16568 59ba 4C090CEF 		or	QWORD PTR [rdi+rbp*8], r9	# *_3, tmp258
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16569              		.loc 1 1388 42 is_stmt 1 view .LVU5580
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16570              		.loc 1 1388 25 view .LVU5581
 16571              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16572              		.loc 1 1388 5 is_stmt 0 view .LVU5582
 16573 59be 4C39D6   		cmp	rsi, r10	# max, i
 16574 59c1 7668     		jbe	.L1350	#,
 16575              		.loc 1 1389 9 is_stmt 1 view .LVU5583
 16576              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16577              		.loc 1 1389 37 is_stmt 0 view .LVU5584
 16578 59c3 4D89D3   		mov	r11, r10	# tmp262, i
 16579              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16580              		.loc 1 1388 43 view .LVU5585
 16581 59c6 4C8D683C 		lea	r13, 60[rax]	# i,
 16582              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16583              		.loc 1 1389 37 view .LVU5586
 16584 59ca 49C1EB06 		shr	r11, 6	# tmp262,
 16585              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16586              		.loc 1 1389 40 view .LVU5587
 16587 59ce C462A9F7 		shlx	r12, rcx, r10	# tmp265, tmp185, i
 16587      E1
GAS LISTING /tmp/ccW4ZvF5.s 			page 441


 16588              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16589              		.loc 1 1389 37 view .LVU5588
 16590 59d3 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_3, tmp265
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16591              		.loc 1 1388 42 is_stmt 1 view .LVU5589
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16592              		.loc 1 1388 25 view .LVU5590
 16593              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16594              		.loc 1 1388 5 is_stmt 0 view .LVU5591
 16595 59d7 4C39EE   		cmp	rsi, r13	# max, i
 16596 59da 764F     		jbe	.L1350	#,
 16597              		.loc 1 1389 9 is_stmt 1 view .LVU5592
 16598              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16599              		.loc 1 1389 37 is_stmt 0 view .LVU5593
 16600 59dc 4D89EE   		mov	r14, r13	# tmp269, i
 16601              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16602              		.loc 1 1388 43 view .LVU5594
 16603 59df 488D5050 		lea	rdx, 80[rax]	# i,
 16604              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16605              		.loc 1 1389 37 view .LVU5595
 16606 59e3 49C1EE06 		shr	r14, 6	# tmp269,
 16607              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16608              		.loc 1 1389 40 view .LVU5596
 16609 59e7 C46291F7 		shlx	r15, rcx, r13	# tmp272, tmp185, i
 16609      F9
 16610              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16611              		.loc 1 1389 37 view .LVU5597
 16612 59ec 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_3, tmp272
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16613              		.loc 1 1388 42 is_stmt 1 view .LVU5598
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16614              		.loc 1 1388 25 view .LVU5599
 16615              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16616              		.loc 1 1388 5 is_stmt 0 view .LVU5600
 16617 59f0 4839D6   		cmp	rsi, rdx	# max, i
 16618 59f3 7636     		jbe	.L1350	#,
 16619              		.loc 1 1389 9 is_stmt 1 view .LVU5601
 16620              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16621              		.loc 1 1389 37 is_stmt 0 view .LVU5602
 16622 59f5 4989D0   		mov	r8, rdx	# tmp276, i
 16623              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16624              		.loc 1 1388 43 view .LVU5603
 16625 59f8 488D6864 		lea	rbp, 100[rax]	# i,
 16626              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16627              		.loc 1 1389 37 view .LVU5604
 16628 59fc 49C1E806 		shr	r8, 6	# tmp276,
 16629              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16630              		.loc 1 1389 40 view .LVU5605
 16631 5a00 C4E2E9F7 		shlx	rbx, rcx, rdx	# tmp279, tmp185, i
 16631      D9
 16632              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16633              		.loc 1 1389 37 view .LVU5606
 16634 5a05 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_3, tmp279
GAS LISTING /tmp/ccW4ZvF5.s 			page 442


1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16635              		.loc 1 1388 42 is_stmt 1 view .LVU5607
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16636              		.loc 1 1388 25 view .LVU5608
 16637              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16638              		.loc 1 1388 5 is_stmt 0 view .LVU5609
 16639 5a09 4839EE   		cmp	rsi, rbp	# max, i
 16640 5a0c 761D     		jbe	.L1350	#,
 16641              		.loc 1 1389 9 is_stmt 1 view .LVU5610
 16642              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16643              		.loc 1 1389 37 is_stmt 0 view .LVU5611
 16644 5a0e 4989E9   		mov	r9, rbp	# tmp283, i
 16645              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16646              		.loc 1 1388 43 view .LVU5612
 16647 5a11 4883C078 		add	rax, 120	# i,
 16648              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16649              		.loc 1 1389 37 view .LVU5613
 16650 5a15 49C1E906 		shr	r9, 6	# tmp283,
 16651              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16652              		.loc 1 1389 40 view .LVU5614
 16653 5a19 C462D1F7 		shlx	r10, rcx, rbp	# tmp286, tmp185, i
 16653      D1
 16654              	# sieve_extend.c:1389:         bitarray_word[wordindex(i)] |= markmask(i);
 16655              		.loc 1 1389 37 view .LVU5615
 16656 5a1e 4E0914CF 		or	QWORD PTR [rdi+r9*8], r10	# *_3, tmp286
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16657              		.loc 1 1388 42 is_stmt 1 view .LVU5616
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16658              		.loc 1 1388 25 view .LVU5617
 16659              	# sieve_extend.c:1388:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16660              		.loc 1 1388 5 is_stmt 0 view .LVU5618
 16661 5a22 4839C6   		cmp	rsi, rax	# max, i
 16662 5a25 0F8755FF 		ja	.L1351	#,
 16662      FFFF
 16663              	.LVL957:
 16664              	.L1350:
1388:sieve_extend.c ****         bitarray_word[wordindex(i)] |= markmask(i);
 16665              		.loc 1 1388 5 view .LVU5619
 16666              	.LBE935:
1390:sieve_extend.c ****     }
1391:sieve_extend.c **** 
1392:sieve_extend.c ****     counter_t source_start = 66+64;
 16667              		.loc 1 1392 5 is_stmt 1 view .LVU5620
1393:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16668              		.loc 1 1393 5 view .LVU5621
1394:sieve_extend.c ****     bitarray_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16669              		.loc 1 1394 5 view .LVU5622
1395:sieve_extend.c ****     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16670              		.loc 1 1395 5 view .LVU5623
 16671 5a2b 488B4738 		mov	rax, QWORD PTR 56[rdi]	# D__lsm1.715, MEM[(uint64_t *)bitarray_57(D) + 56B]
 16672              	# sieve_extend.c:1395:     bitarray_word[wordindex(source_start+1)]  |= markmask_calc(source_start+
 16673              		.loc 1 1395 47 is_stmt 0 view .LVU5624
 16674 5a2f 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitarray_57(D) + 16B],
 16674      0C
GAS LISTING /tmp/ccW4ZvF5.s 			page 443


1396:sieve_extend.c **** 
1397:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16675              		.loc 1 1397 5 is_stmt 1 view .LVU5625
 16676              	.LVL958:
1398:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 16677              		.loc 1 1398 5 view .LVU5626
1399:sieve_extend.c ****     
1400:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16678              		.loc 1 1400 5 view .LVU5627
1401:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16679              		.loc 1 1401 5 view .LVU5628
1402:sieve_extend.c **** 
1403:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++) {
 16680              		.loc 1 1403 5 view .LVU5629
 16681              	.LBB936:
 16682              		.loc 1 1403 10 view .LVU5630
 16683              		.loc 1 1403 37 view .LVU5631
 16684 5a34 488B4F18 		mov	rcx, QWORD PTR 24[rdi]	# D__lsm0.714, MEM[(uint64_t *)bitarray_57(D) + 24B]
 16685 5a38 4C8B7758 		mov	r14, QWORD PTR 88[rdi]	# D__lsm2.716, MEM[(uint64_t *)bitarray_57(D) + 88B]
 16686 5a3c 4C8B6F10 		mov	r13, QWORD PTR 16[rdi]	# D__lsm0.702, MEM[(uint64_t *)bitarray_57(D) + 16B]
 16687 5a40 4C8B6730 		mov	r12, QWORD PTR 48[rdi]	# D__lsm1.703, MEM[(uint64_t *)bitarray_57(D) + 48B]
 16688 5a44 488B7750 		mov	rsi, QWORD PTR 80[rdi]	# D__lsm2.704, MEM[(uint64_t *)bitarray_57(D) + 80B]
 16689              	.LVL959:
 16690              		.loc 1 1403 37 is_stmt 0 view .LVU5632
 16691 5a48 488B6F08 		mov	rbp, QWORD PTR 8[rdi]	# D__lsm0.706, MEM[(uint64_t *)bitarray_57(D) + 8B]
 16692 5a4c 488B5F28 		mov	rbx, QWORD PTR 40[rdi]	# D__lsm1.707, MEM[(uint64_t *)bitarray_57(D) + 40B]
 16693 5a50 488B5748 		mov	rdx, QWORD PTR 72[rdi]	# D__lsm2.708, MEM[(uint64_t *)bitarray_57(D) + 72B]
 16694 5a54 4C8B1F   		mov	r11, QWORD PTR [rdi]	# D__lsm0.710, *bitarray_57(D)
 16695 5a57 4C8B5720 		mov	r10, QWORD PTR 32[rdi]	# D__lsm1.711, MEM[(uint64_t *)bitarray_57(D) + 32B]
 16696 5a5b 4C8B4F40 		mov	r9, QWORD PTR 64[rdi]	# D__lsm2.712, MEM[(uint64_t *)bitarray_57(D) + 64B]
 16697 5a5f 48894424 		mov	QWORD PTR -16[rsp], rax	# %sfp, D__lsm1.715
 16697      F0
 16698 5a64 488D4718 		lea	rax, 24[rdi]	# ivtmp.740,
 16699 5a68 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, D__lsm0.714
 16699      E8
 16700              	# sieve_extend.c:1403:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16701              		.loc 1 1403 20 view .LVU5633
 16702 5a6d 48C74424 		mov	QWORD PTR -32[rsp], 3	# %sfp,
 16702      E0030000 
 16702      00
 16703 5a76 4C897424 		mov	QWORD PTR -8[rsp], r14	# %sfp, D__lsm2.716
 16703      F8
 16704              	.LVL960:
 16705              	.L1353:
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16706              		.loc 1 1404 9 is_stmt 1 discriminator 3 view .LVU5634
 16707              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
 16708              		.loc 1 1404 76 is_stmt 0 discriminator 3 view .LVU5635
 16709 5a7b 41BF3600 		mov	r15d, 54	# tmp312,
 16709      0000
 16710 5a81 C4E283F7 		shrx	rcx, QWORD PTR -32[rax], r15	# tmp190, MEM[base: _352, offset: -32B], tmp312
 16710      48E0
 16711              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
1407:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16712              		.loc 1 1407 134 discriminator 3 view .LVU5636
GAS LISTING /tmp/ccW4ZvF5.s 			page 444


 16713 5a87 4C8B7C24 		mov	r15, QWORD PTR -24[rsp]	# D__lsm0.714, %sfp
 16713      E8
 16714              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16715              		.loc 1 1404 134 discriminator 3 view .LVU5637
 16716 5a8c 4D89D8   		mov	r8, r11	# tmp192, D__lsm0.710
 16717 5a8f 49C1E00A 		sal	r8, 10	# tmp192,
 16718              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16719              		.loc 1 1405 134 discriminator 3 view .LVU5638
 16720 5a93 4989EE   		mov	r14, rbp	# tmp194, D__lsm0.706
 16721              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16722              		.loc 1 1406 76 discriminator 3 view .LVU5639
 16723 5a96 48C1ED36 		shr	rbp, 54	# tmp195,
 16724              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16725              		.loc 1 1404 98 discriminator 3 view .LVU5640
 16726 5a9a 4C09C1   		or	rcx, r8	# _24, tmp192
 16727              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16728              		.loc 1 1407 134 discriminator 3 view .LVU5641
 16729 5a9d 49C1E70A 		sal	r15, 10	# D__lsm0.714,
 16730              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16731              		.loc 1 1406 134 discriminator 3 view .LVU5642
 16732 5aa1 4D89E8   		mov	r8, r13	# tmp196, D__lsm0.702
 16733              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16734              		.loc 1 1407 76 discriminator 3 view .LVU5643
 16735 5aa4 49C1ED36 		shr	r13, 54	# tmp197,
 16736              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16737              		.loc 1 1406 134 discriminator 3 view .LVU5644
 16738 5aa8 49C1E00A 		sal	r8, 10	# tmp196,
 16739              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16740              		.loc 1 1407 98 discriminator 3 view .LVU5645
 16741 5aac 4D09EF   		or	r15, r13	# _51, tmp197
 16742              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16743              		.loc 1 1404 134 discriminator 3 view .LVU5646
 16744 5aaf 4D89D5   		mov	r13, r10	# tmp201, D__lsm1.711
 16745              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16746              		.loc 1 1406 98 discriminator 3 view .LVU5647
 16747 5ab2 4909E8   		or	r8, rbp	# _42, tmp195
 16748              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16749              		.loc 1 1405 76 discriminator 3 view .LVU5648
 16750 5ab5 49C1EA36 		shr	r10, 54	# D__lsm1.711,
 16751 5ab9 49C1EB36 		shr	r11, 54	# tmp193,
 16752 5abd 4C89D5   		mov	rbp, r10	# tmp202, D__lsm1.711
 16753              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16754              		.loc 1 1404 134 discriminator 3 view .LVU5649
 16755 5ac0 49C1E50A 		sal	r13, 10	# tmp201,
 16756              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16757              		.loc 1 1405 134 discriminator 3 view .LVU5650
GAS LISTING /tmp/ccW4ZvF5.s 			page 445


 16758 5ac4 4989DA   		mov	r10, rbx	# tmp203, D__lsm1.707
 16759 5ac7 49C1E20A 		sal	r10, 10	# tmp203,
 16760 5acb 49C1E60A 		sal	r14, 10	# tmp194,
 16761              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16762              		.loc 1 1405 98 discriminator 3 view .LVU5651
 16763 5acf 4C09D5   		or	rbp, r10	# D__lsm0.706, tmp203
 16764              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16765              		.loc 1 1407 134 discriminator 3 view .LVU5652
 16766 5ad2 4C8B5424 		mov	r10, QWORD PTR -16[rsp]	# D__lsm1.715, %sfp
 16766      F0
 16767              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16768              		.loc 1 1405 98 discriminator 3 view .LVU5653
 16769 5ad7 4D09DE   		or	r14, r11	# _33, tmp193
 16770              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16771              		.loc 1 1404 40 discriminator 3 view .LVU5654
 16772 5ada 48894848 		mov	QWORD PTR 72[rax], rcx	# MEM[base: _352, offset: 72B], _24
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16773              		.loc 1 1405 9 is_stmt 1 discriminator 3 view .LVU5655
 16774              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16775              		.loc 1 1404 76 is_stmt 0 discriminator 3 view .LVU5656
 16776 5ade 41BB3600 		mov	r11d, 54	# tmp317,
 16776      0000
 16777 5ae4 C462A3F7 		shrx	r11, QWORD PTR [rax], r11	# tmp199, MEM[base: _352, offset: 0B], tmp317
 16777      18
 16778              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16779              		.loc 1 1405 40 discriminator 3 view .LVU5657
 16780 5ae9 4C897050 		mov	QWORD PTR 80[rax], r14	# MEM[base: _352, offset: 80B], _33
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16781              		.loc 1 1406 9 is_stmt 1 discriminator 3 view .LVU5658
 16782              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16783              		.loc 1 1407 134 is_stmt 0 discriminator 3 view .LVU5659
 16784 5aed 49C1E20A 		sal	r10, 10	# D__lsm1.715,
 16785              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16786              		.loc 1 1404 98 discriminator 3 view .LVU5660
 16787 5af1 4D09EB   		or	r11, r13	# D__lsm0.710, tmp201
 16788              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16789              		.loc 1 1406 40 discriminator 3 view .LVU5661
 16790 5af4 4C894058 		mov	QWORD PTR 88[rax], r8	# MEM[base: _352, offset: 88B], _42
 16791              		.loc 1 1407 9 is_stmt 1 discriminator 3 view .LVU5662
 16792              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16793              		.loc 1 1406 76 is_stmt 0 discriminator 3 view .LVU5663
 16794 5af8 4989DD   		mov	r13, rbx	# D__lsm1.707, D__lsm1.707
 16795 5afb 49C1ED36 		shr	r13, 54	# D__lsm1.707,
 16796              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16797              		.loc 1 1406 134 discriminator 3 view .LVU5664
 16798 5aff 4C89E3   		mov	rbx, r12	# tmp205, D__lsm1.703
 16799 5b02 48C1E30A 		sal	rbx, 10	# tmp205,
 16800              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
GAS LISTING /tmp/ccW4ZvF5.s 			page 446


 16801              		.loc 1 1407 76 discriminator 3 view .LVU5665
 16802 5b06 49C1EC36 		shr	r12, 54	# tmp206,
 16803              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16804              		.loc 1 1406 98 discriminator 3 view .LVU5666
 16805 5b0a 4909DD   		or	r13, rbx	# D__lsm0.702, tmp205
 16806              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16807              		.loc 1 1404 134 discriminator 3 view .LVU5667
 16808 5b0d 4C89CB   		mov	rbx, r9	# tmp210, D__lsm2.712
 16809              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16810              		.loc 1 1407 98 discriminator 3 view .LVU5668
 16811 5b10 4D09D4   		or	r12, r10	# tmp206, tmp207
 16812              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16813              		.loc 1 1404 134 discriminator 3 view .LVU5669
 16814 5b13 48C1E30A 		sal	rbx, 10	# tmp210,
 16815              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16816              		.loc 1 1405 76 discriminator 3 view .LVU5670
 16817 5b17 49C1E936 		shr	r9, 54	# D__lsm2.712,
 16818              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16819              		.loc 1 1407 40 discriminator 3 view .LVU5671
 16820 5b1b 4C89A080 		mov	QWORD PTR 128[rax], r12	# MEM[base: _352, offset: 128B], D__lsm0.714
 16820      000000
 16821              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16822              		.loc 1 1407 98 discriminator 3 view .LVU5672
 16823 5b22 4C896424 		mov	QWORD PTR -24[rsp], r12	# %sfp, D__lsm0.714
 16823      E8
 16824              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16825              		.loc 1 1404 76 discriminator 3 view .LVU5673
 16826 5b27 41BC3600 		mov	r12d, 54	# tmp326,
 16826      0000
 16827 5b2d C4629BF7 		shrx	r10, QWORD PTR 32[rax], r12	# tmp208, MEM[base: _352, offset: 32B], tmp326
 16827      5020
 16828              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16829              		.loc 1 1404 98 discriminator 3 view .LVU5674
 16830 5b33 4909DA   		or	r10, rbx	# D__lsm1.711, tmp210
 16831              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16832              		.loc 1 1405 76 discriminator 3 view .LVU5675
 16833 5b36 4C89CB   		mov	rbx, r9	# tmp211, D__lsm2.712
 16834              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16835              		.loc 1 1405 134 discriminator 3 view .LVU5676
 16836 5b39 4989D1   		mov	r9, rdx	# tmp212, D__lsm2.708
 16837 5b3c 49C1E10A 		sal	r9, 10	# tmp212,
 16838              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16839              		.loc 1 1406 76 discriminator 3 view .LVU5677
 16840 5b40 4989D4   		mov	r12, rdx	# D__lsm2.708, D__lsm2.708
 16841              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16842              		.loc 1 1405 98 discriminator 3 view .LVU5678
 16843 5b43 4C09CB   		or	rbx, r9	# D__lsm1.707, tmp212
GAS LISTING /tmp/ccW4ZvF5.s 			page 447


 16844              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16845              		.loc 1 1406 134 discriminator 3 view .LVU5679
 16846 5b46 4889F2   		mov	rdx, rsi	# tmp214, D__lsm2.704
 16847              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16848              		.loc 1 1407 134 discriminator 3 view .LVU5680
 16849 5b49 4C8B4C24 		mov	r9, QWORD PTR -8[rsp]	# D__lsm2.716, %sfp
 16849      F8
 16850              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16851              		.loc 1 1406 76 discriminator 3 view .LVU5681
 16852 5b4e 49C1EC36 		shr	r12, 54	# D__lsm2.708,
 16853              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16854              		.loc 1 1406 134 discriminator 3 view .LVU5682
 16855 5b52 48C1E20A 		sal	rdx, 10	# tmp214,
 16856              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16857              		.loc 1 1407 134 discriminator 3 view .LVU5683
 16858 5b56 49C1E10A 		sal	r9, 10	# D__lsm2.716,
 16859              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16860              		.loc 1 1406 98 discriminator 3 view .LVU5684
 16861 5b5a 4909D4   		or	r12, rdx	# D__lsm1.703, tmp214
 16862              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16863              		.loc 1 1407 76 discriminator 3 view .LVU5685
 16864 5b5d 48C1EE36 		shr	rsi, 54	# tmp215,
 16865              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16866              		.loc 1 1404 134 discriminator 3 view .LVU5686
 16867 5b61 4889CA   		mov	rdx, rcx	# tmp219, _24
 16868              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16869              		.loc 1 1407 40 discriminator 3 view .LVU5687
 16870 5b64 4C897860 		mov	QWORD PTR 96[rax], r15	# MEM[base: _352, offset: 96B], _51
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16871              		.loc 1 1403 54 is_stmt 1 discriminator 3 view .LVU5688
 16872              	.LVL961:
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16873              		.loc 1 1403 37 discriminator 3 view .LVU5689
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16874              		.loc 1 1404 9 discriminator 3 view .LVU5690
 16875              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16876              		.loc 1 1407 98 is_stmt 0 discriminator 3 view .LVU5691
 16877 5b68 4C09CE   		or	rsi, r9	# tmp215, tmp216
 16878              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16879              		.loc 1 1404 134 discriminator 3 view .LVU5692
 16880 5b6b 48C1E20A 		sal	rdx, 10	# tmp219,
 16881              	# sieve_extend.c:1403:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16882              		.loc 1 1403 65 discriminator 3 view .LVU5693
 16883 5b6f 48834424 		add	QWORD PTR -32[rsp], 4	# %sfp,
 16883      E004
 16884              	.LVL962:
 16885              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16886              		.loc 1 1407 40 discriminator 3 view .LVU5694
 16887 5b75 4889B0A0 		mov	QWORD PTR 160[rax], rsi	# MEM[base: _352, offset: 160B], D__lsm1.715
 16887      000000
GAS LISTING /tmp/ccW4ZvF5.s 			page 448


 16888 5b7c 4883E880 		sub	rax, -128	# ivtmp.740,
 16889              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16890              		.loc 1 1407 98 discriminator 3 view .LVU5695
 16891 5b80 48897424 		mov	QWORD PTR -16[rsp], rsi	# %sfp, D__lsm1.715
 16891      F0
 16892              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16893              		.loc 1 1404 76 discriminator 3 view .LVU5696
 16894 5b85 BE360000 		mov	esi, 54	# tmp335,
 16894      00
 16895 5b8a C462CBF7 		shrx	r9, QWORD PTR -64[rax], rsi	# tmp217, MEM[base: _352, offset: 64B], tmp335
 16895      48C0
 16896              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16897              		.loc 1 1404 98 discriminator 3 view .LVU5697
 16898 5b90 4909D1   		or	r9, rdx	# D__lsm2.712, tmp219
 16899              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16900              		.loc 1 1405 134 discriminator 3 view .LVU5698
 16901 5b93 4C89F2   		mov	rdx, r14	# tmp221, _33
 16902              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16903              		.loc 1 1406 134 discriminator 3 view .LVU5699
 16904 5b96 4C89C6   		mov	rsi, r8	# tmp223, _42
 16905              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16906              		.loc 1 1405 76 discriminator 3 view .LVU5700
 16907 5b99 48C1E936 		shr	rcx, 54	# tmp220,
 16908              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16909              		.loc 1 1405 134 discriminator 3 view .LVU5701
 16910 5b9d 48C1E20A 		sal	rdx, 10	# tmp221,
 16911              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16912              		.loc 1 1406 76 discriminator 3 view .LVU5702
 16913 5ba1 49C1EE36 		shr	r14, 54	# tmp222,
 16914              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16915              		.loc 1 1405 98 discriminator 3 view .LVU5703
 16916 5ba5 4809CA   		or	rdx, rcx	# D__lsm2.708, tmp220
 16917              	# sieve_extend.c:1403:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16918              		.loc 1 1403 65 discriminator 3 view .LVU5704
 16919 5ba8 488B4C24 		mov	rcx, QWORD PTR -32[rsp]	# copy_vector, %sfp
 16919      E0
 16920              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16921              		.loc 1 1406 134 discriminator 3 view .LVU5705
 16922 5bad 48C1E60A 		sal	rsi, 10	# tmp223,
 16923              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16924              		.loc 1 1407 134 discriminator 3 view .LVU5706
 16925 5bb1 49C1E70A 		sal	r15, 10	# tmp225,
 16926              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16927              		.loc 1 1406 98 discriminator 3 view .LVU5707
 16928 5bb5 4C09F6   		or	rsi, r14	# D__lsm2.704, tmp222
 16929              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
GAS LISTING /tmp/ccW4ZvF5.s 			page 449


 16930              		.loc 1 1407 76 discriminator 3 view .LVU5708
 16931 5bb8 49C1E836 		shr	r8, 54	# tmp224,
 16932              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16933              		.loc 1 1404 40 discriminator 3 view .LVU5709
 16934 5bbc 4C8958E8 		mov	QWORD PTR -24[rax], r11	# MEM[base: _352, offset: 104B], D__lsm0.710
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16935              		.loc 1 1405 9 is_stmt 1 discriminator 3 view .LVU5710
 16936              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16937              		.loc 1 1407 98 is_stmt 0 discriminator 3 view .LVU5711
 16938 5bc0 4D09F8   		or	r8, r15	# tmp224, tmp225
 16939              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16940              		.loc 1 1405 40 discriminator 3 view .LVU5712
 16941 5bc3 488968F0 		mov	QWORD PTR -16[rax], rbp	# MEM[base: _352, offset: 112B], D__lsm0.706
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16942              		.loc 1 1406 9 is_stmt 1 discriminator 3 view .LVU5713
 16943              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16944              		.loc 1 1406 40 is_stmt 0 discriminator 3 view .LVU5714
 16945 5bc7 4C8968F8 		mov	QWORD PTR -8[rax], r13	# MEM[base: _352, offset: 120B], D__lsm0.702
 16946              		.loc 1 1407 9 is_stmt 1 discriminator 3 view .LVU5715
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16947              		.loc 1 1403 54 discriminator 3 view .LVU5716
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16948              		.loc 1 1403 37 discriminator 3 view .LVU5717
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16949              		.loc 1 1404 9 discriminator 3 view .LVU5718
 16950              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16951              		.loc 1 1404 40 is_stmt 0 discriminator 3 view .LVU5719
 16952 5bcb 4C895008 		mov	QWORD PTR 8[rax], r10	# MEM[base: _352, offset: 136B], D__lsm1.711
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16953              		.loc 1 1405 9 is_stmt 1 discriminator 3 view .LVU5720
 16954              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16955              		.loc 1 1405 40 is_stmt 0 discriminator 3 view .LVU5721
 16956 5bcf 48895810 		mov	QWORD PTR 16[rax], rbx	# MEM[base: _352, offset: 144B], D__lsm1.707
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16957              		.loc 1 1406 9 is_stmt 1 discriminator 3 view .LVU5722
 16958              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16959              		.loc 1 1406 40 is_stmt 0 discriminator 3 view .LVU5723
 16960 5bd3 4C896018 		mov	QWORD PTR 24[rax], r12	# MEM[base: _352, offset: 152B], D__lsm1.703
 16961              		.loc 1 1407 9 is_stmt 1 discriminator 3 view .LVU5724
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16962              		.loc 1 1403 54 discriminator 3 view .LVU5725
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16963              		.loc 1 1403 37 discriminator 3 view .LVU5726
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16964              		.loc 1 1404 9 discriminator 3 view .LVU5727
 16965              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16966              		.loc 1 1404 40 is_stmt 0 discriminator 3 view .LVU5728
 16967 5bd7 4C894828 		mov	QWORD PTR 40[rax], r9	# MEM[base: _352, offset: 168B], D__lsm2.712
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16968              		.loc 1 1405 9 is_stmt 1 discriminator 3 view .LVU5729
GAS LISTING /tmp/ccW4ZvF5.s 			page 450


 16969              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 16970              		.loc 1 1405 40 is_stmt 0 discriminator 3 view .LVU5730
 16971 5bdb 48895030 		mov	QWORD PTR 48[rax], rdx	# MEM[base: _352, offset: 176B], D__lsm2.708
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16972              		.loc 1 1406 9 is_stmt 1 discriminator 3 view .LVU5731
 16973              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 16974              		.loc 1 1406 40 is_stmt 0 discriminator 3 view .LVU5732
 16975 5bdf 48897038 		mov	QWORD PTR 56[rax], rsi	# MEM[base: _352, offset: 184B], D__lsm2.704
 16976              		.loc 1 1407 9 is_stmt 1 discriminator 3 view .LVU5733
 16977              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16978              		.loc 1 1407 40 is_stmt 0 discriminator 3 view .LVU5734
 16979 5be3 4C894040 		mov	QWORD PTR 64[rax], r8	# MEM[base: _352, offset: 192B], D__lsm2.716
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16980              		.loc 1 1403 54 is_stmt 1 discriminator 3 view .LVU5735
 16981              	.LVL963:
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 16982              		.loc 1 1403 37 discriminator 3 view .LVU5736
 16983 5be7 4881F98F 		cmp	rcx, 399	# copy_vector,
 16983      010000
 16984              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 16985              		.loc 1 1407 98 is_stmt 0 discriminator 3 view .LVU5737
 16986 5bee 4C894424 		mov	QWORD PTR -8[rsp], r8	# %sfp, D__lsm2.716
 16986      F8
 16987 5bf3 0F8582FE 		jne	.L1353	#,
 16987      FFFF
 16988 5bf9 488D8780 		lea	rax, 12672[rdi]	# ivtmp.726,
 16988      310000
 16989 5c00 4C8DB7E0 		lea	r14, 12768[rdi]	# ivtmp.727,
 16989      310000
 16990 5c07 4881C7A0 		add	rdi, 12704	# _224,
 16990      310000
 16991              	.LVL964:
 16992 5c0e 6690     		.p2align 4
 16993              		.p2align 3
 16994              	.L1354:
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16995              		.loc 1 1404 9 is_stmt 1 view .LVU5738
 16996              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 16997              		.loc 1 1404 134 is_stmt 0 view .LVU5739
 16998 5c10 41B80A00 		mov	r8d, 10	# tmp343,
 16998      0000
 16999              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 17000              		.loc 1 1404 76 view .LVU5740
 17001 5c16 41BF3600 		mov	r15d, 54	# tmp344,
 17001      0000
 17002              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 17003              		.loc 1 1404 134 view .LVU5741
 17004 5c1c C462B9F7 		shlx	r11, QWORD PTR [rax], r8	# tmp226, MEM[base: _232, offset: 0B], tmp343
 17004      18
 17005              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 17006              		.loc 1 1404 76 view .LVU5742
GAS LISTING /tmp/ccW4ZvF5.s 			page 451


 17007 5c21 C4E283F7 		shrx	rbp, QWORD PTR -8[rax], r15	# tmp228, MEM[base: _232, offset: -8B], tmp344
 17007      68F8
 17008              	# sieve_extend.c:1404:         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >
1404:sieve_extend.c ****         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >> shift_bit_flipped) | 
 17009              		.loc 1 1404 98 view .LVU5743
 17010 5c27 4909EB   		or	r11, rbp	# tmp230, tmp228
 17011 5c2a 4883C020 		add	rax, 32	# ivtmp.726,
 17012 5c2e 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _231, offset: 0B], tmp230
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 17013              		.loc 1 1405 9 is_stmt 1 view .LVU5744
 17014              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 17015              		.loc 1 1405 134 is_stmt 0 view .LVU5745
 17016 5c31 C462B9F7 		shlx	r13, QWORD PTR -24[rax], r8	# tmp231, MEM[base: _232, offset: 8B], tmp345
 17016      68E8
 17017              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 17018              		.loc 1 1405 76 view .LVU5746
 17019 5c37 C46283F7 		shrx	r10, QWORD PTR -32[rax], r15	# tmp233, MEM[base: _232, offset: 0B], tmp346
 17019      50E0
 17020              	# sieve_extend.c:1405:         bitarray_word[copy_vector*4+1] = (bitarray_word[source_vector*4  ] >
1405:sieve_extend.c ****         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >> shift_bit_flipped) | 
 17021              		.loc 1 1405 98 view .LVU5747
 17022 5c3d 4D09D5   		or	r13, r10	# tmp235, tmp233
 17023 5c40 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _231, offset: 8B], tmp235
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17024              		.loc 1 1406 9 is_stmt 1 view .LVU5748
 17025              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17026              		.loc 1 1406 134 is_stmt 0 view .LVU5749
 17027 5c44 C4E2B9F7 		shlx	rbx, QWORD PTR -16[rax], r8	# tmp236, MEM[base: _232, offset: 16B], tmp347
 17027      58F0
 17028              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17029              		.loc 1 1406 76 view .LVU5750
 17030 5c4a C46283F7 		shrx	r12, QWORD PTR -24[rax], r15	# tmp238, MEM[base: _232, offset: 8B], tmp348
 17030      60E8
 17031              	# sieve_extend.c:1406:         bitarray_word[copy_vector*4+2] = (bitarray_word[source_vector*4+1] >
1406:sieve_extend.c ****         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >> shift_bit_flipped) | 
 17032              		.loc 1 1406 98 view .LVU5751
 17033 5c50 4C09E3   		or	rbx, r12	# tmp240, tmp238
 17034 5c53 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _231, offset: 16B], tmp240
 17035              		.loc 1 1407 9 is_stmt 1 view .LVU5752
 17036              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17037              		.loc 1 1407 76 is_stmt 0 view .LVU5753
 17038 5c57 C46283F7 		shrx	r9, QWORD PTR -16[rax], r15	# tmp241, MEM[base: _232, offset: 16B], tmp349
 17038      48F0
 17039              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17040              		.loc 1 1407 134 view .LVU5754
 17041 5c5d C4E2B9F7 		shlx	rdx, QWORD PTR -8[rax], r8	# tmp243, MEM[base: _232, offset: 24B], tmp350
 17041      50F8
 17042              	# sieve_extend.c:1407:         bitarray_word[copy_vector*4+3] = (bitarray_word[source_vector*4+2] >
 17043              		.loc 1 1407 98 view .LVU5755
 17044 5c63 4909D1   		or	r9, rdx	# tmp245, tmp243
 17045 5c66 4D894E18 		mov	QWORD PTR 24[r14], r9	# MEM[base: _231, offset: 24B], tmp245
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 17046              		.loc 1 1403 54 is_stmt 1 view .LVU5756
GAS LISTING /tmp/ccW4ZvF5.s 			page 452


1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 17047              		.loc 1 1403 37 view .LVU5757
 17048 5c6a 4983C620 		add	r14, 32	# ivtmp.727,
 17049              	# sieve_extend.c:1403:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1403:sieve_extend.c ****         bitarray_word[copy_vector*4  ] = (bitarray_word[source_vector*4-1] >> shift_bit_flipped) | 
 17050              		.loc 1 1403 5 is_stmt 0 view .LVU5758
 17051 5c6e 4839C7   		cmp	rdi, rax	# _224, ivtmp.726
 17052 5c71 759D     		jne	.L1354	#,
 17053              	.LBE936:
 17054              	# sieve_extend.c:1409: }
1408:sieve_extend.c ****     }
1409:sieve_extend.c **** }
 17055              		.loc 1 1409 1 view .LVU5759
 17056 5c73 5B       		pop	rbx	#
 17057              		.cfi_def_cfa_offset 48
 17058 5c74 5D       		pop	rbp	#
 17059              		.cfi_def_cfa_offset 40
 17060 5c75 415C     		pop	r12	#
 17061              		.cfi_def_cfa_offset 32
 17062 5c77 415D     		pop	r13	#
 17063              		.cfi_def_cfa_offset 24
 17064 5c79 415E     		pop	r14	#
 17065              		.cfi_def_cfa_offset 16
 17066 5c7b 415F     		pop	r15	#
 17067              		.cfi_def_cfa_offset 8
 17068 5c7d C3       		ret	
 17069              		.cfi_endproc
 17070              	.LFE98:
 17072              		.section	.rodata.str1.1
 17073              	.LC29:
 17074 0044 5573696E 		.string	"Using Pointers"
 17074      6720506F 
 17074      696E7465 
 17074      727300
 17075              	.LC30:
 17076 0053 2D2D6865 		.string	"--help"
 17076      6C7000
 17077              	.LC31:
 17078 005a 2D2D7665 		.string	"--verbose"
 17078      72626F73 
 17078      6500
 17079              	.LC32:
 17080 0064 4E6F2076 		.string	"No verbose level specified\n"
 17080      6572626F 
 17080      7365206C 
 17080      6576656C 
 17080      20737065 
 17081              		.section	.rodata.str1.8
 17082 03ae 0000     		.align 8
 17083              	.LC33:
 17084 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 17084      723A2049 
 17084      6E76616C 
 17084      6964206D 
 17084      65617375 
 17085              		.section	.rodata.str1.1
 17086              	.LC34:
GAS LISTING /tmp/ccW4ZvF5.s 			page 453


 17087 0080 56657262 		.string	"Verbose level set to %d\n"
 17087      6F736520 
 17087      6C657665 
 17087      6C207365 
 17087      7420746F 
 17088              	.LC35:
 17089 0099 2D2D6368 		.string	"--check"
 17089      65636B00 
 17090              	.LC36:
 17091 00a1 2D2D7475 		.string	"--tune"
 17091      6E6500
 17092              	.LC37:
 17093 00a8 4E6F2074 		.string	"No tune level specified\n"
 17093      756E6520 
 17093      6C657665 
 17093      6C207370 
 17093      65636966 
 17094              		.section	.rodata.str1.8
 17095 03d5 000000   		.align 8
 17096              	.LC38:
 17097 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 17097      723A2049 
 17097      6E76616C 
 17097      69642074 
 17097      756E6520 
 17098              		.section	.rodata.str1.1
 17099              	.LC39:
 17100 00c1 54756E65 		.string	"Tune level set to %d\n"
 17100      206C6576 
 17100      656C2073 
 17100      65742074 
 17100      6F202564 
 17101              	.LC40:
 17102 00d7 2D2D7368 		.string	"--show"
 17102      6F7700
 17103              	.LC41:
 17104 00de 4E6F2073 		.string	"No show maximum specified\n"
 17104      686F7720 
 17104      6D617869 
 17104      6D756D20 
 17104      73706563 
 17105              	.LC42:
 17106 00f9 256A7500 		.string	"%ju"
 17107              		.section	.rodata.str1.8
 17108 03f7 00       		.align 8
 17109              	.LC43:
 17110 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 17110      723A2049 
 17110      6E76616C 
 17110      69642073 
 17110      686F7720 
 17111              		.section	.rodata.str1.1
 17112              	.LC44:
 17113 00fd 53686F77 		.string	"Show maximum set to %ju\n"
 17113      206D6178 
 17113      696D756D 
 17113      20736574 
GAS LISTING /tmp/ccW4ZvF5.s 			page 454


 17113      20746F20 
 17114              	.LC45:
 17115 0116 496E7661 		.string	"Invalid size %s\n"
 17115      6C696420 
 17115      73697A65 
 17115      2025730A 
 17115      00
 17116              	.LC46:
 17117 0127 56616C69 		.string	"Validating... "
 17117      64617469 
 17117      6E672E2E 
 17117      2E2000
 17118              	.LC47:
 17119 0136 2E2E2E43 		.string	"...Checking size %ju ..."
 17119      6865636B 
 17119      696E6720 
 17119      73697A65 
 17119      20256A75 
 17120              	.LC48:
 17121 014f 2E626C6F 		.string	".blocksize %ju-"
 17121      636B7369 
 17121      7A652025 
 17121      6A752D00 
 17122              	.LC49:
 17123 015f 76616C69 		.string	"valid;"
 17123      643B00
 17124              	.LC50:
 17125 0166 2E2E2E56 		.string	"...Valid algorithm"
 17125      616C6964 
 17125      20616C67 
 17125      6F726974 
 17125      686D00
 17126              	.LC51:
 17127 0179 54756E69 		.string	"Tuning..."
 17127      6E672E2E 
 17127      2E00
 17128              	.LC52:
 17129 0183 2E283E29 		.string	".(>)"
 17129      00
 17130              		.section	.rodata.str1.8
 17131 0419 00000000 		.align 8
 17131      000000
 17132              	.LC53:
 17133 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 17133      6B73697A 
 17133      655F6269 
 17133      74732025 
 17133      31306A75 
 17134              		.section	.rodata.str1.1
 17135              	.LC54:
 17136 0188 2E2E2E2E 		.string	"...."
 17136      00
 17137              		.section	.rodata.str1.8
 17138 04a7 00       		.align 8
 17139              	.LC55:
 17140 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 17140      72657375 
GAS LISTING /tmp/ccW4ZvF5.s 			page 455


 17140      6C74732E 
 17140      20496E69 
 17140      74616C20 
 17141              		.section	.rodata.str1.1
 17142              	.LC56:
 17143 018d 42657374 		.string	"Best options"
 17143      206F7074 
 17143      696F6E73 
 17143      00
 17144              	.LC57:
 17145 019a 28256A75 		.string	"(%ju) "
 17145      292000
 17146              	.LC58:
 17147 01a1 2E2E2E00 		.string	"..."
 17148              	.LC59:
 17149 01a5 2E426573 		.string	".Best result:"
 17149      74207265 
 17149      73756C74 
 17149      3A00
 17150              		.section	.rodata.str1.8
 17151 050f 00       		.align 8
 17152              	.LC60:
 17153 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 17153      686D6172 
 17153      6B696E67 
 17153      2E2E2E20 
 17153      77697468 
 17154 0547 00       		.align 8
 17155              	.LC62:
 17156 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 17156      65727661 
 17156      6E64616D 
 17156      5F657874 
 17156      656E643B 
 17157 058a 00000000 		.align 8
 17157      0000
 17158              	.LC63:
 17159 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 17159      6573202D 
 17159      20706572 
 17159      20352073 
 17159      65636F6E 
 17160              		.section	.rodata.str1.1
 17161              	.LC64:
 17162 01b3 53686F77 		.string	"Show result set:"
 17162      20726573 
 17162      756C7420 
 17162      7365743A 
 17162      00
 17163              		.section	.text.startup,"ax",@progbits
 17164              		.p2align 4
 17165              		.globl	main
 17167              	main:
 17168              	.LVL965:
 17169              	.LFB99:
1410:sieve_extend.c **** int main(int argc, char *argv[]) {
 17170              		.loc 1 1410 34 is_stmt 1 view -0
GAS LISTING /tmp/ccW4ZvF5.s 			page 456


 17171              		.cfi_startproc
 17172              		.loc 1 1410 34 is_stmt 0 view .LVU5761
 17173 0000 F30F1EFA 		endbr64	
 17174 0004 4157     		push	r15	#
 17175              		.cfi_def_cfa_offset 16
 17176              		.cfi_offset 15, -16
 17177 0006 4156     		push	r14	#
 17178              		.cfi_def_cfa_offset 24
 17179              		.cfi_offset 14, -24
 17180 0008 4155     		push	r13	#
 17181              		.cfi_def_cfa_offset 32
 17182              		.cfi_offset 13, -32
 17183 000a 4154     		push	r12	#
 17184              		.cfi_def_cfa_offset 40
 17185              		.cfi_offset 12, -40
 17186 000c 55       		push	rbp	#
 17187              		.cfi_def_cfa_offset 48
 17188              		.cfi_offset 6, -48
 17189 000d 53       		push	rbx	#
 17190              		.cfi_def_cfa_offset 56
 17191              		.cfi_offset 3, -56
 17192 000e 488DA424 		lea	rsp, -248[rsp]	#,
 17192      08FFFFFF 
 17193              		.cfi_def_cfa_offset 304
 17194              	# sieve_extend.c:1410: int main(int argc, char *argv[]) {
 17195              		.loc 1 1410 34 view .LVU5762
 17196 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 17196      25280000 
 17196      00
 17197 001f 48898424 		mov	QWORD PTR 232[rsp], rax	# D.7651, tmp571
 17197      E8000000 
 17198 0027 31C0     		xor	eax, eax	# tmp571
1411:sieve_extend.c ****     
1412:sieve_extend.c **** //     struct sieve_t* sieve = sieve_create(1000000);
1413:sieve_extend.c **** //     bitvector_t* bitarray = (bitvector_t*)sieve->bitarray;
1414:sieve_extend.c **** 
1415:sieve_extend.c **** //     int passes1 = benchmark(1, testshuffle_vector , sieve->bitarray, 500000);
1416:sieve_extend.c **** //     int passes2 = benchmark(1, testshuffle_vector2, sieve->bitarray, 500000);
1417:sieve_extend.c **** //     // int passes3 = benchmark(1, test3, sieve->bitarray, 500000);
1418:sieve_extend.c **** 
1419:sieve_extend.c **** //     // testshuffle(bitarray,1000000);
1420:sieve_extend.c **** // //    dump_bitarray((bitword_t *)bitarray,20);
1421:sieve_extend.c **** 
1422:sieve_extend.c **** //     sieve_delete(sieve);
1423:sieve_extend.c **** //     printf("Passes1:"); printfcomma2(passes1);printf("\n");
1424:sieve_extend.c **** //     printf("Passes2:"); printfcomma2(passes2);printf("\n");
1425:sieve_extend.c **** //     // printf("Passes3:"); printfcomma2(passes3);printf("\n");
1426:sieve_extend.c **** //     exit(0);
1427:sieve_extend.c ****     
1428:sieve_extend.c ****     
1429:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 17199              		.loc 1 1429 5 is_stmt 1 view .LVU5763
 17200              	# sieve_extend.c:1429:     counter_t option_maxFactor  = default_sieve_limit;
 17201              		.loc 1 1429 15 is_stmt 0 view .LVU5764
 17202 0029 48C78424 		mov	QWORD PTR 176[rsp], 1000000	# option_maxFactor,
 17202      B0000000 
 17202      40420F00 
GAS LISTING /tmp/ccW4ZvF5.s 			page 457


1430:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17203              		.loc 1 1430 5 is_stmt 1 view .LVU5765
 17204              	.LBB1045:
 17205              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1431:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1432:sieve_extend.c ****     int option_check = default_check_level;
1433:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1434:sieve_extend.c **** 
1435:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 17206              		.loc 1 1435 5 is_stmt 0 view .LVU5766
 17207 0035 83FF01   		cmp	edi, 1	# argc,
 17208              	.LBE1045:
 17209              	# sieve_extend.c:1430:     counter_t option_showMaxFactor = default_showMaxFactor;
1430:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17210              		.loc 1 1430 15 view .LVU5767
 17211 0038 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17211      B8000000 
 17211      00000000 
1431:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17212              		.loc 1 1431 5 is_stmt 1 view .LVU5768
 17213              	# sieve_extend.c:1431:     int option_verboselevel = default_verbose_level;
1431:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17214              		.loc 1 1431 9 is_stmt 0 view .LVU5769
 17215 0044 C78424A8 		mov	DWORD PTR 168[rsp], 2	# option_verboselevel,
 17215      00000002 
 17215      000000
1432:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 17216              		.loc 1 1432 5 is_stmt 1 view .LVU5770
 17217              	.LVL966:
1433:sieve_extend.c **** 
 17218              		.loc 1 1433 5 view .LVU5771
 17219              	# sieve_extend.c:1433:     int option_tunelevel = default_tune_level;
1433:sieve_extend.c **** 
 17220              		.loc 1 1433 9 is_stmt 0 view .LVU5772
 17221 004f C78424AC 		mov	DWORD PTR 172[rsp], 2	# option_tunelevel,
 17221      00000002 
 17221      000000
 17222              		.loc 1 1435 5 is_stmt 1 view .LVU5773
 17223              	.LBB1070:
 17224              		.loc 1 1435 10 view .LVU5774
 17225              	.LVL967:
 17226              		.loc 1 1435 21 view .LVU5775
 17227              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
 17228              		.loc 1 1435 5 is_stmt 0 view .LVU5776
 17229 005a 0F8E2C05 		jle	.L1402	#,
 17229      0000
 17230 0060 89FD     		mov	ebp, edi	# argc, tmp527
 17231 0062 4989F4   		mov	r12, rsi	# argv, tmp528
 17232              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
 17233              		.loc 1 1435 14 view .LVU5777
 17234 0065 BB010000 		mov	ebx, 1	# arg,
 17234      00
 17235 006a 4C8D2D00 		lea	r13, .LC30[rip]	# tmp467,
 17235      000000
 17236              	# sieve_extend.c:1437:         else if (strcmp(argv[arg], "--verbose")==0) {
1436:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1437:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 458


 17237              		.loc 1 1437 18 view .LVU5778
 17238 0071 4C8D3500 		lea	r14, .LC31[rip]	# tmp482,
 17238      000000
 17239 0078 EB66     		jmp	.L1385	#
 17240              	.LVL968:
 17241 007a 660F1F44 		.p2align 4,,7
 17241      0000
 17242              		.p2align 3
 17243              	.L1521:
1438:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17244              		.loc 1 1438 13 is_stmt 1 view .LVU5779
 17245              	# sieve_extend.c:1438:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 17246              		.loc 1 1438 16 is_stmt 0 view .LVU5780
 17247 0080 83C301   		add	ebx, 1	# arg,
 17248              	.LVL969:
 17249              		.loc 1 1438 16 view .LVU5781
 17250 0083 39DD     		cmp	ebp, ebx	# argc, arg
 17251 0085 0F8E2B0F 		jle	.L1519	#,
 17251      0000
1439:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17252              		.loc 1 1439 13 is_stmt 1 view .LVU5782
 17253              	# sieve_extend.c:1439:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17254              		.loc 1 1439 28 is_stmt 0 view .LVU5783
 17255 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 17255      08
 17256              	# sieve_extend.c:1439:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17257              		.loc 1 1439 17 view .LVU5784
 17258 0090 488D9424 		lea	rdx, 168[rsp]	# tmp303,
 17258      A8000000 
 17259 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 17260 009b 31C0     		xor	eax, eax	#
 17261 009d 488D3500 		lea	rsi, .LC26[rip]	#,
 17261      000000
 17262 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 17262      00
 17263              	.LVL970:
 17264              	# sieve_extend.c:1439:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17265              		.loc 1 1439 16 view .LVU5785
 17266 00a9 83F801   		cmp	eax, 1	# tmp529,
 17267 00ac 0F850C05 		jne	.L1391	#,
 17267      0000
 17268              	# sieve_extend.c:1439:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17269              		.loc 1 1439 91 discriminator 1 view .LVU5786
 17270 00b2 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.16_19, option_verboselevel
 17270      000000
 17271              	# sieve_extend.c:1439:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17272              		.loc 1 1439 68 discriminator 1 view .LVU5787
 17273 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 17274 00bc 0F8FFC04 		jg	.L1391	#,
 17274      0000
1440:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1441:sieve_extend.c ****             }
1442:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 17275              		.loc 1 1442 13 is_stmt 1 view .LVU5788
 17276              	.LVL971:
 17277              	.LBB1046:
 17278              	.LBI1046:
GAS LISTING /tmp/ccW4ZvF5.s 			page 459


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17279              		.loc 3 105 1 view .LVU5789
 17280              	.LBB1047:
 17281              		.loc 3 107 3 view .LVU5790
 17282              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17283              		.loc 3 107 10 is_stmt 0 view .LVU5791
 17284 00c2 488D3500 		lea	rsi, .LC34[rip]	#,
 17284      000000
 17285 00c9 BF010000 		mov	edi, 1	#,
 17285      00
 17286 00ce 31C0     		xor	eax, eax	#
 17287 00d0 E8000000 		call	__printf_chk@PLT	#
 17287      00
 17288              	.LVL972:
 17289              	.L1393:
 17290              		.loc 3 107 10 view .LVU5792
 17291              	.LBE1047:
 17292              	.LBE1046:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17293              		.loc 1 1435 33 is_stmt 1 discriminator 2 view .LVU5793
 17294              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17295              		.loc 1 1435 36 is_stmt 0 discriminator 2 view .LVU5794
 17296 00d5 83C301   		add	ebx, 1	# arg,
 17297              	.LVL973:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17298              		.loc 1 1435 21 is_stmt 1 discriminator 2 view .LVU5795
 17299              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17300              		.loc 1 1435 5 is_stmt 0 discriminator 2 view .LVU5796
 17301 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 17302 00da 0F8E0001 		jle	.L1520	#,
 17302      0000
 17303              	.LVL974:
 17304              	.L1385:
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17305              		.loc 1 1436 9 is_stmt 1 view .LVU5797
 17306              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17307              		.loc 1 1436 24 is_stmt 0 view .LVU5798
 17308 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 17309              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17310              		.loc 1 1436 13 view .LVU5799
 17311 00e3 41B90700 		mov	r9d, 7	# tmp292,
 17311      0000
 17312              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17313              		.loc 1 1436 24 view .LVU5800
 17314 00e9 48C1E003 		sal	rax, 3	# _2,
 17315              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17316              		.loc 1 1436 13 view .LVU5801
 17317 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp467
 17318              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17319              		.loc 1 1436 24 view .LVU5802
GAS LISTING /tmp/ccW4ZvF5.s 			page 460


 17320 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 17321              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17322              		.loc 1 1436 13 view .LVU5803
 17323 00f4 4C89C9   		mov	rcx, r9	# tmp493, tmp292
 17324 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 17325 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 17326 00fd F3A6     		repz cmpsb
 17327 00ff 0F97C2   		seta	dl	#, tmp293
 17328 0102 80DA00   		sbb	dl, 0	# _5
 17329              	# sieve_extend.c:1436:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1436:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17330              		.loc 1 1436 12 view .LVU5804
 17331 0105 84D2     		test	dl, dl	# _5
 17332 0107 0F84CE04 		je	.L1517	#,
 17332      0000
1437:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17333              		.loc 1 1437 14 is_stmt 1 view .LVU5805
 17334              	# sieve_extend.c:1437:         else if (strcmp(argv[arg], "--verbose")==0) {
1437:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17335              		.loc 1 1437 18 is_stmt 0 view .LVU5806
 17336 010d B90A0000 		mov	ecx, 10	# tmp298,
 17336      00
 17337 0112 4C89C6   		mov	rsi, r8	# _4, _4
 17338 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp482
 17339 0118 F3A6     		repz cmpsb
 17340 011a 410F97C2 		seta	r10b	#, tmp299
 17341 011e 4180DA00 		sbb	r10b, 0	# _11
 17342              	# sieve_extend.c:1437:         else if (strcmp(argv[arg], "--verbose")==0) {
1437:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17343              		.loc 1 1437 17 view .LVU5807
 17344 0122 4584D2   		test	r10b, r10b	# _11
 17345 0125 0F8455FF 		je	.L1521	#,
 17345      FFFF
1443:sieve_extend.c ****         } 
1444:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17346              		.loc 1 1444 14 is_stmt 1 view .LVU5808
 17347              	# sieve_extend.c:1444:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17348              		.loc 1 1444 18 is_stmt 0 view .LVU5809
 17349 012b B9080000 		mov	ecx, 8	# tmp308,
 17349      00
 17350 0130 4C89C6   		mov	rsi, r8	# _4, _4
 17351 0133 488D3D00 		lea	rdi, .LC35[rip]	# tmp307,
 17351      000000
 17352 013a F3A6     		repz cmpsb
 17353 013c 410F97C3 		seta	r11b	#, tmp309
 17354 0140 4180DB00 		sbb	r11b, 0	# _23
 17355              	# sieve_extend.c:1444:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17356              		.loc 1 1444 17 view .LVU5810
 17357 0144 4584DB   		test	r11b, r11b	# _23
 17358 0147 748C     		je	.L1393	#,
1445:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17359              		.loc 1 1445 14 is_stmt 1 view .LVU5811
 17360              	# sieve_extend.c:1445:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17361              		.loc 1 1445 18 is_stmt 0 view .LVU5812
 17362 0149 4C89C6   		mov	rsi, r8	# _4, _4
 17363 014c 488D3D00 		lea	rdi, .LC36[rip]	# tmp313,
GAS LISTING /tmp/ccW4ZvF5.s 			page 461


 17363      000000
 17364 0153 4C89C9   		mov	rcx, r9	# tmp499, tmp292
 17365 0156 F3A6     		repz cmpsb
 17366 0158 0F97C2   		seta	dl	#, tmp315
 17367 015b 80DA00   		sbb	dl, 0	# _24
 17368              	# sieve_extend.c:1445:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17369              		.loc 1 1445 17 view .LVU5813
 17370 015e 84D2     		test	dl, dl	# _24
 17371 0160 0F855A01 		jne	.L1394	#,
 17371      0000
 17372              		.loc 1 1445 52 is_stmt 1 discriminator 1 view .LVU5814
 17373              	# sieve_extend.c:1445:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17374              		.loc 1 1445 68 is_stmt 0 discriminator 1 view .LVU5815
 17375 0166 C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 17375      00000000 
 17375      000000
1446:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 17376              		.loc 1 1446 13 is_stmt 1 discriminator 1 view .LVU5816
 17377              	# sieve_extend.c:1446:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 17378              		.loc 1 1446 16 is_stmt 0 discriminator 1 view .LVU5817
 17379 0171 83C301   		add	ebx, 1	# arg,
 17380              	.LVL975:
 17381              		.loc 1 1446 16 discriminator 1 view .LVU5818
 17382 0174 39DD     		cmp	ebp, ebx	# argc, arg
 17383 0176 0F8E7A0E 		jle	.L1522	#,
 17383      0000
1447:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17384              		.loc 1 1447 13 is_stmt 1 view .LVU5819
 17385              	# sieve_extend.c:1447:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17386              		.loc 1 1447 28 is_stmt 0 view .LVU5820
 17387 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 17387      08
 17388              	# sieve_extend.c:1447:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17389              		.loc 1 1447 17 view .LVU5821
 17390 0181 488D9424 		lea	rdx, 172[rsp]	# tmp319,
 17390      AC000000 
 17391 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 17392 018c 31C0     		xor	eax, eax	#
 17393 018e 488D3500 		lea	rsi, .LC26[rip]	#,
 17393      000000
 17394 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 17394      00
 17395              	.LVL976:
 17396              	# sieve_extend.c:1447:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17397              		.loc 1 1447 16 view .LVU5822
 17398 019a 83F801   		cmp	eax, 1	# tmp530,
 17399 019d 0F85350E 		jne	.L1396	#,
 17399      0000
 17400              	# sieve_extend.c:1447:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17401              		.loc 1 1447 85 discriminator 1 view .LVU5823
 17402 01a3 8B9424AC 		mov	edx, DWORD PTR 172[rsp]	# option_tunelevel.20_32, option_tunelevel
 17402      000000
 17403              	# sieve_extend.c:1447:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17404              		.loc 1 1447 65 discriminator 1 view .LVU5824
 17405 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 17406 01ad 0F8F250E 		jg	.L1396	#,
 17406      0000
GAS LISTING /tmp/ccW4ZvF5.s 			page 462


1448:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1449:sieve_extend.c ****             }
1450:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 17407              		.loc 1 1450 13 is_stmt 1 view .LVU5825
 17408              	.LVL977:
 17409              	.LBB1048:
 17410              	.LBI1048:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17411              		.loc 3 105 1 view .LVU5826
 17412              	.LBB1049:
 17413              		.loc 3 107 3 view .LVU5827
 17414              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17415              		.loc 3 107 10 is_stmt 0 view .LVU5828
 17416 01b3 31C0     		xor	eax, eax	#
 17417 01b5 488D3500 		lea	rsi, .LC39[rip]	#,
 17417      000000
 17418 01bc BF010000 		mov	edi, 1	#,
 17418      00
 17419              	.LBE1049:
 17420              	.LBE1048:
 17421              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17422              		.loc 1 1435 36 view .LVU5829
 17423 01c1 83C301   		add	ebx, 1	# arg,
 17424              	.LVL978:
 17425              	.LBB1051:
 17426              	.LBB1050:
 17427              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17428              		.loc 3 107 10 view .LVU5830
 17429 01c4 E8000000 		call	__printf_chk@PLT	#
 17429      00
 17430              	.LVL979:
 17431              		.loc 3 107 10 view .LVU5831
 17432              	.LBE1050:
 17433              	.LBE1051:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17434              		.loc 1 1435 33 is_stmt 1 view .LVU5832
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17435              		.loc 1 1435 21 view .LVU5833
 17436              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17437              		.loc 1 1435 5 is_stmt 0 view .LVU5834
 17438 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 17439 01cb 0F8F0FFF 		jg	.L1385	#,
 17439      FFFF
 17440 01d1 66662E0F 		.p2align 4
 17440      1F840000 
 17440      0000000F 
 17440      1F4000
 17441              		.p2align 3
 17442              	.L1520:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17443              		.loc 1 1435 5 view .LVU5835
 17444              	.LBE1070:
1451:sieve_extend.c ****         }
1452:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1453:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
GAS LISTING /tmp/ccW4ZvF5.s 			page 463


1454:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1455:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1456:sieve_extend.c ****             }
1457:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1458:sieve_extend.c ****         }
1459:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1460:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1461:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1462:sieve_extend.c ****         }
1463:sieve_extend.c ****     }
1464:sieve_extend.c **** 
1465:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 17445              		.loc 1 1465 5 is_stmt 1 view .LVU5836
1466:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
1467:sieve_extend.c ****         printf("\nResult set:\n");
1468:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1469:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
1470:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1471:sieve_extend.c ****         else printf("The sieve is VALID\n");
1472:sieve_extend.c ****         sieve_delete(sieve);
1473:sieve_extend.c ****         exit(0);
1474:sieve_extend.c ****     }
1475:sieve_extend.c **** 
1476:sieve_extend.c ****     struct timespec start_time,end_time;
 17446              		.loc 1 1476 5 view .LVU5837
1477:sieve_extend.c **** 
1478:sieve_extend.c ****     if (option_verboselevel >=1) {
 17447              		.loc 1 1478 5 view .LVU5838
 17448              	# sieve_extend.c:1478:     if (option_verboselevel >=1) {
 17449              		.loc 1 1478 8 is_stmt 0 view .LVU5839
 17450 01e0 8BAC24A8 		mov	ebp, DWORD PTR 168[rsp]	#, option_verboselevel
 17450      000000
 17451              	.LVL980:
 17452              		.loc 1 1478 8 view .LVU5840
 17453 01e7 85ED     		test	ebp, ebp	#
 17454 01e9 0F8F9D03 		jg	.L1402	#,
 17454      0000
 17455              	.LVL981:
 17456              	.L1403:
1479:sieve_extend.c ****         #if __APPLE__
1480:sieve_extend.c ****             printf("Apple detected. Using arrays instead of pointers\n");
1481:sieve_extend.c ****         #else
1482:sieve_extend.c ****             printf("Using Pointers\n");
1483:sieve_extend.c ****         #endif
1484:sieve_extend.c ****     }
1485:sieve_extend.c ****         
1486:sieve_extend.c ****     if (option_check) {
1487:sieve_extend.c ****         // Count the number of primes and validate the result
1488:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
1489:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17457              		.loc 1 1489 9 is_stmt 1 view .LVU5841
 17458              	# sieve_extend.c:1489:         if (option_verboselevel >= 2) printf("\n");
 17459              		.loc 1 1489 12 is_stmt 0 view .LVU5842
 17460 01ef 83BC24A8 		cmp	DWORD PTR 168[rsp], 1	# option_verboselevel,
 17460      00000001 
 17461 01f7 7E0A     		jle	.L1404	#,
 17462              		.loc 1 1489 39 is_stmt 1 view .LVU5843
GAS LISTING /tmp/ccW4ZvF5.s 			page 464


 17463              	.LVL982:
 17464              	.LBB1071:
 17465              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17466              		.loc 3 105 1 view .LVU5844
 17467              	.LBB1072:
 17468              		.loc 3 107 3 view .LVU5845
 17469              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17470              		.loc 3 107 10 is_stmt 0 view .LVU5846
 17471 01f9 BF0A0000 		mov	edi, 10	#,
 17471      00
 17472 01fe E8000000 		call	putchar@PLT	#
 17472      00
 17473              	.LVL983:
 17474              	.L1404:
 17475              		.loc 3 107 10 view .LVU5847
 17476              	.LBE1072:
 17477              	.LBE1071:
 17478              	.LBB1073:
 17479              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17480              		.loc 1 1435 14 view .LVU5848
 17481 0203 C7442428 		mov	DWORD PTR 40[rsp], 5	# %sfp,
 17481      05000000 
 17482 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 17482      0000
 17483              	.LBE1073:
 17484              	.LBB1074:
 17485              	.LBB1075:
 17486              	.LBB1076:
 17487              	.LBB1077:
 17488              	.LBB1078:
 17489              	.LBB1079:
 17490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17491              		.loc 3 107 10 view .LVU5849
 17492 0211 4C8D3500 		lea	r14, .LC48[rip]	# tmp481,
 17492      000000
 17493              	.L1411:
 17494              	.LVL984:
 17495              		.loc 3 107 10 view .LVU5850
 17496              	.LBE1079:
 17497              	.LBE1078:
 17498              	.LBE1077:
 17499              	.LBE1076:
1490:sieve_extend.c **** 
1491:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1492:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; sieveSize_check *=10) {
1493:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17500              		.loc 1 1493 13 is_stmt 1 view .LVU5851
 17501              	# sieve_extend.c:1493:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17502              		.loc 1 1493 37 is_stmt 0 view .LVU5852
 17503 0218 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17503      000000
 17504              	# sieve_extend.c:1493:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17505              		.loc 1 1493 16 view .LVU5853
 17506 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 17507 0222 7E1D     		jle	.L1405	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 465


 17508              		.loc 1 1493 43 is_stmt 1 view .LVU5854
 17509              	.LVL985:
 17510              	.LBB1095:
 17511              	.LBI1095:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17512              		.loc 3 105 1 view .LVU5855
 17513              	.LBB1096:
 17514              		.loc 3 107 3 view .LVU5856
 17515              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17516              		.loc 3 107 10 is_stmt 0 view .LVU5857
 17517 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 17518 0227 488D3500 		lea	rsi, .LC47[rip]	#,
 17518      000000
 17519 022e BF010000 		mov	edi, 1	#,
 17519      00
 17520 0233 31C0     		xor	eax, eax	#
 17521 0235 E8000000 		call	__printf_chk@PLT	#
 17521      00
 17522              	.LVL986:
 17523 023a 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17523      000000
 17524              	.LVL987:
 17525              	.L1405:
 17526              		.loc 3 107 10 view .LVU5858
 17527              	.LBE1096:
 17528              	.LBE1095:
 17529              	.LBE1075:
 17530              	.LBE1074:
 17531              	.LBB1105:
 17532              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17533              		.loc 1 1435 14 view .LVU5859
 17534 0241 41BC0500 		mov	r12d, 5	# ivtmp_69,
 17534      0000
 17535 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 17535      00
 17536 024c EB56     		jmp	.L1409	#
 17537              	.LVL988:
 17538 024e 6690     		.p2align 4,,7
 17539              		.p2align 3
 17540              	.L1406:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17541              		.loc 1 1435 14 view .LVU5860
 17542              	.LBE1105:
 17543              	.LBB1106:
 17544              	.LBB1102:
 17545              	.LBB1097:
 17546              	.LBB1090:
1494:sieve_extend.c ****             struct sieve_t *sieve_check;
1495:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1496:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1497:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17547              		.loc 1 1497 17 is_stmt 1 view .LVU5861
 17548              	# sieve_extend.c:1497:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17549              		.loc 1 1497 31 is_stmt 0 view .LVU5862
 17550 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 17551 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
GAS LISTING /tmp/ccW4ZvF5.s 			page 466


 17552 0256 E8000000 		call	sieve_shake	#
 17552      00
 17553              	.LVL989:
 17554              	# sieve_extend.c:1498:                 int valid = validatePrimeCount(sieve_check,option_verboselev
1498:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 17555              		.loc 1 1498 29 view .LVU5863
 17556 025b 8BB424A8 		mov	esi, DWORD PTR 168[rsp]	#, option_verboselevel
 17556      000000
 17557              	# sieve_extend.c:1497:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
1497:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 17558              		.loc 1 1497 31 view .LVU5864
 17559 0262 4989C7   		mov	r15, rax	# sieve_check, tmp533
 17560              	.LVL990:
 17561              		.loc 1 1498 17 is_stmt 1 view .LVU5865
 17562              	# sieve_extend.c:1498:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17563              		.loc 1 1498 29 is_stmt 0 view .LVU5866
 17564 0265 4889C7   		mov	rdi, rax	#, sieve_check
 17565 0268 E8000000 		call	validatePrimeCount	#
 17565      00
 17566              	.LVL991:
 17567              	.LBB1081:
 17568              	.LBB1082:
 17569              	# sieve_extend.c:123:     free(sieve->bitarray);
 123:sieve_extend.c ****     free(sieve);
 17570              		.loc 1 123 5 view .LVU5867
 17571 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_check_130->bitarray
 17572              	.LBE1082:
 17573              	.LBE1081:
 17574              	# sieve_extend.c:1498:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17575              		.loc 1 1498 29 view .LVU5868
 17576 0270 89C3     		mov	ebx, eax	# valid, tmp534
 17577              	.LVL992:
1499:sieve_extend.c ****                 sieve_delete(sieve_check);
 17578              		.loc 1 1499 17 is_stmt 1 view .LVU5869
 17579              	.LBB1084:
 17580              	.LBI1081:
 122:sieve_extend.c ****     free(sieve->bitarray);
 17581              		.loc 1 122 13 view .LVU5870
 17582              	.LBB1083:
 123:sieve_extend.c ****     free(sieve);
 17583              		.loc 1 123 5 view .LVU5871
 17584 0272 E8000000 		call	free@PLT	#
 17584      00
 17585              	.LVL993:
 124:sieve_extend.c **** }
 17586              		.loc 1 124 5 view .LVU5872
 17587 0277 4C89FF   		mov	rdi, r15	#, sieve_check
 17588 027a E8000000 		call	free@PLT	#
 17588      00
 17589              	.LVL994:
 124:sieve_extend.c **** }
 17590              		.loc 1 124 5 is_stmt 0 view .LVU5873
 17591              	.LBE1083:
 17592              	.LBE1084:
1500:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 17593              		.loc 1 1500 17 is_stmt 1 view .LVU5874
 17594              	# sieve_extend.c:1500:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
GAS LISTING /tmp/ccW4ZvF5.s 			page 467


 17595              		.loc 1 1500 20 is_stmt 0 view .LVU5875
 17596 027f 85DB     		test	ebx, ebx	# valid
 17597 0281 0F84D902 		je	.L1447	#,
 17597      0000
 17598              		.loc 1 1500 44 is_stmt 1 discriminator 2 view .LVU5876
 17599              	# sieve_extend.c:1500:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17600              		.loc 1 1500 68 is_stmt 0 discriminator 2 view .LVU5877
 17601 0287 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17601      000000
 17602              	# sieve_extend.c:1500:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17603              		.loc 1 1500 47 discriminator 2 view .LVU5878
 17604 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 17605 0291 0F8FE900 		jg	.L1523	#,
 17605      0000
 17606              	.LBE1090:
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17607              		.loc 1 1495 75 is_stmt 1 discriminator 2 view .LVU5879
 17608              	# sieve_extend.c:1495:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17609              		.loc 1 1495 90 is_stmt 0 discriminator 2 view .LVU5880
 17610 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 17611              	.LVL995:
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17612              		.loc 1 1495 49 is_stmt 1 discriminator 2 view .LVU5881
 17613              	# sieve_extend.c:1495:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17614              		.loc 1 1495 13 is_stmt 0 discriminator 2 view .LVU5882
 17615 029a 4183EC01 		sub	r12d, 1	# ivtmp_69,
 17616 029e 0F840301 		je	.L1524	#,
 17616      0000
 17617              	.LVL996:
 17618              	.L1409:
 17619              	.LBB1091:
1496:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17620              		.loc 1 1496 17 is_stmt 1 view .LVU5883
 17621              	# sieve_extend.c:1496:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1496:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17622              		.loc 1 1496 20 is_stmt 0 view .LVU5884
 17623 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 17624 02a7 7EA7     		jle	.L1406	#,
1496:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17625              		.loc 1 1496 47 is_stmt 1 view .LVU5885
 17626              	.LVL997:
 17627              	.LBB1085:
 17628              	.LBI1078:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17629              		.loc 3 105 1 view .LVU5886
 17630              	.LBB1080:
 17631              		.loc 3 107 3 view .LVU5887
 17632              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17633              		.loc 3 107 10 is_stmt 0 view .LVU5888
 17634 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 17635 02ac 4C89F6   		mov	rsi, r14	#, tmp481
 17636 02af BF010000 		mov	edi, 1	#,
 17636      00
 17637 02b4 31C0     		xor	eax, eax	#
 17638 02b6 E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 468


 17638      00
 17639              	.LVL998:
 17640 02bb EB93     		jmp	.L1406	#
 17641              	.LVL999:
 17642 02bd 0F1F00   		.p2align 4,,7
 17643              		.p2align 3
 17644              	.L1394:
 17645              		.loc 3 107 10 view .LVU5889
 17646              	.LBE1080:
 17647              	.LBE1085:
 17648              	.LBE1091:
 17649              	.LBE1097:
 17650              	.LBE1102:
 17651              	.LBE1106:
 17652              	.LBB1107:
1452:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17653              		.loc 1 1452 14 is_stmt 1 view .LVU5890
 17654              	# sieve_extend.c:1452:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1452:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17655              		.loc 1 1452 18 is_stmt 0 view .LVU5891
 17656 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 17657 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 17658 02c6 488D3D00 		lea	rdi, .LC40[rip]	# tmp323,
 17658      000000
 17659 02cd F3A6     		repz cmpsb
 17660 02cf 410F97C1 		seta	r9b	#, tmp325
 17661 02d3 4180D900 		sbb	r9b, 0	# _36
 17662              	# sieve_extend.c:1452:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1452:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17663              		.loc 1 1452 17 view .LVU5892
 17664 02d7 4584C9   		test	r9b, r9b	# _36
 17665 02da 756C     		jne	.L1398	#,
1452:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17666              		.loc 1 1452 52 is_stmt 1 discriminator 1 view .LVU5893
 17667              	# sieve_extend.c:1452:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1452:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17668              		.loc 1 1452 72 is_stmt 0 discriminator 1 view .LVU5894
 17669 02dc 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17669      B8000000 
 17669      00000000 
1453:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17670              		.loc 1 1453 13 is_stmt 1 discriminator 1 view .LVU5895
 17671              	# sieve_extend.c:1453:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1453:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17672              		.loc 1 1453 16 is_stmt 0 discriminator 1 view .LVU5896
 17673 02e8 83C301   		add	ebx, 1	# arg,
 17674              	.LVL1000:
1453:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17675              		.loc 1 1453 16 discriminator 1 view .LVU5897
 17676 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 17677 02ed 0F8E2E0D 		jle	.L1525	#,
 17677      0000
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17678              		.loc 1 1454 13 is_stmt 1 view .LVU5898
 17679              	# sieve_extend.c:1454:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17680              		.loc 1 1454 28 is_stmt 0 view .LVU5899
GAS LISTING /tmp/ccW4ZvF5.s 			page 469


 17681 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 17681      08
 17682              	# sieve_extend.c:1454:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17683              		.loc 1 1454 17 view .LVU5900
 17684 02f8 488D9424 		lea	rdx, 184[rsp]	# tmp329,
 17684      B8000000 
 17685 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 17686 0303 31C0     		xor	eax, eax	#
 17687 0305 488D3500 		lea	rsi, .LC42[rip]	#,
 17687      000000
 17688 030c E8000000 		call	__isoc99_sscanf@PLT	#
 17688      00
 17689              	.LVL1001:
 17690              	# sieve_extend.c:1454:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17691              		.loc 1 1454 16 view .LVU5901
 17692 0311 83F801   		cmp	eax, 1	# tmp531,
 17693 0314 0F85CD0C 		jne	.L1400	#,
 17693      0000
 17694              	# sieve_extend.c:1454:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17695              		.loc 1 1454 106 discriminator 1 view .LVU5902
 17696 031a 488B9424 		mov	rdx, QWORD PTR 184[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 17696      B8000000 
 17697              	# sieve_extend.c:1454:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1454:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17698              		.loc 1 1454 82 discriminator 1 view .LVU5903
 17699 0322 483B9424 		cmp	rdx, QWORD PTR 176[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 17699      B0000000 
 17700 032a 0F87B70C 		ja	.L1400	#,
 17700      0000
1457:sieve_extend.c ****         }
 17701              		.loc 1 1457 13 is_stmt 1 view .LVU5904
 17702              	.LVL1002:
 17703              	.LBB1052:
 17704              	.LBI1052:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17705              		.loc 3 105 1 view .LVU5905
 17706              	.LBB1053:
 17707              		.loc 3 107 3 view .LVU5906
 17708              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17709              		.loc 3 107 10 is_stmt 0 view .LVU5907
 17710 0330 488D3500 		lea	rsi, .LC44[rip]	#,
 17710      000000
 17711 0337 BF010000 		mov	edi, 1	#,
 17711      00
 17712 033c 31C0     		xor	eax, eax	#
 17713 033e E8000000 		call	__printf_chk@PLT	#
 17713      00
 17714              	.LVL1003:
 17715 0343 E98DFDFF 		jmp	.L1393	#
 17715      FF
 17716              	.LVL1004:
 17717              		.p2align 4,,7
 17718              		.p2align 3
 17719              	.L1398:
GAS LISTING /tmp/ccW4ZvF5.s 			page 470


 17720              		.loc 3 107 10 view .LVU5908
 17721              	.LBE1053:
 17722              	.LBE1052:
1459:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17723              		.loc 1 1459 14 is_stmt 1 view .LVU5909
 17724              	# sieve_extend.c:1459:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1459:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17725              		.loc 1 1459 18 is_stmt 0 view .LVU5910
 17726 0348 31C0     		xor	eax, eax	#
 17727 034a 488D9424 		lea	rdx, 176[rsp]	# tmp331,
 17727      B0000000 
 17728 0352 488D3500 		lea	rsi, .LC42[rip]	#,
 17728      000000
 17729 0359 4C89C7   		mov	rdi, r8	#, _4
 17730 035c E8000000 		call	__isoc99_sscanf@PLT	#
 17730      00
 17731              	.LVL1005:
 17732              	# sieve_extend.c:1459:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1459:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17733              		.loc 1 1459 17 view .LVU5911
 17734 0361 83F801   		cmp	eax, 1	# tmp532,
 17735 0364 0F846BFD 		je	.L1393	#,
 17735      FFFF
1460:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 17736              		.loc 1 1460 13 is_stmt 1 view .LVU5912
 17737              	.LVL1006:
 17738              	.LBB1054:
 17739              	.LBI1054:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17740              		.loc 3 98 1 view .LVU5913
 17741              	.LBB1055:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17742              		.loc 3 100 3 view .LVU5914
 17743              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17744              		.loc 3 100 10 is_stmt 0 view .LVU5915
 17745 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 17746 036d 488D1500 		lea	rdx, .LC45[rip]	#,
 17746      000000
 17747 0374 E94F0200 		jmp	.L1516	#
 17747      00
 17748              	.LVL1007:
 17749 0379 0F1F8000 		.p2align 4,,7
 17749      000000
 17750              		.p2align 3
 17751              	.L1523:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17752              		.loc 3 100 10 view .LVU5916
 17753              	.LBE1055:
 17754              	.LBE1054:
 17755              	.LBE1107:
 17756              	.LBB1108:
 17757              	.LBB1103:
 17758              	.LBB1098:
 17759              	.LBB1092:
 17760              		.loc 1 1500 74 is_stmt 1 view .LVU5917
 17761              	.LBB1086:
GAS LISTING /tmp/ccW4ZvF5.s 			page 471


 17762              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17763              		.loc 3 105 1 view .LVU5918
 17764              	.LBB1087:
 17765              		.loc 3 107 3 view .LVU5919
 17766              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17767              		.loc 3 107 10 is_stmt 0 view .LVU5920
 17768 0380 31C0     		xor	eax, eax	#
 17769 0382 488D3500 		lea	rsi, .LC49[rip]	#,
 17769      000000
 17770 0389 BF010000 		mov	edi, 1	#,
 17770      00
 17771              	.LBE1087:
 17772              	.LBE1086:
 17773              	.LBE1092:
 17774              	# sieve_extend.c:1495:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17775              		.loc 1 1495 90 view .LVU5921
 17776 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 17777              	.LVL1008:
 17778              	.LBB1093:
 17779              	.LBB1089:
 17780              	.LBB1088:
 17781              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17782              		.loc 3 107 10 view .LVU5922
 17783 0391 E8000000 		call	__printf_chk@PLT	#
 17783      00
 17784              	.LVL1009:
 17785 0396 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17785      000000
 17786              	.LVL1010:
 17787              		.loc 3 107 10 view .LVU5923
 17788              	.LBE1088:
 17789              	.LBE1089:
 17790              	.LBE1093:
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17791              		.loc 1 1495 75 is_stmt 1 view .LVU5924
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17792              		.loc 1 1495 49 view .LVU5925
 17793              	# sieve_extend.c:1495:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17794              		.loc 1 1495 13 is_stmt 0 view .LVU5926
 17795 039d 4183EC01 		sub	r12d, 1	# ivtmp_69,
 17796 03a1 0F85FDFE 		jne	.L1409	#,
 17796      FFFF
 17797              	.L1524:
1495:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17798              		.loc 1 1495 13 view .LVU5927
 17799              	.LBE1098:
1501:sieve_extend.c ****             }
1502:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 17800              		.loc 1 1502 13 is_stmt 1 view .LVU5928
 17801              	# sieve_extend.c:1502:             if (option_verboselevel >= 2) printf("\n");
 17802              		.loc 1 1502 16 is_stmt 0 view .LVU5929
 17803 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
 17804 03aa 7E0A     		jle	.L1410	#,
 17805              		.loc 1 1502 43 is_stmt 1 view .LVU5930
GAS LISTING /tmp/ccW4ZvF5.s 			page 472


 17806              	.LVL1011:
 17807              	.LBB1099:
 17808              	.LBI1099:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17809              		.loc 3 105 1 view .LVU5931
 17810              	.LBB1100:
 17811              		.loc 3 107 3 view .LVU5932
 17812              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17813              		.loc 3 107 10 is_stmt 0 view .LVU5933
 17814 03ac BF0A0000 		mov	edi, 10	#,
 17814      00
 17815 03b1 E8000000 		call	putchar@PLT	#
 17815      00
 17816              	.LVL1012:
 17817              	.L1410:
 17818              		.loc 3 107 10 view .LVU5934
 17819              	.LBE1100:
 17820              	.LBE1099:
 17821              	.LBE1103:
1492:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17822              		.loc 1 1492 75 is_stmt 1 discriminator 2 view .LVU5935
 17823              	# sieve_extend.c:1492:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1492:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17824              		.loc 1 1492 91 is_stmt 0 discriminator 2 view .LVU5936
 17825 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 17825      00
 17826              	.LVL1013:
1492:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17827              		.loc 1 1492 91 discriminator 2 view .LVU5937
 17828 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 17829              	.LVL1014:
1492:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17830              		.loc 1 1492 47 is_stmt 1 discriminator 2 view .LVU5938
 17831              	# sieve_extend.c:1492:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1492:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17832              		.loc 1 1492 9 is_stmt 0 discriminator 2 view .LVU5939
 17833 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 17833      01
 17834 03c3 0F854FFE 		jne	.L1411	#,
 17834      FFFF
 17835              	.LBE1108:
1503:sieve_extend.c ****         }
1504:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17836              		.loc 1 1504 9 is_stmt 1 view .LVU5940
 17837              	# sieve_extend.c:1504:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17838              		.loc 1 1504 12 is_stmt 0 view .LVU5941
 17839 03c9 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 17839      00000000 
 17840 03d1 0F8FCC09 		jg	.L1526	#,
 17840      0000
1505:sieve_extend.c ****     }
1506:sieve_extend.c ****     
1507:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17841              		.loc 1 1507 5 is_stmt 1 view .LVU5942
 17842              	.LVL1015:
1508:sieve_extend.c ****     if (option_tunelevel) {
 17843              		.loc 1 1508 5 view .LVU5943
GAS LISTING /tmp/ccW4ZvF5.s 			page 473


 17844              	# sieve_extend.c:1508:     if (option_tunelevel) {
 17845              		.loc 1 1508 9 is_stmt 0 view .LVU5944
 17846 03d7 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_405, option_tunelevel
 17846      AC000000 
 17847              	# sieve_extend.c:1507:     counter_t best_blocksize_bits = default_blocksize;
1507:sieve_extend.c ****     if (option_tunelevel) {
 17848              		.loc 1 1507 15 view .LVU5945
 17849 03df 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
 17849      0300
 17850              	# sieve_extend.c:1508:     if (option_tunelevel) {
 17851              		.loc 1 1508 8 view .LVU5946
 17852 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.41_405
 17853 03e8 0F85B802 		jne	.L1527	#,
 17853      0000
 17854              	.LVL1016:
 17855              	.L1440:
 17856              	.LBB1109:
1509:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1510:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1511:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1512:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1513:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1514:sieve_extend.c ****     }
1515:sieve_extend.c **** 
1516:sieve_extend.c ****     double max_time = default_sieve_duration;
1517:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1518:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1519:sieve_extend.c ****         counter_t passes = 0;
 17857              		.loc 1 1519 9 is_stmt 1 view .LVU5947
1520:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17858              		.loc 1 1520 9 view .LVU5948
1521:sieve_extend.c ****         double elapsed_time = 0;
 17859              		.loc 1 1521 9 view .LVU5949
1522:sieve_extend.c ****         struct sieve_t *sieve;
 17860              		.loc 1 1522 9 view .LVU5950
1523:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 17861              		.loc 1 1523 9 view .LVU5951
 17862 03ee 488DB424 		lea	rsi, 192[rsp]	# tmp440,
 17862      C0000000 
 17863 03f6 BF010000 		mov	edi, 1	#,
 17863      00
 17864 03fb E8000000 		call	clock_gettime@PLT	#
 17864      00
 17865              	.LVL1017:
1524:sieve_extend.c ****         while (elapsed_time <= max_time) {
 17866              		.loc 1 1524 9 view .LVU5952
 17867              		.loc 1 1524 15 view .LVU5953
 17868              	# sieve_extend.c:1519:         counter_t passes = 0;
1519:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17869              		.loc 1 1519 19 is_stmt 0 view .LVU5954
 17870 0400 4531FF   		xor	r15d, r15d	# passes
 17871 0403 4C8DAC24 		lea	r13, 208[rsp]	# tmp464,
 17871      D0000000 
 17872              	.LVL1018:
 17873              	.L1441:
1525:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17874              		.loc 1 1525 13 is_stmt 1 view .LVU5955
GAS LISTING /tmp/ccW4ZvF5.s 			page 474


 17875              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
 17876              		.loc 1 1525 21 is_stmt 0 view .LVU5956
 17877 040b 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17877      B0000000 
 17878 0413 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 17879              	# sieve_extend.c:1527:             passes++;
1526:sieve_extend.c ****             sieve_delete(sieve);
1527:sieve_extend.c ****             passes++;
 17880              		.loc 1 1527 19 view .LVU5957
 17881 0416 4983C701 		add	r15, 1	# passes,
 17882              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1525:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17883              		.loc 1 1525 21 view .LVU5958
 17884 041a E8000000 		call	sieve_shake	#
 17884      00
 17885              	.LVL1019:
 17886              	.LBB1110:
 17887              	.LBB1111:
 17888              	# sieve_extend.c:123:     free(sieve->bitarray);
 123:sieve_extend.c ****     free(sieve);
 17889              		.loc 1 123 5 view .LVU5959
 17890 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitarray
 17891              	.LBE1111:
 17892              	.LBE1110:
 17893              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1525:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17894              		.loc 1 1525 21 view .LVU5960
 17895 0422 4989C6   		mov	r14, rax	# sieve, tmp536
 17896              	.LVL1020:
1526:sieve_extend.c ****             sieve_delete(sieve);
 17897              		.loc 1 1526 13 is_stmt 1 view .LVU5961
 17898              	.LBB1115:
 17899              	.LBI1110:
 122:sieve_extend.c ****     free(sieve->bitarray);
 17900              		.loc 1 122 13 view .LVU5962
 17901              	.LBB1112:
 123:sieve_extend.c ****     free(sieve);
 17902              		.loc 1 123 5 view .LVU5963
 17903 0425 E8000000 		call	free@PLT	#
 17903      00
 17904              	.LVL1021:
 124:sieve_extend.c **** }
 17905              		.loc 1 124 5 view .LVU5964
 17906 042a 4C89F7   		mov	rdi, r14	#, sieve
 17907 042d E8000000 		call	free@PLT	#
 17907      00
 17908              	.LVL1022:
 124:sieve_extend.c **** }
 17909              		.loc 1 124 5 is_stmt 0 view .LVU5965
 17910              	.LBE1112:
 17911              	.LBE1115:
 17912              		.loc 1 1527 13 is_stmt 1 view .LVU5966
1528:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17913              		.loc 1 1528 13 view .LVU5967
 17914 0432 4C89EE   		mov	rsi, r13	#, tmp464
 17915 0435 BF010000 		mov	edi, 1	#,
 17915      00
GAS LISTING /tmp/ccW4ZvF5.s 			page 475


 17916 043a E8000000 		call	clock_gettime@PLT	#
 17916      00
 17917              	.LVL1023:
1529:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17918              		.loc 1 1529 13 view .LVU5968
 17919              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17920              		.loc 1 1529 62 is_stmt 0 view .LVU5969
 17921 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 216[rsp]	# tmp443, end_time.tv_nsec
 17921      AC24D800 
 17921      0000
 17922              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17923              		.loc 1 1529 68 view .LVU5970
 17924 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 192[rsp]	# tmp444, start_time.tv_sec
 17924      9424C000 
 17924      0000
 17925              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17926              		.loc 1 1529 108 view .LVU5971
 17927 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 200[rsp]	# tmp446, start_time.tv_nsec
 17927      8424C800 
 17927      0000
 17928              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17929              		.loc 1 1529 44 view .LVU5972
 17930 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 208[rsp]	# tmp447, end_time.tv_sec
 17930      8C24D000 
 17930      0000
 17931              	# sieve_extend.c:1524:         while (elapsed_time <= max_time) {
1524:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17932              		.loc 1 1524 15 view .LVU5973
 17933 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC61[rip]	# tmp649,
 17933      00000000 
 17934 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _305, tmp444,
 17934      2D000000 
 17934      00
 17935 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _306, tmp447,
 17935      05000000 
 17935      00
 17936              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17937              		.loc 1 1529 26 view .LVU5974
 17938 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _305, _306
 17938      C0
 17939              	.LVL1024:
1524:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 17940              		.loc 1 1524 15 is_stmt 1 view .LVU5975
 17941 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp649, elapsed_time
 17942 048a 0F828500 		jb	.L1513	#,
 17942      0000
 17943              	.LVL1025:
1525:sieve_extend.c ****             sieve_delete(sieve);
 17944              		.loc 1 1525 13 view .LVU5976
 17945              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1525:sieve_extend.c ****             sieve_delete(sieve);
 17946              		.loc 1 1525 21 is_stmt 0 view .LVU5977
 17947 0490 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17947      B0000000 
 17948 0498 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 17949              	# sieve_extend.c:1527:             passes++;
1527:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
GAS LISTING /tmp/ccW4ZvF5.s 			page 476


 17950              		.loc 1 1527 19 view .LVU5978
 17951 049b 4983C701 		add	r15, 1	# passes,
 17952              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1525:sieve_extend.c ****             sieve_delete(sieve);
 17953              		.loc 1 1525 21 view .LVU5979
 17954 049f E8000000 		call	sieve_shake	#
 17954      00
 17955              	.LVL1026:
 17956              	.LBB1116:
 17957              	.LBB1113:
 17958              	# sieve_extend.c:123:     free(sieve->bitarray);
 123:sieve_extend.c ****     free(sieve);
 17959              		.loc 1 123 5 view .LVU5980
 17960 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitarray
 17961              	.LBE1113:
 17962              	.LBE1116:
 17963              	# sieve_extend.c:1525:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1525:sieve_extend.c ****             sieve_delete(sieve);
 17964              		.loc 1 1525 21 view .LVU5981
 17965 04a7 4889C5   		mov	rbp, rax	# sieve, tmp538
1526:sieve_extend.c ****             passes++;
 17966              		.loc 1 1526 13 is_stmt 1 view .LVU5982
 17967              	.LVL1027:
 17968              	.LBB1117:
 122:sieve_extend.c ****     free(sieve->bitarray);
 17969              		.loc 1 122 13 view .LVU5983
 17970              	.LBB1114:
 123:sieve_extend.c ****     free(sieve);
 17971              		.loc 1 123 5 view .LVU5984
 17972 04aa E8000000 		call	free@PLT	#
 17972      00
 17973              	.LVL1028:
 124:sieve_extend.c **** }
 17974              		.loc 1 124 5 view .LVU5985
 17975 04af 4889EF   		mov	rdi, rbp	#, sieve
 17976 04b2 E8000000 		call	free@PLT	#
 17976      00
 17977              	.LVL1029:
 124:sieve_extend.c **** }
 17978              		.loc 1 124 5 is_stmt 0 view .LVU5986
 17979              	.LBE1114:
 17980              	.LBE1117:
1527:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17981              		.loc 1 1527 13 is_stmt 1 view .LVU5987
1528:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17982              		.loc 1 1528 13 view .LVU5988
 17983 04b7 4C89EE   		mov	rsi, r13	#, tmp464
 17984 04ba BF010000 		mov	edi, 1	#,
 17984      00
 17985 04bf E8000000 		call	clock_gettime@PLT	#
 17985      00
 17986              	.LVL1030:
 17987              		.loc 1 1529 13 view .LVU5989
 17988              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17989              		.loc 1 1529 62 is_stmt 0 view .LVU5990
 17990 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 216[rsp]	# tmp521, end_time.tv_nsec
 17990      9C24D800 
GAS LISTING /tmp/ccW4ZvF5.s 			page 477


 17990      0000
 17991              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17992              		.loc 1 1529 68 view .LVU5991
 17993 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 192[rsp]	# tmp522, start_time.tv_sec
 17993      A424C000 
 17993      0000
 17994              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17995              		.loc 1 1529 108 view .LVU5992
 17996 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 200[rsp]	# tmp524, start_time.tv_nsec
 17996      AC24C800 
 17996      0000
 17997              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17998              		.loc 1 1529 44 view .LVU5993
 17999 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 208[rsp]	# tmp525, end_time.tv_sec
 17999      B424D000 
 17999      0000
 18000              	# sieve_extend.c:1524:         while (elapsed_time <= max_time) {
1524:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18001              		.loc 1 1524 15 view .LVU5994
 18002 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC61[rip]	# tmp656,
 18002      00000000 
 18003 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _305, tmp522,
 18003      1D000000 
 18003      00
 18004 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _306, tmp525,
 18004      2D000000 
 18004      00
 18005              	# sieve_extend.c:1529:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18006              		.loc 1 1529 26 view .LVU5995
 18007 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _305, _306
 18007      C5
 18008              	.LVL1031:
1524:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18009              		.loc 1 1524 15 is_stmt 1 view .LVU5996
 18010 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp656, elapsed_time
 18011 050f 0F83F6FE 		jnb	.L1441	#,
 18011      FFFF
 18012              	.L1513:
1530:sieve_extend.c ****         }
1531:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 18013              		.loc 1 1531 9 view .LVU5997
 18014              	.LVL1032:
 18015              	.LBB1118:
 18016              	.LBI1118:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18017              		.loc 3 105 1 view .LVU5998
 18018              	.LBB1119:
 18019              		.loc 3 107 3 view .LVU5999
 18020              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18021              		.loc 3 107 10 is_stmt 0 view .LVU6000
 18022 0515 4C89FA   		mov	rdx, r15	#, passes
 18023 0518 488D3500 		lea	rsi, .LC62[rip]	#,
 18023      000000
 18024 051f BF010000 		mov	edi, 1	#,
 18024      00
 18025 0524 B8010000 		mov	eax, 1	#,
 18025      00
GAS LISTING /tmp/ccW4ZvF5.s 			page 478


 18026 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
 18026      2428
 18027 052f E8000000 		call	__printf_chk@PLT	#
 18027      00
 18028              	.LVL1033:
 18029              		.loc 3 107 10 view .LVU6001
 18030              	.LBE1119:
 18031              	.LBE1118:
1532:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 18032              		.loc 1 1532 9 is_stmt 1 view .LVU6002
 18033              	# sieve_extend.c:1532:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 18034              		.loc 1 1532 12 is_stmt 0 view .LVU6003
 18035 0534 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18035      00000000 
 18036 053c 0F8FF500 		jg	.L1528	#,
 18036      0000
 18037              	.LVL1034:
 18038              	.L1439:
 18039              		.loc 1 1532 12 view .LVU6004
 18040              	.LBE1109:
1533:sieve_extend.c ****     }
1534:sieve_extend.c ****     
1535:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 18041              		.loc 1 1535 5 is_stmt 1 view .LVU6005
 18042              	# sieve_extend.c:1535:     if (option_showMaxFactor > 0) {
 18043              		.loc 1 1535 8 is_stmt 0 view .LVU6006
 18044 0542 4883BC24 		cmp	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 18044      B8000000 
 18044      00
 18045 054b 0F859300 		jne	.L1529	#,
 18045      0000
 18046 0551 66662E0F 		.p2align 4
 18046      1F840000 
 18046      0000000F 
 18046      1F4000
 18047              		.p2align 3
 18048              	.L1447:
 18049              	.LBB1126:
 18050              	.LBB1104:
 18051              	.LBB1101:
 18052              	.LBB1094:
1500:sieve_extend.c ****             }
 18053              		.loc 1 1500 29 is_stmt 1 discriminator 1 view .LVU6007
 18054              	.LBE1094:
 18055              	.LBE1101:
 18056              	.LBE1104:
 18057              	.LBE1126:
 18058              	# sieve_extend.c:1542: }
1536:sieve_extend.c ****         printf("Show result set:\n");
1537:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
1538:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1539:sieve_extend.c ****         sieve_delete(sieve);
1540:sieve_extend.c ****         printf("\n");
1541:sieve_extend.c ****     }
1542:sieve_extend.c **** }
 18059              		.loc 1 1542 1 is_stmt 0 discriminator 1 view .LVU6008
 18060 0560 488B8424 		mov	rax, QWORD PTR 232[rsp]	# tmp572, D.7651
GAS LISTING /tmp/ccW4ZvF5.s 			page 479


 18060      E8000000 
 18061 0568 64483304 		xor	rax, QWORD PTR fs:40	# tmp572, MEM[(<address-space-1> long unsigned int *)40B]
 18061      25280000 
 18061      00
 18062 0571 0F85A50A 		jne	.L1530	#,
 18062      0000
 18063              	# sieve_extend.c:1542: }
 18064              		.loc 1 1542 1 view .LVU6009
 18065 0577 488DA424 		lea	rsp, 248[rsp]	#,
 18065      F8000000 
 18066              		.cfi_remember_state
 18067              		.cfi_def_cfa_offset 56
 18068 057f 31C0     		xor	eax, eax	#
 18069 0581 5B       		pop	rbx	#
 18070              		.cfi_def_cfa_offset 48
 18071 0582 5D       		pop	rbp	#
 18072              		.cfi_def_cfa_offset 40
 18073 0583 415C     		pop	r12	#
 18074              		.cfi_def_cfa_offset 32
 18075 0585 415D     		pop	r13	#
 18076              		.cfi_def_cfa_offset 24
 18077 0587 415E     		pop	r14	#
 18078              		.cfi_def_cfa_offset 16
 18079 0589 415F     		pop	r15	#
 18080              		.cfi_def_cfa_offset 8
 18081 058b C3       		ret	
 18082              	.L1402:
 18083              		.cfi_restore_state
1482:sieve_extend.c ****         #endif
 18084              		.loc 1 1482 13 is_stmt 1 view .LVU6010
 18085              	.LVL1035:
 18086              	.LBB1127:
 18087              	.LBI1127:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18088              		.loc 3 105 1 view .LVU6011
 18089              	.LBB1128:
 18090              		.loc 3 107 3 view .LVU6012
 18091              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18092              		.loc 3 107 10 is_stmt 0 view .LVU6013
 18093 058c 488D3D00 		lea	rdi, .LC29[rip]	#,
 18093      000000
 18094 0593 E8000000 		call	puts@PLT	#
 18094      00
 18095              	.LVL1036:
 18096              		.loc 3 107 10 view .LVU6014
 18097              	.LBE1128:
 18098              	.LBE1127:
1486:sieve_extend.c ****         // Count the number of primes and validate the result
 18099              		.loc 1 1486 5 is_stmt 1 view .LVU6015
1488:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18100              		.loc 1 1488 9 view .LVU6016
 18101              	# sieve_extend.c:1488:         if (option_verboselevel >= 1) printf("Validating... ");
1488:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18102              		.loc 1 1488 12 is_stmt 0 view .LVU6017
 18103 0598 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18103      00000000 
 18104 05a0 0F8E49FC 		jle	.L1403	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 480


 18104      FFFF
1488:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18105              		.loc 1 1488 39 is_stmt 1 view .LVU6018
 18106              	.LVL1037:
 18107              	.LBB1129:
 18108              	.LBI1129:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18109              		.loc 3 105 1 view .LVU6019
 18110              	.LBB1130:
 18111              		.loc 3 107 3 view .LVU6020
 18112              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18113              		.loc 3 107 10 is_stmt 0 view .LVU6021
 18114 05a6 488D3500 		lea	rsi, .LC46[rip]	#,
 18114      000000
 18115 05ad BF010000 		mov	edi, 1	#,
 18115      00
 18116 05b2 31C0     		xor	eax, eax	#
 18117 05b4 E8000000 		call	__printf_chk@PLT	#
 18117      00
 18118              	.LVL1038:
 18119 05b9 E931FCFF 		jmp	.L1403	#
 18119      FF
 18120              	.LVL1039:
 18121              	.L1391:
 18122              		.loc 3 107 10 view .LVU6022
 18123              	.LBE1130:
 18124              	.LBE1129:
 18125              	.LBB1131:
1440:sieve_extend.c ****             }
 18126              		.loc 1 1440 17 is_stmt 1 view .LVU6023
 18127              	.LBB1056:
 18128              	.LBI1056:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18129              		.loc 3 98 1 view .LVU6024
 18130              	.LBB1057:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18131              		.loc 3 100 3 view .LVU6025
 18132              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18133              		.loc 3 100 10 is_stmt 0 view .LVU6026
 18134 05be 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 18135 05c1 488D1500 		lea	rdx, .LC33[rip]	#,
 18135      000000
 18136              	.LVL1040:
 18137              	.L1516:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18138              		.loc 3 100 10 view .LVU6027
 18139              	.LBE1057:
 18140              	.LBE1056:
 18141              	.LBB1058:
 18142              	.LBB1059:
 18143 05c8 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18143      000000
 18144 05cf BE010000 		mov	esi, 1	#,
 18144      00
 18145 05d4 31C0     		xor	eax, eax	#
 18146 05d6 E8000000 		call	__fprintf_chk@PLT	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 481


 18146      00
 18147              	.LVL1041:
 18148              	.L1517:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18149              		.loc 3 100 10 view .LVU6028
 18150              	.LBE1059:
 18151              	.LBE1058:
1448:sieve_extend.c ****             }
 18152              		.loc 1 1448 80 is_stmt 1 view .LVU6029
 18153 05db 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 18154 05df E8000000 		call	usage	#
 18154      00
 18155              	.LVL1042:
 18156              	.L1529:
1448:sieve_extend.c ****             }
 18157              		.loc 1 1448 80 is_stmt 0 view .LVU6030
 18158              	.LBE1131:
 18159              	.LBB1132:
1536:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 18160              		.loc 1 1536 9 is_stmt 1 view .LVU6031
 18161              	.LBB1133:
 18162              	.LBI1133:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18163              		.loc 3 105 1 view .LVU6032
 18164              	.LBB1134:
 18165              		.loc 3 107 3 view .LVU6033
 18166              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18167              		.loc 3 107 10 is_stmt 0 view .LVU6034
 18168 05e4 488D3D00 		lea	rdi, .LC64[rip]	#,
 18168      000000
 18169 05eb E8000000 		call	puts@PLT	#
 18169      00
 18170              	.LVL1043:
 18171              		.loc 3 107 10 view .LVU6035
 18172              	.LBE1134:
 18173              	.LBE1133:
1537:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18174              		.loc 1 1537 9 is_stmt 1 view .LVU6036
 18175              	# sieve_extend.c:1537:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1537:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18176              		.loc 1 1537 33 is_stmt 0 view .LVU6037
 18177 05f0 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	# option_maxFactor.52_94, option_maxFactor
 18177      B0000000 
 18178 05f8 4889FE   		mov	rsi, rdi	#, option_maxFactor.52_94
 18179 05fb E8000000 		call	sieve_shake	#
 18179      00
 18180              	.LVL1044:
 18181              	# sieve_extend.c:1538:         show_primes(sieve, option_showMaxFactor);
1538:sieve_extend.c ****         sieve_delete(sieve);
 18182              		.loc 1 1538 9 view .LVU6038
 18183 0600 488B9424 		mov	rdx, QWORD PTR 184[rsp]	#, option_showMaxFactor
 18183      B8000000 
 18184              	# sieve_extend.c:1537:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1537:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18185              		.loc 1 1537 33 view .LVU6039
 18186 0608 4989C4   		mov	r12, rax	# sieve, tmp537
 18187              	.LVL1045:
GAS LISTING /tmp/ccW4ZvF5.s 			page 482


1538:sieve_extend.c ****         sieve_delete(sieve);
 18188              		.loc 1 1538 9 is_stmt 1 view .LVU6040
 18189 060b 488D7008 		lea	rsi, 8[rax]	# tmp462,
 18190 060f 4889C7   		mov	rdi, rax	#, sieve
 18191 0612 E8000000 		call	show_primes.isra.0	#
 18191      00
 18192              	.LVL1046:
1539:sieve_extend.c ****         printf("\n");
 18193              		.loc 1 1539 9 view .LVU6041
 18194              	.LBB1135:
 18195              	.LBI1135:
 122:sieve_extend.c ****     free(sieve->bitarray);
 18196              		.loc 1 122 13 view .LVU6042
 18197              	.LBB1136:
 123:sieve_extend.c ****     free(sieve);
 18198              		.loc 1 123 5 view .LVU6043
 18199 0617 498B3C24 		mov	rdi, QWORD PTR [r12]	#, sieve_153->bitarray
 18200 061b E8000000 		call	free@PLT	#
 18200      00
 18201              	.LVL1047:
 124:sieve_extend.c **** }
 18202              		.loc 1 124 5 view .LVU6044
 18203 0620 4C89E7   		mov	rdi, r12	#, sieve
 18204 0623 E8000000 		call	free@PLT	#
 18204      00
 18205              	.LVL1048:
 124:sieve_extend.c **** }
 18206              		.loc 1 124 5 is_stmt 0 view .LVU6045
 18207              	.LBE1136:
 18208              	.LBE1135:
1540:sieve_extend.c ****     }
 18209              		.loc 1 1540 9 is_stmt 1 view .LVU6046
 18210              	.LBB1137:
 18211              	.LBI1137:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18212              		.loc 3 105 1 view .LVU6047
 18213              	.LBB1138:
 18214              		.loc 3 107 3 view .LVU6048
 18215              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18216              		.loc 3 107 10 is_stmt 0 view .LVU6049
 18217 0628 BF0A0000 		mov	edi, 10	#,
 18217      00
 18218 062d E8000000 		call	putchar@PLT	#
 18218      00
 18219              	.LVL1049:
 18220 0632 E929FFFF 		jmp	.L1447	#
 18220      FF
 18221              	.LVL1050:
 18222              	.L1528:
 18223              		.loc 3 107 10 view .LVU6050
 18224              	.LBE1138:
 18225              	.LBE1137:
 18226              	.LBE1132:
 18227              	.LBB1139:
1532:sieve_extend.c ****     }
 18228              		.loc 1 1532 39 is_stmt 1 discriminator 1 view .LVU6051
 18229              	.LBB1120:
GAS LISTING /tmp/ccW4ZvF5.s 			page 483


 18230              	.LBI1120:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18231              		.loc 3 105 1 discriminator 1 view .LVU6052
 18232              	.LBB1121:
 18233              		.loc 3 107 3 discriminator 1 view .LVU6053
 18234              	.LBE1121:
 18235              	.LBE1120:
 18236              	# sieve_extend.c:1532:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1532:sieve_extend.c ****     }
 18237              		.loc 1 1532 39 is_stmt 0 discriminator 1 view .LVU6054
 18238 0637 C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp450, passes
 18238      C7
 18239 063c 4D85FF   		test	r15, r15	# passes
 18240 063f C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
 18240      2428
 18241 0645 7919     		jns	.L1444	#,
 18242 0647 4C89F9   		mov	rcx, r15	# tmp452, passes
 18243 064a 4D89FA   		mov	r10, r15	# tmp453, passes
 18244 064d 48D1E9   		shr	rcx	# tmp452
 18245 0650 4183E201 		and	r10d, 1	# tmp453,
 18246 0654 4C09D1   		or	rcx, r10	# tmp517, tmp453
 18247 0657 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp451, tmp517
 18247      F9
 18248 065c C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp450, tmp451, tmp451
 18249              	.L1444:
1532:sieve_extend.c ****     }
 18250              		.loc 1 1532 39 discriminator 1 view .LVU6055
 18251 0660 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp454, tmp450, elapsed_time
 18252              	# sieve_extend.c:1532:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1532:sieve_extend.c ****     }
 18253              		.loc 1 1532 95 discriminator 1 view .LVU6056
 18254 0664 4B8D14BF 		lea	rdx, [r15+r15*4]	# tmp455,
 18255              	# sieve_extend.c:1532:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1532:sieve_extend.c ****     }
 18256              		.loc 1 1532 39 discriminator 1 view .LVU6057
 18257 0668 4885D2   		test	rdx, rdx	# tmp455
 18258 066b C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rdx	# tmp456, tmp455
 18258      DA
 18259 0670 7915     		jns	.L1446	#,
 18260 0672 4989D3   		mov	r11, rdx	# tmp458, tmp455
 18261 0675 83E201   		and	edx, 1	# tmp459,
 18262 0678 49D1EB   		shr	r11	# tmp458
 18263 067b 4909D3   		or	r11, rdx	# tmp518, tmp459
 18264 067e C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r11	# tmp457, tmp518
 18264      E3
 18265 0683 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp456, tmp457, tmp457
 18266              	.L1446:
 18267 0687 C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp460, tmp456, elapsed_time
 18268              	.LBB1123:
 18269              	.LBB1122:
 18270              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18271              		.loc 3 107 10 discriminator 1 view .LVU6058
 18272 068b 488D3500 		lea	rsi, .LC63[rip]	#,
 18272      000000
 18273 0692 BF010000 		mov	edi, 1	#,
 18273      00
 18274 0697 B8020000 		mov	eax, 2	#,
GAS LISTING /tmp/ccW4ZvF5.s 			page 484


 18274      00
 18275 069c E8000000 		call	__printf_chk@PLT	#
 18275      00
 18276              	.LVL1051:
 18277 06a1 E99CFEFF 		jmp	.L1439	#
 18277      FF
 18278              	.LVL1052:
 18279              	.L1527:
 18280              		.loc 3 107 10 discriminator 1 view .LVU6059
 18281              	.LBE1122:
 18282              	.LBE1123:
 18283              	.LBE1139:
 18284              	.LBB1140:
1509:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18285              		.loc 1 1509 9 is_stmt 1 view .LVU6060
 18286              	# sieve_extend.c:1509:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1509:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18287              		.loc 1 1509 44 is_stmt 0 view .LVU6061
 18288 06a6 448B9424 		mov	r10d, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 18288      A8000000 
 18289 06ae 4183E801 		sub	r8d, 1	#,
 18290 06b2 4C8B9C24 		mov	r11, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 18290      B0000000 
 18291 06ba 4183F802 		cmp	r8d, 2	# _215,
 18292 06be 44895424 		mov	DWORD PTR 104[rsp], r10d	# %sfp, option_verboselevel.42_64
 18292      68
 18293 06c3 4C899C24 		mov	QWORD PTR 136[rsp], r11	# %sfp, option_maxFactor.43_65
 18293      88000000 
 18294              	.LVL1053:
 18295              	.LBB1141:
 18296              	.LBI1141:
1111:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18297              		.loc 1 1111 27 is_stmt 1 view .LVU6062
 18298              	.LBB1142:
1112:sieve_extend.c **** 
 18299              		.loc 1 1112 5 view .LVU6063
1114:sieve_extend.c ****     best_blocksize_bits = 0;
 18300              		.loc 1 1114 5 view .LVU6064
1115:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18301              		.loc 1 1115 5 view .LVU6065
1116:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18302              		.loc 1 1116 5 view .LVU6066
1117:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18303              		.loc 1 1117 5 view .LVU6067
1118:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18304              		.loc 1 1118 5 view .LVU6068
1119:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18305              		.loc 1 1119 5 view .LVU6069
1120:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 18306              		.loc 1 1120 5 view .LVU6070
1121:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18307              		.loc 1 1121 5 view .LVU6071
1122:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18308              		.loc 1 1122 5 view .LVU6072
1123:sieve_extend.c ****     double sample_duration = default_sample_duration;
 18309              		.loc 1 1123 5 view .LVU6073
1124:sieve_extend.c **** 
GAS LISTING /tmp/ccW4ZvF5.s 			page 485


 18310              		.loc 1 1124 5 view .LVU6074
1127:sieve_extend.c ****         case 1:
 18311              		.loc 1 1127 5 view .LVU6075
 18312 06cb 0F86EA07 		jbe	.L1448	#,
 18312      0000
 18313 06d1 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC28[rip]	# sample_duration,
 18313      00000000 
 18314 06d9 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 18314      78050000 
 18314      00
 18315 06e2 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 18315      70800000 
 18315      00
 18316 06eb 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 18316      90000000 
 18316      20000000 
 18317 06f7 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 18317      98000000 
 18317      04000000 
 18318 0703 C5FB11B4 		vmovsd	QWORD PTR 128[rsp], xmm6	# %sfp, sample_duration
 18318      24800000 
 18318      00
 18319              	.LVL1054:
 18320              	.L1416:
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18321              		.loc 1 1156 5 view .LVU6076
 18322              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18323              		.loc 1 1156 33 is_stmt 0 view .LVU6077
 18324 070c B8400000 		mov	eax, 64	# tmp350,
 18324      00
 18325 0711 31D2     		xor	edx, edx	# tmp349
 18326 0713 48F7B424 		div	QWORD PTR 152[rsp]	# %sfp
 18326      98000000 
 18327              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18328              		.loc 1 1156 254 view .LVU6078
 18329 071b 31D2     		xor	edx, edx	# tmp357
 18330              	# sieve_extend.c:1158:     counter_t tuning_results=0;
1158:sieve_extend.c ****     counter_t tuning_result_index=0;
 18331              		.loc 1 1158 15 view .LVU6079
 18332 071d 4531FF   		xor	r15d, r15d	# tuning_results
 18333              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18334              		.loc 1 1156 83 view .LVU6080
 18335 0720 488D7801 		lea	rdi, 1[rax]	# _232,
 18336              	.LVL1055:
1157:sieve_extend.c ****     counter_t tuning_results=0;
 18337              		.loc 1 1157 5 is_stmt 1 view .LVU6081
 18338              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18339              		.loc 1 1156 254 is_stmt 0 view .LVU6082
 18340 0724 B8001000 		mov	eax, 4096	# tmp358,
 18340      00
 18341 0729 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 18341      70
 18342              	.LVL1056:
GAS LISTING /tmp/ccW4ZvF5.s 			page 486


 18343              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18344              		.loc 1 1156 148 view .LVU6083
 18345 072e 31D2     		xor	edx, edx	# tmp367
 18346              	# sieve_extend.c:1157:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1157:sieve_extend.c ****     counter_t tuning_results=0;
 18347              		.loc 1 1157 41 view .LVU6084
 18348 0730 480FAFC7 		imul	rax, rdi	# tmp363, _232
 18349              	.LVL1057:
1157:sieve_extend.c ****     counter_t tuning_results=0;
 18350              		.loc 1 1157 41 view .LVU6085
 18351 0734 480FAFF8 		imul	rdi, rax	# tmp364, tmp363
 18352              	.LVL1058:
 18353              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18354              		.loc 1 1156 148 view .LVU6086
 18355 0738 B8000100 		mov	eax, 256	# tmp368,
 18355      00
 18356 073d 48F7B424 		div	QWORD PTR 144[rsp]	# %sfp
 18356      90000000 
 18357              	# sieve_extend.c:1156:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1156:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18358              		.loc 1 1156 201 view .LVU6087
 18359 0745 4883C001 		add	rax, 1	# tmp373,
 18360              	# sieve_extend.c:1157:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1157:sieve_extend.c ****     counter_t tuning_results=0;
 18361              		.loc 1 1157 41 view .LVU6088
 18362 0749 480FAFF8 		imul	rdi, rax	# tmp374, tmp373
 18363 074d 48C1E708 		sal	rdi, 8	# tmp374,
 18364 0751 E8000000 		call	malloc@PLT	#
 18364      00
 18365              	.LVL1059:
 18366              	# sieve_extend.c:1114:     double best_avg = 0;
1114:sieve_extend.c ****     best_blocksize_bits = 0;
 18367              		.loc 1 1114 12 view .LVU6089
 18368 0756 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 18369              	# sieve_extend.c:1157:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1157:sieve_extend.c ****     counter_t tuning_results=0;
 18370              		.loc 1 1157 41 view .LVU6090
 18371 075a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, tmp535
 18371      40
 18372              	.LVL1060:
1158:sieve_extend.c ****     counter_t tuning_result_index=0;
 18373              		.loc 1 1158 5 is_stmt 1 view .LVU6091
1159:sieve_extend.c ****     
 18374              		.loc 1 1159 5 view .LVU6092
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18375              		.loc 1 1161 5 view .LVU6093
 18376              	.LBB1143:
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18377              		.loc 1 1161 10 view .LVU6094
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18378              		.loc 1 1161 42 view .LVU6095
 18379              	.LBE1143:
 18380              	# sieve_extend.c:1118:     counter_t best_vectorstep_faster = 0;
1118:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18381              		.loc 1 1118 15 is_stmt 0 view .LVU6096
GAS LISTING /tmp/ccW4ZvF5.s 			page 487


 18382 075f 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 18382      60000000 
 18382      00
 18383              	# sieve_extend.c:1117:     counter_t best_mediumstep_faster = 0;
1117:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18384              		.loc 1 1117 15 view .LVU6097
 18385 0768 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 18385      58000000 
 18385      00
 18386              	# sieve_extend.c:1116:     counter_t best_smallstep_faster = 0;
1116:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18387              		.loc 1 1116 15 view .LVU6098
 18388 0771 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
 18388      50000000 
 18388      00
 18389              	# sieve_extend.c:1115:     best_blocksize_bits = 0;
1115:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18390              		.loc 1 1115 25 view .LVU6099
 18391 077a 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 18391      48000000 
 18391      00
 18392              	.LBB1173:
 18393              	# sieve_extend.c:1161:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18394              		.loc 1 1161 20 view .LVU6100
 18395 0783 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 18395      30000000 
 18395      00
 18396              	.LBE1173:
 18397              	# sieve_extend.c:1114:     double best_avg = 0;
1114:sieve_extend.c ****     best_blocksize_bits = 0;
 18398              		.loc 1 1114 12 view .LVU6101
 18399 078c C5FB114C 		vmovsd	QWORD PTR 56[rsp], xmm1	# %sfp, best_avg
 18399      2438
 18400              	.LVL1061:
 18401              	.L1418:
 18402              	.LBB1174:
 18403              	.LBB1144:
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18404              		.loc 1 1162 62 is_stmt 1 view .LVU6102
 18405              	.LBB1145:
 18406              	.LBB1146:
 18407              	# sieve_extend.c:1164:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18408              		.loc 1 1164 32 is_stmt 0 view .LVU6103
 18409 0792 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18409      30
 18410 0797 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, smallstep_faster
 18410      28
 18411              	.LVL1062:
 18412 079c 0F1F4000 		.p2align 4
 18413              		.p2align 3
 18414              	.L1430:
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18415              		.loc 1 1164 32 view .LVU6104
 18416              	.LBE1146:
1163:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
GAS LISTING /tmp/ccW4ZvF5.s 			page 488


 18417              		.loc 1 1163 67 is_stmt 1 view .LVU6105
 18418              	.LBB1169:
 18419              	# sieve_extend.c:1164:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18420              		.loc 1 1164 32 is_stmt 0 view .LVU6106
 18421 07a0 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 18421      28
 18422              	.LVL1063:
 18423 07a5 66662E0F 		.p2align 4
 18423      1F840000 
 18423      000000
 18424              		.p2align 3
 18425              	.L1428:
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18426              		.loc 1 1164 50 is_stmt 1 view .LVU6107
 18427              	.LBB1147:
 18428              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18429              		.loc 1 1165 36 is_stmt 0 view .LVU6108
 18430 07b0 C744246C 		mov	DWORD PTR 108[rsp], 6	# %sfp,
 18430      06000000 
 18431              	.LBE1147:
 18432              	# sieve_extend.c:1164:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18433              		.loc 1 1164 32 view .LVU6109
 18434 07b8 41BC0001 		mov	r12d, 256	# blocksize_kb,
 18434      0000
 18435              	.LVL1064:
 18436 07be 6690     		.p2align 4
 18437              		.p2align 3
 18438              	.L1426:
 18439              	.LBB1167:
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18440              		.loc 1 1165 49 is_stmt 1 view .LVU6110
 18441 07c0 4F8D147F 		lea	r10, [r15+r15*2]	# tmp401,
 18442              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18443              		.loc 1 1165 134 is_stmt 0 view .LVU6111
 18444 07c4 4C89E3   		mov	rbx, r12	# ivtmp.778, blocksize_kb
 18445 07c7 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18445      40
 18446              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18447              		.loc 1 1165 36 view .LVU6112
 18448 07cc 31ED     		xor	ebp, ebp	# free_bits
 18449 07ce 49C1E205 		sal	r10, 5	# tmp402,
 18450              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18451              		.loc 1 1165 134 view .LVU6113
 18452 07d2 48C1E30D 		sal	rbx, 13	# ivtmp.778,
 18453 07d6 4F8D2C13 		lea	r13, [r11+r10]	# ivtmp.777,
 18454 07da EB4F     		jmp	.L1424	#
 18455              	.LVL1065:
 18456 07dc 0F1F4000 		.p2align 4,,7
 18457              		.p2align 3
 18458              	.L1421:
 18459              	.LBB1148:
GAS LISTING /tmp/ccW4ZvF5.s 			page 489


1182:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18460              		.loc 1 1182 29 is_stmt 1 view .LVU6114
1183:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18461              		.loc 1 1183 29 view .LVU6115
1184:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 18462              		.loc 1 1184 29 view .LVU6116
1185:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 18463              		.loc 1 1185 29 view .LVU6117
1186:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 18464              		.loc 1 1186 29 view .LVU6118
1187:sieve_extend.c ****                         }
 18465              		.loc 1 1187 29 view .LVU6119
 18466              	# sieve_extend.c:1187:                             if (option_verboselevel >=2) { printf(".(>)"); t
1187:sieve_extend.c ****                         }
 18467              		.loc 1 1187 32 is_stmt 0 view .LVU6120
 18468 07e0 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18468      01
 18469 07e5 0F8F0504 		jg	.L1531	#,
 18469      0000
1187:sieve_extend.c ****                         }
 18470              		.loc 1 1187 32 view .LVU6121
 18471 07eb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18471      28
 18472 07f0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18472      30
 18473 07f5 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 18473      60
 18474              	# sieve_extend.c:1182:                             best_avg = tuning_result[tuning_result_index].av
1182:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18475              		.loc 1 1182 38 view .LVU6122
 18476 07fa C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 18476      2438
 18477 0800 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, mediumstep_faster
 18477      58
 18478              	# sieve_extend.c:1183:                             best_blocksize_bits = blocksize_bits;
1183:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18479              		.loc 1 1183 49 view .LVU6123
 18480 0805 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.778
 18480      48
 18481 080a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, smallstep_faster
 18481      50
 18482              	.LVL1066:
 18483              	.L1419:
1190:sieve_extend.c ****                     }
 18484              		.loc 1 1190 25 is_stmt 1 view .LVU6124
1190:sieve_extend.c ****                     }
 18485              		.loc 1 1190 25 is_stmt 0 view .LVU6125
 18486              	.LBE1148:
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18487              		.loc 1 1165 141 is_stmt 1 view .LVU6126
 18488              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18489              		.loc 1 1165 151 is_stmt 0 view .LVU6127
 18490 080f 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# freebits_steps, %sfp
 18490      70
 18491 0814 4983C560 		add	r13, 96	# ivtmp.777,
 18492 0818 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
GAS LISTING /tmp/ccW4ZvF5.s 			page 490


 18493              	.LVL1067:
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18494              		.loc 1 1165 49 is_stmt 1 view .LVU6128
 18495 081b 4829D3   		sub	rbx, rdx	# ivtmp.778, freebits_steps
 18496              	.LVL1068:
 18497              	# sieve_extend.c:1165:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1165:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18498              		.loc 1 1165 21 is_stmt 0 view .LVU6129
 18499 081e 4881FDFF 		cmp	rbp, 4095	# free_bits,
 18499      0F0000
 18500 0825 0F87ED00 		ja	.L1420	#,
 18500      0000
 18501              	.LVL1069:
 18502              	.L1424:
 18503              	.LBB1165:
1166:sieve_extend.c **** 
 18504              		.loc 1 1166 25 is_stmt 1 view .LVU6130
1169:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18505              		.loc 1 1169 25 view .LVU6131
 18506              	# sieve_extend.c:1176:                         tuning_result[tuning_result_index].smallstep_faster 
1176:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18507              		.loc 1 1176 77 is_stmt 0 view .LVU6132
 18508 082b 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18508      30
 18509 0830 4C89FE   		mov	rsi, r15	# tuning_results, tuning_results
 18510              	# sieve_extend.c:1170:                         tuning_result[tuning_result_index].maxints = maxints
1170:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18511              		.loc 1 1170 68 view .LVU6133
 18512 0833 488B8C24 		mov	rcx, QWORD PTR 136[rsp]	# option_maxFactor.43_65, %sfp
 18512      88000000 
 18513              	# sieve_extend.c:1169:                         tuning_results++;
1169:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18514              		.loc 1 1169 39 view .LVU6134
 18515 083b 4983C701 		add	r15, 1	# tuning_results,
 18516              	.LVL1070:
1170:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18517              		.loc 1 1170 25 is_stmt 1 view .LVU6135
 18518              	# sieve_extend.c:1172:                         tuning_result[tuning_result_index].sample_max = samp
1172:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18519              		.loc 1 1172 71 is_stmt 0 view .LVU6136
 18520 083f 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# sample_max, %sfp
 18520      78
 18521              	# sieve_extend.c:1177:                         tuning_result[tuning_result_index].mediumstep_faster
1177:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18522              		.loc 1 1177 78 view .LVU6137
 18523 0844 488B4424 		mov	rax, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18523      28
 18524              	# sieve_extend.c:1176:                         tuning_result[tuning_result_index].smallstep_faster 
1176:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18525              		.loc 1 1176 77 view .LVU6138
 18526 0849 49897D20 		mov	QWORD PTR 32[r13], rdi	# MEM[base: _520, offset: 32B], smallstep_faster
 18527              	# sieve_extend.c:1179:                         tune_benchmark(tuning_result, tuning_result_index);
1179:sieve_extend.c **** 
 18528              		.loc 1 1179 25 view .LVU6139
 18529 084d 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 18529      40
 18530              	# sieve_extend.c:1171:                         tuning_result[tuning_result_index].sample_duration =
GAS LISTING /tmp/ccW4ZvF5.s 			page 491


1171:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18531              		.loc 1 1171 76 view .LVU6140
 18532 0852 C5FB10A4 		vmovsd	xmm4, QWORD PTR 128[rsp]	# sample_duration, %sfp
 18532      24800000 
 18532      00
 18533              	# sieve_extend.c:1170:                         tuning_result[tuning_result_index].maxints = maxints
1170:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18534              		.loc 1 1170 68 view .LVU6141
 18535 085b 49894D00 		mov	QWORD PTR 0[r13], rcx	# MEM[base: _520, offset: 0B], option_maxFactor.43_65
1171:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18536              		.loc 1 1171 25 is_stmt 1 view .LVU6142
 18537              	# sieve_extend.c:1172:                         tuning_result[tuning_result_index].sample_max = samp
1172:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18538              		.loc 1 1172 71 is_stmt 0 view .LVU6143
 18539 085f 4D894D38 		mov	QWORD PTR 56[r13], r9	# MEM[base: _520, offset: 56B], sample_max
 18540              	# sieve_extend.c:1173:                         tuning_result[tuning_result_index].blocksize_kb = bl
1173:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18541              		.loc 1 1173 73 view .LVU6144
 18542 0863 4D896510 		mov	QWORD PTR 16[r13], r12	# MEM[base: _520, offset: 16B], blocksize_kb
 18543              	# sieve_extend.c:1174:                         tuning_result[tuning_result_index].free_bits = free_
1174:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18544              		.loc 1 1174 70 view .LVU6145
 18545 0867 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _520, offset: 24B], free_bits
 18546              	# sieve_extend.c:1175:                         tuning_result[tuning_result_index].blocksize_bits = 
1175:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18547              		.loc 1 1175 75 view .LVU6146
 18548 086b 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _520, offset: 8B], ivtmp.778
 18549              	# sieve_extend.c:1177:                         tuning_result[tuning_result_index].mediumstep_faster
1177:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18550              		.loc 1 1177 78 view .LVU6147
 18551 086f 49894528 		mov	QWORD PTR 40[r13], rax	# MEM[base: _520, offset: 40B], mediumstep_faster
 18552              	# sieve_extend.c:1178:                         tuning_result[tuning_result_index].vectorstep_faster
1178:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18553              		.loc 1 1178 78 view .LVU6148
 18554 0873 4D897530 		mov	QWORD PTR 48[r13], r14	# MEM[base: _520, offset: 48B], vectorstep_faster
 18555              	# sieve_extend.c:1171:                         tuning_result[tuning_result_index].sample_duration =
1171:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18556              		.loc 1 1171 76 view .LVU6149
 18557 0877 C4C17B11 		vmovsd	QWORD PTR 64[r13], xmm4	# MEM[base: _520, offset: 64B], sample_duration
 18557      6540
1172:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18558              		.loc 1 1172 25 is_stmt 1 view .LVU6150
1173:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18559              		.loc 1 1173 25 view .LVU6151
1174:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18560              		.loc 1 1174 25 view .LVU6152
1175:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18561              		.loc 1 1175 25 view .LVU6153
1176:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18562              		.loc 1 1176 25 view .LVU6154
1177:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18563              		.loc 1 1177 25 view .LVU6155
1178:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18564              		.loc 1 1178 25 view .LVU6156
1179:sieve_extend.c **** 
 18565              		.loc 1 1179 25 view .LVU6157
 18566 087d E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 492


 18566      00
 18567              	.LVL1071:
1181:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18568              		.loc 1 1181 25 view .LVU6158
 18569              	# sieve_extend.c:1181:                         if ( tuning_result[tuning_result_index].avg > best_a
1181:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18570              		.loc 1 1181 64 is_stmt 0 view .LVU6159
 18571 0882 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r13]	# _256, MEM[base: _520, offset: 88B]
 18571      5D58
 18572              	# sieve_extend.c:1181:                         if ( tuning_result[tuning_result_index].avg > best_a
1181:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18573              		.loc 1 1181 28 view .LVU6160
 18574 0888 C5F92F5C 		vcomisd	xmm3, QWORD PTR 56[rsp]	# _256, %sfp
 18574      2438
 18575 088e 0F874CFF 		ja	.L1421	#,
 18575      FFFF
 18576              	.L1422:
1189:sieve_extend.c ****                         tuning_result_index++;
 18577              		.loc 1 1189 25 is_stmt 1 view .LVU6161
 18578              	# sieve_extend.c:1189:                         if (option_verboselevel >= 3) { printf("...."); tuni
1189:sieve_extend.c ****                         tuning_result_index++;
 18579              		.loc 1 1189 28 is_stmt 0 view .LVU6162
 18580 0894 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 18580      02
 18581 0899 0F8E70FF 		jle	.L1419	#,
 18581      FFFF
1189:sieve_extend.c ****                         tuning_result_index++;
 18582              		.loc 1 1189 57 is_stmt 1 view .LVU6163
 18583              	.LVL1072:
 18584              	.LBB1149:
 18585              	.LBI1149:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18586              		.loc 3 105 1 view .LVU6164
 18587              	.LBB1150:
 18588              		.loc 3 107 3 view .LVU6165
 18589              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18590              		.loc 3 107 10 is_stmt 0 view .LVU6166
 18591 089f 488D3500 		lea	rsi, .LC54[rip]	#,
 18591      000000
 18592 08a6 BF010000 		mov	edi, 1	#,
 18592      00
 18593 08ab 31C0     		xor	eax, eax	#
 18594 08ad E8000000 		call	__printf_chk@PLT	#
 18594      00
 18595              	.LVL1073:
 18596              		.loc 3 107 10 view .LVU6167
 18597              	.LBE1150:
 18598              	.LBE1149:
1189:sieve_extend.c ****                         tuning_result_index++;
 18599              		.loc 1 1189 73 is_stmt 1 view .LVU6168
 18600              	.LBB1151:
 18601              	.LBI1151:
1103:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18602              		.loc 1 1103 20 view .LVU6169
 18603              	.LBB1152:
1104:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18604              		.loc 1 1104 5 view .LVU6170
GAS LISTING /tmp/ccW4ZvF5.s 			page 493


 18605              	.LBB1153:
 18606              	.LBI1153:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18607              		.loc 3 105 1 view .LVU6171
 18608              	.LBB1154:
 18609              		.loc 3 107 3 view .LVU6172
 18610              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18611              		.loc 3 107 10 is_stmt 0 view .LVU6173
 18612 08b2 498B4538 		mov	rax, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 18613 08b6 BF010000 		mov	edi, 1	#,
 18613      00
 18614 08bb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 18614      4550
 18615 08c1 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 18616 08c5 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 18617 08c9 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[base: _520, offset: 56B]
 18617      18
 18618 08ce B8030000 		mov	eax, 3	#,
 18618      00
 18619 08d3 498B7548 		mov	rsi, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 18620 08d7 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _520, offset: 72B]
 18620      10
 18621 08dc 488D3500 		lea	rsi, .LC53[rip]	#,
 18621      000000
 18622 08e3 4D8B4530 		mov	r8, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 18623 08e7 4C894424 		mov	QWORD PTR 8[rsp], r8	#, MEM[base: _520, offset: 48B]
 18623      08
 18624 08ec 4D8B5528 		mov	r10, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 18625 08f0 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _520, offset: 40B]
 18626 08f4 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 18627 08f8 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 18628 08fc C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 18628      5558
 18629 0902 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 18629      4D40
 18630 0908 E8000000 		call	__printf_chk@PLT	#
 18630      00
 18631              	.LVL1074:
 18632              		.loc 3 107 10 view .LVU6174
 18633              	.LBE1154:
 18634              	.LBE1153:
 18635              	# sieve_extend.c:1109: }
1109:sieve_extend.c **** 
 18636              		.loc 1 1109 1 view .LVU6175
 18637 090d E9FDFEFF 		jmp	.L1419	#
 18637      FF
 18638              	.LVL1075:
 18639              		.p2align 4,,7
 18640 0912 660F1F44 		.p2align 3
 18640      0000
 18641              	.L1420:
1109:sieve_extend.c **** 
 18642              		.loc 1 1109 1 view .LVU6176
 18643              	.LBE1152:
 18644              	.LBE1151:
 18645              	.LBE1165:
 18646              	.LBE1167:
GAS LISTING /tmp/ccW4ZvF5.s 			page 494


1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18647              		.loc 1 1164 67 is_stmt 1 view .LVU6177
 18648              	# sieve_extend.c:1164:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18649              		.loc 1 1164 80 is_stmt 0 view .LVU6178
 18650 0918 49D1EC   		shr	r12	# blocksize_kb
 18651              	.LVL1076:
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18652              		.loc 1 1164 50 is_stmt 1 view .LVU6179
 18653              	# sieve_extend.c:1164:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1164:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18654              		.loc 1 1164 17 is_stmt 0 view .LVU6180
 18655 091b 836C246C 		sub	DWORD PTR 108[rsp], 1	# %sfp,
 18655      01
 18656 0920 0F859AFE 		jne	.L1426	#,
 18656      FFFF
 18657              	.LBE1169:
1163:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18658              		.loc 1 1163 101 is_stmt 1 view .LVU6181
 18659              	# sieve_extend.c:1163:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1163:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18660              		.loc 1 1163 119 is_stmt 0 view .LVU6182
 18661 0926 4C03B424 		add	r14, QWORD PTR 144[rsp]	# vectorstep_faster, %sfp
 18661      90000000 
 18662              	.LVL1077:
1163:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18663              		.loc 1 1163 67 is_stmt 1 view .LVU6183
 18664              	# sieve_extend.c:1163:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1163:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18665              		.loc 1 1163 13 is_stmt 0 view .LVU6184
 18666 092e 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 18666      010000
 18667 0935 0F8675FE 		jbe	.L1428	#,
 18667      FFFF
 18668              	.LBE1145:
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18669              		.loc 1 1162 94 is_stmt 1 view .LVU6185
 18670              	# sieve_extend.c:1162:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18671              		.loc 1 1162 112 is_stmt 0 view .LVU6186
 18672 093b 4C8BB424 		mov	r14, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18672      98000000 
 18673              	.LVL1078:
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18674              		.loc 1 1162 112 view .LVU6187
 18675 0943 4C017424 		add	QWORD PTR 40[rsp], r14	# %sfp, smallstep_faster_steps
 18675      28
 18676              	.LVL1079:
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18677              		.loc 1 1162 112 view .LVU6188
 18678 0948 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18678      28
 18679              	.LVL1080:
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 18680              		.loc 1 1162 62 is_stmt 1 view .LVU6189
 18681              	# sieve_extend.c:1162:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1162:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
GAS LISTING /tmp/ccW4ZvF5.s 			page 495


 18682              		.loc 1 1162 9 is_stmt 0 view .LVU6190
 18683 094d 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 18684 0951 0F8649FE 		jbe	.L1430	#,
 18684      FFFF
 18685              	.LBE1144:
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18686              		.loc 1 1161 75 is_stmt 1 view .LVU6191
 18687              	# sieve_extend.c:1161:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18688              		.loc 1 1161 92 is_stmt 0 view .LVU6192
 18689 0957 488B9C24 		mov	rbx, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18689      98000000 
 18690 095f 48015C24 		add	QWORD PTR 48[rsp], rbx	# %sfp, smallstep_faster_steps
 18690      30
 18691              	.LVL1081:
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18692              		.loc 1 1161 92 view .LVU6193
 18693 0964 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18693      30
 18694              	.LVL1082:
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18695              		.loc 1 1161 42 is_stmt 1 view .LVU6194
 18696              	# sieve_extend.c:1161:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1161:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 18697              		.loc 1 1161 5 is_stmt 0 view .LVU6195
 18698 0969 4983FD20 		cmp	r13, 32	# smallstep_faster,
 18699 096d 0F861FFE 		jbe	.L1418	#,
 18699      FFFF
 18700              	.LBE1174:
1196:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18701              		.loc 1 1196 5 is_stmt 1 view .LVU6196
 18702              	# sieve_extend.c:1196:     if (option_verboselevel >= 2) {
1196:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18703              		.loc 1 1196 8 is_stmt 0 view .LVU6197
 18704 0973 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18704      01
 18705 0978 7E3A     		jle	.L1431	#,
1197:sieve_extend.c ****         printf("Best options\n");
 18706              		.loc 1 1197 9 is_stmt 1 view .LVU6198
 18707              	.LVL1083:
 18708              	.LBB1175:
 18709              	.LBI1175:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18710              		.loc 3 105 1 view .LVU6199
 18711              	.LBB1176:
 18712              		.loc 3 107 3 view .LVU6200
 18713              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18714              		.loc 3 107 10 is_stmt 0 view .LVU6201
 18715 097a 488B6C24 		mov	rbp, QWORD PTR 96[rsp]	# best_vectorstep_faster, %sfp
 18715      60
 18716              	.LVL1084:
 18717              		.loc 3 107 10 view .LVU6202
 18718 097f BF010000 		mov	edi, 1	#,
 18718      00
 18719 0984 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	#, %sfp
 18719      58
 18720 0989 4C89FA   		mov	rdx, r15	#, tuning_results
GAS LISTING /tmp/ccW4ZvF5.s 			page 496


 18721 098c 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	#, %sfp
 18721      50
 18722 0991 488D3500 		lea	rsi, .LC55[rip]	#,
 18722      000000
 18723 0998 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	#, %sfp
 18723      48
 18724 099d 31C0     		xor	eax, eax	#
 18725 099f 48892C24 		mov	QWORD PTR [rsp], rbp	#, best_vectorstep_faster
 18726 09a3 E8000000 		call	__printf_chk@PLT	#
 18726      00
 18727              	.LVL1085:
 18728              		.loc 3 107 10 view .LVU6203
 18729              	.LBE1176:
 18730              	.LBE1175:
1198:sieve_extend.c ****     }
 18731              		.loc 1 1198 9 is_stmt 1 view .LVU6204
 18732              	.LBB1177:
 18733              	.LBI1177:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18734              		.loc 3 105 1 view .LVU6205
 18735              	.LBB1178:
 18736              		.loc 3 107 3 view .LVU6206
 18737              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18738              		.loc 3 107 10 is_stmt 0 view .LVU6207
 18739 09a8 488D3D00 		lea	rdi, .LC56[rip]	#,
 18739      000000
 18740 09af E8000000 		call	puts@PLT	#
 18740      00
 18741              	.LVL1086:
 18742              	.L1431:
 18743              		.loc 3 107 10 view .LVU6208
 18744              	.LBE1178:
 18745              	.LBE1177:
 18746              	.LBB1179:
 18747              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18748              		.loc 1 1216 24 view .LVU6209
 18749 09b4 4531DB   		xor	r11d, r11d	# step
 18750              	.LBE1179:
 18751              	.LBB1180:
 18752              	# sieve_extend.c:1208:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18753              		.loc 1 1208 75 view .LVU6210
 18754 09b7 41BE0A00 		mov	r14d, 10	# tmp476,
 18754      0000
 18755 09bd 4C8B6C24 		mov	r13, QWORD PTR 120[rsp]	# sample_max, %sfp
 18755      78
 18756              	.LVL1087:
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18757              		.loc 1 1208 75 view .LVU6211
 18758 09c2 4C8B6424 		mov	r12, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18758      40
 18759              	.LVL1088:
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18760              		.loc 1 1208 75 view .LVU6212
 18761 09c7 4C895C24 		mov	QWORD PTR 48[rsp], r11	# %sfp, step
 18761      30
GAS LISTING /tmp/ccW4ZvF5.s 			page 497


 18762              	.LVL1089:
 18763              	.L1436:
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18764              		.loc 1 1208 75 view .LVU6213
 18765              	.LBE1180:
1201:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 18766              		.loc 1 1201 11 is_stmt 1 view .LVU6214
 18767 09cc 4983FF04 		cmp	r15, 4	# tuning_results,
 18768 09d0 0F862E04 		jbe	.L1532	#,
 18768      0000
1202:sieve_extend.c ****         step++;
 18769              		.loc 1 1202 9 view .LVU6215
 18770 09d6 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 18770      000000
 18771 09dd BA600000 		mov	edx, 96	#,
 18771      00
 18772 09e2 4C89FE   		mov	rsi, r15	#, tuning_results
 18773 09e5 4C89E7   		mov	rdi, r12	#, tuning_result
 18774 09e8 E8000000 		call	qsort@PLT	#
 18774      00
 18775              	.LVL1090:
1203:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18776              		.loc 1 1203 9 view .LVU6216
1204:sieve_extend.c ****             tuning_result_index = 0;
 18777              		.loc 1 1204 9 view .LVU6217
 18778              	# sieve_extend.c:1203:         step++;
1203:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18779              		.loc 1 1203 13 is_stmt 0 view .LVU6218
 18780 09ed 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 18780      3001
 18781              	.LVL1091:
 18782              	# sieve_extend.c:1204:         if (option_verboselevel >= 2) {
1204:sieve_extend.c ****             tuning_result_index = 0;
 18783              		.loc 1 1204 12 view .LVU6219
 18784 09f3 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18784      01
 18785 09f8 0F8F8902 		jg	.L1432	#,
 18785      0000
 18786              	.L1434:
1214:sieve_extend.c **** 
 18787              		.loc 1 1214 9 is_stmt 1 view .LVU6220
 18788              	# sieve_extend.c:1214:         tuning_results = tuning_results / 2;
1214:sieve_extend.c **** 
 18789              		.loc 1 1214 24 is_stmt 0 view .LVU6221
 18790 09fe 49D1EF   		shr	r15	# tuning_results
 18791              	.LVL1092:
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18792              		.loc 1 1216 9 is_stmt 1 view .LVU6222
 18793              	.LBB1189:
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18794              		.loc 1 1216 14 view .LVU6223
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18795              		.loc 1 1216 29 view .LVU6224
 18796              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18797              		.loc 1 1216 24 is_stmt 0 view .LVU6225
 18798 0a01 31ED     		xor	ebp, ebp	# i
GAS LISTING /tmp/ccW4ZvF5.s 			page 498


 18799 0a03 4D89FB   		mov	r11, r15	# tmp490, tuning_results
 18800 0a06 498D5C24 		lea	rbx, 56[r12]	# ivtmp.759,
 18800      38
 18801 0a0b 4183E307 		and	r11d, 7	# tmp490,
 18802 0a0f 0F84D300 		je	.L1433	#,
 18802      0000
 18803 0a15 4983FB01 		cmp	r11, 1	# tmp490,
 18804 0a19 0F84AA00 		je	.L1491	#,
 18804      0000
 18805 0a1f 4983FB02 		cmp	r11, 2	# tmp490,
 18806 0a23 0F848A00 		je	.L1492	#,
 18806      0000
 18807 0a29 4983FB03 		cmp	r11, 3	# tmp490,
 18808 0a2d 746E     		je	.L1493	#,
 18809 0a2f 4983FB04 		cmp	r11, 4	# tmp490,
 18810 0a33 7452     		je	.L1494	#,
 18811 0a35 4983FB05 		cmp	r11, 5	# tmp490,
 18812 0a39 7436     		je	.L1495	#,
 18813 0a3b 4983FB06 		cmp	r11, 6	# tmp490,
 18814 0a3f 741A     		je	.L1496	#,
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18815              		.loc 1 1217 13 is_stmt 1 view .LVU6226
 18816 0a41 31F6     		xor	esi, esi	#
 18817 0a43 4C89E7   		mov	rdi, r12	#, tuning_result
 18818 0a46 E8000000 		call	tune_benchmark	#
 18818      00
 18819              	.LVL1093:
1218:sieve_extend.c ****         }
 18820              		.loc 1 1218 13 view .LVU6227
 18821              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18822              		.loc 1 1216 48 is_stmt 0 view .LVU6228
 18823 0a4b BD010000 		mov	ebp, 1	# i,
 18823      00
 18824              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18825              		.loc 1 1218 41 view .LVU6229
 18826 0a50 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18827              		.loc 1 1216 47 is_stmt 1 view .LVU6230
 18828              	.LVL1094:
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18829              		.loc 1 1216 29 view .LVU6231
 18830 0a53 498D9C24 		lea	rbx, 152[r12]	# ivtmp.759,
 18830      98000000 
 18831              	.L1496:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18832              		.loc 1 1217 13 view .LVU6232
 18833 0a5b 4889EE   		mov	rsi, rbp	#, i
 18834 0a5e 4C89E7   		mov	rdi, r12	#, tuning_result
 18835 0a61 E8000000 		call	tune_benchmark	#
 18835      00
 18836              	.LVL1095:
1218:sieve_extend.c ****         }
 18837              		.loc 1 1218 13 view .LVU6233
 18838              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccW4ZvF5.s 			page 499


 18839              		.loc 1 1216 48 is_stmt 0 view .LVU6234
 18840 0a66 4883C501 		add	rbp, 1	# i,
 18841              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18842              		.loc 1 1218 41 view .LVU6235
 18843 0a6a 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18844              		.loc 1 1216 47 is_stmt 1 view .LVU6236
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18845              		.loc 1 1216 29 view .LVU6237
 18846 0a6d 4883C360 		add	rbx, 96	# ivtmp.759,
 18847              	.L1495:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18848              		.loc 1 1217 13 view .LVU6238
 18849 0a71 4889EE   		mov	rsi, rbp	#, i
 18850 0a74 4C89E7   		mov	rdi, r12	#, tuning_result
 18851 0a77 E8000000 		call	tune_benchmark	#
 18851      00
 18852              	.LVL1096:
1218:sieve_extend.c ****         }
 18853              		.loc 1 1218 13 view .LVU6239
 18854              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18855              		.loc 1 1216 48 is_stmt 0 view .LVU6240
 18856 0a7c 4883C501 		add	rbp, 1	# i,
 18857              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18858              		.loc 1 1218 41 view .LVU6241
 18859 0a80 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18860              		.loc 1 1216 47 is_stmt 1 view .LVU6242
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18861              		.loc 1 1216 29 view .LVU6243
 18862 0a83 4883C360 		add	rbx, 96	# ivtmp.759,
 18863              	.L1494:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18864              		.loc 1 1217 13 view .LVU6244
 18865 0a87 4889EE   		mov	rsi, rbp	#, i
 18866 0a8a 4C89E7   		mov	rdi, r12	#, tuning_result
 18867 0a8d E8000000 		call	tune_benchmark	#
 18867      00
 18868              	.LVL1097:
1218:sieve_extend.c ****         }
 18869              		.loc 1 1218 13 view .LVU6245
 18870              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18871              		.loc 1 1216 48 is_stmt 0 view .LVU6246
 18872 0a92 4883C501 		add	rbp, 1	# i,
 18873              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18874              		.loc 1 1218 41 view .LVU6247
 18875 0a96 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18876              		.loc 1 1216 47 is_stmt 1 view .LVU6248
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18877              		.loc 1 1216 29 view .LVU6249
 18878 0a99 4883C360 		add	rbx, 96	# ivtmp.759,
GAS LISTING /tmp/ccW4ZvF5.s 			page 500


 18879              	.L1493:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18880              		.loc 1 1217 13 view .LVU6250
 18881 0a9d 4889EE   		mov	rsi, rbp	#, i
 18882 0aa0 4C89E7   		mov	rdi, r12	#, tuning_result
 18883 0aa3 E8000000 		call	tune_benchmark	#
 18883      00
 18884              	.LVL1098:
1218:sieve_extend.c ****         }
 18885              		.loc 1 1218 13 view .LVU6251
 18886              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18887              		.loc 1 1216 48 is_stmt 0 view .LVU6252
 18888 0aa8 4883C501 		add	rbp, 1	# i,
 18889              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18890              		.loc 1 1218 41 view .LVU6253
 18891 0aac 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18892              		.loc 1 1216 47 is_stmt 1 view .LVU6254
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18893              		.loc 1 1216 29 view .LVU6255
 18894 0aaf 4883C360 		add	rbx, 96	# ivtmp.759,
 18895              	.L1492:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18896              		.loc 1 1217 13 view .LVU6256
 18897 0ab3 4889EE   		mov	rsi, rbp	#, i
 18898 0ab6 4C89E7   		mov	rdi, r12	#, tuning_result
 18899 0ab9 E8000000 		call	tune_benchmark	#
 18899      00
 18900              	.LVL1099:
1218:sieve_extend.c ****         }
 18901              		.loc 1 1218 13 view .LVU6257
 18902              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18903              		.loc 1 1216 48 is_stmt 0 view .LVU6258
 18904 0abe 4883C501 		add	rbp, 1	# i,
 18905              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18906              		.loc 1 1218 41 view .LVU6259
 18907 0ac2 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18908              		.loc 1 1216 47 is_stmt 1 view .LVU6260
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18909              		.loc 1 1216 29 view .LVU6261
 18910 0ac5 4883C360 		add	rbx, 96	# ivtmp.759,
 18911              	.L1491:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18912              		.loc 1 1217 13 view .LVU6262
 18913 0ac9 4889EE   		mov	rsi, rbp	#, i
 18914 0acc 4C89E7   		mov	rdi, r12	#, tuning_result
 18915              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18916              		.loc 1 1216 48 is_stmt 0 view .LVU6263
 18917 0acf 4883C501 		add	rbp, 1	# i,
 18918              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccW4ZvF5.s 			page 501


 18919              		.loc 1 1217 13 view .LVU6264
 18920 0ad3 E8000000 		call	tune_benchmark	#
 18920      00
 18921              	.LVL1100:
1218:sieve_extend.c ****         }
 18922              		.loc 1 1218 13 is_stmt 1 view .LVU6265
 18923              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18924              		.loc 1 1218 41 is_stmt 0 view .LVU6266
 18925 0ad8 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18926              		.loc 1 1216 47 is_stmt 1 view .LVU6267
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18927              		.loc 1 1216 29 view .LVU6268
 18928 0adb 4883C360 		add	rbx, 96	# ivtmp.759,
 18929              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18930              		.loc 1 1216 9 is_stmt 0 view .LVU6269
 18931 0adf 4939EF   		cmp	r15, rbp	# tuning_results, i
 18932 0ae2 0F84E4FE 		je	.L1436	#,
 18932      FFFF
 18933              	.L1433:
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18934              		.loc 1 1217 13 is_stmt 1 view .LVU6270
 18935 0ae8 4889EE   		mov	rsi, rbp	#, i
 18936 0aeb 4C89E7   		mov	rdi, r12	#, tuning_result
 18937 0aee E8000000 		call	tune_benchmark	#
 18937      00
 18938              	.LVL1101:
1218:sieve_extend.c ****         }
 18939              		.loc 1 1218 13 view .LVU6271
 18940 0af3 488D7B60 		lea	rdi, 96[rbx]	# tmp492,
 18941              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18942              		.loc 1 1218 41 is_stmt 0 view .LVU6272
 18943 0af7 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18944              		.loc 1 1216 47 is_stmt 1 view .LVU6273
 18945 0afa 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp492
 18945      28
 18946              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18947              		.loc 1 1216 48 is_stmt 0 view .LVU6274
 18948 0aff 488D7501 		lea	rsi, 1[rbp]	# tmp491,
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18949              		.loc 1 1216 29 is_stmt 1 view .LVU6275
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18950              		.loc 1 1217 13 view .LVU6276
 18951 0b03 4C89E7   		mov	rdi, r12	#, tuning_result
 18952 0b06 E8000000 		call	tune_benchmark	#
 18952      00
 18953              	.LVL1102:
1218:sieve_extend.c ****         }
 18954              		.loc 1 1218 13 view .LVU6277
 18955              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18956              		.loc 1 1218 41 is_stmt 0 view .LVU6278
GAS LISTING /tmp/ccW4ZvF5.s 			page 502


 18957 0b0b 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# tmp492, %sfp
 18957      28
 18958 0b10 488D83C0 		lea	rax, 192[rbx]	# ivtmp.759,
 18958      000000
 18959              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18960              		.loc 1 1216 48 view .LVU6279
 18961 0b17 488D7502 		lea	rsi, 2[rbp]	# i,
 18962              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18963              		.loc 1 1217 13 view .LVU6280
 18964 0b1b 4C89E7   		mov	rdi, r12	#, tuning_result
 18965 0b1e 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.759
 18965      28
 18966              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18967              		.loc 1 1218 41 view .LVU6281
 18968 0b23 4D0129   		add	QWORD PTR [r9], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18969              		.loc 1 1216 47 is_stmt 1 view .LVU6282
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18970              		.loc 1 1216 29 view .LVU6283
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18971              		.loc 1 1217 13 view .LVU6284
 18972 0b26 E8000000 		call	tune_benchmark	#
 18972      00
 18973              	.LVL1103:
1218:sieve_extend.c ****         }
 18974              		.loc 1 1218 13 view .LVU6285
 18975              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18976              		.loc 1 1218 41 is_stmt 0 view .LVU6286
 18977 0b2b 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 18977      28
 18978 0b30 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.759,
 18978      010000
 18979 0b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.759
 18979      28
 18980              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18981              		.loc 1 1217 13 view .LVU6287
 18982 0b3c 4C89E7   		mov	rdi, r12	#, tuning_result
 18983              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18984              		.loc 1 1218 41 view .LVU6288
 18985 0b3f 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18986              		.loc 1 1216 47 is_stmt 1 view .LVU6289
 18987              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18988              		.loc 1 1216 48 is_stmt 0 view .LVU6290
 18989 0b42 488D7503 		lea	rsi, 3[rbp]	# i,
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18990              		.loc 1 1216 29 is_stmt 1 view .LVU6291
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18991              		.loc 1 1217 13 view .LVU6292
 18992 0b46 E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/ccW4ZvF5.s 			page 503


 18992      00
 18993              	.LVL1104:
1218:sieve_extend.c ****         }
 18994              		.loc 1 1218 13 view .LVU6293
 18995              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 18996              		.loc 1 1218 41 is_stmt 0 view .LVU6294
 18997 0b4b 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 18997      28
 18998 0b50 488D9380 		lea	rdx, 384[rbx]	# ivtmp.759,
 18998      010000
 18999              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19000              		.loc 1 1216 48 view .LVU6295
 19001 0b57 488D7504 		lea	rsi, 4[rbp]	# i,
 19002              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19003              		.loc 1 1217 13 view .LVU6296
 19004 0b5b 4C89E7   		mov	rdi, r12	#, tuning_result
 19005 0b5e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.759
 19005      28
 19006              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19007              		.loc 1 1218 41 view .LVU6297
 19008 0b63 4D012A   		add	QWORD PTR [r10], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19009              		.loc 1 1216 47 is_stmt 1 view .LVU6298
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19010              		.loc 1 1216 29 view .LVU6299
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19011              		.loc 1 1217 13 view .LVU6300
 19012 0b66 E8000000 		call	tune_benchmark	#
 19012      00
 19013              	.LVL1105:
1218:sieve_extend.c ****         }
 19014              		.loc 1 1218 13 view .LVU6301
 19015              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19016              		.loc 1 1218 41 is_stmt 0 view .LVU6302
 19017 0b6b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19017      28
 19018 0b70 4C8D9BE0 		lea	r11, 480[rbx]	# ivtmp.759,
 19018      010000
 19019              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19020              		.loc 1 1216 48 view .LVU6303
 19021 0b77 488D7505 		lea	rsi, 5[rbp]	# i,
 19022              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19023              		.loc 1 1217 13 view .LVU6304
 19024 0b7b 4C89E7   		mov	rdi, r12	#, tuning_result
 19025 0b7e 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.759
 19025      28
 19026              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19027              		.loc 1 1218 41 view .LVU6305
 19028 0b83 4C0129   		add	QWORD PTR [rcx], r13	# MEM[base: _159, offset: 0B], sample_max
GAS LISTING /tmp/ccW4ZvF5.s 			page 504


1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19029              		.loc 1 1216 47 is_stmt 1 view .LVU6306
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19030              		.loc 1 1216 29 view .LVU6307
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19031              		.loc 1 1217 13 view .LVU6308
 19032 0b86 E8000000 		call	tune_benchmark	#
 19032      00
 19033              	.LVL1106:
1218:sieve_extend.c ****         }
 19034              		.loc 1 1218 13 view .LVU6309
 19035              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19036              		.loc 1 1218 41 is_stmt 0 view .LVU6310
 19037 0b8b 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19037      28
 19038 0b90 4C8D8B40 		lea	r9, 576[rbx]	# ivtmp.759,
 19038      020000
 19039 0b97 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.759
 19039      28
 19040              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19041              		.loc 1 1216 48 view .LVU6311
 19042 0b9c 488D7506 		lea	rsi, 6[rbp]	# i,
 19043              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19044              		.loc 1 1218 41 view .LVU6312
 19045 0ba0 4C012F   		add	QWORD PTR [rdi], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19046              		.loc 1 1216 47 is_stmt 1 view .LVU6313
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19047              		.loc 1 1216 29 view .LVU6314
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19048              		.loc 1 1217 13 view .LVU6315
 19049 0ba3 4C89E7   		mov	rdi, r12	#, tuning_result
 19050 0ba6 E8000000 		call	tune_benchmark	#
 19050      00
 19051              	.LVL1107:
1218:sieve_extend.c ****         }
 19052              		.loc 1 1218 13 view .LVU6316
 19053              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19054              		.loc 1 1218 41 is_stmt 0 view .LVU6317
 19055 0bab 488B4424 		mov	rax, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19055      28
 19056              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19057              		.loc 1 1216 48 view .LVU6318
 19058 0bb0 488D7507 		lea	rsi, 7[rbp]	# i,
 19059 0bb4 4C8D83A0 		lea	r8, 672[rbx]	# ivtmp.759,
 19059      020000
 19060              	# sieve_extend.c:1217:             tune_benchmark(tuning_result, i);
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19061              		.loc 1 1217 13 view .LVU6319
 19062 0bbb 4C89E7   		mov	rdi, r12	#, tuning_result
 19063 0bbe 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.759
 19063      28
GAS LISTING /tmp/ccW4ZvF5.s 			page 505


 19064              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19065              		.loc 1 1216 48 view .LVU6320
 19066 0bc3 4883C508 		add	rbp, 8	# i,
 19067              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19068              		.loc 1 1218 41 view .LVU6321
 19069 0bc7 4C0128   		add	QWORD PTR [rax], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19070              		.loc 1 1216 47 is_stmt 1 view .LVU6322
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19071              		.loc 1 1216 29 view .LVU6323
1217:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19072              		.loc 1 1217 13 view .LVU6324
 19073 0bca 4881C300 		add	rbx, 768	# ivtmp.759,
 19073      030000
 19074 0bd1 E8000000 		call	tune_benchmark	#
 19074      00
 19075              	.LVL1108:
1218:sieve_extend.c ****         }
 19076              		.loc 1 1218 13 view .LVU6325
 19077              	# sieve_extend.c:1218:             tuning_result[i].sample_max += sample_max;
1218:sieve_extend.c ****         }
 19078              		.loc 1 1218 41 is_stmt 0 view .LVU6326
 19079 0bd6 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.759, %sfp
 19079      28
 19080 0bdb 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19081              		.loc 1 1216 47 is_stmt 1 view .LVU6327
 19082              	.LVL1109:
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19083              		.loc 1 1216 29 view .LVU6328
 19084              	# sieve_extend.c:1216:         for (counter_t i=0; i<tuning_results; i++) {
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19085              		.loc 1 1216 9 is_stmt 0 view .LVU6329
 19086 0bde 4939EF   		cmp	r15, rbp	# tuning_results, i
 19087 0be1 0F8501FF 		jne	.L1433	#,
 19087      FFFF
 19088 0be7 E9E0FDFF 		jmp	.L1436	#
 19088      FF
 19089              	.LVL1110:
 19090 0bec 0F1F4000 		.p2align 4,,7
 19091              		.p2align 3
 19092              	.L1531:
1216:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19093              		.loc 1 1216 9 view .LVU6330
 19094              	.LBE1189:
 19095              	.LBB1190:
 19096              	.LBB1172:
 19097              	.LBB1171:
 19098              	.LBB1170:
 19099              	.LBB1168:
 19100              	.LBB1166:
 19101              	.LBB1155:
 19102              	.LBB1156:
 19103              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19104              		.loc 3 107 10 view .LVU6331
GAS LISTING /tmp/ccW4ZvF5.s 			page 506


 19105 0bf0 488D3500 		lea	rsi, .LC52[rip]	#,
 19105      000000
 19106 0bf7 BF010000 		mov	edi, 1	#,
 19106      00
 19107 0bfc C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 19107      2438
 19108              	.LBE1156:
 19109              	.LBE1155:
1187:sieve_extend.c ****                         }
 19110              		.loc 1 1187 60 is_stmt 1 view .LVU6332
 19111              	.LVL1111:
 19112              	.LBB1158:
 19113              	.LBI1155:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19114              		.loc 3 105 1 view .LVU6333
 19115              	.LBB1157:
 19116              		.loc 3 107 3 view .LVU6334
 19117              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19118              		.loc 3 107 10 is_stmt 0 view .LVU6335
 19119 0c02 31C0     		xor	eax, eax	#
 19120 0c04 E8000000 		call	__printf_chk@PLT	#
 19120      00
 19121              	.LVL1112:
 19122              		.loc 3 107 10 view .LVU6336
 19123              	.LBE1157:
 19124              	.LBE1158:
1187:sieve_extend.c ****                         }
 19125              		.loc 1 1187 76 is_stmt 1 view .LVU6337
 19126              	.LBB1159:
 19127              	.LBI1159:
1103:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19128              		.loc 1 1103 20 view .LVU6338
 19129              	.LBB1160:
1104:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19130              		.loc 1 1104 5 view .LVU6339
 19131              	.LBB1161:
 19132              	.LBI1161:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19133              		.loc 3 105 1 view .LVU6340
 19134              	.LBB1162:
 19135              		.loc 3 107 3 view .LVU6341
 19136              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19137              		.loc 3 107 10 is_stmt 0 view .LVU6342
 19138 0c09 4D8B4538 		mov	r8, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 19139 0c0d BF010000 		mov	edi, 1	#,
 19139      00
 19140 0c12 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 19141 0c16 488D3500 		lea	rsi, .LC53[rip]	#,
 19141      000000
 19142 0c1d C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 19142      4550
 19143 0c23 B8030000 		mov	eax, 3	#,
 19143      00
 19144 0c28 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 19145 0c2c 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _520, offset: 56B]
 19145      18
 19146 0c31 4D8B5548 		mov	r10, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 507


 19147 0c35 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _520, offset: 72B]
 19147      10
 19148 0c3a 4D8B5D30 		mov	r11, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 19149 0c3e 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _520, offset: 48B]
 19149      08
 19150 0c43 4D8B4D28 		mov	r9, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 19151 0c47 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _520, offset: 40B]
 19152 0c4b 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 19153 0c4f 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 19154 0c53 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 19154      5558
 19155 0c59 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 19155      4D40
 19156 0c5f E8000000 		call	__printf_chk@PLT	#
 19156      00
 19157              	.LVL1113:
 19158              		.loc 3 107 10 view .LVU6343
 19159              	.LBE1162:
 19160              	.LBE1161:
 19161              	# sieve_extend.c:1109: }
1109:sieve_extend.c **** 
 19162              		.loc 1 1109 1 view .LVU6344
 19163 0c64 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 19163      28
 19164 0c69 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 19164      30
 19165 0c6e 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 19165      60
 19166              	.LBE1160:
 19167              	.LBE1159:
 19168              	# sieve_extend.c:1183:                             best_blocksize_bits = blocksize_bits;
1183:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 19169              		.loc 1 1183 49 view .LVU6345
 19170 0c73 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.778
 19170      48
 19171              	.LBB1164:
 19172              	.LBB1163:
 19173              	# sieve_extend.c:1109: }
1109:sieve_extend.c **** 
 19174              		.loc 1 1109 1 view .LVU6346
 19175 0c78 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, mediumstep_faster
 19175      58
 19176 0c7d 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, smallstep_faster
 19176      50
 19177 0c82 E90DFCFF 		jmp	.L1422	#
 19177      FF
 19178              	.LVL1114:
 19179              	.L1432:
1109:sieve_extend.c **** 
 19180              		.loc 1 1109 1 view .LVU6347
 19181              	.LBE1163:
 19182              	.LBE1164:
 19183              	.LBE1166:
 19184              	.LBE1168:
 19185              	.LBE1170:
 19186              	.LBE1171:
 19187              	.LBE1172:
GAS LISTING /tmp/ccW4ZvF5.s 			page 508


 19188              	.LBE1190:
1205:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 19189              		.loc 1 1205 13 is_stmt 1 view .LVU6348
1206:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19190              		.loc 1 1206 13 view .LVU6349
 19191              	.LBB1191:
 19192              	.LBI1191:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19193              		.loc 3 105 1 view .LVU6350
 19194              	.LBB1192:
 19195              		.loc 3 107 3 view .LVU6351
 19196              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19197              		.loc 3 107 10 is_stmt 0 view .LVU6352
 19198 0c87 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 19198      30
 19199 0c8c 488D3500 		lea	rsi, .LC57[rip]	#,
 19199      000000
 19200 0c93 BF010000 		mov	edi, 1	#,
 19200      00
 19201 0c98 31C0     		xor	eax, eax	#
 19202 0c9a E8000000 		call	__printf_chk@PLT	#
 19202      00
 19203              	.LVL1115:
 19204              		.loc 3 107 10 view .LVU6353
 19205              	.LBE1192:
 19206              	.LBE1191:
1206:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19207              		.loc 1 1206 47 is_stmt 1 view .LVU6354
 19208              	.LBB1193:
 19209              	.LBI1193:
1103:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19210              		.loc 1 1103 20 view .LVU6355
 19211              	.LBB1194:
1104:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19212              		.loc 1 1104 5 view .LVU6356
 19213              	.LBB1195:
 19214              	.LBI1195:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19215              		.loc 3 105 1 view .LVU6357
 19216              	.LBB1196:
 19217              		.loc 3 107 3 view .LVU6358
 19218              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19219              		.loc 3 107 10 is_stmt 0 view .LVU6359
 19220 0c9f 498B5C24 		mov	rbx, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struc
 19220      38
 19221 0ca4 488D3500 		lea	rsi, .LC53[rip]	#,
 19221      000000
 19222 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19222      442450
 19223 0cb2 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19223      10
 19224 0cb7 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19224      08
 19225 0cbc 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19225      18
 19226 0cc1 498B7C24 		mov	rdi, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19226      48
GAS LISTING /tmp/ccW4ZvF5.s 			page 509


 19227 0cc6 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19227      10
 19228 0ccb BF010000 		mov	edi, 1	#,
 19228      00
 19229 0cd0 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struct
 19229      30
 19230 0cd5 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19230      08
 19231 0cda 498B4424 		mov	rax, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struc
 19231      28
 19232 0cdf 48890424 		mov	QWORD PTR [rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 19233 0ce3 B8030000 		mov	eax, 3	#,
 19233      00
 19234 0ce8 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19234      20
 19235 0ced 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19235      18
 19236 0cf2 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19236      542458
 19237 0cf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 19237      4C2440
 19238 0d00 E8000000 		call	__printf_chk@PLT	#
 19238      00
 19239              	.LVL1116:
 19240              		.loc 3 107 10 view .LVU6360
 19241              	.LBE1196:
 19242              	.LBE1195:
 19243              	.LBE1194:
 19244              	.LBE1193:
1207:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19245              		.loc 1 1207 13 is_stmt 1 view .LVU6361
 19246              	# sieve_extend.c:1207:             if (option_verboselevel >= 3) {
1207:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19247              		.loc 1 1207 16 is_stmt 0 view .LVU6362
 19248 0d05 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 19248      02
 19249 0d0a 0F84EEFC 		je	.L1434	#,
 19249      FFFF
 19250 0d10 498D5C24 		lea	rbx, 8[r12]	# ivtmp.765,
 19250      08
 19251              	.LBB1197:
 19252              	# sieve_extend.c:1208:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19253              		.loc 1 1208 32 view .LVU6363
 19254 0d15 31ED     		xor	ebp, ebp	# tuning_result_index
 19255              	.L1435:
 19256              	.LVL1117:
1209:sieve_extend.c ****                 }
 19257              		.loc 1 1209 21 is_stmt 1 view .LVU6364
 19258              	.LBB1181:
 19259              	.LBI1181:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19260              		.loc 3 105 1 view .LVU6365
 19261              	.LBB1182:
 19262              		.loc 3 107 3 view .LVU6366
 19263              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19264              		.loc 3 107 10 is_stmt 0 view .LVU6367
GAS LISTING /tmp/ccW4ZvF5.s 			page 510


 19265 0d17 488D3500 		lea	rsi, .LC58[rip]	#,
 19265      000000
 19266 0d1e BF010000 		mov	edi, 1	#,
 19266      00
 19267 0d23 31C0     		xor	eax, eax	#
 19268              	.LBE1182:
 19269              	.LBE1181:
 19270              	# sieve_extend.c:1208:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19271              		.loc 1 1208 118 view .LVU6368
 19272 0d25 4883C501 		add	rbp, 1	# tuning_result_index,
 19273              	.LVL1118:
 19274              	.LBB1184:
 19275              	.LBB1183:
 19276              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19277              		.loc 3 107 10 view .LVU6369
 19278 0d29 E8000000 		call	__printf_chk@PLT	#
 19278      00
 19279              	.LVL1119:
 19280              		.loc 3 107 10 view .LVU6370
 19281              	.LBE1183:
 19282              	.LBE1184:
1209:sieve_extend.c ****                 }
 19283              		.loc 1 1209 36 is_stmt 1 view .LVU6371
 19284              	.LBB1185:
 19285              	.LBI1185:
1103:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19286              		.loc 1 1103 20 view .LVU6372
 19287              	.LBB1186:
1104:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19288              		.loc 1 1104 5 view .LVU6373
 19289              	.LBB1187:
 19290              	.LBI1187:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19291              		.loc 3 105 1 view .LVU6374
 19292              	.LBB1188:
 19293              		.loc 3 107 3 view .LVU6375
 19294              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19295              		.loc 3 107 10 is_stmt 0 view .LVU6376
 19296 0d2e 488B7330 		mov	rsi, QWORD PTR 48[rbx]	# MEM[base: _224, offset: 48B], MEM[base: _224, offset: 48B]
 19297 0d32 BF010000 		mov	edi, 1	#,
 19297      00
 19298 0d37 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _224, offset: 8B], MEM[base: _224, offset: 8B]
 19299 0d3b B8030000 		mov	eax, 3	#,
 19299      00
 19300 0d40 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _224, offset: 72B], MEM[base: _224, offset: 72B]
 19300      48
 19301 0d45 4883C360 		add	rbx, 96	# ivtmp.765,
 19302 0d49 48897424 		mov	QWORD PTR 24[rsp], rsi	#, MEM[base: _224, offset: 48B]
 19302      18
 19303 0d4e 488D3500 		lea	rsi, .LC53[rip]	#,
 19303      000000
 19304 0d55 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _224, offset: 64B], MEM[base: _224, offset: 64B]
 19305 0d59 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _224, offset: 64B]
 19305      10
 19306 0d5e 4C8B53C8 		mov	r10, QWORD PTR -56[rbx]	# MEM[base: _224, offset: 40B], MEM[base: _224, offset: 40B]
 19307 0d62 4C895424 		mov	QWORD PTR 8[rsp], r10	#, MEM[base: _224, offset: 40B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 511


 19307      08
 19308 0d67 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _224, offset: 32B], MEM[base: _224, offset: 32B]
 19309 0d6b 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _224, offset: 32B]
 19310 0d6f 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _224, offset: 24B]
 19311 0d73 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _224, offset: 16B]
 19312 0d77 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _224, offset: 0B]
 19313 0d7b C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _224, offset: 80B]
 19313      F0
 19314 0d80 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _224, offset: 56B]
 19314      D8
 19315 0d85 E8000000 		call	__printf_chk@PLT	#
 19315      00
 19316              	.LVL1120:
 19317              		.loc 3 107 10 view .LVU6377
 19318              	.LBE1188:
 19319              	.LBE1187:
 19320              	.LBE1186:
 19321              	.LBE1185:
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19322              		.loc 1 1208 99 is_stmt 1 view .LVU6378
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19323              		.loc 1 1208 55 view .LVU6379
 19324              	# sieve_extend.c:1208:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19325              		.loc 1 1208 75 is_stmt 0 view .LVU6380
 19326 0d8a 4983FF0A 		cmp	r15, 10	# tuning_results,
 19327 0d8e 4C89F1   		mov	rcx, r14	# tmp424, tmp476
 19328 0d91 490F46CF 		cmovbe	rcx, r15	# tuning_results,, tmp424
 19329              	# sieve_extend.c:1208:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19330              		.loc 1 1208 17 view .LVU6381
 19331 0d95 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp424
 19332 0d98 0F8279FF 		jb	.L1435	#,
 19332      FFFF
 19333 0d9e E95BFCFF 		jmp	.L1434	#
 19333      FF
 19334              	.LVL1121:
 19335              	.L1526:
1208:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19336              		.loc 1 1208 17 view .LVU6382
 19337              	.LBE1197:
 19338              	.LBE1142:
 19339              	.LBE1141:
 19340              	.LBE1140:
1504:sieve_extend.c ****     }
 19341              		.loc 1 1504 39 is_stmt 1 view .LVU6383
 19342              	.LBB1216:
 19343              	.LBI1216:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19344              		.loc 3 105 1 view .LVU6384
 19345              	.LBB1217:
 19346              		.loc 3 107 3 view .LVU6385
 19347              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19348              		.loc 3 107 10 is_stmt 0 view .LVU6386
 19349 0da3 488D3D00 		lea	rdi, .LC50[rip]	#,
 19349      000000
 19350              	.LBE1217:
GAS LISTING /tmp/ccW4ZvF5.s 			page 512


 19351              	.LBE1216:
 19352              	# sieve_extend.c:1507:     counter_t best_blocksize_bits = default_blocksize;
1507:sieve_extend.c ****     if (option_tunelevel) {
 19353              		.loc 1 1507 15 view .LVU6387
 19354 0daa 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
 19354      0300
 19355              	.LBB1219:
 19356              	.LBB1218:
 19357              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19358              		.loc 3 107 10 view .LVU6388
 19359 0db0 E8000000 		call	puts@PLT	#
 19359      00
 19360              	.LVL1122:
 19361              		.loc 3 107 10 view .LVU6389
 19362              	.LBE1218:
 19363              	.LBE1219:
1507:sieve_extend.c ****     if (option_tunelevel) {
 19364              		.loc 1 1507 5 is_stmt 1 view .LVU6390
1508:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19365              		.loc 1 1508 5 view .LVU6391
 19366              	# sieve_extend.c:1508:     if (option_tunelevel) {
1508:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19367              		.loc 1 1508 9 is_stmt 0 view .LVU6392
 19368 0db5 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_63, option_tunelevel
 19368      AC000000 
 19369              	# sieve_extend.c:1508:     if (option_tunelevel) {
1508:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19370              		.loc 1 1508 8 view .LVU6393
 19371 0dbd 4585C0   		test	r8d, r8d	# option_tunelevel.41_63
 19372 0dc0 0F858701 		jne	.L1533	#,
 19372      0000
 19373              	.LVL1123:
 19374              	.L1413:
 19375              	.LBB1220:
1518:sieve_extend.c ****         counter_t passes = 0;
 19376              		.loc 1 1518 9 is_stmt 1 view .LVU6394
 19377              	# sieve_extend.c:1518:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1518:sieve_extend.c ****         counter_t passes = 0;
 19378              		.loc 1 1518 12 is_stmt 0 view .LVU6395
 19379 0dc6 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19379      00000000 
 19380 0dce 0F8E1AF6 		jle	.L1440	#,
 19380      FFFF
1518:sieve_extend.c ****         counter_t passes = 0;
 19381              		.loc 1 1518 39 is_stmt 1 discriminator 1 view .LVU6396
 19382              	.LVL1124:
 19383              	.LBB1124:
 19384              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19385              		.loc 3 105 1 discriminator 1 view .LVU6397
 19386              	.LBB1125:
 19387              		.loc 3 107 3 discriminator 1 view .LVU6398
 19388              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19389              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6399
 19390 0dd4 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 19390      000000
 19391 0ddb 4C89E2   		mov	rdx, r12	#, best_result$blocksize_bits
GAS LISTING /tmp/ccW4ZvF5.s 			page 513


 19392 0dde 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 19392      000000
 19393 0de5 488D3500 		lea	rsi, .LC60[rip]	#,
 19393      000000
 19394 0dec 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 19394      000000
 19395 0df3 BF010000 		mov	edi, 1	#,
 19395      00
 19396 0df8 31C0     		xor	eax, eax	#
 19397 0dfa E8000000 		call	__printf_chk@PLT	#
 19397      00
 19398              	.LVL1125:
 19399 0dff E9EAF5FF 		jmp	.L1440	#
 19399      FF
 19400              	.LVL1126:
 19401              	.L1532:
 19402              		.loc 3 107 10 discriminator 1 view .LVU6400
 19403              	.LBE1125:
 19404              	.LBE1124:
 19405              	.LBE1220:
 19406              	.LBB1221:
 19407              	.LBB1213:
 19408              	.LBB1210:
1222:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19409              		.loc 1 1222 5 is_stmt 1 view .LVU6401
 19410              	# sieve_extend.c:1222:     tuning_result_type best_result = tuning_result[0];
1222:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19411              		.loc 1 1222 24 is_stmt 0 view .LVU6402
 19412 0e04 4C8B7C24 		mov	r15, QWORD PTR 64[rsp]	# tuning_result, %sfp
 19412      40
 19413              	.LVL1127:
 19414              	# sieve_extend.c:1223:     if (option_verboselevel >= 1) {
1223:sieve_extend.c ****         tuning_result_index = 0;
 19415              		.loc 1 1223 8 view .LVU6403
 19416 0e09 837C2468 		cmp	DWORD PTR 104[rsp], 0	# %sfp,
 19416      00
 19417              	# sieve_extend.c:1222:     tuning_result_type best_result = tuning_result[0];
1222:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19418              		.loc 1 1222 24 view .LVU6404
 19419 0e0e 4D8B6708 		mov	r12, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 19420              	.LVL1128:
1222:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19421              		.loc 1 1222 24 view .LVU6405
 19422 0e12 4D8B7720 		mov	r14, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 19423 0e16 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 19424 0e1a 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1223:sieve_extend.c ****         tuning_result_index = 0;
 19425              		.loc 1 1223 5 is_stmt 1 view .LVU6406
 19426              	# sieve_extend.c:1223:     if (option_verboselevel >= 1) {
1223:sieve_extend.c ****         tuning_result_index = 0;
 19427              		.loc 1 1223 8 is_stmt 0 view .LVU6407
 19428 0e1e 7E6E     		jle	.L1438	#,
1224:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 19429              		.loc 1 1224 9 is_stmt 1 view .LVU6408
 19430              	.LVL1129:
1225:sieve_extend.c ****     }
 19431              		.loc 1 1225 9 view .LVU6409
GAS LISTING /tmp/ccW4ZvF5.s 			page 514


 19432              	.LBB1198:
 19433              	.LBI1198:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19434              		.loc 3 105 1 view .LVU6410
 19435              	.LBB1199:
 19436              		.loc 3 107 3 view .LVU6411
 19437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19438              		.loc 3 107 10 is_stmt 0 view .LVU6412
 19439 0e20 488D3500 		lea	rsi, .LC59[rip]	#,
 19439      000000
 19440 0e27 BF010000 		mov	edi, 1	#,
 19440      00
 19441 0e2c 31C0     		xor	eax, eax	#
 19442 0e2e E8000000 		call	__printf_chk@PLT	#
 19442      00
 19443              	.LVL1130:
 19444              		.loc 3 107 10 view .LVU6413
 19445              	.LBE1199:
 19446              	.LBE1198:
1225:sieve_extend.c ****     }
 19447              		.loc 1 1225 34 is_stmt 1 view .LVU6414
 19448              	.LBB1200:
 19449              	.LBI1200:
1103:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19450              		.loc 1 1103 20 view .LVU6415
 19451              	.LBB1201:
1104:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19452              		.loc 1 1104 5 view .LVU6416
 19453              	.LBB1202:
 19454              	.LBI1202:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19455              		.loc 3 105 1 view .LVU6417
 19456              	.LBB1203:
 19457              		.loc 3 107 3 view .LVU6418
 19458              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19459              		.loc 3 107 10 is_stmt 0 view .LVU6419
 19460 0e33 4D8B4F38 		mov	r9, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struct
 19461 0e37 BF010000 		mov	edi, 1	#,
 19461      00
 19462 0e3c C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19462      4750
 19463 0e42 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19464 0e46 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19465 0e4a 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19465      18
 19466 0e4f 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19467 0e53 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19467      10
 19468 0e58 B8030000 		mov	eax, 3	#,
 19468      00
 19469 0e5d 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struc
 19470 0e61 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19470      08
 19471 0e66 488D3500 		lea	rsi, .LC53[rip]	#,
 19471      000000
 19472 0e6d 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struct
 19473 0e71 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
GAS LISTING /tmp/ccW4ZvF5.s 			page 515


 19474 0e75 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19475 0e79 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19476 0e7d C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19476      5758
 19477 0e83 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 19477      4F40
 19478 0e89 E8000000 		call	__printf_chk@PLT	#
 19478      00
 19479              	.LVL1131:
 19480              	.L1438:
 19481              		.loc 3 107 10 view .LVU6420
 19482              	.LBE1203:
 19483              	.LBE1202:
 19484              	.LBE1201:
 19485              	.LBE1200:
1228:sieve_extend.c ****     return best_result;
 19486              		.loc 1 1228 5 is_stmt 1 view .LVU6421
 19487 0e8e 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 19487      40
 19488 0e93 E8000000 		call	free@PLT	#
 19488      00
 19489              	.LVL1132:
1229:sieve_extend.c **** }
 19490              		.loc 1 1229 5 view .LVU6422
1229:sieve_extend.c **** }
 19491              		.loc 1 1229 5 is_stmt 0 view .LVU6423
 19492              	.LBE1210:
 19493              	.LBE1213:
1510:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19494              		.loc 1 1510 9 is_stmt 1 view .LVU6424
 19495              	# sieve_extend.c:1510:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1510:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19496              		.loc 1 1510 33 is_stmt 0 view .LVU6425
 19497 0e98 4C893500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r14	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 19497      000000
1511:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19498              		.loc 1 1511 9 is_stmt 1 view .LVU6426
 19499              	.LBE1221:
 19500              	# sieve_extend.c:1517:     if (best_blocksize_bits > 0) {
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19501              		.loc 1 1517 8 is_stmt 0 view .LVU6427
 19502 0e9f 4D85E4   		test	r12, r12	# best_result$blocksize_bits
 19503              	.LBB1222:
 19504              	# sieve_extend.c:1511:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1511:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19505              		.loc 1 1511 34 view .LVU6428
 19506 0ea2 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 19506      000000
1512:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19507              		.loc 1 1512 9 is_stmt 1 view .LVU6429
 19508              	# sieve_extend.c:1512:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1512:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19509              		.loc 1 1512 34 is_stmt 0 view .LVU6430
 19510 0ea9 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 19510      000000
1513:sieve_extend.c ****     }
 19511              		.loc 1 1513 9 is_stmt 1 view .LVU6431
GAS LISTING /tmp/ccW4ZvF5.s 			page 516


 19512              	.LVL1133:
1513:sieve_extend.c ****     }
 19513              		.loc 1 1513 9 is_stmt 0 view .LVU6432
 19514              	.LBE1222:
1516:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 19515              		.loc 1 1516 5 is_stmt 1 view .LVU6433
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19516              		.loc 1 1517 5 view .LVU6434
 19517              	# sieve_extend.c:1517:     if (best_blocksize_bits > 0) {
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19518              		.loc 1 1517 8 is_stmt 0 view .LVU6435
 19519 0eb0 0F848CF6 		je	.L1439	#,
 19519      FFFF
 19520 0eb6 E90BFFFF 		jmp	.L1413	#
 19520      FF
 19521              	.LVL1134:
 19522              	.L1448:
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19523              		.loc 1 1517 8 view .LVU6436
 19524 0ebb 488D3D00 		lea	rdi, CSWTCH.120[rip]	# tmp339,
 19524      000000
 19525 0ec2 4C8D0D00 		lea	r9, CSWTCH.121[rip]	# tmp341,
 19525      000000
 19526 0ec9 488D2D00 		lea	rbp, CSWTCH.122[rip]	# tmp343,
 19526      000000
 19527              	.LVL1135:
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19528              		.loc 1 1517 8 view .LVU6437
 19529 0ed0 488D1D00 		lea	rbx, CSWTCH.123[rip]	# tmp345,
 19529      000000
 19530              	.LVL1136:
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19531              		.loc 1 1517 8 view .LVU6438
 19532 0ed7 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.120
 19533 0edb 4F8B34C1 		mov	r14, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.121
 19534 0edf 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.122
 19534      00
 19535              	.LVL1137:
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19536              		.loc 1 1517 8 view .LVU6439
 19537 0ee4 C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.123
 19537      3CC3
 19538 0eea 48898C24 		mov	QWORD PTR 152[rsp], rcx	# %sfp, smallstep_faster_steps
 19538      98000000 
 19539 0ef2 4C89B424 		mov	QWORD PTR 144[rsp], r14	# %sfp, vectorstep_faster_steps
 19539      90000000 
 19540 0efa 4C897C24 		mov	QWORD PTR 112[rsp], r15	# %sfp, freebits_steps
 19540      70
 19541              	.LBB1223:
 19542              	# sieve_extend.c:1435:     for (int arg=1; arg < argc; arg++) {
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19543              		.loc 1 1435 14 view .LVU6440
 19544 0eff 48C74424 		mov	QWORD PTR 120[rsp], 8	# %sfp,
 19544      78080000 
 19544      00
 19545 0f08 C5FB11BC 		vmovsd	QWORD PTR 128[rsp], xmm7	# %sfp, sample_duration
 19545      24800000 
GAS LISTING /tmp/ccW4ZvF5.s 			page 517


 19545      00
 19546              	.L1414:
 19547              	.LVL1138:
1435:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19548              		.loc 1 1435 14 view .LVU6441
 19549              	.LBE1223:
 19550              	.LBB1224:
 19551              	.LBB1214:
 19552              	.LBB1211:
1154:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19553              		.loc 1 1154 5 is_stmt 1 view .LVU6442
 19554              	# sieve_extend.c:1154:     if (option_verboselevel >= 1) printf("Tuning..."); 
1154:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19555              		.loc 1 1154 8 is_stmt 0 view .LVU6443
 19556 0f11 448B6C24 		mov	r13d, DWORD PTR 104[rsp]	# option_verboselevel.42_64, %sfp
 19556      68
 19557              	.LVL1139:
1154:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19558              		.loc 1 1154 8 view .LVU6444
 19559 0f16 4585ED   		test	r13d, r13d	# option_verboselevel.42_64
 19560 0f19 0F8EEDF7 		jle	.L1416	#,
 19560      FFFF
1154:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19561              		.loc 1 1154 35 is_stmt 1 view .LVU6445
 19562              	.LVL1140:
 19563              	.LBB1204:
 19564              	.LBI1204:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19565              		.loc 3 105 1 view .LVU6446
 19566              	.LBB1205:
 19567              		.loc 3 107 3 view .LVU6447
 19568              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19569              		.loc 3 107 10 is_stmt 0 view .LVU6448
 19570 0f1f 31C0     		xor	eax, eax	#
 19571 0f21 488D3500 		lea	rsi, .LC51[rip]	#,
 19571      000000
 19572 0f28 BF010000 		mov	edi, 1	#,
 19572      00
 19573              	.LBE1205:
 19574              	.LBE1204:
 19575              	# sieve_extend.c:1155:     if (option_verboselevel >= 2) printf("\n");
1155:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19576              		.loc 1 1155 8 view .LVU6449
 19577 0f2d 4489EB   		mov	ebx, r13d	# option_verboselevel.42_64, option_verboselevel.42_64
 19578              	.LBB1207:
 19579              	.LBB1206:
 19580              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19581              		.loc 3 107 10 view .LVU6450
 19582 0f30 E8000000 		call	__printf_chk@PLT	#
 19582      00
 19583              	.LVL1141:
 19584              		.loc 3 107 10 view .LVU6451
 19585              	.LBE1206:
 19586              	.LBE1207:
1155:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19587              		.loc 1 1155 5 is_stmt 1 view .LVU6452
 19588              	# sieve_extend.c:1155:     if (option_verboselevel >= 2) printf("\n");
GAS LISTING /tmp/ccW4ZvF5.s 			page 518


1155:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19589              		.loc 1 1155 8 is_stmt 0 view .LVU6453
 19590 0f35 83EB01   		sub	ebx, 1	# option_verboselevel.42_64,
 19591 0f38 0F84CEF7 		je	.L1416	#,
 19591      FFFF
1155:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19592              		.loc 1 1155 35 is_stmt 1 view .LVU6454
 19593              	.LVL1142:
 19594              	.LBB1208:
 19595              	.LBI1208:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19596              		.loc 3 105 1 view .LVU6455
 19597              	.LBB1209:
 19598              		.loc 3 107 3 view .LVU6456
 19599              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19600              		.loc 3 107 10 is_stmt 0 view .LVU6457
 19601 0f3e BF0A0000 		mov	edi, 10	#,
 19601      00
 19602 0f43 E8000000 		call	putchar@PLT	#
 19602      00
 19603              	.LVL1143:
 19604 0f48 E9BFF7FF 		jmp	.L1416	#
 19604      FF
 19605              	.LVL1144:
 19606              	.L1533:
 19607              		.loc 3 107 10 view .LVU6458
 19608              	.LBE1209:
 19609              	.LBE1208:
 19610              	.LBE1211:
 19611              	.LBE1214:
1509:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19612              		.loc 1 1509 9 is_stmt 1 view .LVU6459
 19613              	# sieve_extend.c:1509:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1509:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19614              		.loc 1 1509 44 is_stmt 0 view .LVU6460
 19615 0f4d 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 19615      000000
 19616 0f54 4183E801 		sub	r8d, 1	#,
 19617 0f58 488BB424 		mov	rsi, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 19617      B0000000 
 19618 0f60 4183F802 		cmp	r8d, 2	# _215,
 19619 0f64 89542468 		mov	DWORD PTR 104[rsp], edx	# %sfp, option_verboselevel.42_64
 19620 0f68 4889B424 		mov	QWORD PTR 136[rsp], rsi	# %sfp, option_maxFactor.43_65
 19620      88000000 
 19621              	.LVL1145:
 19622              	.LBB1215:
1111:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19623              		.loc 1 1111 27 is_stmt 1 view .LVU6461
 19624              	.LBB1212:
1112:sieve_extend.c **** 
 19625              		.loc 1 1112 5 view .LVU6462
1114:sieve_extend.c ****     best_blocksize_bits = 0;
 19626              		.loc 1 1114 5 view .LVU6463
1115:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19627              		.loc 1 1115 5 view .LVU6464
1116:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19628              		.loc 1 1116 5 view .LVU6465
GAS LISTING /tmp/ccW4ZvF5.s 			page 519


1117:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19629              		.loc 1 1117 5 view .LVU6466
1118:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19630              		.loc 1 1118 5 view .LVU6467
1119:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19631              		.loc 1 1119 5 view .LVU6468
1120:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 19632              		.loc 1 1120 5 view .LVU6469
1121:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19633              		.loc 1 1121 5 view .LVU6470
1122:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19634              		.loc 1 1122 5 view .LVU6471
1123:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19635              		.loc 1 1123 5 view .LVU6472
1124:sieve_extend.c **** 
 19636              		.loc 1 1124 5 view .LVU6473
1127:sieve_extend.c ****         case 1:
 19637              		.loc 1 1127 5 view .LVU6474
 19638 0f70 0F8645FF 		jbe	.L1448	#,
 19638      FFFF
 19639 0f76 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC28[rip]	# sample_duration,
 19639      00000000 
 19640 0f7e 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 19640      78050000 
 19640      00
 19641 0f87 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 19641      70800000 
 19641      00
 19642 0f90 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 19642      90000000 
 19642      20000000 
 19643 0f9c 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 19643      98000000 
 19643      04000000 
 19644 0fa8 C5FB1184 		vmovsd	QWORD PTR 128[rsp], xmm0	# %sfp, sample_duration
 19644      24800000 
 19644      00
 19645 0fb1 E95BFFFF 		jmp	.L1414	#
 19645      FF
 19646              	.LVL1146:
 19647              	.L1519:
1127:sieve_extend.c ****         case 1:
 19648              		.loc 1 1127 5 is_stmt 0 view .LVU6475
 19649              	.LBE1212:
 19650              	.LBE1215:
 19651              	.LBE1224:
 19652              	.LBB1225:
1438:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19653              		.loc 1 1438 34 is_stmt 1 discriminator 1 view .LVU6476
 19654              	.LBB1061:
 19655              	.LBI1061:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19656              		.loc 3 98 1 discriminator 1 view .LVU6477
 19657              	.LBB1062:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19658              		.loc 3 100 3 discriminator 1 view .LVU6478
 19659              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccW4ZvF5.s 			page 520


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19660              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6479
 19661 0fb6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19661      000000
 19662 0fbd BA1B0000 		mov	edx, 27	#,
 19662      00
 19663 0fc2 BE010000 		mov	esi, 1	#,
 19663      00
 19664 0fc7 488D3D00 		lea	rdi, .LC32[rip]	#,
 19664      000000
 19665 0fce E8000000 		call	fwrite@PLT	#
 19665      00
 19666              	.LVL1147:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19667              		.loc 3 100 10 discriminator 1 view .LVU6480
 19668              	.LBE1062:
 19669              	.LBE1061:
1438:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19670              		.loc 1 1438 83 is_stmt 1 discriminator 1 view .LVU6481
 19671 0fd3 E903F6FF 		jmp	.L1517	#
 19671      FF
 19672              	.L1396:
1448:sieve_extend.c ****             }
 19673              		.loc 1 1448 17 view .LVU6482
 19674              	.LVL1148:
 19675              	.LBB1063:
 19676              	.LBI1058:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19677              		.loc 3 98 1 view .LVU6483
 19678              	.LBB1060:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19679              		.loc 3 100 3 view .LVU6484
 19680              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19681              		.loc 3 100 10 is_stmt 0 view .LVU6485
 19682 0fd8 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 19683 0fdb 488D1500 		lea	rdx, .LC38[rip]	#,
 19683      000000
 19684 0fe2 E9E1F5FF 		jmp	.L1516	#
 19684      FF
 19685              	.LVL1149:
 19686              	.L1400:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19687              		.loc 3 100 10 view .LVU6486
 19688              	.LBE1060:
 19689              	.LBE1063:
1455:sieve_extend.c ****             }
 19690              		.loc 1 1455 17 is_stmt 1 view .LVU6487
 19691              	.LBB1064:
 19692              	.LBI1064:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19693              		.loc 3 98 1 view .LVU6488
 19694              	.LBB1065:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19695              		.loc 3 100 3 view .LVU6489
 19696              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccW4ZvF5.s 			page 521


 19697              		.loc 3 100 10 is_stmt 0 view .LVU6490
 19698 0fe7 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 19699 0fea 488D1500 		lea	rdx, .LC43[rip]	#,
 19699      000000
 19700 0ff1 E9D2F5FF 		jmp	.L1516	#
 19700      FF
 19701              	.LVL1150:
 19702              	.L1522:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19703              		.loc 3 100 10 view .LVU6491
 19704              	.LBE1065:
 19705              	.LBE1064:
1446:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19706              		.loc 1 1446 34 is_stmt 1 discriminator 1 view .LVU6492
 19707              	.LBB1066:
 19708              	.LBI1066:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19709              		.loc 3 98 1 discriminator 1 view .LVU6493
 19710              	.LBB1067:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19711              		.loc 3 100 3 discriminator 1 view .LVU6494
 19712              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19713              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6495
 19714 0ff6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19714      000000
 19715 0ffd 488D3D00 		lea	rdi, .LC37[rip]	#,
 19715      000000
 19716 1004 BA180000 		mov	edx, 24	#,
 19716      00
 19717 1009 BE010000 		mov	esi, 1	#,
 19717      00
 19718 100e E8000000 		call	fwrite@PLT	#
 19718      00
 19719              	.LVL1151:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19720              		.loc 3 100 10 discriminator 1 view .LVU6496
 19721              	.LBE1067:
 19722              	.LBE1066:
1446:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19723              		.loc 1 1446 80 is_stmt 1 discriminator 1 view .LVU6497
 19724 1013 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19725 1017 E8000000 		call	usage	#
 19725      00
 19726              	.LVL1152:
 19727              	.L1530:
1446:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19728              		.loc 1 1446 80 is_stmt 0 discriminator 1 view .LVU6498
 19729              	.LBE1225:
 19730              	# sieve_extend.c:1542: }
 19731              		.loc 1 1542 1 view .LVU6499
 19732 101c E8000000 		call	__stack_chk_fail@PLT	#
 19732      00
 19733              	.LVL1153:
 19734              	.L1525:
 19735              	.LBB1226:
1453:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
GAS LISTING /tmp/ccW4ZvF5.s 			page 522


 19736              		.loc 1 1453 34 is_stmt 1 discriminator 1 view .LVU6500
 19737              	.LBB1068:
 19738              	.LBI1068:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19739              		.loc 3 98 1 discriminator 1 view .LVU6501
 19740              	.LBB1069:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19741              		.loc 3 100 3 discriminator 1 view .LVU6502
 19742              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19743              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6503
 19744 1021 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19744      000000
 19745 1028 488D3D00 		lea	rdi, .LC41[rip]	#,
 19745      000000
 19746 102f BA1A0000 		mov	edx, 26	#,
 19746      00
 19747 1034 BE010000 		mov	esi, 1	#,
 19747      00
 19748 1039 E8000000 		call	fwrite@PLT	#
 19748      00
 19749              	.LVL1154:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19750              		.loc 3 100 10 discriminator 1 view .LVU6504
 19751              	.LBE1069:
 19752              	.LBE1068:
1453:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19753              		.loc 1 1453 82 is_stmt 1 discriminator 1 view .LVU6505
 19754 103e 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19755 1042 E8000000 		call	usage	#
 19755      00
 19756              	.LVL1155:
 19757              	.LBE1226:
 19758              		.cfi_endproc
 19759              	.LFE99:
 19761              		.section	.rodata
 19762              		.align 16
 19765              	CSWTCH.123:
 19766 0000 9A999999 		.long	2576980378
 19767 0004 9999B93F 		.long	1069128089
 19768 0008 9A999999 		.long	2576980378
 19769 000c 9999C93F 		.long	1070176665
 19770 0010 9A999999 		.long	2576980378
 19771 0014 9999C93F 		.long	1070176665
 19772 0018 00000000 		.align 16
 19772      00000000 
 19775              	CSWTCH.122:
 19776 0020 00080000 		.quad	2048
 19776      00000000 
 19777 0028 00040000 		.quad	1024
 19777      00000000 
 19778 0030 40000000 		.quad	64
 19778      00000000 
 19779 0038 00000000 		.align 16
 19779      00000000 
 19782              	CSWTCH.121:
 19783 0040 20000000 		.quad	32
GAS LISTING /tmp/ccW4ZvF5.s 			page 523


 19783      00000000 
 19784 0048 10000000 		.quad	16
 19784      00000000 
 19785 0050 04000000 		.quad	4
 19785      00000000 
 19786 0058 00000000 		.align 16
 19786      00000000 
 19789              	CSWTCH.120:
 19790 0060 10000000 		.quad	16
 19790      00000000 
 19791 0068 08000000 		.quad	8
 19791      00000000 
 19792 0070 04000000 		.quad	4
 19792      00000000 
 19793              		.globl	debug_hitpoint
 19794              		.bss
 19795              		.align 32
 19798              	debug_hitpoint:
 19799 0000 00000000 		.zero	40
 19799      00000000 
 19799      00000000 
 19799      00000000 
 19799      00000000 
 19800              		.globl	global_VECTORSTEP_FASTER
 19801              		.data
 19802              		.align 8
 19805              	global_VECTORSTEP_FASTER:
 19806 0000 80000000 		.quad	128
 19806      00000000 
 19807              		.globl	global_MEDIUMSTEP_FASTER
 19808              		.bss
 19809              		.align 8
 19812              	global_MEDIUMSTEP_FASTER:
 19813 0028 00000000 		.zero	8
 19813      00000000 
 19814              		.globl	global_SMALLSTEP_FASTER
 19815              		.align 8
 19818              	global_SMALLSTEP_FASTER:
 19819 0030 00000000 		.zero	8
 19819      00000000 
 19820              		.section	.rodata.cst32,"aM",@progbits,32
 19821              		.align 32
 19822              	.LC0:
 19823 0000 00000000 		.quad	0
 19823      00000000 
 19824 0008 01000000 		.quad	1
 19824      00000000 
 19825 0010 02000000 		.quad	2
 19825      00000000 
 19826 0018 03000000 		.quad	3
 19826      00000000 
 19827              		.align 32
 19828              	.LC1:
 19829 0020 08000000 		.quad	8
 19829      00000000 
 19830 0028 08000000 		.quad	8
 19830      00000000 
GAS LISTING /tmp/ccW4ZvF5.s 			page 524


 19831 0030 08000000 		.quad	8
 19831      00000000 
 19832 0038 08000000 		.quad	8
 19832      00000000 
 19833              		.align 32
 19834              	.LC2:
 19835 0040 04000000 		.quad	4
 19835      00000000 
 19836 0048 04000000 		.quad	4
 19836      00000000 
 19837 0050 04000000 		.quad	4
 19837      00000000 
 19838 0058 04000000 		.quad	4
 19838      00000000 
 19839              		.align 32
 19840              	.LC3:
 19841 0060 3F000000 		.long	63
 19842 0064 3F000000 		.long	63
 19843 0068 3F000000 		.long	63
 19844 006c 3F000000 		.long	63
 19845 0070 3F000000 		.long	63
 19846 0074 3F000000 		.long	63
 19847 0078 3F000000 		.long	63
 19848 007c 3F000000 		.long	63
 19849              		.section	.rodata.cst8,"aM",@progbits,8
 19850              		.align 8
 19851              	.LC6:
 19852 0000 00000000 		.long	0
 19853 0004 00000000 		.long	0
 19854              		.align 8
 19855              	.LC7:
 19856 0008 00000000 		.long	0
 19857 000c 0000F87F 		.long	2146959360
 19858              		.align 8
 19859              	.LC8:
 19860 0010 95D626E8 		.long	3894859413
 19861 0014 0B2E113E 		.long	1041313291
 19862              		.align 8
 19863              	.LC28:
 19864 0018 9A999999 		.long	2576980378
 19865 001c 9999B93F 		.long	1069128089
 19866              		.align 8
 19867              	.LC61:
 19868 0020 00000000 		.long	0
 19869 0024 00001440 		.long	1075052544
 19870              		.text
 19871              	.Letext0:
 19872              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 19873              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19874              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 19875              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 19876              		.file 8 "/usr/include/stdio.h"
 19877              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19878              		.file 10 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 19879              		.file 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 19880              		.file 12 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 19881              		.file 13 "/usr/include/stdint.h"
GAS LISTING /tmp/ccW4ZvF5.s 			page 525


 19882              		.file 14 "/usr/include/time.h"
 19883              		.file 15 "/usr/include/math.h"
 19884              		.file 16 "/usr/include/stdlib.h"
 19885              		.file 17 "<built-in>"
 46492              		.section	.note.gnu.property,"a"
 46493              		.align 8
 46494 0000 04000000 		.long	 1f - 0f
 46495 0004 10000000 		.long	 4f - 1f
 46496 0008 05000000 		.long	 5
 46497              	0:
 46498 000c 474E5500 		.string	 "GNU"
 46499              	1:
 46500              		.align 8
 46501 0010 020000C0 		.long	 0xc0000002
 46502 0014 04000000 		.long	 3f - 2f
 46503              	2:
 46504 0018 03000000 		.long	 0x3
 46505              	3:
 46506 001c 00000000 		.align 8
 46507              	4:
GAS LISTING /tmp/ccW4ZvF5.s 			page 526


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccW4ZvF5.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccW4ZvF5.s:19822  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccW4ZvF5.s:19828  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccW4ZvF5.s:19834  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccW4ZvF5.s:19840  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccW4ZvF5.s:1227   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccW4ZvF5.s:3065   .text:0000000000001310 compare_tuning_result
     /tmp/ccW4ZvF5.s:3091   .text:0000000000001330 setBitsTrue_largeRange_vector
     /tmp/ccW4ZvF5.s:5026   .text:0000000000001de0 extendSieve_aligned
     /tmp/ccW4ZvF5.s:5915   .text:0000000000002360 extendSieve_shiftleft
     /tmp/ccW4ZvF5.s:8589   .text:00000000000033f0 show_primes.isra.0
     /tmp/ccW4ZvF5.s:8584   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccW4ZvF5.s:8582   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccW4ZvF5.s:8996   .text:0000000000003590 sieve_shake
     /tmp/ccW4ZvF5.s:19805  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccW4ZvF5.s:11503  .text:00000000000040a0 tune_benchmark
     /tmp/ccW4ZvF5.s:19812  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/ccW4ZvF5.s:19818  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/ccW4ZvF5.s:19855  .rodata.cst8:0000000000000008 .LC7
     /tmp/ccW4ZvF5.s:19859  .rodata.cst8:0000000000000010 .LC8
     /tmp/ccW4ZvF5.s:11720  .text:00000000000041e0 shiftvec
     /tmp/ccW4ZvF5.s:12882  .text:00000000000045a0 validatePrimeCount
     /tmp/ccW4ZvF5.s:12863  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccW4ZvF5.s:12869  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccW4ZvF5.s:12873  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccW4ZvF5.s:12866  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccW4ZvF5.s:12876  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccW4ZvF5.s:14131  .text:0000000000004d20 usage
     /tmp/ccW4ZvF5.s:14091  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccW4ZvF5.s:14094  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccW4ZvF5.s:14098  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccW4ZvF5.s:14101  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccW4ZvF5.s:14104  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccW4ZvF5.s:14107  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccW4ZvF5.s:14110  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccW4ZvF5.s:14113  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccW4ZvF5.s:14116  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccW4ZvF5.s:14119  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccW4ZvF5.s:14122  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccW4ZvF5.s:14125  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccW4ZvF5.s:14376  .text:0000000000004ea0 printfcomma2
     /tmp/ccW4ZvF5.s:14368  .rodata.str1.1:000000000000003b .LC26
     /tmp/ccW4ZvF5.s:14370  .rodata.str1.1:000000000000003e .LC27
     /tmp/ccW4ZvF5.s:14502  .text:0000000000004f10 printfcomma
     /tmp/ccW4ZvF5.s:14962  .text:0000000000005070 benchmark
     /tmp/ccW4ZvF5.s:19851  .rodata.cst8:0000000000000000 .LC6
     /tmp/ccW4ZvF5.s:15256  .text:0000000000005270 test
     /tmp/ccW4ZvF5.s:15560  .text:0000000000005400 test2
     /tmp/ccW4ZvF5.s:15680  .text:0000000000005590 test3
     /tmp/ccW4ZvF5.s:15949  .text:00000000000056b0 testshuffle_vector
     /tmp/ccW4ZvF5.s:16454  .text:0000000000005940 testshuffle_vector2
     /tmp/ccW4ZvF5.s:16465  .text:0000000000005950 testshuffle_word
     /tmp/ccW4ZvF5.s:17167  .text.startup:0000000000000000 main
     /tmp/ccW4ZvF5.s:17075  .rodata.str1.1:0000000000000053 .LC30
     /tmp/ccW4ZvF5.s:17077  .rodata.str1.1:000000000000005a .LC31
GAS LISTING /tmp/ccW4ZvF5.s 			page 527


     /tmp/ccW4ZvF5.s:17086  .rodata.str1.1:0000000000000080 .LC34
     /tmp/ccW4ZvF5.s:17088  .rodata.str1.1:0000000000000099 .LC35
     /tmp/ccW4ZvF5.s:17090  .rodata.str1.1:00000000000000a1 .LC36
     /tmp/ccW4ZvF5.s:17099  .rodata.str1.1:00000000000000c1 .LC39
     /tmp/ccW4ZvF5.s:17120  .rodata.str1.1:000000000000014f .LC48
     /tmp/ccW4ZvF5.s:17118  .rodata.str1.1:0000000000000136 .LC47
     /tmp/ccW4ZvF5.s:17101  .rodata.str1.1:00000000000000d7 .LC40
     /tmp/ccW4ZvF5.s:17105  .rodata.str1.1:00000000000000f9 .LC42
     /tmp/ccW4ZvF5.s:17112  .rodata.str1.1:00000000000000fd .LC44
     /tmp/ccW4ZvF5.s:17114  .rodata.str1.1:0000000000000116 .LC45
     /tmp/ccW4ZvF5.s:17122  .rodata.str1.1:000000000000015f .LC49
     /tmp/ccW4ZvF5.s:19867  .rodata.cst8:0000000000000020 .LC61
     /tmp/ccW4ZvF5.s:17155  .rodata.str1.8:0000000000000548 .LC62
     /tmp/ccW4ZvF5.s:17073  .rodata.str1.1:0000000000000044 .LC29
     /tmp/ccW4ZvF5.s:17116  .rodata.str1.1:0000000000000127 .LC46
     /tmp/ccW4ZvF5.s:17083  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/ccW4ZvF5.s:17161  .rodata.str1.1:00000000000001b3 .LC64
     /tmp/ccW4ZvF5.s:17158  .rodata.str1.8:0000000000000590 .LC63
     /tmp/ccW4ZvF5.s:19863  .rodata.cst8:0000000000000018 .LC28
     /tmp/ccW4ZvF5.s:17135  .rodata.str1.1:0000000000000188 .LC54
     /tmp/ccW4ZvF5.s:17132  .rodata.str1.8:0000000000000420 .LC53
     /tmp/ccW4ZvF5.s:17139  .rodata.str1.8:00000000000004a8 .LC55
     /tmp/ccW4ZvF5.s:17142  .rodata.str1.1:000000000000018d .LC56
     /tmp/ccW4ZvF5.s:17128  .rodata.str1.1:0000000000000183 .LC52
     /tmp/ccW4ZvF5.s:17144  .rodata.str1.1:000000000000019a .LC57
     /tmp/ccW4ZvF5.s:17146  .rodata.str1.1:00000000000001a1 .LC58
     /tmp/ccW4ZvF5.s:17124  .rodata.str1.1:0000000000000166 .LC50
     /tmp/ccW4ZvF5.s:17152  .rodata.str1.8:0000000000000510 .LC60
     /tmp/ccW4ZvF5.s:17148  .rodata.str1.1:00000000000001a5 .LC59
     /tmp/ccW4ZvF5.s:19789  .rodata:0000000000000060 CSWTCH.120
     /tmp/ccW4ZvF5.s:19782  .rodata:0000000000000040 CSWTCH.121
     /tmp/ccW4ZvF5.s:19775  .rodata:0000000000000020 CSWTCH.122
     /tmp/ccW4ZvF5.s:19765  .rodata:0000000000000000 CSWTCH.123
     /tmp/ccW4ZvF5.s:17126  .rodata.str1.1:0000000000000179 .LC51
     /tmp/ccW4ZvF5.s:17079  .rodata.str1.1:0000000000000064 .LC32
     /tmp/ccW4ZvF5.s:17096  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/ccW4ZvF5.s:17109  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/ccW4ZvF5.s:17092  .rodata.str1.1:00000000000000a8 .LC37
     /tmp/ccW4ZvF5.s:17103  .rodata.str1.1:00000000000000de .LC41
     /tmp/ccW4ZvF5.s:19798  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
GAS LISTING /tmp/ccW4ZvF5.s 			page 528


qsort
