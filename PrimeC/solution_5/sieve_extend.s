GAS LISTING /tmp/ccW0oq2B.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd
  12              	# -mf16c -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt
  13              	# -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1
  14              	# -mclflushopt -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32
  20              	# --param l1-cache-line-size=64 --param l2-cache-size=12288 -mtune=skylake
  21              	# -masm=intel -g -Ofast -funroll-all-loops -fno-asynchronous-unwind-tables
  22              	# -fno-exceptions -fverbose-asm -fstack-protector-strong -Wformat
  23              	# -Wformat-security -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccW0oq2B.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  74              	# -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16 -mf16c -mfancy-math-387
  75              	# -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc -mhle -mlong-double-80
  76              	# -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mpush-args -mrdrnd
  77              	# -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3 -msse4 -msse4.1
  78              	# -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper -mxsave
  79              	# -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB66:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 1
  18:sieve_extend.c **** #define default_tune_level 0
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 3


  27:sieve_extend.c **** // calculate the rest dynamically
  28:sieve_extend.c **** #define counter_t TYPE
  29:sieve_extend.c **** #define bitshift_t TYPE
  30:sieve_extend.c **** #define bitword_t TYPE
  31:sieve_extend.c **** 
  32:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  33:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)(sizeof(bitword_t)*8))
  34:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)(sizeof(bitword_t)*8))
  35:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  36:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  37:sieve_extend.c **** #define SHIFT_VECTOR (SHIFT+2);
  38:sieve_extend.c **** 
  39:sieve_extend.c **** typedef uint64_t bitvector_t __attribute__ ((vector_size(sizeof(bitword_t)*8)));
  40:sieve_extend.c **** 
  41:sieve_extend.c **** // globals for tuning
  42:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 16;
  43:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  44:sieve_extend.c **** 
  45:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  46:sieve_extend.c **** #define SAFE_ZERO  (bitshift_t)0U
  47:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  48:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  49:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  50:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  51:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  52:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  53:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  54:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  55:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)))
  56:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  57:sieve_extend.c **** #define  markmask_calc(index) (SAFE_SHIFTBIT << bitindex_calc(index))
  58:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  59:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  60:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  61:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  62:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  63:sieve_extend.c **** #define real(bit) (bit*2+1)
  64:sieve_extend.c **** 
  65:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  66:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  67:sieve_extend.c **** 
  68:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  69:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  70:sieve_extend.c **** 
  71:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  72:sieve_extend.c **** 
  73:sieve_extend.c **** struct sieve_state {
  74:sieve_extend.c ****     bitword_t* bitarray;
  75:sieve_extend.c ****     counter_t  bits;
  76:sieve_extend.c ****     counter_t  size;
  77:sieve_extend.c **** };
  78:sieve_extend.c **** 
  79:sieve_extend.c **** #include "debugtools.h"
  80:sieve_extend.c **** 
  81:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  82:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  83:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t maxints) {
GAS LISTING /tmp/ccW0oq2B.s 			page 4


  84:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  85:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
  86:sieve_extend.c **** 
  87:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  88:sieve_extend.c ****     sieve->bits     = maxints >> 1;
  89:sieve_extend.c ****     sieve->size     = maxints;
  90:sieve_extend.c **** 
  91:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
  92:sieve_extend.c ****     // it gave weird malloc problems at this point
  93:sieve_extend.c ****     return sieve;
  94:sieve_extend.c **** }
  95:sieve_extend.c **** 
  96:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
  97:sieve_extend.c ****     free(sieve->bitarray);
  98:sieve_extend.c ****     free(sieve);
  99:sieve_extend.c **** }
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 102:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 103:sieve_extend.c ****     // #pragma ivdep
 104:sieve_extend.c ****     // while (bitarray[wordindex(index)] & markmask(index)) index++;
 105:sieve_extend.c ****     // return index;
 106:sieve_extend.c ****     
 107:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 108:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 109:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 110:sieve_extend.c ****    index += distance;
 111:sieve_extend.c ****    distance += index_bit;
 112:sieve_extend.c **** 
 113:sieve_extend.c ****    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 114:sieve_extend.c ****        index_word++;
 115:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 116:sieve_extend.c ****        index += distance;
 117:sieve_extend.c ****    }
 118:sieve_extend.c **** 
 119:sieve_extend.c ****    return index;
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 123:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 124:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 125:sieve_extend.c ****     return index;
 126:sieve_extend.c **** }
 127:sieve_extend.c **** 
 128:sieve_extend.c **** static void inline applyMask_fast(bitword_t* __restrict bitarray, const counter_t step, const count
 129:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 130:sieve_extend.c ****    register bitword_t* __restrict index_ptr = &bitarray[index_word];
 131:sieve_extend.c ****    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*5) ? (range_stop_word - s
 132:sieve_extend.c ****    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_wor
 133:sieve_extend.c **** 
 134:sieve_extend.c ****     counter_t size_word = fast_loop_ptr - index_ptr;
 135:sieve_extend.c **** 
 136:sieve_extend.c **** //    #pragma ivdep
 137:sieve_extend.c ****    for (counter_t i=0; i < size_word; i++) {
 138:sieve_extend.c ****        *(index_ptr+i*step) |= mask;
 139:sieve_extend.c ****    }
 140:sieve_extend.c ****    index_ptr += size_word * step;
GAS LISTING /tmp/ccW0oq2B.s 			page 5


 141:sieve_extend.c **** 
 142:sieve_extend.c ****    while ( index_ptr < range_stop_ptr) {
 143:sieve_extend.c ****        *index_ptr |= mask;
 144:sieve_extend.c ****        index_ptr+=step;
 145:sieve_extend.c ****    }
 146:sieve_extend.c **** 
 147:sieve_extend.c ****    if (index_ptr == range_stop_ptr) {
 148:sieve_extend.c ****       *range_stop_ptr |= (mask & chopmask2(range_stop));
 149:sieve_extend.c ****    }
 150:sieve_extend.c **** 
 151:sieve_extend.c **** // #endif
 152:sieve_extend.c **** }
 153:sieve_extend.c **** 
 154:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 155:sieve_extend.c **** // #if __APPLE__
 156:sieve_extend.c ****     // register const counter_t step_2 = step * 2;
 157:sieve_extend.c ****     // register const counter_t step_3 = step * 3;
 158:sieve_extend.c ****     // register const counter_t step_4 = step * 4;
 159:sieve_extend.c ****     // register const counter_t range_stop_word = wordindex(range_stop);
 160:sieve_extend.c ****     // const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (
 161:sieve_extend.c **** 
 162:sieve_extend.c ****     // #pragma ivdep
 163:sieve_extend.c ****     // for (;index_word < loop_stop_word;  index_word += step_4) {
 164:sieve_extend.c ****     //     bitarray[index_word         ] |= mask;
 165:sieve_extend.c ****     //     bitarray[index_word + step  ] |= mask;
 166:sieve_extend.c ****     //     bitarray[index_word + step_2] |= mask;
 167:sieve_extend.c ****     //     bitarray[index_word + step_3] |= mask;
 168:sieve_extend.c ****     // }
 169:sieve_extend.c ****  
 170:sieve_extend.c ****     // #pragma ivdep
 171:sieve_extend.c ****     // while (index_word < range_stop_word) {
 172:sieve_extend.c ****     //     bitarray[index_word] |= mask;
 173:sieve_extend.c ****     //     index_word += step;
 174:sieve_extend.c ****     // }
 175:sieve_extend.c **** 
 176:sieve_extend.c ****     // if (index_word == wordindex(range_stop)) {
 177:sieve_extend.c ****     //     bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 178:sieve_extend.c ****     // }
 179:sieve_extend.c **** // #endif
 180:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 181:sieve_extend.c **** // #if __linux__
 182:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 183:sieve_extend.c **** //    register bitword_t* __restrict index_ptr      = &bitarray[index_word];
 184:sieve_extend.c **** //    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_
 185:sieve_extend.c **** 
 186:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 187:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 188:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 189:sieve_extend.c **** 
 190:sieve_extend.c ****    #pragma unroll
 191:sieve_extend.c ****    #pragma ivdep
 192:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 193:sieve_extend.c ****        *index_ptr |= mask;
 194:sieve_extend.c ****        index_ptr+=step;
 195:sieve_extend.c ****        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 197:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 6


 198:sieve_extend.c ****        index_ptr+=step;
 199:sieve_extend.c ****        *index_ptr |= mask;
 200:sieve_extend.c ****        index_ptr+=step;
 201:sieve_extend.c ****        *index_ptr |= mask;
 202:sieve_extend.c ****        index_ptr+=step;
 203:sieve_extend.c ****    }
 204:sieve_extend.c **** 
 205:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 206:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 207:sieve_extend.c ****        *index_ptr |= mask;
 208:sieve_extend.c ****        index_ptr+=step;
 209:sieve_extend.c ****    }
 210:sieve_extend.c **** 
 211:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 212:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 213:sieve_extend.c ****    }
 214:sieve_extend.c **** 
 215:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 216:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 217:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 218:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 219:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 220:sieve_extend.c **** 
 221:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 222:sieve_extend.c **** 
 223:sieve_extend.c **** //     #pragma unroll 1
 224:sieve_extend.c **** //    #pragma ivdep
 225:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 226:sieve_extend.c **** //        *(index_ptr) |= mask;
 227:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 228:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 229:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 230:sieve_extend.c **** //        index_ptr += 4*step;
 231:sieve_extend.c **** //    }
 232:sieve_extend.c **** 
 233:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 234:sieve_extend.c **** //        *index_ptr |= mask;
 235:sieve_extend.c **** //        index_ptr+=step;
 236:sieve_extend.c **** //    }
 237:sieve_extend.c **** 
 238:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 239:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 240:sieve_extend.c **** //    }
 241:sieve_extend.c **** // #endif
 242:sieve_extend.c **** }
 243:sieve_extend.c **** 
 244:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 245:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* bitarray, const counter_t range_start, const bi
 246:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 247:sieve_extend.c **** 
 248:sieve_extend.c ****     // build the pattern in a word
 249:sieve_extend.c **** 	register bitword_t pattern = SAFE_SHIFTBIT;
 250:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 251:sieve_extend.c **** 
 252:sieve_extend.c ****     // initialize loop variables and stop if this is it
 253:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 254:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
GAS LISTING /tmp/ccW0oq2B.s 			page 7


 255:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 256:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 257:sieve_extend.c ****        return;
 258:sieve_extend.c ****     }
 259:sieve_extend.c ****     
 260:sieve_extend.c ****     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 261:sieve_extend.c **** 
 262:sieve_extend.c ****     // from now on, we are before range_stop_word
 263:sieve_extend.c ****     // first word is special, because it should not set bits before the range_start_bit
 264:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 265:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 266:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 267:sieve_extend.c ****     // copy_word++;
 268:sieve_extend.c **** 
 269:sieve_extend.c ****     #pragma ivdep
 270:sieve_extend.c ****     for (;copy_word < range_stop_word; copy_word++) {
 271:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 272:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 273:sieve_extend.c ****     } 
 274:sieve_extend.c **** 
 275:sieve_extend.c ****     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 276:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 277:sieve_extend.c **** }
 278:sieve_extend.c **** 
 279:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 280:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 281:sieve_extend.c **** // This is especially true for small steps over long ranges
 282:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 283:sieve_extend.c **** static void inline setBitsTrue_mediumStep(bitword_t* bitarray, const counter_t range_start, const c
 284:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 285:sieve_extend.c **** 
 286:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 287:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 288:sieve_extend.c **** 
 289:sieve_extend.c ****         #pragma ivdep
 290:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 291:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 292:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 293:sieve_extend.c ****             #pragma ivdep
 294:sieve_extend.c ****             do {
 295:sieve_extend.c ****                 mask |= markmask(index);
 296:sieve_extend.c ****                 index += step;
 297:sieve_extend.c ****             } while (index_word == wordindex(index));
 298:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 299:sieve_extend.c ****             //     mask |= markmask(index);
 300:sieve_extend.c ****             bitarray[index_word] |= mask;
 301:sieve_extend.c ****         }
 302:sieve_extend.c ****     }
 303:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 304:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 305:sieve_extend.c ****         
 306:sieve_extend.c ****         #pragma ivdep
 307:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 308:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 309:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 310:sieve_extend.c ****             #pragma ivdep
 311:sieve_extend.c ****             do {
GAS LISTING /tmp/ccW0oq2B.s 			page 8


 312:sieve_extend.c ****                 mask |= markmask(index);
 313:sieve_extend.c ****                 index += step;
 314:sieve_extend.c ****             } while (index_word == wordindex(index));
 315:sieve_extend.c ****             // #pragma ivdep
 316:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 317:sieve_extend.c ****             //     mask |= markmask(index);
 318:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 319:sieve_extend.c ****         }
 320:sieve_extend.c ****     }
 321:sieve_extend.c **** }
 322:sieve_extend.c **** 
 323:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 324:sieve_extend.c **** static inline void setBitsTrue_smallRange(bitword_t* bitarray, const counter_t range_start, const c
 325:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallrange (%ju occurances
 326:sieve_extend.c ****     
 327:sieve_extend.c ****     #pragma unroll
 328:sieve_extend.c ****     #pragma ivdep
 329:sieve_extend.c ****     for (register counter_t index = range_start; index <= range_stop; index += step) {
 330:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 331:sieve_extend.c ****     }
 332:sieve_extend.c **** }
 333:sieve_extend.c **** 
 334:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 335:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 336:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 337:sieve_extend.c **** 
 338:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 339:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 340:sieve_extend.c ****     
 341:sieve_extend.c ****     while (1) {
 342:sieve_extend.c ****         if (index1_word == index2_word) {
 343:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 344:sieve_extend.c ****             counter_t index_word = index1_word;
 345:sieve_extend.c ****             do {
 346:sieve_extend.c ****                 mask |= markmask(index1);
 347:sieve_extend.c ****                 index1 += step1;
 348:sieve_extend.c ****                 index1_word = wordindex(index1);
 349:sieve_extend.c ****             } while (index1_word == index_word);
 350:sieve_extend.c ****             do {
 351:sieve_extend.c ****                 mask |= markmask(index2);
 352:sieve_extend.c ****                 index2 += step2;
 353:sieve_extend.c ****                 index2_word = wordindex(index2);
 354:sieve_extend.c ****             } while (index2_word == index_word);
 355:sieve_extend.c ****             bitarray[index_word] |= mask;
 356:sieve_extend.c ****         }
 357:sieve_extend.c **** 
 358:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 359:sieve_extend.c ****         if (index2 > range_stop) {
 360:sieve_extend.c ****             while (index1 <= range_stop) {
 361:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 362:sieve_extend.c ****                 index1 += step1;
 363:sieve_extend.c ****             }
 364:sieve_extend.c ****             return;
 365:sieve_extend.c ****         }
 366:sieve_extend.c **** 
 367:sieve_extend.c ****         if (index1 > range_stop) {
 368:sieve_extend.c ****             while (index2 <= range_stop) {
GAS LISTING /tmp/ccW0oq2B.s 			page 9


 369:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 370:sieve_extend.c ****                 index2 += step2;
 371:sieve_extend.c ****             }
 372:sieve_extend.c ****             return;
 373:sieve_extend.c ****         }
 374:sieve_extend.c **** 
 375:sieve_extend.c ****         while (index1_word < index2_word) {
 376:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 377:sieve_extend.c ****             index1 += step1;
 378:sieve_extend.c ****             index1_word = wordindex(index1);
 379:sieve_extend.c ****         }
 380:sieve_extend.c ****         
 381:sieve_extend.c ****         while (index2_word < index1_word){
 382:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 383:sieve_extend.c ****             index2 += step2;
 384:sieve_extend.c ****             index2_word = wordindex(index2);
 385:sieve_extend.c ****         }
 386:sieve_extend.c **** 
 387:sieve_extend.c ****     }
 388:sieve_extend.c **** }
 389:sieve_extend.c **** 
 390:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 391:sieve_extend.c **** static void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_start, con
 392:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 393:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 394:sieve_extend.c **** 
 395:sieve_extend.c ****     #pragma unroll
 396:sieve_extend.c ****     #pragma ivdep
 397:sieve_extend.c ****     for (register counter_t index = range_start; index <= range_stop_unique; index += step) {
 398:sieve_extend.c ****         register bitword_t mask = markmask(index);
 399:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 400:sieve_extend.c ****     }
 401:sieve_extend.c **** }
 402:sieve_extend.c **** 
 403:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* bitarray_word, const counter_t range_start, co
 404:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 405:sieve_extend.c **** 
 406:sieve_extend.c ****     counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 407:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 408:sieve_extend.c ****     //     bitword_t mask = markmask(index);
 409:sieve_extend.c ****     //     applyMask(bitarray, step, range_stop, mask, wordindex(index));
 410:sieve_extend.c ****     // }
 411:sieve_extend.c ****     // return;
 412:sieve_extend.c **** 
 413:sieve_extend.c ****     debug { counter_t repeats = (range_stop - range_start)/(WORD_SIZE_counter * step); if ( repeats
 414:sieve_extend.c ****     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 415:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 416:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray_word;
 417:sieve_extend.c **** 
 418:sieve_extend.c ****     if (step < WORD_SIZE_counter*4) {
 419:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 420:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 421:sieve_extend.c ****             counter_t start_word = wordindex(index);
 422:sieve_extend.c ****             register counter_t index_word = start_word;
 423:sieve_extend.c ****             int word = 0;
 424:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 425:sieve_extend.c ****             mask[1] = SAFE_ZERO;
GAS LISTING /tmp/ccW0oq2B.s 			page 10


 426:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 427:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 428:sieve_extend.c ****             do {
 429:sieve_extend.c ****                 mask[word] |= markmask(index);
 430:sieve_extend.c ****                 index += step;
 431:sieve_extend.c ****                 index_word = wordindex(index);
 432:sieve_extend.c ****                 word = index_word - start_word;
 433:sieve_extend.c ****             } while (word < 4 );
 434:sieve_extend.c **** 
 435:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 436:sieve_extend.c ****             index_word = start_word;
 437:sieve_extend.c **** 
 438:sieve_extend.c ****             #pragma ivdep
 439:sieve_extend.c ****             while ((index_word)+4 < range_stop_word) {
 440:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 441:sieve_extend.c ****                 bitarray[index_word  ] |= mask[0];
 442:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 443:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 444:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 445:sieve_extend.c ****                 index_word += step;
 446:sieve_extend.c ****             }
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[0]; index_word++; }
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 450:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 451:sieve_extend.c ****         }
 452:sieve_extend.c ****     }
 453:sieve_extend.c **** }
 454:sieve_extend.c **** 
 455:sieve_extend.c **** static void setBitsTrue_largeRange_mmx(bitword_t* __restrict bitarray, const counter_t range_start,
 456:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 457:sieve_extend.c **** 
 458:sieve_extend.c ****     counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 459:sieve_extend.c **** 
 460:sieve_extend.c ****     debug { counter_t repeats = (range_stop - range_start)/(WORD_SIZE_counter * step); if ( repeats
 461:sieve_extend.c ****     bitword_t mask[4] = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 462:sieve_extend.c **** 
 463:sieve_extend.c ****     if (step < WORD_SIZE_counter*4) {
 464:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 465:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 466:sieve_extend.c ****             counter_t start_word = wordindex(index);
 467:sieve_extend.c ****             register counter_t index_word = start_word;
 468:sieve_extend.c ****             int word = 0;
 469:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 470:sieve_extend.c ****             mask[1] = SAFE_ZERO;
 471:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 472:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 473:sieve_extend.c ****             do {
 474:sieve_extend.c ****                 mask[word] |= markmask(index);
 475:sieve_extend.c ****                 index += step;
 476:sieve_extend.c ****                 index_word = wordindex(index);
 477:sieve_extend.c ****                 word = index_word - start_word;
 478:sieve_extend.c ****             } while (word < 4 );
 479:sieve_extend.c **** 
 480:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 481:sieve_extend.c ****             index_word = start_word;
 482:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 11


 483:sieve_extend.c ****             #pragma ivdep
 484:sieve_extend.c ****             while ((index_word)+4 < range_stop_word) {
 485:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 486:sieve_extend.c ****                 bitarray[index_word  ] |= mask[0];
 487:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 488:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 489:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 490:sieve_extend.c ****                 index_word += step;
 491:sieve_extend.c ****             }
 492:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[0]; index_word++; }
 493:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 494:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 495:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 496:sieve_extend.c ****         }
 497:sieve_extend.c ****     }
 498:sieve_extend.c ****     else {
 499:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 500:sieve_extend.c ****             bitword_t mask = markmask(index);
 501:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, wordindex(index));
 502:sieve_extend.c ****         }
 503:sieve_extend.c ****     } 
 504:sieve_extend.c **** }
 505:sieve_extend.c **** 
 506:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source_start, const counter_
  90              		.loc 1 506 142 view -0
  91              		.cfi_startproc
 507:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 507 5 view .LVU1
 508:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 509:sieve_extend.c **** 
 510:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
  93              		.loc 1 510 5 view .LVU2
 511:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
  94              		.loc 1 511 5 view .LVU3
  95              	# sieve_extend.c:506: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 506 142 is_stmt 0 view .LVU4
  97 0000 4156     		push	r14	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 14, -16
 100              	# sieve_extend.c:510:     counter_t source_word = wordindex(source_start);
 510:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
 101              		.loc 1 510 15 view .LVU5
 102 0002 4889F0   		mov	rax, rsi	# source_word, source_start
 103              	# sieve_extend.c:506: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 104              		.loc 1 506 142 view .LVU6
 105 0005 4989D2   		mov	r10, rdx	# size, tmp279
 106 0008 4155     		push	r13	#
 107              		.cfi_def_cfa_offset 24
 108              		.cfi_offset 13, -24
 109              	# sieve_extend.c:510:     counter_t source_word = wordindex(source_start);
 510:sieve_extend.c ****     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[source_word+
 110              		.loc 1 510 15 view .LVU7
 111 000a 48C1E806 		shr	rax, 6	# source_word,
 112              	.LVL1:
 113              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
GAS LISTING /tmp/ccW0oq2B.s 			page 12


 114              		.loc 1 511 125 view .LVU8
 115 000e 89F2     		mov	edx, esi	# tmp142, source_start
 116              	.LVL2:
 117              	# sieve_extend.c:506: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 118              		.loc 1 506 142 view .LVU9
 119 0010 4154     		push	r12	#
 120              		.cfi_def_cfa_offset 32
 121              		.cfi_offset 12, -32
 122              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 123              		.loc 1 511 125 view .LVU10
 124 0012 83E23F   		and	edx, 63	# tmp142,
 125              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 126              		.loc 1 511 124 view .LVU11
 127 0015 41B84000 		mov	r8d, 64	# tmp144,
 127      0000
 128              	# sieve_extend.c:506: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 129              		.loc 1 506 142 view .LVU12
 130 001b 55       		push	rbp	#
 131              		.cfi_def_cfa_offset 40
 132              		.cfi_offset 6, -40
 133              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 134              		.loc 1 511 124 view .LVU13
 135 001c 4129D0   		sub	r8d, edx	# tmp143, tmp142
 136              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 137              		.loc 1 511 158 view .LVU14
 138 001f 4589D1   		mov	r9d, r10d	# tmp150, size
 139              	# sieve_extend.c:506: static void extendSieve_smallSize(bitword_t* bitarray, const counter_t source
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 140              		.loc 1 506 142 view .LVU15
 141 0022 53       		push	rbx	#
 142              		.cfi_def_cfa_offset 48
 143              		.cfi_offset 3, -48
 144              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 145              		.loc 1 511 49 view .LVU16
 146 0023 488B1CC7 		mov	rbx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 147              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 148              		.loc 1 511 158 view .LVU17
 149 0027 41F7D1   		not	r9d	# tmp150
 150 002a 49C7C3FF 		mov	r11, -1	# tmp153,
 150      FFFFFF
 151              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 152              		.loc 1 511 103 view .LVU18
 153 0031 C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp145, *_11, tmp143
 153      44C708
 154              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 155              		.loc 1 511 49 view .LVU19
 156 0038 C4E2CBF7 		shrx	rbp, rbx, rsi	# tmp147, *_5, source_start
 156      EB
 157              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 158              		.loc 1 511 76 view .LVU20
 159 003d 4909E8   		or	r8, rbp	# tmp149, tmp147
 160              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 161              		.loc 1 511 158 view .LVU21
 162 0040 C442B3F7 		shrx	r12, r11, r9	# tmp152, tmp153, tmp150
 162      E3
GAS LISTING /tmp/ccW0oq2B.s 			page 13


 163              	# sieve_extend.c:511:     bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | 
 164              		.loc 1 511 15 view .LVU22
 165 0045 4D21E0   		and	r8, r12	# pattern, tmp152
 166              	.LVL3:
 512:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 167              		.loc 1 512 5 is_stmt 1 view .LVU23
 168              	.LBB273:
 169              		.loc 1 512 10 view .LVU24
 170              		.loc 1 512 54 view .LVU25
 171              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 172              		.loc 1 512 5 is_stmt 0 view .LVU26
 173 0048 4983FA40 		cmp	r10, 64	# size,
 174 004c 0F87BE00 		ja	.L2	#,
 174      0000
 175 0052 4D89D5   		mov	r13, r10	# pattern_size, size
 176              	.LVL4:
 177              	.L3:
 178              		.loc 1 512 120 is_stmt 1 discriminator 3 view .LVU27
 179              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 180              		.loc 1 512 103 is_stmt 0 discriminator 3 view .LVU28
 181 0055 4B8D442D 		lea	rax, [r13+r13]	# pattern_size,
 181      00
 182              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 183              		.loc 1 512 140 discriminator 3 view .LVU29
 184 005a C44291F7 		shlx	r14, r8, r13	# _23, pattern, pattern_size
 184      F0
 185              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 186              		.loc 1 512 128 discriminator 3 view .LVU30
 187 005f 4D09F0   		or	r8, r14	# pattern, _23
 188              	.LVL5:
 189              		.loc 1 512 90 is_stmt 1 discriminator 3 view .LVU31
 190              		.loc 1 512 54 discriminator 3 view .LVU32
 191              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 192              		.loc 1 512 5 is_stmt 0 discriminator 3 view .LVU33
 193 0062 4883F840 		cmp	rax, 64	# pattern_size,
 194 0066 0F87A400 		ja	.L2	#,
 194      0000
 195              		.loc 1 512 120 is_stmt 1 view .LVU34
 196              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 197              		.loc 1 512 103 is_stmt 0 view .LVU35
 198 006c 4A8D1CAD 		lea	rbx, 0[0+r13*4]	# pattern_size,
 198      00000000 
 199              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 200              		.loc 1 512 140 view .LVU36
 201 0074 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 201      D0
 202              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 203              		.loc 1 512 128 view .LVU37
 204 0079 4909D0   		or	r8, rdx	# pattern, _23
 205              	.LVL6:
 206              		.loc 1 512 90 is_stmt 1 view .LVU38
 207              		.loc 1 512 54 view .LVU39
 208              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 209              		.loc 1 512 5 is_stmt 0 view .LVU40
 210 007c 4883FB40 		cmp	rbx, 64	# pattern_size,
 211 0080 0F878A00 		ja	.L2	#,
 211      0000
GAS LISTING /tmp/ccW0oq2B.s 			page 14


 212              		.loc 1 512 120 is_stmt 1 view .LVU41
 213              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 214              		.loc 1 512 103 is_stmt 0 view .LVU42
 215 0086 4E8D0CED 		lea	r9, 0[0+r13*8]	# pattern_size,
 215      00000000 
 216              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 217              		.loc 1 512 140 view .LVU43
 218 008e C4C2E1F7 		shlx	rbp, r8, rbx	# _23, pattern, pattern_size
 218      E8
 219              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 220              		.loc 1 512 128 view .LVU44
 221 0093 4909E8   		or	r8, rbp	# pattern, _23
 222              	.LVL7:
 223              		.loc 1 512 90 is_stmt 1 view .LVU45
 224              		.loc 1 512 54 view .LVU46
 225              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 226              		.loc 1 512 5 is_stmt 0 view .LVU47
 227 0096 4983F940 		cmp	r9, 64	# pattern_size,
 228 009a 7774     		ja	.L2	#,
 229              		.loc 1 512 120 is_stmt 1 view .LVU48
 230              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 231              		.loc 1 512 103 is_stmt 0 view .LVU49
 232 009c 4D89EC   		mov	r12, r13	# pattern_size, pattern_size
 233 009f 49C1E404 		sal	r12, 4	# pattern_size,
 234              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 235              		.loc 1 512 140 view .LVU50
 236 00a3 C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 236      D8
 237              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 238              		.loc 1 512 128 view .LVU51
 239 00a8 4D09D8   		or	r8, r11	# pattern, _23
 240              	.LVL8:
 241              		.loc 1 512 90 is_stmt 1 view .LVU52
 242              		.loc 1 512 54 view .LVU53
 243              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 244              		.loc 1 512 5 is_stmt 0 view .LVU54
 245 00ab 4983FC40 		cmp	r12, 64	# pattern_size,
 246 00af 775F     		ja	.L2	#,
 247              		.loc 1 512 120 is_stmt 1 view .LVU55
 248              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 249              		.loc 1 512 103 is_stmt 0 view .LVU56
 250 00b1 4C89E8   		mov	rax, r13	# pattern_size, pattern_size
 251 00b4 48C1E005 		sal	rax, 5	# pattern_size,
 252              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 253              		.loc 1 512 140 view .LVU57
 254 00b8 C44299F7 		shlx	r14, r8, r12	# _23, pattern, pattern_size
 254      F0
 255              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 256              		.loc 1 512 128 view .LVU58
 257 00bd 4D09F0   		or	r8, r14	# pattern, _23
 258              	.LVL9:
 259              		.loc 1 512 90 is_stmt 1 view .LVU59
 260              		.loc 1 512 54 view .LVU60
 261              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 262              		.loc 1 512 5 is_stmt 0 view .LVU61
 263 00c0 4883F840 		cmp	rax, 64	# pattern_size,
 264 00c4 774A     		ja	.L2	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 15


 265              		.loc 1 512 120 is_stmt 1 view .LVU62
 266              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 267              		.loc 1 512 103 is_stmt 0 view .LVU63
 268 00c6 4C89EB   		mov	rbx, r13	# pattern_size, pattern_size
 269 00c9 48C1E306 		sal	rbx, 6	# pattern_size,
 270              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 271              		.loc 1 512 140 view .LVU64
 272 00cd C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 272      D0
 273              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 274              		.loc 1 512 128 view .LVU65
 275 00d2 4909D0   		or	r8, rdx	# pattern, _23
 276              	.LVL10:
 277              		.loc 1 512 90 is_stmt 1 view .LVU66
 278              		.loc 1 512 54 view .LVU67
 279              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 280              		.loc 1 512 5 is_stmt 0 view .LVU68
 281 00d5 4883FB40 		cmp	rbx, 64	# pattern_size,
 282 00d9 7735     		ja	.L2	#,
 283              		.loc 1 512 120 is_stmt 1 view .LVU69
 284              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 285              		.loc 1 512 103 is_stmt 0 view .LVU70
 286 00db 4D89E9   		mov	r9, r13	# pattern_size, pattern_size
 287 00de 49C1E107 		sal	r9, 7	# pattern_size,
 288              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 289              		.loc 1 512 140 view .LVU71
 290 00e2 C4C2E1F7 		shlx	rbp, r8, rbx	# _23, pattern, pattern_size
 290      E8
 291              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 292              		.loc 1 512 128 view .LVU72
 293 00e7 4909E8   		or	r8, rbp	# pattern, _23
 294              	.LVL11:
 295              		.loc 1 512 90 is_stmt 1 view .LVU73
 296              		.loc 1 512 54 view .LVU74
 297              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 298              		.loc 1 512 5 is_stmt 0 view .LVU75
 299 00ea 4983F940 		cmp	r9, 64	# pattern_size,
 300 00ee 7720     		ja	.L2	#,
 301              		.loc 1 512 120 is_stmt 1 view .LVU76
 302              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 303              		.loc 1 512 103 is_stmt 0 view .LVU77
 304 00f0 49C1E508 		sal	r13, 8	# pattern_size,
 305              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 306              		.loc 1 512 140 view .LVU78
 307 00f4 C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 307      D8
 308              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 309              		.loc 1 512 128 view .LVU79
 310 00f9 4D09D8   		or	r8, r11	# pattern, _23
 311              	.LVL12:
 312              		.loc 1 512 90 is_stmt 1 view .LVU80
 313              		.loc 1 512 54 view .LVU81
 314              	# sieve_extend.c:512:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 315              		.loc 1 512 5 is_stmt 0 view .LVU82
 316 00fc 4983FD40 		cmp	r13, 64	# pattern_size,
 317 0100 0F864FFF 		jbe	.L3	#,
 317      FFFF
GAS LISTING /tmp/ccW0oq2B.s 			page 16


 318              	.LVL13:
 319 0106 662E0F1F 		.p2align 4,,10
 319      84000000 
 319      0000
 320              		.p2align 3
 321              	.L2:
 322              		.loc 1 512 5 view .LVU83
 323              	.LBE273:
 513:sieve_extend.c **** 
 514:sieve_extend.c ****     counter_t copy_start = source_start + size;
 324              		.loc 1 514 5 is_stmt 1 view .LVU84
 325              	# sieve_extend.c:514:     counter_t copy_start = source_start + size;
 326              		.loc 1 514 15 is_stmt 0 view .LVU85
 327 0110 4E8D1C16 		lea	r11, [rsi+r10]	# copy_start,
 328              	.LVL14:
 515:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 329              		.loc 1 515 5 is_stmt 1 view .LVU86
 330              	# sieve_extend.c:515:     register counter_t copy_word = wordindex(copy_start);
 331              		.loc 1 515 24 is_stmt 0 view .LVU87
 332 0114 4D89DE   		mov	r14, r11	# copy_word, copy_start
 333 0117 49C1EE06 		shr	r14, 6	# copy_word,
 334              	.LVL15:
 516:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 335              		.loc 1 516 5 is_stmt 1 view .LVU88
 336              	# sieve_extend.c:516:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 337              		.loc 1 516 25 is_stmt 0 view .LVU89
 338 011b 4E8D2CF5 		lea	r13, 0[0+r14*8]	# _24,
 338      00000000 
 339 0123 4A8D2C2F 		lea	rbp, [rdi+r13]	# prephitmp_124,
 340              	# sieve_extend.c:518:     counter_t destination_stop_word = wordindex(destination_stop);
 517:sieve_extend.c **** 
 518:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 341              		.loc 1 518 15 view .LVU90
 342 0127 4989CC   		mov	r12, rcx	# destination_stop_word, destination_stop
 343 012a 48C7C6FF 		mov	rsi, -1	# tmp159,
 343      FFFFFF
 344              	.LVL16:
 345              		.loc 1 518 15 view .LVU91
 346 0131 F7D1     		not	ecx	# tmp157
 347              	.LVL17:
 348              	# sieve_extend.c:516:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 516:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 349              		.loc 1 516 37 view .LVU92
 350 0133 C4C2A1F7 		shlx	rbx, r8, r11	# tmp156, pattern, copy_start
 350      D8
 351              	# sieve_extend.c:518:     counter_t destination_stop_word = wordindex(destination_stop);
 352              		.loc 1 518 15 view .LVU93
 353 0138 49C1EC06 		shr	r12, 6	# destination_stop_word,
 354              	.LVL18:
 355              	# sieve_extend.c:516:     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 516:sieve_extend.c ****     bitarray[copy_word] |= (pattern << bitindex(copy_start));
 356              		.loc 1 516 25 view .LVU94
 357 013c 480B5D00 		or	rbx, QWORD PTR 0[rbp]	# _44, *_25
 358 0140 48895D00 		mov	QWORD PTR 0[rbp], rbx	# *_25, _44
 359              		.loc 1 518 5 is_stmt 1 view .LVU95
 360              	.LVL19:
 519:sieve_extend.c ****     // debug { printf("...After first word. "); dump_bitarray(bitarray, 4); }
GAS LISTING /tmp/ccW0oq2B.s 			page 17


 520:sieve_extend.c ****     if (copy_word == destination_stop_word) {
 361              		.loc 1 520 5 view .LVU96
 362 0144 C462F3F7 		shrx	r9, rsi, rcx	# _115, tmp159, tmp157
 362      CE
 363              	# sieve_extend.c:520:     if (copy_word == destination_stop_word) {
 364              		.loc 1 520 8 is_stmt 0 view .LVU97
 365 0149 4D39E6   		cmp	r14, r12	# copy_word, destination_stop_word
 366 014c 0F845302 		je	.L6	#,
 366      0000
 521:sieve_extend.c ****         bitarray[copy_word] &= chopmask(destination_stop);
 522:sieve_extend.c ****         // debug { printf("...Returning after first word. "); dump_bitarray(bitarray, 4); }
 523:sieve_extend.c ****         return;
 524:sieve_extend.c ****     }
 525:sieve_extend.c **** 
 526:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 367              		.loc 1 526 5 is_stmt 1 view .LVU98
 368              	# sieve_extend.c:526:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 369              		.loc 1 526 31 is_stmt 0 view .LVU99
 370 0152 B9400000 		mov	ecx, 64	# tmp161,
 370      00
 371 0157 4889C8   		mov	rax, rcx	# tmp163, tmp161
 372 015a 31D2     		xor	edx, edx	# tmp162
 373 015c 49F7F2   		div	r10	# size
 374              	.LVL20:
 527:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 375              		.loc 1 527 5 is_stmt 1 view .LVU100
 376              	# sieve_extend.c:527:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 377              		.loc 1 527 31 is_stmt 0 view .LVU101
 378 015f 4889CE   		mov	rsi, rcx	# pattern_size, tmp161
 379              	# sieve_extend.c:528:     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start
 528:sieve_extend.c ****     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start);
 380              		.loc 1 528 54 view .LVU102
 381 0162 4183E33F 		and	r11d, 63	# tmp165,
 382              	.LVL21:
 383              	# sieve_extend.c:528:     register bitshift_t shift = WORD_SIZE_bitshift - bitindex_calc(copy_start
 384              		.loc 1 528 25 view .LVU103
 385 0166 4889C8   		mov	rax, rcx	# tmp161, tmp161
 386 0169 4C29D8   		sub	rax, r11	# tmp161, tmp165
 387              	# sieve_extend.c:527:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 527:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 388              		.loc 1 527 31 view .LVU104
 389 016c 4829D6   		sub	rsi, rdx	# pattern_size, tmp162
 390              	.LVL22:
 391              		.loc 1 528 5 is_stmt 1 view .LVU105
 529:sieve_extend.c **** 
 530:sieve_extend.c ****     #pragma ivdep
 531:sieve_extend.c ****     while (copy_word < destination_stop_word) { // = will be handled as well because increment is a
 392              		.loc 1 531 5 view .LVU106
 393              		.loc 1 531 11 view .LVU107
 394 016f 4D39E6   		cmp	r14, r12	# copy_word, destination_stop_word
 395 0172 0F832D02 		jnb	.L6	#,
 395      0000
 396 0178 4E8D1CE5 		lea	r11, 8[0+r12*8]	# _72,
 396      08000000 
 397 0180 4E8D141F 		lea	r10, [rdi+r11]	# _105,
 398              	.LVL23:
 399              		.loc 1 531 11 is_stmt 0 view .LVU108
GAS LISTING /tmp/ccW0oq2B.s 			page 18


 400 0184 4E8D742F 		lea	r14, 8[rdi+r13]	# ivtmp.126,
 400      08
 401              	.LVL24:
 402              		.loc 1 531 11 view .LVU109
 403 0189 4C89D3   		mov	rbx, r10	# tmp175, _105
 404 018c 4C29F3   		sub	rbx, r14	# tmp175, ivtmp.126
 405 018f 4883EB08 		sub	rbx, 8	# tmp176,
 406 0193 48C1EB03 		shr	rbx, 3	# tmp174,
 407 0197 48FFC3   		inc	rbx	# tmp177
 408 019a 83E307   		and	ebx, 7	# tmp178,
 409 019d 0F841101 		je	.L7	#,
 409      0000
 410 01a3 4883FB01 		cmp	rbx, 1	# tmp178,
 411 01a7 0F84E000 		je	.L39	#,
 411      0000
 412 01ad 4883FB02 		cmp	rbx, 2	# tmp178,
 413 01b1 0F84B600 		je	.L40	#,
 413      0000
 414 01b7 4883FB03 		cmp	rbx, 3	# tmp178,
 415 01bb 0F848C00 		je	.L41	#,
 415      0000
 416 01c1 4883FB04 		cmp	rbx, 4	# tmp178,
 417 01c5 7468     		je	.L42	#,
 418 01c7 4883FB05 		cmp	rbx, 5	# tmp178,
 419 01cb 7442     		je	.L43	#,
 420 01cd 4883FB06 		cmp	rbx, 6	# tmp178,
 421 01d1 741E     		je	.L44	#,
 422              	.LVL25:
 532:sieve_extend.c ****         copy_word++;
 423              		.loc 1 532 9 is_stmt 1 view .LVU110
 533:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 424              		.loc 1 533 9 view .LVU111
 425              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 426              		.loc 1 533 56 is_stmt 0 view .LVU112
 427 01d3 89F5     		mov	ebp, esi	# tmp230, _116
 428 01d5 29C5     		sub	ebp, eax	# tmp230, shift
 429              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 430              		.loc 1 533 76 view .LVU113
 431 01d7 C442FBF7 		shrx	r12, r8, rax	# tmp232, pattern, shift
 431      E0
 432              	.LVL26:
 433              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 434              		.loc 1 533 40 view .LVU114
 435 01dc C442D1F7 		shlx	r13, r8, rbp	# tmp231, pattern, tmp230
 435      E8
 436              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 534:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 437              		.loc 1 534 24 view .LVU115
 438 01e1 4801D0   		add	rax, rdx	# _45, tmp162
 439              	.LVL27:
 440              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 441              		.loc 1 533 65 view .LVU116
 442 01e4 4D09E5   		or	r13, r12	# _44, tmp232
 443              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 444              		.loc 1 533 29 view .LVU117
GAS LISTING /tmp/ccW0oq2B.s 			page 19


 445 01e7 4D892E   		mov	QWORD PTR [r14], r13	# MEM[base: _109, offset: 0B], _44
 446              		.loc 1 534 9 is_stmt 1 view .LVU118
 447              	.LVL28:
 448              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 449              		.loc 1 534 15 is_stmt 0 view .LVU119
 450 01ea 83E03F   		and	eax, 63	# shift,
 451              	.LVL29:
 531:sieve_extend.c ****         copy_word++;
 452              		.loc 1 531 11 is_stmt 1 view .LVU120
 453 01ed 4983C608 		add	r14, 8	# ivtmp.126,
 454              	.L44:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 455              		.loc 1 532 9 view .LVU121
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 456              		.loc 1 533 9 view .LVU122
 457              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 458              		.loc 1 533 56 is_stmt 0 view .LVU123
 459 01f1 89F1     		mov	ecx, esi	# tmp235, _116
 460 01f3 29C1     		sub	ecx, eax	# tmp235, shift
 461              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 462              		.loc 1 533 76 view .LVU124
 463 01f5 C4C2FBF7 		shrx	rbp, r8, rax	# tmp237, pattern, shift
 463      E8
 464              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 465              		.loc 1 533 40 view .LVU125
 466 01fa C4C2F1F7 		shlx	rbx, r8, rcx	# tmp236, pattern, tmp235
 466      D8
 467              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 468              		.loc 1 534 24 view .LVU126
 469 01ff 4801D0   		add	rax, rdx	# _45, tmp162
 470              	.LVL30:
 471              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 472              		.loc 1 533 65 view .LVU127
 473 0202 4809EB   		or	rbx, rbp	# _44, tmp237
 474              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 475              		.loc 1 533 29 view .LVU128
 476 0205 49891E   		mov	QWORD PTR [r14], rbx	# MEM[base: _109, offset: 0B], _44
 477              		.loc 1 534 9 is_stmt 1 view .LVU129
 478              	.LVL31:
 479              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 480              		.loc 1 534 15 is_stmt 0 view .LVU130
 481 0208 83E03F   		and	eax, 63	# shift,
 482              	.LVL32:
 531:sieve_extend.c ****         copy_word++;
 483              		.loc 1 531 11 is_stmt 1 view .LVU131
 484 020b 4983C608 		add	r14, 8	# ivtmp.126,
 485              	.L43:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 486              		.loc 1 532 9 view .LVU132
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 487              		.loc 1 533 9 view .LVU133
 488              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
GAS LISTING /tmp/ccW0oq2B.s 			page 20


 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 489              		.loc 1 533 56 is_stmt 0 view .LVU134
 490 020f 4189F5   		mov	r13d, esi	# tmp240, _116
 491 0212 4129C5   		sub	r13d, eax	# tmp240, shift
 492              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 493              		.loc 1 533 76 view .LVU135
 494 0215 C4C2FBF7 		shrx	rcx, r8, rax	# tmp242, pattern, shift
 494      C8
 495              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 496              		.loc 1 533 40 view .LVU136
 497 021a C44291F7 		shlx	r12, r8, r13	# tmp241, pattern, tmp240
 497      E0
 498              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 499              		.loc 1 534 24 view .LVU137
 500 021f 4801D0   		add	rax, rdx	# _45, tmp162
 501              	.LVL33:
 502              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 503              		.loc 1 533 65 view .LVU138
 504 0222 4909CC   		or	r12, rcx	# _44, tmp242
 505              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 506              		.loc 1 533 29 view .LVU139
 507 0225 4D8926   		mov	QWORD PTR [r14], r12	# MEM[base: _109, offset: 0B], _44
 508              		.loc 1 534 9 is_stmt 1 view .LVU140
 509              	.LVL34:
 510              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 511              		.loc 1 534 15 is_stmt 0 view .LVU141
 512 0228 83E03F   		and	eax, 63	# shift,
 513              	.LVL35:
 531:sieve_extend.c ****         copy_word++;
 514              		.loc 1 531 11 is_stmt 1 view .LVU142
 515 022b 4983C608 		add	r14, 8	# ivtmp.126,
 516              	.L42:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 517              		.loc 1 532 9 view .LVU143
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 518              		.loc 1 533 9 view .LVU144
 519              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 520              		.loc 1 533 56 is_stmt 0 view .LVU145
 521 022f 89F3     		mov	ebx, esi	# tmp245, _116
 522 0231 29C3     		sub	ebx, eax	# tmp245, shift
 523              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 524              		.loc 1 533 76 view .LVU146
 525 0233 C4C2FBF7 		shrx	rbp, r8, rax	# tmp247, pattern, shift
 525      E8
 526              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 527              		.loc 1 533 40 view .LVU147
 528 0238 C442E1F7 		shlx	r13, r8, rbx	# tmp246, pattern, tmp245
 528      E8
 529              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 530              		.loc 1 534 24 view .LVU148
GAS LISTING /tmp/ccW0oq2B.s 			page 21


 531 023d 4801D0   		add	rax, rdx	# _45, tmp162
 532              	.LVL36:
 533              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 534              		.loc 1 533 65 view .LVU149
 535 0240 4909ED   		or	r13, rbp	# _44, tmp247
 536              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 537              		.loc 1 533 29 view .LVU150
 538 0243 4D892E   		mov	QWORD PTR [r14], r13	# MEM[base: _109, offset: 0B], _44
 539              		.loc 1 534 9 is_stmt 1 view .LVU151
 540              	.LVL37:
 541              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 542              		.loc 1 534 15 is_stmt 0 view .LVU152
 543 0246 83E03F   		and	eax, 63	# shift,
 544              	.LVL38:
 531:sieve_extend.c ****         copy_word++;
 545              		.loc 1 531 11 is_stmt 1 view .LVU153
 546 0249 4983C608 		add	r14, 8	# ivtmp.126,
 547              	.L41:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 548              		.loc 1 532 9 view .LVU154
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 549              		.loc 1 533 9 view .LVU155
 550              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 551              		.loc 1 533 56 is_stmt 0 view .LVU156
 552 024d 4189F4   		mov	r12d, esi	# tmp250, _116
 553 0250 4129C4   		sub	r12d, eax	# tmp250, shift
 554              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 555              		.loc 1 533 76 view .LVU157
 556 0253 C4C2FBF7 		shrx	rbx, r8, rax	# tmp252, pattern, shift
 556      D8
 557              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 558              		.loc 1 533 40 view .LVU158
 559 0258 C4C299F7 		shlx	rcx, r8, r12	# tmp251, pattern, tmp250
 559      C8
 560              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 561              		.loc 1 534 24 view .LVU159
 562 025d 4801D0   		add	rax, rdx	# _45, tmp162
 563              	.LVL39:
 564              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 565              		.loc 1 533 65 view .LVU160
 566 0260 4809D9   		or	rcx, rbx	# _44, tmp252
 567              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 568              		.loc 1 533 29 view .LVU161
 569 0263 49890E   		mov	QWORD PTR [r14], rcx	# MEM[base: _109, offset: 0B], _44
 570              		.loc 1 534 9 is_stmt 1 view .LVU162
 571              	.LVL40:
 572              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 573              		.loc 1 534 15 is_stmt 0 view .LVU163
 574 0266 83E03F   		and	eax, 63	# shift,
 575              	.LVL41:
GAS LISTING /tmp/ccW0oq2B.s 			page 22


 531:sieve_extend.c ****         copy_word++;
 576              		.loc 1 531 11 is_stmt 1 view .LVU164
 577 0269 4983C608 		add	r14, 8	# ivtmp.126,
 578              	.L40:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 579              		.loc 1 532 9 view .LVU165
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 580              		.loc 1 533 9 view .LVU166
 581              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 582              		.loc 1 533 56 is_stmt 0 view .LVU167
 583 026d 4189F5   		mov	r13d, esi	# tmp255, _116
 584 0270 4129C5   		sub	r13d, eax	# tmp255, shift
 585              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 586              		.loc 1 533 76 view .LVU168
 587 0273 C4C2FBF7 		shrx	rbp, r8, rax	# tmp257, pattern, shift
 587      E8
 588              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 589              		.loc 1 533 40 view .LVU169
 590 0278 C44291F7 		shlx	r12, r8, r13	# tmp256, pattern, tmp255
 590      E0
 591              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 592              		.loc 1 534 24 view .LVU170
 593 027d 4801D0   		add	rax, rdx	# _45, tmp162
 594              	.LVL42:
 595              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 596              		.loc 1 533 65 view .LVU171
 597 0280 4909EC   		or	r12, rbp	# _44, tmp257
 598              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 599              		.loc 1 533 29 view .LVU172
 600 0283 4D8926   		mov	QWORD PTR [r14], r12	# MEM[base: _109, offset: 0B], _44
 601              		.loc 1 534 9 is_stmt 1 view .LVU173
 602              	.LVL43:
 603              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 604              		.loc 1 534 15 is_stmt 0 view .LVU174
 605 0286 83E03F   		and	eax, 63	# shift,
 606              	.LVL44:
 531:sieve_extend.c ****         copy_word++;
 607              		.loc 1 531 11 is_stmt 1 view .LVU175
 608 0289 4983C608 		add	r14, 8	# ivtmp.126,
 609              	.L39:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 610              		.loc 1 532 9 view .LVU176
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 611              		.loc 1 533 9 view .LVU177
 612              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 613              		.loc 1 533 56 is_stmt 0 view .LVU178
 614 028d 89F1     		mov	ecx, esi	# tmp260, _116
 615 028f 29C1     		sub	ecx, eax	# tmp260, shift
 616              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 617              		.loc 1 533 76 view .LVU179
GAS LISTING /tmp/ccW0oq2B.s 			page 23


 618 0291 C442FBF7 		shrx	r13, r8, rax	# tmp262, pattern, shift
 618      E8
 619              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 620              		.loc 1 533 40 view .LVU180
 621 0296 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp261, pattern, tmp260
 621      D8
 622              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 623              		.loc 1 533 65 view .LVU181
 624 029b 4C09EB   		or	rbx, r13	# _44, tmp262
 625              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 626              		.loc 1 533 29 view .LVU182
 627 029e 49891E   		mov	QWORD PTR [r14], rbx	# MEM[base: _109, offset: 0B], _44
 628              		.loc 1 534 9 is_stmt 1 view .LVU183
 629              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 630              		.loc 1 534 24 is_stmt 0 view .LVU184
 631 02a1 4801D0   		add	rax, rdx	# _45, tmp162
 632              	.LVL45:
 633              		.loc 1 534 24 view .LVU185
 634 02a4 4983C608 		add	r14, 8	# ivtmp.126,
 635              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 636              		.loc 1 534 15 view .LVU186
 637 02a8 83E03F   		and	eax, 63	# shift,
 638              	.LVL46:
 531:sieve_extend.c ****         copy_word++;
 639              		.loc 1 531 11 is_stmt 1 view .LVU187
 640 02ab 4D39F2   		cmp	r10, r14	# _105, ivtmp.126
 641 02ae 0F84EC00 		je	.L59	#,
 641      0000
 642              	.L7:
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 643              		.loc 1 532 9 view .LVU188
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 644              		.loc 1 533 9 view .LVU189
 645              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 646              		.loc 1 533 56 is_stmt 0 view .LVU190
 647 02b4 4189F4   		mov	r12d, esi	# tmp169, _116
 648 02b7 4129C4   		sub	r12d, eax	# tmp169, shift
 649              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 650              		.loc 1 533 76 view .LVU191
 651 02ba C4C2FBF7 		shrx	rbp, r8, rax	# tmp171, pattern, shift
 651      E8
 652              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 653              		.loc 1 534 24 view .LVU192
 654 02bf 4801D0   		add	rax, rdx	# _45, tmp162
 655              	.LVL47:
 656              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 657              		.loc 1 534 15 view .LVU193
 658 02c2 83E03F   		and	eax, 63	# shift,
 659              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 660              		.loc 1 533 56 view .LVU194
 661 02c5 89F3     		mov	ebx, esi	# tmp184, _116
GAS LISTING /tmp/ccW0oq2B.s 			page 24


 662 02c7 29C3     		sub	ebx, eax	# tmp184, shift
 663              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 664              		.loc 1 533 40 view .LVU195
 665 02c9 C4C299F7 		shlx	rcx, r8, r12	# tmp170, pattern, tmp169
 665      C8
 666              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 667              		.loc 1 533 76 view .LVU196
 668 02ce C442FBF7 		shrx	r12, r8, rax	# tmp186, pattern, shift
 668      E0
 669              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 670              		.loc 1 533 65 view .LVU197
 671 02d3 4809E9   		or	rcx, rbp	# _44, tmp171
 672              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 673              		.loc 1 534 24 view .LVU198
 674 02d6 4801D0   		add	rax, rdx	# _45, tmp162
 675              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 676              		.loc 1 534 15 view .LVU199
 677 02d9 83E03F   		and	eax, 63	# shift,
 678              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 679              		.loc 1 533 29 view .LVU200
 680 02dc 49890E   		mov	QWORD PTR [r14], rcx	# MEM[base: _109, offset: 0B], _44
 681              		.loc 1 534 9 is_stmt 1 view .LVU201
 531:sieve_extend.c ****         copy_word++;
 682              		.loc 1 531 11 view .LVU202
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 683              		.loc 1 532 9 view .LVU203
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 684              		.loc 1 533 9 view .LVU204
 685              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 686              		.loc 1 533 56 is_stmt 0 view .LVU205
 687 02df 89F1     		mov	ecx, esi	# tmp191, _116
 688 02e1 29C1     		sub	ecx, eax	# tmp191, shift
 689              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 690              		.loc 1 533 76 view .LVU206
 691 02e3 C4C2FBF7 		shrx	rbp, r8, rax	# tmp193, pattern, shift
 691      E8
 692              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 693              		.loc 1 533 40 view .LVU207
 694 02e8 C442E1F7 		shlx	r13, r8, rbx	# tmp185, pattern, tmp184
 694      E8
 695              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 696              		.loc 1 534 24 view .LVU208
 697 02ed 4801D0   		add	rax, rdx	# _45, tmp162
 698              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 699              		.loc 1 533 65 view .LVU209
 700 02f0 4D09E5   		or	r13, r12	# _44, tmp186
 701              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 702              		.loc 1 534 15 view .LVU210
 703 02f3 83E03F   		and	eax, 63	# shift,
GAS LISTING /tmp/ccW0oq2B.s 			page 25


 704              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 705              		.loc 1 533 29 view .LVU211
 706 02f6 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _109, offset: 0B], _44
 707              		.loc 1 534 9 is_stmt 1 view .LVU212
 531:sieve_extend.c ****         copy_word++;
 708              		.loc 1 531 11 view .LVU213
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 709              		.loc 1 532 9 view .LVU214
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 710              		.loc 1 533 9 view .LVU215
 711              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 712              		.loc 1 533 56 is_stmt 0 view .LVU216
 713 02fa 4189F5   		mov	r13d, esi	# tmp198, _116
 714 02fd 4129C5   		sub	r13d, eax	# tmp198, shift
 715              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 716              		.loc 1 533 40 view .LVU217
 717 0300 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp192, pattern, tmp191
 717      D8
 718              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 719              		.loc 1 533 76 view .LVU218
 720 0305 C4C2FBF7 		shrx	rcx, r8, rax	# tmp200, pattern, shift
 720      C8
 721              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 722              		.loc 1 533 65 view .LVU219
 723 030a 4809EB   		or	rbx, rbp	# _44, tmp193
 724              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 725              		.loc 1 534 24 view .LVU220
 726 030d 4801D0   		add	rax, rdx	# _45, tmp162
 727              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 728              		.loc 1 534 15 view .LVU221
 729 0310 83E03F   		and	eax, 63	# shift,
 730              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 731              		.loc 1 533 29 view .LVU222
 732 0313 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _109, offset: 0B], _44
 733              		.loc 1 534 9 is_stmt 1 view .LVU223
 531:sieve_extend.c ****         copy_word++;
 734              		.loc 1 531 11 view .LVU224
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 735              		.loc 1 532 9 view .LVU225
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 736              		.loc 1 533 9 view .LVU226
 737              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 738              		.loc 1 533 56 is_stmt 0 view .LVU227
 739 0317 89F3     		mov	ebx, esi	# tmp205, _116
 740 0319 29C3     		sub	ebx, eax	# tmp205, shift
 741              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 742              		.loc 1 533 76 view .LVU228
 743 031b C4C2FBF7 		shrx	rbp, r8, rax	# tmp207, pattern, shift
 743      E8
GAS LISTING /tmp/ccW0oq2B.s 			page 26


 744              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 745              		.loc 1 533 40 view .LVU229
 746 0320 C44291F7 		shlx	r12, r8, r13	# tmp199, pattern, tmp198
 746      E0
 747              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 748              		.loc 1 534 24 view .LVU230
 749 0325 4801D0   		add	rax, rdx	# _45, tmp162
 750              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 751              		.loc 1 533 65 view .LVU231
 752 0328 4909CC   		or	r12, rcx	# _44, tmp200
 753              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 754              		.loc 1 534 15 view .LVU232
 755 032b 83E03F   		and	eax, 63	# shift,
 756              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 757              		.loc 1 533 29 view .LVU233
 758 032e 4D896618 		mov	QWORD PTR 24[r14], r12	# MEM[base: _109, offset: 0B], _44
 759              		.loc 1 534 9 is_stmt 1 view .LVU234
 531:sieve_extend.c ****         copy_word++;
 760              		.loc 1 531 11 view .LVU235
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 761              		.loc 1 532 9 view .LVU236
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 762              		.loc 1 533 9 view .LVU237
 763              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 764              		.loc 1 533 56 is_stmt 0 view .LVU238
 765 0332 4189F4   		mov	r12d, esi	# tmp212, _116
 766 0335 4129C4   		sub	r12d, eax	# tmp212, shift
 767              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 768              		.loc 1 533 40 view .LVU239
 769 0338 C442E1F7 		shlx	r13, r8, rbx	# tmp206, pattern, tmp205
 769      E8
 770              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 771              		.loc 1 533 76 view .LVU240
 772 033d C4C2FBF7 		shrx	rbx, r8, rax	# tmp214, pattern, shift
 772      D8
 773              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 774              		.loc 1 533 65 view .LVU241
 775 0342 4909ED   		or	r13, rbp	# _44, tmp207
 776              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 777              		.loc 1 534 24 view .LVU242
 778 0345 4801D0   		add	rax, rdx	# _45, tmp162
 779              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 780              		.loc 1 534 15 view .LVU243
 781 0348 83E03F   		and	eax, 63	# shift,
 782              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 783              		.loc 1 533 29 view .LVU244
 784 034b 4D896E20 		mov	QWORD PTR 32[r14], r13	# MEM[base: _109, offset: 0B], _44
 785              		.loc 1 534 9 is_stmt 1 view .LVU245
 531:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccW0oq2B.s 			page 27


 786              		.loc 1 531 11 view .LVU246
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 787              		.loc 1 532 9 view .LVU247
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 788              		.loc 1 533 9 view .LVU248
 789              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 790              		.loc 1 533 56 is_stmt 0 view .LVU249
 791 034f 4189F5   		mov	r13d, esi	# tmp219, _116
 792 0352 4129C5   		sub	r13d, eax	# tmp219, shift
 793              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 794              		.loc 1 533 40 view .LVU250
 795 0355 C4C299F7 		shlx	rcx, r8, r12	# tmp213, pattern, tmp212
 795      C8
 796              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 797              		.loc 1 533 76 view .LVU251
 798 035a C4C2FBF7 		shrx	rbp, r8, rax	# tmp221, pattern, shift
 798      E8
 799              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 800              		.loc 1 533 65 view .LVU252
 801 035f 4809D9   		or	rcx, rbx	# _44, tmp214
 802              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 803              		.loc 1 534 24 view .LVU253
 804 0362 4801D0   		add	rax, rdx	# _45, tmp162
 805              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 806              		.loc 1 534 15 view .LVU254
 807 0365 83E03F   		and	eax, 63	# shift,
 808              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 809              		.loc 1 533 29 view .LVU255
 810 0368 49894E28 		mov	QWORD PTR 40[r14], rcx	# MEM[base: _109, offset: 0B], _44
 811              		.loc 1 534 9 is_stmt 1 view .LVU256
 531:sieve_extend.c ****         copy_word++;
 812              		.loc 1 531 11 view .LVU257
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 813              		.loc 1 532 9 view .LVU258
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 814              		.loc 1 533 9 view .LVU259
 815              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 816              		.loc 1 533 56 is_stmt 0 view .LVU260
 817 036c 89F1     		mov	ecx, esi	# tmp226, _116
 818 036e 29C1     		sub	ecx, eax	# tmp226, shift
 819              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 820              		.loc 1 533 40 view .LVU261
 821 0370 C44291F7 		shlx	r12, r8, r13	# tmp220, pattern, tmp219
 821      E0
 822 0375 C4C2F1F7 		shlx	rbx, r8, rcx	# tmp227, pattern, tmp226
 822      D8
 823              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 824              		.loc 1 533 65 view .LVU262
 825 037a 4909EC   		or	r12, rbp	# _44, tmp221
GAS LISTING /tmp/ccW0oq2B.s 			page 28


 826              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 827              		.loc 1 533 76 view .LVU263
 828 037d C442FBF7 		shrx	r13, r8, rax	# tmp228, pattern, shift
 828      E8
 829              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 830              		.loc 1 534 24 view .LVU264
 831 0382 4801D0   		add	rax, rdx	# _45, tmp162
 832              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 833              		.loc 1 533 65 view .LVU265
 834 0385 4C09EB   		or	rbx, r13	# _44, tmp228
 835              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 836              		.loc 1 533 29 view .LVU266
 837 0388 4D896630 		mov	QWORD PTR 48[r14], r12	# MEM[base: _109, offset: 0B], _44
 838              		.loc 1 534 9 is_stmt 1 view .LVU267
 531:sieve_extend.c ****         copy_word++;
 839              		.loc 1 531 11 view .LVU268
 532:sieve_extend.c ****         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >> shift);
 840              		.loc 1 532 9 view .LVU269
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 841              		.loc 1 533 9 view .LVU270
 842              	# sieve_extend.c:533:         bitarray[copy_word] = (pattern << (pattern_size-shift)) | (pattern >>
 533:sieve_extend.c ****         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alternative, but faster
 843              		.loc 1 533 29 is_stmt 0 view .LVU271
 844 038c 49895E38 		mov	QWORD PTR 56[r14], rbx	# MEM[base: _109, offset: 0B], _44
 845              		.loc 1 534 9 is_stmt 1 view .LVU272
 846              	.LVL48:
 847              	# sieve_extend.c:534:         shift = (shift + pattern_shift) & ((WORD_SIZE_bitshift-1));  // alter
 848              		.loc 1 534 15 is_stmt 0 view .LVU273
 849 0390 83E03F   		and	eax, 63	# shift,
 850              	.LVL49:
 531:sieve_extend.c ****         copy_word++;
 851              		.loc 1 531 11 is_stmt 1 view .LVU274
 852 0393 4983C640 		add	r14, 64	# ivtmp.126,
 853 0397 4D39F2   		cmp	r10, r14	# _105, ivtmp.126
 854 039a 0F8514FF 		jne	.L7	#,
 854      FFFF
 855              	.L59:
 531:sieve_extend.c ****         copy_word++;
 856              		.loc 1 531 11 is_stmt 0 view .LVU275
 857 03a0 4A8D6C1F 		lea	rbp, -8[rdi+r11]	# prephitmp_124,
 857      F8
 858              	.LVL50:
 859              	.L6:
 535:sieve_extend.c ****     }
 536:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 860              		.loc 1 536 5 is_stmt 1 view .LVU276
 861              	# sieve_extend.c:536:     bitarray[copy_word] &= chopmask(destination_stop);
 862              		.loc 1 536 25 is_stmt 0 view .LVU277
 863 03a5 4921D9   		and	r9, rbx	# tmp173, _44
 864 03a8 4C894D00 		mov	QWORD PTR 0[rbp], r9	#* prephitmp_124, tmp173
 865              	# sieve_extend.c:538: }
 537:sieve_extend.c ****     // debug { printf("...After copies. "); dump_bitarray(bitarray, 4); }
 538:sieve_extend.c **** }
 866              		.loc 1 538 1 view .LVU278
GAS LISTING /tmp/ccW0oq2B.s 			page 29


 867 03ac 5B       		pop	rbx	#
 868              		.cfi_def_cfa_offset 40
 869 03ad 5D       		pop	rbp	#
 870              		.cfi_def_cfa_offset 32
 871 03ae 415C     		pop	r12	#
 872              		.cfi_def_cfa_offset 24
 873 03b0 415D     		pop	r13	#
 874              		.cfi_def_cfa_offset 16
 875 03b2 415E     		pop	r14	#
 876              		.cfi_def_cfa_offset 8
 877 03b4 C3       		ret	
 878              		.cfi_endproc
 879              	.LFE66:
 881 03b5 66662E0F 		.p2align 4
 881      1F840000 
 881      000000
 883              	extendSieve_shiftright_ivdep:
 884              	.LVL51:
 885              	.LFB71:
 539:sieve_extend.c **** 
 540:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 541:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 542:sieve_extend.c **** 
 543:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 544:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 545:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 546:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 547:sieve_extend.c ****     
 548:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 549:sieve_extend.c **** 
 550:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 551:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 552:sieve_extend.c ****         copy_word += size;
 553:sieve_extend.c ****     }
 554:sieve_extend.c **** 
 555:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 556:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 557:sieve_extend.c ****         source_word++;
 558:sieve_extend.c ****         copy_word++;
 559:sieve_extend.c ****     }
 560:sieve_extend.c **** 
 561:sieve_extend.c **** }
 562:sieve_extend.c **** 
 563:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 564:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 565:sieve_extend.c **** 
 566:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 567:sieve_extend.c **** {
 568:sieve_extend.c ****     int i = 0;
 569:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 570:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 571:sieve_extend.c ****     {
 572:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 573:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 574:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 575:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 576:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 30


 577:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 578:sieve_extend.c ****     {
 579:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 580:sieve_extend.c ****     }    
 581:sieve_extend.c **** }
 582:sieve_extend.c **** 
 583:sieve_extend.c **** #define forward_distance 3
 584:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 585:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 586:sieve_extend.c ****    
 587:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 588:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 589:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 590:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 591:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 592:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 593:sieve_extend.c **** 
 594:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 595:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 596:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 597:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 598:sieve_extend.c ****         return; // rapid exit for one word variant
 599:sieve_extend.c ****     }
 600:sieve_extend.c **** 
 601:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 602:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 603:sieve_extend.c ****                                 & keepmask(copy_start);
 604:sieve_extend.c **** 
 605:sieve_extend.c ****     copy_word++;
 606:sieve_extend.c **** 
 607:sieve_extend.c ****     debug printf("..copy distance %ju\n",copy_word - source_word);
 608:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 609:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 610:sieve_extend.c ****         
 611:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 612:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 613:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 614:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 615:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 616:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 617:sieve_extend.c **** 
 618:sieve_extend.c ****         #pragma ivdep 
 619:sieve_extend.c ****         for (counter_t i = 0; (i+forward_distance) < size_word; i+=forward_distance, copy_ptr+=forw
 620:sieve_extend.c ****             #pragma ivdep
 621:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 622:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 623:sieve_extend.c ****             #pragma ivdep
 624:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 625:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 626:sieve_extend.c ****         }
 627:sieve_extend.c **** 
 628:sieve_extend.c ****         size_word = dest_ptr - copy_ptr;
 629:sieve_extend.c ****         #pragma ivdep 
 630:sieve_extend.c ****         for (counter_t i=0; i <= size_word; i++) 
 631:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 632:sieve_extend.c **** 
 633:sieve_extend.c ****         // #pragma GCC ivdep
GAS LISTING /tmp/ccW0oq2B.s 			page 31


 634:sieve_extend.c ****         // for (; i <= size_word; i++) 
 635:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 636:sieve_extend.c ****     }
 637:sieve_extend.c ****     else {
 638:sieve_extend.c ****         register counter_t i = 0;
 639:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 640:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 641:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 642:sieve_extend.c ****         counter_t size_word   = dest_ptr - copy_ptr;
 643:sieve_extend.c ****         for (; i <= size_word; i++) 
 644:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 645:sieve_extend.c ****     }
 646:sieve_extend.c **** 
 647:sieve_extend.c ****     // for (; i <= size_word; i++) 
 648:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 649:sieve_extend.c **** 
 650:sieve_extend.c ****     // for (; i <= size_word; i++) 
 651:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 652:sieve_extend.c **** 
 653:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 654:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 655:sieve_extend.c **** }
 656:sieve_extend.c **** 
 657:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 658:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 659:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 660:sieve_extend.c ****     counter_t distance = 0;
 661:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 664:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 665:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 666:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 667:sieve_extend.c ****         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 669:sieve_extend.c ****         distance += 2;
 670:sieve_extend.c ****     }
 671:sieve_extend.c ****     return distance;
 672:sieve_extend.c **** }
 673:sieve_extend.c **** 
 674:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 675:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 676:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 677:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 678:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 679:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 680:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 681:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 682:sieve_extend.c **** //
 683:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 684:sieve_extend.c **** //    copy_ptr++;
 685:sieve_extend.c **** //    source_ptr++;
 686:sieve_extend.c **** //
 687:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 688:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 689:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 690:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW0oq2B.s 			page 32


 691:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 692:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 693:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 694:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 695:sieve_extend.c **** //
 696:sieve_extend.c **** //        copy_ptr+=3;
 697:sieve_extend.c **** //        source_ptr+=3;
 698:sieve_extend.c **** //    }
 699:sieve_extend.c **** //
 700:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 701:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 702:sieve_extend.c **** //        source_ptr++;
 703:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 704:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 705:sieve_extend.c **** //        copy_ptr++;
 706:sieve_extend.c **** //    }
 707:sieve_extend.c **** //
 708:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 709:sieve_extend.c **** //
 710:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 711:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 712:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 713:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 714:sieve_extend.c **** //         copy_ptr += size;
 715:sieve_extend.c **** //     }
 716:sieve_extend.c **** //
 717:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 718:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 719:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 720:sieve_extend.c **** //        copy_ptr++;
 721:sieve_extend.c **** //        source_ptr++;
 722:sieve_extend.c **** //    }
 723:sieve_extend.c **** //
 724:sieve_extend.c **** //}
 725:sieve_extend.c **** 
 726:sieve_extend.c **** 
 727:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 886              		.loc 1 727 149 is_stmt 1 view -0
 887              		.cfi_startproc
 728:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 888              		.loc 1 728 5 view .LVU280
 729:sieve_extend.c ****    
 730:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 889              		.loc 1 730 5 view .LVU281
 890              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 891              		.loc 1 727 149 is_stmt 0 view .LVU282
 892 03c0 55       		push	rbp	#
 893              		.cfi_def_cfa_offset 16
 894              		.cfi_offset 6, -16
 895              	# sieve_extend.c:731:     const counter_t copy_start = source_start + size;
 731:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 896              		.loc 1 731 21 view .LVU283
 897 03c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 898              	# sieve_extend.c:730:     const counter_t destination_stop_word = wordindex(destination_stop);
 730:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 899              		.loc 1 730 21 view .LVU284
GAS LISTING /tmp/ccW0oq2B.s 			page 33


 900 03c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 901              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 902              		.loc 1 727 149 view .LVU285
 903 03c8 4889E5   		mov	rbp, rsp	#,
 904              		.cfi_def_cfa_register 6
 905 03cb 4157     		push	r15	#
 906              	# sieve_extend.c:732:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 732:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 907              		.loc 1 732 39 view .LVU286
 908 03cd 4D89C2   		mov	r10, r8	# _4, copy_start
 909 03d0 4183E23F 		and	r10d, 63	# _4,
 910              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 911              		.loc 1 727 149 view .LVU287
 912 03d4 4156     		push	r14	#
 913              	# sieve_extend.c:730:     const counter_t destination_stop_word = wordindex(destination_stop);
 730:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 914              		.loc 1 730 21 view .LVU288
 915 03d6 48C1E806 		shr	rax, 6	# destination_stop_word,
 916 03da F7D1     		not	ecx	# tmp308
 917              	.LVL52:
 918              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 919              		.loc 1 727 149 view .LVU289
 920 03dc 4155     		push	r13	#
 921 03de 4154     		push	r12	#
 922              		.cfi_offset 15, -24
 923              		.cfi_offset 14, -32
 924              		.cfi_offset 13, -40
 925              		.cfi_offset 12, -48
 926              	# sieve_extend.c:732:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 927              		.loc 1 732 67 view .LVU290
 928 03e0 4989F4   		mov	r12, rsi	# _5, source_start
 929              	# sieve_extend.c:734:     register counter_t source_word = wordindex(source_start);
 733:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 734:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 930              		.loc 1 734 24 view .LVU291
 931 03e3 48C1EE06 		shr	rsi, 6	# source_start,
 932              	.LVL53:
 933              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 934              		.loc 1 727 149 view .LVU292
 935 03e7 53       		push	rbx	#
 936              	# sieve_extend.c:734:     register counter_t source_word = wordindex(source_start);
 937              		.loc 1 734 24 view .LVU293
 938 03e8 4989F1   		mov	r9, rsi	# source_word, source_start
 939 03eb 4E8D3CCD 		lea	r15, 0[0+r9*8]	# _179,
 939      00000000 
 940              	# sieve_extend.c:727: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 727:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 941              		.loc 1 727 149 view .LVU294
 942 03f3 4883E4E0 		and	rsp, -32	#,
 943              		.cfi_offset 3, -56
 944              	.LVL54:
 731:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 945              		.loc 1 731 5 is_stmt 1 view .LVU295
GAS LISTING /tmp/ccW0oq2B.s 			page 34


 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 946              		.loc 1 732 5 view .LVU296
 947              	# sieve_extend.c:734:     register counter_t source_word = wordindex(source_start);
 948              		.loc 1 734 24 is_stmt 0 view .LVU297
 949 03f7 48897424 		mov	QWORD PTR -32[rsp], rsi	# %sfp, source_word
 949      E0
 950              	# sieve_extend.c:735:     register counter_t copy_word = wordindex(copy_start);
 735:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 951              		.loc 1 735 24 view .LVU298
 952 03fc 4C89C6   		mov	rsi, r8	# copy_start, copy_start
 953 03ff 48C1EE06 		shr	rsi, 6	# copy_start,
 954 0403 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _176,
 954      00000000 
 955              	# sieve_extend.c:732:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 956              		.loc 1 732 67 view .LVU299
 957 040b 4183E43F 		and	r12d, 63	# _5,
 958              	.LVL55:
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 959              		.loc 1 733 5 is_stmt 1 view .LVU300
 734:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 960              		.loc 1 734 5 view .LVU301
 961              		.loc 1 735 5 view .LVU302
 736:sieve_extend.c **** 
 737:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 962              		.loc 1 737 5 view .LVU303
 963              	# sieve_extend.c:732:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 964              		.loc 1 732 31 is_stmt 0 view .LVU304
 965 040f 4D89D1   		mov	r9, r10	# shift, _4
 966              	# sieve_extend.c:730:     const counter_t destination_stop_word = wordindex(destination_stop);
 730:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 967              		.loc 1 730 21 view .LVU305
 968 0412 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 968      F8
 969              	.LVL56:
 730:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 970              		.loc 1 730 21 view .LVU306
 971 0417 4C8D2C1F 		lea	r13, [rdi+rbx]	# _177,
 972              	# sieve_extend.c:732:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 973              		.loc 1 732 31 view .LVU307
 974 041b 4D29E1   		sub	r9, r12	# shift, _5
 975              	.LVL57:
 732:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 976              		.loc 1 732 31 view .LVU308
 977 041e 4D8B7500 		mov	r14, QWORD PTR 0[r13]	# pretmp_178, *_177
 978              	# sieve_extend.c:733:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 979              		.loc 1 733 31 view .LVU309
 980 0422 4983C440 		add	r12, 64	# tmp301,
 981              	.LVL58:
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 982              		.loc 1 733 31 view .LVU310
 983 0426 4E8D1C3F 		lea	r11, [rdi+r15]	# _180,
 984 042a 4D29D4   		sub	r12, r10	# tmp301, _4
 985              	.LVL59:
GAS LISTING /tmp/ccW0oq2B.s 			page 35


 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 986              		.loc 1 733 31 view .LVU311
 987 042d 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, _179
 987      E8
 988 0432 49C7C7FF 		mov	r15, -1	# tmp307,
 988      FFFFFF
 989 0439 C4C2B1F7 		shlx	rax, QWORD PTR [r11], r9	# tmp303, *_180, shift
 989      03
 990 043e C4429BF7 		shrx	r8, r14, r12	# tmp305, pretmp_178, shift_flipped
 990      C6
 991              	.LVL60:
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 992              		.loc 1 733 31 view .LVU312
 993 0443 C442A9F7 		shlx	r10, r15, r10	# _189, tmp307, _4
 993      D7
 994              	.LVL61:
 733:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 995              		.loc 1 733 31 view .LVU313
 996 0448 44894C24 		mov	DWORD PTR -12[rsp], r9d	# %sfp, shift
 996      F4
 997 044d 4C09C0   		or	rax, r8	# _186, tmp305
 998 0450 C442F3F7 		shrx	r15, r15, rcx	# _193, tmp307, tmp308
 998      FF
 999              	# sieve_extend.c:737:     if (copy_word >= destination_stop_word) { 
 1000              		.loc 1 737 8 view .LVU314
 1001 0455 48397424 		cmp	QWORD PTR -8[rsp], rsi	# %sfp, copy_word
 1001      F8
 1002 045a 0F865009 		jbe	.L260	#,
 1002      0000
 1003              	# sieve_extend.c:746:                                 & keepmask(copy_start);
 738:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 739:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 740:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 741:sieve_extend.c ****         return; // rapid exit for one word variant
 742:sieve_extend.c ****     }
 743:sieve_extend.c **** 
 744:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 745:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 746:sieve_extend.c ****                                 & keepmask(copy_start);
 1004              		.loc 1 746 33 view .LVU315
 1005 0460 4C21D0   		and	rax, r10	# tmp314, _189
 1006              	# sieve_extend.c:744:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 744:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1007              		.loc 1 744 25 view .LVU316
 1008 0463 4C09F0   		or	rax, r14	# tmp315, pretmp_178
 1009 0466 49894500 		mov	QWORD PTR 0[r13], rax	# *_177, tmp315
 1010 046a 4589E0   		mov	r8d, r12d	# _184, shift_flipped
 744:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1011              		.loc 1 744 5 is_stmt 1 view .LVU317
 747:sieve_extend.c **** 
 748:sieve_extend.c ****     copy_word++;
 1012              		.loc 1 748 5 view .LVU318
 1013              	# sieve_extend.c:748:     copy_word++;
 1014              		.loc 1 748 14 is_stmt 0 view .LVU319
 1015 046d 4C8D7601 		lea	r14, 1[rsi]	# copy_word,
 1016              	.LVL62:
 749:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 36


 750:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 1017              		.loc 1 750 5 is_stmt 1 view .LVU320
 751:sieve_extend.c **** 
 752:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1018              		.loc 1 752 5 view .LVU321
 1019              	# sieve_extend.c:752:     if (size >= WORD_SIZE_counter) {
 1020              		.loc 1 752 8 is_stmt 0 view .LVU322
 1021 0471 4883FA3F 		cmp	rdx, 63	# size,
 1022 0475 0F87AD03 		ja	.L261	#,
 1022      0000
 753:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 754:sieve_extend.c ****         #pragma ivdep
 755:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 756:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 757:sieve_extend.c ****         }
 758:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 759:sieve_extend.c ****     }
 760:sieve_extend.c **** 
 761:sieve_extend.c ****     #pragma ivdep
 762:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1023              		.loc 1 762 12 is_stmt 1 discriminator 1 view .LVU323
 1024              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1025              		.loc 1 762 5 is_stmt 0 discriminator 1 view .LVU324
 1026 047b 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1026      F8
 1027              	.LVL63:
 1028              		.loc 1 762 5 discriminator 1 view .LVU325
 1029 0480 4C39F2   		cmp	rdx, r14	# destination_stop_word, copy_word
 1030 0483 0F828503 		jb	.L76	#,
 1030      0000
 1031 0489 4C8B5C24 		mov	r11, QWORD PTR -32[rsp]	# source_word, %sfp
 1031      E0
 1032 048e 488D4A01 		lea	rcx, 1[rdx]	# _198,
 1033 0492 4989D5   		mov	r13, rdx	# _173, destination_stop_word
 1034 0495 4A8D14F5 		lea	rdx, 0[0+r14*8]	# _166,
 1034      00000000 
 1035 049d 4A8D04DD 		lea	rax, 0[0+r11*8]	# _225,
 1035      00000000 
 1036 04a5 4C8D5220 		lea	r10, 32[rdx]	# tmp380,
 1037 04a9 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, _198
 1037      E8
 1038 04ae 4D29F5   		sub	r13, r14	# _173, copy_word
 1039 04b1 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _168,
 1039      28000000 
 1040 04b9 4C39D0   		cmp	rax, r10	# _225, tmp380
 1041 04bc 410F9DC3 		setge	r11b	#, tmp382
 1042 04c0 4839CA   		cmp	rdx, rcx	# _166, _168
 1043 04c3 410F9DC2 		setge	r10b	#, tmp384
 1044 04c7 4508D3   		or	r11b, r10b	# tmp382, tmp384
 1045 04ca 488D5E02 		lea	rbx, 2[rsi]	# _175,
 1046 04ce 0F84C506 		je	.L68	#,
 1046      0000
 1047 04d4 4983FD03 		cmp	r13, 3	# _173,
 1048 04d8 410F97C3 		seta	r11b	#, tmp387
 1049 04dc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1049      E8
 1050 04e1 410F96C2 		setbe	r10b	#, tmp389
GAS LISTING /tmp/ccW0oq2B.s 			page 37


 1051 04e5 4584D3   		test	r11b, r10b	# tmp387, tmp389
 1052 04e8 0F84AB06 		je	.L68	#,
 1052      0000
 1053 04ee 4C8B5424 		mov	r10, QWORD PTR -8[rsp]	# tmp391, %sfp
 1053      F8
 1054 04f3 C5F96E4C 		vmovd	xmm1, DWORD PTR -12[rsp]	# _182, %sfp
 1054      24F4
 1055 04f9 4929F2   		sub	r10, rsi	# tmp391, copy_word
 1056 04fc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1056      E8
 1057 0501 BE010000 		mov	esi, 1	# tmp392,
 1057      00
 1058 0506 4C0F47D6 		cmova	r10, rsi	# tmp391,, niters.133, tmp392
 1059 050a C4C1796E 		vmovd	xmm0, r12d	# _184, _184
 1059      C4
 1060 050f 4D89D3   		mov	r11, r10	# bnd.134, niters.133
 1061 0512 49C1EB02 		shr	r11, 2	# bnd.134,
 1062 0516 49C1E305 		sal	r11, 5	# bnd.134,
 1063 051a 4D8D43E0 		lea	r8, -32[r11]	# tmp446,
 1064 051e 49C1E805 		shr	r8, 5	# tmp444,
 1065 0522 49FFC0   		inc	r8	# tmp447
 1066 0525 488D740F 		lea	rsi, -32[rdi+rcx]	# vectp.143,
 1066      E0
 1067 052a 4801F8   		add	rax, rdi	# vectp.139, bitarray
 1068 052d 4801FA   		add	rdx, rdi	# vectp.148, bitarray
 1069              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1070              		.loc 1 762 5 view .LVU326
 1071 0530 31C9     		xor	ecx, ecx	# ivtmp.178
 1072 0532 4183E007 		and	r8d, 7	# tmp448,
 1073 0536 0F841301 		je	.L77	#,
 1073      0000
 1074 053c 4983F801 		cmp	r8, 1	# tmp448,
 1075 0540 0F84E100 		je	.L194	#,
 1075      0000
 1076 0546 4983F802 		cmp	r8, 2	# tmp448,
 1077 054a 0F84B800 		je	.L195	#,
 1077      0000
 1078 0550 4983F803 		cmp	r8, 3	# tmp448,
 1079 0554 0F848E00 		je	.L196	#,
 1079      0000
 1080 055a 4983F804 		cmp	r8, 4	# tmp448,
 1081 055e 7469     		je	.L197	#,
 1082 0560 4983F805 		cmp	r8, 5	# tmp448,
 1083 0564 7443     		je	.L198	#,
 1084 0566 4983F806 		cmp	r8, 6	# tmp448,
 1085 056a 741D     		je	.L199	#,
 1086              	.LVL64:
 763:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1087              		.loc 1 763 9 is_stmt 1 view .LVU327
 1088              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1089              		.loc 1 763 99 is_stmt 0 view .LVU328
 1090 056c C5FE6F36 		vmovdqu	ymm6, YMMWORD PTR [rsi]	# tmp929, MEM[base: vectp.143_194, index: ivtmp.178_320, offset: 0
 1091              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1092              		.loc 1 763 54 view .LVU329
 1093 0570 C5FE6F38 		vmovdqu	ymm7, YMMWORD PTR [rax]	# tmp930, MEM[base: vectp.139_2, index: ivtmp.178_320, offset: 0B]
 1094              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1095              		.loc 1 763 99 view .LVU330
GAS LISTING /tmp/ccW0oq2B.s 			page 38


 1096 0574 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.145, tmp929, _182
 1097              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1098              		.loc 1 763 54 view .LVU331
 1099 0578 C5C5D3D8 		vpsrlq	ymm3, ymm7, xmm0	# vect__62.141, tmp930, _184
 1100 057c B9200000 		mov	ecx, 32	# ivtmp.178,
 1100      00
 1101              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1102              		.loc 1 763 72 view .LVU332
 1103 0581 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.146, vect__67.145, vect__62.141
 1104              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1105              		.loc 1 763 29 view .LVU333
 1106 0585 C5FE7F22 		vmovdqu	YMMWORD PTR [rdx], ymm4	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], vect_
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1107              		.loc 1 762 48 is_stmt 1 view .LVU334
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1108              		.loc 1 762 12 view .LVU335
 1109              	.L199:
 1110              		.loc 1 763 9 view .LVU336
 1111              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1112              		.loc 1 763 99 is_stmt 0 view .LVU337
 1113 0589 C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rcx]	# tmp931, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1113      0E
 1114              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1115              		.loc 1 763 54 view .LVU338
 1116 058e C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rax+rcx]	# tmp932, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1116      08
 1117              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1118              		.loc 1 763 99 view .LVU339
 1119 0593 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.145, tmp931, _182
 1120              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1121              		.loc 1 763 54 view .LVU340
 1122 0597 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__62.141, tmp932, _184
 1123              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1124              		.loc 1 763 72 view .LVU341
 1125 059b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.146, vect__67.145, vect__62.141
 1125      DA
 1126              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1127              		.loc 1 763 29 view .LVU342
 1128 05a0 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm11	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1128      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1129              		.loc 1 762 48 is_stmt 1 view .LVU343
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1130              		.loc 1 762 12 view .LVU344
 1131 05a5 4883C120 		add	rcx, 32	# ivtmp.178,
 1132              	.L198:
 1133              		.loc 1 763 9 view .LVU345
 1134              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1135              		.loc 1 763 99 is_stmt 0 view .LVU346
 1136 05a9 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rcx]	# tmp933, MEM[base: vectp.143_194, index: ivtmp.178_320, offs
 1136      0E
 1137              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1138              		.loc 1 763 54 view .LVU347
 1139 05ae C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rax+rcx]	# tmp934, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1139      08
 1140              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1141              		.loc 1 763 99 view .LVU348
GAS LISTING /tmp/ccW0oq2B.s 			page 39


 1142 05b3 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__67.145, tmp933, _182
 1143              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1144              		.loc 1 763 54 view .LVU349
 1145 05b7 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__62.141, tmp934, _184
 1146              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1147              		.loc 1 763 72 view .LVU350
 1148 05bb C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.146, vect__67.145, vect__62.141
 1148      F7
 1149              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1150              		.loc 1 763 29 view .LVU351
 1151 05c0 C5FE7F34 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm6	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1151      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1152              		.loc 1 762 48 is_stmt 1 view .LVU352
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1153              		.loc 1 762 12 view .LVU353
 1154 05c5 4883C120 		add	rcx, 32	# ivtmp.178,
 1155              	.L197:
 1156              		.loc 1 763 9 view .LVU354
 1157              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1158              		.loc 1 763 99 is_stmt 0 view .LVU355
 1159 05c9 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rcx]	# tmp935, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1159      0E
 1160              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1161              		.loc 1 763 54 view .LVU356
 1162 05ce C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp936, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1162      08
 1163              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1164              		.loc 1 763 99 view .LVU357
 1165 05d3 C5EDF3F9 		vpsllq	ymm7, ymm2, xmm1	# vect__67.145, tmp935, _182
 1166              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1167              		.loc 1 763 54 view .LVU358
 1168 05d7 C5E5D3E0 		vpsrlq	ymm4, ymm3, xmm0	# vect__62.141, tmp936, _184
 1169              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1170              		.loc 1 763 72 view .LVU359
 1171 05db C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.146, vect__67.145, vect__62.141
 1172              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1173              		.loc 1 763 29 view .LVU360
 1174 05df C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm5	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1174      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1175              		.loc 1 762 48 is_stmt 1 view .LVU361
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1176              		.loc 1 762 12 view .LVU362
 1177 05e4 4883C120 		add	rcx, 32	# ivtmp.178,
 1178              	.L196:
 1179              		.loc 1 763 9 view .LVU363
 1180              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1181              		.loc 1 763 99 is_stmt 0 view .LVU364
 1182 05e8 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rcx]	# tmp937, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1182      0E
 1183              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1184              		.loc 1 763 54 view .LVU365
 1185 05ed C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rax+rcx]	# tmp938, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1185      08
 1186              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1187              		.loc 1 763 99 view .LVU366
GAS LISTING /tmp/ccW0oq2B.s 			page 40


 1188 05f2 C53DF3C9 		vpsllq	ymm9, ymm8, xmm1	# vect__67.145, tmp937, _182
 1189              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1190              		.loc 1 763 54 view .LVU367
 1191 05f6 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__62.141, tmp938, _184
 1192              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1193              		.loc 1 763 72 view .LVU368
 1194 05fa C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.146, vect__67.145, vect__62.141
 1194      E3
 1195              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1196              		.loc 1 763 29 view .LVU369
 1197 05ff C57E7F24 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm12	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1197      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1198              		.loc 1 762 48 is_stmt 1 view .LVU370
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1199              		.loc 1 762 12 view .LVU371
 1200 0604 4883C120 		add	rcx, 32	# ivtmp.178,
 1201              	.L195:
 1202              		.loc 1 763 9 view .LVU372
 1203              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1204              		.loc 1 763 99 is_stmt 0 view .LVU373
 1205 0608 C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rcx]	# tmp939, MEM[base: vectp.143_194, index: ivtmp.178_320, offs
 1205      0E
 1206              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1207              		.loc 1 763 54 view .LVU374
 1208 060d C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rax+rcx]	# tmp940, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1208      08
 1209              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1210              		.loc 1 763 99 view .LVU375
 1211 0612 C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__67.145, tmp939, _182
 1212              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1213              		.loc 1 763 54 view .LVU376
 1214 0616 C585D3F0 		vpsrlq	ymm6, ymm15, xmm0	# vect__62.141, tmp940, _184
 1215              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1216              		.loc 1 763 72 view .LVU377
 1217 061a C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.146, vect__67.145, vect__62.141
 1218              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1219              		.loc 1 763 29 view .LVU378
 1220 061e C5FE7F14 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm2	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1220      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1221              		.loc 1 762 48 is_stmt 1 view .LVU379
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1222              		.loc 1 762 12 view .LVU380
 1223 0623 4883C120 		add	rcx, 32	# ivtmp.178,
 1224              	.L194:
 1225              		.loc 1 763 9 view .LVU381
 1226              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1227              		.loc 1 763 99 is_stmt 0 view .LVU382
 1228 0627 C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rsi+rcx]	# tmp941, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1228      0E
 1229              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1230              		.loc 1 763 54 view .LVU383
 1231 062c C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rax+rcx]	# tmp942, MEM[base: vectp.139_2, index: ivtmp.178_320, offset:
 1231      08
 1232              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1233              		.loc 1 763 99 view .LVU384
GAS LISTING /tmp/ccW0oq2B.s 			page 41


 1234 0631 C5C5F3E1 		vpsllq	ymm4, ymm7, xmm1	# vect__67.145, tmp941, _182
 1235              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1236              		.loc 1 763 54 view .LVU385
 1237 0635 C5E5D3E8 		vpsrlq	ymm5, ymm3, xmm0	# vect__62.141, tmp942, _184
 1238              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1239              		.loc 1 763 72 view .LVU386
 1240 0639 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.146, vect__67.145, vect__62.141
 1241              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1242              		.loc 1 763 29 view .LVU387
 1243 063d C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm8	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], v
 1243      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1244              		.loc 1 762 48 is_stmt 1 view .LVU388
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1245              		.loc 1 762 12 view .LVU389
 1246 0642 4883C120 		add	rcx, 32	# ivtmp.178,
 1247 0646 4C39D9   		cmp	rcx, r11	# ivtmp.178, _322
 1248 0649 0F842601 		je	.L244	#,
 1248      0000
 1249              	.L77:
 1250              		.loc 1 763 9 discriminator 2 view .LVU390
 1251              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1252              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU391
 1253 064f C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rcx]	# tmp875, MEM[base: vectp.143_194, index: ivtmp.178_320, offse
 1253      0E
 1254              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1255              		.loc 1 763 54 discriminator 2 view .LVU392
 1256 0654 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rax+rcx]	# tmp876, MEM[base: vectp.139_2, index: ivtmp.178_320, offset
 1256      08
 1257              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1258              		.loc 1 763 99 discriminator 2 view .LVU393
 1259 0659 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__67.145, tmp875, _182
 1260              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1261              		.loc 1 763 54 discriminator 2 view .LVU394
 1262 065d C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__62.141, tmp876, _184
 1263              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1264              		.loc 1 763 72 discriminator 2 view .LVU395
 1265 0661 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.146, vect__67.145, vect__62.141
 1265      EC
 1266              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1267              		.loc 1 763 29 discriminator 2 view .LVU396
 1268 0666 C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rcx], ymm13	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B], 
 1268      0A
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1269              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU397
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1270              		.loc 1 762 12 discriminator 2 view .LVU398
 1271              		.loc 1 763 9 discriminator 2 view .LVU399
 1272              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1273              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU400
 1274 066b C57E6F74 		vmovdqu	ymm14, YMMWORD PTR 32[rsi+rcx]	# tmp877, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1274      0E20
 1275              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1276              		.loc 1 763 54 discriminator 2 view .LVU401
 1277 0671 C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rax+rcx]	# tmp878, MEM[base: vectp.139_2, index: ivtmp.178_320, offse
 1277      0820
 1278              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 42


 1279              		.loc 1 763 99 discriminator 2 view .LVU402
 1280 0677 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__67.145, tmp877, _182
 1281              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1282              		.loc 1 763 54 discriminator 2 view .LVU403
 1283 067b C5CDD3D0 		vpsrlq	ymm2, ymm6, xmm0	# vect__62.141, tmp878, _184
 1284              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1285              		.loc 1 763 72 discriminator 2 view .LVU404
 1286 067f C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.146, vect__67.145, vect__62.141
 1287              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1288              		.loc 1 763 29 discriminator 2 view .LVU405
 1289 0683 C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rdx+rcx], ymm7	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B],
 1289      0A20
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1290              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU406
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1291              		.loc 1 762 12 discriminator 2 view .LVU407
 1292              		.loc 1 763 9 discriminator 2 view .LVU408
 1293              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1294              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU409
 1295 0689 C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rsi+rcx]	# tmp879, MEM[base: vectp.143_194, index: ivtmp.178_320, off
 1295      0E40
 1296              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1297              		.loc 1 763 54 discriminator 2 view .LVU410
 1298 068f C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rax+rcx]	# tmp880, MEM[base: vectp.139_2, index: ivtmp.178_320, offse
 1298      0840
 1299              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1300              		.loc 1 763 99 discriminator 2 view .LVU411
 1301 0695 C5DDF3E9 		vpsllq	ymm5, ymm4, xmm1	# vect__67.145, tmp879, _182
 1302              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1303              		.loc 1 763 54 discriminator 2 view .LVU412
 1304 0699 C565D3C0 		vpsrlq	ymm8, ymm3, xmm0	# vect__62.141, tmp880, _184
 1305              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1306              		.loc 1 763 72 discriminator 2 view .LVU413
 1307 069d C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.146, vect__67.145, vect__62.141
 1307      C8
 1308              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1309              		.loc 1 763 29 discriminator 2 view .LVU414
 1310 06a2 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rdx+rcx], ymm9	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B],
 1310      0A40
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1311              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU415
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1312              		.loc 1 762 12 discriminator 2 view .LVU416
 1313              		.loc 1 763 9 discriminator 2 view .LVU417
 1314              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1315              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU418
 1316 06a8 C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 96[rsi+rcx]	# tmp881, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1316      0E60
 1317              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1318              		.loc 1 763 54 discriminator 2 view .LVU419
 1319 06ae C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rax+rcx]	# tmp882, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1319      0860
 1320              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1321              		.loc 1 763 99 discriminator 2 view .LVU420
 1322 06b4 C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__67.145, tmp881, _182
 1323              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1324              		.loc 1 763 54 discriminator 2 view .LVU421
GAS LISTING /tmp/ccW0oq2B.s 			page 43


 1325 06b8 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__62.141, tmp882, _184
 1326              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1327              		.loc 1 763 72 discriminator 2 view .LVU422
 1328 06bc C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.146, vect__67.145, vect__62.141
 1328      F5
 1329              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1330              		.loc 1 763 29 discriminator 2 view .LVU423
 1331 06c1 C57E7F74 		vmovdqu	YMMWORD PTR 96[rdx+rcx], ymm14	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
 1331      0A60
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1332              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU424
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1333              		.loc 1 762 12 discriminator 2 view .LVU425
 1334              		.loc 1 763 9 discriminator 2 view .LVU426
 1335              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1336              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU427
 1337 06c7 C57E6FBC 		vmovdqu	ymm15, YMMWORD PTR 128[rsi+rcx]	# tmp883, MEM[base: vectp.143_194, index: ivtmp.178_320, o
 1337      0E800000 
 1337      00
 1338              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1339              		.loc 1 763 54 discriminator 2 view .LVU428
 1340 06d0 C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rax+rcx]	# tmp884, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1340      08800000 
 1340      00
 1341              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1342              		.loc 1 763 99 discriminator 2 view .LVU429
 1343 06d9 C585F3F1 		vpsllq	ymm6, ymm15, xmm1	# vect__67.145, tmp883, _182
 1344              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1345              		.loc 1 763 54 discriminator 2 view .LVU430
 1346 06dd C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__62.141, tmp884, _184
 1347              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1348              		.loc 1 763 72 discriminator 2 view .LVU431
 1349 06e1 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.146, vect__67.145, vect__62.141
 1350              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1351              		.loc 1 763 29 discriminator 2 view .LVU432
 1352 06e5 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rdx+rcx], ymm4	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
 1352      0A800000 
 1352      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1353              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU433
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1354              		.loc 1 762 12 discriminator 2 view .LVU434
 1355              		.loc 1 763 9 discriminator 2 view .LVU435
 1356              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1357              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU436
 1358 06ee C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 160[rsi+rcx]	# tmp885, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1358      0EA00000 
 1358      00
 1359              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1360              		.loc 1 763 54 discriminator 2 view .LVU437
 1361 06f7 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rax+rcx]	# tmp886, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1361      08A00000 
 1361      00
 1362              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1363              		.loc 1 763 99 discriminator 2 view .LVU438
 1364 0700 C555F3C1 		vpsllq	ymm8, ymm5, xmm1	# vect__67.145, tmp885, _182
 1365              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 44


 1366              		.loc 1 763 54 discriminator 2 view .LVU439
 1367 0704 C565D3C8 		vpsrlq	ymm9, ymm3, xmm0	# vect__62.141, tmp886, _184
 1368              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1369              		.loc 1 763 72 discriminator 2 view .LVU440
 1370 0708 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.146, vect__67.145, vect__62.141
 1370      D1
 1371              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1372              		.loc 1 763 29 discriminator 2 view .LVU441
 1373 070d C57E7F94 		vmovdqu	YMMWORD PTR 160[rdx+rcx], ymm10	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B
 1373      0AA00000 
 1373      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1374              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU442
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1375              		.loc 1 762 12 discriminator 2 view .LVU443
 1376              		.loc 1 763 9 discriminator 2 view .LVU444
 1377              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1378              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU445
 1379 0716 C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 192[rsi+rcx]	# tmp887, MEM[base: vectp.143_194, index: ivtmp.178_320, o
 1379      0EC00000 
 1379      00
 1380              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1381              		.loc 1 763 54 discriminator 2 view .LVU446
 1382 071f C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rax+rcx]	# tmp888, MEM[base: vectp.139_2, index: ivtmp.178_320, off
 1382      08C00000 
 1382      00
 1383              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1384              		.loc 1 763 99 discriminator 2 view .LVU447
 1385 0728 C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__67.145, tmp887, _182
 1386              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1387              		.loc 1 763 54 discriminator 2 view .LVU448
 1388 072c C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__62.141, tmp888, _184
 1389              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1390              		.loc 1 763 72 discriminator 2 view .LVU449
 1391 0730 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.146, vect__67.145, vect__62.141
 1391      FE
 1392              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1393              		.loc 1 763 29 discriminator 2 view .LVU450
 1394 0735 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rdx+rcx], ymm15	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B
 1394      0AC00000 
 1394      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1395              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU451
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1396              		.loc 1 762 12 discriminator 2 view .LVU452
 1397              		.loc 1 763 9 discriminator 2 view .LVU453
 1398              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1399              		.loc 1 763 99 is_stmt 0 discriminator 2 view .LVU454
 1400 073e C5FE6FB4 		vmovdqu	ymm6, YMMWORD PTR 224[rsi+rcx]	# tmp889, MEM[base: vectp.143_194, index: ivtmp.178_320, of
 1400      0EE00000 
 1400      00
 1401              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1402              		.loc 1 763 54 discriminator 2 view .LVU455
 1403 0747 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rax+rcx]	# tmp890, MEM[base: vectp.139_2, index: ivtmp.178_320, offs
 1403      08E00000 
 1403      00
 1404              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 45


 1405              		.loc 1 763 99 discriminator 2 view .LVU456
 1406 0750 C5CDF3D1 		vpsllq	ymm2, ymm6, xmm1	# vect__67.145, tmp889, _182
 1407              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1408              		.loc 1 763 54 discriminator 2 view .LVU457
 1409 0754 C5C5D3E0 		vpsrlq	ymm4, ymm7, xmm0	# vect__62.141, tmp890, _184
 1410              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1411              		.loc 1 763 72 discriminator 2 view .LVU458
 1412 0758 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.146, vect__67.145, vect__62.141
 1413              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1414              		.loc 1 763 29 discriminator 2 view .LVU459
 1415 075c C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rdx+rcx], ymm5	# MEM[base: vectp.148_31, index: ivtmp.178_320, offset: 0B]
 1415      0AE00000 
 1415      00
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1416              		.loc 1 762 48 is_stmt 1 discriminator 2 view .LVU460
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1417              		.loc 1 762 12 discriminator 2 view .LVU461
 1418 0765 4881C100 		add	rcx, 256	# ivtmp.178,
 1418      010000
 1419 076c 4C39D9   		cmp	rcx, r11	# ivtmp.178, _322
 1420 076f 0F85DAFE 		jne	.L77	#,
 1420      FFFF
 1421              	.L244:
 1422 0775 488B7424 		mov	rsi, QWORD PTR -32[rsp]	# source_word, %sfp
 1422      E0
 1423 077a 4C89D2   		mov	rdx, r10	# niters_vector_mult_vf.135, niters.133
 1424 077d 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.135,
 1425 0781 4901D6   		add	r14, rdx	# tmp.136, niters_vector_mult_vf.135
 1426 0784 4801D6   		add	rsi, rdx	# source_word, niters_vector_mult_vf.135
 1427 0787 4C39D2   		cmp	rdx, r10	# niters_vector_mult_vf.135, niters.133
 1428 078a 0F845006 		je	.L257	#,
 1428      0000
 1429              	.LVL65:
 1430              		.loc 1 763 9 view .LVU462
 1431              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1432              		.loc 1 762 5 is_stmt 0 view .LVU463
 1433 0790 4C8B4424 		mov	r8, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1433      F8
 1434              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 763 99 view .LVU464
 1436 0795 C4E2B1F7 		shlx	rax, QWORD PTR 8[rdi+rsi*8], r9	# tmp404, *_66, shift
 1436      44F708
 1437              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 763 54 view .LVU465
 1439 079c C4629BF7 		shrx	r11, QWORD PTR [rdi+rsi*8], r12	# tmp406, *_61, shift_flipped
 1439      1CF7
 1440              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1441              		.loc 1 762 57 view .LVU466
 1442 07a2 498D5601 		lea	rdx, 1[r14]	# copy_word,
 1443              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 763 72 view .LVU467
 1445 07a6 4C09D8   		or	rax, r11	# tmp408, tmp406
 1446 07a9 4A8904F7 		mov	QWORD PTR [rdi+r14*8], rax	# *_70, tmp408
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1447              		.loc 1 762 48 is_stmt 1 view .LVU468
GAS LISTING /tmp/ccW0oq2B.s 			page 46


 1448              	.LVL66:
 1449              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 763 83 is_stmt 0 view .LVU469
 1451 07ad 4C8D5601 		lea	r10, 1[rsi]	# _64,
 1452              	.LVL67:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1453              		.loc 1 762 12 is_stmt 1 view .LVU470
 1454              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1455              		.loc 1 762 5 is_stmt 0 view .LVU471
 1456 07b1 4939D0   		cmp	r8, rdx	# destination_stop_word, copy_word
 1457 07b4 0F822606 		jb	.L257	#,
 1457      0000
 1458              		.loc 1 763 9 is_stmt 1 view .LVU472
 1459              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1460              		.loc 1 763 54 is_stmt 0 view .LVU473
 1461 07ba 4A8B0CD7 		mov	rcx, QWORD PTR [rdi+r10*8]	# *_49, *_49
 1462              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1463              		.loc 1 763 99 view .LVU474
 1464 07be C4A2B1F7 		shlx	rax, QWORD PTR 8[rdi+r10*8], r9	# tmp409, *_54, shift
 1464      44D708
 1465              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1466              		.loc 1 762 57 view .LVU475
 1467 07c5 4983C602 		add	r14, 2	# copy_word,
 1468              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1469              		.loc 1 763 54 view .LVU476
 1470 07c9 C4629BF7 		shrx	r10, rcx, r12	# tmp411, *_49, shift_flipped
 1470      D1
 1471              	.LVL68:
 1472              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 763 72 view .LVU477
 1474 07ce 4C09D0   		or	rax, r10	# tmp413, tmp411
 1475 07d1 488904D7 		mov	QWORD PTR [rdi+rdx*8], rax	# *_58, tmp413
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1476              		.loc 1 762 48 is_stmt 1 view .LVU478
 1477              	.LVL69:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1478              		.loc 1 762 12 view .LVU479
 1479              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 763 83 is_stmt 0 view .LVU480
 1481 07d5 4883C602 		add	rsi, 2	# _52,
 1482              	.LVL70:
 1483              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1484              		.loc 1 762 5 view .LVU481
 1485 07d9 4D39F0   		cmp	r8, r14	# destination_stop_word, copy_word
 1486 07dc 0F82FE05 		jb	.L257	#,
 1486      0000
 1487              		.loc 1 763 9 is_stmt 1 view .LVU482
 1488              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1489              		.loc 1 763 99 is_stmt 0 view .LVU483
 1490 07e2 C462B1F7 		shlx	r9, QWORD PTR 8[rdi+rsi*8], r9	# tmp414, *_122, shift
 1490      4CF708
 1491              	.LVL71:
 1492              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1493              		.loc 1 763 54 view .LVU484
GAS LISTING /tmp/ccW0oq2B.s 			page 47


 1494 07e9 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_127, *_127
 1495              	.LVL72:
 1496              		.loc 1 763 54 view .LVU485
 1497 07ed C4629BF7 		shrx	r12, rsi, r12	# tmp416, *_127, shift_flipped
 1497      E6
 1498              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1499              		.loc 1 763 72 view .LVU486
 1500 07f2 4D09E1   		or	r9, r12	# tmp418, tmp416
 1501 07f5 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# *_118, tmp418
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1502              		.loc 1 762 48 is_stmt 1 view .LVU487
 1503              	.LVL73:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1504              		.loc 1 762 12 view .LVU488
 1505 07f9 C5F877   		vzeroupper
 1506              	.LVL74:
 1507              	.L81:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1508              		.loc 1 762 12 is_stmt 0 view .LVU489
 1509 07fc 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# _175, %sfp
 1509      E8
 1510 0801 41BE0000 		mov	r14d, 0	# tmp403,
 1510      0000
 1511 0807 4D0F46F5 		cmovbe	r14, r13	# _173,, tmp402
 1512 080b 4901DE   		add	r14, rbx	# copy_word, _175
 1513              	.L76:
 764:sieve_extend.c ****     }
 765:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1514              		.loc 1 765 5 is_stmt 1 view .LVU490
 1515              	# sieve_extend.c:765:     bitarray[copy_word] &= chopmask(destination_stop);
 1516              		.loc 1 765 25 is_stmt 0 view .LVU491
 1517 080e 4E213CF7 		and	QWORD PTR [rdi+r14*8], r15	# *_72, _193
 1518              	# sieve_extend.c:767: }
 766:sieve_extend.c **** 
 767:sieve_extend.c **** }
 1519              		.loc 1 767 1 view .LVU492
 1520 0812 488D65D8 		lea	rsp, -40[rbp]	#,
 1521 0816 5B       		pop	rbx	#
 1522 0817 415C     		pop	r12	#
 1523 0819 415D     		pop	r13	#
 1524 081b 415E     		pop	r14	#
 1525 081d 415F     		pop	r15	#
 1526 081f 5D       		pop	rbp	#
 1527              		.cfi_remember_state
 1528              		.cfi_def_cfa 7, 8
 1529 0820 C3       		ret	
 1530              	.LVL75:
 1531              		.p2align 4,,10
 1532 0821 0F1F8000 		.p2align 3
 1532      000000
 1533              	.L261:
 1534              		.cfi_restore_state
 1535              	.LBB274:
 753:sieve_extend.c ****         #pragma ivdep
 1536              		.loc 1 753 9 is_stmt 1 view .LVU493
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1537              		.loc 1 755 9 view .LVU494
GAS LISTING /tmp/ccW0oq2B.s 			page 48


 1538              	.LBB275:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1539              		.loc 1 755 14 view .LVU495
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1540              		.loc 1 755 40 view .LVU496
 1541              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1542              		.loc 1 755 9 is_stmt 0 view .LVU497
 1543 0828 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1543      F8
 1544 082d 488B4424 		mov	rax, QWORD PTR -32[rsp]	# source_word, %sfp
 1544      E0
 1545 0832 4C29F1   		sub	rcx, r14	# loop_distance, copy_word
 1546 0835 0F844903 		je	.L72	#,
 1546      0000
 1547 083b 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1547      E8
 1548 0840 488D4308 		lea	rax, 8[rbx]	# tmp319,
 1549 0844 4D8D6A28 		lea	r13, 40[r10]	# tmp320,
 1550 0848 4C39E8   		cmp	rax, r13	# tmp319, tmp320
 1551 084b 410F9DC5 		setge	r13b	#, tmp322
 1552 084f 498D5208 		lea	rdx, 8[r10]	# tmp324,
 1553              	.LVL76:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1554              		.loc 1 755 9 view .LVU498
 1555 0853 4883C328 		add	rbx, 40	# tmp323,
 1556 0857 4839D3   		cmp	rbx, rdx	# tmp323, tmp324
 1557 085a 410F9EC2 		setle	r10b	#, tmp326
 1558 085e 4509D5   		or	r13d, r10d	# tmp327, tmp326
 1559 0861 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# _179, %sfp
 1559      E8
 1560 0866 4983C220 		add	r10, 32	# tmp328,
 1561 086a 4939C2   		cmp	r10, rax	# tmp328, tmp319
 1562 086d 410F9EC2 		setle	r10b	#, tmp331
 1563 0871 483B5C24 		cmp	rbx, QWORD PTR -24[rsp]	# tmp323, %sfp
 1563      E8
 1564 0876 0F9EC3   		setle	bl	#, tmp334
 1565 0879 4109DA   		or	r10d, ebx	# tmp335, tmp334
 1566 087c 4584D5   		test	r13b, r10b	# tmp327, tmp335
 1567 087f 0F846305 		je	.L69	#,
 1567      0000
 1568 0885 4C8D69FF 		lea	r13, -1[rcx]	# tmp337,
 1569 0889 4983FD03 		cmp	r13, 3	# tmp337,
 1570 088d 0F865505 		jbe	.L69	#,
 1570      0000
 1571 0893 4889CB   		mov	rbx, rcx	# bnd.150, loop_distance
 1572 0896 48C1EB02 		shr	rbx, 2	# bnd.150,
 1573 089a 48C1E305 		sal	rbx, 5	# _338,
 1574 089e 4C8D53E0 		lea	r10, -32[rbx]	# tmp440,
 1575 08a2 49C1EA05 		shr	r10, 5	# tmp438,
 1576 08a6 49FFC2   		inc	r10	# tmp441
 1577 08a9 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1577      24F4
 1578 08af 4801FA   		add	rdx, rdi	# vectp.158, bitarray
 1579 08b2 4801F8   		add	rax, rdi	# vectp.163, bitarray
 1580 08b5 31F6     		xor	esi, esi	# ivtmp.197
 1581 08b7 C4C1796E 		vmovd	xmm1, r12d	# _184, _184
GAS LISTING /tmp/ccW0oq2B.s 			page 49


 1581      CC
 1582 08bc 4183E207 		and	r10d, 7	# tmp442,
 1583 08c0 0F84FD00 		je	.L70	#,
 1583      0000
 1584 08c6 4983FA01 		cmp	r10, 1	# tmp442,
 1585 08ca 0F84C900 		je	.L182	#,
 1585      0000
 1586 08d0 4983FA02 		cmp	r10, 2	# tmp442,
 1587 08d4 0F849E00 		je	.L183	#,
 1587      0000
 1588 08da 4983FA03 		cmp	r10, 3	# tmp442,
 1589 08de 7478     		je	.L184	#,
 1590 08e0 4983FA04 		cmp	r10, 4	# tmp442,
 1591 08e4 7451     		je	.L185	#,
 1592 08e6 4983FA05 		cmp	r10, 5	# tmp442,
 1593 08ea 742B     		je	.L186	#,
 1594 08ec 4983FA06 		cmp	r10, 6	# tmp442,
 1595 08f0 0F85F106 		jne	.L262	#,
 1595      0000
 1596              	.LVL77:
 1597              	.L187:
 756:sieve_extend.c ****         }
 1598              		.loc 1 756 13 is_stmt 1 view .LVU499
 1599              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1600              		.loc 1 756 62 is_stmt 0 view .LVU500
 1601 08f6 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r11+rsi]	# tmp917, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1601      2433
 1602              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1603              		.loc 1 756 109 view .LVU501
 1604 08fc C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rdx+rsi]	# tmp918, MEM[base: vectp.158_265, index: ivtmp.197_336, offs
 1604      32
 1605              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1606              		.loc 1 756 62 view .LVU502
 1607 0901 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.156, tmp917, _184
 1608              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1609              		.loc 1 756 109 view .LVU503
 1610 0905 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.160, tmp918, _182
 1611              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1612              		.loc 1 756 80 view .LVU504
 1613 0909 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.161, vect__49.156, vect__54.160
 1613      F7
 1614              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1615              		.loc 1 756 35 view .LVU505
 1616 090e C5FE7F34 		vmovdqu	YMMWORD PTR [rax+rsi], ymm6	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1616      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1617              		.loc 1 755 58 is_stmt 1 view .LVU506
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1618              		.loc 1 755 40 view .LVU507
 1619 0913 4883C620 		add	rsi, 32	# ivtmp.197,
 1620              	.L186:
GAS LISTING /tmp/ccW0oq2B.s 			page 50


 756:sieve_extend.c ****         }
 1621              		.loc 1 756 13 view .LVU508
 1622              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1623              		.loc 1 756 62 is_stmt 0 view .LVU509
 1624 0917 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r11+rsi]	# tmp919, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1624      1433
 1625              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1626              		.loc 1 756 109 view .LVU510
 1627 091d C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdx+rsi]	# tmp920, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1627      32
 1628              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1629              		.loc 1 756 62 view .LVU511
 1630 0922 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.156, tmp919, _184
 1631              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1632              		.loc 1 756 109 view .LVU512
 1633 0926 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.160, tmp920, _182
 1634              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1635              		.loc 1 756 80 view .LVU513
 1636 092a C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.161, vect__49.156, vect__54.160
 1637              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1638              		.loc 1 756 35 view .LVU514
 1639 092e C57E7F04 		vmovdqu	YMMWORD PTR [rax+rsi], ymm8	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1639      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1640              		.loc 1 755 58 is_stmt 1 view .LVU515
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1641              		.loc 1 755 40 view .LVU516
 1642 0933 4883C620 		add	rsi, 32	# ivtmp.197,
 1643              	.L185:
 756:sieve_extend.c ****         }
 1644              		.loc 1 756 13 view .LVU517
 1645              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1646              		.loc 1 756 62 is_stmt 0 view .LVU518
 1647 0937 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r11+rsi]	# tmp921, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1647      0C33
 1648              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1649              		.loc 1 756 109 view .LVU519
 1650 093d C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp922, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1650      32
 1651              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1652              		.loc 1 756 62 view .LVU520
 1653 0942 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.156, tmp921, _184
 1654              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1655              		.loc 1 756 109 view .LVU521
 1656 0946 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.160, tmp922, _182
 1657              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 51


 1658              		.loc 1 756 80 view .LVU522
 1659 094a C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.161, vect__49.156, vect__54.160
 1659      E3
 1660              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1661              		.loc 1 756 35 view .LVU523
 1662 094f C57E7F24 		vmovdqu	YMMWORD PTR [rax+rsi], ymm12	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B],
 1662      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1663              		.loc 1 755 58 is_stmt 1 view .LVU524
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1664              		.loc 1 755 40 view .LVU525
 1665 0954 4883C620 		add	rsi, 32	# ivtmp.197,
 1666              	.L184:
 756:sieve_extend.c ****         }
 1667              		.loc 1 756 13 view .LVU526
 1668              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1669              		.loc 1 756 62 is_stmt 0 view .LVU527
 1670 0958 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR [r11+rsi]	# tmp923, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1670      2C33
 1671              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1672              		.loc 1 756 109 view .LVU528
 1673 095e C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdx+rsi]	# tmp924, MEM[base: vectp.158_265, index: ivtmp.197_336, offs
 1673      32
 1674              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1675              		.loc 1 756 62 view .LVU529
 1676 0963 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.156, tmp923, _184
 1677              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1678              		.loc 1 756 109 view .LVU530
 1679 0967 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.160, tmp924, _182
 1680              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1681              		.loc 1 756 80 view .LVU531
 1682 096b C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.161, vect__49.156, vect__54.160
 1683              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1684              		.loc 1 756 35 view .LVU532
 1685 096f C5FE7F14 		vmovdqu	YMMWORD PTR [rax+rsi], ymm2	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1685      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1686              		.loc 1 755 58 is_stmt 1 view .LVU533
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1687              		.loc 1 755 40 view .LVU534
 1688 0974 4883C620 		add	rsi, 32	# ivtmp.197,
 1689              	.L183:
 756:sieve_extend.c ****         }
 1690              		.loc 1 756 13 view .LVU535
 1691              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1692              		.loc 1 756 62 is_stmt 0 view .LVU536
 1693 0978 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r11+rsi]	# tmp925, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1693      3C33
 1694              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccW0oq2B.s 			page 52


 756:sieve_extend.c ****         }
 1695              		.loc 1 756 109 view .LVU537
 1696 097e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rdx+rsi]	# tmp926, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1696      32
 1697              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1698              		.loc 1 756 62 view .LVU538
 1699 0983 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.156, tmp925, _184
 1700              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1701              		.loc 1 756 109 view .LVU539
 1702 0987 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.160, tmp926, _182
 1703              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1704              		.loc 1 756 80 view .LVU540
 1705 098b C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.161, vect__49.156, vect__54.160
 1705      C8
 1706              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1707              		.loc 1 756 35 view .LVU541
 1708 0990 C57E7F0C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm9	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1708      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1709              		.loc 1 755 58 is_stmt 1 view .LVU542
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1710              		.loc 1 755 40 view .LVU543
 1711 0995 4883C620 		add	rsi, 32	# ivtmp.197,
 1712              	.L182:
 756:sieve_extend.c ****         }
 1713              		.loc 1 756 13 view .LVU544
 1714              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1715              		.loc 1 756 62 is_stmt 0 view .LVU545
 1716 0999 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r11+rsi]	# tmp927, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1716      1433
 1717              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1718              		.loc 1 756 109 view .LVU546
 1719 099f C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rdx+rsi]	# tmp928, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1719      32
 1720              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1721              		.loc 1 756 62 view .LVU547
 1722 09a4 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.156, tmp927, _184
 1723              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1724              		.loc 1 756 109 view .LVU548
 1725 09a8 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.160, tmp928, _182
 1726              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1727              		.loc 1 756 80 view .LVU549
 1728 09ac C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.161, vect__49.156, vect__54.160
 1728      EC
 1729              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1730              		.loc 1 756 35 view .LVU550
 1731 09b1 C57E7F2C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm13	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B],
GAS LISTING /tmp/ccW0oq2B.s 			page 53


 1731      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1732              		.loc 1 755 58 is_stmt 1 view .LVU551
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1733              		.loc 1 755 40 view .LVU552
 1734 09b6 4883C620 		add	rsi, 32	# ivtmp.197,
 1735 09ba 4839DE   		cmp	rsi, rbx	# ivtmp.197, _338
 1736 09bd 0F842E01 		je	.L243	#,
 1736      0000
 1737              	.L70:
 756:sieve_extend.c ****         }
 1738              		.loc 1 756 13 discriminator 3 view .LVU553
 1739              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1740              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU554
 1741 09c3 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rsi]	# tmp839, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1741      3433
 1742              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1743              		.loc 1 756 109 discriminator 3 view .LVU555
 1744 09c9 C5FE6F34 		vmovdqu	ymm6, YMMWORD PTR [rdx+rsi]	# tmp840, MEM[base: vectp.158_265, index: ivtmp.197_336, offse
 1744      32
 1745              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1746              		.loc 1 756 62 discriminator 3 view .LVU556
 1747 09ce C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.156, tmp839, _184
 1748              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1749              		.loc 1 756 109 discriminator 3 view .LVU557
 1750 09d2 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.160, tmp840, _182
 1751              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1752              		.loc 1 756 80 discriminator 3 view .LVU558
 1753 09d6 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.161, vect__49.156, vect__54.160
 1754              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1755              		.loc 1 756 35 discriminator 3 view .LVU559
 1756 09da C5FE7F3C 		vmovdqu	YMMWORD PTR [rax+rsi], ymm7	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], 
 1756      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1757              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU560
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1758              		.loc 1 755 40 discriminator 3 view .LVU561
 756:sieve_extend.c ****         }
 1759              		.loc 1 756 13 discriminator 3 view .LVU562
 1760              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1761              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU563
 1762 09df C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 32[r11+rsi]	# tmp841, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1762      643320
 1763              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1764              		.loc 1 756 109 discriminator 3 view .LVU564
 1765 09e6 C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 32[rdx+rsi]	# tmp842, MEM[base: vectp.158_265, index: ivtmp.197_336, off
 1765      3220
 1766              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 54


 1767              		.loc 1 756 62 discriminator 3 view .LVU565
 1768 09ec C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.156, tmp841, _184
 1769              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1770              		.loc 1 756 109 discriminator 3 view .LVU566
 1771 09f0 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.160, tmp842, _182
 1772              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1773              		.loc 1 756 80 discriminator 3 view .LVU567
 1774 09f4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.161, vect__49.156, vect__54.160
 1774      D1
 1775              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1776              		.loc 1 756 35 discriminator 3 view .LVU568
 1777 09f9 C57E7F54 		vmovdqu	YMMWORD PTR 32[rax+rsi], ymm10	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1777      3020
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1778              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU569
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1779              		.loc 1 755 40 discriminator 3 view .LVU570
 756:sieve_extend.c ****         }
 1780              		.loc 1 756 13 discriminator 3 view .LVU571
 1781              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1782              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU572
 1783 09ff C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 64[r11+rsi]	# tmp843, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1783      5C3340
 1784              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1785              		.loc 1 756 109 discriminator 3 view .LVU573
 1786 0a06 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rdx+rsi]	# tmp844, MEM[base: vectp.158_265, index: ivtmp.197_336, off
 1786      3240
 1787              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1788              		.loc 1 756 62 discriminator 3 view .LVU574
 1789 0a0c C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.156, tmp843, _184
 1790              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1791              		.loc 1 756 109 discriminator 3 view .LVU575
 1792 0a10 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.160, tmp844, _182
 1793              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1794              		.loc 1 756 80 discriminator 3 view .LVU576
 1795 0a14 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.161, vect__49.156, vect__54.160
 1795      F5
 1796              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1797              		.loc 1 756 35 discriminator 3 view .LVU577
 1798 0a19 C57E7F74 		vmovdqu	YMMWORD PTR 64[rax+rsi], ymm14	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1798      3040
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1799              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU578
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1800              		.loc 1 755 40 discriminator 3 view .LVU579
 756:sieve_extend.c ****         }
 1801              		.loc 1 756 13 discriminator 3 view .LVU580
 1802              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccW0oq2B.s 			page 55


 756:sieve_extend.c ****         }
 1803              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU581
 1804 0a1f C4417E6F 		vmovdqu	ymm15, YMMWORD PTR 96[r11+rsi]	# tmp845, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1804      7C3360
 1805              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1806              		.loc 1 756 109 discriminator 3 view .LVU582
 1807 0a26 C5FE6F54 		vmovdqu	ymm2, YMMWORD PTR 96[rdx+rsi]	# tmp846, MEM[base: vectp.158_265, index: ivtmp.197_336, off
 1807      3260
 1808              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1809              		.loc 1 756 62 discriminator 3 view .LVU583
 1810 0a2c C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.156, tmp845, _184
 1811              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1812              		.loc 1 756 109 discriminator 3 view .LVU584
 1813 0a30 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.160, tmp846, _182
 1814              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1815              		.loc 1 756 80 discriminator 3 view .LVU585
 1816 0a34 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.161, vect__49.156, vect__54.160
 1817              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1818              		.loc 1 756 35 discriminator 3 view .LVU586
 1819 0a38 C5FE7F64 		vmovdqu	YMMWORD PTR 96[rax+rsi], ymm4	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B]
 1819      3060
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1820              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU587
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1821              		.loc 1 755 40 discriminator 3 view .LVU588
 756:sieve_extend.c ****         }
 1822              		.loc 1 756 13 discriminator 3 view .LVU589
 1823              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1824              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU590
 1825 0a3e C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 128[r11+rsi]	# tmp847, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1825      84338000 
 1825      0000
 1826              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1827              		.loc 1 756 109 discriminator 3 view .LVU591
 1828 0a48 C57E6F8C 		vmovdqu	ymm9, YMMWORD PTR 128[rdx+rsi]	# tmp848, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1828      32800000 
 1828      00
 1829              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1830              		.loc 1 756 62 discriminator 3 view .LVU592
 1831 0a51 C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.156, tmp847, _184
 1832              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1833              		.loc 1 756 109 discriminator 3 view .LVU593
 1834 0a55 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.160, tmp848, _182
 1835              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1836              		.loc 1 756 80 discriminator 3 view .LVU594
 1837 0a59 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.161, vect__49.156, vect__54.160
 1837      DA
GAS LISTING /tmp/ccW0oq2B.s 			page 56


 1838              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1839              		.loc 1 756 35 discriminator 3 view .LVU595
 1840 0a5e C57E7F9C 		vmovdqu	YMMWORD PTR 128[rax+rsi], ymm11	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
 1840      30800000 
 1840      00
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1841              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU596
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1842              		.loc 1 755 40 discriminator 3 view .LVU597
 756:sieve_extend.c ****         }
 1843              		.loc 1 756 13 discriminator 3 view .LVU598
 1844              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1845              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU599
 1846 0a67 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r11+rsi]	# tmp849, MEM[base: _180, index: ivtmp.197_336, offset: 0B
 1846      A433A000 
 1846      0000
 1847              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1848              		.loc 1 756 109 discriminator 3 view .LVU600
 1849 0a71 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rdx+rsi]	# tmp850, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1849      32A00000 
 1849      00
 1850              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1851              		.loc 1 756 62 discriminator 3 view .LVU601
 1852 0a7a C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.156, tmp849, _184
 1853              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1854              		.loc 1 756 109 discriminator 3 view .LVU602
 1855 0a7e C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.160, tmp850, _182
 1856              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1857              		.loc 1 756 80 discriminator 3 view .LVU603
 1858 0a82 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.161, vect__49.156, vect__54.160
 1858      FE
 1859              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1860              		.loc 1 756 35 discriminator 3 view .LVU604
 1861 0a87 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rax+rsi], ymm15	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
 1861      30A00000 
 1861      00
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1862              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU605
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1863              		.loc 1 755 40 discriminator 3 view .LVU606
 756:sieve_extend.c ****         }
 1864              		.loc 1 756 13 discriminator 3 view .LVU607
 1865              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1866              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU608
 1867 0a90 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 192[r11+rsi]	# tmp851, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1867      B433C000 
 1867      0000
 1868              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 57


 1869              		.loc 1 756 109 discriminator 3 view .LVU609
 1870 0a9a C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 192[rdx+rsi]	# tmp852, MEM[base: vectp.158_265, index: ivtmp.197_336, of
 1870      32C00000 
 1870      00
 1871              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1872              		.loc 1 756 62 discriminator 3 view .LVU610
 1873 0aa3 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.156, tmp851, _184
 1874              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1875              		.loc 1 756 109 discriminator 3 view .LVU611
 1876 0aa7 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.160, tmp852, _182
 1877              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1878              		.loc 1 756 80 discriminator 3 view .LVU612
 1879 0aab C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.161, vect__49.156, vect__54.160
 1880              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1881              		.loc 1 756 35 discriminator 3 view .LVU613
 1882 0aaf C57E7F84 		vmovdqu	YMMWORD PTR 192[rax+rsi], ymm8	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B
 1882      30C00000 
 1882      00
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1883              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU614
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1884              		.loc 1 755 40 discriminator 3 view .LVU615
 756:sieve_extend.c ****         }
 1885              		.loc 1 756 13 discriminator 3 view .LVU616
 1886              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1887              		.loc 1 756 62 is_stmt 0 discriminator 3 view .LVU617
 1888 0ab8 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 224[r11+rsi]	# tmp853, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 1888      AC33E000 
 1888      0000
 1889              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1890              		.loc 1 756 109 discriminator 3 view .LVU618
 1891 0ac2 C57E6F94 		vmovdqu	ymm10, YMMWORD PTR 224[rdx+rsi]	# tmp854, MEM[base: vectp.158_265, index: ivtmp.197_336, o
 1891      32E00000 
 1891      00
 1892              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1893              		.loc 1 756 62 discriminator 3 view .LVU619
 1894 0acb C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.156, tmp853, _184
 1895              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1896              		.loc 1 756 109 discriminator 3 view .LVU620
 1897 0acf C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.160, tmp854, _182
 1898              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1899              		.loc 1 756 80 discriminator 3 view .LVU621
 1900 0ad3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.161, vect__49.156, vect__54.160
 1900      E3
 1901              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1902              		.loc 1 756 35 discriminator 3 view .LVU622
 1903 0ad8 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rax+rsi], ymm12	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0
GAS LISTING /tmp/ccW0oq2B.s 			page 58


 1903      30E00000 
 1903      00
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1904              		.loc 1 755 58 is_stmt 1 discriminator 3 view .LVU623
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1905              		.loc 1 755 40 discriminator 3 view .LVU624
 1906 0ae1 4881C600 		add	rsi, 256	# ivtmp.197,
 1906      010000
 1907 0ae8 4839DE   		cmp	rsi, rbx	# ivtmp.197, _338
 1908 0aeb 0F85D2FE 		jne	.L70	#,
 1908      FFFF
 1909              	.L243:
 1910 0af1 4C8B6C24 		mov	r13, QWORD PTR -32[rsp]	# source_word, %sfp
 1910      E0
 1911 0af6 4889CA   		mov	rdx, rcx	# niters_vector_mult_vf.151, loop_distance
 1912 0af9 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.151,
 1913 0afd 498D440D 		lea	rax, 0[r13+rcx]	# source_word,
 1913      00
 1914 0b02 F6C103   		test	cl, 3	# loop_distance,
 1915 0b05 0F84C502 		je	.L255	#,
 1915      0000
 1916              	.LVL78:
 756:sieve_extend.c ****         }
 1917              		.loc 1 756 13 view .LVU625
 1918              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1919              		.loc 1 756 58 is_stmt 0 view .LVU626
 1920 0b0b 498D5C15 		lea	rbx, 0[r13+rdx]	# tmp350,
 1920      00
 1921              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1922              		.loc 1 756 62 view .LVU627
 1923 0b10 4C8B14DF 		mov	r10, QWORD PTR [rdi+rbx*8]	# *_281, *_281
 1924              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1925              		.loc 1 756 109 view .LVU628
 1926 0b14 C4E2B1F7 		shlx	rsi, QWORD PTR 8[rdi+rbx*8], r9	# tmp352, *_286, shift
 1926      74DF08
 1927              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1928              		.loc 1 756 21 view .LVU629
 1929 0b1b 4D8D1C16 		lea	r11, [r14+rdx]	# tmp351,
 1930              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1931              		.loc 1 756 62 view .LVU630
 1932 0b1f C4C29BF7 		shrx	rbx, r10, r12	# tmp354, *_281, shift_flipped
 1932      DA
 1933              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1934              		.loc 1 756 80 view .LVU631
 1935 0b24 4809DE   		or	rsi, rbx	# tmp356, tmp354
 1936 0b27 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_291, tmp356
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1937              		.loc 1 755 58 is_stmt 1 view .LVU632
 1938              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1939              		.loc 1 755 59 is_stmt 0 view .LVU633
GAS LISTING /tmp/ccW0oq2B.s 			page 59


 1940 0b2b 488D7201 		lea	rsi, 1[rdx]	# i,
 1941              	.LVL79:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1942              		.loc 1 755 40 is_stmt 1 view .LVU634
 1943              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1944              		.loc 1 755 9 is_stmt 0 view .LVU635
 1945 0b2f 4839F1   		cmp	rcx, rsi	# loop_distance, i
 1946 0b32 0F869802 		jbe	.L255	#,
 1946      0000
 756:sieve_extend.c ****         }
 1947              		.loc 1 756 13 is_stmt 1 view .LVU636
 1948              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1949              		.loc 1 756 58 is_stmt 0 view .LVU637
 1950 0b38 4D8D5C35 		lea	r11, 0[r13+rsi]	# tmp357,
 1950      00
 1951              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1952              		.loc 1 756 62 view .LVU638
 1953 0b3d 4A8B1CDF 		mov	rbx, QWORD PTR [rdi+r11*8]	# *_299, *_299
 1954              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1955              		.loc 1 756 109 view .LVU639
 1956 0b41 C422B1F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r9	# tmp359, *_304, shift
 1956      54DF08
 1957              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1958              		.loc 1 756 21 view .LVU640
 1959 0b48 4C01F6   		add	rsi, r14	# tmp358, copy_word
 1960              	.LVL80:
 1961              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1962              		.loc 1 756 62 view .LVU641
 1963 0b4b C4629BF7 		shrx	r11, rbx, r12	# tmp361, *_299, shift_flipped
 1963      DB
 1964              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1965              		.loc 1 755 59 view .LVU642
 1966 0b50 4883C202 		add	rdx, 2	# i,
 1967              	.LVL81:
 1968              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1969              		.loc 1 756 80 view .LVU643
 1970 0b54 4D09DA   		or	r10, r11	# tmp363, tmp361
 1971 0b57 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# *_309, tmp363
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1972              		.loc 1 755 58 is_stmt 1 view .LVU644
 1973              	.LVL82:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1974              		.loc 1 755 40 view .LVU645
 1975              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1976              		.loc 1 755 9 is_stmt 0 view .LVU646
 1977 0b5b 4839D1   		cmp	rcx, rdx	# loop_distance, i
 1978 0b5e 0F866C02 		jbe	.L255	#,
 1978      0000
GAS LISTING /tmp/ccW0oq2B.s 			page 60


 756:sieve_extend.c ****         }
 1979              		.loc 1 756 13 is_stmt 1 view .LVU647
 1980              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1981              		.loc 1 756 58 is_stmt 0 view .LVU648
 1982 0b64 4901D5   		add	r13, rdx	# source_word, i
 1983              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1984              		.loc 1 756 21 view .LVU649
 1985 0b67 4C01F2   		add	rdx, r14	# tmp365, copy_word
 1986              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1987              		.loc 1 756 109 view .LVU650
 1988 0b6a C422B1F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r9	# tmp366, *_245, shift
 1988      74EF08
 1989              	.LVL83:
 1990              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1991              		.loc 1 756 62 view .LVU651
 1992 0b71 4E8B0CEF 		mov	r9, QWORD PTR [rdi+r13*8]	# *_240, *_240
 1993              	.LVL84:
 756:sieve_extend.c ****         }
 1994              		.loc 1 756 62 view .LVU652
 1995 0b75 C4429BF7 		shrx	r12, r9, r12	# tmp368, *_240, shift_flipped
 1995      E1
 1996              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 1997              		.loc 1 756 80 view .LVU653
 1998 0b7a 4D09E6   		or	r14, r12	# tmp370, tmp368
 1999 0b7d 4C8934D7 		mov	QWORD PTR [rdi+rdx*8], r14	# *_250, tmp370
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2000              		.loc 1 755 58 is_stmt 1 view .LVU654
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2001              		.loc 1 755 40 view .LVU655
 2002 0b81 C5F877   		vzeroupper
 2003              	.L72:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2004              		.loc 1 755 40 is_stmt 0 view .LVU656
 2005              	.LBE275:
 758:sieve_extend.c ****     }
 2006              		.loc 1 758 9 is_stmt 1 view .LVU657
 758:sieve_extend.c ****     }
 2007              		.loc 1 758 39 view .LVU658
 2008              	.LVL85:
 758:sieve_extend.c ****     }
 2009              		.loc 1 758 39 is_stmt 0 view .LVU659
 2010              	.LBE274:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2011              		.loc 1 762 12 is_stmt 1 view .LVU660
 2012 0b84 4C8B7424 		mov	r14, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2012      F8
 2013 0b89 48C1E003 		sal	rax, 3	# _225,
 2014              	.LVL86:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2015              		.loc 1 762 12 is_stmt 0 view .LVU661
 2016 0b8d 498D5E01 		lea	rbx, 1[r14]	# _198,
 2017 0b91 48895C24 		mov	QWORD PTR -24[rsp], rbx	# %sfp, _198
GAS LISTING /tmp/ccW0oq2B.s 			page 61


 2017      E8
 2018              	.LBB277:
 2019              	# sieve_extend.c:758:         source_word += loop_distance; copy_word+= loop_distance;
 758:sieve_extend.c ****     }
 2020              		.loc 1 758 21 view .LVU662
 2021 0b96 4531ED   		xor	r13d, r13d	# _173
 2022              	.LVL87:
 2023              	.L68:
 758:sieve_extend.c ****     }
 2024              		.loc 1 758 21 view .LVU663
 2025 0b99 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2025      F8
 2026              	.LBE277:
 2027              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2028              		.loc 1 763 99 view .LVU664
 2029 0b9e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp897, %sfp
 2029      F4
 2030 0ba3 4801F8   		add	rax, rdi	# ivtmp.170, bitarray
 2031 0ba6 4C89DE   		mov	rsi, r11	# tmp428, destination_stop_word
 2032 0ba9 C462F1F7 		shlx	r9, QWORD PTR 8[rax], rcx	# tmp419, MEM[base: _318, offset: 8B], tmp897
 2032      4808
 2033              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2034              		.loc 1 763 54 view .LVU665
 2035 0baf C462BBF7 		shrx	r10, QWORD PTR [rax], r8	# tmp421, MEM[base: _318, offset: 0B], _184
 2035      10
 2036 0bb4 4C29F6   		sub	rsi, r14	# tmp428, copy_word
 2037              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2038              		.loc 1 763 72 view .LVU666
 2039 0bb7 4D09D1   		or	r9, r10	# tmp423, tmp421
 2040              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2041              		.loc 1 762 57 view .LVU667
 2042 0bba 498D4E01 		lea	rcx, 1[r14]	# copy_word,
 2043              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2044              		.loc 1 763 72 view .LVU668
 2045 0bbe 4E890CF7 		mov	QWORD PTR [rdi+r14*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 2046 0bc2 83E607   		and	esi, 7	# tmp429,
 2047              	.LVL88:
 763:sieve_extend.c ****     }
 2048              		.loc 1 763 9 is_stmt 1 view .LVU669
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2049              		.loc 1 762 48 view .LVU670
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2050              		.loc 1 762 12 view .LVU671
 2051 0bc5 4C8D5008 		lea	r10, 8[rax]	# ivtmp.170,
 2052              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2053              		.loc 1 762 5 is_stmt 0 view .LVU672
 2054 0bc9 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 2055 0bcc 0F822AFC 		jb	.L81	#,
 2055      FFFF
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2056              		.loc 1 762 5 view .LVU673
GAS LISTING /tmp/ccW0oq2B.s 			page 62


 2057 0bd2 4885F6   		test	rsi, rsi	# tmp429
 2058 0bd5 0F841501 		je	.L249	#,
 2058      0000
 2059 0bdb 4883FE01 		cmp	rsi, 1	# tmp429,
 2060 0bdf 0F84E100 		je	.L201	#,
 2060      0000
 2061 0be5 4883FE02 		cmp	rsi, 2	# tmp429,
 2062 0be9 0F84B900 		je	.L202	#,
 2062      0000
 2063 0bef 4883FE03 		cmp	rsi, 3	# tmp429,
 2064 0bf3 0F849000 		je	.L203	#,
 2064      0000
 2065 0bf9 4883FE04 		cmp	rsi, 4	# tmp429,
 2066 0bfd 746C     		je	.L204	#,
 2067 0bff 4883FE05 		cmp	rsi, 5	# tmp429,
 2068 0c03 7447     		je	.L205	#,
 2069 0c05 4883FE06 		cmp	rsi, 6	# tmp429,
 2070 0c09 7423     		je	.L206	#,
 763:sieve_extend.c ****     }
 2071              		.loc 1 763 9 is_stmt 1 view .LVU674
 2072              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2073              		.loc 1 763 54 is_stmt 0 view .LVU675
 2074 0c0b 498B12   		mov	rdx, QWORD PTR [r10]	# MEM[base: _318, offset: 0B], MEM[base: _318, offset: 0B]
 2075              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2076              		.loc 1 763 99 view .LVU676
 2077 0c0e 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp900, %sfp
 2077      24F4
 2078              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2079              		.loc 1 763 54 view .LVU677
 2080 0c14 C4E2BBF7 		shrx	rsi, rdx, r8	# tmp637, MEM[base: _318, offset: 0B], _184
 2080      F2
 2081              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2082              		.loc 1 763 99 view .LVU678
 2083 0c19 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp635, MEM[base: _318, offset: 8B], tmp900
 2083      5A08
 2084              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2085              		.loc 1 763 72 view .LVU679
 2086 0c1f 4C09DE   		or	rsi, r11	# tmp638, tmp635
 2087 0c22 488934CF 		mov	QWORD PTR [rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2088              		.loc 1 762 48 is_stmt 1 view .LVU680
 2089 0c26 4C8D5010 		lea	r10, 16[rax]	# ivtmp.170,
 2090              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2091              		.loc 1 762 57 is_stmt 0 view .LVU681
 2092 0c2a 498D4E02 		lea	rcx, 2[r14]	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2093              		.loc 1 762 12 is_stmt 1 view .LVU682
 2094              	.L206:
 763:sieve_extend.c ****     }
 2095              		.loc 1 763 9 view .LVU683
 2096              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 63


 763:sieve_extend.c ****     }
 2097              		.loc 1 763 99 is_stmt 0 view .LVU684
 2098 0c2e 0FB64424 		movzx	eax, BYTE PTR -12[rsp]	# tmp901, %sfp
 2098      F4
 2099              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2100              		.loc 1 763 54 view .LVU685
 2101 0c33 C442BBF7 		shrx	r9, QWORD PTR [r10], r8	# tmp642, MEM[base: _318, offset: 0B], _184
 2101      0A
 2102              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2103              		.loc 1 763 99 view .LVU686
 2104 0c38 C442F9F7 		shlx	r14, QWORD PTR 8[r10], rax	# tmp640, MEM[base: _318, offset: 8B], tmp901
 2104      7208
 2105              	.LVL89:
 2106              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2107              		.loc 1 763 72 view .LVU687
 2108 0c3e 4D09CE   		or	r14, r9	# tmp643, tmp642
 2109 0c41 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2110              		.loc 1 762 48 is_stmt 1 view .LVU688
 2111 0c45 4983C208 		add	r10, 8	# ivtmp.170,
 2112              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2113              		.loc 1 762 57 is_stmt 0 view .LVU689
 2114 0c49 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2115              		.loc 1 762 12 is_stmt 1 view .LVU690
 2116              	.L205:
 763:sieve_extend.c ****     }
 2117              		.loc 1 763 9 view .LVU691
 2118              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2119              		.loc 1 763 99 is_stmt 0 view .LVU692
 2120 0c4c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp902, %sfp
 2120      24F4
 2121              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2122              		.loc 1 763 54 view .LVU693
 2123 0c52 C4C2BBF7 		shrx	rdx, QWORD PTR [r10], r8	# tmp647, MEM[base: _318, offset: 0B], _184
 2123      12
 2124              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2125              		.loc 1 763 99 view .LVU694
 2126 0c57 C44299F7 		shlx	r11, QWORD PTR 8[r10], r12	# tmp645, MEM[base: _318, offset: 8B], tmp902
 2126      5A08
 2127              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2128              		.loc 1 763 72 view .LVU695
 2129 0c5d 4909D3   		or	r11, rdx	# tmp648, tmp647
 2130 0c60 4C891CCF 		mov	QWORD PTR [rdi+rcx*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2131              		.loc 1 762 48 is_stmt 1 view .LVU696
 2132 0c64 4983C208 		add	r10, 8	# ivtmp.170,
 2133              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccW0oq2B.s 			page 64


 2134              		.loc 1 762 57 is_stmt 0 view .LVU697
 2135 0c68 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2136              		.loc 1 762 12 is_stmt 1 view .LVU698
 2137              	.L204:
 763:sieve_extend.c ****     }
 2138              		.loc 1 763 9 view .LVU699
 2139              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2140              		.loc 1 763 99 is_stmt 0 view .LVU700
 2141 0c6b 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp903, %sfp
 2141      F4
 2142              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2143              		.loc 1 763 54 view .LVU701
 2144 0c70 C442BBF7 		shrx	r14, QWORD PTR [r10], r8	# tmp652, MEM[base: _318, offset: 0B], _184
 2144      32
 2145              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2146              		.loc 1 763 99 view .LVU702
 2147 0c75 C4C2C9F7 		shlx	rax, QWORD PTR 8[r10], rsi	# tmp650, MEM[base: _318, offset: 8B], tmp903
 2147      4208
 2148              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2149              		.loc 1 763 72 view .LVU703
 2150 0c7b 4C09F0   		or	rax, r14	# tmp653, tmp652
 2151 0c7e 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2152              		.loc 1 762 48 is_stmt 1 view .LVU704
 2153 0c82 4983C208 		add	r10, 8	# ivtmp.170,
 2154              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2155              		.loc 1 762 57 is_stmt 0 view .LVU705
 2156 0c86 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2157              		.loc 1 762 12 is_stmt 1 view .LVU706
 2158              	.L203:
 763:sieve_extend.c ****     }
 2159              		.loc 1 763 9 view .LVU707
 2160              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2161              		.loc 1 763 99 is_stmt 0 view .LVU708
 2162 0c89 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp904, %sfp
 2162      24F4
 2163              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2164              		.loc 1 763 54 view .LVU709
 2165 0c8f C442BBF7 		shrx	r11, QWORD PTR [r10], r8	# tmp657, MEM[base: _318, offset: 0B], _184
 2165      1A
 2166              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2167              		.loc 1 763 99 view .LVU710
 2168 0c94 C442B1F7 		shlx	r12, QWORD PTR 8[r10], r9	# tmp655, MEM[base: _318, offset: 8B], tmp904
 2168      6208
 2169              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2170              		.loc 1 763 72 view .LVU711
GAS LISTING /tmp/ccW0oq2B.s 			page 65


 2171 0c9a 4D09DC   		or	r12, r11	# tmp658, tmp657
 2172 0c9d 4C8924CF 		mov	QWORD PTR [rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2173              		.loc 1 762 48 is_stmt 1 view .LVU712
 2174 0ca1 4983C208 		add	r10, 8	# ivtmp.170,
 2175              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2176              		.loc 1 762 57 is_stmt 0 view .LVU713
 2177 0ca5 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2178              		.loc 1 762 12 is_stmt 1 view .LVU714
 2179              	.L202:
 763:sieve_extend.c ****     }
 2180              		.loc 1 763 9 view .LVU715
 2181              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2182              		.loc 1 763 99 is_stmt 0 view .LVU716
 2183 0ca8 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp905, %sfp
 2183      F4
 2184              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2185              		.loc 1 763 54 view .LVU717
 2186 0cad C4C2BBF7 		shrx	rsi, QWORD PTR [r10], r8	# tmp662, MEM[base: _318, offset: 0B], _184
 2186      32
 2187              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2188              		.loc 1 763 99 view .LVU718
 2189 0cb2 C4C2E9F7 		shlx	rax, QWORD PTR 8[r10], rdx	# tmp660, MEM[base: _318, offset: 8B], tmp905
 2189      4208
 2190              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2191              		.loc 1 763 72 view .LVU719
 2192 0cb8 4809F0   		or	rax, rsi	# tmp663, tmp662
 2193 0cbb 488904CF 		mov	QWORD PTR [rdi+rcx*8], rax	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2194              		.loc 1 762 48 is_stmt 1 view .LVU720
 2195 0cbf 4983C208 		add	r10, 8	# ivtmp.170,
 2196              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2197              		.loc 1 762 57 is_stmt 0 view .LVU721
 2198 0cc3 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2199              		.loc 1 762 12 is_stmt 1 view .LVU722
 2200              	.L201:
 763:sieve_extend.c ****     }
 2201              		.loc 1 763 9 view .LVU723
 2202              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2203              		.loc 1 763 99 is_stmt 0 view .LVU724
 2204 0cc6 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp906, %sfp
 2204      24F4
 2205              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2206              		.loc 1 763 54 view .LVU725
 2207 0ccc C442BBF7 		shrx	r12, QWORD PTR [r10], r8	# tmp667, MEM[base: _318, offset: 0B], _184
 2207      22
 2208              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 66


 763:sieve_extend.c ****     }
 2209              		.loc 1 763 99 view .LVU726
 2210 0cd1 C44289F7 		shlx	r9, QWORD PTR 8[r10], r14	# tmp665, MEM[base: _318, offset: 8B], tmp906
 2210      4A08
 2211              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2212              		.loc 1 763 72 view .LVU727
 2213 0cd7 4D09E1   		or	r9, r12	# tmp668, tmp667
 2214 0cda 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2215              		.loc 1 762 48 is_stmt 1 view .LVU728
 2216              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2217              		.loc 1 762 57 is_stmt 0 view .LVU729
 2218 0cde 48FFC1   		inc	rcx	# copy_word
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2219              		.loc 1 762 12 is_stmt 1 view .LVU730
 2220 0ce1 4983C208 		add	r10, 8	# ivtmp.170,
 2221              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2222              		.loc 1 762 5 is_stmt 0 view .LVU731
 2223 0ce5 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2223      F8
 2224 0cea 0F820CFB 		jb	.L81	#,
 2224      FFFF
 2225              	.L249:
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2226              		.loc 1 762 5 view .LVU732
 2227 0cf0 448B5C24 		mov	r11d, DWORD PTR -12[rsp]	# _182, %sfp
 2227      F4
 2228              	.L80:
 763:sieve_extend.c ****     }
 2229              		.loc 1 763 9 is_stmt 1 view .LVU733
 2230              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2231              		.loc 1 763 54 is_stmt 0 view .LVU734
 2232 0cf5 C4C2BBF7 		shrx	rax, QWORD PTR [r10], r8	# tmp583, MEM[base: _318, offset: 0B], _184
 2232      02
 2233              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2234              		.loc 1 763 99 view .LVU735
 2235 0cfa C4C2A1F7 		shlx	rdx, QWORD PTR 8[r10], r11	# tmp581, MEM[base: _318, offset: 8B], _182
 2235      5208
 2236              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2237              		.loc 1 763 72 view .LVU736
 2238 0d00 4809C2   		or	rdx, rax	# tmp584, tmp583
 2239 0d03 488914CF 		mov	QWORD PTR [rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2240              		.loc 1 762 48 is_stmt 1 view .LVU737
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2241              		.loc 1 762 12 view .LVU738
 763:sieve_extend.c ****     }
 2242              		.loc 1 763 9 view .LVU739
 2243 0d07 4983C240 		add	r10, 64	# ivtmp.170,
 2244              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 67


 2245              		.loc 1 763 54 is_stmt 0 view .LVU740
 2246 0d0b C442BBF7 		shrx	r14, QWORD PTR -56[r10], r8	# tmp590, MEM[base: _318, offset: 0B], _184
 2246      72C8
 2247              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2248              		.loc 1 763 99 view .LVU741
 2249 0d11 C4C2A1F7 		shlx	rsi, QWORD PTR -48[r10], r11	# tmp588, MEM[base: _318, offset: 8B], _182
 2249      72D0
 2250              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2251              		.loc 1 763 72 view .LVU742
 2252 0d17 4C09F6   		or	rsi, r14	# tmp591, tmp590
 2253 0d1a 488974CF 		mov	QWORD PTR 8[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2253      08
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2254              		.loc 1 762 48 is_stmt 1 view .LVU743
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2255              		.loc 1 762 12 view .LVU744
 763:sieve_extend.c ****     }
 2256              		.loc 1 763 9 view .LVU745
 2257              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2258              		.loc 1 763 54 is_stmt 0 view .LVU746
 2259 0d1f C442BBF7 		shrx	r9, QWORD PTR -48[r10], r8	# tmp597, MEM[base: _318, offset: 0B], _184
 2259      4AD0
 2260              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2261              		.loc 1 763 99 view .LVU747
 2262 0d25 C442A1F7 		shlx	r12, QWORD PTR -40[r10], r11	# tmp595, MEM[base: _318, offset: 8B], _182
 2262      62D8
 2263              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2264              		.loc 1 763 72 view .LVU748
 2265 0d2b 4D09CC   		or	r12, r9	# tmp598, tmp597
 2266 0d2e 4C8964CF 		mov	QWORD PTR 16[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2266      10
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2267              		.loc 1 762 48 is_stmt 1 view .LVU749
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2268              		.loc 1 762 12 view .LVU750
 763:sieve_extend.c ****     }
 2269              		.loc 1 763 9 view .LVU751
 2270              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2271              		.loc 1 763 54 is_stmt 0 view .LVU752
 2272 0d33 C4C2BBF7 		shrx	rax, QWORD PTR -40[r10], r8	# tmp604, MEM[base: _318, offset: 0B], _184
 2272      42D8
 2273              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2274              		.loc 1 763 99 view .LVU753
 2275 0d39 C4C2A1F7 		shlx	rdx, QWORD PTR -32[r10], r11	# tmp602, MEM[base: _318, offset: 8B], _182
 2275      52E0
 2276              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2277              		.loc 1 763 72 view .LVU754
 2278 0d3f 4809C2   		or	rdx, rax	# tmp605, tmp604
 2279 0d42 488954CF 		mov	QWORD PTR 24[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
GAS LISTING /tmp/ccW0oq2B.s 			page 68


 2279      18
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2280              		.loc 1 762 48 is_stmt 1 view .LVU755
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2281              		.loc 1 762 12 view .LVU756
 763:sieve_extend.c ****     }
 2282              		.loc 1 763 9 view .LVU757
 2283              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2284              		.loc 1 763 54 is_stmt 0 view .LVU758
 2285 0d47 C442BBF7 		shrx	r14, QWORD PTR -32[r10], r8	# tmp611, MEM[base: _318, offset: 0B], _184
 2285      72E0
 2286              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2287              		.loc 1 763 99 view .LVU759
 2288 0d4d C4C2A1F7 		shlx	rsi, QWORD PTR -24[r10], r11	# tmp609, MEM[base: _318, offset: 8B], _182
 2288      72E8
 2289              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2290              		.loc 1 763 72 view .LVU760
 2291 0d53 4C09F6   		or	rsi, r14	# tmp612, tmp611
 2292 0d56 488974CF 		mov	QWORD PTR 32[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2292      20
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2293              		.loc 1 762 48 is_stmt 1 view .LVU761
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2294              		.loc 1 762 12 view .LVU762
 763:sieve_extend.c ****     }
 2295              		.loc 1 763 9 view .LVU763
 2296              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2297              		.loc 1 763 99 is_stmt 0 view .LVU764
 2298 0d5b C442A1F7 		shlx	r12, QWORD PTR -16[r10], r11	# tmp616, MEM[base: _318, offset: 8B], _182
 2298      62F0
 2299              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2300              		.loc 1 763 54 view .LVU765
 2301 0d61 C442BBF7 		shrx	r9, QWORD PTR -24[r10], r8	# tmp618, MEM[base: _318, offset: 0B], _184
 2301      4AE8
 2302              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2303              		.loc 1 763 72 view .LVU766
 2304 0d67 4D09CC   		or	r12, r9	# tmp619, tmp618
 2305 0d6a 4C8964CF 		mov	QWORD PTR 40[rdi+rcx*8], r12	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2305      28
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2306              		.loc 1 762 48 is_stmt 1 view .LVU767
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2307              		.loc 1 762 12 view .LVU768
 763:sieve_extend.c ****     }
 2308              		.loc 1 763 9 view .LVU769
 2309              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2310              		.loc 1 763 99 is_stmt 0 view .LVU770
 2311 0d6f C4C2A1F7 		shlx	rdx, QWORD PTR -8[r10], r11	# tmp623, MEM[base: _318, offset: 8B], _182
 2311      52F8
 2312              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccW0oq2B.s 			page 69


 763:sieve_extend.c ****     }
 2313              		.loc 1 763 54 view .LVU771
 2314 0d75 C4C2BBF7 		shrx	rax, QWORD PTR -16[r10], r8	# tmp625, MEM[base: _318, offset: 0B], _184
 2314      42F0
 2315              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2316              		.loc 1 763 72 view .LVU772
 2317 0d7b 4809C2   		or	rdx, rax	# tmp626, tmp625
 2318 0d7e 488954CF 		mov	QWORD PTR 48[rdi+rcx*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2318      30
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2319              		.loc 1 762 48 is_stmt 1 view .LVU773
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2320              		.loc 1 762 12 view .LVU774
 763:sieve_extend.c ****     }
 2321              		.loc 1 763 9 view .LVU775
 2322              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2323              		.loc 1 763 99 is_stmt 0 view .LVU776
 2324 0d83 C4C2A1F7 		shlx	rsi, QWORD PTR [r10], r11	# tmp630, MEM[base: _318, offset: 8B], _182
 2324      32
 2325              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2326              		.loc 1 763 54 view .LVU777
 2327 0d88 C442BBF7 		shrx	r14, QWORD PTR -8[r10], r8	# tmp632, MEM[base: _318, offset: 0B], _184
 2327      72F8
 2328              	# sieve_extend.c:763:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 763:sieve_extend.c ****     }
 2329              		.loc 1 763 72 view .LVU778
 2330 0d8e 4C09F6   		or	rsi, r14	# tmp633, tmp632
 2331 0d91 488974CF 		mov	QWORD PTR 56[rdi+rcx*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2331      38
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2332              		.loc 1 762 48 is_stmt 1 view .LVU779
 2333              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2334              		.loc 1 762 57 is_stmt 0 view .LVU780
 2335 0d96 4883C108 		add	rcx, 8	# copy_word,
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2336              		.loc 1 762 12 is_stmt 1 view .LVU781
 2337              	# sieve_extend.c:762:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 762:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2338              		.loc 1 762 5 is_stmt 0 view .LVU782
 2339 0d9a 48394C24 		cmp	QWORD PTR -8[rsp], rcx	# %sfp, copy_word
 2339      F8
 2340 0d9f 0F8350FF 		jnb	.L80	#,
 2340      FFFF
 2341 0da5 E952FAFF 		jmp	.L81	#
 2341      FF
 2342              	.LVL90:
 2343 0daa 660F1F44 		.p2align 4,,10
 2343      0000
 2344              		.p2align 3
 2345              	.L260:
 738:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2346              		.loc 1 738 9 is_stmt 1 view .LVU783
 2347              	# sieve_extend.c:740:                                 & keepmask(copy_start) & chopmask(destination
GAS LISTING /tmp/ccW0oq2B.s 			page 70


 740:sieve_extend.c ****         return; // rapid exit for one word variant
 2348              		.loc 1 740 56 is_stmt 0 view .LVU784
 2349 0db0 4D21D7   		and	r15, r10	# tmp311, _189
 2350 0db3 4C21F8   		and	rax, r15	# tmp312, tmp311
 2351              	# sieve_extend.c:738:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 738:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2352              		.loc 1 738 29 view .LVU785
 2353 0db6 4909C6   		or	r14, rax	# tmp313, tmp312
 2354 0db9 4D897500 		mov	QWORD PTR 0[r13], r14	# *_177, tmp313
 741:sieve_extend.c ****     }
 2355              		.loc 1 741 9 is_stmt 1 view .LVU786
 2356              	# sieve_extend.c:767: }
 2357              		.loc 1 767 1 is_stmt 0 view .LVU787
 2358 0dbd 488D65D8 		lea	rsp, -40[rbp]	#,
 2359 0dc1 5B       		pop	rbx	#
 2360 0dc2 415C     		pop	r12	#
 2361 0dc4 415D     		pop	r13	#
 2362 0dc6 415E     		pop	r14	#
 2363 0dc8 415F     		pop	r15	#
 2364 0dca 5D       		pop	rbp	#
 2365              		.cfi_remember_state
 2366              		.cfi_def_cfa 7, 8
 2367 0dcb C3       		ret	
 2368              	.LVL91:
 2369 0dcc 0F1F4000 		.p2align 4,,10
 2370              		.p2align 3
 2371              	.L255:
 2372              		.cfi_restore_state
 2373              		.loc 1 767 1 view .LVU788
 2374 0dd0 C5F877   		vzeroupper
 2375 0dd3 E9ACFDFF 		jmp	.L72	#
 2375      FF
 2376              	.LVL92:
 2377 0dd8 0F1F8400 		.p2align 4,,10
 2377      00000000 
 2378              		.p2align 3
 2379              	.L257:
 2380              		.loc 1 767 1 view .LVU789
 2381 0de0 C5F877   		vzeroupper
 2382 0de3 E914FAFF 		jmp	.L81	#
 2382      FF
 2383              	.LVL93:
 2384              	.L69:
 2385              		.loc 1 767 1 view .LVU790
 2386 0de8 488B5424 		mov	rdx, QWORD PTR -32[rsp]	# source_word, %sfp
 2386      E0
 2387 0ded 488D040A 		lea	rax, [rdx+rcx]	# source_word,
 2388 0df1 488D0CC7 		lea	rcx, [rdi+rax*8]	# _334,
 2389 0df5 4989CD   		mov	r13, rcx	# tmp433, _334
 2390 0df8 4D29DD   		sub	r13, r11	# tmp433, ivtmp.188
 2391 0dfb 4983ED08 		sub	r13, 8	# tmp434,
 2392 0dff 49C1ED03 		shr	r13, 3	# tmp432,
 2393 0e03 49FFC5   		inc	r13	# tmp435
 2394              	.LBB278:
 2395              	.LBB276:
 2396              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 71


 2397              		.loc 1 756 35 view .LVU791
 2398 0e06 4829D6   		sub	rsi, rdx	# tmp373, source_word
 2399 0e09 4183E507 		and	r13d, 7	# tmp436,
 2400 0e0d 0F840201 		je	.L250	#,
 2400      0000
 2401 0e13 4983FD01 		cmp	r13, 1	# tmp436,
 2402 0e17 0F84D300 		je	.L188	#,
 2402      0000
 2403 0e1d 4983FD02 		cmp	r13, 2	# tmp436,
 2404 0e21 0F84AC00 		je	.L189	#,
 2404      0000
 2405 0e27 4983FD03 		cmp	r13, 3	# tmp436,
 2406 0e2b 0F848500 		je	.L190	#,
 2406      0000
 2407 0e31 4983FD04 		cmp	r13, 4	# tmp436,
 2408 0e35 7463     		je	.L191	#,
 2409 0e37 4983FD05 		cmp	r13, 5	# tmp436,
 2410 0e3b 7440     		je	.L192	#,
 2411 0e3d 4983FD06 		cmp	r13, 6	# tmp436,
 2412 0e41 741D     		je	.L193	#,
 2413              	.LVL94:
 756:sieve_extend.c ****         }
 2414              		.loc 1 756 13 is_stmt 1 view .LVU792
 2415              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2416              		.loc 1 756 109 is_stmt 0 view .LVU793
 2417 0e43 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp908, %sfp
 2417      24F4
 2418              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2419              		.loc 1 756 62 view .LVU794
 2420 0e49 C442BBF7 		shrx	r14, QWORD PTR [r11], r8	# tmp670, MEM[base: _328, offset: 0B], _184
 2420      33
 2421              	.LVL95:
 2422              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2423              		.loc 1 756 109 view .LVU795
 2424 0e4e C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp672, MEM[base: _328, offset: 8B], tmp908
 2424      5B08
 2425              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2426              		.loc 1 756 80 view .LVU796
 2427 0e54 4909DE   		or	r14, rbx	# tmp673, tmp672
 2428 0e57 4D8974F3 		mov	QWORD PTR 8[r11+rsi*8], r14	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp673
 2428      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2429              		.loc 1 755 58 is_stmt 1 view .LVU797
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2430              		.loc 1 755 40 view .LVU798
 2431 0e5c 4983C308 		add	r11, 8	# ivtmp.188,
 2432              	.L193:
 756:sieve_extend.c ****         }
 2433              		.loc 1 756 13 view .LVU799
 2434              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2435              		.loc 1 756 109 is_stmt 0 view .LVU800
 2436 0e60 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp909, %sfp
GAS LISTING /tmp/ccW0oq2B.s 			page 72


 2436      24F4
 2437              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2438              		.loc 1 756 62 view .LVU801
 2439 0e66 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp675, MEM[base: _328, offset: 0B], _184
 2439      0B
 2440              	.LVL96:
 2441              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2442              		.loc 1 756 109 view .LVU802
 2443 0e6b C4C299F7 		shlx	rdx, QWORD PTR 8[r11], r12	# tmp677, MEM[base: _328, offset: 8B], tmp909
 2443      5308
 2444              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2445              		.loc 1 756 80 view .LVU803
 2446 0e71 4909D1   		or	r9, rdx	# tmp678, tmp677
 2447 0e74 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp678
 2447      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2448              		.loc 1 755 58 is_stmt 1 view .LVU804
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2449              		.loc 1 755 40 view .LVU805
 2450 0e79 4983C308 		add	r11, 8	# ivtmp.188,
 2451              	.L192:
 756:sieve_extend.c ****         }
 2452              		.loc 1 756 13 view .LVU806
 2453              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2454              		.loc 1 756 109 is_stmt 0 view .LVU807
 2455 0e7d 440FB674 		movzx	r14d, BYTE PTR -12[rsp]	# tmp910, %sfp
 2455      24F4
 2456              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2457              		.loc 1 756 62 view .LVU808
 2458 0e83 C442BBF7 		shrx	r13, QWORD PTR [r11], r8	# tmp680, MEM[base: _328, offset: 0B], _184
 2458      2B
 2459              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2460              		.loc 1 756 109 view .LVU809
 2461 0e88 C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp682, MEM[base: _328, offset: 8B], tmp910
 2461      5308
 2462              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2463              		.loc 1 756 80 view .LVU810
 2464 0e8e 4D09D5   		or	r13, r10	# tmp683, tmp682
 2465 0e91 4D896CF3 		mov	QWORD PTR 8[r11+rsi*8], r13	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp683
 2465      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2466              		.loc 1 755 58 is_stmt 1 view .LVU811
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 755 40 view .LVU812
 2468 0e96 4983C308 		add	r11, 8	# ivtmp.188,
 2469              	.L191:
 756:sieve_extend.c ****         }
 2470              		.loc 1 756 13 view .LVU813
 2471              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 73


 2472              		.loc 1 756 109 is_stmt 0 view .LVU814
 2473 0e9a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp911, %sfp
 2473      F4
 2474              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2475              		.loc 1 756 62 view .LVU815
 2476 0e9f C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp685, MEM[base: _328, offset: 0B], _184
 2476      0B
 2477              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2478              		.loc 1 756 109 view .LVU816
 2479 0ea4 C442E1F7 		shlx	r12, QWORD PTR 8[r11], rbx	# tmp687, MEM[base: _328, offset: 8B], tmp911
 2479      6308
 2480              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2481              		.loc 1 756 80 view .LVU817
 2482 0eaa 4D09E1   		or	r9, r12	# tmp688, tmp687
 2483 0ead 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp688
 2483      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2484              		.loc 1 755 58 is_stmt 1 view .LVU818
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2485              		.loc 1 755 40 view .LVU819
 2486 0eb2 4983C308 		add	r11, 8	# ivtmp.188,
 2487              	.L190:
 756:sieve_extend.c ****         }
 2488              		.loc 1 756 13 view .LVU820
 2489              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2490              		.loc 1 756 109 is_stmt 0 view .LVU821
 2491 0eb6 440FB66C 		movzx	r13d, BYTE PTR -12[rsp]	# tmp912, %sfp
 2491      24F4
 2492              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2493              		.loc 1 756 62 view .LVU822
 2494 0ebc C4C2BBF7 		shrx	rdx, QWORD PTR [r11], r8	# tmp690, MEM[base: _328, offset: 0B], _184
 2494      13
 2495              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2496              		.loc 1 756 109 view .LVU823
 2497 0ec1 C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp692, MEM[base: _328, offset: 8B], tmp912
 2497      7308
 2498              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2499              		.loc 1 756 80 view .LVU824
 2500 0ec7 4C09F2   		or	rdx, r14	# tmp693, tmp692
 2501 0eca 498954F3 		mov	QWORD PTR 8[r11+rsi*8], rdx	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp693
 2501      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2502              		.loc 1 755 58 is_stmt 1 view .LVU825
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 755 40 view .LVU826
 2504 0ecf 4983C308 		add	r11, 8	# ivtmp.188,
 2505              	.L189:
 756:sieve_extend.c ****         }
 2506              		.loc 1 756 13 view .LVU827
 2507              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccW0oq2B.s 			page 74


 756:sieve_extend.c ****         }
 2508              		.loc 1 756 109 is_stmt 0 view .LVU828
 2509 0ed3 440FB654 		movzx	r10d, BYTE PTR -12[rsp]	# tmp913, %sfp
 2509      24F4
 2510              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2511              		.loc 1 756 62 view .LVU829
 2512 0ed9 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp695, MEM[base: _328, offset: 0B], _184
 2512      0B
 2513              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2514              		.loc 1 756 109 view .LVU830
 2515 0ede C4C2A9F7 		shlx	rbx, QWORD PTR 8[r11], r10	# tmp697, MEM[base: _328, offset: 8B], tmp913
 2515      5B08
 2516              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2517              		.loc 1 756 80 view .LVU831
 2518 0ee4 4909D9   		or	r9, rbx	# tmp698, tmp697
 2519 0ee7 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp698
 2519      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2520              		.loc 1 755 58 is_stmt 1 view .LVU832
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2521              		.loc 1 755 40 view .LVU833
 2522 0eec 4983C308 		add	r11, 8	# ivtmp.188,
 2523              	.L188:
 756:sieve_extend.c ****         }
 2524              		.loc 1 756 13 view .LVU834
 2525              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2526              		.loc 1 756 109 is_stmt 0 view .LVU835
 2527 0ef0 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp914, %sfp
 2527      F4
 2528              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2529              		.loc 1 756 62 view .LVU836
 2530 0ef5 C442BBF7 		shrx	r12, QWORD PTR [r11], r8	# tmp700, MEM[base: _328, offset: 0B], _184
 2530      23
 2531              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2532              		.loc 1 756 109 view .LVU837
 2533 0efa C442E9F7 		shlx	r13, QWORD PTR 8[r11], rdx	# tmp702, MEM[base: _328, offset: 8B], tmp914
 2533      6B08
 2534              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2535              		.loc 1 756 80 view .LVU838
 2536 0f00 4D09EC   		or	r12, r13	# tmp703, tmp702
 2537 0f03 4D8964F3 		mov	QWORD PTR 8[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp703
 2537      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2538              		.loc 1 755 58 is_stmt 1 view .LVU839
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2539              		.loc 1 755 40 view .LVU840
 2540 0f08 4983C308 		add	r11, 8	# ivtmp.188,
 2541              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2542              		.loc 1 755 9 is_stmt 0 view .LVU841
GAS LISTING /tmp/ccW0oq2B.s 			page 75


 2543 0f0c 4939CB   		cmp	r11, rcx	# ivtmp.188, _334
 2544 0f0f 0F846FFC 		je	.L72	#,
 2544      FFFF
 2545              	.L250:
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2546              		.loc 1 755 9 view .LVU842
 2547 0f15 448B7424 		mov	r14d, DWORD PTR -12[rsp]	# _182, %sfp
 2547      F4
 2548              	.L74:
 756:sieve_extend.c ****         }
 2549              		.loc 1 756 13 is_stmt 1 view .LVU843
 2550              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2551              		.loc 1 756 109 is_stmt 0 view .LVU844
 2552 0f1a C44289F7 		shlx	r10, QWORD PTR 8[r11], r14	# tmp376, MEM[base: _328, offset: 8B], _182
 2552      5308
 2553              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2554              		.loc 1 756 62 view .LVU845
 2555 0f20 C442BBF7 		shrx	r9, QWORD PTR [r11], r8	# tmp374, MEM[base: _328, offset: 0B], _184
 2555      0B
 2556              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2557              		.loc 1 756 80 view .LVU846
 2558 0f25 4D09D1   		or	r9, r10	# tmp378, tmp376
 2559 0f28 4D894CF3 		mov	QWORD PTR 8[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp378
 2559      08
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2560              		.loc 1 755 58 is_stmt 1 view .LVU847
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2561              		.loc 1 755 40 view .LVU848
 2562 0f2d 4D8D6B10 		lea	r13, 16[r11]	# ivtmp.188,
 2563 0f31 498D5B08 		lea	rbx, 8[r11]	# tmp437,
 756:sieve_extend.c ****         }
 2564              		.loc 1 756 13 view .LVU849
 2565              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2566              		.loc 1 756 109 is_stmt 0 view .LVU850
 2567 0f35 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp496, MEM[base: _328, offset: 8B], _182
 2567      5308
 2568              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2569              		.loc 1 756 62 view .LVU851
 2570 0f3b C442BBF7 		shrx	r12, QWORD PTR 8[r11], r8	# tmp494, MEM[base: _328, offset: 0B], _184
 2570      6308
 2571              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2572              		.loc 1 756 80 view .LVU852
 2573 0f41 4909D4   		or	r12, rdx	# tmp497, tmp496
 2574 0f44 4D8964F3 		mov	QWORD PTR 16[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp497
 2574      10
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2575              		.loc 1 755 58 is_stmt 1 view .LVU853
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2576              		.loc 1 755 40 view .LVU854
 756:sieve_extend.c ****         }
 2577              		.loc 1 756 13 view .LVU855
GAS LISTING /tmp/ccW0oq2B.s 			page 76


 2578 0f49 498D5B18 		lea	rbx, 24[r11]	# ivtmp.188,
 2579              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2580              		.loc 1 756 109 is_stmt 0 view .LVU856
 2581 0f4d C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp502, MEM[base: _328, offset: 8B], _182
 2581      5508
 2582              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2583              		.loc 1 756 62 view .LVU857
 2584 0f53 C442BBF7 		shrx	r9, QWORD PTR 16[r11], r8	# tmp500, MEM[base: _328, offset: 0B], _184
 2584      4B10
 2585              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2586              		.loc 1 756 80 view .LVU858
 2587 0f59 4D09D1   		or	r9, r10	# tmp503, tmp502
 2588 0f5c 4D894CF3 		mov	QWORD PTR 24[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp503
 2588      18
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2589              		.loc 1 755 58 is_stmt 1 view .LVU859
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2590              		.loc 1 755 40 view .LVU860
 756:sieve_extend.c ****         }
 2591              		.loc 1 756 13 view .LVU861
 2592 0f61 4D8D6B20 		lea	r13, 32[r11]	# ivtmp.188,
 2593              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2594              		.loc 1 756 109 is_stmt 0 view .LVU862
 2595 0f65 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp508, MEM[base: _328, offset: 8B], _182
 2595      5308
 2596              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2597              		.loc 1 756 62 view .LVU863
 2598 0f6b C442BBF7 		shrx	r12, QWORD PTR 24[r11], r8	# tmp506, MEM[base: _328, offset: 0B], _184
 2598      6318
 2599              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2600              		.loc 1 756 80 view .LVU864
 2601 0f71 4909D4   		or	r12, rdx	# tmp509, tmp508
 2602 0f74 4D8964F3 		mov	QWORD PTR 32[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp509
 2602      20
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2603              		.loc 1 755 58 is_stmt 1 view .LVU865
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2604              		.loc 1 755 40 view .LVU866
 756:sieve_extend.c ****         }
 2605              		.loc 1 756 13 view .LVU867
 2606 0f79 498D5B28 		lea	rbx, 40[r11]	# ivtmp.188,
 2607              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2608              		.loc 1 756 109 is_stmt 0 view .LVU868
 2609 0f7d C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp514, MEM[base: _328, offset: 8B], _182
 2609      5508
 2610              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2611              		.loc 1 756 62 view .LVU869
 2612 0f83 C442BBF7 		shrx	r9, QWORD PTR 32[r11], r8	# tmp512, MEM[base: _328, offset: 0B], _184
 2612      4B20
GAS LISTING /tmp/ccW0oq2B.s 			page 77


 2613              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2614              		.loc 1 756 80 view .LVU870
 2615 0f89 4D09D1   		or	r9, r10	# tmp515, tmp514
 2616 0f8c 4D894CF3 		mov	QWORD PTR 40[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp515
 2616      28
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2617              		.loc 1 755 58 is_stmt 1 view .LVU871
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2618              		.loc 1 755 40 view .LVU872
 756:sieve_extend.c ****         }
 2619              		.loc 1 756 13 view .LVU873
 2620 0f91 4D8D6B30 		lea	r13, 48[r11]	# ivtmp.188,
 2621              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2622              		.loc 1 756 109 is_stmt 0 view .LVU874
 2623 0f95 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp520, MEM[base: _328, offset: 8B], _182
 2623      5308
 2624              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2625              		.loc 1 756 62 view .LVU875
 2626 0f9b C442BBF7 		shrx	r12, QWORD PTR 40[r11], r8	# tmp518, MEM[base: _328, offset: 0B], _184
 2626      6328
 2627              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2628              		.loc 1 756 80 view .LVU876
 2629 0fa1 4909D4   		or	r12, rdx	# tmp521, tmp520
 2630 0fa4 4D8964F3 		mov	QWORD PTR 48[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp521
 2630      30
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2631              		.loc 1 755 58 is_stmt 1 view .LVU877
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2632              		.loc 1 755 40 view .LVU878
 756:sieve_extend.c ****         }
 2633              		.loc 1 756 13 view .LVU879
 2634 0fa9 498D5B38 		lea	rbx, 56[r11]	# ivtmp.188,
 2635              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2636              		.loc 1 756 62 is_stmt 0 view .LVU880
 2637 0fad C442BBF7 		shrx	r9, QWORD PTR 48[r11], r8	# tmp524, MEM[base: _328, offset: 0B], _184
 2637      4B30
 2638              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2639              		.loc 1 756 109 view .LVU881
 2640 0fb3 C44289F7 		shlx	r10, QWORD PTR 8[r13], r14	# tmp526, MEM[base: _328, offset: 8B], _182
 2640      5508
 2641              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2642              		.loc 1 756 80 view .LVU882
 2643 0fb9 4D09D1   		or	r9, r10	# tmp527, tmp526
 2644 0fbc 4D894CF3 		mov	QWORD PTR 56[r11+rsi*8], r9	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp527
 2644      38
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2645              		.loc 1 755 58 is_stmt 1 view .LVU883
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2646              		.loc 1 755 40 view .LVU884
 756:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 78


 2647              		.loc 1 756 13 view .LVU885
 2648              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2649              		.loc 1 756 62 is_stmt 0 view .LVU886
 2650 0fc1 C442BBF7 		shrx	r12, QWORD PTR 56[r11], r8	# tmp530, MEM[base: _328, offset: 0B], _184
 2650      6338
 2651              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2652              		.loc 1 756 109 view .LVU887
 2653 0fc7 C4E289F7 		shlx	rdx, QWORD PTR 8[rbx], r14	# tmp532, MEM[base: _328, offset: 8B], _182
 2653      5308
 2654              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2655              		.loc 1 756 80 view .LVU888
 2656 0fcd 4909D4   		or	r12, rdx	# tmp533, tmp532
 2657 0fd0 4D8964F3 		mov	QWORD PTR 64[r11+rsi*8], r12	# MEM[base: _328, index: _330, step: 8, offset: 8B], tmp533
 2657      40
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2658              		.loc 1 755 58 is_stmt 1 view .LVU889
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2659              		.loc 1 755 40 view .LVU890
 2660 0fd5 4983C340 		add	r11, 64	# ivtmp.188,
 2661              	# sieve_extend.c:755:         for (register counter_t i = 0; i <loop_distance; i++) {
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2662              		.loc 1 755 9 is_stmt 0 view .LVU891
 2663 0fd9 4939CB   		cmp	r11, rcx	# ivtmp.188, _334
 2664 0fdc 0F8538FF 		jne	.L74	#,
 2664      FFFF
 2665 0fe2 E99DFBFF 		jmp	.L72	#
 2665      FF
 2666              	.LVL97:
 2667              	.L262:
 756:sieve_extend.c ****         }
 2668              		.loc 1 756 13 is_stmt 1 view .LVU892
 2669              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2670              		.loc 1 756 62 is_stmt 0 view .LVU893
 2671 0fe7 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r11]	# tmp915, MEM[base: _180, index: ivtmp.197_336, offset: 0B]
 2671      03
 2672              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2673              		.loc 1 756 109 view .LVU894
 2674 0fec C5FE6F1A 		vmovdqu	ymm3, YMMWORD PTR [rdx]	# tmp916, MEM[base: vectp.158_265, index: ivtmp.197_336, offset: 0
 2675              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2676              		.loc 1 756 62 view .LVU895
 2677 0ff0 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.156, tmp915, _184
 2678              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2679              		.loc 1 756 109 view .LVU896
 2680 0ff4 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.160, tmp916, _182
 2681 0ff8 BE200000 		mov	esi, 32	# ivtmp.197,
 2681      00
 2682              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2683              		.loc 1 756 80 view .LVU897
 2684 0ffd C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.161, vect__49.156, vect__54.160
GAS LISTING /tmp/ccW0oq2B.s 			page 79


 2684      DA
 2685              	# sieve_extend.c:756:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 756:sieve_extend.c ****         }
 2686              		.loc 1 756 35 view .LVU898
 2687 1002 C57E7F18 		vmovdqu	YMMWORD PTR [rax], ymm11	# MEM[base: vectp.163_273, index: ivtmp.197_336, offset: 0B], vec
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2688              		.loc 1 755 58 is_stmt 1 view .LVU899
 755:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2689              		.loc 1 755 40 view .LVU900
 2690 1006 E9EBF8FF 		jmp	.L187	#
 2690      FF
 2691              	.LBE276:
 2692              	.LBE278:
 2693              		.cfi_endproc
 2694              	.LFE71:
 2696 100b 0F1F4400 		.p2align 4
 2696      00
 2697              		.globl	compare_tuning_result
 2699              	compare_tuning_result:
 2700              	.LVL98:
 2701              	.LFB83:
 768:sieve_extend.c **** 
 769:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 770:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 771:sieve_extend.c ****    
 772:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 773:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 774:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 775:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 776:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 777:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 778:sieve_extend.c **** 
 779:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 780:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 781:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 782:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 783:sieve_extend.c ****         return; // rapid exit for one word variant
 784:sieve_extend.c ****     }
 785:sieve_extend.c **** 
 786:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 787:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 788:sieve_extend.c ****                                 & keepmask(copy_start);
 789:sieve_extend.c ****     
 790:sieve_extend.c ****     copy_word++;
 791:sieve_extend.c **** 
 792:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 793:sieve_extend.c **** 
 794:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 795:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 796:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 797:sieve_extend.c **** 
 798:sieve_extend.c **** }
 799:sieve_extend.c **** 
 800:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 801:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 802:sieve_extend.c **** 
 803:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
GAS LISTING /tmp/ccW0oq2B.s 			page 80


 804:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 805:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 806:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 807:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 808:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 809:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 810:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 811:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 812:sieve_extend.c **** 
 813:sieve_extend.c ****     copy_word++;
 814:sieve_extend.c ****     source_word++;
 815:sieve_extend.c **** 
 816:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 817:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 818:sieve_extend.c ****     source_word += distance;
 819:sieve_extend.c ****     copy_word += distance;
 820:sieve_extend.c **** 
 821:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 822:sieve_extend.c **** 
 823:sieve_extend.c ****     #pragma ivdep
 824:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 825:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 826:sieve_extend.c ****     }
 827:sieve_extend.c **** 
 828:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 831:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 832:sieve_extend.c **** 
 833:sieve_extend.c ****     #pragma ivdep
 834:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 835:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 836:sieve_extend.c **** 
 837:sieve_extend.c ****     #pragma ivdep
 838:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 839:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 840:sieve_extend.c **** 
 841:sieve_extend.c **** 
 842:sieve_extend.c ****  }
 843:sieve_extend.c **** 
 844:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 845:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 846:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 847:sieve_extend.c ****         return; // rapid exit for small sizes
 848:sieve_extend.c ****     }
 849:sieve_extend.c **** 
 850:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 851:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 852:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 853:sieve_extend.c **** 
 854:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 855:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 856:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 857:sieve_extend.c **** }
 858:sieve_extend.c **** 
 859:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 860:sieve_extend.c ****     counter_t prime = prime_start;
GAS LISTING /tmp/ccW0oq2B.s 			page 81


 861:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 862:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 863:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 864:sieve_extend.c **** 
 865:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 866:sieve_extend.c ****     
 867:sieve_extend.c ****     while (start <= block_stop) {
 868:sieve_extend.c ****         step  = prime * 2 + 1;
 869:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 870:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 871:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 873:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****     }
 875:sieve_extend.c ****     
 876:sieve_extend.c ****     while (start <= block_stop) {
 877:sieve_extend.c ****         step  = prime * 2 + 1;
 878:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 879:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 880:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 881:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 882:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 883:sieve_extend.c ****     }
 884:sieve_extend.c **** 
 885:sieve_extend.c ****     counter_t start1 = 0; // save value
 886:sieve_extend.c ****     counter_t step1 = 0; // save value
 887:sieve_extend.c ****     while (start <= block_stop) {
 888:sieve_extend.c ****         step  = prime * 2 + 1;
 889:sieve_extend.c ****         if (step > 64) break;
 890:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 891:sieve_extend.c ****         start1 = start; // save value
 892:sieve_extend.c ****         step1 = step; // save value
 893:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 894:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 895:sieve_extend.c ****         step  = prime * 2 + 1;
 896:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 897:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 898:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 899:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 900:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 901:sieve_extend.c ****     }
 902:sieve_extend.c **** 
 903:sieve_extend.c ****     // while (start <= block_stop) {
 904:sieve_extend.c ****     //     step  = prime * 2 + 1;
 905:sieve_extend.c ****     //     if (step > WORD_SIZE_counter * 4) break;
 906:sieve_extend.c ****     //     if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 907:sieve_extend.c ****     //     setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 908:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
 909:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 910:sieve_extend.c ****     // }
 911:sieve_extend.c **** 
 912:sieve_extend.c ****     while (start <= block_stop) {
 913:sieve_extend.c ****         step  = prime * 2 + 1;
 914:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 915:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 916:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 917:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
GAS LISTING /tmp/ccW0oq2B.s 			page 82


 918:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 919:sieve_extend.c ****     }
 920:sieve_extend.c **** 
 921:sieve_extend.c ****     while (start <= block_stop) {
 922:sieve_extend.c ****         step  = prime * 2 + 1;
 923:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 924:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 925:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 926:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 927:sieve_extend.c ****     }
 928:sieve_extend.c **** }
 929:sieve_extend.c **** 
 930:sieve_extend.c **** struct block {
 931:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 932:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 933:sieve_extend.c ****     counter_t prime; // next prime to be striped
 934:sieve_extend.c **** };
 935:sieve_extend.c **** 
 936:sieve_extend.c **** // returns prime that could not be handled:
 937:sieve_extend.c **** // start is too large
 938:sieve_extend.c **** // range is too big
 939:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 940:sieve_extend.c ****     register counter_t prime   = 0;
 941:sieve_extend.c ****     counter_t patternsize_bits = 1;
 942:sieve_extend.c ****     counter_t pattern_start    = 0;
 943:sieve_extend.c ****     counter_t range_stop       = block_start;
 944:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 945:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 946:sieve_extend.c **** 
 947:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 948:sieve_extend.c ****     
 949:sieve_extend.c ****     for (;range_stop < block_stop;) {
 950:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 951:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 952:sieve_extend.c ****         if (start > block_stop) break;
 953:sieve_extend.c **** 
 954:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 955:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 956:sieve_extend.c **** 
 957:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 958:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 959:sieve_extend.c ****         block.pattern_start = pattern_start;
 960:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 961:sieve_extend.c **** 
 962:sieve_extend.c ****         if (patternsize_bits>1) {
 963:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 964:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 965:sieve_extend.c ****         }
 966:sieve_extend.c ****         patternsize_bits *= step;
 967:sieve_extend.c **** 
 968:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 969:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 970:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 971:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 972:sieve_extend.c ****         block.prime = prime;
 973:sieve_extend.c ****     } 
 974:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 83


 975:sieve_extend.c ****     return block;
 976:sieve_extend.c **** }
 977:sieve_extend.c **** 
 978:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 979:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 980:sieve_extend.c ****     counter_t prime         = 0;
 981:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 982:sieve_extend.c **** 
 983:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",maxints,blocksiz
 984:sieve_extend.c **** 
 985:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 986:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 987:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 988:sieve_extend.c ****     prime = block.prime;
 989:sieve_extend.c **** 
 990:sieve_extend.c ****     // #pragma unroll 8
 991:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 992:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 993:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 994:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 995:sieve_extend.c ****     } 
 996:sieve_extend.c **** 
 997:sieve_extend.c ****     return sieve;
 998:sieve_extend.c **** }
 999:sieve_extend.c **** 
1000:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1001:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1002:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1003:sieve_extend.c ****         primeCount++;
1004:sieve_extend.c ****         if (factor < maxFactor/2) {
1005:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1006:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1007:sieve_extend.c ****         }
1008:sieve_extend.c ****     }
1009:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1010:sieve_extend.c **** }
1011:sieve_extend.c **** 
1012:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1013:sieve_extend.c ****     counter_t primeCount = 1;
1014:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1015:sieve_extend.c ****     return primeCount;
1016:sieve_extend.c **** }
1017:sieve_extend.c **** 
1018:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1019:sieve_extend.c ****     printf("DeepAnalyzing\n");
1020:sieve_extend.c ****     counter_t warn_prime = 0;
1021:sieve_extend.c ****     counter_t warn_nonprime = 0;
1022:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1023:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1024:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1025:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1026:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1027:sieve_extend.c ****                 }
1028:sieve_extend.c ****             }
1029:sieve_extend.c ****         }
1030:sieve_extend.c ****         else {
1031:sieve_extend.c ****             counter_t c_prime = 0;
GAS LISTING /tmp/ccW0oq2B.s 			page 84


1032:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1033:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1034:sieve_extend.c ****             }
1035:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1036:sieve_extend.c ****         }
1037:sieve_extend.c ****     }
1038:sieve_extend.c **** }
1039:sieve_extend.c **** 
1040:sieve_extend.c **** 
1041:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1042:sieve_extend.c **** 
1043:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1044:sieve_extend.c ****     counter_t valid_primes = 0;
1045:sieve_extend.c ****     switch(sieve->size) {
1046:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1047:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1048:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1049:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1050:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1051:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1052:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1053:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1054:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1055:sieve_extend.c ****         default:            valid_primes= 0;
1056:sieve_extend.c ****     }
1057:sieve_extend.c **** 
1058:sieve_extend.c ****     int valid = (valid_primes == primecount);
1059:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1060:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1061:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1062:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1063:sieve_extend.c ****     }
1064:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1065:sieve_extend.c ****     return (valid);
1066:sieve_extend.c **** }
1067:sieve_extend.c **** 
1068:sieve_extend.c **** void usage(char *name) {
1069:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1070:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1071:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1072:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1073:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1074:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1075:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1076:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1077:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1078:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1079:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1080:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1081:sieve_extend.c ****     exit(1);
1082:sieve_extend.c **** }
1083:sieve_extend.c **** 
1084:sieve_extend.c **** typedef struct  {
1085:sieve_extend.c ****     counter_t maxints;
1086:sieve_extend.c ****     counter_t blocksize_bits;
1087:sieve_extend.c ****     counter_t blocksize_kb;
1088:sieve_extend.c ****     counter_t free_bits;
GAS LISTING /tmp/ccW0oq2B.s 			page 85


1089:sieve_extend.c ****     counter_t smallstep_faster;
1090:sieve_extend.c ****     counter_t mediumstep_faster;
1091:sieve_extend.c ****     counter_t sample_max;
1092:sieve_extend.c ****     double    sample_duration;
1093:sieve_extend.c ****     counter_t passes;
1094:sieve_extend.c ****     double    elapsed_time;
1095:sieve_extend.c ****     double    avg;
1096:sieve_extend.c **** } tuning_result_type;
1097:sieve_extend.c **** 
1098:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 2702              		.loc 1 1098 57 view -0
 2703              		.cfi_startproc
 2704              		.loc 1 1098 57 is_stmt 0 view .LVU902
 2705 1010 F30F1EFA 		endbr64	
1099:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 2706              		.loc 1 1099 5 is_stmt 1 view .LVU903
 2707              	.LVL99:
1100:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 2708              		.loc 1 1100 5 view .LVU904
1101:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 2709              		.loc 1 1101 5 view .LVU905
 2710              	# sieve_extend.c:1101:     return (resultB->avg > resultA->avg ? 1 : -1);
 2711              		.loc 1 1101 45 is_stmt 0 view .LVU906
 2712 1014 C5FB1046 		vmovsd	xmm0, QWORD PTR 80[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 2712      50
 2713 1019 31C0     		xor	eax, eax	# <retval>
 2714 101b C5F92F47 		vcomisd	xmm0, QWORD PTR 80[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 2714      50
 2715 1020 0F97C0   		seta	al	#, <retval>
 2716 1023 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 2717              	# sieve_extend.c:1102: }
1102:sieve_extend.c **** }
 2718              		.loc 1 1102 1 view .LVU907
 2719 1027 C3       		ret	
 2720              		.cfi_endproc
 2721              	.LFE83:
 2723 1028 0F1F8400 		.p2align 4
 2723      00000000 
 2725              	extendSieve_aligned:
 2726              	.LVL100:
 2727              	.LFB67:
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2728              		.loc 1 540 140 is_stmt 1 view -0
 2729              		.cfi_startproc
 541:sieve_extend.c **** 
 2730              		.loc 1 541 5 view .LVU909
 543:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2731              		.loc 1 543 5 view .LVU910
 2732              	# sieve_extend.c:540: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2733              		.loc 1 540 140 is_stmt 0 view .LVU911
 2734 1030 55       		push	rbp	#
 2735              		.cfi_def_cfa_offset 16
 2736              		.cfi_offset 6, -16
 2737 1031 4889E5   		mov	rbp, rsp	#,
 2738              		.cfi_def_cfa_register 6
 2739 1034 4157     		push	r15	#
GAS LISTING /tmp/ccW0oq2B.s 			page 86


 2740 1036 4156     		push	r14	#
 2741              		.cfi_offset 15, -24
 2742              		.cfi_offset 14, -32
 2743              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2744              		.loc 1 548 35 view .LVU912
 2745 1038 4989FE   		mov	r14, rdi	# _5, bitarray
 2746              	# sieve_extend.c:540: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2747              		.loc 1 540 140 view .LVU913
 2748 103b 4155     		push	r13	#
 2749 103d 4154     		push	r12	#
 2750              		.cfi_offset 13, -40
 2751              		.cfi_offset 12, -48
 2752 103f 4989D4   		mov	r12, rdx	# size, tmp267
 2753              	# sieve_extend.c:544:     const counter_t copy_start = source_start + size;
 544:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2754              		.loc 1 544 21 view .LVU914
 2755 1042 4801F2   		add	rdx, rsi	# copy_start, source_start
 2756              	.LVL101:
 2757              	# sieve_extend.c:540: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2758              		.loc 1 540 140 view .LVU915
 2759 1045 53       		push	rbx	#
 2760              	# sieve_extend.c:545:     counter_t source_word = wordindex(source_start);
 545:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2761              		.loc 1 545 15 view .LVU916
 2762 1046 48C1EE06 		shr	rsi, 6	# source_start,
 2763              	.LVL102:
 2764              	# sieve_extend.c:546:     counter_t copy_word = wordindex(copy_start);
 546:sieve_extend.c ****     
 2765              		.loc 1 546 15 view .LVU917
 2766 104a 4889D0   		mov	rax, rdx	# ivtmp.241, copy_start
 2767              	# sieve_extend.c:540: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2768              		.loc 1 540 140 view .LVU918
 2769 104d 4883E4E0 		and	rsp, -32	#,
 2770 1051 4883EC20 		sub	rsp, 32	#,
 2771              		.cfi_offset 3, -56
 2772              	# sieve_extend.c:543:     const counter_t destination_stop_word = wordindex(destination_stop);
 543:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2773              		.loc 1 543 21 view .LVU919
 2774 1055 4889CB   		mov	rbx, rcx	# tmp268, tmp268
 2775              	# sieve_extend.c:546:     counter_t copy_word = wordindex(copy_start);
 546:sieve_extend.c ****     
 2776              		.loc 1 546 15 view .LVU920
 2777 1058 48C1E806 		shr	rax, 6	# ivtmp.241,
 2778              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2779              		.loc 1 548 52 view .LVU921
 2780 105c 89D1     		mov	ecx, edx	# tmp159, copy_start
 2781              	.LVL103:
 2782              	# sieve_extend.c:545:     counter_t source_word = wordindex(source_start);
 545:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2783              		.loc 1 545 15 view .LVU922
 2784 105e 48893424 		mov	QWORD PTR [rsp], rsi	# %sfp, source_word
 2785              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
GAS LISTING /tmp/ccW0oq2B.s 			page 87


 548:sieve_extend.c **** 
 2786              		.loc 1 548 35 view .LVU923
 2787 1062 48C1E603 		sal	rsi, 3	# _4,
 2788 1066 4901F6   		add	r14, rsi	# _5, _4
 2789              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2790              		.loc 1 548 52 view .LVU924
 2791 1069 F7D1     		not	ecx	# tmp159
 2792 106b 48C7C2FF 		mov	rdx, -1	# tmp162,
 2792      FFFFFF
 2793              	# sieve_extend.c:543:     const counter_t destination_stop_word = wordindex(destination_stop);
 543:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2794              		.loc 1 543 21 view .LVU925
 2795 1072 48C1EB06 		shr	rbx, 6	# tmp268,
 2796              	.LVL104:
 544:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 2797              		.loc 1 544 5 is_stmt 1 view .LVU926
 545:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 2798              		.loc 1 545 5 view .LVU927
 546:sieve_extend.c ****     
 2799              		.loc 1 546 5 view .LVU928
 548:sieve_extend.c **** 
 2800              		.loc 1 548 5 view .LVU929
 2801              	# sieve_extend.c:550:     while (copy_word + size <= destination_stop_word) {
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2802              		.loc 1 550 22 is_stmt 0 view .LVU930
 2803 1076 4D8D0C04 		lea	r9, [r12+rax]	# ivtmp.241,
 2804              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2805              		.loc 1 548 35 view .LVU931
 2806 107a 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, _4
 2806      08
 2807              	# sieve_extend.c:540: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 540:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 2808              		.loc 1 540 140 view .LVU932
 2809 107f 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, bitarray
 2809      10
 2810              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2811              		.loc 1 548 52 view .LVU933
 2812 1084 C4E2F3F7 		shrx	rsi, rdx, rcx	# tmp161, tmp162, tmp159
 2812      F2
 2813              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2814              		.loc 1 548 49 view .LVU934
 2815 1089 C442C8F2 		andn	r8, rsi, QWORD PTR [r14]	# tmp165, tmp161, *_5
 2815      06
 2816              	# sieve_extend.c:548:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 548:sieve_extend.c **** 
 2817              		.loc 1 548 25 view .LVU935
 2818 108e 4C8904C7 		mov	QWORD PTR [rdi+rax*8], r8	# *_13, tmp165
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2819              		.loc 1 550 5 is_stmt 1 view .LVU936
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2820              		.loc 1 550 11 view .LVU937
 2821 1092 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 2822 1095 0F824D01 		jb	.L267	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 88


 2822      0000
 2823 109b 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _12,
 2823      00000000 
 2824 10a3 4901FD   		add	r13, rdi	# tmp166, bitarray
 2825 10a6 4A8D04CD 		lea	rax, 0[0+r9*8]	# tmp167,
 2825      00000000 
 2826              	# sieve_extend.c:551:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 551:sieve_extend.c ****         copy_word += size;
 2827              		.loc 1 551 9 is_stmt 0 view .LVU938
 2828 10ae 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 2828      00000000 
 2829 10b6 4929C5   		sub	r13, rax	# _135, tmp167
 2830              	.LVL105:
 2831              	.L268:
 551:sieve_extend.c ****         copy_word += size;
 2832              		.loc 1 551 9 is_stmt 1 view .LVU939
 2833              	.LBB279:
 2834              	.LBI279:
 2835              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 2836              		.loc 2 31 1 view .LVU940
 2837              	.LBB280:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 2838              		.loc 2 34 3 view .LVU941
 2839              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccW0oq2B.s 			page 89


 2840              		.loc 2 34 10 is_stmt 0 view .LVU942
 2841 10b9 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp169,
 2841      00
 2842 10be 4C89FA   		mov	rdx, r15	#, _15
 2843 10c1 4C89F6   		mov	rsi, r14	#, _5
 2844 10c4 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.241
 2844      18
 2845 10c9 E8000000 		call	memcpy@PLT	#
 2845      00
 2846              	.LVL106:
 2847              		.loc 2 34 10 view .LVU943
 2848              	.LBE280:
 2849              	.LBE279:
 552:sieve_extend.c ****     }
 2850              		.loc 1 552 9 is_stmt 1 view .LVU944
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2851              		.loc 1 550 11 view .LVU945
 2852 10ce 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2852      18
 2853 10d3 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.241,
 2854 10d7 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 2855 10da 0F820801 		jb	.L267	#,
 2855      0000
 551:sieve_extend.c ****         copy_word += size;
 2856              		.loc 1 551 9 view .LVU946
 2857              	.LVL107:
 2858              	.LBB288:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2859              		.loc 2 31 1 view .LVU947
 2860              	.LBB281:
 2861              		.loc 2 34 3 view .LVU948
 2862              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2863              		.loc 2 34 10 is_stmt 0 view .LVU949
 2864 10e0 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp246,
 2864      00
 2865 10e5 4C89FA   		mov	rdx, r15	#, _15
 2866 10e8 4C89F6   		mov	rsi, r14	#, _5
 2867 10eb 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.241
 2867      18
 2868              	.LVL108:
 2869              		.loc 2 34 10 view .LVU950
 2870 10f0 E8000000 		call	memcpy@PLT	#
 2870      00
 2871              	.LVL109:
 2872              		.loc 2 34 10 view .LVU951
 2873              	.LBE281:
 2874              	.LBE288:
 552:sieve_extend.c ****     }
 2875              		.loc 1 552 9 is_stmt 1 view .LVU952
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2876              		.loc 1 550 11 view .LVU953
 2877 10f5 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2877      18
 2878 10fa 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.241,
 2879 10fe 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.241
 2880 1101 0F82E100 		jb	.L267	#,
 2880      0000
GAS LISTING /tmp/ccW0oq2B.s 			page 90


 551:sieve_extend.c ****         copy_word += size;
 2881              		.loc 1 551 9 view .LVU954
 2882              	.LVL110:
 2883              	.LBB289:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2884              		.loc 2 31 1 view .LVU955
 2885              	.LBB282:
 2886              		.loc 2 34 3 view .LVU956
 2887              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2888              		.loc 2 34 10 is_stmt 0 view .LVU957
 2889 1107 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp249,
 2889      00
 2890 110c 4C89FA   		mov	rdx, r15	#, _15
 2891 110f 4C89F6   		mov	rsi, r14	#, _5
 2892 1112 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, ivtmp.241
 2892      18
 2893 1117 E8000000 		call	memcpy@PLT	#
 2893      00
 2894              	.LVL111:
 2895              		.loc 2 34 10 view .LVU958
 2896              	.LBE282:
 2897              	.LBE289:
 552:sieve_extend.c ****     }
 2898              		.loc 1 552 9 is_stmt 1 view .LVU959
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2899              		.loc 1 550 11 view .LVU960
 2900 111c 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2900      18
 2901 1121 4E8D1C20 		lea	r11, [rax+r12]	# ivtmp.241,
 2902 1125 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.241
 2903 1128 0F82BA00 		jb	.L267	#,
 2903      0000
 551:sieve_extend.c ****         copy_word += size;
 2904              		.loc 1 551 9 view .LVU961
 2905              	.LVL112:
 2906              	.LBB290:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2907              		.loc 2 31 1 view .LVU962
 2908              	.LBB283:
 2909              		.loc 2 34 3 view .LVU963
 2910              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2911              		.loc 2 34 10 is_stmt 0 view .LVU964
 2912 112e 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp252,
 2912      00
 2913 1133 4C89FA   		mov	rdx, r15	#, _15
 2914 1136 4C89F6   		mov	rsi, r14	#, _5
 2915 1139 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, ivtmp.241
 2915      18
 2916 113e E8000000 		call	memcpy@PLT	#
 2916      00
 2917              	.LVL113:
 2918              		.loc 2 34 10 view .LVU965
 2919              	.LBE283:
 2920              	.LBE290:
 552:sieve_extend.c ****     }
 2921              		.loc 1 552 9 is_stmt 1 view .LVU966
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
GAS LISTING /tmp/ccW0oq2B.s 			page 91


 2922              		.loc 1 550 11 view .LVU967
 2923 1143 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2923      18
 2924 1148 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.241,
 2925 114c 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.241
 2926 114f 0F829300 		jb	.L267	#,
 2926      0000
 551:sieve_extend.c ****         copy_word += size;
 2927              		.loc 1 551 9 view .LVU968
 2928              	.LVL114:
 2929              	.LBB291:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2930              		.loc 2 31 1 view .LVU969
 2931              	.LBB284:
 2932              		.loc 2 34 3 view .LVU970
 2933              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2934              		.loc 2 34 10 is_stmt 0 view .LVU971
 2935 1155 4C89FA   		mov	rdx, r15	#, _15
 2936 1158 498D7CCD 		lea	rdi, 0[r13+rcx*8]	# tmp255,
 2936      00
 2937 115d 4C89F6   		mov	rsi, r14	#, _5
 2938 1160 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, ivtmp.241
 2938      18
 2939 1165 E8000000 		call	memcpy@PLT	#
 2939      00
 2940              	.LVL115:
 2941              		.loc 2 34 10 view .LVU972
 2942              	.LBE284:
 2943              	.LBE291:
 552:sieve_extend.c ****     }
 2944              		.loc 1 552 9 is_stmt 1 view .LVU973
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2945              		.loc 1 550 11 view .LVU974
 2946 116a 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2946      18
 2947 116f 4A8D1420 		lea	rdx, [rax+r12]	# ivtmp.241,
 2948 1173 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.241
 2949 1176 7270     		jb	.L267	#,
 551:sieve_extend.c ****         copy_word += size;
 2950              		.loc 1 551 9 view .LVU975
 2951              	.LVL116:
 2952              	.LBB292:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2953              		.loc 2 31 1 view .LVU976
 2954              	.LBB285:
 2955              		.loc 2 34 3 view .LVU977
 2956              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2957              		.loc 2 34 10 is_stmt 0 view .LVU978
 2958 1178 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, ivtmp.241
 2958      18
 2959 117d 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp258,
 2959      00
 2960 1182 4C89F6   		mov	rsi, r14	#, _5
 2961 1185 4C89FA   		mov	rdx, r15	#, _15
 2962 1188 E8000000 		call	memcpy@PLT	#
 2962      00
 2963              	.LVL117:
GAS LISTING /tmp/ccW0oq2B.s 			page 92


 2964              		.loc 2 34 10 view .LVU979
 2965              	.LBE285:
 2966              	.LBE292:
 552:sieve_extend.c ****     }
 2967              		.loc 1 552 9 is_stmt 1 view .LVU980
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2968              		.loc 1 550 11 view .LVU981
 2969 118d 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2969      18
 2970 1192 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.241,
 2971 1196 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.241
 2972 1199 724D     		jb	.L267	#,
 551:sieve_extend.c ****         copy_word += size;
 2973              		.loc 1 551 9 view .LVU982
 2974              	.LVL118:
 2975              	.LBB293:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2976              		.loc 2 31 1 view .LVU983
 2977              	.LBB286:
 2978              		.loc 2 34 3 view .LVU984
 2979              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2980              		.loc 2 34 10 is_stmt 0 view .LVU985
 2981 119b 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.241
 2981      18
 2982 11a0 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp261,
 2982      00
 2983 11a5 4C89FA   		mov	rdx, r15	#, _15
 2984 11a8 4C89F6   		mov	rsi, r14	#, _5
 2985 11ab E8000000 		call	memcpy@PLT	#
 2985      00
 2986              	.LVL119:
 2987              		.loc 2 34 10 view .LVU986
 2988              	.LBE286:
 2989              	.LBE293:
 552:sieve_extend.c ****     }
 2990              		.loc 1 552 9 is_stmt 1 view .LVU987
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 2991              		.loc 1 550 11 view .LVU988
 2992 11b0 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 2992      18
 2993 11b5 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.241,
 2994 11b9 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.241
 2995 11bc 722A     		jb	.L267	#,
 551:sieve_extend.c ****         copy_word += size;
 2996              		.loc 1 551 9 view .LVU989
 2997              	.LVL120:
 2998              	.LBB294:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2999              		.loc 2 31 1 view .LVU990
 3000              	.LBB287:
 3001              		.loc 2 34 3 view .LVU991
 3002              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3003              		.loc 2 34 10 is_stmt 0 view .LVU992
 3004 11be 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp264,
 3004      00
 3005 11c3 4C89FA   		mov	rdx, r15	#, _15
 3006 11c6 4C89F6   		mov	rsi, r14	#, _5
GAS LISTING /tmp/ccW0oq2B.s 			page 93


 3007 11c9 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, ivtmp.241
 3007      18
 3008 11ce E8000000 		call	memcpy@PLT	#
 3008      00
 3009              	.LVL121:
 3010              		.loc 2 34 10 view .LVU993
 3011              	.LBE287:
 3012              	.LBE294:
 552:sieve_extend.c ****     }
 3013              		.loc 1 552 9 is_stmt 1 view .LVU994
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3014              		.loc 1 550 11 view .LVU995
 3015 11d3 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.241, %sfp
 3015      18
 3016              	.LVL122:
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3017              		.loc 1 550 11 is_stmt 0 view .LVU996
 3018 11d8 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.241,
 3019              	.LVL123:
 550:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 3020              		.loc 1 550 11 view .LVU997
 3021 11dc 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.241
 3022 11df 0F83D4FE 		jnb	.L268	#,
 3022      FFFF
 3023              	.LVL124:
 3024              		.p2align 4,,10
 3025 11e5 0F1F00   		.p2align 3
 3026              	.L267:
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3027              		.loc 1 555 10 is_stmt 1 view .LVU998
 3028 11e8 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.241
 3029 11eb 0F86F701 		jbe	.L372	#,
 3029      0000
 3030 11f1 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# _4, %sfp
 3030      08
 3031 11f6 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 3031      00000000 
 3032              	.LVL125:
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3033              		.loc 1 555 10 is_stmt 0 view .LVU999
 3034 11fe 498D7C24 		lea	rdi, 32[r12]	# tmp175,
 3034      20
 3035 1203 4939FD   		cmp	r13, rdi	# _4, tmp175
 3036 1206 4D8D5520 		lea	r10, 32[r13]	# tmp178,
 3037 120a 410F9DC7 		setge	r15b	#, tmp177
 3038 120e 4D39D4   		cmp	r12, r10	# _41, tmp178
 3039 1211 410F9DC3 		setge	r11b	#, tmp180
 3040 1215 4508DF   		or	r15b, r11b	# tmp177, tmp180
 3041 1218 0F84FA01 		je	.L270	#,
 3041      0000
 3042 121e 488D4BFF 		lea	rcx, -1[rbx]	# tmp182,
 3043 1222 4829C1   		sub	rcx, rax	# tmp183, ivtmp.241
 3044 1225 4883F908 		cmp	rcx, 8	# tmp183,
 3045 1229 0F86E901 		jbe	.L270	#,
 3045      0000
 3046 122f 4989D9   		mov	r9, rbx	# niters.210, destination_stop_word
 3047 1232 4929C1   		sub	r9, rax	# niters.210, ivtmp.241
GAS LISTING /tmp/ccW0oq2B.s 			page 94


 3048 1235 4C89CE   		mov	rsi, r9	# bnd.211, niters.210
 3049 1238 48C1EE02 		shr	rsi, 2	# bnd.211,
 3050 123c 48C1E605 		sal	rsi, 5	# _128,
 3051 1240 4C8D46E0 		lea	r8, -32[rsi]	# tmp198,
 3052 1244 49C1E805 		shr	r8, 5	# tmp196,
 3053 1248 49FFC0   		inc	r8	# tmp199
 3054 124b 4C036424 		add	r12, QWORD PTR 16[rsp]	# vectp.219, %sfp
 3054      10
 3055 1250 31D2     		xor	edx, edx	# ivtmp.232
 3056 1252 4183E007 		and	r8d, 7	# tmp200,
 3057 1256 0F849D00 		je	.L271	#,
 3057      0000
 3058 125c 4983F801 		cmp	r8, 1	# tmp200,
 3059 1260 747E     		je	.L332	#,
 3060 1262 4983F802 		cmp	r8, 2	# tmp200,
 3061 1266 7468     		je	.L333	#,
 3062 1268 4983F803 		cmp	r8, 3	# tmp200,
 3063 126c 7452     		je	.L334	#,
 3064 126e 4983F804 		cmp	r8, 4	# tmp200,
 3065 1272 743C     		je	.L335	#,
 3066 1274 4983F805 		cmp	r8, 5	# tmp200,
 3067 1278 7426     		je	.L336	#,
 3068 127a 4983F806 		cmp	r8, 6	# tmp200,
 3069 127e 7410     		je	.L337	#,
 3070              	.LVL126:
 556:sieve_extend.c ****         source_word++;
 3071              		.loc 1 556 9 is_stmt 1 view .LVU1000
 3072              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3073              		.loc 1 556 29 is_stmt 0 view .LVU1001
 3074 1280 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14]	# tmp306, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3074      0E
 3075 1285 BA200000 		mov	edx, 32	# ivtmp.232,
 3075      00
 3076 128a C4C17E7F 		vmovdqu	YMMWORD PTR [r12], ymm1	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], tmp30
 3076      0C24
 557:sieve_extend.c ****         copy_word++;
 3077              		.loc 1 557 9 is_stmt 1 view .LVU1002
 558:sieve_extend.c ****     }
 3078              		.loc 1 558 9 view .LVU1003
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3079              		.loc 1 555 10 view .LVU1004
 3080              	.L337:
 556:sieve_extend.c ****         source_word++;
 3081              		.loc 1 556 9 view .LVU1005
 3082              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3083              		.loc 1 556 29 is_stmt 0 view .LVU1006
 3084 1290 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r14+rdx]	# tmp307, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3084      3C16
 3085 1296 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3085      3C14
 557:sieve_extend.c ****         copy_word++;
 3086              		.loc 1 557 9 is_stmt 1 view .LVU1007
 558:sieve_extend.c ****     }
 3087              		.loc 1 558 9 view .LVU1008
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 95


 3088              		.loc 1 555 10 view .LVU1009
 3089 129c 4883C220 		add	rdx, 32	# ivtmp.232,
 3090              	.L336:
 556:sieve_extend.c ****         source_word++;
 3091              		.loc 1 556 9 view .LVU1010
 3092              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3093              		.loc 1 556 29 is_stmt 0 view .LVU1011
 3094 12a0 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r14+rdx]	# tmp308, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3094      3416
 3095 12a6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3095      3414
 557:sieve_extend.c ****         copy_word++;
 3096              		.loc 1 557 9 is_stmt 1 view .LVU1012
 558:sieve_extend.c ****     }
 3097              		.loc 1 558 9 view .LVU1013
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3098              		.loc 1 555 10 view .LVU1014
 3099 12ac 4883C220 		add	rdx, 32	# ivtmp.232,
 3100              	.L335:
 556:sieve_extend.c ****         source_word++;
 3101              		.loc 1 556 9 view .LVU1015
 3102              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3103              		.loc 1 556 29 is_stmt 0 view .LVU1016
 3104 12b0 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r14+rdx]	# tmp309, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3104      2C16
 3105 12b6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm5	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3105      2C14
 557:sieve_extend.c ****         copy_word++;
 3106              		.loc 1 557 9 is_stmt 1 view .LVU1017
 558:sieve_extend.c ****     }
 3107              		.loc 1 558 9 view .LVU1018
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3108              		.loc 1 555 10 view .LVU1019
 3109 12bc 4883C220 		add	rdx, 32	# ivtmp.232,
 3110              	.L334:
 556:sieve_extend.c ****         source_word++;
 3111              		.loc 1 556 9 view .LVU1020
 3112              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3113              		.loc 1 556 29 is_stmt 0 view .LVU1021
 3114 12c0 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rdx]	# tmp310, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3114      2416
 3115 12c6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm4	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3115      2414
 557:sieve_extend.c ****         copy_word++;
 3116              		.loc 1 557 9 is_stmt 1 view .LVU1022
 558:sieve_extend.c ****     }
 3117              		.loc 1 558 9 view .LVU1023
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3118              		.loc 1 555 10 view .LVU1024
 3119 12cc 4883C220 		add	rdx, 32	# ivtmp.232,
 3120              	.L333:
 556:sieve_extend.c ****         source_word++;
 3121              		.loc 1 556 9 view .LVU1025
 3122              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 96


 556:sieve_extend.c ****         source_word++;
 3123              		.loc 1 556 29 is_stmt 0 view .LVU1026
 3124 12d0 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rdx]	# tmp311, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3124      0416
 3125 12d6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm0	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3125      0414
 557:sieve_extend.c ****         copy_word++;
 3126              		.loc 1 557 9 is_stmt 1 view .LVU1027
 558:sieve_extend.c ****     }
 3127              		.loc 1 558 9 view .LVU1028
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3128              		.loc 1 555 10 view .LVU1029
 3129 12dc 4883C220 		add	rdx, 32	# ivtmp.232,
 3130              	.L332:
 556:sieve_extend.c ****         source_word++;
 3131              		.loc 1 556 9 view .LVU1030
 3132              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3133              		.loc 1 556 29 is_stmt 0 view .LVU1031
 3134 12e0 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r14+rdx]	# tmp312, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3134      1416
 3135 12e6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3135      1414
 557:sieve_extend.c ****         copy_word++;
 3136              		.loc 1 557 9 is_stmt 1 view .LVU1032
 558:sieve_extend.c ****     }
 3137              		.loc 1 558 9 view .LVU1033
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3138              		.loc 1 555 10 view .LVU1034
 3139 12ec 4883C220 		add	rdx, 32	# ivtmp.232,
 3140 12f0 4839F2   		cmp	rdx, rsi	# ivtmp.232, _128
 3141 12f3 0F849600 		je	.L368	#,
 3141      0000
 3142              	.L271:
 556:sieve_extend.c ****         source_word++;
 3143              		.loc 1 556 9 view .LVU1035
 3144              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3145              		.loc 1 556 29 is_stmt 0 view .LVU1036
 3146 12f9 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r14+rdx]	# tmp286, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3146      1C16
 3147 12ff C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm3	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B], t
 3147      1C14
 557:sieve_extend.c ****         copy_word++;
 3148              		.loc 1 557 9 is_stmt 1 view .LVU1037
 558:sieve_extend.c ****     }
 3149              		.loc 1 558 9 view .LVU1038
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3150              		.loc 1 555 10 view .LVU1039
 556:sieve_extend.c ****         source_word++;
 3151              		.loc 1 556 9 view .LVU1040
 3152              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3153              		.loc 1 556 29 is_stmt 0 view .LVU1041
 3154 1305 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r14+rdx]	# tmp287, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3154      441620
 3155 130c C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm8	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B],
GAS LISTING /tmp/ccW0oq2B.s 			page 97


 3155      441420
 557:sieve_extend.c ****         copy_word++;
 3156              		.loc 1 557 9 is_stmt 1 view .LVU1042
 558:sieve_extend.c ****     }
 3157              		.loc 1 558 9 view .LVU1043
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3158              		.loc 1 555 10 view .LVU1044
 556:sieve_extend.c ****         source_word++;
 3159              		.loc 1 556 9 view .LVU1045
 3160              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3161              		.loc 1 556 29 is_stmt 0 view .LVU1046
 3162 1313 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rdx]	# tmp288, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3162      4C1640
 3163 131a C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm9	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B],
 3163      4C1440
 557:sieve_extend.c ****         copy_word++;
 3164              		.loc 1 557 9 is_stmt 1 view .LVU1047
 558:sieve_extend.c ****     }
 3165              		.loc 1 558 9 view .LVU1048
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3166              		.loc 1 555 10 view .LVU1049
 556:sieve_extend.c ****         source_word++;
 3167              		.loc 1 556 9 view .LVU1050
 3168              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3169              		.loc 1 556 29 is_stmt 0 view .LVU1051
 3170 1321 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 96[r14+rdx]	# tmp289, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3170      541660
 3171 1328 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm10	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B]
 3171      541460
 557:sieve_extend.c ****         copy_word++;
 3172              		.loc 1 557 9 is_stmt 1 view .LVU1052
 558:sieve_extend.c ****     }
 3173              		.loc 1 558 9 view .LVU1053
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3174              		.loc 1 555 10 view .LVU1054
 556:sieve_extend.c ****         source_word++;
 3175              		.loc 1 556 9 view .LVU1055
 3176              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3177              		.loc 1 556 29 is_stmt 0 view .LVU1056
 3178 132f C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 128[r14+rdx]	# tmp290, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3178      9C168000 
 3178      0000
 3179 1339 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3179      9C148000 
 3179      0000
 557:sieve_extend.c ****         copy_word++;
 3180              		.loc 1 557 9 is_stmt 1 view .LVU1057
 558:sieve_extend.c ****     }
 3181              		.loc 1 558 9 view .LVU1058
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3182              		.loc 1 555 10 view .LVU1059
 556:sieve_extend.c ****         source_word++;
 3183              		.loc 1 556 9 view .LVU1060
 3184              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 98


 556:sieve_extend.c ****         source_word++;
 3185              		.loc 1 556 29 is_stmt 0 view .LVU1061
 3186 1343 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r14+rdx]	# tmp291, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3186      A416A000 
 3186      0000
 3187 134d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm12	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3187      A414A000 
 3187      0000
 557:sieve_extend.c ****         copy_word++;
 3188              		.loc 1 557 9 is_stmt 1 view .LVU1062
 558:sieve_extend.c ****     }
 3189              		.loc 1 558 9 view .LVU1063
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3190              		.loc 1 555 10 view .LVU1064
 556:sieve_extend.c ****         source_word++;
 3191              		.loc 1 556 9 view .LVU1065
 3192              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3193              		.loc 1 556 29 is_stmt 0 view .LVU1066
 3194 1357 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r14+rdx]	# tmp292, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3194      AC16C000 
 3194      0000
 3195 1361 C4417E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm13	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3195      AC14C000 
 3195      0000
 557:sieve_extend.c ****         copy_word++;
 3196              		.loc 1 557 9 is_stmt 1 view .LVU1067
 558:sieve_extend.c ****     }
 3197              		.loc 1 558 9 view .LVU1068
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3198              		.loc 1 555 10 view .LVU1069
 556:sieve_extend.c ****         source_word++;
 3199              		.loc 1 556 9 view .LVU1070
 3200              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3201              		.loc 1 556 29 is_stmt 0 view .LVU1071
 3202 136b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 224[r14+rdx]	# tmp293, MEM[base: _5, index: ivtmp.232_126, offset: 0B]
 3202      B416E000 
 3202      0000
 3203 1375 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm14	# MEM[base: vectp.219_98, index: ivtmp.232_126, offset: 0B
 3203      B414E000 
 3203      0000
 557:sieve_extend.c ****         copy_word++;
 3204              		.loc 1 557 9 is_stmt 1 view .LVU1072
 558:sieve_extend.c ****     }
 3205              		.loc 1 558 9 view .LVU1073
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3206              		.loc 1 555 10 view .LVU1074
 3207 137f 4881C200 		add	rdx, 256	# ivtmp.232,
 3207      010000
 3208 1386 4839F2   		cmp	rdx, rsi	# ivtmp.232, _128
 3209 1389 0F856AFF 		jne	.L271	#,
 3209      FFFF
 3210              	.L368:
 3211 138f 4C8B2424 		mov	r12, QWORD PTR [rsp]	# source_word, %sfp
 3212 1393 4D89CE   		mov	r14, r9	# niters_vector_mult_vf.212, niters.210
 3213 1396 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.212,
GAS LISTING /tmp/ccW0oq2B.s 			page 99


 3214 139a 4D01F4   		add	r12, r14	# source_word, niters_vector_mult_vf.212
 3215 139d 4C01F0   		add	rax, r14	# tmp.214, niters_vector_mult_vf.212
 3216 13a0 4D39F1   		cmp	r9, r14	# niters.210, niters_vector_mult_vf.212
 3217 13a3 745B     		je	.L371	#,
 3218              	.LVL127:
 556:sieve_extend.c ****         source_word++;
 3219              		.loc 1 556 9 view .LVU1075
 3220              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3221              		.loc 1 556 39 is_stmt 0 view .LVU1076
 3222 13a5 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# bitarray, %sfp
 3222      10
 3223              	# sieve_extend.c:558:         copy_word++;
 558:sieve_extend.c ****     }
 3224              		.loc 1 558 18 view .LVU1077
 3225 13aa 4C8D7801 		lea	r15, 1[rax]	# copy_word,
 3226              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3227              		.loc 1 556 39 view .LVU1078
 3228 13ae 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# _37, *_21
 3228      00
 3229              	# sieve_extend.c:557:         source_word++;
 557:sieve_extend.c ****         copy_word++;
 3230              		.loc 1 557 20 view .LVU1079
 3231 13b3 49FFC4   		inc	r12	# source_word
 3232              	.LVL128:
 3233              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3234              		.loc 1 556 29 view .LVU1080
 3235 13b6 49897CC5 		mov	QWORD PTR 0[r13+rax*8], rdi	# *_23, _37
 3235      00
 557:sieve_extend.c ****         copy_word++;
 3236              		.loc 1 557 9 is_stmt 1 view .LVU1081
 3237              	.LVL129:
 558:sieve_extend.c ****     }
 3238              		.loc 1 558 9 view .LVU1082
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3239              		.loc 1 555 10 view .LVU1083
 3240 13bb 4C39FB   		cmp	rbx, r15	# destination_stop_word, copy_word
 3241 13be 7640     		jbe	.L371	#,
 556:sieve_extend.c ****         source_word++;
 3242              		.loc 1 556 9 view .LVU1084
 3243              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3244              		.loc 1 556 39 is_stmt 0 view .LVU1085
 3245 13c0 4F8B5CE5 		mov	r11, QWORD PTR 0[r13+r12*8]	# _111, *_108
 3245      00
 3246              	# sieve_extend.c:558:         copy_word++;
 558:sieve_extend.c ****     }
 3247              		.loc 1 558 18 view .LVU1086
 3248 13c5 4883C002 		add	rax, 2	# copy_word,
 3249              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3250              		.loc 1 556 29 view .LVU1087
 3251 13c9 4F895CFD 		mov	QWORD PTR 0[r13+r15*8], r11	# *_110, _111
 3251      00
 557:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccW0oq2B.s 			page 100


 3252              		.loc 1 557 9 is_stmt 1 view .LVU1088
 558:sieve_extend.c ****     }
 3253              		.loc 1 558 9 view .LVU1089
 3254              	.LVL130:
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3255              		.loc 1 555 10 view .LVU1090
 3256              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3257              		.loc 1 556 39 is_stmt 0 view .LVU1091
 3258 13ce 4E8D14E5 		lea	r10, 0[0+r12*8]	# _107,
 3258      00000000 
 3259              	# sieve_extend.c:555:    while (copy_word < destination_stop_word) {
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3260              		.loc 1 555 10 view .LVU1092
 3261 13d6 4839C3   		cmp	rbx, rax	# destination_stop_word, copy_word
 3262 13d9 7625     		jbe	.L371	#,
 556:sieve_extend.c ****         source_word++;
 3263              		.loc 1 556 9 is_stmt 1 view .LVU1093
 3264              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3265              		.loc 1 556 39 is_stmt 0 view .LVU1094
 3266 13db 4F8B4C15 		mov	r9, QWORD PTR 8[r13+r10]	# _83, *_80
 3266      08
 3267              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3268              		.loc 1 556 29 view .LVU1095
 3269 13e0 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_82, _83
 3269      00
 557:sieve_extend.c ****         copy_word++;
 3270              		.loc 1 557 9 is_stmt 1 view .LVU1096
 558:sieve_extend.c ****     }
 3271              		.loc 1 558 9 view .LVU1097
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3272              		.loc 1 555 10 view .LVU1098
 3273 13e5 C5F877   		vzeroupper
 3274              	.LVL131:
 3275              	.L372:
 3276              	# sieve_extend.c:561: }
 561:sieve_extend.c **** 
 3277              		.loc 1 561 1 is_stmt 0 view .LVU1099
 3278 13e8 488D65D8 		lea	rsp, -40[rbp]	#,
 3279              	.LVL132:
 561:sieve_extend.c **** 
 3280              		.loc 1 561 1 view .LVU1100
 3281 13ec 5B       		pop	rbx	#
 3282 13ed 415C     		pop	r12	#
 3283 13ef 415D     		pop	r13	#
 3284 13f1 415E     		pop	r14	#
 3285 13f3 415F     		pop	r15	#
 3286 13f5 5D       		pop	rbp	#
 3287              		.cfi_remember_state
 3288              		.cfi_def_cfa 7, 8
 3289              	.LVL133:
 561:sieve_extend.c **** 
 3290              		.loc 1 561 1 view .LVU1101
 3291 13f6 C3       		ret	
 3292              	.LVL134:
GAS LISTING /tmp/ccW0oq2B.s 			page 101


 3293 13f7 660F1F84 		.p2align 4,,10
 3293      00000000 
 3293      00
 3294              		.p2align 3
 3295              	.L371:
 3296              		.cfi_restore_state
 561:sieve_extend.c **** 
 3297              		.loc 1 561 1 view .LVU1102
 3298 1400 C5F877   		vzeroupper
 3299 1403 488D65D8 		lea	rsp, -40[rbp]	#,
 3300              	.LVL135:
 561:sieve_extend.c **** 
 3301              		.loc 1 561 1 view .LVU1103
 3302 1407 5B       		pop	rbx	#
 3303              	.LVL136:
 561:sieve_extend.c **** 
 3304              		.loc 1 561 1 view .LVU1104
 3305 1408 415C     		pop	r12	#
 3306 140a 415D     		pop	r13	#
 3307 140c 415E     		pop	r14	#
 3308 140e 415F     		pop	r15	#
 3309 1410 5D       		pop	rbp	#
 3310              		.cfi_remember_state
 3311              		.cfi_def_cfa 7, 8
 3312              	.LVL137:
 561:sieve_extend.c **** 
 3313              		.loc 1 561 1 view .LVU1105
 3314 1411 C3       		ret	
 3315              	.LVL138:
 3316              		.p2align 4,,10
 3317 1412 660F1F44 		.p2align 3
 3317      0000
 3318              	.L270:
 3319              		.cfi_restore_state
 561:sieve_extend.c **** 
 3320              		.loc 1 561 1 view .LVU1106
 3321 1418 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# bitarray, %sfp
 3321      10
 3322              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3323              		.loc 1 556 39 view .LVU1107
 3324 141d 488B1424 		mov	rdx, QWORD PTR [rsp]	# source_word, %sfp
 3325 1421 4C8D04DE 		lea	r8, [rsi+rbx*8]	# _125,
 3326 1425 4901F4   		add	r12, rsi	# ivtmp.227, bitarray
 3327 1428 4829C2   		sub	rdx, rax	# source_word, ivtmp.241
 3328 142b 4C89C0   		mov	rax, r8	# tmp191, _125
 3329 142e 4C29E0   		sub	rax, r12	# tmp191, ivtmp.227
 3330 1431 4883E808 		sub	rax, 8	# tmp192,
 3331 1435 48C1E803 		shr	rax, 3	# tmp190,
 3332 1439 48FFC0   		inc	rax	# tmp193
 3333 143c 83E007   		and	eax, 7	# tmp194,
 3334 143f 0F848800 		je	.L273	#,
 3334      0000
 3335 1445 4883F801 		cmp	rax, 1	# tmp194,
 3336 1449 746C     		je	.L338	#,
 3337 144b 4883F802 		cmp	rax, 2	# tmp194,
 3338 144f 7459     		je	.L339	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 102


 3339 1451 4883F803 		cmp	rax, 3	# tmp194,
 3340 1455 7446     		je	.L340	#,
 3341 1457 4883F804 		cmp	rax, 4	# tmp194,
 3342 145b 7433     		je	.L341	#,
 3343 145d 4883F805 		cmp	rax, 5	# tmp194,
 3344 1461 7420     		je	.L342	#,
 3345 1463 4883F806 		cmp	rax, 6	# tmp194,
 3346 1467 740D     		je	.L343	#,
 3347              	.LVL139:
 556:sieve_extend.c ****         source_word++;
 3348              		.loc 1 556 9 is_stmt 1 view .LVU1108
 3349              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3350              		.loc 1 556 39 is_stmt 0 view .LVU1109
 3351 1469 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3352 146d 4983C408 		add	r12, 8	# ivtmp.227,
 3353              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3354              		.loc 1 556 29 view .LVU1110
 3355 1471 4D897424 		mov	QWORD PTR -8[r12], r14	# MEM[base: _120, offset: 0B], _70
 3355      F8
 557:sieve_extend.c ****         copy_word++;
 3356              		.loc 1 557 9 is_stmt 1 view .LVU1111
 558:sieve_extend.c ****     }
 3357              		.loc 1 558 9 view .LVU1112
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3358              		.loc 1 555 10 view .LVU1113
 3359              	.L343:
 556:sieve_extend.c ****         source_word++;
 3360              		.loc 1 556 9 view .LVU1114
 3361              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3362              		.loc 1 556 39 is_stmt 0 view .LVU1115
 3363 1476 4D8B2CD4 		mov	r13, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3364 147a 4983C408 		add	r12, 8	# ivtmp.227,
 3365              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3366              		.loc 1 556 29 view .LVU1116
 3367 147e 4D896C24 		mov	QWORD PTR -8[r12], r13	# MEM[base: _120, offset: 0B], _70
 3367      F8
 557:sieve_extend.c ****         copy_word++;
 3368              		.loc 1 557 9 is_stmt 1 view .LVU1117
 558:sieve_extend.c ****     }
 3369              		.loc 1 558 9 view .LVU1118
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3370              		.loc 1 555 10 view .LVU1119
 3371              	.L342:
 556:sieve_extend.c ****         source_word++;
 3372              		.loc 1 556 9 view .LVU1120
 3373              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3374              		.loc 1 556 39 is_stmt 0 view .LVU1121
 3375 1483 498B3CD4 		mov	rdi, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3376 1487 4983C408 		add	r12, 8	# ivtmp.227,
 3377              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3378              		.loc 1 556 29 view .LVU1122
GAS LISTING /tmp/ccW0oq2B.s 			page 103


 3379 148b 49897C24 		mov	QWORD PTR -8[r12], rdi	# MEM[base: _120, offset: 0B], _70
 3379      F8
 557:sieve_extend.c ****         copy_word++;
 3380              		.loc 1 557 9 is_stmt 1 view .LVU1123
 558:sieve_extend.c ****     }
 3381              		.loc 1 558 9 view .LVU1124
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3382              		.loc 1 555 10 view .LVU1125
 3383              	.L341:
 556:sieve_extend.c ****         source_word++;
 3384              		.loc 1 556 9 view .LVU1126
 3385              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3386              		.loc 1 556 39 is_stmt 0 view .LVU1127
 3387 1490 4D8B3CD4 		mov	r15, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3388 1494 4983C408 		add	r12, 8	# ivtmp.227,
 3389              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3390              		.loc 1 556 29 view .LVU1128
 3391 1498 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 3391      F8
 557:sieve_extend.c ****         copy_word++;
 3392              		.loc 1 557 9 is_stmt 1 view .LVU1129
 558:sieve_extend.c ****     }
 3393              		.loc 1 558 9 view .LVU1130
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3394              		.loc 1 555 10 view .LVU1131
 3395              	.L340:
 556:sieve_extend.c ****         source_word++;
 3396              		.loc 1 556 9 view .LVU1132
 3397              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3398              		.loc 1 556 39 is_stmt 0 view .LVU1133
 3399 149d 4D8B14D4 		mov	r10, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3400 14a1 4983C408 		add	r12, 8	# ivtmp.227,
 3401              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3402              		.loc 1 556 29 view .LVU1134
 3403 14a5 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _120, offset: 0B], _70
 3403      F8
 557:sieve_extend.c ****         copy_word++;
 3404              		.loc 1 557 9 is_stmt 1 view .LVU1135
 558:sieve_extend.c ****     }
 3405              		.loc 1 558 9 view .LVU1136
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3406              		.loc 1 555 10 view .LVU1137
 3407              	.L339:
 556:sieve_extend.c ****         source_word++;
 3408              		.loc 1 556 9 view .LVU1138
 3409              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3410              		.loc 1 556 39 is_stmt 0 view .LVU1139
 3411 14aa 4D8B1CD4 		mov	r11, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3412 14ae 4983C408 		add	r12, 8	# ivtmp.227,
 3413              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3414              		.loc 1 556 29 view .LVU1140
GAS LISTING /tmp/ccW0oq2B.s 			page 104


 3415 14b2 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _120, offset: 0B], _70
 3415      F8
 557:sieve_extend.c ****         copy_word++;
 3416              		.loc 1 557 9 is_stmt 1 view .LVU1141
 558:sieve_extend.c ****     }
 3417              		.loc 1 558 9 view .LVU1142
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3418              		.loc 1 555 10 view .LVU1143
 3419              	.L338:
 556:sieve_extend.c ****         source_word++;
 3420              		.loc 1 556 9 view .LVU1144
 3421              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3422              		.loc 1 556 39 is_stmt 0 view .LVU1145
 3423 14b7 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3424 14bb 4983C408 		add	r12, 8	# ivtmp.227,
 3425              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3426              		.loc 1 556 29 view .LVU1146
 3427 14bf 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _120, offset: 0B], _70
 3427      F8
 557:sieve_extend.c ****         copy_word++;
 3428              		.loc 1 557 9 is_stmt 1 view .LVU1147
 558:sieve_extend.c ****     }
 3429              		.loc 1 558 9 view .LVU1148
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3430              		.loc 1 555 10 view .LVU1149
 3431 14c4 4D39C4   		cmp	r12, r8	# ivtmp.227, _125
 3432 14c7 0F841BFF 		je	.L372	#,
 3432      FFFF
 3433              	.LVL140:
 3434              	.L273:
 556:sieve_extend.c ****         source_word++;
 3435              		.loc 1 556 9 view .LVU1150
 3436              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3437              		.loc 1 556 39 is_stmt 0 view .LVU1151
 3438 14cd 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3439              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3440              		.loc 1 556 29 view .LVU1152
 3441 14d1 49891C24 		mov	QWORD PTR [r12], rbx	# MEM[base: _120, offset: 0B], _70
 557:sieve_extend.c ****         copy_word++;
 3442              		.loc 1 557 9 is_stmt 1 view .LVU1153
 558:sieve_extend.c ****     }
 3443              		.loc 1 558 9 view .LVU1154
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3444              		.loc 1 555 10 view .LVU1155
 556:sieve_extend.c ****         source_word++;
 3445              		.loc 1 556 9 view .LVU1156
 3446              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3447              		.loc 1 556 39 is_stmt 0 view .LVU1157
 3448 14d5 4D8B4CD4 		mov	r9, QWORD PTR 8[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3448      08
 3449              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccW0oq2B.s 			page 105


 3450              		.loc 1 556 29 view .LVU1158
 3451 14da 4D894C24 		mov	QWORD PTR 8[r12], r9	# MEM[base: _120, offset: 0B], _70
 3451      08
 557:sieve_extend.c ****         copy_word++;
 3452              		.loc 1 557 9 is_stmt 1 view .LVU1159
 558:sieve_extend.c ****     }
 3453              		.loc 1 558 9 view .LVU1160
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3454              		.loc 1 555 10 view .LVU1161
 556:sieve_extend.c ****         source_word++;
 3455              		.loc 1 556 9 view .LVU1162
 3456              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3457              		.loc 1 556 39 is_stmt 0 view .LVU1163
 3458 14df 498B74D4 		mov	rsi, QWORD PTR 16[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3458      10
 3459              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3460              		.loc 1 556 29 view .LVU1164
 3461 14e4 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _120, offset: 0B], _70
 3461      10
 557:sieve_extend.c ****         copy_word++;
 3462              		.loc 1 557 9 is_stmt 1 view .LVU1165
 558:sieve_extend.c ****     }
 3463              		.loc 1 558 9 view .LVU1166
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3464              		.loc 1 555 10 view .LVU1167
 556:sieve_extend.c ****         source_word++;
 3465              		.loc 1 556 9 view .LVU1168
 3466              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3467              		.loc 1 556 39 is_stmt 0 view .LVU1169
 3468 14e9 498B44D4 		mov	rax, QWORD PTR 24[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3468      18
 3469              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3470              		.loc 1 556 29 view .LVU1170
 3471 14ee 49894424 		mov	QWORD PTR 24[r12], rax	# MEM[base: _120, offset: 0B], _70
 3471      18
 557:sieve_extend.c ****         copy_word++;
 3472              		.loc 1 557 9 is_stmt 1 view .LVU1171
 558:sieve_extend.c ****     }
 3473              		.loc 1 558 9 view .LVU1172
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3474              		.loc 1 555 10 view .LVU1173
 556:sieve_extend.c ****         source_word++;
 3475              		.loc 1 556 9 view .LVU1174
 3476              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3477              		.loc 1 556 39 is_stmt 0 view .LVU1175
 3478 14f3 4D8B74D4 		mov	r14, QWORD PTR 32[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3478      20
 3479              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3480              		.loc 1 556 29 view .LVU1176
 3481 14f8 4D897424 		mov	QWORD PTR 32[r12], r14	# MEM[base: _120, offset: 0B], _70
 3481      20
GAS LISTING /tmp/ccW0oq2B.s 			page 106


 557:sieve_extend.c ****         copy_word++;
 3482              		.loc 1 557 9 is_stmt 1 view .LVU1177
 558:sieve_extend.c ****     }
 3483              		.loc 1 558 9 view .LVU1178
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3484              		.loc 1 555 10 view .LVU1179
 556:sieve_extend.c ****         source_word++;
 3485              		.loc 1 556 9 view .LVU1180
 3486              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3487              		.loc 1 556 39 is_stmt 0 view .LVU1181
 3488 14fd 4D8B6CD4 		mov	r13, QWORD PTR 40[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3488      28
 3489              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3490              		.loc 1 556 29 view .LVU1182
 3491 1502 4D896C24 		mov	QWORD PTR 40[r12], r13	# MEM[base: _120, offset: 0B], _70
 3491      28
 557:sieve_extend.c ****         copy_word++;
 3492              		.loc 1 557 9 is_stmt 1 view .LVU1183
 558:sieve_extend.c ****     }
 3493              		.loc 1 558 9 view .LVU1184
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3494              		.loc 1 555 10 view .LVU1185
 556:sieve_extend.c ****         source_word++;
 3495              		.loc 1 556 9 view .LVU1186
 3496              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3497              		.loc 1 556 39 is_stmt 0 view .LVU1187
 3498 1507 498B7CD4 		mov	rdi, QWORD PTR 48[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3498      30
 3499              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3500              		.loc 1 556 29 view .LVU1188
 3501 150c 49897C24 		mov	QWORD PTR 48[r12], rdi	# MEM[base: _120, offset: 0B], _70
 3501      30
 557:sieve_extend.c ****         copy_word++;
 3502              		.loc 1 557 9 is_stmt 1 view .LVU1189
 558:sieve_extend.c ****     }
 3503              		.loc 1 558 9 view .LVU1190
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3504              		.loc 1 555 10 view .LVU1191
 556:sieve_extend.c ****         source_word++;
 3505              		.loc 1 556 9 view .LVU1192
 3506              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3507              		.loc 1 556 39 is_stmt 0 view .LVU1193
 3508 1511 4D8B7CD4 		mov	r15, QWORD PTR 56[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 3508      38
 3509 1516 4983C440 		add	r12, 64	# ivtmp.227,
 3510              	# sieve_extend.c:556:         bitarray[copy_word] = bitarray[source_word];
 556:sieve_extend.c ****         source_word++;
 3511              		.loc 1 556 29 view .LVU1194
 3512 151a 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 3512      F8
 557:sieve_extend.c ****         copy_word++;
 3513              		.loc 1 557 9 is_stmt 1 view .LVU1195
GAS LISTING /tmp/ccW0oq2B.s 			page 107


 558:sieve_extend.c ****     }
 3514              		.loc 1 558 9 view .LVU1196
 555:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 3515              		.loc 1 555 10 view .LVU1197
 3516 151f 4D39C4   		cmp	r12, r8	# ivtmp.227, _125
 3517 1522 75A9     		jne	.L273	#,
 3518 1524 E9BFFEFF 		jmp	.L372	#
 3518      FF
 3519              		.cfi_endproc
 3520              	.LFE67:
 3522 1529 0F1F8000 		.p2align 4
 3522      000000
 3524              	extendSieve_shiftleft:
 3525              	.LVL141:
 3526              	.LFB73:
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3527              		.loc 1 800 142 view -0
 3528              		.cfi_startproc
 801:sieve_extend.c **** 
 3529              		.loc 1 801 5 view .LVU1199
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3530              		.loc 1 803 5 view .LVU1200
 3531              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3532              		.loc 1 800 142 is_stmt 0 view .LVU1201
 3533 1530 55       		push	rbp	#
 3534              		.cfi_def_cfa_offset 16
 3535              		.cfi_offset 6, -16
 3536              	# sieve_extend.c:803:     const counter_t destination_stop_word = wordindex(destination_stop);
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3537              		.loc 1 803 21 view .LVU1202
 3538 1531 48C1E906 		shr	rcx, 6	# tmp1116,
 3539              	.LVL142:
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3540              		.loc 1 803 21 view .LVU1203
 3541 1535 4989CA   		mov	r10, rcx	# destination_stop_word, tmp1116
 3542              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3543              		.loc 1 800 142 view .LVU1204
 3544 1538 4889E5   		mov	rbp, rsp	#,
 3545              		.cfi_def_cfa_register 6
 3546 153b 4157     		push	r15	#
 3547 153d 4989D1   		mov	r9, rdx	# size, tmp1115
 3548 1540 4156     		push	r14	#
 3549 1542 4155     		push	r13	#
 3550 1544 4154     		push	r12	#
 3551 1546 53       		push	rbx	#
 3552              		.cfi_offset 15, -24
 3553              		.cfi_offset 14, -32
 3554              		.cfi_offset 13, -40
 3555              		.cfi_offset 12, -48
 3556              		.cfi_offset 3, -56
 3557 1547 4889FB   		mov	rbx, rdi	# bitarray, tmp1113
 3558              	# sieve_extend.c:804:     const counter_t copy_start = source_start + size;
 804:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3559              		.loc 1 804 21 view .LVU1205
 3560 154a 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
GAS LISTING /tmp/ccW0oq2B.s 			page 108


 3561              	.LVL143:
 3562              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3563              		.loc 1 800 142 view .LVU1206
 3564 154e 4883E4E0 		and	rsp, -32	#,
 3565 1552 4883EC60 		sub	rsp, 96	#,
 3566              	# sieve_extend.c:803:     const counter_t destination_stop_word = wordindex(destination_stop);
 803:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 3567              		.loc 1 803 21 view .LVU1207
 3568 1556 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 3568      50
 3569              	.LVL144:
 804:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 3570              		.loc 1 804 5 is_stmt 1 view .LVU1208
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3571              		.loc 1 805 5 view .LVU1209
 3572              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3573              		.loc 1 805 39 is_stmt 0 view .LVU1210
 3574 155b 4889F1   		mov	rcx, rsi	# _4, source_start
 3575              	.LVL145:
 3576              	# sieve_extend.c:807:     register counter_t source_word = wordindex(source_start);
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3577              		.loc 1 807 24 view .LVU1211
 3578 155e 48C1EE06 		shr	rsi, 6	# source_start,
 3579              	.LVL146:
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3580              		.loc 1 807 24 view .LVU1212
 3581 1562 4989F0   		mov	r8, rsi	# source_word, source_start
 3582              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3583              		.loc 1 805 39 view .LVU1213
 3584 1565 83E13F   		and	ecx, 63	# _4,
 3585              	.LVL147:
 3586              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3587              		.loc 1 805 69 view .LVU1214
 3588 1568 4889F8   		mov	rax, rdi	# _5, copy_start
 3589 156b 83E03F   		and	eax, 63	# _5,
 3590              	.LVL148:
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 3591              		.loc 1 806 5 is_stmt 1 view .LVU1215
 807:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3592              		.loc 1 807 5 view .LVU1216
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3593              		.loc 1 808 5 view .LVU1217
 3594              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3595              		.loc 1 810 41 is_stmt 0 view .LVU1218
 3596 156e 4D8D7001 		lea	r14, 1[r8]	# _183,
 3597              	# sieve_extend.c:805:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 805:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3598              		.loc 1 805 31 view .LVU1219
 3599 1572 4989CF   		mov	r15, rcx	# shift, _4
 3600 1575 4929C7   		sub	r15, rax	# shift, _5
 3601              	.LVL149:
 3602              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccW0oq2B.s 			page 109


 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3603              		.loc 1 810 41 view .LVU1220
 3604 1578 4C897424 		mov	QWORD PTR 88[rsp], r14	# %sfp, _183
 3604      58
 3605              	# sieve_extend.c:806:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 3606              		.loc 1 806 31 view .LVU1221
 3607 157d 4829C8   		sub	rax, rcx	# tmp470, _4
 3608              	.LVL150:
 3609              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3610              		.loc 1 809 52 view .LVU1222
 3611 1580 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 3612              	.LVL151:
 3613              	# sieve_extend.c:806:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 806:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 3614              		.loc 1 806 31 view .LVU1223
 3615 1584 4C8D7040 		lea	r14, 64[rax]	# shift_flipped,
 3616              	.LVL152:
 3617              	# sieve_extend.c:800: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 800:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 3618              		.loc 1 800 142 view .LVU1224
 3619 1588 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 3619      18
 3620              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3621              		.loc 1 809 38 view .LVU1225
 3622 158d 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 3622      00000000 
 3623              	.LVL153:
 3624              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3625              		.loc 1 810 57 view .LVU1226
 3626 1595 C4E289F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r14	# tmp472, *_16, shift_flipped
 3626      441308
 3627              	# sieve_extend.c:808:     register counter_t copy_word = wordindex(copy_start);
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3628              		.loc 1 808 24 view .LVU1227
 3629 159c 4989FB   		mov	r11, rdi	# copy_word, copy_start
 3630              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3631              		.loc 1 809 52 view .LVU1228
 3632 159f C46283F7 		shrx	r8, rcx, r15	# tmp474, *_10, shift
 3632      C1
 3633              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 3634              		.loc 1 811 33 view .LVU1229
 3635 15a4 F7D7     		not	edi	# tmp477
 3636              	.LVL154:
 3637              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3638              		.loc 1 810 30 view .LVU1230
 3639 15a6 4909C0   		or	r8, rax	# tmp476, tmp472
 3640              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 3641              		.loc 1 811 33 view .LVU1231
 3642 15a9 48C7C0FF 		mov	rax, -1	# tmp480,
GAS LISTING /tmp/ccW0oq2B.s 			page 110


 3642      FFFFFF
 3643 15b0 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp479, tmp480, tmp477
 3643      F8
 3644              	# sieve_extend.c:811:                              & ~chopmask(copy_start); // because this is the 
 811:sieve_extend.c **** 
 3645              		.loc 1 811 30 view .LVU1232
 3646 15b5 C4C2C0F2 		andn	rcx, rdi, r8	# tmp482, tmp479, tmp476
 3646      C8
 3647              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3648              		.loc 1 816 41 view .LVU1233
 3649 15ba 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# tmp483, %sfp
 3649      58
 3650              	# sieve_extend.c:808:     register counter_t copy_word = wordindex(copy_start);
 808:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 3651              		.loc 1 808 24 view .LVU1234
 3652 15bf 49C1EB06 		shr	r11, 6	# copy_word,
 3653              	.LVL155:
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3654              		.loc 1 809 5 is_stmt 1 view .LVU1235
 3655              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3656              		.loc 1 816 41 is_stmt 0 view .LVU1236
 3657 15c3 4D01C8   		add	r8, r9	# tmp483, size
 3658              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3659              		.loc 1 809 25 view .LVU1237
 3660 15c6 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 3660      00000000 
 3661 15ce 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp482
 813:sieve_extend.c ****     source_word++;
 3662              		.loc 1 813 5 is_stmt 1 view .LVU1238
 3663              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3664              		.loc 1 816 21 is_stmt 0 view .LVU1239
 3665 15d2 4D39D0   		cmp	r8, r10	# tmp483, destination_stop_word
 3666 15d5 4D0F47C2 		cmova	r8, r10	# tmp483,, tmp483, destination_stop_word
 3667              	.LBB300:
 3668              	.LBB301:
 3669              	# sieve_extend.c:658:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 658:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3670              		.loc 1 658 91 view .LVU1240
 3671 15d9 41BA0200 		mov	r10d, 2	# tmp484,
 3671      0000
 3672              	.LVL156:
 658:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3673              		.loc 1 658 91 view .LVU1241
 3674 15df 4983F802 		cmp	r8, 2	# aligned_copy_word,
 3675 15e3 4D0F43D0 		cmovnb	r10, r8	# aligned_copy_word,, _86
 3676              	.LBE301:
 3677              	.LBE300:
 3678              	# sieve_extend.c:813:     copy_word++;
 813:sieve_extend.c ****     source_word++;
 3679              		.loc 1 813 14 view .LVU1242
 3680 15e7 498D4301 		lea	rax, 1[r11]	# ivtmp.319,
 3681              	.LVL157:
 814:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 111


 3682              		.loc 1 814 5 is_stmt 1 view .LVU1243
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3683              		.loc 1 816 5 view .LVU1244
 3684              	.LBB323:
 3685              	.LBB318:
 3686              	# sieve_extend.c:658:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 658:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3687              		.loc 1 658 21 is_stmt 0 view .LVU1245
 3688 15eb 498D7AFE 		lea	rdi, -2[r10]	# fast_loop_stop_word,
 3689              	.LBE318:
 3690              	.LBE323:
 3691              	# sieve_extend.c:816:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 816:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 3692              		.loc 1 816 21 view .LVU1246
 3693 15ef 4C894424 		mov	QWORD PTR 56[rsp], r8	# %sfp, aligned_copy_word
 3693      38
 3694              	.LVL158:
 817:sieve_extend.c ****     source_word += distance;
 3695              		.loc 1 817 5 is_stmt 1 view .LVU1247
 3696              	.LBB324:
 3697              	.LBI300:
 657:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 3698              		.loc 1 657 25 view .LVU1248
 3699              	.LBB319:
 658:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3700              		.loc 1 658 5 view .LVU1249
 3701              	# sieve_extend.c:658:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 658:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 3702              		.loc 1 658 21 is_stmt 0 view .LVU1250
 3703 15f4 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, fast_loop_stop_word
 3703      48
 3704              	.LVL159:
 659:sieve_extend.c ****     counter_t distance = 0;
 3705              		.loc 1 659 5 is_stmt 1 view .LVU1251
 660:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 3706              		.loc 1 660 5 view .LVU1252
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3707              		.loc 1 661 5 view .LVU1253
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3708              		.loc 1 661 11 view .LVU1254
 3709              	.LBE319:
 3710              	.LBE324:
 3711              	# sieve_extend.c:809:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 809:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 3712              		.loc 1 809 52 is_stmt 0 view .LVU1255
 3713 15f9 4589FC   		mov	r12d, r15d	# _12, shift
 3714              	# sieve_extend.c:810:                              | (bitarray[source_word+1] << shift_flipped))
 810:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 3715              		.loc 1 810 57 view .LVU1256
 3716 15fc 4589F5   		mov	r13d, r14d	# _18, shift_flipped
 3717              	.LBB325:
 3718              	.LBB320:
 3719              	# sieve_extend.c:661:     while (copy_word < fast_loop_stop_word) {
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3720              		.loc 1 661 11 view .LVU1257
 3721 15ff 4839F8   		cmp	rax, rdi	# ivtmp.319, fast_loop_stop_word
 3722 1602 0F832104 		jnb	.L375	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 112


 3722      0000
 3723 1608 4D29DA   		sub	r10, r11	# tmp485, copy_word
 3724 160b 4C8D4A40 		lea	r9, 64[rdx]	# tmp487,
 3725              	.LVL160:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3726              		.loc 1 661 11 view .LVU1258
 3727 160f 498D4AFC 		lea	rcx, -4[r10]	# _269,
 3728 1613 4C8D4610 		lea	r8, 16[rsi]	# tmp488,
 3729 1617 4C8D5648 		lea	r10, 72[rsi]	# tmp491,
 3730 161b 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, _269
 3730      30
 3731 1620 4D39C1   		cmp	r9, r8	# tmp487, tmp488
 3732 1623 488D4A08 		lea	rcx, 8[rdx]	# tmp690,
 3733 1627 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, tmp487
 3733      28
 3734 162c 410F9EC1 		setle	r9b	#, tmp490
 3735 1630 4939CA   		cmp	r10, rcx	# tmp491, tmp690
 3736 1633 4C895424 		mov	QWORD PTR 64[rsp], r10	# %sfp, tmp491
 3736      40
 3737 1638 410F9EC2 		setle	r10b	#, tmp494
 3738 163c 4509D1   		or	r9d, r10d	# tmp490, tmp494
 3739 163f 4589CA   		mov	r10d, r9d	# tmp495, tmp490
 3740 1642 4C8D4A50 		lea	r9, 80[rdx]	# tmp496,
 3741 1646 4D39C1   		cmp	r9, r8	# tmp496, tmp488
 3742 1649 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, tmp496
 3742      20
 3743 164e 410F9EC1 		setle	r9b	#, tmp499
 3744 1652 4883C210 		add	rdx, 16	# tmp501,
 3745 1656 48395424 		cmp	QWORD PTR 64[rsp], rdx	# %sfp, tmp501
 3745      40
 3746 165b 400F9EC7 		setle	dil	#, tmp503
 3747              	.LVL161:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3748              		.loc 1 661 11 view .LVU1259
 3749 165f 4409CF   		or	edi, r9d	# tmp504, tmp499
 3750 1662 4421D7   		and	edi, r10d	# tmp505, tmp495
 3751 1665 48837C24 		cmp	QWORD PTR 48[rsp], 11	# %sfp,
 3751      300B
 3752 166b 410F97C2 		seta	r10b	#, tmp507
 3753 166f 4C8D4E08 		lea	r9, 8[rsi]	# tmp510,
 3754 1673 4421D7   		and	edi, r10d	# tmp508, tmp507
 3755 1676 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp510
 3755      28
 3756 167b 410F9EC2 		setle	r10b	#, tmp512
 3757 167f 4883C640 		add	rsi, 64	# tmp513,
 3758 1683 4839CE   		cmp	rsi, rcx	# tmp513, tmp690
 3759 1686 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 3759      28
 3760 168b 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp517, %sfp
 3760      28
 3761 1690 4421D7   		and	edi, r10d	# tmp518, tmp517
 3762 1693 4C394C24 		cmp	QWORD PTR 32[rsp], r9	# %sfp, tmp510
 3762      20
 3763 1698 410F9EC2 		setle	r10b	#, tmp522
 3764 169c 4839D6   		cmp	rsi, rdx	# tmp513, tmp501
 3765 169f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 3765      28
GAS LISTING /tmp/ccW0oq2B.s 			page 113


 3766 16a4 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp527, %sfp
 3766      28
 3767 16a9 4484D7   		test	dil, r10b	# tmp518, tmp527
 3768 16ac 0F84460E 		je	.L376	#,
 3768      0000
 3769 16b2 4C394C24 		cmp	QWORD PTR 64[rsp], r9	# %sfp, tmp510
 3769      40
 3770 16b7 400F9EC7 		setle	dil	#, tmp532
 3771 16bb 4C39C6   		cmp	rsi, r8	# tmp513, tmp488
 3772 16be 400F9EC6 		setle	sil	#, tmp536
 3773 16c2 4008F7   		or	dil, sil	# tmp532, tmp536
 3774 16c5 0F842D0E 		je	.L376	#,
 3774      0000
 3775 16cb 4801D9   		add	rcx, rbx	# vectp.284, bitarray
 3776              	.LBB302:
 3777              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3778              		.loc 1 662 19 view .LVU1260
 3779 16ce C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1219, MEM[base: vectp.284_427, index: ivtmp.359_621, offset: 
 3780 16d2 4801DA   		add	rdx, rbx	# vectp.288, bitarray
 3781              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3782              		.loc 1 663 19 view .LVU1261
 3783 16d5 C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], MEM[
 3784 16d9 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B], M
 3784      20
 3785              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3786              		.loc 1 662 19 view .LVU1262
 3787 16de C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp548, tmp1219, MEM[base: vectp.284_427, index: ivt
 3787      20
 3788 16e3 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# _269, %sfp
 3788      30
 3789              	.LVL162:
 3790              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3791              		.loc 1 663 19 view .LVU1263
 3792 16e8 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp544, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3793 16ec C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp562, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B]
 3794 16f0 49C1EB03 		shr	r11, 3	# _269,
 3795 16f4 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_444, tmp544,
 3795      C5D8
 3796 16fa C4C1796E 		vmovd	xmm3, r15d	# _12, _12
 3796      DF
 3797 16ff C4C1796E 		vmovd	xmm4, r14d	# _18, _18
 3797      E6
 3798              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3799              		.loc 1 662 19 view .LVU1264
 3800 1704 C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp547, tmp548,
 3800      F2D8
 3801              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3802              		.loc 1 663 19 view .LVU1265
 3803 170a C443FD00 		vpermq	ymm15, ymm14, 216	# tmp561, tmp562,
 3803      FED8
 3804 1710 4C895C24 		mov	QWORD PTR 64[rsp], r11	# %sfp, bnd.277
GAS LISTING /tmp/ccW0oq2B.s 			page 114


 3804      40
 3805              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3806              		.loc 1 664 42 view .LVU1266
 3807 1715 C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.291, tmp547, _12
 3808              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3809              		.loc 1 664 63 view .LVU1267
 3810 1719 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.292, vect_perm_even_444, _18
 3811              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3812              		.loc 1 666 63 view .LVU1268
 3813 171d C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.295, tmp561, _18
 3814              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3815              		.loc 1 666 42 view .LVU1269
 3816 1721 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.294, vect_perm_even_444, _12
 3817              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3818              		.loc 1 664 52 view .LVU1270
 3819 1725 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.293, vect__98.291, vect__100.292
 3819      DA
 3820              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3821              		.loc 1 666 52 view .LVU1271
 3822 172a C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.296, vect__110.295, vect__109.294
 3823 172e 49FFCB   		dec	r11	# tmp725
 3824              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3825              		.loc 1 664 31 view .LVU1272
 3826 1731 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp558, vect__104.293
 3826      DD01
 3827              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3828              		.loc 1 666 31 view .LVU1273
 3829 1737 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp572, vect__114.296
 3829      EF01
 3830 173d 4183E301 		and	r11d, 1	# tmp725,
 3831              	.LVL163:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3832              		.loc 1 662 9 is_stmt 1 view .LVU1274
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3833              		.loc 1 663 9 view .LVU1275
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3834              		.loc 1 664 9 view .LVU1276
 3835 1741 48837C24 		cmp	QWORD PTR 64[rsp], 1	# %sfp,
 3835      4001
 3836              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3837              		.loc 1 664 31 is_stmt 0 view .LVU1277
 3838 1747 C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp554
 3838      1C0B
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3839              		.loc 1 664 31 view .LVU1278
 3840 174d C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp558
 3840      6C0B20
 3841 1754 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp55
GAS LISTING /tmp/ccW0oq2B.s 			page 115


 3841      5C0B1001 
 3842 175c C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp55
 3842      6C0B3001 
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3843              		.loc 1 665 9 is_stmt 1 view .LVU1279
 3844              	.LVL164:
 666:sieve_extend.c ****         copy_word += 2;
 3845              		.loc 1 666 9 view .LVU1280
 3846 1764 4E8D140B 		lea	r10, [rbx+r9]	# _450,
 3847 1768 4A8D3C03 		lea	rdi, [rbx+r8]	# _470,
 3848              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3849              		.loc 1 666 31 is_stmt 0 view .LVU1281
 3850 176c C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp568
 3850      2C03
 666:sieve_extend.c ****         copy_word += 2;
 3851              		.loc 1 666 31 view .LVU1282
 3852 1772 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp572
 3852      7C0320
 3853 1779 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp568
 3853      6C031001 
 3854 1781 C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp572
 3854      7C033001 
 667:sieve_extend.c ****         source_word += 2;
 3855              		.loc 1 667 9 is_stmt 1 view .LVU1283
 668:sieve_extend.c ****         distance += 2;
 3856              		.loc 1 668 9 view .LVU1284
 669:sieve_extend.c ****     }
 3857              		.loc 1 669 9 view .LVU1285
 669:sieve_extend.c ****     }
 3858              		.loc 1 669 9 is_stmt 0 view .LVU1286
 3859              	.LBE302:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3860              		.loc 1 661 11 is_stmt 1 view .LVU1287
 3861 1789 41B94000 		mov	r9d, 64	# ivtmp.359,
 3861      0000
 3862 178f 41B80100 		mov	r8d, 1	# ivtmp.357,
 3862      0000
 3863 1795 0F864A01 		jbe	.L594	#,
 3863      0000
 3864 179b 4D85DB   		test	r11, r11	# tmp727
 3865 179e 0F857C0A 		jne	.L627	#,
 3865      0000
 3866              	.L620:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3867              		.loc 1 661 11 is_stmt 0 view .LVU1288
 3868 17a4 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# bnd.277, %sfp
 3868      40
 3869              	.L377:
 3870              	.LBB303:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3871              		.loc 1 662 9 is_stmt 1 view .LVU1289
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3872              		.loc 1 663 9 view .LVU1290
 3873              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3874              		.loc 1 662 19 is_stmt 0 view .LVU1291
GAS LISTING /tmp/ccW0oq2B.s 			page 116


 3875 17a9 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r9]	# tmp1221, MEM[base: vectp.284_427, index: ivtmp.359_621, offse
 3875      0C09
 3876              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3877              		.loc 1 663 19 view .LVU1292
 3878 17af C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], 
 3878      240A
 3879 17b5 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B
 3879      6C0A20
 3880              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3881              		.loc 1 662 19 view .LVU1293
 3882 17bc C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r9]	# tmp738, tmp1221, MEM[base: vectp.284_427, index: 
 3882      440920
 3883              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3884              		.loc 1 663 19 view .LVU1294
 3885 17c3 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp734, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0
 3885      F5
 3886 17c8 C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp749, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0
 3886      DD
 3887 17cd C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_444, tmp734,
 3887      FED8
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3888              		.loc 1 664 9 is_stmt 1 view .LVU1295
 3889              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3890              		.loc 1 662 19 is_stmt 0 view .LVU1296
 3891 17d3 C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp739, tmp738,
 3891      E8D8
 3892              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3893              		.loc 1 663 19 view .LVU1297
 3894 17d9 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp750, tmp749,
 3894      F3D8
 3895              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3896              		.loc 1 664 42 view .LVU1298
 3897 17df C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.291, tmp739, _12
 3898              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3899              		.loc 1 664 63 view .LVU1299
 3900 17e3 C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.292, vect_perm_even_444, _18
 3901              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3902              		.loc 1 666 63 view .LVU1300
 3903 17e7 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.295, tmp750, _18
 3904              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3905              		.loc 1 666 42 view .LVU1301
 3906 17eb C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.294, vect_perm_even_444, _12
 3907              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3908              		.loc 1 664 52 view .LVU1302
 3909 17ef C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.293, vect__98.291, vect__100.292
 3910              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccW0oq2B.s 			page 117


 3911              		.loc 1 666 52 view .LVU1303
 3912 17f3 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.296, vect__110.295, vect__109.294
 3912      F5
 3913              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3914              		.loc 1 664 31 view .LVU1304
 3915 17f8 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp746, vect__104.293
 3915      CA01
 3916              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3917              		.loc 1 666 31 view .LVU1305
 3918 17fe C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp757, vect__114.296
 3918      F101
 3919              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3920              		.loc 1 664 31 view .LVU1306
 3921 1804 C40179D6 		vmovq	QWORD PTR [r10+r9], xmm9	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp743
 3921      0C0A
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3922              		.loc 1 664 31 view .LVU1307
 3923 180a C48179D6 		vmovq	QWORD PTR 32[r10+r9], xmm2	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp746
 3923      540A20
 3924 1811 C403F916 		vpextrq	QWORD PTR 16[r10+r9], xmm9, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp743
 3924      4C0A1001 
 3925 1819 C483F916 		vpextrq	QWORD PTR 48[r10+r9], xmm2, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp746
 3925      540A3001 
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3926              		.loc 1 665 9 is_stmt 1 view .LVU1308
 666:sieve_extend.c ****         copy_word += 2;
 3927              		.loc 1 666 9 view .LVU1309
 3928              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3929              		.loc 1 666 31 is_stmt 0 view .LVU1310
 3930 1821 C42179D6 		vmovq	QWORD PTR [rdi+r9], xmm14	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp754
 3930      340F
 666:sieve_extend.c ****         copy_word += 2;
 3931              		.loc 1 666 31 view .LVU1311
 3932 1827 C4A179D6 		vmovq	QWORD PTR 32[rdi+r9], xmm1	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp757
 3932      4C0F20
 3933 182e C423F916 		vpextrq	QWORD PTR 16[rdi+r9], xmm14, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp75
 3933      740F1001 
 3934 1836 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r9], xmm1, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp757
 3934      4C0F3001 
 667:sieve_extend.c ****         source_word += 2;
 3935              		.loc 1 667 9 is_stmt 1 view .LVU1312
 668:sieve_extend.c ****         distance += 2;
 3936              		.loc 1 668 9 view .LVU1313
 669:sieve_extend.c ****     }
 3937              		.loc 1 669 9 view .LVU1314
 669:sieve_extend.c ****     }
 3938              		.loc 1 669 9 is_stmt 0 view .LVU1315
 3939              	.LBE303:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 3940              		.loc 1 661 11 is_stmt 1 view .LVU1316
 3941              	.LBB304:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3942              		.loc 1 662 9 view .LVU1317
GAS LISTING /tmp/ccW0oq2B.s 			page 118


 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3943              		.loc 1 663 9 view .LVU1318
 3944              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3945              		.loc 1 662 19 is_stmt 0 view .LVU1319
 3946 183e C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r9]	# tmp1222, MEM[base: vectp.284_427, index: ivtmp.359_621, off
 3946      7C0940
 3947              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3948              		.loc 1 663 19 view .LVU1320
 3949 1845 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3949      440A40
 3950 184c C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r9]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B]
 3950      440A60
 3951              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3952              		.loc 1 662 19 view .LVU1321
 3953 1853 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r9]	# tmp768, tmp1222, MEM[base: vectp.284_427, index:
 3953      540960
 3954              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3955              		.loc 1 663 19 view .LVU1322
 3956 185a C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp764, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B],
 3957 185e C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp779, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B]
 3958 1862 C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_444, tmp764,
 3958      CDD8
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3959              		.loc 1 664 9 is_stmt 1 view .LVU1323
 3960              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 3961              		.loc 1 662 19 is_stmt 0 view .LVU1324
 3962 1868 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp769, tmp768,
 3962      D2D8
 3963              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3964              		.loc 1 663 19 view .LVU1325
 3965 186e C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp780, tmp779,
 3965      CFD8
 3966              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3967              		.loc 1 664 42 view .LVU1326
 3968 1874 C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.291, tmp769, _12
 3969              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3970              		.loc 1 664 63 view .LVU1327
 3971 1878 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.292, vect_perm_even_444, _18
 3972              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3973              		.loc 1 666 63 view .LVU1328
 3974 187c C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.295, tmp780, _18
 3975              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3976              		.loc 1 666 42 view .LVU1329
 3977 1880 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.294, vect_perm_even_444, _12
 3978              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3979              		.loc 1 664 52 view .LVU1330
GAS LISTING /tmp/ccW0oq2B.s 			page 119


 3980 1884 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.293, vect__98.291, vect__100.292
 3981              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3982              		.loc 1 666 52 view .LVU1331
 3983 1888 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.296, vect__110.295, vect__109.294
 3984              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3985              		.loc 1 664 31 view .LVU1332
 3986 188c C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp776, vect__104.293
 3986      E601
 3987              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 3988              		.loc 1 666 31 view .LVU1333
 3989 1892 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp787, vect__114.296
 3989      EF01
 3990 1898 4983C002 		add	r8, 2	# ivtmp.357,
 3991              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3992              		.loc 1 664 31 view .LVU1334
 3993 189c C40179D6 		vmovq	QWORD PTR 64[r10+r9], xmm12	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp773
 3993      640A40
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 3994              		.loc 1 664 31 view .LVU1335
 3995 18a3 C40179D6 		vmovq	QWORD PTR 96[r10+r9], xmm14	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp776
 3995      740A60
 3996 18aa C403F916 		vpextrq	QWORD PTR 80[r10+r9], xmm12, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp77
 3996      640A5001 
 3997 18b2 C403F916 		vpextrq	QWORD PTR 112[r10+r9], xmm14, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp7
 3997      740A7001 
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3998              		.loc 1 665 9 is_stmt 1 view .LVU1336
 666:sieve_extend.c ****         copy_word += 2;
 3999              		.loc 1 666 9 view .LVU1337
 4000              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4001              		.loc 1 666 31 is_stmt 0 view .LVU1338
 4002 18ba C4A179D6 		vmovq	QWORD PTR 64[rdi+r9], xmm5	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp784
 4002      6C0F40
 666:sieve_extend.c ****         copy_word += 2;
 4003              		.loc 1 666 31 view .LVU1339
 4004 18c1 C4A179D6 		vmovq	QWORD PTR 96[rdi+r9], xmm7	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp787
 4004      7C0F60
 4005 18c8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r9], xmm5, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp784
 4005      6C0F5001 
 4006 18d0 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r9], xmm7, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp78
 4006      7C0F7001 
 667:sieve_extend.c ****         source_word += 2;
 4007              		.loc 1 667 9 is_stmt 1 view .LVU1340
 668:sieve_extend.c ****         distance += 2;
 4008              		.loc 1 668 9 view .LVU1341
 669:sieve_extend.c ****     }
 4009              		.loc 1 669 9 view .LVU1342
 669:sieve_extend.c ****     }
 4010              		.loc 1 669 9 is_stmt 0 view .LVU1343
 4011              	.LBE304:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4012              		.loc 1 661 11 is_stmt 1 view .LVU1344
GAS LISTING /tmp/ccW0oq2B.s 			page 120


 4013 18d8 4983E980 		sub	r9, -128	# ivtmp.359,
 4014 18dc 4C39C6   		cmp	rsi, r8	# bnd.277, ivtmp.357
 4015 18df 0F87C4FE 		ja	.L377	#,
 4015      FFFF
 4016              	.L594:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4017              		.loc 1 661 11 is_stmt 0 view .LVU1345
 4018 18e5 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# bnd.277, %sfp
 4018      40
 4019 18ea 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 4019      58
 4020 18ef 49C1E303 		sal	r11, 3	# bnd.277,
 4021 18f3 4A8D0C1A 		lea	rcx, [rdx+r11]	# tmp.279,
 4022              	.LBB305:
 4023              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4024              		.loc 1 662 37 view .LVU1346
 4025 18f7 4C8D14CD 		lea	r10, 0[0+rcx*8]	# _55,
 4025      00000000 
 4026              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4027              		.loc 1 663 19 view .LVU1347
 4028 18ff 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_223
 4028      08
 4029 1904 4A8D1418 		lea	rdx, [rax+r11]	# tmp.280,
 4030              	.LVL165:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4031              		.loc 1 662 9 is_stmt 1 view .LVU1348
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4032              		.loc 1 663 9 view .LVU1349
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4033              		.loc 1 664 9 view .LVU1350
 4034              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4035              		.loc 1 664 42 is_stmt 0 view .LVU1351
 4036 1908 C46283F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r15	# tmp576, *_56, shift
 4036      04CB
 4037              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4038              		.loc 1 664 63 view .LVU1352
 4039 190e C46289F7 		shlx	r9, rdi, r14	# tmp578, source1, shift_flipped
 4039      CF
 4040              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4041              		.loc 1 664 52 view .LVU1353
 4042 1913 4D09C8   		or	r8, r9	# tmp579, tmp578
 4043 1916 4C8904D3 		mov	QWORD PTR [rbx+rdx*8], r8	# *_78, tmp579
 4044              	.LVL166:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4045              		.loc 1 665 9 is_stmt 1 view .LVU1354
 4046              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4047              		.loc 1 666 42 is_stmt 0 view .LVU1355
 4048 191a C4E283F7 		shrx	rdi, rdi, r15	# tmp582, source1, shift
 4048      FF
 4049              	.LVL167:
 4050              	# sieve_extend.c:667:         copy_word += 2;
GAS LISTING /tmp/ccW0oq2B.s 			page 121


 667:sieve_extend.c ****         source_word += 2;
 4051              		.loc 1 667 19 view .LVU1356
 4052 191f 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 4053              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4054              		.loc 1 666 63 view .LVU1357
 4055 1923 4A8B7413 		mov	rsi, QWORD PTR 16[rbx+r10]	# *_495, *_495
 4055      10
 4056              	# sieve_extend.c:665:         bitword_t source2 = bitarray[source_word+2];
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4057              		.loc 1 665 37 view .LVU1358
 4058 1928 4C8D4902 		lea	r9, 2[rcx]	# _493,
 4059              	.LVL168:
 666:sieve_extend.c ****         copy_word += 2;
 4060              		.loc 1 666 9 is_stmt 1 view .LVU1359
 4061              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4062              		.loc 1 666 63 is_stmt 0 view .LVU1360
 4063 192c C46289F7 		shlx	r10, rsi, r14	# tmp580, *_495, shift_flipped
 4063      D6
 4064              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4065              		.loc 1 666 52 view .LVU1361
 4066 1931 4C09D7   		or	rdi, r10	# tmp583, tmp580
 4067 1934 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_501, tmp583
 4067      08
 667:sieve_extend.c ****         source_word += 2;
 4068              		.loc 1 667 9 is_stmt 1 view .LVU1362
 4069              	.LVL169:
 668:sieve_extend.c ****         distance += 2;
 4070              		.loc 1 668 9 view .LVU1363
 669:sieve_extend.c ****     }
 4071              		.loc 1 669 9 view .LVU1364
 4072              	# sieve_extend.c:669:         distance += 2;
 669:sieve_extend.c ****     }
 4073              		.loc 1 669 18 is_stmt 0 view .LVU1365
 4074 1939 4D8D5302 		lea	r10, 2[r11]	# distance,
 4075              	.LVL170:
 669:sieve_extend.c ****     }
 4076              		.loc 1 669 18 view .LVU1366
 4077              	.LBE305:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4078              		.loc 1 661 11 is_stmt 1 view .LVU1367
 4079 193d 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 4079      48
 4080 1942 0F86D900 		jbe	.L380	#,
 4080      0000
 4081              	.LBB306:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4082              		.loc 1 662 9 view .LVU1368
 4083              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4084              		.loc 1 662 37 is_stmt 0 view .LVU1369
 4085 1948 4E8D14CD 		lea	r10, 0[0+r9*8]	# _510,
 4085      00000000 
 4086              	.LVL171:
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW0oq2B.s 			page 122


 4087              		.loc 1 663 9 is_stmt 1 view .LVU1370
 4088              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4089              		.loc 1 663 19 is_stmt 0 view .LVU1371
 4090 1950 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_515
 4090      08
 4091              	.LVL172:
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4092              		.loc 1 664 9 is_stmt 1 view .LVU1372
 4093              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4094              		.loc 1 664 42 is_stmt 0 view .LVU1373
 4095 1955 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_511, *_511
 4096              	.LVL173:
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4097              		.loc 1 664 42 view .LVU1374
 4098 1959 C4C283F7 		shrx	rsi, r9, r15	# tmp584, *_511, shift
 4098      F1
 4099              	.LVL174:
 4100              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4101              		.loc 1 664 63 view .LVU1375
 4102 195e C46289F7 		shlx	r9, rdi, r14	# tmp586, source1, shift_flipped
 4102      CF
 4103              	.LVL175:
 4104              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4105              		.loc 1 664 52 view .LVU1376
 4106 1963 4C09CE   		or	rsi, r9	# tmp587, tmp586
 4107 1966 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_520, tmp587
 4108              	.LVL176:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4109              		.loc 1 665 9 is_stmt 1 view .LVU1377
 4110              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4111              		.loc 1 666 42 is_stmt 0 view .LVU1378
 4112 196a C4E283F7 		shrx	rdi, rdi, r15	# tmp590, source1, shift
 4112      FF
 4113              	.LVL177:
 4114              	# sieve_extend.c:665:         bitword_t source2 = bitarray[source_word+2];
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4115              		.loc 1 665 37 view .LVU1379
 4116 196f 4C8D4904 		lea	r9, 4[rcx]	# _523,
 4117              	.LVL178:
 666:sieve_extend.c ****         copy_word += 2;
 4118              		.loc 1 666 9 is_stmt 1 view .LVU1380
 4119              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4120              		.loc 1 666 63 is_stmt 0 view .LVU1381
 4121 1973 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_525, *_525
 4121      10
 4122              	.LVL179:
 666:sieve_extend.c ****         copy_word += 2;
 4123              		.loc 1 666 63 view .LVU1382
 4124 1978 C4C289F7 		shlx	rsi, r10, r14	# tmp588, *_525, shift_flipped
 4124      F2
 4125              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccW0oq2B.s 			page 123


 666:sieve_extend.c ****         copy_word += 2;
 4126              		.loc 1 666 52 view .LVU1383
 4127 197d 4809F7   		or	rdi, rsi	# tmp591, tmp588
 4128 1980 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_531, tmp591
 4128      08
 667:sieve_extend.c ****         source_word += 2;
 4129              		.loc 1 667 9 is_stmt 1 view .LVU1384
 4130              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 4131              		.loc 1 667 19 is_stmt 0 view .LVU1385
 4132 1985 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 4133              	.LVL180:
 668:sieve_extend.c ****         distance += 2;
 4134              		.loc 1 668 9 is_stmt 1 view .LVU1386
 669:sieve_extend.c ****     }
 4135              		.loc 1 669 9 view .LVU1387
 4136              	# sieve_extend.c:669:         distance += 2;
 669:sieve_extend.c ****     }
 4137              		.loc 1 669 18 is_stmt 0 view .LVU1388
 4138 1989 4D8D5304 		lea	r10, 4[r11]	# distance,
 4139              	.LVL181:
 669:sieve_extend.c ****     }
 4140              		.loc 1 669 18 view .LVU1389
 4141              	.LBE306:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4142              		.loc 1 661 11 is_stmt 1 view .LVU1390
 4143 198d 4C394424 		cmp	QWORD PTR 72[rsp], r8	# %sfp, copy_word
 4143      48
 4144 1992 0F868900 		jbe	.L380	#,
 4144      0000
 4145              	.LBB307:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4146              		.loc 1 662 9 view .LVU1391
 4147              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4148              		.loc 1 662 37 is_stmt 0 view .LVU1392
 4149 1998 4E8D14CD 		lea	r10, 0[0+r9*8]	# _540,
 4149      00000000 
 4150              	.LVL182:
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4151              		.loc 1 663 9 is_stmt 1 view .LVU1393
 4152              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4153              		.loc 1 663 19 is_stmt 0 view .LVU1394
 4154 19a0 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_545
 4154      08
 4155              	.LVL183:
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4156              		.loc 1 664 9 is_stmt 1 view .LVU1395
 4157              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4158              		.loc 1 664 42 is_stmt 0 view .LVU1396
 4159 19a5 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_541, *_541
 4160              	.LVL184:
 4161              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 4162              		.loc 1 667 19 view .LVU1397
GAS LISTING /tmp/ccW0oq2B.s 			page 124


 4163 19a9 4883C206 		add	rdx, 6	# copy_word,
 4164              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4165              		.loc 1 664 42 view .LVU1398
 4166 19ad C4C283F7 		shrx	rsi, r9, r15	# tmp592, *_541, shift
 4166      F1
 4167              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4168              		.loc 1 664 63 view .LVU1399
 4169 19b2 C46289F7 		shlx	r9, rdi, r14	# tmp594, source1, shift_flipped
 4169      CF
 4170              	.LVL185:
 4171              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4172              		.loc 1 664 52 view .LVU1400
 4173 19b7 4C09CE   		or	rsi, r9	# tmp595, tmp594
 4174 19ba 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_550, tmp595
 4175              	.LVL186:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4176              		.loc 1 665 9 is_stmt 1 view .LVU1401
 4177              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4178              		.loc 1 666 42 is_stmt 0 view .LVU1402
 4179 19be C4E283F7 		shrx	rdi, rdi, r15	# tmp598, source1, shift
 4179      FF
 4180              	.LVL187:
 4181              	# sieve_extend.c:665:         bitword_t source2 = bitarray[source_word+2];
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4182              		.loc 1 665 37 view .LVU1403
 4183 19c3 4883C106 		add	rcx, 6	# _553,
 4184              	.LVL188:
 666:sieve_extend.c ****         copy_word += 2;
 4185              		.loc 1 666 9 is_stmt 1 view .LVU1404
 4186              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4187              		.loc 1 666 63 is_stmt 0 view .LVU1405
 4188 19c7 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_555, *_555
 4188      10
 4189              	.LVL189:
 666:sieve_extend.c ****         copy_word += 2;
 4190              		.loc 1 666 63 view .LVU1406
 4191 19cc C4C289F7 		shlx	rsi, r10, r14	# tmp596, *_555, shift_flipped
 4191      F2
 4192              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4193              		.loc 1 666 52 view .LVU1407
 4194 19d1 4809F7   		or	rdi, rsi	# tmp599, tmp596
 4195 19d4 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_561, tmp599
 4195      08
 667:sieve_extend.c ****         source_word += 2;
 4196              		.loc 1 667 9 is_stmt 1 view .LVU1408
 4197              	.LVL190:
 668:sieve_extend.c ****         distance += 2;
 4198              		.loc 1 668 9 view .LVU1409
 669:sieve_extend.c ****     }
 4199              		.loc 1 669 9 view .LVU1410
 4200              	# sieve_extend.c:669:         distance += 2;
GAS LISTING /tmp/ccW0oq2B.s 			page 125


 669:sieve_extend.c ****     }
 4201              		.loc 1 669 18 is_stmt 0 view .LVU1411
 4202 19d9 4D8D5306 		lea	r10, 6[r11]	# distance,
 4203              	.LVL191:
 669:sieve_extend.c ****     }
 4204              		.loc 1 669 18 view .LVU1412
 4205              	.LBE307:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4206              		.loc 1 661 11 is_stmt 1 view .LVU1413
 4207 19dd 48395424 		cmp	QWORD PTR 72[rsp], rdx	# %sfp, copy_word
 4207      48
 4208 19e2 763D     		jbe	.L380	#,
 4209              	.LBB308:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4210              		.loc 1 662 9 view .LVU1414
 4211              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 4212              		.loc 1 662 37 is_stmt 0 view .LVU1415
 4213 19e4 4C8D0CCD 		lea	r9, 0[0+rcx*8]	# _389,
 4213      00000000 
 4214              	.LVL192:
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4215              		.loc 1 663 9 is_stmt 1 view .LVU1416
 4216              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4217              		.loc 1 663 19 is_stmt 0 view .LVU1417
 4218 19ec 4E8B540B 		mov	r10, QWORD PTR 8[rbx+r9]	# source1, *_394
 4218      08
 4219              	.LVL193:
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4220              		.loc 1 664 9 is_stmt 1 view .LVU1418
 4221              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4222              		.loc 1 664 42 is_stmt 0 view .LVU1419
 4223 19f1 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_390, *_390
 4224              	.LVL194:
 4225              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4226              		.loc 1 664 63 view .LVU1420
 4227 19f5 C44289F7 		shlx	r8, r10, r14	# tmp602, source1, shift_flipped
 4227      C2
 4228              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4229              		.loc 1 664 42 view .LVU1421
 4230 19fa C4E283F7 		shrx	rsi, rcx, r15	# tmp600, *_390, shift
 4230      F1
 4231              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 4232              		.loc 1 664 52 view .LVU1422
 4233 19ff 4C09C6   		or	rsi, r8	# tmp603, tmp602
 4234 1a02 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_399, tmp603
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4235              		.loc 1 665 9 is_stmt 1 view .LVU1423
 4236              	.LVL195:
 666:sieve_extend.c ****         copy_word += 2;
 4237              		.loc 1 666 9 view .LVU1424
 4238              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccW0oq2B.s 			page 126


 666:sieve_extend.c ****         copy_word += 2;
 4239              		.loc 1 666 42 is_stmt 0 view .LVU1425
 4240 1a06 C44283F7 		shrx	r10, r10, r15	# tmp606, source1, shift
 4240      D2
 4241              	.LVL196:
 4242              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4243              		.loc 1 666 63 view .LVU1426
 4244 1a0b 4A8B7C0B 		mov	rdi, QWORD PTR 16[rbx+r9]	# *_404, *_404
 4244      10
 4245 1a10 C46289F7 		shlx	r9, rdi, r14	# tmp604, *_404, shift_flipped
 4245      CF
 4246              	.LVL197:
 4247              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 4248              		.loc 1 666 52 view .LVU1427
 4249 1a15 4D09CA   		or	r10, r9	# tmp607, tmp604
 4250 1a18 4C8954D3 		mov	QWORD PTR 8[rbx+rdx*8], r10	# *_410, tmp607
 4250      08
 667:sieve_extend.c ****         source_word += 2;
 4251              		.loc 1 667 9 is_stmt 1 view .LVU1428
 668:sieve_extend.c ****         distance += 2;
 4252              		.loc 1 668 9 view .LVU1429
 4253              	.LVL198:
 669:sieve_extend.c ****     }
 4254              		.loc 1 669 9 view .LVU1430
 4255              	# sieve_extend.c:669:         distance += 2;
 669:sieve_extend.c ****     }
 4256              		.loc 1 669 18 is_stmt 0 view .LVU1431
 4257 1a1d 4D8D5308 		lea	r10, 8[r11]	# distance,
 4258              	.LVL199:
 669:sieve_extend.c ****     }
 4259              		.loc 1 669 18 view .LVU1432
 4260              	.LBE308:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4261              		.loc 1 661 11 is_stmt 1 view .LVU1433
 4262              	.L380:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4263              		.loc 1 661 11 is_stmt 0 view .LVU1434
 4264 1a21 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 4264      58
 4265              	.LVL200:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 4266              		.loc 1 661 11 view .LVU1435
 4267 1a26 4C01D0   		add	rax, r10	# ivtmp.319, distance
 4268              	.L375:
 671:sieve_extend.c **** }
 4269              		.loc 1 671 5 is_stmt 1 view .LVU1436
 4270              	.LVL201:
 671:sieve_extend.c **** }
 4271              		.loc 1 671 5 is_stmt 0 view .LVU1437
 4272              	.LBE320:
 4273              	.LBE325:
 818:sieve_extend.c ****     copy_word += distance;
 4274              		.loc 1 818 5 is_stmt 1 view .LVU1438
 819:sieve_extend.c **** 
 4275              		.loc 1 819 5 view .LVU1439
GAS LISTING /tmp/ccW0oq2B.s 			page 127


 821:sieve_extend.c **** 
 4276              		.loc 1 821 6 view .LVU1440
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4277              		.loc 1 824 11 view .LVU1441
 4278              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4279              		.loc 1 824 5 is_stmt 0 view .LVU1442
 4280 1a29 4C8B5C24 		mov	r11, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 4280      38
 4281 1a2e 4939C3   		cmp	r11, rax	# aligned_copy_word, ivtmp.319
 4282 1a31 0F828503 		jb	.L381	#,
 4282      0000
 4283 1a37 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 4283      58
 4284 1a3c 488D34C5 		lea	rsi, 0[0+rax*8]	# _33,
 4284      00000000 
 4285 1a44 488D0CFD 		lea	rcx, 0[0+rdi*8]	# _2,
 4285      00000000 
 4286 1a4c 4C8D4E20 		lea	r9, 32[rsi]	# tmp619,
 4287 1a50 4C39C9   		cmp	rcx, r9	# _2, tmp619
 4288 1a53 488D14FD 		lea	rdx, 40[0+rdi*8]	# _72,
 4288      28000000 
 4289 1a5b 410F9DC2 		setge	r10b	#, tmp621
 4290 1a5f 4839D6   		cmp	rsi, rdx	# _33, _72
 4291 1a62 410F9DC0 		setge	r8b	#, tmp623
 4292 1a66 4508C2   		or	r10b, r8b	# tmp621, tmp623
 4293 1a69 0F84B108 		je	.L382	#,
 4293      0000
 4294 1a6f 4C89DF   		mov	rdi, r11	# tmp625, aligned_copy_word
 4295 1a72 4829C7   		sub	rdi, rax	# tmp625, ivtmp.319
 4296 1a75 4883FF03 		cmp	rdi, 3	# tmp625,
 4297 1a79 0F86A108 		jbe	.L382	#,
 4297      0000
 4298 1a7f 4D8D5301 		lea	r10, 1[r11]	# ivtmp.319,
 4299 1a83 4D89D1   		mov	r9, r10	# niters.259, ivtmp.319
 4300 1a86 4929C1   		sub	r9, rax	# niters.259, ivtmp.319
 4301 1a89 4D89C8   		mov	r8, r9	# bnd.260, niters.259
 4302 1a8c 49C1E802 		shr	r8, 2	# bnd.260,
 4303 1a90 49C1E005 		sal	r8, 5	# _606,
 4304 1a94 C441796E 		vmovd	xmm10, r12d	# _12, _12
 4304      D4
 4305 1a99 4D8D60E0 		lea	r12, -32[r8]	# tmp715,
 4306 1a9d 49C1EC05 		shr	r12, 5	# tmp713,
 4307 1aa1 49FFC4   		inc	r12	# tmp716
 4308 1aa4 4801D9   		add	rcx, rbx	# vectp.265, bitarray
 4309 1aa7 488D7C13 		lea	rdi, -32[rbx+rdx]	# vectp.269,
 4309      E0
 4310 1aac 4801DE   		add	rsi, rbx	# vectp.274, bitarray
 4311 1aaf 4531DB   		xor	r11d, r11d	# ivtmp.335
 4312 1ab2 C441796E 		vmovd	xmm11, r13d	# _18, _18
 4312      DD
 4313 1ab7 4183E407 		and	r12d, 7	# tmp717,
 4314 1abb 0F843401 		je	.L383	#,
 4314      0000
 4315 1ac1 4983FC01 		cmp	r12, 1	# tmp717,
 4316 1ac5 0F84FC00 		je	.L523	#,
 4316      0000
GAS LISTING /tmp/ccW0oq2B.s 			page 128


 4317 1acb 4983FC02 		cmp	r12, 2	# tmp717,
 4318 1acf 0F84CE00 		je	.L524	#,
 4318      0000
 4319 1ad5 4983FC03 		cmp	r12, 3	# tmp717,
 4320 1ad9 0F849F00 		je	.L525	#,
 4320      0000
 4321 1adf 4983FC04 		cmp	r12, 4	# tmp717,
 4322 1ae3 7474     		je	.L526	#,
 4323 1ae5 4983FC05 		cmp	r12, 5	# tmp717,
 4324 1ae9 744A     		je	.L527	#,
 4325 1aeb 4983FC06 		cmp	r12, 6	# tmp717,
 4326 1aef 7420     		je	.L528	#,
 825:sieve_extend.c ****     }
 4327              		.loc 1 825 9 is_stmt 1 view .LVU1443
 4328              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4329              		.loc 1 825 56 is_stmt 0 view .LVU1444
 4330 1af1 C5FE6F19 		vmovdqu	ymm3, YMMWORD PTR [rcx]	# tmp1298, MEM[base: vectp.265_247, index: ivtmp.335_604, offset: 
 4331              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4332              		.loc 1 825 94 view .LVU1445
 4333 1af5 C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1299, MEM[base: vectp.269_253, index: ivtmp.335_604, offset: 
 4334              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4335              		.loc 1 825 56 view .LVU1446
 4336 1af9 C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.267, tmp1298, _12
 4336      D2
 4337              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4338              		.loc 1 825 94 view .LVU1447
 4339 1afe C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.271, tmp1299, _18
 4339      F3
 4340 1b03 41BB2000 		mov	r11d, 32	# ivtmp.335,
 4340      0000
 4341              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4342              		.loc 1 825 66 view .LVU1448
 4343 1b09 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.272, vect__38.267, vect__43.271
 4344              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4345              		.loc 1 825 29 view .LVU1449
 4346 1b0d C57E7F26 		vmovdqu	YMMWORD PTR [rsi], ymm12	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], vec
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4347              		.loc 1 824 43 is_stmt 1 view .LVU1450
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4348              		.loc 1 824 11 view .LVU1451
 4349              	.L528:
 825:sieve_extend.c ****     }
 4350              		.loc 1 825 9 view .LVU1452
 4351              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4352              		.loc 1 825 56 is_stmt 0 view .LVU1453
 4353 1b11 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rcx+r11]	# tmp1300, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4353      2C19
 4354              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4355              		.loc 1 825 94 view .LVU1454
GAS LISTING /tmp/ccW0oq2B.s 			page 129


 4356 1b17 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r11]	# tmp1301, MEM[base: vectp.269_253, index: ivtmp.335_604, off
 4356      3C1F
 4357              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4358              		.loc 1 825 56 view .LVU1455
 4359 1b1d C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.267, tmp1300, _12
 4359      F2
 4360              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4361              		.loc 1 825 94 view .LVU1456
 4362 1b22 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.271, tmp1301, _18
 4362      CB
 4363              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4364              		.loc 1 825 66 view .LVU1457
 4365 1b27 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.272, vect__38.267, vect__43.271
 4366              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4367              		.loc 1 825 29 view .LVU1458
 4368 1b2b C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm8	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4368      041E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4369              		.loc 1 824 43 is_stmt 1 view .LVU1459
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4370              		.loc 1 824 11 view .LVU1460
 4371 1b31 4983C320 		add	r11, 32	# ivtmp.335,
 4372              	.L527:
 825:sieve_extend.c ****     }
 4373              		.loc 1 825 9 view .LVU1461
 4374              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4375              		.loc 1 825 56 is_stmt 0 view .LVU1462
 4376 1b35 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rcx+r11]	# tmp1302, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4376      0419
 4377              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4378              		.loc 1 825 94 view .LVU1463
 4379 1b3b C4217E6F 		vmovdqu	ymm9, YMMWORD PTR [rdi+r11]	# tmp1303, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4379      0C1F
 4380              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4381              		.loc 1 825 56 view .LVU1464
 4382 1b41 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.267, tmp1302, _12
 4382      EA
 4383              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4384              		.loc 1 825 94 view .LVU1465
 4385 1b46 C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.271, tmp1303, _18
 4385      FB
 4386              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4387              		.loc 1 825 66 view .LVU1466
 4388 1b4b C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.272, vect__38.267, vect__43.271
 4389              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4390              		.loc 1 825 29 view .LVU1467
 4391 1b4f C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm3	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
GAS LISTING /tmp/ccW0oq2B.s 			page 130


 4391      1C1E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4392              		.loc 1 824 43 is_stmt 1 view .LVU1468
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4393              		.loc 1 824 11 view .LVU1469
 4394 1b55 4983C320 		add	r11, 32	# ivtmp.335,
 4395              	.L526:
 825:sieve_extend.c ****     }
 4396              		.loc 1 825 9 view .LVU1470
 4397              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4398              		.loc 1 825 56 is_stmt 0 view .LVU1471
 4399 1b59 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR [rcx+r11]	# tmp1304, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4399      1419
 4400              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4401              		.loc 1 825 94 view .LVU1472
 4402 1b5f C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR [rdi+r11]	# tmp1305, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4402      341F
 4403              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4404              		.loc 1 825 56 view .LVU1473
 4405 1b65 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.267, tmp1304, _12
 4405      E2
 4406              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4407              		.loc 1 825 94 view .LVU1474
 4408 1b6a C4414DF3 		vpsllq	ymm12, ymm6, xmm11	# vect__43.271, tmp1305, _18
 4408      E3
 4409              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4410              		.loc 1 825 66 view .LVU1475
 4411 1b6f C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.272, vect__38.267, vect__43.271
 4411      EC
 4412              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4413              		.loc 1 825 29 view .LVU1476
 4414 1b74 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm13	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B],
 4414      2C1E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4415              		.loc 1 824 43 is_stmt 1 view .LVU1477
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4416              		.loc 1 824 11 view .LVU1478
 4417 1b7a 4983C320 		add	r11, 32	# ivtmp.335,
 4418              	.L525:
 825:sieve_extend.c ****     }
 4419              		.loc 1 825 9 view .LVU1479
 4420              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4421              		.loc 1 825 56 is_stmt 0 view .LVU1480
 4422 1b7e C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rcx+r11]	# tmp1306, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4422      3419
 4423              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4424              		.loc 1 825 94 view .LVU1481
 4425 1b84 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r11]	# tmp1307, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4425      0C1F
GAS LISTING /tmp/ccW0oq2B.s 			page 131


 4426              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4427              		.loc 1 825 56 view .LVU1482
 4428 1b8a C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.267, tmp1306, _12
 4428      FA
 4429              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4430              		.loc 1 825 94 view .LVU1483
 4431 1b8f C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.271, tmp1307, _18
 4431      C3
 4432              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4433              		.loc 1 825 66 view .LVU1484
 4434 1b94 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.272, vect__38.267, vect__43.271
 4434      C0
 4435              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4436              		.loc 1 825 29 view .LVU1485
 4437 1b99 C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm0	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4437      041E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4438              		.loc 1 824 43 is_stmt 1 view .LVU1486
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4439              		.loc 1 824 11 view .LVU1487
 4440 1b9f 4983C320 		add	r11, 32	# ivtmp.335,
 4441              	.L524:
 825:sieve_extend.c ****     }
 4442              		.loc 1 825 9 view .LVU1488
 4443              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4444              		.loc 1 825 56 is_stmt 0 view .LVU1489
 4445 1ba3 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR [rcx+r11]	# tmp1308, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4445      2C19
 4446              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4447              		.loc 1 825 94 view .LVU1490
 4448 1ba9 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR [rdi+r11]	# tmp1309, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4448      3C1F
 4449              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4450              		.loc 1 825 56 view .LVU1491
 4451 1baf C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.267, tmp1308, _12
 4451      CA
 4452              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4453              		.loc 1 825 94 view .LVU1492
 4454 1bb4 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1309, _18
 4454      DB
 4455              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4456              		.loc 1 825 66 view .LVU1493
 4457 1bb9 C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4458              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4459              		.loc 1 825 29 view .LVU1494
 4460 1bbd C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm2	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4460      141E
GAS LISTING /tmp/ccW0oq2B.s 			page 132


 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4461              		.loc 1 824 43 is_stmt 1 view .LVU1495
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4462              		.loc 1 824 11 view .LVU1496
 4463 1bc3 4983C320 		add	r11, 32	# ivtmp.335,
 4464              	.L523:
 825:sieve_extend.c ****     }
 4465              		.loc 1 825 9 view .LVU1497
 4466              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4467              		.loc 1 825 56 is_stmt 0 view .LVU1498
 4468 1bc7 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR [rcx+r11]	# tmp1310, MEM[base: vectp.265_247, index: ivtmp.335_604, offs
 4468      2419
 4469              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4470              		.loc 1 825 94 view .LVU1499
 4471 1bcd C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdi+r11]	# tmp1311, MEM[base: vectp.269_253, index: ivtmp.335_604, off
 4471      241F
 4472              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4473              		.loc 1 825 56 view .LVU1500
 4474 1bd3 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.267, tmp1310, _12
 4474      F2
 4475              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4476              		.loc 1 825 94 view .LVU1501
 4477 1bd8 C4411DF3 		vpsllq	ymm13, ymm12, xmm11	# vect__43.271, tmp1311, _18
 4477      EB
 4478              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4479              		.loc 1 825 66 view .LVU1502
 4480 1bdd C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.272, vect__38.267, vect__43.271
 4480      F5
 4481              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4482              		.loc 1 825 29 view .LVU1503
 4483 1be2 C4217E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm14	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B],
 4483      341E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4484              		.loc 1 824 43 is_stmt 1 view .LVU1504
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4485              		.loc 1 824 11 view .LVU1505
 4486 1be8 4983C320 		add	r11, 32	# ivtmp.335,
 4487 1bec 4D39C3   		cmp	r11, r8	# ivtmp.335, _606
 4488 1bef 0F844C01 		je	.L602	#,
 4488      0000
 4489              	.L383:
 825:sieve_extend.c ****     }
 4490              		.loc 1 825 9 discriminator 2 view .LVU1506
 4491              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4492              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1507
 4493 1bf5 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rcx+r11]	# tmp1241, MEM[base: vectp.265_247, index: ivtmp.335_604, off
 4493      3C19
 4494              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4495              		.loc 1 825 94 discriminator 2 view .LVU1508
GAS LISTING /tmp/ccW0oq2B.s 			page 133


 4496 1bfb C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r11]	# tmp1242, MEM[base: vectp.269_253, index: ivtmp.335_604, offs
 4496      041F
 4497              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4498              		.loc 1 825 56 discriminator 2 view .LVU1509
 4499 1c01 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.267, tmp1241, _12
 4499      CA
 4500              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4501              		.loc 1 825 94 discriminator 2 view .LVU1510
 4502 1c06 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.271, tmp1242, _18
 4502      C3
 4503              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4504              		.loc 1 825 66 discriminator 2 view .LVU1511
 4505 1c0b C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.272, vect__38.267, vect__43.271
 4506              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4507              		.loc 1 825 29 discriminator 2 view .LVU1512
 4508 1c0f C4A17E7F 		vmovdqu	YMMWORD PTR [rsi+r11], ymm5	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B], 
 4508      2C1E
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4509              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1513
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4510              		.loc 1 824 11 discriminator 2 view .LVU1514
 825:sieve_extend.c ****     }
 4511              		.loc 1 825 9 discriminator 2 view .LVU1515
 4512              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4513              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1516
 4514 1c15 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 32[rcx+r11]	# tmp1243, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4514      4C1920
 4515              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4516              		.loc 1 825 94 discriminator 2 view .LVU1517
 4517 1c1c C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[rdi+r11]	# tmp1244, MEM[base: vectp.269_253, index: ivtmp.335_604, of
 4517      7C1F20
 4518              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4519              		.loc 1 825 56 discriminator 2 view .LVU1518
 4520 1c23 C4C135D3 		vpsrlq	ymm2, ymm9, xmm10	# vect__38.267, tmp1243, _12
 4520      D2
 4521              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4522              		.loc 1 825 94 discriminator 2 view .LVU1519
 4523 1c28 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1244, _18
 4523      DB
 4524              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4525              		.loc 1 825 66 discriminator 2 view .LVU1520
 4526 1c2d C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4527              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4528              		.loc 1 825 29 discriminator 2 view .LVU1521
 4529 1c31 C4A17E7F 		vmovdqu	YMMWORD PTR 32[rsi+r11], ymm4	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B]
 4529      641E20
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccW0oq2B.s 			page 134


 4530              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1522
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4531              		.loc 1 824 11 discriminator 2 view .LVU1523
 825:sieve_extend.c ****     }
 4532              		.loc 1 825 9 discriminator 2 view .LVU1524
 4533              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4534              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1525
 4535 1c38 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 64[rcx+r11]	# tmp1245, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4535      741940
 4536              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4537              		.loc 1 825 94 discriminator 2 view .LVU1526
 4538 1c3f C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 64[rdi+r11]	# tmp1246, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4538      6C1F40
 4539              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4540              		.loc 1 825 56 discriminator 2 view .LVU1527
 4541 1c46 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.267, tmp1245, _12
 4541      E2
 4542              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4543              		.loc 1 825 94 discriminator 2 view .LVU1528
 4544 1c4b C44115F3 		vpsllq	ymm14, ymm13, xmm11	# vect__43.271, tmp1246, _18
 4544      F3
 4545              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4546              		.loc 1 825 66 discriminator 2 view .LVU1529
 4547 1c50 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.272, vect__38.267, vect__43.271
 4547      FE
 4548              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4549              		.loc 1 825 29 discriminator 2 view .LVU1530
 4550 1c55 C4217E7F 		vmovdqu	YMMWORD PTR 64[rsi+r11], ymm15	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4550      7C1E40
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4551              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1531
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4552              		.loc 1 824 11 discriminator 2 view .LVU1532
 825:sieve_extend.c ****     }
 4553              		.loc 1 825 9 discriminator 2 view .LVU1533
 4554              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4555              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1534
 4556 1c5c C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR 96[rcx+r11]	# tmp1247, MEM[base: vectp.265_247, index: ivtmp.335_604, of
 4556      4C1960
 4557              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4558              		.loc 1 825 94 discriminator 2 view .LVU1535
 4559 1c63 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+r11]	# tmp1248, MEM[base: vectp.269_253, index: ivtmp.335_604, of
 4559      441F60
 4560              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4561              		.loc 1 825 56 discriminator 2 view .LVU1536
 4562 1c6a C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.267, tmp1247, _12
 4562      C2
 4563              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW0oq2B.s 			page 135


 825:sieve_extend.c ****     }
 4564              		.loc 1 825 94 discriminator 2 view .LVU1537
 4565 1c6f C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.271, tmp1248, _18
 4565      EB
 4566              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4567              		.loc 1 825 66 discriminator 2 view .LVU1538
 4568 1c74 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.272, vect__38.267, vect__43.271
 4569              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4570              		.loc 1 825 29 discriminator 2 view .LVU1539
 4571 1c78 C4217E7F 		vmovdqu	YMMWORD PTR 96[rsi+r11], ymm9	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B]
 4571      4C1E60
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4572              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1540
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4573              		.loc 1 824 11 discriminator 2 view .LVU1541
 825:sieve_extend.c ****     }
 4574              		.loc 1 825 9 discriminator 2 view .LVU1542
 4575              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4576              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1543
 4577 1c7f C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[rcx+r11]	# tmp1249, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4577      94198000 
 4577      0000
 4578              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4579              		.loc 1 825 94 discriminator 2 view .LVU1544
 4580 1c89 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[rdi+r11]	# tmp1250, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4580      BC1F8000 
 4580      0000
 4581              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4582              		.loc 1 825 56 discriminator 2 view .LVU1545
 4583 1c93 C4C16DD3 		vpsrlq	ymm4, ymm2, xmm10	# vect__38.267, tmp1249, _12
 4583      E2
 4584              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4585              		.loc 1 825 94 discriminator 2 view .LVU1546
 4586 1c98 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1250, _18
 4586      DB
 4587              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4588              		.loc 1 825 66 discriminator 2 view .LVU1547
 4589 1c9d C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4590              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4591              		.loc 1 825 29 discriminator 2 view .LVU1548
 4592 1ca1 C4A17E7F 		vmovdqu	YMMWORD PTR 128[rsi+r11], ymm6	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4592      B41E8000 
 4592      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4593              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1549
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4594              		.loc 1 824 11 discriminator 2 view .LVU1550
 825:sieve_extend.c ****     }
 4595              		.loc 1 825 9 discriminator 2 view .LVU1551
GAS LISTING /tmp/ccW0oq2B.s 			page 136


 4596              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4597              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1552
 4598 1cab C4217E6F 		vmovdqu	ymm12, YMMWORD PTR 160[rcx+r11]	# tmp1251, MEM[base: vectp.265_247, index: ivtmp.335_604, 
 4598      A419A000 
 4598      0000
 4599              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4600              		.loc 1 825 94 discriminator 2 view .LVU1553
 4601 1cb5 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR 160[rdi+r11]	# tmp1252, MEM[base: vectp.269_253, index: ivtmp.335_604, 
 4601      B41FA000 
 4601      0000
 4602              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4603              		.loc 1 825 56 discriminator 2 view .LVU1554
 4604 1cbf C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.267, tmp1251, _12
 4604      EA
 4605              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4606              		.loc 1 825 94 discriminator 2 view .LVU1555
 4607 1cc4 C4410DF3 		vpsllq	ymm15, ymm14, xmm11	# vect__43.271, tmp1252, _18
 4607      FB
 4608              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4609              		.loc 1 825 66 discriminator 2 view .LVU1556
 4610 1cc9 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.272, vect__38.267, vect__43.271
 4610      CF
 4611              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4612              		.loc 1 825 29 discriminator 2 view .LVU1557
 4613 1cce C4A17E7F 		vmovdqu	YMMWORD PTR 160[rsi+r11], ymm1	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4613      8C1EA000 
 4613      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4614              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1558
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4615              		.loc 1 824 11 discriminator 2 view .LVU1559
 825:sieve_extend.c ****     }
 4616              		.loc 1 825 9 discriminator 2 view .LVU1560
 4617              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4618              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1561
 4619 1cd8 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 192[rcx+r11]	# tmp1253, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4619      8419C000 
 4619      0000
 4620              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4621              		.loc 1 825 94 discriminator 2 view .LVU1562
 4622 1ce2 C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+r11]	# tmp1254, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4622      AC1FC000 
 4622      0000
 4623              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4624              		.loc 1 825 56 discriminator 2 view .LVU1563
 4625 1cec C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.267, tmp1253, _12
 4625      C2
 4626              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW0oq2B.s 			page 137


 825:sieve_extend.c ****     }
 4627              		.loc 1 825 94 discriminator 2 view .LVU1564
 4628 1cf1 C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.271, tmp1254, _18
 4628      CB
 4629              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4630              		.loc 1 825 66 discriminator 2 view .LVU1565
 4631 1cf6 C4C17DEB 		vpor	ymm2, ymm0, ymm9	# vect__46.272, vect__38.267, vect__43.271
 4631      D1
 4632              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4633              		.loc 1 825 29 discriminator 2 view .LVU1566
 4634 1cfb C4A17E7F 		vmovdqu	YMMWORD PTR 192[rsi+r11], ymm2	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0B
 4634      941EC000 
 4634      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4635              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1567
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4636              		.loc 1 824 11 discriminator 2 view .LVU1568
 825:sieve_extend.c ****     }
 4637              		.loc 1 825 9 discriminator 2 view .LVU1569
 4638              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4639              		.loc 1 825 56 is_stmt 0 discriminator 2 view .LVU1570
 4640 1d05 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 224[rcx+r11]	# tmp1255, MEM[base: vectp.265_247, index: ivtmp.335_604, o
 4640      A419E000 
 4640      0000
 4641              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4642              		.loc 1 825 94 discriminator 2 view .LVU1571
 4643 1d0f C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[rdi+r11]	# tmp1256, MEM[base: vectp.269_253, index: ivtmp.335_604, o
 4643      BC1FE000 
 4643      0000
 4644              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4645              		.loc 1 825 56 discriminator 2 view .LVU1572
 4646 1d19 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.267, tmp1255, _12
 4646      F2
 4647              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4648              		.loc 1 825 94 discriminator 2 view .LVU1573
 4649 1d1e C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.271, tmp1256, _18
 4649      DB
 4650              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4651              		.loc 1 825 66 discriminator 2 view .LVU1574
 4652 1d23 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.272, vect__38.267, vect__43.271
 4653              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4654              		.loc 1 825 29 discriminator 2 view .LVU1575
 4655 1d27 C4217E7F 		vmovdqu	YMMWORD PTR 224[rsi+r11], ymm12	# MEM[base: vectp.274_261, index: ivtmp.335_604, offset: 0
 4655      A41EE000 
 4655      0000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4656              		.loc 1 824 43 is_stmt 1 discriminator 2 view .LVU1576
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4657              		.loc 1 824 11 discriminator 2 view .LVU1577
GAS LISTING /tmp/ccW0oq2B.s 			page 138


 4658 1d31 4981C300 		add	r11, 256	# ivtmp.335,
 4658      010000
 4659 1d38 4D39C3   		cmp	r11, r8	# ivtmp.335, _606
 4660 1d3b 0F85B4FE 		jne	.L383	#,
 4660      FFFF
 4661              	.L602:
 4662 1d41 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 4662      58
 4663 1d46 4D89CD   		mov	r13, r9	# niters_vector_mult_vf.261, niters.259
 4664 1d49 4983E5FC 		and	r13, -4	# niters_vector_mult_vf.261,
 4665 1d4d 4C01EA   		add	rdx, r13	# _183, niters_vector_mult_vf.261
 4666 1d50 4C01E8   		add	rax, r13	# tmp.263, niters_vector_mult_vf.261
 4667 1d53 4D39E9   		cmp	r9, r13	# niters.259, niters_vector_mult_vf.261
 4668 1d56 7461     		je	.L386	#,
 4669              	.LVL202:
 825:sieve_extend.c ****     }
 4670              		.loc 1 825 9 view .LVU1578
 4671              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4672              		.loc 1 824 5 is_stmt 0 view .LVU1579
 4673 1d58 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 4673      38
 4674              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4675              		.loc 1 825 94 view .LVU1580
 4676 1d5d C4E289F7 		shlx	rcx, QWORD PTR 8[rbx+rdx*8], r14	# tmp638, *_484, shift_flipped
 4676      4CD308
 4677              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4678              		.loc 1 825 56 view .LVU1581
 4679 1d64 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rdx*8], r15	# tmp640, *_110, shift
 4679      34D3
 4680              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4681              		.loc 1 824 52 view .LVU1582
 4682 1d6a 488D7801 		lea	rdi, 1[rax]	# copy_word,
 4683              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4684              		.loc 1 825 66 view .LVU1583
 4685 1d6e 4809F1   		or	rcx, rsi	# tmp642, tmp640
 4686 1d71 48890CC3 		mov	QWORD PTR [rbx+rax*8], rcx	# *_487, tmp642
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4687              		.loc 1 824 43 is_stmt 1 view .LVU1584
 4688              	.LVL203:
 4689              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4690              		.loc 1 825 77 is_stmt 0 view .LVU1585
 4691 1d75 4C8D4A01 		lea	r9, 1[rdx]	# _113,
 4692              	.LVL204:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4693              		.loc 1 824 11 is_stmt 1 view .LVU1586
 4694              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4695              		.loc 1 824 5 is_stmt 0 view .LVU1587
 4696 1d79 4939F8   		cmp	r8, rdi	# aligned_copy_word, copy_word
 4697 1d7c 723B     		jb	.L386	#,
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 139


 4698              		.loc 1 825 9 is_stmt 1 view .LVU1588
 4699              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4700              		.loc 1 825 56 is_stmt 0 view .LVU1589
 4701 1d7e 4E8B2CCB 		mov	r13, QWORD PTR [rbx+r9*8]	# *_38, *_38
 4702              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4703              		.loc 1 825 94 view .LVU1590
 4704 1d82 C42289F7 		shlx	r11, QWORD PTR 8[rbx+r9*8], r14	# tmp643, *_43, shift_flipped
 4704      5CCB08
 4705              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4706              		.loc 1 825 77 view .LVU1591
 4707 1d89 4C8D6202 		lea	r12, 2[rdx]	# _41,
 4708              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4709              		.loc 1 824 52 view .LVU1592
 4710 1d8d 4883C002 		add	rax, 2	# copy_word,
 4711              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4712              		.loc 1 825 56 view .LVU1593
 4713 1d91 C4C283F7 		shrx	rdx, r13, r15	# tmp645, *_38, shift
 4713      D5
 4714              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4715              		.loc 1 825 66 view .LVU1594
 4716 1d96 4909D3   		or	r11, rdx	# tmp647, tmp645
 4717 1d99 4C891CFB 		mov	QWORD PTR [rbx+rdi*8], r11	# *_82, tmp647
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4718              		.loc 1 824 43 is_stmt 1 view .LVU1595
 4719              	.LVL205:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4720              		.loc 1 824 11 view .LVU1596
 4721              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4722              		.loc 1 824 5 is_stmt 0 view .LVU1597
 4723 1d9d 4939C0   		cmp	r8, rax	# aligned_copy_word, copy_word
 4724 1da0 7217     		jb	.L386	#,
 825:sieve_extend.c ****     }
 4725              		.loc 1 825 9 is_stmt 1 view .LVU1598
 4726              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4727              		.loc 1 825 56 is_stmt 0 view .LVU1599
 4728 1da2 4E8B0CE3 		mov	r9, QWORD PTR [rbx+r12*8]	# *_228, *_228
 4729              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4730              		.loc 1 825 94 view .LVU1600
 4731 1da6 C42289F7 		shlx	r14, QWORD PTR 8[rbx+r12*8], r14	# tmp648, *_233, shift_flipped
 4731      74E308
 4732              	.LVL206:
 4733              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 4734              		.loc 1 825 56 view .LVU1601
 4735 1dad C44283F7 		shrx	r15, r9, r15	# tmp650, *_228, shift
 4735      F9
 4736              	.LVL207:
 4737              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccW0oq2B.s 			page 140


 825:sieve_extend.c ****     }
 4738              		.loc 1 825 66 view .LVU1602
 4739 1db2 4D09FE   		or	r14, r15	# tmp652, tmp650
 4740 1db5 4C8934C3 		mov	QWORD PTR [rbx+rax*8], r14	# *_237, tmp652
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4741              		.loc 1 824 43 is_stmt 1 view .LVU1603
 4742              	.LVL208:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4743              		.loc 1 824 11 view .LVU1604
 4744              	.L386:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 4745              		.loc 1 824 11 is_stmt 0 view .LVU1605
 4746 1db9 4C89D0   		mov	rax, r10	# ivtmp.319, ivtmp.319
 4747              	.L381:
 828:sieve_extend.c **** 
 4748              		.loc 1 828 5 is_stmt 1 view .LVU1606
 4749              	# sieve_extend.c:828:     if (copy_word >= destination_stop_word) return;
 828:sieve_extend.c **** 
 4750              		.loc 1 828 8 is_stmt 0 view .LVU1607
 4751 1dbc 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 4751      50
 4752 1dc1 4839C6   		cmp	rsi, rax	# destination_stop_word, ivtmp.319
 4753 1dc4 0F864204 		jbe	.L624	#,
 4753      0000
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4754              		.loc 1 830 5 is_stmt 1 view .LVU1608
 4755              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4756              		.loc 1 830 17 is_stmt 0 view .LVU1609
 4757 1dca 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# size, %sfp
 4757      18
 4758 1dcf 4989C5   		mov	r13, rax	# source_word, ivtmp.319
 4759              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4760              		.loc 1 834 21 view .LVU1610
 4761 1dd2 498D0C00 		lea	rcx, [r8+rax]	# ivtmp.319,
 4762              	# sieve_extend.c:830:     source_word = copy_word - size; // recalibrate
 830:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 4763              		.loc 1 830 17 view .LVU1611
 4764 1dd6 4D29C5   		sub	r13, r8	# source_word, size
 4765              	.LVL209:
 831:sieve_extend.c **** 
 4766              		.loc 1 831 5 is_stmt 1 view .LVU1612
 4767              	# sieve_extend.c:831:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 831:sieve_extend.c **** 
 4768              		.loc 1 831 18 is_stmt 0 view .LVU1613
 4769 1dd9 4E8D34C5 		lea	r14, 0[0+r8*8]	# memsize,
 4769      00000000 
 4770              	.LVL210:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4771              		.loc 1 834 5 is_stmt 1 view .LVU1614
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4772              		.loc 1 834 11 view .LVU1615
 4773              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4774              		.loc 1 834 5 is_stmt 0 view .LVU1616
 4775 1de1 4839CE   		cmp	rsi, rcx	# destination_stop_word, ivtmp.319
GAS LISTING /tmp/ccW0oq2B.s 			page 141


 4776 1de4 0F826301 		jb	.L388	#,
 4776      0000
 4777 1dea 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp665,
 4778 1dee 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# tmp666,
 4778      00000000 
 4779              	# sieve_extend.c:835:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 835:sieve_extend.c **** 
 4780              		.loc 1 835 38 view .LVU1617
 4781 1df6 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 4782 1dfa 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 4782      48
 4783 1dff 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 4783      40
 4784 1e04 4D29DC   		sub	r12, r11	# _584, tmp666
 4785 1e07 4889F3   		mov	rbx, rsi	# destination_stop_word, destination_stop_word
 4786              	.LVL211:
 835:sieve_extend.c **** 
 4787              		.loc 1 835 38 view .LVU1618
 4788 1e0a 4D89C5   		mov	r13, r8	# size, size
 4789              	.LVL212:
 835:sieve_extend.c **** 
 4790              		.loc 1 835 38 view .LVU1619
 4791 1e0d C5F877   		vzeroupper
 4792              	.L389:
 835:sieve_extend.c **** 
 4793              		.loc 1 835 9 is_stmt 1 discriminator 2 view .LVU1620
 4794              	.LVL213:
 4795              	.LBB326:
 4796              	.LBI326:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4797              		.loc 2 31 1 discriminator 2 view .LVU1621
 4798              	.LBB327:
 4799              		.loc 2 34 3 discriminator 2 view .LVU1622
 4800              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4801              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1623
 4802 1e10 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp668,
 4803 1e14 4C89F2   		mov	rdx, r14	#, memsize
 4804 1e17 4C89FE   		mov	rsi, r15	#, _48
 4805 1e1a 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.319
 4805      58
 4806 1e1f E8000000 		call	memcpy@PLT	#
 4806      00
 4807              	.LVL214:
 4808              		.loc 2 34 10 discriminator 2 view .LVU1624
 4809              	.LBE327:
 4810              	.LBE326:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4811              		.loc 1 834 54 is_stmt 1 discriminator 2 view .LVU1625
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4812              		.loc 1 834 11 discriminator 2 view .LVU1626
 4813 1e24 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4813      58
 4814 1e29 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.319,
 4815              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4816              		.loc 1 834 5 is_stmt 0 discriminator 2 view .LVU1627
 4817 1e2d 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.319
GAS LISTING /tmp/ccW0oq2B.s 			page 142


 4818 1e30 0F820201 		jb	.L614	#,
 4818      0000
 835:sieve_extend.c **** 
 4819              		.loc 1 835 9 is_stmt 1 view .LVU1628
 4820              	.LVL215:
 4821              	.LBB335:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4822              		.loc 2 31 1 view .LVU1629
 4823              	.LBB328:
 4824              		.loc 2 34 3 view .LVU1630
 4825              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4826              		.loc 2 34 10 is_stmt 0 view .LVU1631
 4827 1e36 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp967,
 4828 1e3a 4C89F2   		mov	rdx, r14	#, memsize
 4829 1e3d 4C89FE   		mov	rsi, r15	#, _48
 4830 1e40 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.319
 4830      58
 4831              	.LVL216:
 4832              		.loc 2 34 10 view .LVU1632
 4833 1e45 E8000000 		call	memcpy@PLT	#
 4833      00
 4834              	.LVL217:
 4835              		.loc 2 34 10 view .LVU1633
 4836              	.LBE328:
 4837              	.LBE335:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4838              		.loc 1 834 54 is_stmt 1 view .LVU1634
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4839              		.loc 1 834 11 view .LVU1635
 4840 1e4a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4840      58
 4841 1e4f 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.319,
 4842              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4843              		.loc 1 834 5 is_stmt 0 view .LVU1636
 4844 1e53 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.319
 4845 1e56 0F82DC00 		jb	.L614	#,
 4845      0000
 835:sieve_extend.c **** 
 4846              		.loc 1 835 9 is_stmt 1 view .LVU1637
 4847              	.LVL218:
 4848              	.LBB336:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4849              		.loc 2 31 1 view .LVU1638
 4850              	.LBB329:
 4851              		.loc 2 34 3 view .LVU1639
 4852              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4853              		.loc 2 34 10 is_stmt 0 view .LVU1640
 4854 1e5c 4C89F2   		mov	rdx, r14	#, memsize
 4855 1e5f 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp970,
 4856 1e63 4C89FE   		mov	rsi, r15	#, _48
 4857 1e66 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.319
 4857      58
 4858 1e6b E8000000 		call	memcpy@PLT	#
 4858      00
 4859              	.LVL219:
 4860              		.loc 2 34 10 view .LVU1641
GAS LISTING /tmp/ccW0oq2B.s 			page 143


 4861              	.LBE329:
 4862              	.LBE336:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4863              		.loc 1 834 54 is_stmt 1 view .LVU1642
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4864              		.loc 1 834 11 view .LVU1643
 4865 1e70 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4865      58
 4866 1e75 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.319,
 4867              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4868              		.loc 1 834 5 is_stmt 0 view .LVU1644
 4869 1e79 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.319
 4870 1e7c 0F82B600 		jb	.L614	#,
 4870      0000
 835:sieve_extend.c **** 
 4871              		.loc 1 835 9 is_stmt 1 view .LVU1645
 4872              	.LVL220:
 4873              	.LBB337:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4874              		.loc 2 31 1 view .LVU1646
 4875              	.LBB330:
 4876              		.loc 2 34 3 view .LVU1647
 4877              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4878              		.loc 2 34 10 is_stmt 0 view .LVU1648
 4879 1e82 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.319
 4879      58
 4880 1e87 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp973,
 4881 1e8b 4C89FE   		mov	rsi, r15	#, _48
 4882 1e8e 4C89F2   		mov	rdx, r14	#, memsize
 4883 1e91 E8000000 		call	memcpy@PLT	#
 4883      00
 4884              	.LVL221:
 4885              		.loc 2 34 10 view .LVU1649
 4886              	.LBE330:
 4887              	.LBE337:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4888              		.loc 1 834 54 is_stmt 1 view .LVU1650
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4889              		.loc 1 834 11 view .LVU1651
 4890 1e96 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4890      58
 4891 1e9b 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.319,
 4892              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4893              		.loc 1 834 5 is_stmt 0 view .LVU1652
 4894 1e9f 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.319
 4895 1ea2 0F829000 		jb	.L614	#,
 4895      0000
 835:sieve_extend.c **** 
 4896              		.loc 1 835 9 is_stmt 1 view .LVU1653
 4897              	.LVL222:
 4898              	.LBB338:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4899              		.loc 2 31 1 view .LVU1654
 4900              	.LBB331:
 4901              		.loc 2 34 3 view .LVU1655
GAS LISTING /tmp/ccW0oq2B.s 			page 144


 4902              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4903              		.loc 2 34 10 is_stmt 0 view .LVU1656
 4904 1ea8 4C89FE   		mov	rsi, r15	#, _48
 4905 1eab 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp976,
 4906 1eaf 4C89F2   		mov	rdx, r14	#, memsize
 4907 1eb2 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.319
 4907      58
 4908 1eb7 E8000000 		call	memcpy@PLT	#
 4908      00
 4909              	.LVL223:
 4910              		.loc 2 34 10 view .LVU1657
 4911              	.LBE331:
 4912              	.LBE338:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4913              		.loc 1 834 54 is_stmt 1 view .LVU1658
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4914              		.loc 1 834 11 view .LVU1659
 4915 1ebc 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4915      58
 4916 1ec1 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.319,
 4917              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4918              		.loc 1 834 5 is_stmt 0 view .LVU1660
 4919 1ec5 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.319
 4920 1ec8 726E     		jb	.L614	#,
 835:sieve_extend.c **** 
 4921              		.loc 1 835 9 is_stmt 1 view .LVU1661
 4922              	.LVL224:
 4923              	.LBB339:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4924              		.loc 2 31 1 view .LVU1662
 4925              	.LBB332:
 4926              		.loc 2 34 3 view .LVU1663
 4927              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4928              		.loc 2 34 10 is_stmt 0 view .LVU1664
 4929 1eca 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.319
 4929      58
 4930 1ecf 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp979,
 4931 1ed3 4C89F2   		mov	rdx, r14	#, memsize
 4932 1ed6 4C89FE   		mov	rsi, r15	#, _48
 4933 1ed9 E8000000 		call	memcpy@PLT	#
 4933      00
 4934              	.LVL225:
 4935              		.loc 2 34 10 view .LVU1665
 4936              	.LBE332:
 4937              	.LBE339:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4938              		.loc 1 834 54 is_stmt 1 view .LVU1666
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4939              		.loc 1 834 11 view .LVU1667
 4940 1ede 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4940      58
 4941 1ee3 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.319,
 4942              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4943              		.loc 1 834 5 is_stmt 0 view .LVU1668
 4944 1ee7 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.319
GAS LISTING /tmp/ccW0oq2B.s 			page 145


 4945 1eea 724C     		jb	.L614	#,
 835:sieve_extend.c **** 
 4946              		.loc 1 835 9 is_stmt 1 view .LVU1669
 4947              	.LVL226:
 4948              	.LBB340:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4949              		.loc 2 31 1 view .LVU1670
 4950              	.LBB333:
 4951              		.loc 2 34 3 view .LVU1671
 4952              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4953              		.loc 2 34 10 is_stmt 0 view .LVU1672
 4954 1eec 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp982,
 4955 1ef0 4C89F2   		mov	rdx, r14	#, memsize
 4956 1ef3 4C89FE   		mov	rsi, r15	#, _48
 4957 1ef6 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.319
 4957      58
 4958 1efb E8000000 		call	memcpy@PLT	#
 4958      00
 4959              	.LVL227:
 4960              		.loc 2 34 10 view .LVU1673
 4961              	.LBE333:
 4962              	.LBE340:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4963              		.loc 1 834 54 is_stmt 1 view .LVU1674
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4964              		.loc 1 834 11 view .LVU1675
 4965 1f00 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4965      58
 4966 1f05 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.319,
 4967              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4968              		.loc 1 834 5 is_stmt 0 view .LVU1676
 4969 1f09 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.319
 4970 1f0c 722A     		jb	.L614	#,
 835:sieve_extend.c **** 
 4971              		.loc 1 835 9 is_stmt 1 view .LVU1677
 4972              	.LVL228:
 4973              	.LBB341:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4974              		.loc 2 31 1 view .LVU1678
 4975              	.LBB334:
 4976              		.loc 2 34 3 view .LVU1679
 4977              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4978              		.loc 2 34 10 is_stmt 0 view .LVU1680
 4979 1f0e 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp985,
 4980 1f12 4C89F2   		mov	rdx, r14	#, memsize
 4981 1f15 4C89FE   		mov	rsi, r15	#, _48
 4982 1f18 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.319
 4982      58
 4983 1f1d E8000000 		call	memcpy@PLT	#
 4983      00
 4984              	.LVL229:
 4985              		.loc 2 34 10 view .LVU1681
 4986              	.LBE334:
 4987              	.LBE341:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4988              		.loc 1 834 54 is_stmt 1 view .LVU1682
GAS LISTING /tmp/ccW0oq2B.s 			page 146


 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4989              		.loc 1 834 11 view .LVU1683
 4990 1f22 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.319, %sfp
 4990      58
 4991              	.LVL230:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4992              		.loc 1 834 11 is_stmt 0 view .LVU1684
 4993 1f27 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.319,
 4994              	.LVL231:
 4995              	# sieve_extend.c:834:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 4996              		.loc 1 834 5 view .LVU1685
 4997 1f2b 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.319
 4998 1f2e 0F83DCFE 		jnb	.L389	#,
 4998      FFFF
 4999              	.LVL232:
 5000              		.p2align 4,,10
 5001 1f34 0F1F4000 		.p2align 3
 5002              	.L614:
 834:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 5003              		.loc 1 834 5 view .LVU1686
 5004 1f38 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 5004      48
 5005 1f3d 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 5005      40
 5006              	.LVL233:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5007              		.loc 1 838 11 is_stmt 1 view .LVU1687
 5008              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5009              		.loc 1 838 5 is_stmt 0 view .LVU1688
 5010 1f42 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.319
 5010      50
 5011 1f47 0F820402 		jb	.L625	#,
 5011      0000
 5012              	.LVL234:
 5013              	.L388:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5014              		.loc 1 838 5 view .LVU1689
 5015 1f4d 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 5015      00000000 
 5016 1f55 4A8D3CED 		lea	rdi, 0[0+r13*8]	# _187,
 5016      00000000 
 5017 1f5d 4D8D6720 		lea	r12, 32[r15]	# tmp675,
 5018 1f61 4C39E7   		cmp	rdi, r12	# _187, tmp675
 5019 1f64 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 5019      20000000 
 5020              	.LVL235:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5021              		.loc 1 838 5 view .LVU1690
 5022 1f6c 410F9DC1 		setge	r9b	#, tmp677
 5023 1f70 4D39F7   		cmp	r15, r14	# _195, _197
 5024 1f73 0F9DC2   		setge	dl	#, tmp679
 5025 1f76 4108D1   		or	r9b, dl	# tmp677, tmp679
 5026 1f79 0F84E101 		je	.L391	#,
 5026      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 147


 5027              		.loc 1 838 5 view .LVU1691
 5028 1f7f 4C8B5424 		mov	r10, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5028      50
 5029 1f84 4C89D6   		mov	rsi, r10	# tmp681, destination_stop_word
 5030 1f87 4829C6   		sub	rsi, rax	# tmp681, ivtmp.319
 5031 1f8a 4883FE08 		cmp	rsi, 8	# tmp681,
 5032 1f8e 0F86CC01 		jbe	.L391	#,
 5032      0000
 5033 1f94 4D8D4201 		lea	r8, 1[r10]	# tmp684,
 5034 1f98 4929C0   		sub	r8, rax	# niters.249, ivtmp.319
 5035 1f9b 4D89C3   		mov	r11, r8	# bnd.250, niters.249
 5036 1f9e 49C1EB02 		shr	r11, 2	# bnd.250,
 5037 1fa2 49C1E305 		sal	r11, 5	# _577,
 5038 1fa6 498D4BE0 		lea	rcx, -32[r11]	# tmp703,
 5039 1faa 48C1E905 		shr	rcx, 5	# tmp701,
 5040 1fae 48FFC1   		inc	rcx	# tmp704
 5041 1fb1 4801DF   		add	rdi, rbx	# vectp.255, bitarray
 5042 1fb4 4901DF   		add	r15, rbx	# vectp.258, bitarray
 5043              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5044              		.loc 1 824 5 view .LVU1692
 5045 1fb7 4531F6   		xor	r14d, r14d	# ivtmp.311
 5046 1fba 83E107   		and	ecx, 7	# tmp705,
 5047 1fbd 0F849C00 		je	.L392	#,
 5047      0000
 5048 1fc3 4883F901 		cmp	rcx, 1	# tmp705,
 5049 1fc7 747D     		je	.L536	#,
 5050 1fc9 4883F902 		cmp	rcx, 2	# tmp705,
 5051 1fcd 7467     		je	.L537	#,
 5052 1fcf 4883F903 		cmp	rcx, 3	# tmp705,
 5053 1fd3 7451     		je	.L538	#,
 5054 1fd5 4883F904 		cmp	rcx, 4	# tmp705,
 5055 1fd9 743B     		je	.L539	#,
 5056 1fdb 4883F905 		cmp	rcx, 5	# tmp705,
 5057 1fdf 7425     		je	.L540	#,
 5058 1fe1 4883F906 		cmp	rcx, 6	# tmp705,
 5059 1fe5 740F     		je	.L541	#,
 5060              	.LVL236:
 839:sieve_extend.c **** 
 5061              		.loc 1 839 9 is_stmt 1 view .LVU1693
 5062              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5063              		.loc 1 839 29 is_stmt 0 view .LVU1694
 5064 1fe7 C57E6F17 		vmovdqu	ymm10, YMMWORD PTR [rdi]	# tmp1291, MEM[base: vectp.255_146, index: ivtmp.311_575, offset:
 5065 1feb 41BE2000 		mov	r14d, 32	# ivtmp.311,
 5065      0000
 5066 1ff1 C4417E7F 		vmovdqu	YMMWORD PTR [r15], ymm10	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], tmp
 5066      17
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5067              		.loc 1 838 48 is_stmt 1 view .LVU1695
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5068              		.loc 1 838 11 view .LVU1696
 5069              	.L541:
 839:sieve_extend.c **** 
 5070              		.loc 1 839 9 view .LVU1697
 5071              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 148


 5072              		.loc 1 839 29 is_stmt 0 view .LVU1698
 5073 1ff6 C4217E6F 		vmovdqu	ymm11, YMMWORD PTR [rdi+r14]	# tmp1292, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5073      1C37
 5074 1ffc C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm11	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5074      1C37
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5075              		.loc 1 838 48 is_stmt 1 view .LVU1699
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5076              		.loc 1 838 11 view .LVU1700
 5077 2002 4983C620 		add	r14, 32	# ivtmp.311,
 5078              	.L540:
 839:sieve_extend.c **** 
 5079              		.loc 1 839 9 view .LVU1701
 5080              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5081              		.loc 1 839 29 is_stmt 0 view .LVU1702
 5082 2006 C4217E6F 		vmovdqu	ymm13, YMMWORD PTR [rdi+r14]	# tmp1293, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5082      2C37
 5083 200c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm13	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5083      2C37
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5084              		.loc 1 838 48 is_stmt 1 view .LVU1703
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5085              		.loc 1 838 11 view .LVU1704
 5086 2012 4983C620 		add	r14, 32	# ivtmp.311,
 5087              	.L539:
 839:sieve_extend.c **** 
 5088              		.loc 1 839 9 view .LVU1705
 5089              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5090              		.loc 1 839 29 is_stmt 0 view .LVU1706
 5091 2016 C4217E6F 		vmovdqu	ymm14, YMMWORD PTR [rdi+r14]	# tmp1294, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5091      3437
 5092 201c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm14	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5092      3437
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5093              		.loc 1 838 48 is_stmt 1 view .LVU1707
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5094              		.loc 1 838 11 view .LVU1708
 5095 2022 4983C620 		add	r14, 32	# ivtmp.311,
 5096              	.L538:
 839:sieve_extend.c **** 
 5097              		.loc 1 839 9 view .LVU1709
 5098              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5099              		.loc 1 839 29 is_stmt 0 view .LVU1710
 5100 2026 C4217E6F 		vmovdqu	ymm15, YMMWORD PTR [rdi+r14]	# tmp1295, MEM[base: vectp.255_146, index: ivtmp.311_575, off
 5100      3C37
 5101 202c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm15	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B],
 5101      3C37
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5102              		.loc 1 838 48 is_stmt 1 view .LVU1711
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5103              		.loc 1 838 11 view .LVU1712
 5104 2032 4983C620 		add	r14, 32	# ivtmp.311,
 5105              	.L537:
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 149


 5106              		.loc 1 839 9 view .LVU1713
 5107              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5108              		.loc 1 839 29 is_stmt 0 view .LVU1714
 5109 2036 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rdi+r14]	# tmp1296, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5109      0C37
 5110 203c C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm1	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5110      0C37
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5111              		.loc 1 838 48 is_stmt 1 view .LVU1715
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5112              		.loc 1 838 11 view .LVU1716
 5113 2042 4983C620 		add	r14, 32	# ivtmp.311,
 5114              	.L536:
 839:sieve_extend.c **** 
 5115              		.loc 1 839 9 view .LVU1717
 5116              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5117              		.loc 1 839 29 is_stmt 0 view .LVU1718
 5118 2046 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR [rdi+r14]	# tmp1297, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5118      0437
 5119 204c C4017E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm8	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5119      0437
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5120              		.loc 1 838 48 is_stmt 1 view .LVU1719
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5121              		.loc 1 838 11 view .LVU1720
 5122 2052 4983C620 		add	r14, 32	# ivtmp.311,
 5123 2056 4D39DE   		cmp	r14, r11	# ivtmp.311, _577
 5124 2059 0F849600 		je	.L599	#,
 5124      0000
 5125              	.L392:
 839:sieve_extend.c **** 
 5126              		.loc 1 839 9 discriminator 2 view .LVU1721
 5127              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5128              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1722
 5129 205f C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR [rdi+r14]	# tmp1278, MEM[base: vectp.255_146, index: ivtmp.311_575, offs
 5129      0437
 5130 2065 C4817E7F 		vmovdqu	YMMWORD PTR [r15+r14], ymm0	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B], 
 5130      0437
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5131              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1723
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5132              		.loc 1 838 11 discriminator 2 view .LVU1724
 839:sieve_extend.c **** 
 5133              		.loc 1 839 9 discriminator 2 view .LVU1725
 5134              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5135              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1726
 5136 206b C4A17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[rdi+r14]	# tmp1279, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5136      6C3720
 5137 2072 C4817E7F 		vmovdqu	YMMWORD PTR 32[r15+r14], ymm5	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5137      6C3720
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5138              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1727
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 150


 5139              		.loc 1 838 11 discriminator 2 view .LVU1728
 839:sieve_extend.c **** 
 5140              		.loc 1 839 9 discriminator 2 view .LVU1729
 5141              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5142              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1730
 5143 2079 C4217E6F 		vmovdqu	ymm9, YMMWORD PTR 64[rdi+r14]	# tmp1280, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5143      4C3740
 5144 2080 C4017E7F 		vmovdqu	YMMWORD PTR 64[r15+r14], ymm9	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5144      4C3740
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5145              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1731
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5146              		.loc 1 838 11 discriminator 2 view .LVU1732
 839:sieve_extend.c **** 
 5147              		.loc 1 839 9 discriminator 2 view .LVU1733
 5148              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5149              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1734
 5150 2087 C4A17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[rdi+r14]	# tmp1281, MEM[base: vectp.255_146, index: ivtmp.311_575, of
 5150      543760
 5151 208e C4817E7F 		vmovdqu	YMMWORD PTR 96[r15+r14], ymm2	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B]
 5151      543760
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5152              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1735
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5153              		.loc 1 838 11 discriminator 2 view .LVU1736
 839:sieve_extend.c **** 
 5154              		.loc 1 839 9 discriminator 2 view .LVU1737
 5155              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5156              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1738
 5157 2095 C4A17E6F 		vmovdqu	ymm4, YMMWORD PTR 128[rdi+r14]	# tmp1282, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5157      A4378000 
 5157      0000
 5158 209f C4817E7F 		vmovdqu	YMMWORD PTR 128[r15+r14], ymm4	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5158      A4378000 
 5158      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5159              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1739
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5160              		.loc 1 838 11 discriminator 2 view .LVU1740
 839:sieve_extend.c **** 
 5161              		.loc 1 839 9 discriminator 2 view .LVU1741
 5162              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5163              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1742
 5164 20a9 C4A17E6F 		vmovdqu	ymm6, YMMWORD PTR 160[rdi+r14]	# tmp1283, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5164      B437A000 
 5164      0000
 5165 20b3 C4817E7F 		vmovdqu	YMMWORD PTR 160[r15+r14], ymm6	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5165      B437A000 
 5165      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5166              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1743
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5167              		.loc 1 838 11 discriminator 2 view .LVU1744
GAS LISTING /tmp/ccW0oq2B.s 			page 151


 839:sieve_extend.c **** 
 5168              		.loc 1 839 9 discriminator 2 view .LVU1745
 5169              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5170              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1746
 5171 20bd C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[rdi+r14]	# tmp1284, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5171      BC37C000 
 5171      0000
 5172 20c7 C4817E7F 		vmovdqu	YMMWORD PTR 192[r15+r14], ymm7	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5172      BC37C000 
 5172      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5173              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1747
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5174              		.loc 1 838 11 discriminator 2 view .LVU1748
 839:sieve_extend.c **** 
 5175              		.loc 1 839 9 discriminator 2 view .LVU1749
 5176              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5177              		.loc 1 839 29 is_stmt 0 discriminator 2 view .LVU1750
 5178 20d1 C4A17E6F 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+r14]	# tmp1285, MEM[base: vectp.255_146, index: ivtmp.311_575, o
 5178      9C37E000 
 5178      0000
 5179 20db C4817E7F 		vmovdqu	YMMWORD PTR 224[r15+r14], ymm3	# MEM[base: vectp.258_119, index: ivtmp.311_575, offset: 0B
 5179      9C37E000 
 5179      0000
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5180              		.loc 1 838 48 is_stmt 1 discriminator 2 view .LVU1751
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5181              		.loc 1 838 11 discriminator 2 view .LVU1752
 5182 20e5 4981C600 		add	r14, 256	# ivtmp.311,
 5182      010000
 5183 20ec 4D39DE   		cmp	r14, r11	# ivtmp.311, _577
 5184 20ef 0F856AFF 		jne	.L392	#,
 5184      FFFF
 5185              	.L599:
 5186 20f5 4D89C7   		mov	r15, r8	# niters_vector_mult_vf.251, niters.249
 5187 20f8 4983E7FC 		and	r15, -4	# niters_vector_mult_vf.251,
 5188 20fc 4D01FD   		add	r13, r15	# tmp.252, niters_vector_mult_vf.251
 5189 20ff 4C01F8   		add	rax, r15	# tmp.253, niters_vector_mult_vf.251
 5190 2102 4D39C7   		cmp	r15, r8	# niters_vector_mult_vf.251, niters.249
 5191 2105 0F840101 		je	.L624	#,
 5191      0000
 5192              	.LVL237:
 839:sieve_extend.c **** 
 5193              		.loc 1 839 9 view .LVU1753
 5194              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5195              		.loc 1 839 39 is_stmt 0 view .LVU1754
 5196 210b 4A8B3CEB 		mov	rdi, QWORD PTR [rbx+r13*8]	# _90, *_141
 5197              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5198              		.loc 1 838 5 view .LVU1755
 5199 210f 4C8B4C24 		mov	r9, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5199      50
 5200              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 152


 5201              		.loc 1 838 57 view .LVU1756
 5202 2114 4C8D6001 		lea	r12, 1[rax]	# copy_word,
 5203              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5204              		.loc 1 839 29 view .LVU1757
 5205 2118 48893CC3 		mov	QWORD PTR [rbx+rax*8], rdi	# *_426, _90
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5206              		.loc 1 838 48 is_stmt 1 view .LVU1758
 5207              	.LVL238:
 5208              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5209              		.loc 1 838 71 is_stmt 0 view .LVU1759
 5210 211c 49FFC5   		inc	r13	# source_word
 5211              	.LVL239:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5212              		.loc 1 838 11 is_stmt 1 view .LVU1760
 5213              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5214              		.loc 1 838 5 is_stmt 0 view .LVU1761
 5215 211f 4D39E1   		cmp	r9, r12	# destination_stop_word, copy_word
 5216 2122 0F82E400 		jb	.L624	#,
 5216      0000
 839:sieve_extend.c **** 
 5217              		.loc 1 839 9 is_stmt 1 view .LVU1762
 5218              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5219              		.loc 1 839 39 is_stmt 0 view .LVU1763
 5220 2128 4A8D14ED 		lea	rdx, 0[0+r13*8]	# _96,
 5220      00000000 
 5221 2130 4E8B2CEB 		mov	r13, QWORD PTR [rbx+r13*8]	# _103, *_98
 5222              	.LVL240:
 5223              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5224              		.loc 1 838 57 view .LVU1764
 5225 2134 4883C002 		add	rax, 2	# copy_word,
 5226              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5227              		.loc 1 839 29 view .LVU1765
 5228 2138 4E892CE3 		mov	QWORD PTR [rbx+r12*8], r13	# *_102, _103
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5229              		.loc 1 838 48 is_stmt 1 view .LVU1766
 5230              	.LVL241:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5231              		.loc 1 838 11 view .LVU1767
 5232              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5233              		.loc 1 838 5 is_stmt 0 view .LVU1768
 5234 213c 4939C1   		cmp	r9, rax	# destination_stop_word, copy_word
 5235 213f 0F82C700 		jb	.L624	#,
 5235      0000
 839:sieve_extend.c **** 
 5236              		.loc 1 839 9 is_stmt 1 view .LVU1769
 5237              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5238              		.loc 1 839 39 is_stmt 0 view .LVU1770
 5239 2145 4C8B5413 		mov	r10, QWORD PTR 8[rbx+rdx]	# _156, *_159
 5239      08
GAS LISTING /tmp/ccW0oq2B.s 			page 153


 5240              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5241              		.loc 1 839 29 view .LVU1771
 5242 214a 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_157, _156
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5243              		.loc 1 838 48 is_stmt 1 view .LVU1772
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5244              		.loc 1 838 11 view .LVU1773
 5245 214e C5F877   		vzeroupper
 5246              	.L625:
 5247              	# sieve_extend.c:842:  }
 842:sieve_extend.c **** 
 5248              		.loc 1 842 2 is_stmt 0 view .LVU1774
 5249 2151 488D65D8 		lea	rsp, -40[rbp]	#,
 5250              	.LVL242:
 842:sieve_extend.c **** 
 5251              		.loc 1 842 2 view .LVU1775
 5252 2155 5B       		pop	rbx	#
 5253 2156 415C     		pop	r12	#
 5254 2158 415D     		pop	r13	#
 5255 215a 415E     		pop	r14	#
 5256 215c 415F     		pop	r15	#
 5257 215e 5D       		pop	rbp	#
 5258              		.cfi_remember_state
 5259              		.cfi_def_cfa 7, 8
 5260              	.LVL243:
 842:sieve_extend.c **** 
 5261              		.loc 1 842 2 view .LVU1776
 5262 215f C3       		ret	
 5263              	.LVL244:
 5264              		.p2align 4,,10
 5265              		.p2align 3
 5266              	.L391:
 5267              		.cfi_restore_state
 842:sieve_extend.c **** 
 5268              		.loc 1 842 2 view .LVU1777
 5269 2160 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 5269      50
 5270 2165 4E8D043B 		lea	r8, [rbx+r15]	# ivtmp.305,
 5271 2169 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _574,
 5271      08
 5272              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5273              		.loc 1 839 39 view .LVU1778
 5274 216e 4929C5   		sub	r13, rax	# tmp689, ivtmp.319
 5275              	.LVL245:
 839:sieve_extend.c **** 
 5276              		.loc 1 839 39 view .LVU1779
 5277 2171 4889D8   		mov	rax, rbx	# tmp696, _574
 5278 2174 4C29C0   		sub	rax, r8	# tmp696, ivtmp.305
 5279 2177 4883E808 		sub	rax, 8	# tmp697,
 5280 217b 48C1E803 		shr	rax, 3	# tmp695,
 5281 217f 48FFC0   		inc	rax	# tmp698
 5282 2182 83E007   		and	eax, 7	# tmp699,
 5283 2185 0F843D01 		je	.L395	#,
 5283      0000
 5284 218b 4883F801 		cmp	rax, 1	# tmp699,
GAS LISTING /tmp/ccW0oq2B.s 			page 154


 5285 218f 7466     		je	.L542	#,
 5286 2191 4883F802 		cmp	rax, 2	# tmp699,
 5287 2195 7454     		je	.L543	#,
 5288 2197 4883F803 		cmp	rax, 3	# tmp699,
 5289 219b 7442     		je	.L544	#,
 5290 219d 4883F804 		cmp	rax, 4	# tmp699,
 5291 21a1 7430     		je	.L545	#,
 5292 21a3 4883F805 		cmp	rax, 5	# tmp699,
 5293 21a7 741E     		je	.L546	#,
 5294 21a9 4883F806 		cmp	rax, 6	# tmp699,
 5295 21ad 740C     		je	.L547	#,
 839:sieve_extend.c **** 
 5296              		.loc 1 839 9 is_stmt 1 view .LVU1780
 5297              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5298              		.loc 1 839 39 is_stmt 0 view .LVU1781
 5299 21af 4F8B1CE8 		mov	r11, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5300 21b3 4983C008 		add	r8, 8	# ivtmp.305,
 5301              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5302              		.loc 1 839 29 view .LVU1782
 5303 21b7 4D8958F8 		mov	QWORD PTR -8[r8], r11	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5304              		.loc 1 838 48 is_stmt 1 view .LVU1783
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5305              		.loc 1 838 11 view .LVU1784
 5306              	.L547:
 839:sieve_extend.c **** 
 5307              		.loc 1 839 9 view .LVU1785
 5308              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5309              		.loc 1 839 39 is_stmt 0 view .LVU1786
 5310 21bb 4B8B0CE8 		mov	rcx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5311 21bf 4983C008 		add	r8, 8	# ivtmp.305,
 5312              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5313              		.loc 1 839 29 view .LVU1787
 5314 21c3 498948F8 		mov	QWORD PTR -8[r8], rcx	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5315              		.loc 1 838 48 is_stmt 1 view .LVU1788
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5316              		.loc 1 838 11 view .LVU1789
 5317              	.L546:
 839:sieve_extend.c **** 
 5318              		.loc 1 839 9 view .LVU1790
 5319              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5320              		.loc 1 839 39 is_stmt 0 view .LVU1791
 5321 21c7 4F8B34E8 		mov	r14, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5322 21cb 4983C008 		add	r8, 8	# ivtmp.305,
 5323              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5324              		.loc 1 839 29 view .LVU1792
 5325 21cf 4D8970F8 		mov	QWORD PTR -8[r8], r14	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5326              		.loc 1 838 48 is_stmt 1 view .LVU1793
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccW0oq2B.s 			page 155


 5327              		.loc 1 838 11 view .LVU1794
 5328              	.L545:
 839:sieve_extend.c **** 
 5329              		.loc 1 839 9 view .LVU1795
 5330              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5331              		.loc 1 839 39 is_stmt 0 view .LVU1796
 5332 21d3 4F8B3CE8 		mov	r15, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5333 21d7 4983C008 		add	r8, 8	# ivtmp.305,
 5334              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5335              		.loc 1 839 29 view .LVU1797
 5336 21db 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5337              		.loc 1 838 48 is_stmt 1 view .LVU1798
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5338              		.loc 1 838 11 view .LVU1799
 5339              	.L544:
 839:sieve_extend.c **** 
 5340              		.loc 1 839 9 view .LVU1800
 5341              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5342              		.loc 1 839 39 is_stmt 0 view .LVU1801
 5343 21df 4B8B3CE8 		mov	rdi, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5344 21e3 4983C008 		add	r8, 8	# ivtmp.305,
 5345              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5346              		.loc 1 839 29 view .LVU1802
 5347 21e7 498978F8 		mov	QWORD PTR -8[r8], rdi	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5348              		.loc 1 838 48 is_stmt 1 view .LVU1803
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5349              		.loc 1 838 11 view .LVU1804
 5350              	.L543:
 839:sieve_extend.c **** 
 5351              		.loc 1 839 9 view .LVU1805
 5352              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5353              		.loc 1 839 39 is_stmt 0 view .LVU1806
 5354 21eb 4F8B24E8 		mov	r12, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5355 21ef 4983C008 		add	r8, 8	# ivtmp.305,
 5356              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5357              		.loc 1 839 29 view .LVU1807
 5358 21f3 4D8960F8 		mov	QWORD PTR -8[r8], r12	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5359              		.loc 1 838 48 is_stmt 1 view .LVU1808
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5360              		.loc 1 838 11 view .LVU1809
 5361              	.L542:
 839:sieve_extend.c **** 
 5362              		.loc 1 839 9 view .LVU1810
 5363              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5364              		.loc 1 839 39 is_stmt 0 view .LVU1811
 5365 21f7 4F8B0CE8 		mov	r9, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5366 21fb 4983C008 		add	r8, 8	# ivtmp.305,
GAS LISTING /tmp/ccW0oq2B.s 			page 156


 5367              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5368              		.loc 1 839 29 view .LVU1812
 5369 21ff 4D8948F8 		mov	QWORD PTR -8[r8], r9	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5370              		.loc 1 838 48 is_stmt 1 view .LVU1813
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5371              		.loc 1 838 11 view .LVU1814
 5372              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5373              		.loc 1 838 5 is_stmt 0 view .LVU1815
 5374 2203 4939D8   		cmp	r8, rbx	# ivtmp.305, _574
 5375 2206 0F85BC00 		jne	.L395	#,
 5375      0000
 5376              	.LVL246:
 5377              	.L624:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5378              		.loc 1 838 5 view .LVU1816
 5379 220c C5F877   		vzeroupper
 5380              	# sieve_extend.c:842:  }
 842:sieve_extend.c **** 
 5381              		.loc 1 842 2 view .LVU1817
 5382 220f 488D65D8 		lea	rsp, -40[rbp]	#,
 5383              	.LVL247:
 842:sieve_extend.c **** 
 5384              		.loc 1 842 2 view .LVU1818
 5385 2213 5B       		pop	rbx	#
 5386 2214 415C     		pop	r12	#
 5387 2216 415D     		pop	r13	#
 5388 2218 415E     		pop	r14	#
 5389 221a 415F     		pop	r15	#
 5390 221c 5D       		pop	rbp	#
 5391              		.cfi_remember_state
 5392              		.cfi_def_cfa 7, 8
 5393              	.LVL248:
 842:sieve_extend.c **** 
 5394              		.loc 1 842 2 view .LVU1819
 5395 221d C3       		ret	
 5396              	.LVL249:
 5397 221e 6690     		.p2align 4,,10
 5398              		.p2align 3
 5399              	.L627:
 5400              		.cfi_restore_state
 5401              	.LBB342:
 5402              	.LBB321:
 5403              	.LBB309:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5404              		.loc 1 662 9 is_stmt 1 view .LVU1820
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5405              		.loc 1 663 9 view .LVU1821
 5406              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5407              		.loc 1 662 19 is_stmt 0 view .LVU1822
 5408 2220 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1313, MEM[base: vectp.284_427, index: ivtmp.359_621, offset
 5408      40
 5409              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccW0oq2B.s 			page 157


 5410              		.loc 1 663 19 view .LVU1823
 5411 2225 C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B], ME
 5411      40
 5412 222a C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 32B], 
 5412      60
 5413              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5414              		.loc 1 662 19 view .LVU1824
 5415 222f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1091, tmp1313, MEM[base: vectp.284_427, index: i
 5415      60
 5416              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5417              		.loc 1 663 19 view .LVU1825
 5418 2234 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1087, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B
 5418      D2
 5419 2239 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1102, MEM[base: vectp.288_436, index: ivtmp.359_621, offset: 0B
 5419      C2
 5420 223e C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_444, tmp1087,
 5420      DAD8
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5421              		.loc 1 664 9 is_stmt 1 view .LVU1826
 5422              	# sieve_extend.c:662:         bitword_t source0 = bitarray[source_word  ];
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5423              		.loc 1 662 19 is_stmt 0 view .LVU1827
 5424 2244 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1092, tmp1091,
 5424      ECD8
 5425              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5426              		.loc 1 663 19 view .LVU1828
 5427 224a C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1103, tmp1102,
 5427      F8D8
 5428              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5429              		.loc 1 664 42 view .LVU1829
 5430 2250 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.291, tmp1092, _12
 5431              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5432              		.loc 1 664 63 view .LVU1830
 5433 2254 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.292, vect_perm_even_444, _18
 5434              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5435              		.loc 1 666 63 view .LVU1831
 5436 2258 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.295, tmp1103, _18
 5437              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5438              		.loc 1 666 42 view .LVU1832
 5439 225c C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.294, vect_perm_even_444, _12
 5440              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5441              		.loc 1 664 52 view .LVU1833
 5442 2260 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.293, vect__98.291, vect__100.292
 5442      CF
 5443              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5444              		.loc 1 666 52 view .LVU1834
 5445 2265 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.296, vect__110.295, vect__109.294
 5445      D2
GAS LISTING /tmp/ccW0oq2B.s 			page 158


 5446              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5447              		.loc 1 664 31 view .LVU1835
 5448 226a C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1099, vect__104.293
 5448      CD01
 5449              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5450              		.loc 1 666 31 view .LVU1836
 5451 2270 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1110, vect__114.296
 5451      D601
 5452 2276 48837C24 		cmp	QWORD PTR 64[rsp], 2	# %sfp,
 5452      4002
 5453              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5454              		.loc 1 664 31 view .LVU1837
 5455 227c C4C179D6 		vmovq	QWORD PTR 64[r10], xmm1	# MEM[base: _450, index: ivtmp.359_621, offset: 0B], tmp1096
 5455      4A40
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5456              		.loc 1 664 31 view .LVU1838
 5457 2282 C4C179D6 		vmovq	QWORD PTR 96[r10], xmm5	# MEM[base: _450, index: ivtmp.359_621, offset: 32B], tmp1099
 5457      6A60
 5458 2288 C4C3F916 		vpextrq	QWORD PTR 80[r10], xmm1, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 16B], tmp1096
 5458      4A5001
 5459 228f C4C3F916 		vpextrq	QWORD PTR 112[r10], xmm5, 1	# MEM[base: _450, index: ivtmp.359_621, offset: 48B], tmp1099
 5459      6A7001
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5460              		.loc 1 665 9 is_stmt 1 view .LVU1839
 666:sieve_extend.c ****         copy_word += 2;
 5461              		.loc 1 666 9 view .LVU1840
 5462 2296 41B80200 		mov	r8d, 2	# ivtmp.357,
 5462      0000
 5463              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5464              		.loc 1 666 31 is_stmt 0 view .LVU1841
 5465 229c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _470, index: ivtmp.359_621, offset: 0B], tmp1107
 5465      40
 666:sieve_extend.c ****         copy_word += 2;
 5466              		.loc 1 666 31 view .LVU1842
 5467 22a1 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _470, index: ivtmp.359_621, offset: 32B], tmp1110
 5467      60
 5468 22a6 41B98000 		mov	r9d, 128	# ivtmp.359,
 5468      0000
 5469 22ac C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 16B], tmp1107
 5469      575001
 5470 22b3 C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _470, index: ivtmp.359_621, offset: 48B], tmp1110
 5470      777001
 667:sieve_extend.c ****         source_word += 2;
 5471              		.loc 1 667 9 is_stmt 1 view .LVU1843
 668:sieve_extend.c ****         distance += 2;
 5472              		.loc 1 668 9 view .LVU1844
 669:sieve_extend.c ****     }
 5473              		.loc 1 669 9 view .LVU1845
 669:sieve_extend.c ****     }
 5474              		.loc 1 669 9 is_stmt 0 view .LVU1846
 5475              	.LBE309:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5476              		.loc 1 661 11 is_stmt 1 view .LVU1847
GAS LISTING /tmp/ccW0oq2B.s 			page 159


 5477 22ba 0F87E4F4 		ja	.L620	#,
 5477      FFFF
 5478 22c0 E920F6FF 		jmp	.L594	#
 5478      FF
 5479              	.LVL250:
 5480              		.p2align 4,,10
 5481 22c5 0F1F00   		.p2align 3
 5482              	.L395:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5483              		.loc 1 661 11 is_stmt 0 view .LVU1848
 5484              	.LBE321:
 5485              	.LBE342:
 839:sieve_extend.c **** 
 5486              		.loc 1 839 9 is_stmt 1 view .LVU1849
 5487              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5488              		.loc 1 839 39 is_stmt 0 view .LVU1850
 5489 22c8 4B8B14E8 		mov	rdx, QWORD PTR [r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5490              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5491              		.loc 1 839 29 view .LVU1851
 5492 22cc 498910   		mov	QWORD PTR [r8], rdx	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5493              		.loc 1 838 48 is_stmt 1 view .LVU1852
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5494              		.loc 1 838 11 view .LVU1853
 839:sieve_extend.c **** 
 5495              		.loc 1 839 9 view .LVU1854
 5496              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5497              		.loc 1 839 39 is_stmt 0 view .LVU1855
 5498 22cf 4F8B54E8 		mov	r10, QWORD PTR 8[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5498      08
 5499              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5500              		.loc 1 839 29 view .LVU1856
 5501 22d4 4D895008 		mov	QWORD PTR 8[r8], r10	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5502              		.loc 1 838 48 is_stmt 1 view .LVU1857
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5503              		.loc 1 838 11 view .LVU1858
 839:sieve_extend.c **** 
 5504              		.loc 1 839 9 view .LVU1859
 5505              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5506              		.loc 1 839 39 is_stmt 0 view .LVU1860
 5507 22d8 4B8B74E8 		mov	rsi, QWORD PTR 16[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5507      10
 5508              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5509              		.loc 1 839 29 view .LVU1861
 5510 22dd 49897010 		mov	QWORD PTR 16[r8], rsi	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5511              		.loc 1 838 48 is_stmt 1 view .LVU1862
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5512              		.loc 1 838 11 view .LVU1863
 839:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 160


 5513              		.loc 1 839 9 view .LVU1864
 5514              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5515              		.loc 1 839 39 is_stmt 0 view .LVU1865
 5516 22e1 4B8B44E8 		mov	rax, QWORD PTR 24[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5516      18
 5517              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5518              		.loc 1 839 29 view .LVU1866
 5519 22e6 49894018 		mov	QWORD PTR 24[r8], rax	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5520              		.loc 1 838 48 is_stmt 1 view .LVU1867
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5521              		.loc 1 838 11 view .LVU1868
 839:sieve_extend.c **** 
 5522              		.loc 1 839 9 view .LVU1869
 5523              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5524              		.loc 1 839 39 is_stmt 0 view .LVU1870
 5525 22ea 4F8B5CE8 		mov	r11, QWORD PTR 32[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5525      20
 5526              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5527              		.loc 1 839 29 view .LVU1871
 5528 22ef 4D895820 		mov	QWORD PTR 32[r8], r11	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5529              		.loc 1 838 48 is_stmt 1 view .LVU1872
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5530              		.loc 1 838 11 view .LVU1873
 839:sieve_extend.c **** 
 5531              		.loc 1 839 9 view .LVU1874
 5532              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5533              		.loc 1 839 39 is_stmt 0 view .LVU1875
 5534 22f3 4B8B4CE8 		mov	rcx, QWORD PTR 40[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5534      28
 5535              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5536              		.loc 1 839 29 view .LVU1876
 5537 22f8 49894828 		mov	QWORD PTR 40[r8], rcx	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5538              		.loc 1 838 48 is_stmt 1 view .LVU1877
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5539              		.loc 1 838 11 view .LVU1878
 839:sieve_extend.c **** 
 5540              		.loc 1 839 9 view .LVU1879
 5541              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5542              		.loc 1 839 39 is_stmt 0 view .LVU1880
 5543 22fc 4F8B74E8 		mov	r14, QWORD PTR 48[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5543      30
 5544              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5545              		.loc 1 839 29 view .LVU1881
 5546 2301 4D897030 		mov	QWORD PTR 48[r8], r14	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5547              		.loc 1 838 48 is_stmt 1 view .LVU1882
GAS LISTING /tmp/ccW0oq2B.s 			page 161


 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5548              		.loc 1 838 11 view .LVU1883
 839:sieve_extend.c **** 
 5549              		.loc 1 839 9 view .LVU1884
 5550              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5551              		.loc 1 839 39 is_stmt 0 view .LVU1885
 5552 2305 4F8B7CE8 		mov	r15, QWORD PTR 56[r8+r13*8]	# _170, MEM[base: _54, index: _569, step: 8, offset: 0B]
 5552      38
 5553 230a 4983C040 		add	r8, 64	# ivtmp.305,
 5554              	# sieve_extend.c:839:         bitarray[copy_word] = bitarray[source_word];
 839:sieve_extend.c **** 
 5555              		.loc 1 839 29 view .LVU1886
 5556 230e 4D8978F8 		mov	QWORD PTR -8[r8], r15	# MEM[base: _54, offset: 0B], _170
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5557              		.loc 1 838 48 is_stmt 1 view .LVU1887
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5558              		.loc 1 838 11 view .LVU1888
 5559              	# sieve_extend.c:838:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5560              		.loc 1 838 5 is_stmt 0 view .LVU1889
 5561 2312 4939D8   		cmp	r8, rbx	# ivtmp.305, _574
 5562 2315 75B1     		jne	.L395	#,
 5563 2317 E9F0FEFF 		jmp	.L624	#
 5563      FF
 5564              	.LVL251:
 5565 231c 0F1F4000 		.p2align 4,,10
 5566              		.p2align 3
 5567              	.L382:
 838:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5568              		.loc 1 838 5 view .LVU1890
 5569 2320 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 5569      58
 5570 2325 4C8B5424 		mov	r10, QWORD PTR 56[rsp]	# tmp653, %sfp
 5570      38
 5571 232a 4801D9   		add	rcx, rbx	# ivtmp.327, bitarray
 5572 232d 4901FA   		add	r10, rdi	# tmp653, _183
 5573 2330 4E8D44D3 		lea	r8, 8[rbx+r10*8]	# tmp656,
 5573      08
 5574 2335 4929F0   		sub	r8, rsi	# tmp656, _33
 5575 2338 4C89C6   		mov	rsi, r8	# _602, tmp656
 5576 233b 4929C8   		sub	r8, rcx	# tmp708, ivtmp.327
 5577 233e 4983E808 		sub	r8, 8	# tmp709,
 5578 2342 49C1E803 		shr	r8, 3	# tmp707,
 5579 2346 49FFC0   		inc	r8	# tmp710
 5580              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5581              		.loc 1 825 29 view .LVU1891
 5582 2349 4829F8   		sub	rax, rdi	# tmp657, _183
 5583 234c 4183E007 		and	r8d, 7	# tmp711,
 5584 2350 0F84CF00 		je	.L385	#,
 5584      0000
 5585 2356 4983F801 		cmp	r8, 1	# tmp711,
 5586 235a 0F84A600 		je	.L529	#,
 5586      0000
 5587 2360 4983F802 		cmp	r8, 2	# tmp711,
 5588 2364 0F848600 		je	.L530	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 162


 5588      0000
 5589 236a 4983F803 		cmp	r8, 3	# tmp711,
 5590 236e 746A     		je	.L531	#,
 5591 2370 4983F804 		cmp	r8, 4	# tmp711,
 5592 2374 744E     		je	.L532	#,
 5593 2376 4983F805 		cmp	r8, 5	# tmp711,
 5594 237a 7432     		je	.L533	#,
 5595 237c 4983F806 		cmp	r8, 6	# tmp711,
 5596 2380 7416     		je	.L534	#,
 825:sieve_extend.c ****     }
 5597              		.loc 1 825 9 is_stmt 1 view .LVU1892
 5598              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5599              		.loc 1 825 56 is_stmt 0 view .LVU1893
 5600 2382 C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp987, MEM[base: _593, offset: 0B], _12
 5600      19
 5601              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5602              		.loc 1 825 94 view .LVU1894
 5603 2387 C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp989, MEM[base: _593, offset: 8B], _18
 5603      5108
 5604              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5605              		.loc 1 825 66 view .LVU1895
 5606 238d 4909D3   		or	r11, rdx	# tmp990, tmp989
 5607 2390 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp990
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5608              		.loc 1 824 43 is_stmt 1 view .LVU1896
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5609              		.loc 1 824 11 view .LVU1897
 5610 2394 4883C108 		add	rcx, 8	# ivtmp.327,
 5611              	.L534:
 825:sieve_extend.c ****     }
 5612              		.loc 1 825 9 view .LVU1898
 5613              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5614              		.loc 1 825 56 is_stmt 0 view .LVU1899
 5615 2398 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp992, MEM[base: _593, offset: 0B], _12
 5615      31
 5616              	.LVL252:
 5617              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5618              		.loc 1 825 94 view .LVU1900
 5619 239d C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp994, MEM[base: _593, offset: 8B], _18
 5619      4908
 5620              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5621              		.loc 1 825 66 view .LVU1901
 5622 23a3 4D09CE   		or	r14, r9	# tmp995, tmp994
 5623 23a6 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp995
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5624              		.loc 1 824 43 is_stmt 1 view .LVU1902
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5625              		.loc 1 824 11 view .LVU1903
 5626 23aa 4883C108 		add	rcx, 8	# ivtmp.327,
 5627              	.L533:
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 163


 5628              		.loc 1 825 9 view .LVU1904
 5629              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5630              		.loc 1 825 56 is_stmt 0 view .LVU1905
 5631 23ae C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp997, MEM[base: _593, offset: 0B], _12
 5631      39
 5632              	.LVL253:
 5633              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5634              		.loc 1 825 94 view .LVU1906
 5635 23b3 C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp999, MEM[base: _593, offset: 8B], _18
 5635      5108
 5636              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5637              		.loc 1 825 66 view .LVU1907
 5638 23b9 4D09D7   		or	r15, r10	# tmp1000, tmp999
 5639 23bc 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1000
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5640              		.loc 1 824 43 is_stmt 1 view .LVU1908
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5641              		.loc 1 824 11 view .LVU1909
 5642 23c0 4883C108 		add	rcx, 8	# ivtmp.327,
 5643              	.L532:
 825:sieve_extend.c ****     }
 5644              		.loc 1 825 9 view .LVU1910
 5645              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5646              		.loc 1 825 56 is_stmt 0 view .LVU1911
 5647 23c4 C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp1002, MEM[base: _593, offset: 0B], _12
 5647      01
 5648              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5649              		.loc 1 825 94 view .LVU1912
 5650 23c9 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp1004, MEM[base: _593, offset: 8B], _18
 5650      7908
 5651              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5652              		.loc 1 825 66 view .LVU1913
 5653 23cf 4909F8   		or	r8, rdi	# tmp1005, tmp1004
 5654 23d2 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1005
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5655              		.loc 1 824 43 is_stmt 1 view .LVU1914
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5656              		.loc 1 824 11 view .LVU1915
 5657 23d6 4883C108 		add	rcx, 8	# ivtmp.327,
 5658              	.L531:
 825:sieve_extend.c ****     }
 5659              		.loc 1 825 9 view .LVU1916
 5660              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5661              		.loc 1 825 56 is_stmt 0 view .LVU1917
 5662 23da C4629BF7 		shrx	r11, QWORD PTR [rcx], r12	# tmp1007, MEM[base: _593, offset: 0B], _12
 5662      19
 5663              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5664              		.loc 1 825 94 view .LVU1918
 5665 23df C4E291F7 		shlx	rdx, QWORD PTR 8[rcx], r13	# tmp1009, MEM[base: _593, offset: 8B], _18
GAS LISTING /tmp/ccW0oq2B.s 			page 164


 5665      5108
 5666              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5667              		.loc 1 825 66 view .LVU1919
 5668 23e5 4909D3   		or	r11, rdx	# tmp1010, tmp1009
 5669 23e8 4C891CC1 		mov	QWORD PTR [rcx+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1010
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5670              		.loc 1 824 43 is_stmt 1 view .LVU1920
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5671              		.loc 1 824 11 view .LVU1921
 5672 23ec 4883C108 		add	rcx, 8	# ivtmp.327,
 5673              	.L530:
 825:sieve_extend.c ****     }
 5674              		.loc 1 825 9 view .LVU1922
 5675              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5676              		.loc 1 825 56 is_stmt 0 view .LVU1923
 5677 23f0 C4629BF7 		shrx	r14, QWORD PTR [rcx], r12	# tmp1012, MEM[base: _593, offset: 0B], _12
 5677      31
 5678              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5679              		.loc 1 825 94 view .LVU1924
 5680 23f5 C46291F7 		shlx	r9, QWORD PTR 8[rcx], r13	# tmp1014, MEM[base: _593, offset: 8B], _18
 5680      4908
 5681              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5682              		.loc 1 825 66 view .LVU1925
 5683 23fb 4D09CE   		or	r14, r9	# tmp1015, tmp1014
 5684 23fe 4C8934C1 		mov	QWORD PTR [rcx+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1015
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5685              		.loc 1 824 43 is_stmt 1 view .LVU1926
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5686              		.loc 1 824 11 view .LVU1927
 5687 2402 4883C108 		add	rcx, 8	# ivtmp.327,
 5688              	.L529:
 825:sieve_extend.c ****     }
 5689              		.loc 1 825 9 view .LVU1928
 5690              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5691              		.loc 1 825 56 is_stmt 0 view .LVU1929
 5692 2406 C4629BF7 		shrx	r15, QWORD PTR [rcx], r12	# tmp1017, MEM[base: _593, offset: 0B], _12
 5692      39
 5693              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5694              		.loc 1 825 94 view .LVU1930
 5695 240b C46291F7 		shlx	r10, QWORD PTR 8[rcx], r13	# tmp1019, MEM[base: _593, offset: 8B], _18
 5695      5108
 5696              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5697              		.loc 1 825 66 view .LVU1931
 5698 2411 4D09D7   		or	r15, r10	# tmp1020, tmp1019
 5699 2414 4C893CC1 		mov	QWORD PTR [rcx+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp1020
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5700              		.loc 1 824 43 is_stmt 1 view .LVU1932
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5701              		.loc 1 824 11 view .LVU1933
 5702 2418 4883C108 		add	rcx, 8	# ivtmp.327,
GAS LISTING /tmp/ccW0oq2B.s 			page 165


 5703              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5704              		.loc 1 824 5 is_stmt 0 view .LVU1934
 5705 241c 4839F1   		cmp	rcx, rsi	# ivtmp.327, _602
 5706 241f 0F84C000 		je	.L601	#,
 5706      0000
 5707              	.L385:
 825:sieve_extend.c ****     }
 5708              		.loc 1 825 9 is_stmt 1 view .LVU1935
 5709              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5710              		.loc 1 825 94 is_stmt 0 view .LVU1936
 5711 2425 C4E291F7 		shlx	rdi, QWORD PTR 8[rcx], r13	# tmp660, MEM[base: _593, offset: 8B], _18
 5711      7908
 5712              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5713              		.loc 1 825 56 view .LVU1937
 5714 242b C4629BF7 		shrx	r8, QWORD PTR [rcx], r12	# tmp658, MEM[base: _593, offset: 0B], _12
 5714      01
 5715              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5716              		.loc 1 825 66 view .LVU1938
 5717 2430 4909F8   		or	r8, rdi	# tmp662, tmp660
 5718 2433 4C8904C1 		mov	QWORD PTR [rcx+rax*8], r8	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp662
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5719              		.loc 1 824 43 is_stmt 1 view .LVU1939
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5720              		.loc 1 824 11 view .LVU1940
 5721 2437 4C8D5908 		lea	r11, 8[rcx]	# tmp712,
 825:sieve_extend.c ****     }
 5722              		.loc 1 825 9 view .LVU1941
 5723 243b 4C8D4910 		lea	r9, 16[rcx]	# ivtmp.327,
 5724              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5725              		.loc 1 825 94 is_stmt 0 view .LVU1942
 5726 243f C44291F7 		shlx	r14, QWORD PTR 8[r11], r13	# tmp885, MEM[base: _593, offset: 8B], _18
 5726      7308
 5727              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5728              		.loc 1 825 56 view .LVU1943
 5729 2445 C4E29BF7 		shrx	rdx, QWORD PTR 8[rcx], r12	# tmp883, MEM[base: _593, offset: 0B], _12
 5729      5108
 5730              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5731              		.loc 1 825 66 view .LVU1944
 5732 244b 4C09F2   		or	rdx, r14	# tmp886, tmp885
 5733 244e 498914C3 		mov	QWORD PTR [r11+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp886
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5734              		.loc 1 824 43 is_stmt 1 view .LVU1945
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5735              		.loc 1 824 11 view .LVU1946
 825:sieve_extend.c ****     }
 5736              		.loc 1 825 9 view .LVU1947
 5737 2452 4C8D4118 		lea	r8, 24[rcx]	# ivtmp.327,
 5738 2456 4C8D7120 		lea	r14, 32[rcx]	# ivtmp.327,
 5739              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 166


 5740              		.loc 1 825 94 is_stmt 0 view .LVU1948
 5741 245a C44291F7 		shlx	r10, QWORD PTR 8[r9], r13	# tmp891, MEM[base: _593, offset: 8B], _18
 5741      5108
 5742              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5743              		.loc 1 825 56 view .LVU1949
 5744 2460 C4629BF7 		shrx	r15, QWORD PTR 16[rcx], r12	# tmp889, MEM[base: _593, offset: 0B], _12
 5744      7910
 5745              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5746              		.loc 1 825 66 view .LVU1950
 5747 2466 4D09D7   		or	r15, r10	# tmp892, tmp891
 5748 2469 4D893CC1 		mov	QWORD PTR [r9+rax*8], r15	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp892
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5749              		.loc 1 824 43 is_stmt 1 view .LVU1951
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5750              		.loc 1 824 11 view .LVU1952
 825:sieve_extend.c ****     }
 5751              		.loc 1 825 9 view .LVU1953
 5752 246d 4C8D7928 		lea	r15, 40[rcx]	# ivtmp.327,
 5753              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5754              		.loc 1 825 94 is_stmt 0 view .LVU1954
 5755 2471 C4C291F7 		shlx	rdi, QWORD PTR 8[r8], r13	# tmp897, MEM[base: _593, offset: 8B], _18
 5755      7808
 5756              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5757              		.loc 1 825 56 view .LVU1955
 5758 2477 C4629BF7 		shrx	r11, QWORD PTR 24[rcx], r12	# tmp895, MEM[base: _593, offset: 0B], _12
 5758      5918
 5759              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5760              		.loc 1 825 66 view .LVU1956
 5761 247d 4909FB   		or	r11, rdi	# tmp898, tmp897
 5762 2480 4D891CC0 		mov	QWORD PTR [r8+rax*8], r11	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp898
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5763              		.loc 1 824 43 is_stmt 1 view .LVU1957
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5764              		.loc 1 824 11 view .LVU1958
 825:sieve_extend.c ****     }
 5765              		.loc 1 825 9 view .LVU1959
 5766 2484 4C8D5930 		lea	r11, 48[rcx]	# ivtmp.327,
 5767              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5768              		.loc 1 825 94 is_stmt 0 view .LVU1960
 5769 2488 C44291F7 		shlx	r9, QWORD PTR 8[r14], r13	# tmp903, MEM[base: _593, offset: 8B], _18
 5769      4E08
 5770              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5771              		.loc 1 825 56 view .LVU1961
 5772 248e C4E29BF7 		shrx	rdx, QWORD PTR 32[rcx], r12	# tmp901, MEM[base: _593, offset: 0B], _12
 5772      5120
 5773              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5774              		.loc 1 825 66 view .LVU1962
 5775 2494 4C09CA   		or	rdx, r9	# tmp904, tmp903
 5776 2497 498914C6 		mov	QWORD PTR [r14+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp904
GAS LISTING /tmp/ccW0oq2B.s 			page 167


 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5777              		.loc 1 824 43 is_stmt 1 view .LVU1963
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5778              		.loc 1 824 11 view .LVU1964
 825:sieve_extend.c ****     }
 5779              		.loc 1 825 9 view .LVU1965
 5780 249b 4C8D4938 		lea	r9, 56[rcx]	# ivtmp.327,
 5781 249f 4883C140 		add	rcx, 64	# ivtmp.327,
 5782              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5783              		.loc 1 825 94 is_stmt 0 view .LVU1966
 5784 24a3 C44291F7 		shlx	r8, QWORD PTR 8[r15], r13	# tmp909, MEM[base: _593, offset: 8B], _18
 5784      4708
 5785              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5786              		.loc 1 825 56 view .LVU1967
 5787 24a9 C4629BF7 		shrx	r10, QWORD PTR -24[rcx], r12	# tmp907, MEM[base: _593, offset: 0B], _12
 5787      51E8
 5788              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5789              		.loc 1 825 66 view .LVU1968
 5790 24af 4D09C2   		or	r10, r8	# tmp910, tmp909
 5791 24b2 4D8914C7 		mov	QWORD PTR [r15+rax*8], r10	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp910
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5792              		.loc 1 824 43 is_stmt 1 view .LVU1969
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5793              		.loc 1 824 11 view .LVU1970
 825:sieve_extend.c ****     }
 5794              		.loc 1 825 9 view .LVU1971
 5795              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5796              		.loc 1 825 56 is_stmt 0 view .LVU1972
 5797 24b6 C4629BF7 		shrx	r14, QWORD PTR -16[rcx], r12	# tmp913, MEM[base: _593, offset: 0B], _12
 5797      71F0
 5798              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5799              		.loc 1 825 94 view .LVU1973
 5800 24bc C4C291F7 		shlx	rdi, QWORD PTR 8[r11], r13	# tmp915, MEM[base: _593, offset: 8B], _18
 5800      7B08
 5801              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5802              		.loc 1 825 66 view .LVU1974
 5803 24c2 4909FE   		or	r14, rdi	# tmp916, tmp915
 5804 24c5 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp916
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5805              		.loc 1 824 43 is_stmt 1 view .LVU1975
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5806              		.loc 1 824 11 view .LVU1976
 825:sieve_extend.c ****     }
 5807              		.loc 1 825 9 view .LVU1977
 5808              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5809              		.loc 1 825 56 is_stmt 0 view .LVU1978
 5810 24c9 C4E29BF7 		shrx	rdx, QWORD PTR -8[rcx], r12	# tmp919, MEM[base: _593, offset: 0B], _12
 5810      51F8
 5811              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 168


 5812              		.loc 1 825 94 view .LVU1979
 5813 24cf C44291F7 		shlx	r15, QWORD PTR 8[r9], r13	# tmp921, MEM[base: _593, offset: 8B], _18
 5813      7908
 5814              	# sieve_extend.c:825:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 825:sieve_extend.c ****     }
 5815              		.loc 1 825 66 view .LVU1980
 5816 24d5 4C09FA   		or	rdx, r15	# tmp922, tmp921
 5817 24d8 498914C1 		mov	QWORD PTR [r9+rax*8], rdx	# MEM[base: _593, index: _595, step: 8, offset: 0B], tmp922
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5818              		.loc 1 824 43 is_stmt 1 view .LVU1981
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5819              		.loc 1 824 11 view .LVU1982
 5820              	# sieve_extend.c:824:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5821              		.loc 1 824 5 is_stmt 0 view .LVU1983
 5822 24dc 4839F1   		cmp	rcx, rsi	# ivtmp.327, _602
 5823 24df 0F8540FF 		jne	.L385	#,
 5823      FFFF
 5824              	.L601:
 5825 24e5 488B4424 		mov	rax, QWORD PTR 56[rsp]	# aligned_copy_word, %sfp
 5825      38
 5826 24ea 4C8D5001 		lea	r10, 1[rax]	# ivtmp.319,
 5827 24ee E9C6F8FF 		jmp	.L386	#
 5827      FF
 5828              	.LVL254:
 5829              		.p2align 4,,10
 5830 24f3 0F1F4400 		.p2align 3
 5830      00
 5831              	.L376:
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 5832              		.loc 1 824 5 view .LVU1984
 5833 24f8 4801D9   		add	rcx, rbx	# ivtmp.350, bitarray
 5834              	.LBB343:
 5835              	.LBB322:
 5836              	.LBB310:
 5837              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5838              		.loc 1 663 19 view .LVU1985
 5839 24fb 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _616, offset: 8B]
 5840              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5841              		.loc 1 664 42 view .LVU1986
 5842 24ff C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp609, MEM[base: _616, offset: 0B], _12
 5842      11
 5843              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5844              		.loc 1 664 63 view .LVU1987
 5845 2504 C4E291F7 		shlx	rdi, rsi, r13	# tmp611, source1, _18
 5845      FE
 5846              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5847              		.loc 1 664 52 view .LVU1988
 5848 2509 4809FA   		or	rdx, rdi	# tmp612, tmp611
 5849 250c 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5850 2510 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	# fast_loop_stop_word, %sfp
 5850      48
 5851 2515 4989C0   		mov	r8, rax	# tmp720, ivtmp.319
GAS LISTING /tmp/ccW0oq2B.s 			page 169


 5852 2518 49F7D0   		not	r8	# tmp720
 5853 251b 4D01C8   		add	r8, r9	# tmp721, fast_loop_stop_word
 5854              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5855              		.loc 1 666 63 view .LVU1989
 5856 251e C46291F7 		shlx	r10, QWORD PTR 16[rcx], r13	# tmp613, MEM[base: _616, offset: 16B], _18
 5856      5110
 5857 2524 49F7D3   		not	r11	# tmp694
 5858              	.LVL255:
 666:sieve_extend.c ****         copy_word += 2;
 5859              		.loc 1 666 63 view .LVU1990
 5860 2527 49D1E8   		shr	r8	# tmp719
 5861              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 5862              		.loc 1 667 19 view .LVU1991
 5863 252a 488D7802 		lea	rdi, 2[rax]	# copy_word,
 5864              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5865              		.loc 1 666 42 view .LVU1992
 5866 252e C4E29BF7 		shrx	rsi, rsi, r12	# tmp615, source1, _12
 5866      F6
 5867              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5868              		.loc 1 666 52 view .LVU1993
 5869 2533 4C09D6   		or	rsi, r10	# tmp616, tmp613
 5870 2536 488974C3 		mov	QWORD PTR 8[rbx+rax*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5870      08
 5871 253b 4183E003 		and	r8d, 3	# tmp722,
 5872              	.LVL256:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5873              		.loc 1 662 9 is_stmt 1 view .LVU1994
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5874              		.loc 1 663 9 view .LVU1995
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5875              		.loc 1 664 9 view .LVU1996
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5876              		.loc 1 665 9 view .LVU1997
 666:sieve_extend.c ****         copy_word += 2;
 5877              		.loc 1 666 9 view .LVU1998
 667:sieve_extend.c ****         source_word += 2;
 5878              		.loc 1 667 9 view .LVU1999
 668:sieve_extend.c ****         distance += 2;
 5879              		.loc 1 668 9 view .LVU2000
 669:sieve_extend.c ****     }
 5880              		.loc 1 669 9 view .LVU2001
 5881 253f 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 669:sieve_extend.c ****     }
 5882              		.loc 1 669 9 is_stmt 0 view .LVU2002
 5883              	.LBE310:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5884              		.loc 1 661 11 is_stmt 1 view .LVU2003
 5885 2543 488D5110 		lea	rdx, 16[rcx]	# ivtmp.350,
 5886 2547 4939F9   		cmp	r9, rdi	# fast_loop_stop_word, copy_word
 5887 254a 0F86D1F4 		jbe	.L380	#,
 5887      FFFF
 5888 2550 4D85C0   		test	r8, r8	# tmp722
 5889 2553 747D     		je	.L379	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 170


 5890 2555 4983F801 		cmp	r8, 1	# tmp722,
 5891 2559 7439     		je	.L554	#,
 5892 255b 4983F802 		cmp	r8, 2	# tmp722,
 5893 255f 0F854001 		jne	.L628	#,
 5893      0000
 5894              	.LVL257:
 5895              	.L555:
 5896              	.LBB311:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5897              		.loc 1 662 9 view .LVU2004
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5898              		.loc 1 663 9 view .LVU2005
 5899              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5900              		.loc 1 663 19 is_stmt 0 view .LVU2006
 5901 2565 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5902              		.loc 1 664 9 is_stmt 1 view .LVU2007
 5903              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5904              		.loc 1 664 42 is_stmt 0 view .LVU2008
 5905 2569 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1068, MEM[base: _616, offset: 0B], _12
 5905      0A
 5906              	.LVL258:
 5907              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5908              		.loc 1 664 63 view .LVU2009
 5909 256e C44291F7 		shlx	r8, r9, r13	# tmp1069, source1, _18
 5909      C1
 5910              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5911              		.loc 1 664 52 view .LVU2010
 5912 2573 4C09C1   		or	rcx, r8	# tmp1070, tmp1069
 5913 2576 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5914              	.LVL259:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5915              		.loc 1 665 9 is_stmt 1 view .LVU2011
 666:sieve_extend.c ****         copy_word += 2;
 5916              		.loc 1 666 9 view .LVU2012
 5917              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5918              		.loc 1 666 42 is_stmt 0 view .LVU2013
 5919 257a C4C29BF7 		shrx	rsi, r9, r12	# tmp1073, source1, _12
 5919      F1
 5920 257f 4883C210 		add	rdx, 16	# ivtmp.350,
 5921              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5922              		.loc 1 666 63 view .LVU2014
 5923 2583 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1072, MEM[base: _616, offset: 16B], _18
 5923      12
 5924              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5925              		.loc 1 666 52 view .LVU2015
 5926 2588 4C09D6   		or	rsi, r10	# tmp1074, tmp1072
 5927 258b 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5927      08
 5928              	.LVL260:
GAS LISTING /tmp/ccW0oq2B.s 			page 171


 667:sieve_extend.c ****         source_word += 2;
 5929              		.loc 1 667 9 is_stmt 1 view .LVU2016
 5930              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 5931              		.loc 1 667 19 is_stmt 0 view .LVU2017
 5932 2590 4883C702 		add	rdi, 2	# copy_word,
 668:sieve_extend.c ****         distance += 2;
 5933              		.loc 1 668 9 is_stmt 1 view .LVU2018
 669:sieve_extend.c ****     }
 5934              		.loc 1 669 9 view .LVU2019
 669:sieve_extend.c ****     }
 5935              		.loc 1 669 9 is_stmt 0 view .LVU2020
 5936              	.LBE311:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5937              		.loc 1 661 11 is_stmt 1 view .LVU2021
 5938              	.LVL261:
 5939              	.L554:
 5940              	.LBB312:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5941              		.loc 1 662 9 view .LVU2022
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5942              		.loc 1 663 9 view .LVU2023
 5943              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5944              		.loc 1 663 19 is_stmt 0 view .LVU2024
 5945 2594 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5946              		.loc 1 664 9 is_stmt 1 view .LVU2025
 5947              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5948              		.loc 1 664 42 is_stmt 0 view .LVU2026
 5949 2598 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1078, MEM[base: _616, offset: 0B], _12
 5949      0A
 5950              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5951              		.loc 1 664 63 view .LVU2027
 5952 259d C44291F7 		shlx	r8, r9, r13	# tmp1079, source1, _18
 5952      C1
 5953              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5954              		.loc 1 664 52 view .LVU2028
 5955 25a2 4C09C1   		or	rcx, r8	# tmp1080, tmp1079
 5956 25a5 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 5957              	.LVL262:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5958              		.loc 1 665 9 is_stmt 1 view .LVU2029
 666:sieve_extend.c ****         copy_word += 2;
 5959              		.loc 1 666 9 view .LVU2030
 5960              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5961              		.loc 1 666 42 is_stmt 0 view .LVU2031
 5962 25a9 C4C29BF7 		shrx	rsi, r9, r12	# tmp1083, source1, _12
 5962      F1
 5963 25ae 4883C210 		add	rdx, 16	# ivtmp.350,
 5964              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5965              		.loc 1 666 63 view .LVU2032
GAS LISTING /tmp/ccW0oq2B.s 			page 172


 5966 25b2 C46291F7 		shlx	r10, QWORD PTR [rdx], r13	# tmp1082, MEM[base: _616, offset: 16B], _18
 5966      12
 5967              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 5968              		.loc 1 666 52 view .LVU2033
 5969 25b7 4C09D6   		or	rsi, r10	# tmp1084, tmp1082
 5970 25ba 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 5970      08
 5971              	.LVL263:
 667:sieve_extend.c ****         source_word += 2;
 5972              		.loc 1 667 9 is_stmt 1 view .LVU2034
 5973              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 5974              		.loc 1 667 19 is_stmt 0 view .LVU2035
 5975 25bf 4883C702 		add	rdi, 2	# copy_word,
 668:sieve_extend.c ****         distance += 2;
 5976              		.loc 1 668 9 is_stmt 1 view .LVU2036
 669:sieve_extend.c ****     }
 5977              		.loc 1 669 9 view .LVU2037
 5978 25c3 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 669:sieve_extend.c ****     }
 5979              		.loc 1 669 9 is_stmt 0 view .LVU2038
 5980              	.LBE312:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5981              		.loc 1 661 11 is_stmt 1 view .LVU2039
 5982 25c7 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
 5982      48
 5983 25cc 0F864FF4 		jbe	.L380	#,
 5983      FFFF
 5984              	.LVL264:
 5985              	.L379:
 5986              	.LBB313:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5987              		.loc 1 662 9 view .LVU2040
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5988              		.loc 1 663 9 view .LVU2041
 5989              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5990              		.loc 1 663 19 is_stmt 0 view .LVU2042
 5991 25d2 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5992              		.loc 1 664 9 is_stmt 1 view .LVU2043
 5993              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5994              		.loc 1 664 42 is_stmt 0 view .LVU2044
 5995 25d6 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp794, MEM[base: _616, offset: 0B], _12
 5995      02
 5996              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5997              		.loc 1 664 63 view .LVU2045
 5998 25db C4C291F7 		shlx	rcx, r9, r13	# tmp795, source1, _18
 5998      C9
 5999              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6000              		.loc 1 664 52 view .LVU2046
 6001 25e0 4909C8   		or	r8, rcx	# tmp796, tmp795
 6002 25e3 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
GAS LISTING /tmp/ccW0oq2B.s 			page 173


 6003              	.LVL265:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6004              		.loc 1 665 9 is_stmt 1 view .LVU2047
 666:sieve_extend.c ****         copy_word += 2;
 6005              		.loc 1 666 9 view .LVU2048
 6006              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6007              		.loc 1 666 42 is_stmt 0 view .LVU2049
 6008 25e7 C4429BF7 		shrx	r10, r9, r12	# tmp799, source1, _12
 6008      D1
 6009              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 6010              		.loc 1 667 19 view .LVU2050
 6011 25ec 4C8D4F02 		lea	r9, 2[rdi]	# tmp723,
 6012              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6013              		.loc 1 666 63 view .LVU2051
 6014 25f0 C4E291F7 		shlx	rsi, QWORD PTR 16[rdx], r13	# tmp798, MEM[base: _616, offset: 16B], _18
 6014      7210
 6015              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6016              		.loc 1 666 52 view .LVU2052
 6017 25f6 4C09D6   		or	rsi, r10	# tmp800, tmp799
 6018 25f9 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6018      08
 6019              	.LVL266:
 667:sieve_extend.c ****         source_word += 2;
 6020              		.loc 1 667 9 is_stmt 1 view .LVU2053
 668:sieve_extend.c ****         distance += 2;
 6021              		.loc 1 668 9 view .LVU2054
 669:sieve_extend.c ****     }
 6022              		.loc 1 669 9 view .LVU2055
 669:sieve_extend.c ****     }
 6023              		.loc 1 669 9 is_stmt 0 view .LVU2056
 6024              	.LBE313:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6025              		.loc 1 661 11 is_stmt 1 view .LVU2057
 6026              	.LBB314:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6027              		.loc 1 662 9 view .LVU2058
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6028              		.loc 1 663 9 view .LVU2059
 6029 25fe 4883C240 		add	rdx, 64	# ivtmp.350,
 6030              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6031              		.loc 1 663 19 is_stmt 0 view .LVU2060
 6032 2602 4C8B42D8 		mov	r8, QWORD PTR -40[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6033              		.loc 1 664 9 is_stmt 1 view .LVU2061
 6034              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6035              		.loc 1 664 42 is_stmt 0 view .LVU2062
 6036 2606 C4E29BF7 		shrx	rcx, QWORD PTR -48[rdx], r12	# tmp806, MEM[base: _616, offset: 0B], _12
 6036      4AD0
 6037              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6038              		.loc 1 664 63 view .LVU2063
GAS LISTING /tmp/ccW0oq2B.s 			page 174


 6039 260c C4C291F7 		shlx	rsi, r8, r13	# tmp807, source1, _18
 6039      F0
 6040              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6041              		.loc 1 664 52 view .LVU2064
 6042 2611 4809F1   		or	rcx, rsi	# tmp808, tmp807
 6043 2614 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6044              	.LVL267:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6045              		.loc 1 665 9 is_stmt 1 view .LVU2065
 666:sieve_extend.c ****         copy_word += 2;
 6046              		.loc 1 666 9 view .LVU2066
 6047              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6048              		.loc 1 666 42 is_stmt 0 view .LVU2067
 6049 2618 C4429BF7 		shrx	r8, r8, r12	# tmp811, source1, _12
 6049      C0
 6050              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6051              		.loc 1 666 63 view .LVU2068
 6052 261d 4C8B52E0 		mov	r10, QWORD PTR -32[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6053 2621 C4C291F7 		shlx	rcx, r10, r13	# tmp810, MEM[base: _616, offset: 16B], _18
 6053      CA
 6054              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6055              		.loc 1 666 52 view .LVU2069
 6056 2626 4909C8   		or	r8, rcx	# tmp812, tmp810
 6057 2629 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 6057      08
 6058              	.LVL268:
 667:sieve_extend.c ****         source_word += 2;
 6059              		.loc 1 667 9 is_stmt 1 view .LVU2070
 6060              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 6061              		.loc 1 667 19 is_stmt 0 view .LVU2071
 6062 262e 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 668:sieve_extend.c ****         distance += 2;
 6063              		.loc 1 668 9 is_stmt 1 view .LVU2072
 669:sieve_extend.c ****     }
 6064              		.loc 1 669 9 view .LVU2073
 669:sieve_extend.c ****     }
 6065              		.loc 1 669 9 is_stmt 0 view .LVU2074
 6066              	.LBE314:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6067              		.loc 1 661 11 is_stmt 1 view .LVU2075
 6068              	.LBB315:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6069              		.loc 1 662 9 view .LVU2076
 6070              	.LVL269:
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6071              		.loc 1 663 9 view .LVU2077
 6072              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6073              		.loc 1 663 19 is_stmt 0 view .LVU2078
 6074 2632 488B72E8 		mov	rsi, QWORD PTR -24[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6075              		.loc 1 664 9 is_stmt 1 view .LVU2079
GAS LISTING /tmp/ccW0oq2B.s 			page 175


 6076              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6077              		.loc 1 664 42 is_stmt 0 view .LVU2080
 6078 2636 C4E29BF7 		shrx	rcx, QWORD PTR -32[rdx], r12	# tmp818, MEM[base: _616, offset: 0B], _12
 6078      4AE0
 6079              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6080              		.loc 1 664 63 view .LVU2081
 6081 263c C46291F7 		shlx	r10, rsi, r13	# tmp819, source1, _18
 6081      D6
 6082              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6083              		.loc 1 664 52 view .LVU2082
 6084 2641 4C09D1   		or	rcx, r10	# tmp820, tmp819
 6085 2644 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6086              	.LVL270:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6087              		.loc 1 665 9 is_stmt 1 view .LVU2083
 666:sieve_extend.c ****         copy_word += 2;
 6088              		.loc 1 666 9 view .LVU2084
 6089              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6090              		.loc 1 666 42 is_stmt 0 view .LVU2085
 6091 2648 C4E29BF7 		shrx	rsi, rsi, r12	# tmp823, source1, _12
 6091      F6
 6092              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6093              		.loc 1 666 63 view .LVU2086
 6094 264d 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6095 2651 C4C291F7 		shlx	rcx, r8, r13	# tmp822, MEM[base: _616, offset: 16B], _18
 6095      C8
 6096              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6097              		.loc 1 666 52 view .LVU2087
 6098 2656 4809CE   		or	rsi, rcx	# tmp824, tmp822
 6099 2659 4A8974CB 		mov	QWORD PTR 8[rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6099      08
 6100              	.LVL271:
 667:sieve_extend.c ****         source_word += 2;
 6101              		.loc 1 667 9 is_stmt 1 view .LVU2088
 6102              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 6103              		.loc 1 667 19 is_stmt 0 view .LVU2089
 6104 265e 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 668:sieve_extend.c ****         distance += 2;
 6105              		.loc 1 668 9 is_stmt 1 view .LVU2090
 669:sieve_extend.c ****     }
 6106              		.loc 1 669 9 view .LVU2091
 669:sieve_extend.c ****     }
 6107              		.loc 1 669 9 is_stmt 0 view .LVU2092
 6108              	.LBE315:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6109              		.loc 1 661 11 is_stmt 1 view .LVU2093
 6110              	.LBB316:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6111              		.loc 1 662 9 view .LVU2094
 6112              	.LVL272:
GAS LISTING /tmp/ccW0oq2B.s 			page 176


 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6113              		.loc 1 663 9 view .LVU2095
 6114              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 6115              		.loc 1 667 19 is_stmt 0 view .LVU2096
 6116 2662 4883C708 		add	rdi, 8	# copy_word,
 6117              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6118              		.loc 1 663 19 view .LVU2097
 6119 2666 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6120              		.loc 1 664 9 is_stmt 1 view .LVU2098
 6121              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6122              		.loc 1 664 42 is_stmt 0 view .LVU2099
 6123 266a C4E29BF7 		shrx	rcx, QWORD PTR -16[rdx], r12	# tmp830, MEM[base: _616, offset: 0B], _12
 6123      4AF0
 6124              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6125              		.loc 1 664 63 view .LVU2100
 6126 2670 C44291F7 		shlx	r10, r8, r13	# tmp831, source1, _18
 6126      D0
 6127              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6128              		.loc 1 664 52 view .LVU2101
 6129 2675 4C09D1   		or	rcx, r10	# tmp832, tmp831
 6130 2678 4A890CCB 		mov	QWORD PTR [rbx+r9*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 0
 6131              	.LVL273:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6132              		.loc 1 665 9 is_stmt 1 view .LVU2102
 666:sieve_extend.c ****         copy_word += 2;
 6133              		.loc 1 666 9 view .LVU2103
 6134              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6135              		.loc 1 666 42 is_stmt 0 view .LVU2104
 6136 267c C4429BF7 		shrx	r8, r8, r12	# tmp835, source1, _12
 6136      C0
 6137 2681 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 6138              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6139              		.loc 1 666 63 view .LVU2105
 6140 2685 488B32   		mov	rsi, QWORD PTR [rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6141 2688 C4E291F7 		shlx	rcx, rsi, r13	# tmp834, MEM[base: _616, offset: 16B], _18
 6141      CE
 6142              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6143              		.loc 1 666 52 view .LVU2106
 6144 268d 4909C8   		or	r8, rcx	# tmp836, tmp834
 6145 2690 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 8
 6145      08
 6146              	.LVL274:
 667:sieve_extend.c ****         source_word += 2;
 6147              		.loc 1 667 9 is_stmt 1 view .LVU2107
 668:sieve_extend.c ****         distance += 2;
 6148              		.loc 1 668 9 view .LVU2108
 669:sieve_extend.c ****     }
 6149              		.loc 1 669 9 view .LVU2109
GAS LISTING /tmp/ccW0oq2B.s 			page 177


 669:sieve_extend.c ****     }
 6150              		.loc 1 669 9 is_stmt 0 view .LVU2110
 6151              	.LBE316:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6152              		.loc 1 661 11 is_stmt 1 view .LVU2111
 6153 2695 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, copy_word
 6153      48
 6154 269a 0F8732FF 		ja	.L379	#,
 6154      FFFF
 6155 26a0 E97CF3FF 		jmp	.L380	#
 6155      FF
 6156              	.L628:
 6157              	.LBB317:
 662:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6158              		.loc 1 662 9 view .LVU2112
 6159              	.LVL275:
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6160              		.loc 1 663 9 view .LVU2113
 6161              	# sieve_extend.c:663:         bitword_t source1 = bitarray[source_word+1];
 663:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6162              		.loc 1 663 19 is_stmt 0 view .LVU2114
 6163 26a5 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _616, offset: 8B]
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6164              		.loc 1 664 9 is_stmt 1 view .LVU2115
 6165              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6166              		.loc 1 664 42 is_stmt 0 view .LVU2116
 6167 26a9 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1058, MEM[base: _616, offset: 0B], _12
 6167      12
 6168              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6169              		.loc 1 664 63 view .LVU2117
 6170 26ae C44291F7 		shlx	r8, r9, r13	# tmp1059, source1, _18
 6170      C1
 6171              	# sieve_extend.c:664:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 664:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6172              		.loc 1 664 52 view .LVU2118
 6173 26b3 4D09C2   		or	r10, r8	# tmp1060, tmp1059
 6174 26b6 4C8914FB 		mov	QWORD PTR [rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset: 
 6175              	.LVL276:
 665:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6176              		.loc 1 665 9 is_stmt 1 view .LVU2119
 666:sieve_extend.c ****         copy_word += 2;
 6177              		.loc 1 666 9 view .LVU2120
 6178              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6179              		.loc 1 666 42 is_stmt 0 view .LVU2121
 6180 26ba C4C29BF7 		shrx	rsi, r9, r12	# tmp1063, source1, _12
 6180      F1
 6181              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
 6182              		.loc 1 666 63 view .LVU2122
 6183 26bf 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _616, offset: 16B], MEM[base: _616, offset: 16B]
 6184 26c3 C46291F7 		shlx	r10, rdx, r13	# tmp1062, MEM[base: _616, offset: 16B], _18
 6184      D2
 6185              	# sieve_extend.c:666:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 666:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccW0oq2B.s 			page 178


 6186              		.loc 1 666 52 view .LVU2123
 6187 26c8 4909F2   		or	r10, rsi	# tmp1064, tmp1063
 6188 26cb 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_349, step: 8, offset:
 6188      08
 6189              	.LVL277:
 667:sieve_extend.c ****         source_word += 2;
 6190              		.loc 1 667 9 is_stmt 1 view .LVU2124
 6191 26d0 488D5120 		lea	rdx, 32[rcx]	# ivtmp.350,
 6192              	# sieve_extend.c:667:         copy_word += 2;
 667:sieve_extend.c ****         source_word += 2;
 6193              		.loc 1 667 19 is_stmt 0 view .LVU2125
 6194 26d4 488D7804 		lea	rdi, 4[rax]	# copy_word,
 668:sieve_extend.c ****         distance += 2;
 6195              		.loc 1 668 9 is_stmt 1 view .LVU2126
 669:sieve_extend.c ****     }
 6196              		.loc 1 669 9 view .LVU2127
 669:sieve_extend.c ****     }
 6197              		.loc 1 669 9 is_stmt 0 view .LVU2128
 6198              	.LBE317:
 661:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6199              		.loc 1 661 11 is_stmt 1 view .LVU2129
 6200 26d8 E988FEFF 		jmp	.L555	#
 6200      FF
 6201              	.LBE322:
 6202              	.LBE343:
 6203              		.cfi_endproc
 6204              	.LFE73:
 6206              		.section	.rodata.str1.1,"aMS",@progbits,1
 6207              	.LC0:
 6208 0000 25336A75 		.string	"%3ju "
 6208      2000
 6209              	.LC1:
 6210 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 6210      6E642025 
 6210      6A752070 
 6210      72696D65 
 6210      7320756E 
 6211              		.text
 6212 26dd 0F1F00   		.p2align 4
 6214              	show_primes.isra.0:
 6215              	.LVL278:
 6216              	.LFB87:
1000:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6217              		.loc 1 1000 13 view -0
 6218              		.cfi_startproc
 6219              	.LBB344:
1002:sieve_extend.c ****         primeCount++;
 6220              		.loc 1 1002 30 view .LVU2131
 6221              	.LBE344:
 6222              	# sieve_extend.c:1000: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1000:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 6223              		.loc 1 1000 13 is_stmt 0 view .LVU2132
 6224 26e0 4157     		push	r15	#
 6225              		.cfi_def_cfa_offset 16
 6226              		.cfi_offset 15, -16
 6227 26e2 4156     		push	r14	#
 6228              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/ccW0oq2B.s 			page 179


 6229              		.cfi_offset 14, -24
 6230 26e4 4155     		push	r13	#
 6231              		.cfi_def_cfa_offset 32
 6232              		.cfi_offset 13, -32
 6233 26e6 4154     		push	r12	#
 6234              		.cfi_def_cfa_offset 40
 6235              		.cfi_offset 12, -40
 6236 26e8 55       		push	rbp	#
 6237              		.cfi_def_cfa_offset 48
 6238              		.cfi_offset 6, -48
 6239 26e9 4889F5   		mov	rbp, rsi	# ISRA.76, tmp168
 6240 26ec 53       		push	rbx	#
 6241              		.cfi_def_cfa_offset 56
 6242              		.cfi_offset 3, -56
 6243 26ed 4883EC08 		sub	rsp, 8	#,
 6244              		.cfi_def_cfa_offset 64
 6245              	.LBB361:
 6246              	# sieve_extend.c:1002:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1002:sieve_extend.c ****         primeCount++;
 6247              		.loc 1 1002 44 view .LVU2133
 6248 26f1 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.76_32(D)
 6249              	# sieve_extend.c:1002:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1002:sieve_extend.c ****         primeCount++;
 6250              		.loc 1 1002 5 view .LVU2134
 6251 26f4 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 6252 26f8 0F867601 		jbe	.L636	#,
 6252      0000
 6253              	# sieve_extend.c:1004:         if (factor < maxFactor/2) {
1004:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6254              		.loc 1 1004 31 view .LVU2135
 6255 26fe 48D1EA   		shr	rdx	# maxFactor
 6256              	.LVL279:
1004:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6257              		.loc 1 1004 31 view .LVU2136
 6258 2701 4989FC   		mov	r12, rdi	# ISRA.75, tmp167
 6259 2704 4989D7   		mov	r15, rdx	# _4, maxFactor
 6260              	# sieve_extend.c:1002:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1002:sieve_extend.c ****         primeCount++;
 6261              		.loc 1 1002 20 view .LVU2137
 6262 2707 BB010000 		mov	ebx, 1	# factor,
 6262      00
 6263              	.LBE361:
 6264              	# sieve_extend.c:1001:     counter_t primeCount = 1;    // We already have 2
1001:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 6265              		.loc 1 1001 15 view .LVU2138
 6266 270c 41BE0100 		mov	r14d, 1	# primeCount,
 6266      0000
 6267              	.LBB362:
 6268              	.LBB345:
 6269              	.LBB346:
 6270              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6271              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
GAS LISTING /tmp/ccW0oq2B.s 			page 180


   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
GAS LISTING /tmp/ccW0oq2B.s 			page 181


  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 6272              		.loc 3 107 10 view .LVU2139
 6273 2712 49BDCDCC 		movabs	r13, -3689348814741910323	# tmp136,
 6273      CCCCCCCC 
 6273      CCCC
 6274              	.LVL280:
 6275 271c 0F1F4000 		.p2align 4,,10
 6276              		.p2align 3
 6277              	.L635:
 6278              		.loc 3 107 10 view .LVU2140
 6279              	.LBE346:
 6280              	.LBE345:
1003:sieve_extend.c ****         if (factor < maxFactor/2) {
GAS LISTING /tmp/ccW0oq2B.s 			page 182


 6281              		.loc 1 1003 9 is_stmt 1 view .LVU2141
 6282              	# sieve_extend.c:1003:         primeCount++;
1003:sieve_extend.c ****         if (factor < maxFactor/2) {
 6283              		.loc 1 1003 19 is_stmt 0 view .LVU2142
 6284 2720 49FFC6   		inc	r14	# primeCount
 6285              	.LVL281:
1004:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6286              		.loc 1 1004 9 is_stmt 1 view .LVU2143
 6287              	# sieve_extend.c:1004:         if (factor < maxFactor/2) {
1004:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 6288              		.loc 1 1004 12 is_stmt 0 view .LVU2144
 6289 2723 4939DF   		cmp	r15, rbx	# _4, factor
 6290 2726 0F87FC00 		ja	.L659	#,
 6290      0000
 6291              	.L631:
1002:sieve_extend.c ****         primeCount++;
 6292              		.loc 1 1002 52 is_stmt 1 view .LVU2145
 6293              	.LVL282:
 6294              	# sieve_extend.c:1002:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1002:sieve_extend.c ****         primeCount++;
 6295              		.loc 1 1002 61 is_stmt 0 view .LVU2146
 6296 272c 4D8B0424 		mov	r8, QWORD PTR [r12]	# _11, *ISRA.75_33(D)
 6297 2730 48FFC3   		inc	rbx	# factor
 6298              	.LVL283:
 6299              	.L658:
 6300              	.LBB351:
 6301              	.LBI351:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 6302              		.loc 1 123 25 is_stmt 1 view .LVU2147
 6303              	.LBB352:
 124:sieve_extend.c ****     return index;
 6304              		.loc 1 124 5 view .LVU2148
 124:sieve_extend.c ****     return index;
 6305              		.loc 1 124 11 view .LVU2149
 6306              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6307              		.loc 1 124 21 is_stmt 0 view .LVU2150
 6308 2733 4889D9   		mov	rcx, rbx	# tmp124, factor
 6309 2736 48C1E906 		shr	rcx, 6	# tmp124,
 6310              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6311              		.loc 1 124 12 view .LVU2151
 6312 273a 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 6313              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6314              		.loc 1 124 11 view .LVU2152
 6315 273e 490FA3D9 		bt	r9, rbx	# *_39, factor
 6316 2742 0F83A800 		jnc	.L633	#,
 6316      0000
 124:sieve_extend.c ****     return index;
 6317              		.loc 1 124 58 is_stmt 1 view .LVU2153
 6318              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6319              		.loc 1 124 63 is_stmt 0 view .LVU2154
 6320 2748 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 6321              	.LVL284:
 6322              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 183


 124:sieve_extend.c ****     return index;
 6323              		.loc 1 124 21 view .LVU2155
 6324 274c 4D89D3   		mov	r11, r10	# tmp129, factor
 6325 274f 49C1EB06 		shr	r11, 6	# tmp129,
 6326              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6327              		.loc 1 124 12 view .LVU2156
 6328 2753 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6329              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6330              		.loc 1 124 63 view .LVU2157
 6331 2757 4C89D3   		mov	rbx, r10	# factor, tmp138
 124:sieve_extend.c ****     return index;
 6332              		.loc 1 124 11 is_stmt 1 view .LVU2158
 6333 275a 4C0FA3D0 		bt	rax, r10	# *_16, factor
 6334 275e 0F838C00 		jnc	.L633	#,
 6334      0000
 124:sieve_extend.c ****     return index;
 6335              		.loc 1 124 58 view .LVU2159
 6336              	.LVL285:
 6337              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6338              		.loc 1 124 63 is_stmt 0 view .LVU2160
 6339 2764 48FFC3   		inc	rbx	# factor
 6340              	.LVL286:
 124:sieve_extend.c ****     return index;
 6341              		.loc 1 124 11 is_stmt 1 view .LVU2161
 6342              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6343              		.loc 1 124 21 is_stmt 0 view .LVU2162
 6344 2767 4889DA   		mov	rdx, rbx	# tmp139, factor
 6345 276a 48C1EA06 		shr	rdx, 6	# tmp139,
 6346              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6347              		.loc 1 124 12 view .LVU2163
 6348 276e 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6349              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6350              		.loc 1 124 11 view .LVU2164
 6351 2772 480FA3DF 		bt	rdi, rbx	# *_16, factor
 6352 2776 7378     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6353              		.loc 1 124 58 is_stmt 1 view .LVU2165
 6354              	.LVL287:
 6355              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6356              		.loc 1 124 63 is_stmt 0 view .LVU2166
 6357 2778 498D5A02 		lea	rbx, 2[r10]	# factor,
 6358              	.LVL288:
 124:sieve_extend.c ****     return index;
 6359              		.loc 1 124 11 is_stmt 1 view .LVU2167
 6360              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6361              		.loc 1 124 21 is_stmt 0 view .LVU2168
 6362 277c 4889D9   		mov	rcx, rbx	# tmp143, factor
 6363 277f 48C1E906 		shr	rcx, 6	# tmp143,
 6364              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 184


 124:sieve_extend.c ****     return index;
 6365              		.loc 1 124 12 view .LVU2169
 6366 2783 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6367              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6368              		.loc 1 124 11 view .LVU2170
 6369 2787 490FA3D9 		bt	r9, rbx	# *_16, factor
 6370 278b 7363     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6371              		.loc 1 124 58 is_stmt 1 view .LVU2171
 6372              	.LVL289:
 6373              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6374              		.loc 1 124 63 is_stmt 0 view .LVU2172
 6375 278d 498D5A03 		lea	rbx, 3[r10]	# factor,
 6376              	.LVL290:
 124:sieve_extend.c ****     return index;
 6377              		.loc 1 124 11 is_stmt 1 view .LVU2173
 6378              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6379              		.loc 1 124 21 is_stmt 0 view .LVU2174
 6380 2791 4989DB   		mov	r11, rbx	# tmp147, factor
 6381 2794 49C1EB06 		shr	r11, 6	# tmp147,
 6382              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6383              		.loc 1 124 12 view .LVU2175
 6384 2798 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6385              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6386              		.loc 1 124 11 view .LVU2176
 6387 279c 480FA3D8 		bt	rax, rbx	# *_16, factor
 6388 27a0 734E     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6389              		.loc 1 124 58 is_stmt 1 view .LVU2177
 6390              	.LVL291:
 6391              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6392              		.loc 1 124 63 is_stmt 0 view .LVU2178
 6393 27a2 498D5A04 		lea	rbx, 4[r10]	# factor,
 6394              	.LVL292:
 124:sieve_extend.c ****     return index;
 6395              		.loc 1 124 11 is_stmt 1 view .LVU2179
 6396              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6397              		.loc 1 124 21 is_stmt 0 view .LVU2180
 6398 27a6 4889DA   		mov	rdx, rbx	# tmp151, factor
 6399 27a9 48C1EA06 		shr	rdx, 6	# tmp151,
 6400              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6401              		.loc 1 124 12 view .LVU2181
 6402 27ad 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 6403              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6404              		.loc 1 124 11 view .LVU2182
 6405 27b1 480FA3DF 		bt	rdi, rbx	# *_16, factor
 6406 27b5 7339     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW0oq2B.s 			page 185


 6407              		.loc 1 124 58 is_stmt 1 view .LVU2183
 6408              	.LVL293:
 6409              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6410              		.loc 1 124 63 is_stmt 0 view .LVU2184
 6411 27b7 498D5A05 		lea	rbx, 5[r10]	# factor,
 6412              	.LVL294:
 124:sieve_extend.c ****     return index;
 6413              		.loc 1 124 11 is_stmt 1 view .LVU2185
 6414              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6415              		.loc 1 124 21 is_stmt 0 view .LVU2186
 6416 27bb 4889D9   		mov	rcx, rbx	# tmp155, factor
 6417 27be 48C1E906 		shr	rcx, 6	# tmp155,
 6418              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6419              		.loc 1 124 12 view .LVU2187
 6420 27c2 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 6421              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6422              		.loc 1 124 11 view .LVU2188
 6423 27c6 490FA3D9 		bt	r9, rbx	# *_16, factor
 6424 27ca 7324     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6425              		.loc 1 124 58 is_stmt 1 view .LVU2189
 6426              	.LVL295:
 6427              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6428              		.loc 1 124 63 is_stmt 0 view .LVU2190
 6429 27cc 498D5A06 		lea	rbx, 6[r10]	# factor,
 6430              	.LVL296:
 124:sieve_extend.c ****     return index;
 6431              		.loc 1 124 11 is_stmt 1 view .LVU2191
 6432              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6433              		.loc 1 124 21 is_stmt 0 view .LVU2192
 6434 27d0 4989DB   		mov	r11, rbx	# tmp159, factor
 6435 27d3 49C1EB06 		shr	r11, 6	# tmp159,
 6436              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6437              		.loc 1 124 12 view .LVU2193
 6438 27d7 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 6439              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6440              		.loc 1 124 11 view .LVU2194
 6441 27db 480FA3D8 		bt	rax, rbx	# *_16, factor
 6442 27df 730F     		jnc	.L633	#,
 124:sieve_extend.c ****     return index;
 6443              		.loc 1 124 58 is_stmt 1 view .LVU2195
 6444              	.LVL297:
 6445              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 6446              		.loc 1 124 63 is_stmt 0 view .LVU2196
 6447 27e1 498D5A07 		lea	rbx, 7[r10]	# factor,
 6448              	.LVL298:
 124:sieve_extend.c ****     return index;
 6449              		.loc 1 124 11 is_stmt 1 view .LVU2197
GAS LISTING /tmp/ccW0oq2B.s 			page 186


 6450 27e5 E949FFFF 		jmp	.L658	#
 6450      FF
 6451 27ea 660F1F44 		.p2align 4,,10
 6451      0000
 6452              		.p2align 3
 6453              	.L633:
 6454              	.LVL299:
 124:sieve_extend.c ****     return index;
 6455              		.loc 1 124 11 is_stmt 0 view .LVU2198
 6456              	.LBE352:
 6457              	.LBE351:
1002:sieve_extend.c ****         primeCount++;
 6458              		.loc 1 1002 30 is_stmt 1 view .LVU2199
 6459              	# sieve_extend.c:1002:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1002:sieve_extend.c ****         primeCount++;
 6460              		.loc 1 1002 5 is_stmt 0 view .LVU2200
 6461 27f0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 6462 27f3 0F8227FF 		jb	.L635	#,
 6462      FFFF
 6463              	.LVL300:
 6464              	.L630:
1002:sieve_extend.c ****         primeCount++;
 6465              		.loc 1 1002 5 view .LVU2201
 6466              	.LBE362:
1009:sieve_extend.c **** }
 6467              		.loc 1 1009 5 is_stmt 1 view .LVU2202
 6468              	.LBB363:
 6469              	.LBI363:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6470              		.loc 3 105 1 view .LVU2203
 6471              	.LBB364:
 6472              		.loc 3 107 3 view .LVU2204
 6473              	.LBE364:
 6474              	.LBE363:
 6475              	# sieve_extend.c:1010: }
1010:sieve_extend.c **** 
 6476              		.loc 1 1010 1 is_stmt 0 view .LVU2205
 6477 27f9 4883C408 		add	rsp, 8	#,
 6478              		.cfi_remember_state
 6479              		.cfi_def_cfa_offset 56
 6480 27fd 5B       		pop	rbx	#
 6481              		.cfi_def_cfa_offset 48
 6482 27fe 5D       		pop	rbp	#
 6483              		.cfi_def_cfa_offset 40
 6484 27ff 415C     		pop	r12	#
 6485              		.cfi_def_cfa_offset 32
 6486 2801 415D     		pop	r13	#
 6487              		.cfi_def_cfa_offset 24
 6488              	.LBB368:
 6489              	.LBB365:
 6490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6491              		.loc 3 107 10 view .LVU2206
 6492 2803 4C89F2   		mov	rdx, r14	#, primeCount
 6493              	.LBE365:
 6494              	.LBE368:
 6495              	# sieve_extend.c:1010: }
1010:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 187


 6496              		.loc 1 1010 1 view .LVU2207
 6497 2806 415E     		pop	r14	#
 6498              		.cfi_def_cfa_offset 16
 6499              	# sieve_extend.c:1009:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1009:sieve_extend.c **** }
 6500              		.loc 1 1009 5 view .LVU2208
 6501 2808 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 6501      01
 6502              	.LBB369:
 6503              	.LBB366:
 6504              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6505              		.loc 3 107 10 view .LVU2209
 6506 280d BF010000 		mov	edi, 1	#,
 6506      00
 6507 2812 488D3500 		lea	rsi, .LC1[rip]	#,
 6507      000000
 6508 2819 31C0     		xor	eax, eax	#
 6509              	.LBE366:
 6510              	.LBE369:
 6511              	# sieve_extend.c:1010: }
1010:sieve_extend.c **** 
 6512              		.loc 1 1010 1 view .LVU2210
 6513 281b 415F     		pop	r15	#
 6514              		.cfi_def_cfa_offset 8
 6515              	.LBB370:
 6516              	.LBB367:
 6517              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6518              		.loc 3 107 10 view .LVU2211
 6519 281d E9000000 		jmp	__printf_chk@PLT	#
 6519      00
 6520              	.LVL301:
 6521              		.p2align 4,,10
 6522 2822 660F1F44 		.p2align 3
 6522      0000
 6523              	.L659:
 6524              		.cfi_restore_state
 6525              		.loc 3 107 10 view .LVU2212
 6526              	.LBE367:
 6527              	.LBE370:
 6528              	.LBB371:
1005:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6529              		.loc 1 1005 13 is_stmt 1 view .LVU2213
 6530              	.LBB353:
 6531              	.LBI345:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6532              		.loc 3 105 1 view .LVU2214
 6533              	.LBB347:
 6534              		.loc 3 107 3 view .LVU2215
 6535              	.LBE347:
 6536              	.LBE353:
 6537              	# sieve_extend.c:1005:             printf("%3ju ",(uintmax_t)factor*2+1);
1005:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 6538              		.loc 1 1005 13 is_stmt 0 view .LVU2216
 6539 2828 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 6539      01
 6540              	.LBB354:
 6541              	.LBB348:
GAS LISTING /tmp/ccW0oq2B.s 			page 188


 6542              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6543              		.loc 3 107 10 view .LVU2217
 6544 282d BF010000 		mov	edi, 1	#,
 6544      00
 6545 2832 488D3500 		lea	rsi, .LC0[rip]	#,
 6545      000000
 6546 2839 31C0     		xor	eax, eax	#
 6547 283b E8000000 		call	__printf_chk@PLT	#
 6547      00
 6548              	.LVL302:
 6549              		.loc 3 107 10 view .LVU2218
 6550              	.LBE348:
 6551              	.LBE354:
1006:sieve_extend.c ****         }
 6552              		.loc 1 1006 13 is_stmt 1 view .LVU2219
 6553              	.LBB355:
 6554              	.LBB349:
 6555              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6556              		.loc 3 107 10 is_stmt 0 view .LVU2220
 6557 2840 4C89F0   		mov	rax, r14	# tmp120, primeCount
 6558 2843 490FAFC5 		imul	rax, r13	# tmp120, tmp136
 6559              	.LBE349:
 6560              	.LBE355:
 6561              	# sieve_extend.c:1006:             if (primeCount % 10 == 0) printf("\n");
1006:sieve_extend.c ****         }
 6562              		.loc 1 1006 16 view .LVU2221
 6563 2847 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 6563      99999999 
 6563      9919
 6564              	.LBB356:
 6565              	.LBB350:
 6566              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6567              		.loc 3 107 10 view .LVU2222
 6568 2851 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 6568      D001
 6569              	.LBE350:
 6570              	.LBE356:
 6571              	# sieve_extend.c:1006:             if (primeCount % 10 == 0) printf("\n");
1006:sieve_extend.c ****         }
 6572              		.loc 1 1006 16 view .LVU2223
 6573 2857 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 6574 285a 760C     		jbe	.L632	#,
 6575              	.L657:
 6576 285c 488B7500 		mov	rsi, QWORD PTR 0[rbp]	# prephitmp_86, *ISRA.76_32(D)
 6577              	.LBB357:
 6578              	.LBB358:
 6579              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6580              		.loc 3 107 10 view .LVU2224
 6581 2860 E9C7FEFF 		jmp	.L631	#
 6581      FF
 6582              		.p2align 4,,10
 6583 2865 0F1F00   		.p2align 3
 6584              	.L632:
 6585              	.LBE358:
 6586              	.LBE357:
1006:sieve_extend.c ****         }
 6587              		.loc 1 1006 39 is_stmt 1 view .LVU2225
GAS LISTING /tmp/ccW0oq2B.s 			page 189


 6588              	.LVL303:
 6589              	.LBB360:
 6590              	.LBI357:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 6591              		.loc 3 105 1 view .LVU2226
 6592              	.LBB359:
 6593              		.loc 3 107 3 view .LVU2227
 6594              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 6595              		.loc 3 107 10 is_stmt 0 view .LVU2228
 6596 2868 BF0A0000 		mov	edi, 10	#,
 6596      00
 6597 286d E8000000 		call	putchar@PLT	#
 6597      00
 6598              	.LVL304:
 6599 2872 EBE8     		jmp	.L657	#
 6600              	.LVL305:
 6601              	.L636:
 6602              		.loc 3 107 10 view .LVU2229
 6603              	.LBE359:
 6604              	.LBE360:
 6605              	.LBE371:
 6606              	# sieve_extend.c:1001:     counter_t primeCount = 1;    // We already have 2
1001:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 6607              		.loc 1 1001 15 view .LVU2230
 6608 2874 41BE0100 		mov	r14d, 1	# primeCount,
 6608      0000
 6609 287a E97AFFFF 		jmp	.L630	#
 6609      FF
 6610              		.cfi_endproc
 6611              	.LFE87:
 6613 287f 90       		.p2align 4
 6615              	sieve:
 6616              	.LVL306:
 6617              	.LFB77:
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6618              		.loc 1 978 86 is_stmt 1 view -0
 6619              		.cfi_startproc
 979:sieve_extend.c ****     counter_t prime         = 0;
 6620              		.loc 1 979 5 view .LVU2232
 6621              	# sieve_extend.c:978: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6622              		.loc 1 978 86 is_stmt 0 view .LVU2233
 6623 2880 55       		push	rbp	#
 6624              		.cfi_def_cfa_offset 16
 6625              		.cfi_offset 6, -16
 6626 2881 4889E5   		mov	rbp, rsp	#,
 6627              		.cfi_def_cfa_register 6
 6628 2884 4157     		push	r15	#
 6629 2886 4156     		push	r14	#
 6630 2888 4155     		push	r13	#
 6631 288a 4154     		push	r12	#
 6632 288c 53       		push	rbx	#
 6633              		.cfi_offset 15, -24
 6634              		.cfi_offset 14, -32
 6635              		.cfi_offset 13, -40
 6636              		.cfi_offset 12, -48
 6637              		.cfi_offset 3, -56
GAS LISTING /tmp/ccW0oq2B.s 			page 190


 6638 288d 4889FB   		mov	rbx, rdi	# maxints, tmp1684
 6639              	.LVL307:
 6640              	.LBB455:
 6641              	.LBI455:
  83:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 6642              		.loc 1 83 28 is_stmt 1 view .LVU2234
 6643              	.LBB456:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6644              		.loc 1 84 5 view .LVU2235
 6645              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6646              		.loc 1 85 22 is_stmt 0 view .LVU2236
 6647 2890 4989DF   		mov	r15, rbx	# prephitmp_1898, maxints
 6648              	.LBE456:
 6649              	.LBE455:
 6650              	# sieve_extend.c:978: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6651              		.loc 1 978 86 view .LVU2237
 6652 2893 4883E4C0 		and	rsp, -64	#,
 6653 2897 4881ECC0 		sub	rsp, 192	#,
 6653      000000
 6654              	.LBB459:
 6655              	.LBB457:
 6656              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6657              		.loc 1 85 22 view .LVU2238
 6658 289e 49D1EF   		shr	r15	# prephitmp_1898
 6659              	.LBE457:
 6660              	.LBE459:
 6661              	# sieve_extend.c:978: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 6662              		.loc 1 978 86 view .LVU2239
 6663 28a1 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, tmp1685
 6663      30
 6664              	.LBB460:
 6665              	.LBB458:
 6666              	# sieve_extend.c:84:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6667              		.loc 1 84 33 view .LVU2240
 6668 28a6 BF080000 		mov	edi, 8	#,
 6668      00
 6669              	.LVL308:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6670              		.loc 1 84 33 view .LVU2241
 6671 28ab BE180000 		mov	esi, 24	#,
 6671      00
 6672              	.LVL309:
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6673              		.loc 1 84 33 view .LVU2242
 6674 28b0 E8000000 		call	aligned_alloc@PLT	#
 6674      00
 6675              	.LVL310:
 6676              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6677              		.loc 1 85 22 view .LVU2243
 6678 28b5 498DB700 		lea	rsi, 1024[r15]	# tmp682,
 6678      040000
GAS LISTING /tmp/ccW0oq2B.s 			page 191


 6679 28bc 48C1EE0A 		shr	rsi, 10	# tmp683,
 6680              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6681              		.loc 1 85 12 view .LVU2244
 6682 28c0 48C1E607 		sal	rsi, 7	# memSize,
 6683              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6684              		.loc 1 87 23 view .LVU2245
 6685 28c4 BF800000 		mov	edi, 128	#,
 6685      00
 6686              	# sieve_extend.c:84:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  84:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytesize*8) * anticiped_ca
 6687              		.loc 1 84 33 view .LVU2246
 6688 28c9 4989C6   		mov	r14, rax	# <retval>, tmp1686
 6689 28cc 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, <retval>
 6689      50
 6690              	.LVL311:
  85:sieve_extend.c **** 
 6691              		.loc 1 85 5 is_stmt 1 view .LVU2247
 6692              	# sieve_extend.c:85:     size_t memSize = ceiling(1+((size_t)maxints/2), anticiped_cache_line_bytes
  85:sieve_extend.c **** 
 6693              		.loc 1 85 22 is_stmt 0 view .LVU2248
 6694 28d1 4C897C24 		mov	QWORD PTR 104[rsp], r15	# %sfp, prephitmp_1898
 6694      68
 6695              	.LVL312:
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6696              		.loc 1 87 5 is_stmt 1 view .LVU2249
 6697              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6698              		.loc 1 87 23 is_stmt 0 view .LVU2250
 6699 28d6 E8000000 		call	aligned_alloc@PLT	#
 6699      00
 6700              	.LVL313:
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6701              		.loc 1 87 23 view .LVU2251
 6702 28db 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, _94
 6702      28
 6703              	# sieve_extend.c:87:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  87:sieve_extend.c ****     sieve->bits     = maxints >> 1;
 6704              		.loc 1 87 21 view .LVU2252
 6705 28e0 498906   		mov	QWORD PTR [r14], rax	# sieve_89->bitarray, _94
  88:sieve_extend.c ****     sieve->size     = maxints;
 6706              		.loc 1 88 5 is_stmt 1 view .LVU2253
 6707              	# sieve_extend.c:88:     sieve->bits     = maxints >> 1;
  88:sieve_extend.c ****     sieve->size     = maxints;
 6708              		.loc 1 88 21 is_stmt 0 view .LVU2254
 6709 28e3 4D897E08 		mov	QWORD PTR 8[r14], r15	# sieve_89->bits, prephitmp_1898
  89:sieve_extend.c **** 
 6710              		.loc 1 89 5 is_stmt 1 view .LVU2255
 6711              	# sieve_extend.c:89:     sieve->size     = maxints;
  89:sieve_extend.c **** 
 6712              		.loc 1 89 21 is_stmt 0 view .LVU2256
 6713 28e7 49895E10 		mov	QWORD PTR 16[r14], rbx	# sieve_89->size, maxints
  93:sieve_extend.c **** }
 6714              		.loc 1 93 5 is_stmt 1 view .LVU2257
 6715              	.LVL314:
  93:sieve_extend.c **** }
GAS LISTING /tmp/ccW0oq2B.s 			page 192


 6716              		.loc 1 93 5 is_stmt 0 view .LVU2258
 6717              	.LBE458:
 6718              	.LBE460:
 980:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6719              		.loc 1 980 5 is_stmt 1 view .LVU2259
 981:sieve_extend.c **** 
 6720              		.loc 1 981 5 view .LVU2260
 983:sieve_extend.c **** 
 6721              		.loc 1 983 5 view .LVU2261
 986:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 6722              		.loc 1 986 5 view .LVU2262
 6723              	.LBB461:
 6724              	.LBI461:
 939:sieve_extend.c ****     register counter_t prime   = 0;
 6725              		.loc 1 939 21 view .LVU2263
 6726              	.LBB462:
 940:sieve_extend.c ****     counter_t patternsize_bits = 1;
 6727              		.loc 1 940 5 view .LVU2264
 941:sieve_extend.c ****     counter_t pattern_start    = 0;
 6728              		.loc 1 941 5 view .LVU2265
 942:sieve_extend.c ****     counter_t range_stop       = block_start;
 6729              		.loc 1 942 5 view .LVU2266
 943:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 6730              		.loc 1 943 5 view .LVU2267
 944:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 6731              		.loc 1 944 5 view .LVU2268
 945:sieve_extend.c **** 
 6732              		.loc 1 945 5 view .LVU2269
 947:sieve_extend.c ****     
 6733              		.loc 1 947 5 view .LVU2270
 6734              	# sieve_extend.c:947:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 947:sieve_extend.c ****     
 6735              		.loc 1 947 24 is_stmt 0 view .LVU2271
 6736 28eb 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_94],
 6736      000000
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6737              		.loc 1 949 5 is_stmt 1 view .LVU2272
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6738              		.loc 1 949 11 view .LVU2273
 6739              	# sieve_extend.c:945:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 945:sieve_extend.c **** 
 6740              		.loc 1 945 18 is_stmt 0 view .LVU2274
 6741 28f2 31F6     		xor	esi, esi	# block$pattern_start
 6742              	# sieve_extend.c:949:     for (;range_stop < block_stop;) {
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 6743              		.loc 1 949 5 view .LVU2275
 6744 28f4 4D85FF   		test	r15, r15	# prephitmp_1898
 6745 28f7 0F84F526 		je	.L1571	#,
 6745      0000
 6746              	.LBB463:
 6747              	# sieve_extend.c:950:         prime = searchBitFalse(bitarray, prime+1);
 950:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 6748              		.loc 1 950 17 view .LVU2276
 6749 28fd 48C74424 		mov	QWORD PTR 96[rsp], 1	# %sfp,
 6749      60010000 
 6749      00
 6750              	.LBE463:
GAS LISTING /tmp/ccW0oq2B.s 			page 193


 6751              	# sieve_extend.c:941:     counter_t patternsize_bits = 1;
 941:sieve_extend.c ****     counter_t pattern_start    = 0;
 6752              		.loc 1 941 15 view .LVU2277
 6753 2906 B8010000 		mov	eax, 1	# patternsize_bits,
 6753      00
 6754              	.LVL315:
 6755              	# sieve_extend.c:942:     counter_t pattern_start    = 0;
 942:sieve_extend.c ****     counter_t range_stop       = block_start;
 6756              		.loc 1 942 15 view .LVU2278
 6757 290b 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 6757      58000000 
 6757      00
 6758              	.LBB527:
 6759              	.LBB464:
 6760              	.LBB465:
 6761              	.LBB466:
 6762              	.LBB467:
 6763              	# sieve_extend.c:398:         register bitword_t mask = markmask(index);
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6764              		.loc 1 398 28 view .LVU2279
 6765 2914 48894424 		mov	QWORD PTR 120[rsp], rax	# %sfp, patternsize_bits
 6765      78
 6766 2919 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# _94, %sfp
 6766      28
 6767              	.LVL316:
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6768              		.loc 1 398 28 view .LVU2280
 6769 291e 488B7C24 		mov	rdi, QWORD PTR 96[rsp]	# index, %sfp
 6769      60
 6770              	.LBE467:
 6771              	.LBE466:
 6772              	.LBE465:
 6773              	.LBE464:
 6774              	.LBE527:
 6775              	# sieve_extend.c:940:     register counter_t prime   = 0;
 940:sieve_extend.c ****     counter_t patternsize_bits = 1;
 6776              		.loc 1 940 24 view .LVU2281
 6777 2923 31C9     		xor	ecx, ecx	# prime
 6778              	# sieve_extend.c:945:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 945:sieve_extend.c **** 
 6779              		.loc 1 945 18 view .LVU2282
 6780 2925 31D2     		xor	edx, edx	# block$pattern_size
 6781              	.LBB528:
 6782              	.LBB483:
 6783              	.LBB481:
 6784              	.LBB479:
 6785              	.LBB476:
 6786              	# sieve_extend.c:398:         register bitword_t mask = markmask(index);
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 6787              		.loc 1 398 28 view .LVU2283
 6788 2927 41BF0100 		mov	r15d, 1	# tmp1047,
 6788      0000
 6789              	.LVL317:
 6790 292d 0F1F00   		.p2align 4,,10
 6791              		.p2align 3
 6792              	.L661:
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
GAS LISTING /tmp/ccW0oq2B.s 			page 194


 6793              		.loc 1 398 28 view .LVU2284
 6794              	.LBE476:
 6795              	.LBE479:
 6796              	.LBE481:
 6797              	.LBE483:
 6798              	.LBB484:
 6799              	.LBB485:
 125:sieve_extend.c **** }
 6800              		.loc 1 125 5 is_stmt 1 view .LVU2285
 125:sieve_extend.c **** }
 6801              		.loc 1 125 5 is_stmt 0 view .LVU2286
 6802              	.LBE485:
 6803              	.LBE484:
 951:sieve_extend.c ****         if (start > block_stop) break;
 6804              		.loc 1 951 9 is_stmt 1 view .LVU2287
 6805 2930 4C8D243F 		lea	r12, [rdi+rdi]	# _19,
 6806              	# sieve_extend.c:951:         counter_t start = prime * prime * 2 + prime * 2;
 951:sieve_extend.c ****         if (start > block_stop) break;
 6807              		.loc 1 951 45 is_stmt 0 view .LVU2288
 6808 2934 4C8D6F01 		lea	r13, 1[rdi]	# index,
 6809              	# sieve_extend.c:951:         counter_t start = prime * prime * 2 + prime * 2;
 951:sieve_extend.c ****         if (start > block_stop) break;
 6810              		.loc 1 951 19 view .LVU2289
 6811 2938 4C89E3   		mov	rbx, r12	# index, _19
 6812 293b 490FAFDD 		imul	rbx, r13	# index, index
 6813              	.LVL318:
 952:sieve_extend.c **** 
 6814              		.loc 1 952 9 is_stmt 1 view .LVU2290
 6815              	# sieve_extend.c:952:         if (start > block_stop) break;
 952:sieve_extend.c **** 
 6816              		.loc 1 952 12 is_stmt 0 view .LVU2291
 6817 293f 483B5C24 		cmp	rbx, QWORD PTR 104[rsp]	# index, %sfp
 6817      68
 6818 2944 0F87AA0E 		ja	.L1572	#,
 6818      0000
 954:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 6819              		.loc 1 954 9 is_stmt 1 view .LVU2292
 6820              	# sieve_extend.c:954:         const counter_t step  = prime * 2 + 1;
 954:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 6821              		.loc 1 954 25 is_stmt 0 view .LVU2293
 6822 294a 49FFC4   		inc	r12	# step
 6823              	.LVL319:
 955:sieve_extend.c **** 
 6824              		.loc 1 955 9 is_stmt 1 view .LVU2294
 6825              	# sieve_extend.c:955:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 955:sieve_extend.c **** 
 6826              		.loc 1 955 12 is_stmt 0 view .LVU2295
 6827 294d 4D85ED   		test	r13, r13	# index
 6828 2950 7516     		jne	.L667	#,
 955:sieve_extend.c **** 
 6829              		.loc 1 955 41 is_stmt 1 view .LVU2296
 6830              	# sieve_extend.c:955:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 955:sieve_extend.c **** 
 6831              		.loc 1 955 102 is_stmt 0 view .LVU2297
 6832 2952 48C7C0FF 		mov	rax, -1	# tmp699,
 6832      FFFFFF
 6833 2959 31D2     		xor	edx, edx	# tmp698
GAS LISTING /tmp/ccW0oq2B.s 			page 195


 6834 295b 49F7F4   		div	r12	# step
 6835              	# sieve_extend.c:955:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 955:sieve_extend.c **** 
 6836              		.loc 1 955 47 view .LVU2298
 6837 295e 48C7C3FE 		mov	rbx, -2	# index,
 6837      FFFFFF
 6838              	.LVL320:
 955:sieve_extend.c **** 
 6839              		.loc 1 955 47 view .LVU2299
 6840 2965 4829D3   		sub	rbx, rdx	# index, tmp698
 6841              	.LVL321:
 6842              	.L667:
 957:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6843              		.loc 1 957 9 is_stmt 1 view .LVU2300
 6844              	# sieve_extend.c:957:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 957:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6845              		.loc 1 957 53 is_stmt 0 view .LVU2301
 6846 2968 488B7424 		mov	rsi, QWORD PTR 120[rsp]	# _65, %sfp
 6846      78
 6847 296d 490FAFF4 		imul	rsi, r12	# _65, step
 6848 2971 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, _65
 6848      40
 6849              	# sieve_extend.c:957:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 957:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 6850              		.loc 1 957 60 view .LVU2302
 6851 2976 4801F6   		add	rsi, rsi	# _66
 6852 2979 48897424 		mov	QWORD PTR 112[rsp], rsi	# %sfp, _66
 6852      70
 6853              	.LVL322:
 958:sieve_extend.c ****         block.pattern_start = pattern_start;
 6854              		.loc 1 958 9 is_stmt 1 view .LVU2303
 959:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 6855              		.loc 1 959 9 view .LVU2304
 960:sieve_extend.c **** 
 6856              		.loc 1 960 9 view .LVU2305
 6857              	# sieve_extend.c:960:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 960:sieve_extend.c **** 
 6858              		.loc 1 960 12 is_stmt 0 view .LVU2306
 6859 297e 483B7424 		cmp	rsi, QWORD PTR 104[rsp]	# _66, %sfp
 6859      68
 6860 2983 0F872926 		ja	.L1573	#,
 6860      0000
 962:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 6861              		.loc 1 962 9 is_stmt 1 view .LVU2307
 6862 2989 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# pattern_start, %sfp
 6862      58
 6863              	# sieve_extend.c:962:         if (patternsize_bits>1) {
 962:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 6864              		.loc 1 962 12 is_stmt 0 view .LVU2308
 6865 298e 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 6865      78
 6866 2993 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, pattern_start
 6866      48
 6867 2998 4983F901 		cmp	r9, 1	# patternsize_bits,
 6868 299c 0F879E04 		ja	.L1574	#,
 6868      0000
 6869              	.LVL323:
GAS LISTING /tmp/ccW0oq2B.s 			page 196


 6870              	.L670:
 966:sieve_extend.c **** 
 6871              		.loc 1 966 9 is_stmt 1 view .LVU2309
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 6872              		.loc 1 968 9 view .LVU2310
 6873              	# sieve_extend.c:968:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 6874              		.loc 1 968 17 is_stmt 0 view .LVU2311
 6875 29a2 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 6875      000000
 6876 29a9 0F82E904 		jb	.L1575	#,
 6876      0000
 6877              	.LVL324:
 6878              	.L674:
 969:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 6879              		.loc 1 969 14 is_stmt 1 view .LVU2312
 6880 29af 4D89E0   		mov	r8, r12	# tmp727, step
 6881 29b2 49C1E006 		sal	r8, 6	# tmp727,
 6882 29b6 4901D8   		add	r8, rbx	# tmp727, index
 6883 29b9 410F92C1 		setc	r9b	#, _203
 6884              	# sieve_extend.c:969:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 969:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 6885              		.loc 1 969 17 is_stmt 0 view .LVU2313
 6886 29bd 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 6886      000000
 6887 29c4 4C894424 		mov	QWORD PTR 56[rsp], r8	# %sfp, tmp727
 6887      38
 6888 29c9 410FB6D1 		movzx	edx, r9b	# _203, _203
 6889 29cd 0F82FD09 		jb	.L1576	#,
 6889      0000
 970:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 6890              		.loc 1 970 14 is_stmt 1 view .LVU2314
 6891              	# sieve_extend.c:970:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 970:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 6892              		.loc 1 970 17 is_stmt 0 view .LVU2315
 6893 29d3 4981FCFF 		cmp	r12, 255	# step,
 6893      000000
 6894 29da 0F87F007 		ja	.L696	#,
 6894      0000
 970:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 6895              		.loc 1 970 48 is_stmt 1 view .LVU2316
 6896              	.LVL325:
 6897              	.LBB487:
 6898              	.LBI487:
 403:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 6899              		.loc 1 403 13 view .LVU2317
 6900              	.LBB488:
 404:sieve_extend.c **** 
 6901              		.loc 1 404 5 view .LVU2318
 406:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique; index += step) {
 6902              		.loc 1 406 5 view .LVU2319
 413:sieve_extend.c ****     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 6903              		.loc 1 413 5 view .LVU2320
 414:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 6904              		.loc 1 414 5 view .LVU2321
 6905              	.LBB489:
 6906              	.LBB490:
GAS LISTING /tmp/ccW0oq2B.s 			page 197


 6907              	# sieve_extend.c:435:             counter_t range_stop_word = wordindex(range_stop);
 435:sieve_extend.c ****             index_word = start_word;
 6908              		.loc 1 435 23 is_stmt 0 view .LVU2322
 6909 29e0 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# range_stop_word, %sfp
 6909      70
 6910              	.LBE490:
 6911              	.LBE489:
 6912              	# sieve_extend.c:414:     bitvector_t mask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 414:sieve_extend.c ****     bitword_t* bitarray = bitarray_word;
 6913              		.loc 1 414 17 view .LVU2323
 6914 29e5 C5F9EFC0 		vpxor	xmm0, xmm0, xmm0	# tmp1680
 6915 29e9 C5F82984 		vmovaps	XMMWORD PTR 128[rsp], xmm0	# mask, tmp1680
 6915      24800000 
 6915      00
 6916 29f2 C5F82984 		vmovaps	XMMWORD PTR 144[rsp], xmm0	# mask, tmp1680
 6916      24900000 
 6916      00
 6917 29fb C5F82984 		vmovaps	XMMWORD PTR 160[rsp], xmm0	# mask, tmp1680
 6917      24A00000 
 6917      00
 6918 2a04 C5F82984 		vmovaps	XMMWORD PTR 176[rsp], xmm0	# mask, tmp1680
 6918      24B00000 
 6918      00
 415:sieve_extend.c ****     bitvector_t* bitarray_vector = (bitvector_t*)bitarray_word;
 6919              		.loc 1 415 5 is_stmt 1 view .LVU2324
 416:sieve_extend.c **** 
 6920              		.loc 1 416 5 view .LVU2325
 418:sieve_extend.c ****         for (counter_t index = range_start; index <= range_stop_unique; ) {
 6921              		.loc 1 418 5 view .LVU2326
 6922              	.LVL326:
 6923              	.LBB493:
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 6924              		.loc 1 419 45 view .LVU2327
 6925              	.LBB491:
 6926              	# sieve_extend.c:435:             counter_t range_stop_word = wordindex(range_stop);
 435:sieve_extend.c ****             index_word = start_word;
 6927              		.loc 1 435 23 is_stmt 0 view .LVU2328
 6928 2a0d 48C1E906 		shr	rcx, 6	# range_stop_word,
 6929 2a11 4E8D14E5 		lea	r10, 0[0+r12*8]	# _1764,
 6929      00000000 
 6930              	.LBE491:
 6931              	# sieve_extend.c:419:         for (counter_t index = range_start; index <= range_stop_unique; ) {
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 6932              		.loc 1 419 9 view .LVU2329
 6933 2a19 4885D2   		test	rdx, rdx	# _203
 6934 2a1c 0F851F03 		jne	.L678	#,
 6934      0000
 6935 2a22 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 6935      20
 6936 2a27 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 6936      38
 6937              	.LVL327:
 6938 2a2c 0F1F4000 		.p2align 4,,10
 6939              		.p2align 3
 6940              	.L705:
 6941              	.LBB492:
 421:sieve_extend.c ****             register counter_t index_word = start_word;
GAS LISTING /tmp/ccW0oq2B.s 			page 198


 6942              		.loc 1 421 13 is_stmt 1 view .LVU2330
 6943              	# sieve_extend.c:421:             counter_t start_word = wordindex(index);
 421:sieve_extend.c ****             register counter_t index_word = start_word;
 6944              		.loc 1 421 23 is_stmt 0 view .LVU2331
 6945 2a30 4889DA   		mov	rdx, rbx	# start_word, index
 6946              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 6947              		.loc 1 429 31 view .LVU2332
 6948 2a33 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp757, tmp1047, index
 6948      FF
 6949              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 6950              		.loc 1 430 23 view .LVU2333
 6951 2a38 4C01E3   		add	rbx, r12	# index, step
 6952              	.LVL328:
 6953              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 6954              		.loc 1 431 28 view .LVU2334
 6955 2a3b 4889D8   		mov	rax, rbx	# index_word, index
 6956              	# sieve_extend.c:421:             counter_t start_word = wordindex(index);
 421:sieve_extend.c ****             register counter_t index_word = start_word;
 6957              		.loc 1 421 23 view .LVU2335
 6958 2a3e 48C1EA06 		shr	rdx, 6	# start_word,
 6959              	.LVL329:
 422:sieve_extend.c ****             int word = 0;
 6960              		.loc 1 422 13 is_stmt 1 view .LVU2336
 423:sieve_extend.c ****             mask[0] = SAFE_ZERO;
 6961              		.loc 1 423 13 view .LVU2337
 424:sieve_extend.c ****             mask[1] = SAFE_ZERO;
 6962              		.loc 1 424 13 view .LVU2338
 425:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 6963              		.loc 1 425 13 view .LVU2339
 6964              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 6965              		.loc 1 431 28 is_stmt 0 view .LVU2340
 6966 2a42 48C1E806 		shr	rax, 6	# index_word,
 6967              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 6968              		.loc 1 432 35 view .LVU2341
 6969 2a46 29D0     		sub	eax, edx	# word, start_word
 6970              	# sieve_extend.c:425:             mask[1] = SAFE_ZERO;
 425:sieve_extend.c ****             mask[2] = SAFE_ZERO;
 6971              		.loc 1 425 21 view .LVU2342
 6972 2a48 48C78424 		mov	QWORD PTR 136[rsp], 0	# mask,
 6972      88000000 
 6972      00000000 
 426:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 6973              		.loc 1 426 13 is_stmt 1 view .LVU2343
 6974              	# sieve_extend.c:426:             mask[2] = SAFE_ZERO;
 426:sieve_extend.c ****             mask[3] = SAFE_ZERO;
 6975              		.loc 1 426 21 is_stmt 0 view .LVU2344
 6976 2a54 48C78424 		mov	QWORD PTR 144[rsp], 0	# mask,
 6976      90000000 
 6976      00000000 
 427:sieve_extend.c ****             do {
 6977              		.loc 1 427 13 is_stmt 1 view .LVU2345
 6978              	# sieve_extend.c:427:             mask[3] = SAFE_ZERO;
GAS LISTING /tmp/ccW0oq2B.s 			page 199


 427:sieve_extend.c ****             do {
 6979              		.loc 1 427 21 is_stmt 0 view .LVU2346
 6980 2a60 48C78424 		mov	QWORD PTR 152[rsp], 0	# mask,
 6980      98000000 
 6980      00000000 
 6981              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 6982              		.loc 1 429 31 view .LVU2347
 6983 2a6c 4889BC24 		mov	QWORD PTR 128[rsp], rdi	# mask, tmp757
 6983      80000000 
 6984 2a74 4189D0   		mov	r8d, edx	# _1592, start_word
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 6985              		.loc 1 428 13 is_stmt 1 view .LVU2348
 429:sieve_extend.c ****                 index += step;
 6986              		.loc 1 429 17 view .LVU2349
 430:sieve_extend.c ****                 index_word = wordindex(index);
 6987              		.loc 1 430 17 view .LVU2350
 6988              	.LVL330:
 431:sieve_extend.c ****                 word = index_word - start_word;
 6989              		.loc 1 431 17 view .LVU2351
 432:sieve_extend.c ****             } while (word < 4 );
 6990              		.loc 1 432 17 view .LVU2352
 433:sieve_extend.c **** 
 6991              		.loc 1 433 21 view .LVU2353
 6992              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 6993              		.loc 1 433 13 is_stmt 0 view .LVU2354
 6994 2a77 83F803   		cmp	eax, 3	# word,
 6995 2a7a 0F8F2001 		jg	.L698	#,
 6995      0000
 6996              	.LVL331:
 6997              	.L699:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 6998              		.loc 1 428 13 is_stmt 1 view .LVU2355
 429:sieve_extend.c ****                 index += step;
 6999              		.loc 1 429 17 view .LVU2356
 7000              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7001              		.loc 1 429 28 is_stmt 0 view .LVU2357
 7002 2a80 4898     		cdqe
 7003              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7004              		.loc 1 429 31 view .LVU2358
 7005 2a82 C442E1F7 		shlx	r11, r15, rbx	# tmp761, tmp1047, index
 7005      DF
 7006              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7007              		.loc 1 430 23 view .LVU2359
 7008 2a87 4C01E3   		add	rbx, r12	# index, step
 7009              	.LVL332:
 7010              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7011              		.loc 1 429 28 view .LVU2360
 7012 2a8a 4C099CC4 		or	QWORD PTR 128[rsp+rax*8], r11	# mask, tmp761
 7012      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7013              		.loc 1 430 17 is_stmt 1 view .LVU2361
GAS LISTING /tmp/ccW0oq2B.s 			page 200


 7014              	.LVL333:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7015              		.loc 1 431 17 view .LVU2362
 432:sieve_extend.c ****             } while (word < 4 );
 7016              		.loc 1 432 17 view .LVU2363
 7017              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7018              		.loc 1 431 28 is_stmt 0 view .LVU2364
 7019 2a92 4889D8   		mov	rax, rbx	# index_word, index
 7020 2a95 48C1E806 		shr	rax, 6	# index_word,
 7021              	.LVL334:
 7022              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7023              		.loc 1 432 35 view .LVU2365
 7024 2a99 4429C0   		sub	eax, r8d	# word, _1592
 7025              	.LVL335:
 433:sieve_extend.c **** 
 7026              		.loc 1 433 21 is_stmt 1 view .LVU2366
 7027              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7028              		.loc 1 433 13 is_stmt 0 view .LVU2367
 7029 2a9c 83F803   		cmp	eax, 3	# word,
 7030 2a9f 0F8FFB00 		jg	.L698	#,
 7030      0000
 7031              	.LVL336:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7032              		.loc 1 428 13 is_stmt 1 view .LVU2368
 429:sieve_extend.c ****                 index += step;
 7033              		.loc 1 429 17 view .LVU2369
 7034              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7035              		.loc 1 429 28 is_stmt 0 view .LVU2370
 7036 2aa5 4898     		cdqe
 7037              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7038              		.loc 1 429 31 view .LVU2371
 7039 2aa7 C442E1F7 		shlx	r9, r15, rbx	# tmp1641, tmp1047, index
 7039      CF
 7040              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7041              		.loc 1 430 23 view .LVU2372
 7042 2aac 4C01E3   		add	rbx, r12	# index, step
 7043              	.LVL337:
 7044              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7045              		.loc 1 429 28 view .LVU2373
 7046 2aaf 4C098CC4 		or	QWORD PTR 128[rsp+rax*8], r9	# mask, tmp1641
 7046      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7047              		.loc 1 430 17 is_stmt 1 view .LVU2374
 7048              	.LVL338:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7049              		.loc 1 431 17 view .LVU2375
 432:sieve_extend.c ****             } while (word < 4 );
 7050              		.loc 1 432 17 view .LVU2376
 7051              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
GAS LISTING /tmp/ccW0oq2B.s 			page 201


 7052              		.loc 1 431 28 is_stmt 0 view .LVU2377
 7053 2ab7 4889D8   		mov	rax, rbx	# index_word, index
 7054 2aba 48C1E806 		shr	rax, 6	# index_word,
 7055              	.LVL339:
 7056              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7057              		.loc 1 432 35 view .LVU2378
 7058 2abe 4429C0   		sub	eax, r8d	# word, _1592
 7059              	.LVL340:
 433:sieve_extend.c **** 
 7060              		.loc 1 433 21 is_stmt 1 view .LVU2379
 7061              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7062              		.loc 1 433 13 is_stmt 0 view .LVU2380
 7063 2ac1 83F803   		cmp	eax, 3	# word,
 7064 2ac4 0F8FD600 		jg	.L698	#,
 7064      0000
 7065              	.LVL341:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7066              		.loc 1 428 13 is_stmt 1 view .LVU2381
 429:sieve_extend.c ****                 index += step;
 7067              		.loc 1 429 17 view .LVU2382
 7068              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7069              		.loc 1 429 28 is_stmt 0 view .LVU2383
 7070 2aca 4898     		cdqe
 7071              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7072              		.loc 1 429 31 view .LVU2384
 7073 2acc C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1646, tmp1047, index
 7073      F7
 7074              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7075              		.loc 1 430 23 view .LVU2385
 7076 2ad1 4C01E3   		add	rbx, r12	# index, step
 7077              	.LVL342:
 7078              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7079              		.loc 1 429 28 view .LVU2386
 7080 2ad4 4809B4C4 		or	QWORD PTR 128[rsp+rax*8], rsi	# mask, tmp1646
 7080      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7081              		.loc 1 430 17 is_stmt 1 view .LVU2387
 7082              	.LVL343:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7083              		.loc 1 431 17 view .LVU2388
 432:sieve_extend.c ****             } while (word < 4 );
 7084              		.loc 1 432 17 view .LVU2389
 7085              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7086              		.loc 1 431 28 is_stmt 0 view .LVU2390
 7087 2adc 4889D8   		mov	rax, rbx	# index_word, index
 7088 2adf 48C1E806 		shr	rax, 6	# index_word,
 7089              	.LVL344:
 7090              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7091              		.loc 1 432 35 view .LVU2391
GAS LISTING /tmp/ccW0oq2B.s 			page 202


 7092 2ae3 4429C0   		sub	eax, r8d	# word, _1592
 7093              	.LVL345:
 433:sieve_extend.c **** 
 7094              		.loc 1 433 21 is_stmt 1 view .LVU2392
 7095              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7096              		.loc 1 433 13 is_stmt 0 view .LVU2393
 7097 2ae6 83F803   		cmp	eax, 3	# word,
 7098 2ae9 0F8FB100 		jg	.L698	#,
 7098      0000
 7099              	.LVL346:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7100              		.loc 1 428 13 is_stmt 1 view .LVU2394
 429:sieve_extend.c ****                 index += step;
 7101              		.loc 1 429 17 view .LVU2395
 7102              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7103              		.loc 1 429 28 is_stmt 0 view .LVU2396
 7104 2aef 4898     		cdqe
 7105              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7106              		.loc 1 429 31 view .LVU2397
 7107 2af1 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp1651, tmp1047, index
 7107      FF
 7108              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7109              		.loc 1 430 23 view .LVU2398
 7110 2af6 4C01E3   		add	rbx, r12	# index, step
 7111              	.LVL347:
 7112              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7113              		.loc 1 429 28 view .LVU2399
 7114 2af9 4809BCC4 		or	QWORD PTR 128[rsp+rax*8], rdi	# mask, tmp1651
 7114      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7115              		.loc 1 430 17 is_stmt 1 view .LVU2400
 7116              	.LVL348:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7117              		.loc 1 431 17 view .LVU2401
 432:sieve_extend.c ****             } while (word < 4 );
 7118              		.loc 1 432 17 view .LVU2402
 7119              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7120              		.loc 1 431 28 is_stmt 0 view .LVU2403
 7121 2b01 4889D8   		mov	rax, rbx	# index_word, index
 7122 2b04 48C1E806 		shr	rax, 6	# index_word,
 7123              	.LVL349:
 7124              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7125              		.loc 1 432 35 view .LVU2404
 7126 2b08 4429C0   		sub	eax, r8d	# word, _1592
 7127              	.LVL350:
 433:sieve_extend.c **** 
 7128              		.loc 1 433 21 is_stmt 1 view .LVU2405
 7129              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7130              		.loc 1 433 13 is_stmt 0 view .LVU2406
GAS LISTING /tmp/ccW0oq2B.s 			page 203


 7131 2b0b 83F803   		cmp	eax, 3	# word,
 7132 2b0e 0F8F8C00 		jg	.L698	#,
 7132      0000
 7133              	.LVL351:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7134              		.loc 1 428 13 is_stmt 1 view .LVU2407
 429:sieve_extend.c ****                 index += step;
 7135              		.loc 1 429 17 view .LVU2408
 7136              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7137              		.loc 1 429 28 is_stmt 0 view .LVU2409
 7138 2b14 4898     		cdqe
 7139              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7140              		.loc 1 429 31 view .LVU2410
 7141 2b16 C442E1F7 		shlx	r11, r15, rbx	# tmp1656, tmp1047, index
 7141      DF
 7142              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7143              		.loc 1 430 23 view .LVU2411
 7144 2b1b 4C01E3   		add	rbx, r12	# index, step
 7145              	.LVL352:
 7146              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7147              		.loc 1 429 28 view .LVU2412
 7148 2b1e 4C099CC4 		or	QWORD PTR 128[rsp+rax*8], r11	# mask, tmp1656
 7148      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7149              		.loc 1 430 17 is_stmt 1 view .LVU2413
 7150              	.LVL353:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7151              		.loc 1 431 17 view .LVU2414
 432:sieve_extend.c ****             } while (word < 4 );
 7152              		.loc 1 432 17 view .LVU2415
 7153              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7154              		.loc 1 431 28 is_stmt 0 view .LVU2416
 7155 2b26 4889D8   		mov	rax, rbx	# index_word, index
 7156 2b29 48C1E806 		shr	rax, 6	# index_word,
 7157              	.LVL354:
 7158              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7159              		.loc 1 432 35 view .LVU2417
 7160 2b2d 4429C0   		sub	eax, r8d	# word, _1592
 7161              	.LVL355:
 433:sieve_extend.c **** 
 7162              		.loc 1 433 21 is_stmt 1 view .LVU2418
 7163              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7164              		.loc 1 433 13 is_stmt 0 view .LVU2419
 7165 2b30 83F803   		cmp	eax, 3	# word,
 7166 2b33 7F6B     		jg	.L698	#,
 7167              	.LVL356:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7168              		.loc 1 428 13 is_stmt 1 view .LVU2420
 429:sieve_extend.c ****                 index += step;
 7169              		.loc 1 429 17 view .LVU2421
GAS LISTING /tmp/ccW0oq2B.s 			page 204


 7170              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7171              		.loc 1 429 28 is_stmt 0 view .LVU2422
 7172 2b35 4898     		cdqe
 7173              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7174              		.loc 1 429 31 view .LVU2423
 7175 2b37 C442E1F7 		shlx	r9, r15, rbx	# tmp1661, tmp1047, index
 7175      CF
 7176              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7177              		.loc 1 430 23 view .LVU2424
 7178 2b3c 4C01E3   		add	rbx, r12	# index, step
 7179              	.LVL357:
 7180              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7181              		.loc 1 429 28 view .LVU2425
 7182 2b3f 4C098CC4 		or	QWORD PTR 128[rsp+rax*8], r9	# mask, tmp1661
 7182      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7183              		.loc 1 430 17 is_stmt 1 view .LVU2426
 7184              	.LVL358:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7185              		.loc 1 431 17 view .LVU2427
 432:sieve_extend.c ****             } while (word < 4 );
 7186              		.loc 1 432 17 view .LVU2428
 7187              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7188              		.loc 1 431 28 is_stmt 0 view .LVU2429
 7189 2b47 4889D8   		mov	rax, rbx	# index_word, index
 7190 2b4a 48C1E806 		shr	rax, 6	# index_word,
 7191              	.LVL359:
 7192              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7193              		.loc 1 432 35 view .LVU2430
 7194 2b4e 4429C0   		sub	eax, r8d	# word, _1592
 7195              	.LVL360:
 433:sieve_extend.c **** 
 7196              		.loc 1 433 21 is_stmt 1 view .LVU2431
 7197              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7198              		.loc 1 433 13 is_stmt 0 view .LVU2432
 7199 2b51 83F803   		cmp	eax, 3	# word,
 7200 2b54 7F4A     		jg	.L698	#,
 7201              	.LVL361:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7202              		.loc 1 428 13 is_stmt 1 view .LVU2433
 429:sieve_extend.c ****                 index += step;
 7203              		.loc 1 429 17 view .LVU2434
 7204              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7205              		.loc 1 429 28 is_stmt 0 view .LVU2435
 7206 2b56 4898     		cdqe
 7207              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7208              		.loc 1 429 31 view .LVU2436
 7209 2b58 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1666, tmp1047, index
GAS LISTING /tmp/ccW0oq2B.s 			page 205


 7209      F7
 7210              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7211              		.loc 1 430 23 view .LVU2437
 7212 2b5d 4C01E3   		add	rbx, r12	# index, step
 7213              	.LVL362:
 7214              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7215              		.loc 1 429 28 view .LVU2438
 7216 2b60 4809B4C4 		or	QWORD PTR 128[rsp+rax*8], rsi	# mask, tmp1666
 7216      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7217              		.loc 1 430 17 is_stmt 1 view .LVU2439
 7218              	.LVL363:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7219              		.loc 1 431 17 view .LVU2440
 432:sieve_extend.c ****             } while (word < 4 );
 7220              		.loc 1 432 17 view .LVU2441
 7221              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7222              		.loc 1 431 28 is_stmt 0 view .LVU2442
 7223 2b68 4889D8   		mov	rax, rbx	# index_word, index
 7224 2b6b 48C1E806 		shr	rax, 6	# index_word,
 7225              	.LVL364:
 7226              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7227              		.loc 1 432 35 view .LVU2443
 7228 2b6f 4429C0   		sub	eax, r8d	# word, _1592
 7229              	.LVL365:
 433:sieve_extend.c **** 
 7230              		.loc 1 433 21 is_stmt 1 view .LVU2444
 7231              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7232              		.loc 1 433 13 is_stmt 0 view .LVU2445
 7233 2b72 83F803   		cmp	eax, 3	# word,
 7234 2b75 7F29     		jg	.L698	#,
 7235              	.LVL366:
 428:sieve_extend.c ****                 mask[word] |= markmask(index);
 7236              		.loc 1 428 13 is_stmt 1 view .LVU2446
 429:sieve_extend.c ****                 index += step;
 7237              		.loc 1 429 17 view .LVU2447
 7238              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7239              		.loc 1 429 28 is_stmt 0 view .LVU2448
 7240 2b77 4898     		cdqe
 7241              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
 7242              		.loc 1 429 31 view .LVU2449
 7243 2b79 C4C2E1F7 		shlx	rdi, r15, rbx	# tmp1671, tmp1047, index
 7243      FF
 7244              	# sieve_extend.c:430:                 index += step;
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7245              		.loc 1 430 23 view .LVU2450
 7246 2b7e 4C01E3   		add	rbx, r12	# index, step
 7247              	.LVL367:
 7248              	# sieve_extend.c:429:                 mask[word] |= markmask(index);
 429:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccW0oq2B.s 			page 206


 7249              		.loc 1 429 28 view .LVU2451
 7250 2b81 4809BCC4 		or	QWORD PTR 128[rsp+rax*8], rdi	# mask, tmp1671
 7250      80000000 
 430:sieve_extend.c ****                 index_word = wordindex(index);
 7251              		.loc 1 430 17 is_stmt 1 view .LVU2452
 7252              	.LVL368:
 431:sieve_extend.c ****                 word = index_word - start_word;
 7253              		.loc 1 431 17 view .LVU2453
 432:sieve_extend.c ****             } while (word < 4 );
 7254              		.loc 1 432 17 view .LVU2454
 7255              	# sieve_extend.c:431:                 index_word = wordindex(index);
 431:sieve_extend.c ****                 word = index_word - start_word;
 7256              		.loc 1 431 28 is_stmt 0 view .LVU2455
 7257 2b89 4889D8   		mov	rax, rbx	# index_word, index
 7258 2b8c 48C1E806 		shr	rax, 6	# index_word,
 7259              	.LVL369:
 7260              	# sieve_extend.c:432:                 word = index_word - start_word;
 432:sieve_extend.c ****             } while (word < 4 );
 7261              		.loc 1 432 35 view .LVU2456
 7262 2b90 4429C0   		sub	eax, r8d	# word, _1592
 7263              	.LVL370:
 433:sieve_extend.c **** 
 7264              		.loc 1 433 21 is_stmt 1 view .LVU2457
 7265              	# sieve_extend.c:433:             } while (word < 4 );
 433:sieve_extend.c **** 
 7266              		.loc 1 433 13 is_stmt 0 view .LVU2458
 7267 2b93 83F803   		cmp	eax, 3	# word,
 7268 2b96 0F8EE4FE 		jle	.L699	#,
 7268      FFFF
 7269              	.LVL371:
 7270 2b9c 0F1F4000 		.p2align 4,,10
 7271              		.p2align 3
 7272              	.L698:
 435:sieve_extend.c ****             index_word = start_word;
 7273              		.loc 1 435 13 is_stmt 1 view .LVU2459
 436:sieve_extend.c **** 
 7274              		.loc 1 436 13 view .LVU2460
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7275              		.loc 1 439 13 view .LVU2461
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7276              		.loc 1 439 19 view .LVU2462
 7277              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7278              		.loc 1 439 32 is_stmt 0 view .LVU2463
 7279 2ba0 4C8D4204 		lea	r8, 4[rdx]	# tmp767,
 7280              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7281              		.loc 1 439 19 view .LVU2464
 7282 2ba4 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp767
 7283 2ba7 0F862B01 		jbe	.L700	#,
 7283      0000
 7284              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7285              		.loc 1 441 47 view .LVU2465
 7286 2bad 4C8B8C24 		mov	r9, QWORD PTR 128[rsp]	# _259, mask
 7286      80000000 
 7287              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
GAS LISTING /tmp/ccW0oq2B.s 			page 207


 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7288              		.loc 1 442 47 view .LVU2466
 7289 2bb5 4C8B8424 		mov	r8, QWORD PTR 136[rsp]	# _265, mask
 7289      88000000 
 7290              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7291              		.loc 1 443 47 view .LVU2467
 7292 2bbd 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# _271, mask
 7292      90000000 
 7293              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7294              		.loc 1 444 47 view .LVU2468
 7295 2bc5 488BB424 		mov	rsi, QWORD PTR 152[rsp]	# _277, mask
 7295      98000000 
 7296 2bcd 498D04D6 		lea	rax, [r14+rdx*8]	# ivtmp.613,
 7297              	.LVL372:
 7298              	.L701:
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7299              		.loc 1 441 17 is_stmt 1 view .LVU2469
 7300              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7301              		.loc 1 445 28 is_stmt 0 view .LVU2470
 7302 2bd1 4C01E2   		add	rdx, r12	# start_word, step
 7303              	.LVL373:
 7304              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7305              		.loc 1 439 19 view .LVU2471
 7306 2bd4 4C8D5A04 		lea	r11, 4[rdx]	# tmp769,
 7307              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7308              		.loc 1 441 40 view .LVU2472
 7309 2bd8 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7310              		.loc 1 442 17 is_stmt 1 view .LVU2473
 7311              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7312              		.loc 1 442 40 is_stmt 0 view .LVU2474
 7313 2bdb 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7314              		.loc 1 443 17 is_stmt 1 view .LVU2475
 7315              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7316              		.loc 1 443 40 is_stmt 0 view .LVU2476
 7317 2bdf 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7318              		.loc 1 444 17 is_stmt 1 view .LVU2477
 7319              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7320              		.loc 1 444 40 is_stmt 0 view .LVU2478
 7321 2be3 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7322              		.loc 1 445 17 is_stmt 1 view .LVU2479
 7323              	.LVL374:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7324              		.loc 1 439 19 view .LVU2480
 7325 2be7 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7326 2bea 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp769
GAS LISTING /tmp/ccW0oq2B.s 			page 208


 7327 2bed 0F86E500 		jbe	.L700	#,
 7327      0000
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7328              		.loc 1 441 17 view .LVU2481
 7329              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7330              		.loc 1 445 28 is_stmt 0 view .LVU2482
 7331 2bf3 4C01E2   		add	rdx, r12	# start_word, step
 7332              	.LVL375:
 7333              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7334              		.loc 1 439 19 view .LVU2483
 7335 2bf6 4C8D5A04 		lea	r11, 4[rdx]	# tmp1628,
 7336              	.LVL376:
 7337              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7338              		.loc 1 441 40 view .LVU2484
 7339 2bfa 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7340              		.loc 1 442 17 is_stmt 1 view .LVU2485
 7341              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7342              		.loc 1 442 40 is_stmt 0 view .LVU2486
 7343 2bfd 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7344              		.loc 1 443 17 is_stmt 1 view .LVU2487
 7345              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7346              		.loc 1 443 40 is_stmt 0 view .LVU2488
 7347 2c01 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7348              		.loc 1 444 17 is_stmt 1 view .LVU2489
 7349              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7350              		.loc 1 444 40 is_stmt 0 view .LVU2490
 7351 2c05 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7352              		.loc 1 445 17 is_stmt 1 view .LVU2491
 7353              	.LVL377:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7354              		.loc 1 439 19 view .LVU2492
 7355 2c09 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7356 2c0c 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1628
 7357 2c0f 0F86C300 		jbe	.L700	#,
 7357      0000
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7358              		.loc 1 441 17 view .LVU2493
 7359              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7360              		.loc 1 445 28 is_stmt 0 view .LVU2494
 7361 2c15 4C01E2   		add	rdx, r12	# start_word, step
 7362              	.LVL378:
 7363              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7364              		.loc 1 439 19 view .LVU2495
 7365 2c18 4C8D5A04 		lea	r11, 4[rdx]	# tmp1630,
 7366              	.LVL379:
GAS LISTING /tmp/ccW0oq2B.s 			page 209


 7367              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7368              		.loc 1 441 40 view .LVU2496
 7369 2c1c 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7370              		.loc 1 442 17 is_stmt 1 view .LVU2497
 7371              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7372              		.loc 1 442 40 is_stmt 0 view .LVU2498
 7373 2c1f 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7374              		.loc 1 443 17 is_stmt 1 view .LVU2499
 7375              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7376              		.loc 1 443 40 is_stmt 0 view .LVU2500
 7377 2c23 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7378              		.loc 1 444 17 is_stmt 1 view .LVU2501
 7379              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7380              		.loc 1 444 40 is_stmt 0 view .LVU2502
 7381 2c27 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7382              		.loc 1 445 17 is_stmt 1 view .LVU2503
 7383              	.LVL380:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7384              		.loc 1 439 19 view .LVU2504
 7385 2c2b 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7386 2c2e 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1630
 7387 2c31 0F86A100 		jbe	.L700	#,
 7387      0000
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7388              		.loc 1 441 17 view .LVU2505
 7389              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7390              		.loc 1 445 28 is_stmt 0 view .LVU2506
 7391 2c37 4C01E2   		add	rdx, r12	# start_word, step
 7392              	.LVL381:
 7393              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7394              		.loc 1 439 19 view .LVU2507
 7395 2c3a 4C8D5A04 		lea	r11, 4[rdx]	# tmp1632,
 7396              	.LVL382:
 7397              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7398              		.loc 1 441 40 view .LVU2508
 7399 2c3e 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7400              		.loc 1 442 17 is_stmt 1 view .LVU2509
 7401              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7402              		.loc 1 442 40 is_stmt 0 view .LVU2510
 7403 2c41 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7404              		.loc 1 443 17 is_stmt 1 view .LVU2511
 7405              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
GAS LISTING /tmp/ccW0oq2B.s 			page 210


 7406              		.loc 1 443 40 is_stmt 0 view .LVU2512
 7407 2c45 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7408              		.loc 1 444 17 is_stmt 1 view .LVU2513
 7409              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7410              		.loc 1 444 40 is_stmt 0 view .LVU2514
 7411 2c49 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7412              		.loc 1 445 17 is_stmt 1 view .LVU2515
 7413              	.LVL383:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7414              		.loc 1 439 19 view .LVU2516
 7415 2c4d 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7416 2c50 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1632
 7417 2c53 0F867F00 		jbe	.L700	#,
 7417      0000
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7418              		.loc 1 441 17 view .LVU2517
 7419              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7420              		.loc 1 445 28 is_stmt 0 view .LVU2518
 7421 2c59 4C01E2   		add	rdx, r12	# start_word, step
 7422              	.LVL384:
 7423              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7424              		.loc 1 439 19 view .LVU2519
 7425 2c5c 4C8D5A04 		lea	r11, 4[rdx]	# tmp1634,
 7426              	.LVL385:
 7427              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7428              		.loc 1 441 40 view .LVU2520
 7429 2c60 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7430              		.loc 1 442 17 is_stmt 1 view .LVU2521
 7431              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7432              		.loc 1 442 40 is_stmt 0 view .LVU2522
 7433 2c63 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7434              		.loc 1 443 17 is_stmt 1 view .LVU2523
 7435              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7436              		.loc 1 443 40 is_stmt 0 view .LVU2524
 7437 2c67 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7438              		.loc 1 444 17 is_stmt 1 view .LVU2525
 7439              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7440              		.loc 1 444 40 is_stmt 0 view .LVU2526
 7441 2c6b 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7442              		.loc 1 445 17 is_stmt 1 view .LVU2527
 7443              	.LVL386:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7444              		.loc 1 439 19 view .LVU2528
 7445 2c6f 4C01D0   		add	rax, r10	# ivtmp.613, _1764
GAS LISTING /tmp/ccW0oq2B.s 			page 211


 7446 2c72 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1634
 7447 2c75 7661     		jbe	.L700	#,
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7448              		.loc 1 441 17 view .LVU2529
 7449              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7450              		.loc 1 445 28 is_stmt 0 view .LVU2530
 7451 2c77 4C01E2   		add	rdx, r12	# start_word, step
 7452              	.LVL387:
 7453              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7454              		.loc 1 439 19 view .LVU2531
 7455 2c7a 4C8D5A04 		lea	r11, 4[rdx]	# tmp1636,
 7456              	.LVL388:
 7457              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7458              		.loc 1 441 40 view .LVU2532
 7459 2c7e 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7460              		.loc 1 442 17 is_stmt 1 view .LVU2533
 7461              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7462              		.loc 1 442 40 is_stmt 0 view .LVU2534
 7463 2c81 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7464              		.loc 1 443 17 is_stmt 1 view .LVU2535
 7465              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7466              		.loc 1 443 40 is_stmt 0 view .LVU2536
 7467 2c85 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7468              		.loc 1 444 17 is_stmt 1 view .LVU2537
 7469              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7470              		.loc 1 444 40 is_stmt 0 view .LVU2538
 7471 2c89 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7472              		.loc 1 445 17 is_stmt 1 view .LVU2539
 7473              	.LVL389:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7474              		.loc 1 439 19 view .LVU2540
 7475 2c8d 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7476 2c90 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1636
 7477 2c93 7643     		jbe	.L700	#,
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7478              		.loc 1 441 17 view .LVU2541
 7479              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7480              		.loc 1 445 28 is_stmt 0 view .LVU2542
 7481 2c95 4C01E2   		add	rdx, r12	# start_word, step
 7482              	.LVL390:
 7483              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7484              		.loc 1 439 19 view .LVU2543
 7485 2c98 4C8D5A04 		lea	r11, 4[rdx]	# tmp1638,
 7486              	.LVL391:
 7487              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
GAS LISTING /tmp/ccW0oq2B.s 			page 212


 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7488              		.loc 1 441 40 view .LVU2544
 7489 2c9c 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7490              		.loc 1 442 17 is_stmt 1 view .LVU2545
 7491              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7492              		.loc 1 442 40 is_stmt 0 view .LVU2546
 7493 2c9f 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7494              		.loc 1 443 17 is_stmt 1 view .LVU2547
 7495              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7496              		.loc 1 443 40 is_stmt 0 view .LVU2548
 7497 2ca3 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
 444:sieve_extend.c ****                 index_word += step;
 7498              		.loc 1 444 17 is_stmt 1 view .LVU2549
 7499              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7500              		.loc 1 444 40 is_stmt 0 view .LVU2550
 7501 2ca7 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7502              		.loc 1 445 17 is_stmt 1 view .LVU2551
 7503              	.LVL392:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7504              		.loc 1 439 19 view .LVU2552
 7505 2cab 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7506 2cae 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1638
 7507 2cb1 7625     		jbe	.L700	#,
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7508              		.loc 1 441 17 view .LVU2553
 7509              	# sieve_extend.c:445:                 index_word += step;
 445:sieve_extend.c ****             }
 7510              		.loc 1 445 28 is_stmt 0 view .LVU2554
 7511 2cb3 4C01E2   		add	rdx, r12	# start_word, step
 7512              	.LVL393:
 7513              	# sieve_extend.c:439:             while ((index_word)+4 < range_stop_word) {
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7514              		.loc 1 439 19 view .LVU2555
 7515 2cb6 4C8D5A04 		lea	r11, 4[rdx]	# tmp1639,
 7516              	.LVL394:
 7517              	# sieve_extend.c:441:                 bitarray[index_word  ] |= mask[0];
 441:sieve_extend.c ****                 bitarray[index_word+1] |= mask[1];
 7518              		.loc 1 441 40 view .LVU2556
 7519 2cba 4C0908   		or	QWORD PTR [rax], r9	# MEM[base: _1759, offset: 0B], _259
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7520              		.loc 1 442 17 is_stmt 1 view .LVU2557
 7521              	# sieve_extend.c:442:                 bitarray[index_word+1] |= mask[1];
 442:sieve_extend.c ****                 bitarray[index_word+2] |= mask[2];
 7522              		.loc 1 442 40 is_stmt 0 view .LVU2558
 7523 2cbd 4C094008 		or	QWORD PTR 8[rax], r8	# MEM[base: _1759, offset: 8B], _265
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7524              		.loc 1 443 17 is_stmt 1 view .LVU2559
 7525              	# sieve_extend.c:443:                 bitarray[index_word+2] |= mask[2];
 443:sieve_extend.c ****                 bitarray[index_word+3] |= mask[3];
 7526              		.loc 1 443 40 is_stmt 0 view .LVU2560
 7527 2cc1 48097810 		or	QWORD PTR 16[rax], rdi	# MEM[base: _1759, offset: 16B], _271
GAS LISTING /tmp/ccW0oq2B.s 			page 213


 444:sieve_extend.c ****                 index_word += step;
 7528              		.loc 1 444 17 is_stmt 1 view .LVU2561
 7529              	# sieve_extend.c:444:                 bitarray[index_word+3] |= mask[3];
 444:sieve_extend.c ****                 index_word += step;
 7530              		.loc 1 444 40 is_stmt 0 view .LVU2562
 7531 2cc5 48097018 		or	QWORD PTR 24[rax], rsi	# MEM[base: _1759, offset: 24B], _277
 445:sieve_extend.c ****             }
 7532              		.loc 1 445 17 is_stmt 1 view .LVU2563
 7533              	.LVL395:
 439:sieve_extend.c ****                 // debug printf("..handling word %ju (range_stop %ju)\n",index_word,range_stop_word
 7534              		.loc 1 439 19 view .LVU2564
 7535 2cc9 4C01D0   		add	rax, r10	# ivtmp.613, _1764
 7536 2ccc 4C39D9   		cmp	rcx, r11	# range_stop_word, tmp1639
 7537 2ccf 0F87FCFE 		ja	.L701	#,
 7537      FFFF
 7538              		.p2align 4,,10
 7539 2cd5 0F1F00   		.p2align 3
 7540              	.L700:
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7541              		.loc 1 447 13 view .LVU2565
 7542              	# sieve_extend.c:447:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7543              		.loc 1 447 16 is_stmt 0 view .LVU2566
 7544 2cd8 4839D1   		cmp	rcx, rdx	# range_stop_word, start_word
 7545 2cdb 7256     		jb	.L802	#,
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7546              		.loc 1 447 50 is_stmt 1 view .LVU2567
 7547              	# sieve_extend.c:447:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7548              		.loc 1 447 71 is_stmt 0 view .LVU2568
 7549 2cdd 4C8B8424 		mov	r8, QWORD PTR 128[rsp]	# mask, mask
 7549      80000000 
 7550 2ce5 4C8D0CD5 		lea	r9, 0[0+rdx*8]	# _282,
 7550      00000000 
 7551              	# sieve_extend.c:447:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7552              		.loc 1 447 93 view .LVU2569
 7553 2ced 488D7A01 		lea	rdi, 1[rdx]	# index_word,
 7554              	# sieve_extend.c:447:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7555              		.loc 1 447 71 view .LVU2570
 7556 2cf1 4F09040E 		or	QWORD PTR [r14+r9], r8	# *_283, mask
 447:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[1]; index_word++; }
 7557              		.loc 1 447 83 is_stmt 1 view .LVU2571
 7558              	.LVL396:
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7559              		.loc 1 448 13 view .LVU2572
 7560              	# sieve_extend.c:448:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7561              		.loc 1 448 16 is_stmt 0 view .LVU2573
 7562 2cf5 4839F9   		cmp	rcx, rdi	# range_stop_word, index_word
 7563 2cf8 7239     		jb	.L802	#,
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7564              		.loc 1 448 50 is_stmt 1 view .LVU2574
 7565              	# sieve_extend.c:448:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7566              		.loc 1 448 71 is_stmt 0 view .LVU2575
GAS LISTING /tmp/ccW0oq2B.s 			page 214


 7567 2cfa 488BB424 		mov	rsi, QWORD PTR 136[rsp]	# mask, mask
 7567      88000000 
 7568              	# sieve_extend.c:448:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7569              		.loc 1 448 93 view .LVU2576
 7570 2d02 488D4202 		lea	rax, 2[rdx]	# index_word,
 7571              	# sieve_extend.c:448:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7572              		.loc 1 448 71 view .LVU2577
 7573 2d06 4B09740E 		or	QWORD PTR 8[r14+r9], rsi	# *_290, mask
 7573      08
 448:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[2]; index_word++; }
 7574              		.loc 1 448 83 is_stmt 1 view .LVU2578
 7575              	.LVL397:
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7576              		.loc 1 449 13 view .LVU2579
 7577              	# sieve_extend.c:449:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7578              		.loc 1 449 16 is_stmt 0 view .LVU2580
 7579 2d0b 4839C1   		cmp	rcx, rax	# range_stop_word, index_word
 7580 2d0e 7223     		jb	.L802	#,
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7581              		.loc 1 449 50 is_stmt 1 view .LVU2581
 7582              	# sieve_extend.c:449:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7583              		.loc 1 449 71 is_stmt 0 view .LVU2582
 7584 2d10 4C8B9C24 		mov	r11, QWORD PTR 144[rsp]	# mask, mask
 7584      90000000 
 7585              	# sieve_extend.c:449:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7586              		.loc 1 449 93 view .LVU2583
 7587 2d18 4883C203 		add	rdx, 3	# index_word,
 7588              	# sieve_extend.c:449:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7589              		.loc 1 449 71 view .LVU2584
 7590 2d1c 4F095C0E 		or	QWORD PTR 16[r14+r9], r11	# *_297, mask
 7590      10
 449:sieve_extend.c ****             if (index_word <= range_stop_word) { bitarray[index_word] |= mask[3]; index_word++; }
 7591              		.loc 1 449 83 is_stmt 1 view .LVU2585
 7592              	.LVL398:
 450:sieve_extend.c ****         }
 7593              		.loc 1 450 13 view .LVU2586
 7594              	# sieve_extend.c:450:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 450:sieve_extend.c ****         }
 7595              		.loc 1 450 16 is_stmt 0 view .LVU2587
 7596 2d21 4839D1   		cmp	rcx, rdx	# range_stop_word, index_word
 7597 2d24 720D     		jb	.L802	#,
 450:sieve_extend.c ****         }
 7598              		.loc 1 450 50 is_stmt 1 view .LVU2588
 7599              	# sieve_extend.c:450:             if (index_word <= range_stop_word) { bitarray[index_word] |= mask
 450:sieve_extend.c ****         }
 7600              		.loc 1 450 71 is_stmt 0 view .LVU2589
 7601 2d26 488B9424 		mov	rdx, QWORD PTR 152[rsp]	# mask, mask
 7601      98000000 
 7602 2d2e 4B09540E 		or	QWORD PTR 24[r14+r9], rdx	# *_304, mask
 7602      18
 450:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 215


 7603              		.loc 1 450 83 is_stmt 1 view .LVU2590
 7604              	.L802:
 450:sieve_extend.c ****         }
 7605              		.loc 1 450 83 is_stmt 0 view .LVU2591
 7606              	.LBE492:
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7607              		.loc 1 419 45 is_stmt 1 view .LVU2592
 7608              	# sieve_extend.c:419:         for (counter_t index = range_start; index <= range_stop_unique; ) {
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7609              		.loc 1 419 9 is_stmt 0 view .LVU2593
 7610 2d33 4C39EB   		cmp	rbx, r13	# index, tmp728
 7611 2d36 0F86F4FC 		jbe	.L705	#,
 7611      FFFF
 7612              	.LVL399:
 7613              	.L1565:
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7614              		.loc 1 419 9 view .LVU2594
 7615 2d3c 4C8B6C24 		mov	r13, QWORD PTR 32[rsp]	# index, %sfp
 7615      20
 7616              	.L678:
 7617              	.LVL400:
 419:sieve_extend.c ****             // debug printf("..Processing index %ju for step %ju (stop at %ju)\n",index, step, rang
 7618              		.loc 1 419 9 view .LVU2595
 7619              	.LBE493:
 7620              	.LBE488:
 7621              	.LBE487:
 7622              	.LBE528:
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7623              		.loc 1 949 11 is_stmt 1 view .LVU2596
 7624              	# sieve_extend.c:949:     for (;range_stop < block_stop;) {
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 7625              		.loc 1 949 5 is_stmt 0 view .LVU2597
 7626 2d41 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# prephitmp_1898, %sfp
 7626      68
 7627 2d46 4C395C24 		cmp	QWORD PTR 112[rsp], r11	# %sfp, prephitmp_1898
 7627      70
 7628 2d4b 0F833D04 		jnb	.L1577	#,
 7628      0000
 7629              	.LVL401:
 7630              	.L713:
 7631              	.LBB529:
 950:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 7632              		.loc 1 950 9 is_stmt 1 view .LVU2598
 7633              	.LBB494:
 7634              	.LBI484:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 7635              		.loc 1 123 25 view .LVU2599
 7636              	.LBB486:
 124:sieve_extend.c ****     return index;
 7637              		.loc 1 124 5 view .LVU2600
 124:sieve_extend.c ****     return index;
 7638              		.loc 1 124 11 view .LVU2601
 7639              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7640              		.loc 1 124 21 is_stmt 0 view .LVU2602
 7641 2d51 4C89E8   		mov	rax, r13	# tmp686, index
 7642 2d54 48C1E806 		shr	rax, 6	# tmp686,
GAS LISTING /tmp/ccW0oq2B.s 			page 216


 7643              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7644              		.loc 1 124 12 view .LVU2603
 7645 2d58 498B1CC6 		mov	rbx, QWORD PTR [r14+rax*8]	# *_1171,* _94
 7646              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7647              		.loc 1 124 11 view .LVU2604
 7648 2d5c 4C0FA3EB 		bt	rbx, r13	# *_1171, index
 7649 2d60 0F83AA00 		jnc	.L663	#,
 7649      0000
 124:sieve_extend.c ****     return index;
 7650              		.loc 1 124 58 is_stmt 1 view .LVU2605
 7651              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7652              		.loc 1 124 63 is_stmt 0 view .LVU2606
 7653 2d66 4D8D4501 		lea	r8, 1[r13]	# tmp1060,
 7654              	.LVL402:
 7655              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7656              		.loc 1 124 21 view .LVU2607
 7657 2d6a 4C89C1   		mov	rcx, r8	# tmp691, index
 7658 2d6d 48C1E906 		shr	rcx, 6	# tmp691,
 7659              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7660              		.loc 1 124 12 view .LVU2608
 7661 2d71 4D8B24CE 		mov	r12, QWORD PTR [r14+rcx*8]	# *_49, *_49
 7662              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7663              		.loc 1 124 63 view .LVU2609
 7664 2d75 4D89C5   		mov	r13, r8	# index, tmp1060
 124:sieve_extend.c ****     return index;
 7665              		.loc 1 124 11 is_stmt 1 view .LVU2610
 7666 2d78 4D0FA3C4 		bt	r12, r8	# *_49, index
 7667 2d7c 0F838E00 		jnc	.L663	#,
 7667      0000
 124:sieve_extend.c ****     return index;
 7668              		.loc 1 124 58 view .LVU2611
 7669              	.LVL403:
 7670              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7671              		.loc 1 124 63 is_stmt 0 view .LVU2612
 7672 2d82 49FFC5   		inc	r13	# index
 7673              	.LVL404:
 124:sieve_extend.c ****     return index;
 7674              		.loc 1 124 11 is_stmt 1 view .LVU2613
 7675              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7676              		.loc 1 124 21 is_stmt 0 view .LVU2614
 7677 2d85 4C89EE   		mov	rsi, r13	# tmp1538, index
 7678 2d88 48C1EE06 		shr	rsi, 6	# tmp1538,
 7679              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7680              		.loc 1 124 12 view .LVU2615
 7681 2d8c 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_49, *_49
 7682              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7683              		.loc 1 124 11 view .LVU2616
GAS LISTING /tmp/ccW0oq2B.s 			page 217


 7684 2d90 4D0FA3EA 		bt	r10, r13	# *_49, index
 7685 2d94 737A     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7686              		.loc 1 124 58 is_stmt 1 view .LVU2617
 7687              	.LVL405:
 7688              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7689              		.loc 1 124 63 is_stmt 0 view .LVU2618
 7690 2d96 4D8D6802 		lea	r13, 2[r8]	# index,
 7691              	.LVL406:
 124:sieve_extend.c ****     return index;
 7692              		.loc 1 124 11 is_stmt 1 view .LVU2619
 7693              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7694              		.loc 1 124 21 is_stmt 0 view .LVU2620
 7695 2d9a 4C89EF   		mov	rdi, r13	# tmp1542, index
 7696 2d9d 48C1EF06 		shr	rdi, 6	# tmp1542,
 7697              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7698              		.loc 1 124 12 view .LVU2621
 7699 2da1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# *_49, *_49
 7700              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7701              		.loc 1 124 11 view .LVU2622
 7702 2da5 4D0FA3E9 		bt	r9, r13	# *_49, index
 7703 2da9 7365     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7704              		.loc 1 124 58 is_stmt 1 view .LVU2623
 7705              	.LVL407:
 7706              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7707              		.loc 1 124 63 is_stmt 0 view .LVU2624
 7708 2dab 4D8D6803 		lea	r13, 3[r8]	# index,
 7709              	.LVL408:
 124:sieve_extend.c ****     return index;
 7710              		.loc 1 124 11 is_stmt 1 view .LVU2625
 7711              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7712              		.loc 1 124 21 is_stmt 0 view .LVU2626
 7713 2daf 4D89EB   		mov	r11, r13	# tmp1546, index
 7714 2db2 49C1EB06 		shr	r11, 6	# tmp1546,
 7715              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7716              		.loc 1 124 12 view .LVU2627
 7717 2db6 4B8B14DE 		mov	rdx, QWORD PTR [r14+r11*8]	# *_49, *_49
 7718              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7719              		.loc 1 124 11 view .LVU2628
 7720 2dba 4C0FA3EA 		bt	rdx, r13	# *_49, index
 7721 2dbe 7350     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7722              		.loc 1 124 58 is_stmt 1 view .LVU2629
 7723              	.LVL409:
 7724              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7725              		.loc 1 124 63 is_stmt 0 view .LVU2630
 7726 2dc0 4D8D6804 		lea	r13, 4[r8]	# index,
GAS LISTING /tmp/ccW0oq2B.s 			page 218


 7727              	.LVL410:
 124:sieve_extend.c ****     return index;
 7728              		.loc 1 124 11 is_stmt 1 view .LVU2631
 7729              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7730              		.loc 1 124 21 is_stmt 0 view .LVU2632
 7731 2dc4 4C89E8   		mov	rax, r13	# tmp1550, index
 7732 2dc7 48C1E806 		shr	rax, 6	# tmp1550,
 7733              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7734              		.loc 1 124 12 view .LVU2633
 7735 2dcb 498B1CC6 		mov	rbx, QWORD PTR [r14+rax*8]	# *_49, *_49
 7736              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7737              		.loc 1 124 11 view .LVU2634
 7738 2dcf 4C0FA3EB 		bt	rbx, r13	# *_49, index
 7739 2dd3 733B     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7740              		.loc 1 124 58 is_stmt 1 view .LVU2635
 7741              	.LVL411:
 7742              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7743              		.loc 1 124 63 is_stmt 0 view .LVU2636
 7744 2dd5 4D8D6805 		lea	r13, 5[r8]	# index,
 7745              	.LVL412:
 124:sieve_extend.c ****     return index;
 7746              		.loc 1 124 11 is_stmt 1 view .LVU2637
 7747              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7748              		.loc 1 124 21 is_stmt 0 view .LVU2638
 7749 2dd9 4C89E9   		mov	rcx, r13	# tmp1554, index
 7750 2ddc 48C1E906 		shr	rcx, 6	# tmp1554,
 7751              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7752              		.loc 1 124 12 view .LVU2639
 7753 2de0 4D8B24CE 		mov	r12, QWORD PTR [r14+rcx*8]	# *_49, *_49
 7754              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7755              		.loc 1 124 11 view .LVU2640
 7756 2de4 4D0FA3EC 		bt	r12, r13	# *_49, index
 7757 2de8 7326     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7758              		.loc 1 124 58 is_stmt 1 view .LVU2641
 7759              	.LVL413:
 7760              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7761              		.loc 1 124 63 is_stmt 0 view .LVU2642
 7762 2dea 4D8D6806 		lea	r13, 6[r8]	# index,
 7763              	.LVL414:
 124:sieve_extend.c ****     return index;
 7764              		.loc 1 124 11 is_stmt 1 view .LVU2643
 7765              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7766              		.loc 1 124 21 is_stmt 0 view .LVU2644
 7767 2dee 4C89EE   		mov	rsi, r13	# tmp1558, index
 7768 2df1 48C1EE06 		shr	rsi, 6	# tmp1558,
 7769              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 219


 124:sieve_extend.c ****     return index;
 7770              		.loc 1 124 12 view .LVU2645
 7771 2df5 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_49, *_49
 7772              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7773              		.loc 1 124 11 view .LVU2646
 7774 2df9 4D0FA3EA 		bt	r10, r13	# *_49, index
 7775 2dfd 7311     		jnc	.L663	#,
 124:sieve_extend.c ****     return index;
 7776              		.loc 1 124 58 is_stmt 1 view .LVU2647
 7777              	.LVL415:
 7778              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 7779              		.loc 1 124 63 is_stmt 0 view .LVU2648
 7780 2dff 4D8D6807 		lea	r13, 7[r8]	# index,
 7781              	.LVL416:
 124:sieve_extend.c ****     return index;
 7782              		.loc 1 124 11 is_stmt 1 view .LVU2649
 7783 2e03 E949FFFF 		jmp	.L713	#
 7783      FF
 7784              	.LVL417:
 7785 2e08 0F1F8400 		.p2align 4,,10
 7785      00000000 
 7786              		.p2align 3
 7787              	.L663:
 124:sieve_extend.c ****     return index;
 7788              		.loc 1 124 11 is_stmt 0 view .LVU2650
 7789              	.LBE486:
 7790              	.LBE494:
 7791              	.LBE529:
 7792              	.LBE462:
 7793              	.LBE461:
 7794              	# sieve_extend.c:978: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7795              		.loc 1 978 86 view .LVU2651
 7796 2e10 488B7C24 		mov	rdi, QWORD PTR 72[rsp]	# pattern_start, %sfp
 7796      48
 7797 2e15 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	# _65, %sfp
 7797      40
 7798 2e1a 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 7798      58
 7799 2e1f 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# prime, %sfp
 7799      60
 7800 2e24 48897C24 		mov	QWORD PTR 88[rsp], rdi	# %sfp, pattern_start
 7800      58
 7801 2e29 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# block$pattern_size, %sfp
 7801      78
 7802              	.LVL418:
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7803              		.loc 1 978 86 view .LVU2652
 7804 2e2e 4C896C24 		mov	QWORD PTR 96[rsp], r13	# %sfp, index
 7804      60
 7805 2e33 4C894424 		mov	QWORD PTR 120[rsp], r8	# %sfp, _65
 7805      78
 7806              	.LVL419:
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7807              		.loc 1 978 86 view .LVU2653
GAS LISTING /tmp/ccW0oq2B.s 			page 220


 7808 2e38 4C89EF   		mov	rdi, r13	# index, index
 7809              	.LVL420:
 978:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 7810              		.loc 1 978 86 view .LVU2654
 7811 2e3b E9F0FAFF 		jmp	.L661	#
 7811      FF
 7812              	.LVL421:
 7813              		.p2align 4,,10
 7814              		.p2align 3
 7815              	.L1574:
 7816              	.LBB538:
 7817              	.LBB534:
 7818              	.LBB530:
 963:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 7819              		.loc 1 963 13 is_stmt 1 view .LVU2655
 964:sieve_extend.c ****         }
 7820              		.loc 1 964 13 view .LVU2656
 7821              	.LBB495:
 7822              	.LBI495:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 7823              		.loc 1 844 20 view .LVU2657
 7824              	.LBB496:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7825              		.loc 1 845 5 view .LVU2658
 7826              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 7827              		.loc 1 845 8 is_stmt 0 view .LVU2659
 7828 2e40 4983F93F 		cmp	r9, 63	# patternsize_bits,
 7829 2e44 0F867A09 		jbe	.L1578	#,
 7829      0000
 7830 2e4a 4C89CA   		mov	rdx, r9	# patternsize_bits, patternsize_bits
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 7831              		.loc 1 850 5 is_stmt 1 view .LVU2660
 7832              	.LVL422:
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7833              		.loc 1 851 5 view .LVU2661
 7834              	# sieve_extend.c:850:     const counter_t copy_start  = source_start + size;
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 7835              		.loc 1 850 21 is_stmt 0 view .LVU2662
 7836 2e4d 4F8D1409 		lea	r10, [r9+r9]	# copy_start,
 7837              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 7838              		.loc 1 852 22 view .LVU2663
 7839 2e51 83E23F   		and	edx, 63	# source_bit,
 7840              	# sieve_extend.c:851:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 7841              		.loc 1 851 22 view .LVU2664
 7842 2e54 4183E23F 		and	r10d, 63	# copy_bit,
 7843              	.LVL423:
 852:sieve_extend.c **** 
 7844              		.loc 1 852 5 is_stmt 1 view .LVU2665
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7845              		.loc 1 854 5 view .LVU2666
 7846              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7847              		.loc 1 854 13 is_stmt 0 view .LVU2667
 7848 2e58 4939D2   		cmp	r10, rdx	# copy_bit, source_bit
GAS LISTING /tmp/ccW0oq2B.s 			page 221


 7849              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7850              		.loc 1 854 37 view .LVU2668
 7851 2e5b 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 7851      78
 7852              	.LVL424:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7853              		.loc 1 854 37 view .LVU2669
 7854 2e60 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 7854      70
 7855 2e65 4889D6   		mov	rsi, rdx	#, patternsize_bits
 7856              	.LVL425:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7857              		.loc 1 854 37 view .LVU2670
 7858 2e68 4C89F7   		mov	rdi, r14	#, _94
 7859              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 7860              		.loc 1 854 13 view .LVU2671
 7861 2e6b 0F823F09 		jb	.L1579	#,
 7861      0000
 7862              	.LVL426:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7863              		.loc 1 855 10 is_stmt 1 view .LVU2672
 7864              	# sieve_extend.c:855:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7865              		.loc 1 855 13 is_stmt 0 view .LVU2673
 7866 2e71 0F862109 		jbe	.L673	#,
 7866      0000
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7867              		.loc 1 855 37 is_stmt 1 view .LVU2674
 7868 2e77 E844D5FF 		call	extendSieve_shiftright_ivdep	#
 7868      FF
 7869              	.LVL427:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7870              		.loc 1 855 37 is_stmt 0 view .LVU2675
 7871 2e7c 488B7C24 		mov	rdi, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 7871      78
 7872              	.LVL428:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 7873              		.loc 1 855 37 view .LVU2676
 7874              	.LBE496:
 7875              	.LBE495:
 7876              	# sieve_extend.c:968:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7877              		.loc 1 968 17 view .LVU2677
 7878 2e81 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 7878      000000
 7879              	.LBB499:
 7880              	.LBB497:
 7881 2e88 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, patternsize_bits
 7881      48
 7882              	.LVL429:
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7883              		.loc 1 968 17 view .LVU2678
 7884              	.LBE497:
 7885              	.LBE499:
 966:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 222


 7886              		.loc 1 966 9 is_stmt 1 view .LVU2679
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7887              		.loc 1 968 9 view .LVU2680
 7888              	# sieve_extend.c:968:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 968:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 7889              		.loc 1 968 17 is_stmt 0 view .LVU2681
 7890 2e8d 0F831CFB 		jnb	.L674	#,
 7890      FFFF
 7891              	.LVL430:
 7892              		.p2align 4,,10
 7893 2e93 0F1F4400 		.p2align 3
 7893      00
 7894              	.L1575:
 7895              	.LBB500:
 7896              	.LBB501:
 7897              	.LBB502:
 250:sieve_extend.c **** 
 7898              		.loc 1 250 41 is_stmt 1 view .LVU2682
 7899              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7900              		.loc 1 250 5 is_stmt 0 view .LVU2683
 7901 2e98 4983FC40 		cmp	r12, 64	# step,
 7902 2e9c 0F873221 		ja	.L805	#,
 7902      0000
 7903 2ea2 4C89E7   		mov	rdi, r12	# patternsize, step
 7904              	.LBE502:
 7905              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 7906              		.loc 1 249 21 view .LVU2684
 7907 2ea5 B9010000 		mov	ecx, 1	# pattern,
 7907      00
 7908              	.LVL431:
 7909              	.L676:
 7910              	.LBB503:
 250:sieve_extend.c **** 
 7911              		.loc 1 250 95 is_stmt 1 view .LVU2685
 7912              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7913              		.loc 1 250 79 is_stmt 0 view .LVU2686
 7914 2eaa 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 7915              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7916              		.loc 1 250 115 view .LVU2687
 7917 2eae C462C1F7 		shlx	r8, rcx, rdi	# _102, pattern, patternsize
 7917      C1
 7918              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7919              		.loc 1 250 103 view .LVU2688
 7920 2eb3 4C09C1   		or	rcx, r8	# pattern, _102
 7921              	.LVL432:
 250:sieve_extend.c **** 
 7922              		.loc 1 250 67 is_stmt 1 view .LVU2689
 250:sieve_extend.c **** 
 7923              		.loc 1 250 41 view .LVU2690
 7924              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7925              		.loc 1 250 5 is_stmt 0 view .LVU2691
GAS LISTING /tmp/ccW0oq2B.s 			page 223


 7926 2eb6 4983FB40 		cmp	r11, 64	# patternsize,
 7927 2eba 0F87A000 		ja	.L675	#,
 7927      0000
 250:sieve_extend.c **** 
 7928              		.loc 1 250 95 is_stmt 1 view .LVU2692
 7929              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7930              		.loc 1 250 79 is_stmt 0 view .LVU2693
 7931 2ec0 488D34BD 		lea	rsi, 0[0+rdi*4]	# patternsize,
 7931      00000000 
 7932              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7933              		.loc 1 250 115 view .LVU2694
 7934 2ec8 C4E2A1F7 		shlx	rax, rcx, r11	# _102, pattern, patternsize
 7934      C1
 7935              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7936              		.loc 1 250 103 view .LVU2695
 7937 2ecd 4809C1   		or	rcx, rax	# pattern, _102
 7938              	.LVL433:
 250:sieve_extend.c **** 
 7939              		.loc 1 250 67 is_stmt 1 view .LVU2696
 250:sieve_extend.c **** 
 7940              		.loc 1 250 41 view .LVU2697
 7941              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7942              		.loc 1 250 5 is_stmt 0 view .LVU2698
 7943 2ed0 4883FE40 		cmp	rsi, 64	# patternsize,
 7944 2ed4 0F878600 		ja	.L675	#,
 7944      0000
 250:sieve_extend.c **** 
 7945              		.loc 1 250 95 is_stmt 1 view .LVU2699
 7946              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7947              		.loc 1 250 79 is_stmt 0 view .LVU2700
 7948 2eda 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 7948      00000000 
 7949              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7950              		.loc 1 250 115 view .LVU2701
 7951 2ee2 C462C9F7 		shlx	r9, rcx, rsi	# _102, pattern, patternsize
 7951      C9
 7952              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7953              		.loc 1 250 103 view .LVU2702
 7954 2ee7 4C09C9   		or	rcx, r9	# pattern, _102
 7955              	.LVL434:
 250:sieve_extend.c **** 
 7956              		.loc 1 250 67 is_stmt 1 view .LVU2703
 250:sieve_extend.c **** 
 7957              		.loc 1 250 41 view .LVU2704
 7958              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7959              		.loc 1 250 5 is_stmt 0 view .LVU2705
 7960 2eea 4983FA40 		cmp	r10, 64	# patternsize,
 7961 2eee 7770     		ja	.L675	#,
 250:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 224


 7962              		.loc 1 250 95 is_stmt 1 view .LVU2706
 7963              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7964              		.loc 1 250 79 is_stmt 0 view .LVU2707
 7965 2ef0 4989F8   		mov	r8, rdi	# patternsize, patternsize
 7966 2ef3 49C1E004 		sal	r8, 4	# patternsize,
 7967              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7968              		.loc 1 250 115 view .LVU2708
 7969 2ef7 C4E2A9F7 		shlx	rdx, rcx, r10	# _102, pattern, patternsize
 7969      D1
 7970              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7971              		.loc 1 250 103 view .LVU2709
 7972 2efc 4809D1   		or	rcx, rdx	# pattern, _102
 7973              	.LVL435:
 250:sieve_extend.c **** 
 7974              		.loc 1 250 67 is_stmt 1 view .LVU2710
 250:sieve_extend.c **** 
 7975              		.loc 1 250 41 view .LVU2711
 7976              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7977              		.loc 1 250 5 is_stmt 0 view .LVU2712
 7978 2eff 4983F840 		cmp	r8, 64	# patternsize,
 7979 2f03 775B     		ja	.L675	#,
 250:sieve_extend.c **** 
 7980              		.loc 1 250 95 is_stmt 1 view .LVU2713
 7981              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7982              		.loc 1 250 79 is_stmt 0 view .LVU2714
 7983 2f05 4889F8   		mov	rax, rdi	# patternsize, patternsize
 7984 2f08 48C1E005 		sal	rax, 5	# patternsize,
 7985              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7986              		.loc 1 250 115 view .LVU2715
 7987 2f0c C462B9F7 		shlx	r11, rcx, r8	# _102, pattern, patternsize
 7987      D9
 7988              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7989              		.loc 1 250 103 view .LVU2716
 7990 2f11 4C09D9   		or	rcx, r11	# pattern, _102
 7991              	.LVL436:
 250:sieve_extend.c **** 
 7992              		.loc 1 250 67 is_stmt 1 view .LVU2717
 250:sieve_extend.c **** 
 7993              		.loc 1 250 41 view .LVU2718
 7994              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 7995              		.loc 1 250 5 is_stmt 0 view .LVU2719
 7996 2f14 4883F840 		cmp	rax, 64	# patternsize,
 7997 2f18 7746     		ja	.L675	#,
 250:sieve_extend.c **** 
 7998              		.loc 1 250 95 is_stmt 1 view .LVU2720
 7999              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8000              		.loc 1 250 79 is_stmt 0 view .LVU2721
 8001 2f1a 4989F9   		mov	r9, rdi	# patternsize, patternsize
GAS LISTING /tmp/ccW0oq2B.s 			page 225


 8002 2f1d 49C1E106 		sal	r9, 6	# patternsize,
 8003              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8004              		.loc 1 250 115 view .LVU2722
 8005 2f21 C4E2F9F7 		shlx	rsi, rcx, rax	# _102, pattern, patternsize
 8005      F1
 8006              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8007              		.loc 1 250 103 view .LVU2723
 8008 2f26 4809F1   		or	rcx, rsi	# pattern, _102
 8009              	.LVL437:
 250:sieve_extend.c **** 
 8010              		.loc 1 250 67 is_stmt 1 view .LVU2724
 250:sieve_extend.c **** 
 8011              		.loc 1 250 41 view .LVU2725
 8012              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8013              		.loc 1 250 5 is_stmt 0 view .LVU2726
 8014 2f29 4983F940 		cmp	r9, 64	# patternsize,
 8015 2f2d 7731     		ja	.L675	#,
 250:sieve_extend.c **** 
 8016              		.loc 1 250 95 is_stmt 1 view .LVU2727
 8017              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8018              		.loc 1 250 79 is_stmt 0 view .LVU2728
 8019 2f2f 4889FA   		mov	rdx, rdi	# patternsize, patternsize
 8020 2f32 48C1E207 		sal	rdx, 7	# patternsize,
 8021              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8022              		.loc 1 250 115 view .LVU2729
 8023 2f36 C462B1F7 		shlx	r10, rcx, r9	# _102, pattern, patternsize
 8023      D1
 8024              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8025              		.loc 1 250 103 view .LVU2730
 8026 2f3b 4C09D1   		or	rcx, r10	# pattern, _102
 8027              	.LVL438:
 250:sieve_extend.c **** 
 8028              		.loc 1 250 67 is_stmt 1 view .LVU2731
 250:sieve_extend.c **** 
 8029              		.loc 1 250 41 view .LVU2732
 8030              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8031              		.loc 1 250 5 is_stmt 0 view .LVU2733
 8032 2f3e 4883FA40 		cmp	rdx, 64	# patternsize,
 8033 2f42 771C     		ja	.L675	#,
 250:sieve_extend.c **** 
 8034              		.loc 1 250 95 is_stmt 1 view .LVU2734
 8035              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8036              		.loc 1 250 79 is_stmt 0 view .LVU2735
 8037 2f44 48C1E708 		sal	rdi, 8	# patternsize,
 8038              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8039              		.loc 1 250 115 view .LVU2736
 8040 2f48 C462E9F7 		shlx	r8, rcx, rdx	# _102, pattern, patternsize
 8040      C1
GAS LISTING /tmp/ccW0oq2B.s 			page 226


 8041              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8042              		.loc 1 250 103 view .LVU2737
 8043 2f4d 4C09C1   		or	rcx, r8	# pattern, _102
 8044              	.LVL439:
 250:sieve_extend.c **** 
 8045              		.loc 1 250 67 is_stmt 1 view .LVU2738
 250:sieve_extend.c **** 
 8046              		.loc 1 250 41 view .LVU2739
 8047              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 8048              		.loc 1 250 5 is_stmt 0 view .LVU2740
 8049 2f50 4883FF40 		cmp	rdi, 64	# patternsize,
 8050 2f54 0F8650FF 		jbe	.L676	#,
 8050      FFFF
 8051              	.LVL440:
 8052 2f5a 660F1F44 		.p2align 4,,10
 8052      0000
 8053              		.p2align 3
 8054              	.L675:
 250:sieve_extend.c **** 
 8055              		.loc 1 250 5 view .LVU2741
 8056              	.LBE503:
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8057              		.loc 1 253 5 is_stmt 1 view .LVU2742
 8058              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8059              		.loc 1 253 21 is_stmt 0 view .LVU2743
 8060 2f60 488B7424 		mov	rsi, QWORD PTR 112[rsp]	# _66, %sfp
 8060      70
 8061              	# sieve_extend.c:254:     register counter_t copy_word = wordindex(range_start);
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 8062              		.loc 1 254 24 view .LVU2744
 8063 2f65 4889DF   		mov	rdi, rbx	# copy_word, index
 8064 2f68 48C1EF06 		shr	rdi, 6	# copy_word,
 8065              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 8066              		.loc 1 253 21 view .LVU2745
 8067 2f6c 4989F2   		mov	r10, rsi	# range_stop_word, _66
 8068 2f6f 4C8D04FD 		lea	r8, 0[0+rdi*8]	# _1634,
 8068      00000000 
 8069 2f77 4B8D1406 		lea	rdx, [r14+r8]	# _1635,
 8070 2f7b F7D6     		not	esi	# tmp704
 8071 2f7d 49C7C3FF 		mov	r11, -1	# tmp2140,
 8071      FFFFFF
 8072 2f84 49C1EA06 		shr	r10, 6	# range_stop_word,
 8073              	.LVL441:
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 8074              		.loc 1 254 5 is_stmt 1 view .LVU2746
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8075              		.loc 1 255 6 view .LVU2747
 8076 2f88 C4C2CBF7 		shrx	rsi, r11, rsi	# _1642, tmp2140, tmp704
 8076      F3
 8077 2f8d 488B02   		mov	rax, QWORD PTR [rdx]	# pretmp_1636, MEM[(uint64_t *)_1635]
 8078 2f90 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, _1642
 8078      38
 8079 2f95 C462E1F7 		shlx	r9, rcx, rbx	# _1638, pattern, index
GAS LISTING /tmp/ccW0oq2B.s 			page 227


 8079      C9
 8080              	# sieve_extend.c:255:      if (copy_word == range_stop_word) { // shortcut
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 8081              		.loc 1 255 9 is_stmt 0 view .LVU2748
 8082 2f9a 4939FA   		cmp	r10, rdi	# range_stop_word, copy_word
 8083 2f9d 0F844308 		je	.L1580	#,
 8083      0000
 260:sieve_extend.c **** 
 8084              		.loc 1 260 5 is_stmt 1 view .LVU2749
 8085              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 8086              		.loc 1 260 27 is_stmt 0 view .LVU2750
 8087 2fa3 4C09C8   		or	rax, r9	# tmp709, _1638
 8088 2fa6 488902   		mov	QWORD PTR [rdx], rax	# MEM[(uint64_t *)_1635], tmp709
 8089              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8090              		.loc 1 264 28 view .LVU2751
 8091 2fa9 4889D8   		mov	rax, rbx	# index, index
 8092 2fac 83E03F   		and	eax, 63	# index,
 8093              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8094              		.loc 1 264 55 view .LVU2752
 8095 2faf 31D2     		xor	edx, edx	# tmp712
 8096 2fb1 49F7F4   		div	r12	# step
 8097              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8098              		.loc 1 265 25 view .LVU2753
 8099 2fb4 B8400000 		mov	eax, 64	# tmp715,
 8099      00
 8100              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 8101              		.loc 1 260 23 view .LVU2754
 8102 2fb9 488D7701 		lea	rsi, 1[rdi]	# copy_word,
 8103              	.LVL442:
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8104              		.loc 1 264 5 is_stmt 1 view .LVU2755
 8105              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 8106              		.loc 1 264 13 is_stmt 0 view .LVU2756
 8107 2fbd C4E2E9F7 		shlx	rcx, rcx, rdx	# pattern, pattern, tmp712
 8107      C9
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8108              		.loc 1 265 5 is_stmt 1 view .LVU2757
 8109              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8110              		.loc 1 265 25 is_stmt 0 view .LVU2758
 8111 2fc2 31D2     		xor	edx, edx	# tmp716
 8112 2fc4 49F7F4   		div	r12	# step
 8113              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 8114              		.loc 1 266 84 view .LVU2759
 8115 2fc7 B8200000 		mov	eax, 32	# tmp719,
 8115      00
 8116 2fcc 4829D0   		sub	rax, rdx	# tmp718, tmp716
 8117              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 8118              		.loc 1 266 25 view .LVU2760
GAS LISTING /tmp/ccW0oq2B.s 			page 228


 8119 2fcf 4801C0   		add	rax, rax	# pattern_shift_flipped
 8120 2fd2 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, pattern_shift_flipped
 8120      20
 8121              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 8122              		.loc 1 265 25 view .LVU2761
 8123 2fd7 4989D1   		mov	r9, rdx	# tmp716, tmp716
 8124              	.LVL443:
 266:sieve_extend.c ****     // copy_word++;
 8125              		.loc 1 266 5 is_stmt 1 view .LVU2762
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8126              		.loc 1 270 5 view .LVU2763
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8127              		.loc 1 270 11 view .LVU2764
 8128 2fda 4189D3   		mov	r11d, edx	# _1913, tmp716
 8129              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8130              		.loc 1 270 5 is_stmt 0 view .LVU2765
 8131 2fdd 4939F2   		cmp	r10, rsi	# range_stop_word, copy_word
 8132 2fe0 0F867D01 		jbe	.L679	#,
 8132      0000
 8133 2fe6 4B8D5C06 		lea	rbx, 8[r14+r8]	# ivtmp.577,
 8133      08
 8134              	.LVL444:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8135              		.loc 1 270 5 view .LVU2766
 8136 2feb 4F8D24D6 		lea	r12, [r14+r10*8]	# _1783,
 8137              	.LVL445:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8138              		.loc 1 270 5 view .LVU2767
 8139 2fef 4D89E0   		mov	r8, r12	# _1783, _1783
 8140 2ff2 4929DC   		sub	r12, rbx	# tmp1062, ivtmp.577
 8141 2ff5 4983EC08 		sub	r12, 8	# tmp1063,
 8142 2ff9 49C1EC03 		shr	r12, 3	# tmp1061,
 8143 2ffd 49FFC4   		inc	r12	# tmp1064
 8144 3000 4183E407 		and	r12d, 7	# tmp1065,
 8145 3004 0F84BD00 		je	.L680	#,
 8145      0000
 8146 300a 4983FC01 		cmp	r12, 1	# tmp1065,
 8147 300e 0F849600 		je	.L1124	#,
 8147      0000
 8148 3014 4983FC02 		cmp	r12, 2	# tmp1065,
 8149 3018 747C     		je	.L1125	#,
 8150 301a 4983FC03 		cmp	r12, 3	# tmp1065,
 8151 301e 7462     		je	.L1126	#,
 8152 3020 4983FC04 		cmp	r12, 4	# tmp1065,
 8153 3024 7448     		je	.L1127	#,
 8154 3026 4983FC05 		cmp	r12, 5	# tmp1065,
 8155 302a 742E     		je	.L1128	#,
 8156 302c 4983FC06 		cmp	r12, 6	# tmp1065,
 8157 3030 7414     		je	.L1129	#,
 8158              	.LVL446:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8159              		.loc 1 271 9 is_stmt 1 view .LVU2768
 8160              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8161              		.loc 1 271 28 is_stmt 0 view .LVU2769
GAS LISTING /tmp/ccW0oq2B.s 			page 229


 8162 3032 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8162      D1
 8163              	.LVL447:
 8164              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8165              		.loc 1 271 57 view .LVU2770
 8166 3037 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8166      C9
 8167              	.LVL448:
 8168              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8169              		.loc 1 271 17 view .LVU2771
 8170 303c 4809D1   		or	rcx, rdx	# pattern, _135
 8171              	.LVL449:
 272:sieve_extend.c ****     } 
 8172              		.loc 1 272 9 is_stmt 1 view .LVU2772
 8173              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8174              		.loc 1 272 29 is_stmt 0 view .LVU2773
 8175 303f 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8176              		.loc 1 270 40 is_stmt 1 view .LVU2774
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8177              		.loc 1 270 11 view .LVU2775
 8178 3042 4883C308 		add	rbx, 8	# ivtmp.577,
 8179              	.LVL450:
 8180              	.L1129:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8181              		.loc 1 271 9 view .LVU2776
 8182              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8183              		.loc 1 271 28 is_stmt 0 view .LVU2777
 8184 3046 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8184      E1
 8185              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8186              		.loc 1 271 57 view .LVU2778
 8187 304b C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8187      C9
 8188              	.LVL451:
 8189              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8190              		.loc 1 271 17 view .LVU2779
 8191 3050 4C09E1   		or	rcx, r12	# pattern, _135
 8192              	.LVL452:
 272:sieve_extend.c ****     } 
 8193              		.loc 1 272 9 is_stmt 1 view .LVU2780
 8194              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8195              		.loc 1 272 29 is_stmt 0 view .LVU2781
 8196 3053 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8197              		.loc 1 270 40 is_stmt 1 view .LVU2782
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8198              		.loc 1 270 11 view .LVU2783
 8199 3056 4883C308 		add	rbx, 8	# ivtmp.577,
 8200              	.LVL453:
GAS LISTING /tmp/ccW0oq2B.s 			page 230


 8201              	.L1128:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8202              		.loc 1 271 9 view .LVU2784
 8203              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8204              		.loc 1 271 28 is_stmt 0 view .LVU2785
 8205 305a C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8205      D1
 8206              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8207              		.loc 1 271 57 view .LVU2786
 8208 305f C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8208      C9
 8209              	.LVL454:
 8210              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8211              		.loc 1 271 17 view .LVU2787
 8212 3064 4809D1   		or	rcx, rdx	# pattern, _135
 8213              	.LVL455:
 272:sieve_extend.c ****     } 
 8214              		.loc 1 272 9 is_stmt 1 view .LVU2788
 8215              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8216              		.loc 1 272 29 is_stmt 0 view .LVU2789
 8217 3067 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8218              		.loc 1 270 40 is_stmt 1 view .LVU2790
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8219              		.loc 1 270 11 view .LVU2791
 8220 306a 4883C308 		add	rbx, 8	# ivtmp.577,
 8221              	.LVL456:
 8222              	.L1127:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8223              		.loc 1 271 9 view .LVU2792
 8224              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8225              		.loc 1 271 28 is_stmt 0 view .LVU2793
 8226 306e C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8226      E1
 8227              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8228              		.loc 1 271 57 view .LVU2794
 8229 3073 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8229      C9
 8230              	.LVL457:
 8231              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8232              		.loc 1 271 17 view .LVU2795
 8233 3078 4C09E1   		or	rcx, r12	# pattern, _135
 8234              	.LVL458:
 272:sieve_extend.c ****     } 
 8235              		.loc 1 272 9 is_stmt 1 view .LVU2796
 8236              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8237              		.loc 1 272 29 is_stmt 0 view .LVU2797
 8238 307b 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccW0oq2B.s 			page 231


 8239              		.loc 1 270 40 is_stmt 1 view .LVU2798
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8240              		.loc 1 270 11 view .LVU2799
 8241 307e 4883C308 		add	rbx, 8	# ivtmp.577,
 8242              	.LVL459:
 8243              	.L1126:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8244              		.loc 1 271 9 view .LVU2800
 8245              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8246              		.loc 1 271 28 is_stmt 0 view .LVU2801
 8247 3082 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8247      D1
 8248              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8249              		.loc 1 271 57 view .LVU2802
 8250 3087 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8250      C9
 8251              	.LVL460:
 8252              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8253              		.loc 1 271 17 view .LVU2803
 8254 308c 4809D1   		or	rcx, rdx	# pattern, _135
 8255              	.LVL461:
 272:sieve_extend.c ****     } 
 8256              		.loc 1 272 9 is_stmt 1 view .LVU2804
 8257              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8258              		.loc 1 272 29 is_stmt 0 view .LVU2805
 8259 308f 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8260              		.loc 1 270 40 is_stmt 1 view .LVU2806
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8261              		.loc 1 270 11 view .LVU2807
 8262 3092 4883C308 		add	rbx, 8	# ivtmp.577,
 8263              	.LVL462:
 8264              	.L1125:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8265              		.loc 1 271 9 view .LVU2808
 8266              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8267              		.loc 1 271 28 is_stmt 0 view .LVU2809
 8268 3096 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8268      E1
 8269              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8270              		.loc 1 271 57 view .LVU2810
 8271 309b C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8271      C9
 8272              	.LVL463:
 8273              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8274              		.loc 1 271 17 view .LVU2811
 8275 30a0 4C09E1   		or	rcx, r12	# pattern, _135
 8276              	.LVL464:
 272:sieve_extend.c ****     } 
 8277              		.loc 1 272 9 is_stmt 1 view .LVU2812
GAS LISTING /tmp/ccW0oq2B.s 			page 232


 8278              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8279              		.loc 1 272 29 is_stmt 0 view .LVU2813
 8280 30a3 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8281              		.loc 1 270 40 is_stmt 1 view .LVU2814
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8282              		.loc 1 270 11 view .LVU2815
 8283 30a6 4883C308 		add	rbx, 8	# ivtmp.577,
 8284              	.LVL465:
 8285              	.L1124:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8286              		.loc 1 271 9 view .LVU2816
 8287              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8288              		.loc 1 271 28 is_stmt 0 view .LVU2817
 8289 30aa C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8289      D1
 8290              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8291              		.loc 1 271 57 view .LVU2818
 8292 30af C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8292      C9
 8293              	.LVL466:
 8294              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8295              		.loc 1 271 17 view .LVU2819
 8296 30b4 4809D1   		or	rcx, rdx	# pattern, _135
 8297              	.LVL467:
 272:sieve_extend.c ****     } 
 8298              		.loc 1 272 9 is_stmt 1 view .LVU2820
 8299              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8300              		.loc 1 272 29 is_stmt 0 view .LVU2821
 8301 30b7 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8302              		.loc 1 270 40 is_stmt 1 view .LVU2822
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8303              		.loc 1 270 11 view .LVU2823
 8304 30ba 4883C308 		add	rbx, 8	# ivtmp.577,
 8305              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8306              		.loc 1 270 5 is_stmt 0 view .LVU2824
 8307 30be 4939D8   		cmp	r8, rbx	# _1783, ivtmp.577
 8308 30c1 0F849400 		je	.L1367	#,
 8308      0000
 8309              	.LVL468:
 8310              	.L680:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8311              		.loc 1 271 9 is_stmt 1 view .LVU2825
 8312              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8313              		.loc 1 271 28 is_stmt 0 view .LVU2826
 8314 30c7 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8314      D1
 8315              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/ccW0oq2B.s 			page 233


 8316              		.loc 1 271 57 view .LVU2827
 8317 30cc C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8317      C9
 8318              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8319              		.loc 1 271 17 view .LVU2828
 8320 30d1 4809D1   		or	rcx, rdx	# pattern, _135
 272:sieve_extend.c ****     } 
 8321              		.loc 1 272 9 is_stmt 1 view .LVU2829
 8322              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8323              		.loc 1 271 28 is_stmt 0 view .LVU2830
 8324 30d4 C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8324      E1
 8325              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8326              		.loc 1 272 29 view .LVU2831
 8327 30d9 48090B   		or	QWORD PTR [rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8328              		.loc 1 270 40 is_stmt 1 view .LVU2832
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8329              		.loc 1 270 11 view .LVU2833
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8330              		.loc 1 271 9 view .LVU2834
 8331              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8332              		.loc 1 271 57 is_stmt 0 view .LVU2835
 8333 30dc C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8333      C9
 8334              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8335              		.loc 1 271 17 view .LVU2836
 8336 30e1 4C09E1   		or	rcx, r12	# pattern, _135
 272:sieve_extend.c ****     } 
 8337              		.loc 1 272 9 is_stmt 1 view .LVU2837
 8338              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8339              		.loc 1 271 57 is_stmt 0 view .LVU2838
 8340 30e4 C462F9F7 		shlx	r12, rcx, rax	# _137, pattern, _1914
 8340      E1
 8341              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8342              		.loc 1 271 28 view .LVU2839
 8343 30e9 C4E2A3F7 		shrx	rdx, rcx, r11	# _135, pattern, _1913
 8343      D1
 8344              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8345              		.loc 1 271 17 view .LVU2840
 8346 30ee 4C09E2   		or	rdx, r12	# pattern, _137
 8347              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8348              		.loc 1 272 29 view .LVU2841
 8349 30f1 48094B08 		or	QWORD PTR 8[rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8350              		.loc 1 270 40 is_stmt 1 view .LVU2842
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8351              		.loc 1 270 11 view .LVU2843
GAS LISTING /tmp/ccW0oq2B.s 			page 234


 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8352              		.loc 1 271 9 view .LVU2844
 272:sieve_extend.c ****     } 
 8353              		.loc 1 272 9 view .LVU2845
 8354              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8355              		.loc 1 272 29 is_stmt 0 view .LVU2846
 8356 30f5 48095310 		or	QWORD PTR 16[rbx], rdx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8357              		.loc 1 270 40 is_stmt 1 view .LVU2847
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8358              		.loc 1 270 11 view .LVU2848
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8359              		.loc 1 271 9 view .LVU2849
 8360              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8361              		.loc 1 271 28 is_stmt 0 view .LVU2850
 8362 30f9 C4E2A3F7 		shrx	rcx, rdx, r11	# _135, pattern, _1913
 8362      CA
 8363              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8364              		.loc 1 271 57 view .LVU2851
 8365 30fe C4E2F9F7 		shlx	rdx, rdx, rax	# _137, pattern, _1914
 8365      D2
 8366              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8367              		.loc 1 271 17 view .LVU2852
 8368 3103 4809D1   		or	rcx, rdx	# pattern, _137
 272:sieve_extend.c ****     } 
 8369              		.loc 1 272 9 is_stmt 1 view .LVU2853
 8370              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8371              		.loc 1 272 29 is_stmt 0 view .LVU2854
 8372 3106 48094B18 		or	QWORD PTR 24[rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8373              		.loc 1 270 40 is_stmt 1 view .LVU2855
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8374              		.loc 1 270 11 view .LVU2856
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8375              		.loc 1 271 9 view .LVU2857
 8376              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8377              		.loc 1 271 28 is_stmt 0 view .LVU2858
 8378 310a C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8378      E1
 8379              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8380              		.loc 1 271 57 view .LVU2859
 8381 310f C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8381      C9
 8382              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8383              		.loc 1 271 17 view .LVU2860
 8384 3114 4909CC   		or	r12, rcx	# pattern, _137
 272:sieve_extend.c ****     } 
 8385              		.loc 1 272 9 is_stmt 1 view .LVU2861
 8386              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
GAS LISTING /tmp/ccW0oq2B.s 			page 235


 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8387              		.loc 1 271 57 is_stmt 0 view .LVU2862
 8388 3117 C4C2F9F7 		shlx	rdx, r12, rax	# _137, pattern, _1914
 8388      D4
 8389              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8390              		.loc 1 271 28 view .LVU2863
 8391 311c C4C2A3F7 		shrx	rcx, r12, r11	# _135, pattern, _1913
 8391      CC
 8392              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8393              		.loc 1 271 17 view .LVU2864
 8394 3121 4809D1   		or	rcx, rdx	# pattern, _137
 8395              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8396              		.loc 1 272 29 view .LVU2865
 8397 3124 4C096320 		or	QWORD PTR 32[rbx], r12	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8398              		.loc 1 270 40 is_stmt 1 view .LVU2866
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8399              		.loc 1 270 11 view .LVU2867
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8400              		.loc 1 271 9 view .LVU2868
 272:sieve_extend.c ****     } 
 8401              		.loc 1 272 9 view .LVU2869
 8402              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8403              		.loc 1 272 29 is_stmt 0 view .LVU2870
 8404 3128 48094B28 		or	QWORD PTR 40[rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8405              		.loc 1 270 40 is_stmt 1 view .LVU2871
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8406              		.loc 1 270 11 view .LVU2872
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8407              		.loc 1 271 9 view .LVU2873
 8408              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8409              		.loc 1 271 28 is_stmt 0 view .LVU2874
 8410 312c C462A3F7 		shrx	r12, rcx, r11	# _135, pattern, _1913
 8410      E1
 8411              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8412              		.loc 1 271 57 view .LVU2875
 8413 3131 C4E2F9F7 		shlx	rcx, rcx, rax	# _137, pattern, _1914
 8413      C9
 8414              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8415              		.loc 1 271 17 view .LVU2876
 8416 3136 4909CC   		or	r12, rcx	# pattern, _137
 272:sieve_extend.c ****     } 
 8417              		.loc 1 272 9 is_stmt 1 view .LVU2877
 8418              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8419              		.loc 1 271 28 is_stmt 0 view .LVU2878
 8420 3139 C4C2A3F7 		shrx	rcx, r12, r11	# _135, pattern, _1913
 8420      CC
 8421              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
GAS LISTING /tmp/ccW0oq2B.s 			page 236


 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8422              		.loc 1 271 57 view .LVU2879
 8423 313e C4C2F9F7 		shlx	rdx, r12, rax	# _137, pattern, _1914
 8423      D4
 8424              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8425              		.loc 1 271 17 view .LVU2880
 8426 3143 4809D1   		or	rcx, rdx	# pattern, _137
 8427              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8428              		.loc 1 272 29 view .LVU2881
 8429 3146 4C096330 		or	QWORD PTR 48[rbx], r12	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8430              		.loc 1 270 40 is_stmt 1 view .LVU2882
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8431              		.loc 1 270 11 view .LVU2883
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 8432              		.loc 1 271 9 view .LVU2884
 272:sieve_extend.c ****     } 
 8433              		.loc 1 272 9 view .LVU2885
 8434              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 8435              		.loc 1 272 29 is_stmt 0 view .LVU2886
 8436 314a 48094B38 		or	QWORD PTR 56[rbx], rcx	# MEM[base: _1787, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8437              		.loc 1 270 40 is_stmt 1 view .LVU2887
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8438              		.loc 1 270 11 view .LVU2888
 8439 314e 4883C340 		add	rbx, 64	# ivtmp.577,
 8440              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8441              		.loc 1 270 5 is_stmt 0 view .LVU2889
 8442 3152 4939D8   		cmp	r8, rbx	# _1783, ivtmp.577
 8443 3155 0F856CFF 		jne	.L680	#,
 8443      FFFF
 8444              	.L1367:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 8445              		.loc 1 270 5 view .LVU2890
 8446 315b 498D7432 		lea	rsi, -1[r10+rsi]	# _339,
 8446      FF
 8447 3160 4829FE   		sub	rsi, rdi	# copy_word, copy_word
 8448              	.L679:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8449              		.loc 1 275 5 is_stmt 1 view .LVU2891
 8450              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8451              		.loc 1 275 53 is_stmt 0 view .LVU2892
 8452 3163 0FB67C24 		movzx	edi, BYTE PTR 32[rsp]	# tmp2148, %sfp
 8452      20
 8453              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8454              		.loc 1 275 24 view .LVU2893
 8455 3168 C462B3F7 		shrx	r10, rcx, r9	# _147, pattern, tmp716
 8455      D1
 8456              	.LVL469:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8457              		.loc 1 275 24 view .LVU2894
GAS LISTING /tmp/ccW0oq2B.s 			page 237


 8458              	.LBE501:
 8459              	.LBE500:
 8460              	.LBE530:
 8461              	# sieve_extend.c:949:     for (;range_stop < block_stop;) {
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8462              		.loc 1 949 5 view .LVU2895
 8463 316d 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# prephitmp_1898, %sfp
 8463      68
 8464              	.LBB531:
 8465              	.LBB507:
 8466              	.LBB504:
 8467              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8468              		.loc 1 275 53 view .LVU2896
 8469 3172 C462C1F7 		shlx	r9, rcx, rdi	# _149, pattern, tmp2148
 8469      C9
 8470              	.LVL470:
 276:sieve_extend.c **** }
 8471              		.loc 1 276 5 is_stmt 1 view .LVU2897
 8472              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 8473              		.loc 1 275 13 is_stmt 0 view .LVU2898
 8474 3177 4D09CA   		or	r10, r9	# pattern, _149
 8475              	.LVL471:
 8476              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 8477              		.loc 1 276 36 view .LVU2899
 8478 317a 4C235424 		and	r10, QWORD PTR 56[rsp]	# tmp726, %sfp
 8478      38
 8479              	.LVL472:
 8480              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 8481              		.loc 1 276 25 view .LVU2900
 8482 317f 4D0914F6 		or	QWORD PTR [r14+rsi*8], r10	# *_153, tmp726
 8483              	.LVL473:
 276:sieve_extend.c **** }
 8484              		.loc 1 276 25 view .LVU2901
 8485              	.LBE504:
 8486              	.LBE507:
 8487              	.LBE531:
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8488              		.loc 1 949 11 is_stmt 1 view .LVU2902
 8489              	# sieve_extend.c:949:     for (;range_stop < block_stop;) {
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8490              		.loc 1 949 5 is_stmt 0 view .LVU2903
 8491 3183 4C395C24 		cmp	QWORD PTR 112[rsp], r11	# %sfp, prephitmp_1898
 8491      70
 8492 3188 0F82C3FB 		jb	.L713	#,
 8492      FFFF
 8493              	.LVL474:
 8494              	.L1577:
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8495              		.loc 1 949 5 view .LVU2904
 8496 318e 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# <retval>, %sfp
 8496      50
 8497 3193 4C8B6C24 		mov	r13, QWORD PTR 96[rsp]	# index, %sfp
 8497      60
GAS LISTING /tmp/ccW0oq2B.s 			page 238


 8498 3198 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# prephitmp_1898, sieve_89->bits
 8499              	.LVL475:
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8500              		.loc 1 949 5 view .LVU2905
 8501 319c 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 8501      78
 8502 31a1 4C897424 		mov	QWORD PTR 104[rsp], r14	# %sfp, prephitmp_1898
 8502      68
 8503              	.LVL476:
 949:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8504              		.loc 1 949 5 view .LVU2906
 8505 31a6 4C896C24 		mov	QWORD PTR 64[rsp], r13	# %sfp, index
 8505      40
 8506 31ab 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 8506      58
 975:sieve_extend.c **** }
 8507              		.loc 1 975 5 is_stmt 1 view .LVU2907
 8508              	.LVL477:
 975:sieve_extend.c **** }
 8509              		.loc 1 975 5 is_stmt 0 view .LVU2908
 8510              	.LBE534:
 8511              	.LBE538:
 987:sieve_extend.c ****     prime = block.prime;
 8512              		.loc 1 987 5 is_stmt 1 view .LVU2909
 8513              	.LBB539:
 8514              	.LBI539:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 8515              		.loc 1 844 20 view .LVU2910
 8516              	.LBB540:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8517              		.loc 1 845 5 view .LVU2911
 8518              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 8519              		.loc 1 845 8 is_stmt 0 view .LVU2912
 8520 31b0 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 8521 31b4 0F875706 		ja	.L714	#,
 8521      0000
 8522              	.LVL478:
 8523              	.L662:
 846:sieve_extend.c ****         return; // rapid exit for small sizes
 8524              		.loc 1 846 9 is_stmt 1 view .LVU2913
 8525 31ba 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	#, %sfp
 8525      68
 8526 31bf 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	#, %sfp
 8526      28
 8527 31c4 E837CEFF 		call	extendSieve_smallSize	#
 8527      FF
 8528              	.LVL479:
 847:sieve_extend.c ****     }
 8529              		.loc 1 847 9 view .LVU2914
 8530 31c9 E96E0600 		jmp	.L715	#
 8530      00
 8531              	.LVL480:
 8532 31ce 6690     		.p2align 4,,10
 8533              		.p2align 3
 8534              	.L696:
 847:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 239


 8535              		.loc 1 847 9 is_stmt 0 view .LVU2915
 8536              	.LBE540:
 8537              	.LBE539:
 8538              	.LBB543:
 8539              	.LBB535:
 8540              	.LBB532:
 971:sieve_extend.c ****         block.prime = prime;
 8541              		.loc 1 971 48 is_stmt 1 view .LVU2916
 8542              	.LBB508:
 8543              	.LBI464:
 391:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8544              		.loc 1 391 13 view .LVU2917
 8545              	.LBB482:
 392:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 8546              		.loc 1 392 5 view .LVU2918
 393:sieve_extend.c **** 
 8547              		.loc 1 393 5 view .LVU2919
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8548              		.loc 1 397 5 view .LVU2920
 8549              	.LBB480:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8550              		.loc 1 397 10 view .LVU2921
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8551              		.loc 1 397 50 view .LVU2922
 8552              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 8553              		.loc 1 397 5 is_stmt 0 view .LVU2923
 8554 31d0 4885D2   		test	rdx, rdx	# _203
 8555 31d3 0F8568FB 		jne	.L678	#,
 8555      FFFF
 8556              	.LBB477:
 8557              	.LBB468:
 8558              	.LBB469:
 8559              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8560              		.loc 1 186 20 view .LVU2924
 8561 31d9 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# _66, %sfp
 8561      70
 8562              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 8563              		.loc 1 188 84 view .LVU2925
 8564 31de 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp782,
 8565              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8566              		.loc 1 186 20 view .LVU2926
 8567 31e2 4989CA   		mov	r10, rcx	# range_stop_word, _66
 8568 31e5 49C1EA06 		shr	r10, 6	# range_stop_word,
 8569              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 8570              		.loc 1 188 107 view .LVU2927
 8571 31e9 4C89D6   		mov	rsi, r10	# tmp788, range_stop_word
 8572 31ec 4829FE   		sub	rsi, rdi	# tmp788, tmp782
 8573 31ef 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 8573      20
 8574 31f4 4939FA   		cmp	r10, rdi	# range_stop_word, tmp782
 8575              	# sieve_extend.c:205:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/ccW0oq2B.s 			page 240


 8576              		.loc 1 205 41 view .LVU2928
 8577 31f7 4F8D04D6 		lea	r8, [r14+r10*8]	# range_stop_ptr,
 8578              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 8579              		.loc 1 212 29 view .LVU2929
 8580 31fb 4189CB   		mov	r11d, ecx	# tmp784, _66
 8581 31fe 4D8D0CF6 		lea	r9, [r14+rsi*8]	# tmp790,
 8582 3202 4D89E2   		mov	r10, r12	# _1741, step
 8583 3205 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 8583      38
 8584 320a 4D0F46CE 		cmovbe	r9, r14	# _94,, prephitmp_1581
 8585 320e 41F7D3   		not	r11d	# tmp784
 8586 3211 48C7C0FF 		mov	rax, -1	# tmp2170,
 8586      FFFFFF
 8587              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 8588              		.loc 1 194 17 view .LVU2930
 8589 3218 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _329,
 8589      00000000 
 8590 3220 48C1E703 		sal	rdi, 3	# tmp794,
 8591 3224 49C1E204 		sal	r10, 4	# _1741,
 8592              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 8593              		.loc 1 212 29 view .LVU2931
 8594 3228 C462A3F7 		shrx	r11, rax, r11	# _361, tmp2170, tmp784
 8594      D8
 8595              	.LVL481:
 8596 322d 0F1F00   		.p2align 4,,10
 8597              		.p2align 3
 8598              	.L712:
 212:sieve_extend.c ****    }
 8599              		.loc 1 212 29 view .LVU2932
 8600              	.LBE469:
 8601              	.LBE468:
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 8602              		.loc 1 398 9 is_stmt 1 view .LVU2933
 8603              	# sieve_extend.c:399:         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 399:sieve_extend.c ****     }
 8604              		.loc 1 399 9 is_stmt 0 view .LVU2934
 8605 3230 4889D8   		mov	rax, rbx	# tmp797, index
 8606 3233 48C1E806 		shr	rax, 6	# tmp797,
 8607              	.LBB473:
 8608              	.LBB470:
 8609              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 8610              		.loc 1 187 78 view .LVU2935
 8611 3237 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 8612              	.LBE470:
 8613              	.LBE473:
 8614              	# sieve_extend.c:398:         register bitword_t mask = markmask(index);
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 8615              		.loc 1 398 28 view .LVU2936
 8616 323b C4C2E1F7 		shlx	rcx, r15, rbx	# mask, tmp1047, index
 8616      CF
 8617              	.LVL482:
 399:sieve_extend.c ****     }
 8618              		.loc 1 399 9 is_stmt 1 view .LVU2937
GAS LISTING /tmp/ccW0oq2B.s 			page 241


 8619              	.LBB474:
 8620              	.LBI468:
 154:sieve_extend.c **** // #if __APPLE__
 8621              		.loc 1 154 20 view .LVU2938
 8622              	.LBB471:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 8623              		.loc 1 186 4 view .LVU2939
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 8624              		.loc 1 187 4 view .LVU2940
 188:sieve_extend.c **** 
 8625              		.loc 1 188 4 view .LVU2941
 192:sieve_extend.c ****        *index_ptr |= mask;
 8626              		.loc 1 192 4 view .LVU2942
 192:sieve_extend.c ****        *index_ptr |= mask;
 8627              		.loc 1 192 10 view .LVU2943
 8628 3240 4C39C8   		cmp	rax, r9	# index_ptr, prephitmp_1581
 8629 3243 0F83FF00 		jnb	.L707	#,
 8629      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 8630              		.loc 1 192 10 is_stmt 0 view .LVU2944
 8631 3249 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.633,
 8632              	.L708:
 193:sieve_extend.c ****        index_ptr+=step;
 8633              		.loc 1 193 8 is_stmt 1 view .LVU2945
 8634              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8635              		.loc 1 193 19 is_stmt 0 view .LVU2946
 8636 324d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8637              		.loc 1 194 8 is_stmt 1 view .LVU2947
 8638              	.LVL483:
 195:sieve_extend.c ****        index_ptr+=step;
 8639              		.loc 1 195 8 view .LVU2948
 8640              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8641              		.loc 1 195 19 is_stmt 0 view .LVU2949
 8642 3250 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8643              		.loc 1 196 8 is_stmt 1 view .LVU2950
 8644              	.LVL484:
 197:sieve_extend.c ****        index_ptr+=step;
 8645              		.loc 1 197 8 view .LVU2951
 8646              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8647              		.loc 1 197 19 is_stmt 0 view .LVU2952
 8648 3254 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8649              		.loc 1 198 8 is_stmt 1 view .LVU2953
 8650              	.LVL485:
 199:sieve_extend.c ****        index_ptr+=step;
 8651              		.loc 1 199 8 view .LVU2954
 8652              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8653              		.loc 1 199 19 is_stmt 0 view .LVU2955
 8654 3257 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8655              		.loc 1 200 8 is_stmt 1 view .LVU2956
GAS LISTING /tmp/ccW0oq2B.s 			page 242


 8656              	.LVL486:
 201:sieve_extend.c ****        index_ptr+=step;
 8657              		.loc 1 201 8 view .LVU2957
 8658 325b 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8659              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8660              		.loc 1 201 19 is_stmt 0 view .LVU2958
 8661 325e 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8662              		.loc 1 202 8 is_stmt 1 view .LVU2959
 8663 3262 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8664              	.LVL487:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8665              		.loc 1 192 10 view .LVU2960
 8666 3265 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8667 3268 0F86DA00 		jbe	.L707	#,
 8667      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8668              		.loc 1 193 8 view .LVU2961
 8669              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8670              		.loc 1 193 19 is_stmt 0 view .LVU2962
 8671 326e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8672              		.loc 1 194 8 is_stmt 1 view .LVU2963
 8673              	.LVL488:
 195:sieve_extend.c ****        index_ptr+=step;
 8674              		.loc 1 195 8 view .LVU2964
 8675              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8676              		.loc 1 195 19 is_stmt 0 view .LVU2965
 8677 3271 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8678              		.loc 1 196 8 is_stmt 1 view .LVU2966
 8679              	.LVL489:
 197:sieve_extend.c ****        index_ptr+=step;
 8680              		.loc 1 197 8 view .LVU2967
 8681              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8682              		.loc 1 197 19 is_stmt 0 view .LVU2968
 8683 3275 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8684              		.loc 1 198 8 is_stmt 1 view .LVU2969
 8685              	.LVL490:
 199:sieve_extend.c ****        index_ptr+=step;
 8686              		.loc 1 199 8 view .LVU2970
 8687              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8688              		.loc 1 199 19 is_stmt 0 view .LVU2971
 8689 3278 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8690              		.loc 1 200 8 is_stmt 1 view .LVU2972
 8691              	.LVL491:
 201:sieve_extend.c ****        index_ptr+=step;
 8692              		.loc 1 201 8 view .LVU2973
 8693 327c 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8694              	# sieve_extend.c:201:        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 243


 201:sieve_extend.c ****        index_ptr+=step;
 8695              		.loc 1 201 19 is_stmt 0 view .LVU2974
 8696 327f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8697              		.loc 1 202 8 is_stmt 1 view .LVU2975
 8698 3283 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8699              	.LVL492:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8700              		.loc 1 192 10 view .LVU2976
 8701 3286 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8702 3289 0F86B900 		jbe	.L707	#,
 8702      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8703              		.loc 1 193 8 view .LVU2977
 8704              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8705              		.loc 1 193 19 is_stmt 0 view .LVU2978
 8706 328f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8707              		.loc 1 194 8 is_stmt 1 view .LVU2979
 8708              	.LVL493:
 195:sieve_extend.c ****        index_ptr+=step;
 8709              		.loc 1 195 8 view .LVU2980
 8710              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8711              		.loc 1 195 19 is_stmt 0 view .LVU2981
 8712 3292 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8713              		.loc 1 196 8 is_stmt 1 view .LVU2982
 8714              	.LVL494:
 197:sieve_extend.c ****        index_ptr+=step;
 8715              		.loc 1 197 8 view .LVU2983
 8716              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8717              		.loc 1 197 19 is_stmt 0 view .LVU2984
 8718 3296 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8719              		.loc 1 198 8 is_stmt 1 view .LVU2985
 8720              	.LVL495:
 199:sieve_extend.c ****        index_ptr+=step;
 8721              		.loc 1 199 8 view .LVU2986
 8722              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8723              		.loc 1 199 19 is_stmt 0 view .LVU2987
 8724 3299 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8725              		.loc 1 200 8 is_stmt 1 view .LVU2988
 8726              	.LVL496:
 201:sieve_extend.c ****        index_ptr+=step;
 8727              		.loc 1 201 8 view .LVU2989
 8728 329d 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8729              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8730              		.loc 1 201 19 is_stmt 0 view .LVU2990
 8731 32a0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8732              		.loc 1 202 8 is_stmt 1 view .LVU2991
GAS LISTING /tmp/ccW0oq2B.s 			page 244


 8733 32a4 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8734              	.LVL497:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8735              		.loc 1 192 10 view .LVU2992
 8736 32a7 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8737 32aa 0F869800 		jbe	.L707	#,
 8737      0000
 193:sieve_extend.c ****        index_ptr+=step;
 8738              		.loc 1 193 8 view .LVU2993
 8739              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8740              		.loc 1 193 19 is_stmt 0 view .LVU2994
 8741 32b0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8742              		.loc 1 194 8 is_stmt 1 view .LVU2995
 8743              	.LVL498:
 195:sieve_extend.c ****        index_ptr+=step;
 8744              		.loc 1 195 8 view .LVU2996
 8745              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8746              		.loc 1 195 19 is_stmt 0 view .LVU2997
 8747 32b3 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8748              		.loc 1 196 8 is_stmt 1 view .LVU2998
 8749              	.LVL499:
 197:sieve_extend.c ****        index_ptr+=step;
 8750              		.loc 1 197 8 view .LVU2999
 8751              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8752              		.loc 1 197 19 is_stmt 0 view .LVU3000
 8753 32b7 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8754              		.loc 1 198 8 is_stmt 1 view .LVU3001
 8755              	.LVL500:
 199:sieve_extend.c ****        index_ptr+=step;
 8756              		.loc 1 199 8 view .LVU3002
 8757              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8758              		.loc 1 199 19 is_stmt 0 view .LVU3003
 8759 32ba 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8760              		.loc 1 200 8 is_stmt 1 view .LVU3004
 8761              	.LVL501:
 201:sieve_extend.c ****        index_ptr+=step;
 8762              		.loc 1 201 8 view .LVU3005
 8763 32be 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8764              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8765              		.loc 1 201 19 is_stmt 0 view .LVU3006
 8766 32c1 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8767              		.loc 1 202 8 is_stmt 1 view .LVU3007
 8768 32c5 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8769              	.LVL502:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8770              		.loc 1 192 10 view .LVU3008
 8771 32c8 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
GAS LISTING /tmp/ccW0oq2B.s 			page 245


 8772 32cb 767B     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8773              		.loc 1 193 8 view .LVU3009
 8774              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8775              		.loc 1 193 19 is_stmt 0 view .LVU3010
 8776 32cd 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8777              		.loc 1 194 8 is_stmt 1 view .LVU3011
 8778              	.LVL503:
 195:sieve_extend.c ****        index_ptr+=step;
 8779              		.loc 1 195 8 view .LVU3012
 8780              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8781              		.loc 1 195 19 is_stmt 0 view .LVU3013
 8782 32d0 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8783              		.loc 1 196 8 is_stmt 1 view .LVU3014
 8784              	.LVL504:
 197:sieve_extend.c ****        index_ptr+=step;
 8785              		.loc 1 197 8 view .LVU3015
 8786              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8787              		.loc 1 197 19 is_stmt 0 view .LVU3016
 8788 32d4 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8789              		.loc 1 198 8 is_stmt 1 view .LVU3017
 8790              	.LVL505:
 199:sieve_extend.c ****        index_ptr+=step;
 8791              		.loc 1 199 8 view .LVU3018
 8792              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8793              		.loc 1 199 19 is_stmt 0 view .LVU3019
 8794 32d7 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8795              		.loc 1 200 8 is_stmt 1 view .LVU3020
 8796              	.LVL506:
 201:sieve_extend.c ****        index_ptr+=step;
 8797              		.loc 1 201 8 view .LVU3021
 8798 32db 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8799              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8800              		.loc 1 201 19 is_stmt 0 view .LVU3022
 8801 32de 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8802              		.loc 1 202 8 is_stmt 1 view .LVU3023
 8803 32e2 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8804              	.LVL507:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8805              		.loc 1 192 10 view .LVU3024
 8806 32e5 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8807 32e8 765E     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8808              		.loc 1 193 8 view .LVU3025
 8809              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8810              		.loc 1 193 19 is_stmt 0 view .LVU3026
GAS LISTING /tmp/ccW0oq2B.s 			page 246


 8811 32ea 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8812              		.loc 1 194 8 is_stmt 1 view .LVU3027
 8813              	.LVL508:
 195:sieve_extend.c ****        index_ptr+=step;
 8814              		.loc 1 195 8 view .LVU3028
 8815              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8816              		.loc 1 195 19 is_stmt 0 view .LVU3029
 8817 32ed 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8818              		.loc 1 196 8 is_stmt 1 view .LVU3030
 8819              	.LVL509:
 197:sieve_extend.c ****        index_ptr+=step;
 8820              		.loc 1 197 8 view .LVU3031
 8821              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8822              		.loc 1 197 19 is_stmt 0 view .LVU3032
 8823 32f1 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8824              		.loc 1 198 8 is_stmt 1 view .LVU3033
 8825              	.LVL510:
 199:sieve_extend.c ****        index_ptr+=step;
 8826              		.loc 1 199 8 view .LVU3034
 8827              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8828              		.loc 1 199 19 is_stmt 0 view .LVU3035
 8829 32f4 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8830              		.loc 1 200 8 is_stmt 1 view .LVU3036
 8831              	.LVL511:
 201:sieve_extend.c ****        index_ptr+=step;
 8832              		.loc 1 201 8 view .LVU3037
 8833 32f8 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8834              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8835              		.loc 1 201 19 is_stmt 0 view .LVU3038
 8836 32fb 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8837              		.loc 1 202 8 is_stmt 1 view .LVU3039
 8838 32ff 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8839              	.LVL512:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8840              		.loc 1 192 10 view .LVU3040
 8841 3302 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8842 3305 7641     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8843              		.loc 1 193 8 view .LVU3041
 8844              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8845              		.loc 1 193 19 is_stmt 0 view .LVU3042
 8846 3307 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8847              		.loc 1 194 8 is_stmt 1 view .LVU3043
 8848              	.LVL513:
 195:sieve_extend.c ****        index_ptr+=step;
 8849              		.loc 1 195 8 view .LVU3044
GAS LISTING /tmp/ccW0oq2B.s 			page 247


 8850              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8851              		.loc 1 195 19 is_stmt 0 view .LVU3045
 8852 330a 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8853              		.loc 1 196 8 is_stmt 1 view .LVU3046
 8854              	.LVL514:
 197:sieve_extend.c ****        index_ptr+=step;
 8855              		.loc 1 197 8 view .LVU3047
 8856              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8857              		.loc 1 197 19 is_stmt 0 view .LVU3048
 8858 330e 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8859              		.loc 1 198 8 is_stmt 1 view .LVU3049
 8860              	.LVL515:
 199:sieve_extend.c ****        index_ptr+=step;
 8861              		.loc 1 199 8 view .LVU3050
 8862              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8863              		.loc 1 199 19 is_stmt 0 view .LVU3051
 8864 3311 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8865              		.loc 1 200 8 is_stmt 1 view .LVU3052
 8866              	.LVL516:
 201:sieve_extend.c ****        index_ptr+=step;
 8867              		.loc 1 201 8 view .LVU3053
 8868 3315 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8869              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8870              		.loc 1 201 19 is_stmt 0 view .LVU3054
 8871 3318 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8872              		.loc 1 202 8 is_stmt 1 view .LVU3055
 8873 331c 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8874              	.LVL517:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8875              		.loc 1 192 10 view .LVU3056
 8876 331f 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8877 3322 7624     		jbe	.L707	#,
 193:sieve_extend.c ****        index_ptr+=step;
 8878              		.loc 1 193 8 view .LVU3057
 8879              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 8880              		.loc 1 193 19 is_stmt 0 view .LVU3058
 8881 3324 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1138, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 8882              		.loc 1 194 8 is_stmt 1 view .LVU3059
 8883              	.LVL518:
 195:sieve_extend.c ****        index_ptr+=step;
 8884              		.loc 1 195 8 view .LVU3060
 8885              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 8886              		.loc 1 195 19 is_stmt 0 view .LVU3061
 8887 3327 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_1138, index: _329, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 8888              		.loc 1 196 8 is_stmt 1 view .LVU3062
GAS LISTING /tmp/ccW0oq2B.s 			page 248


 8889              	.LVL519:
 197:sieve_extend.c ****        index_ptr+=step;
 8890              		.loc 1 197 8 view .LVU3063
 8891              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 8892              		.loc 1 197 19 is_stmt 0 view .LVU3064
 8893 332b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1735, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 8894              		.loc 1 198 8 is_stmt 1 view .LVU3065
 8895              	.LVL520:
 199:sieve_extend.c ****        index_ptr+=step;
 8896              		.loc 1 199 8 view .LVU3066
 8897              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 8898              		.loc 1 199 19 is_stmt 0 view .LVU3067
 8899 332e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1735, index: _329, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 8900              		.loc 1 200 8 is_stmt 1 view .LVU3068
 8901              	.LVL521:
 201:sieve_extend.c ****        index_ptr+=step;
 8902              		.loc 1 201 8 view .LVU3069
 8903 3332 4801FE   		add	rsi, rdi	# ivtmp.633, tmp794
 8904              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 8905              		.loc 1 201 19 is_stmt 0 view .LVU3070
 8906 3335 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_1138, index: _329, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 8907              		.loc 1 202 8 is_stmt 1 view .LVU3071
 8908 3339 4801F8   		add	rax, rdi	# index_ptr, tmp794
 8909              	.LVL522:
 192:sieve_extend.c ****        *index_ptr |= mask;
 8910              		.loc 1 192 10 view .LVU3072
 8911 333c 4939C1   		cmp	r9, rax	# prephitmp_1581, index_ptr
 8912 333f 0F8708FF 		ja	.L708	#,
 8912      FFFF
 8913              		.p2align 4,,10
 8914 3345 0F1F00   		.p2align 3
 8915              	.L707:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8916              		.loc 1 205 4 view .LVU3073
 206:sieve_extend.c ****        *index_ptr |= mask;
 8917              		.loc 1 206 4 view .LVU3074
 206:sieve_extend.c ****        *index_ptr |= mask;
 8918              		.loc 1 206 10 view .LVU3075
 8919 3348 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8920 334b 765B     		jbe	.L709	#,
 8921              	.L710:
 207:sieve_extend.c ****        index_ptr+=step;
 8922              		.loc 1 207 8 view .LVU3076
 8923              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8924              		.loc 1 207 19 is_stmt 0 view .LVU3077
 8925 334d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8926              		.loc 1 208 8 is_stmt 1 view .LVU3078
 8927              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
GAS LISTING /tmp/ccW0oq2B.s 			page 249


 8928              		.loc 1 208 17 is_stmt 0 view .LVU3079
 8929 3350 4801D0   		add	rax, rdx	# index_ptr, _329
 8930              	.LVL523:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8931              		.loc 1 206 10 is_stmt 1 view .LVU3080
 8932 3353 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8933 3356 7650     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8934              		.loc 1 207 8 view .LVU3081
 8935              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8936              		.loc 1 207 19 is_stmt 0 view .LVU3082
 8937 3358 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8938              		.loc 1 208 8 is_stmt 1 view .LVU3083
 8939              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8940              		.loc 1 208 17 is_stmt 0 view .LVU3084
 8941 335b 4801D0   		add	rax, rdx	# index_ptr, _329
 8942              	.LVL524:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8943              		.loc 1 206 10 is_stmt 1 view .LVU3085
 8944 335e 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8945 3361 7645     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8946              		.loc 1 207 8 view .LVU3086
 8947              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8948              		.loc 1 207 19 is_stmt 0 view .LVU3087
 8949 3363 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8950              		.loc 1 208 8 is_stmt 1 view .LVU3088
 8951              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8952              		.loc 1 208 17 is_stmt 0 view .LVU3089
 8953 3366 4801D0   		add	rax, rdx	# index_ptr, _329
 8954              	.LVL525:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8955              		.loc 1 206 10 is_stmt 1 view .LVU3090
 8956 3369 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8957 336c 763A     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8958              		.loc 1 207 8 view .LVU3091
 8959              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8960              		.loc 1 207 19 is_stmt 0 view .LVU3092
 8961 336e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8962              		.loc 1 208 8 is_stmt 1 view .LVU3093
 8963              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8964              		.loc 1 208 17 is_stmt 0 view .LVU3094
 8965 3371 4801D0   		add	rax, rdx	# index_ptr, _329
 8966              	.LVL526:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8967              		.loc 1 206 10 is_stmt 1 view .LVU3095
 8968 3374 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
GAS LISTING /tmp/ccW0oq2B.s 			page 250


 8969 3377 762F     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8970              		.loc 1 207 8 view .LVU3096
 8971              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8972              		.loc 1 207 19 is_stmt 0 view .LVU3097
 8973 3379 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8974              		.loc 1 208 8 is_stmt 1 view .LVU3098
 8975              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8976              		.loc 1 208 17 is_stmt 0 view .LVU3099
 8977 337c 4801D0   		add	rax, rdx	# index_ptr, _329
 8978              	.LVL527:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8979              		.loc 1 206 10 is_stmt 1 view .LVU3100
 8980 337f 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8981 3382 7624     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8982              		.loc 1 207 8 view .LVU3101
 8983              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8984              		.loc 1 207 19 is_stmt 0 view .LVU3102
 8985 3384 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8986              		.loc 1 208 8 is_stmt 1 view .LVU3103
 8987              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 8988              		.loc 1 208 17 is_stmt 0 view .LVU3104
 8989 3387 4801D0   		add	rax, rdx	# index_ptr, _329
 8990              	.LVL528:
 206:sieve_extend.c ****        *index_ptr |= mask;
 8991              		.loc 1 206 10 is_stmt 1 view .LVU3105
 8992 338a 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 8993 338d 7619     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 8994              		.loc 1 207 8 view .LVU3106
 8995              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 8996              		.loc 1 207 19 is_stmt 0 view .LVU3107
 8997 338f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 8998              		.loc 1 208 8 is_stmt 1 view .LVU3108
 8999              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9000              		.loc 1 208 17 is_stmt 0 view .LVU3109
 9001 3392 4801D0   		add	rax, rdx	# index_ptr, _329
 9002              	.LVL529:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9003              		.loc 1 206 10 is_stmt 1 view .LVU3110
 9004 3395 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9005 3398 760E     		jbe	.L709	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9006              		.loc 1 207 8 view .LVU3111
 9007              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9008              		.loc 1 207 19 is_stmt 0 view .LVU3112
GAS LISTING /tmp/ccW0oq2B.s 			page 251


 9009 339a 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_1140, offset: 0B], mask
 208:sieve_extend.c ****    }
 9010              		.loc 1 208 8 is_stmt 1 view .LVU3113
 9011              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9012              		.loc 1 208 17 is_stmt 0 view .LVU3114
 9013 339d 4801D0   		add	rax, rdx	# index_ptr, _329
 9014              	.LVL530:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9015              		.loc 1 206 10 is_stmt 1 view .LVU3115
 9016 33a0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9017 33a3 77A8     		ja	.L710	#,
 9018              		.p2align 4,,10
 9019 33a5 0F1F00   		.p2align 3
 9020              	.L709:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9021              		.loc 1 211 4 view .LVU3116
 9022              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9023              		.loc 1 211 7 is_stmt 0 view .LVU3117
 9024 33a8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9025 33ab 7413     		je	.L1581	#,
 9026              	.LVL531:
 9027              	.L711:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9028              		.loc 1 211 7 view .LVU3118
 9029              	.LBE471:
 9030              	.LBE474:
 9031              	.LBE477:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9032              		.loc 1 397 78 is_stmt 1 view .LVU3119
 9033              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9034              		.loc 1 397 84 is_stmt 0 view .LVU3120
 9035 33ad 4C01E3   		add	rbx, r12	# index, step
 9036              	.LVL532:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9037              		.loc 1 397 50 is_stmt 1 view .LVU3121
 9038              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 9039              		.loc 1 397 5 is_stmt 0 view .LVU3122
 9040 33b0 4C39EB   		cmp	rbx, r13	# index, tmp728
 9041 33b3 0F8677FE 		jbe	.L712	#,
 9041      FFFF
 9042 33b9 E97EF9FF 		jmp	.L1565	#
 9042      FF
 9043              	.LVL533:
 9044 33be 6690     		.p2align 4,,10
 9045              		.p2align 3
 9046              	.L1581:
 9047              	.LBB478:
 9048              	.LBB475:
 9049              	.LBB472:
 212:sieve_extend.c ****    }
 9050              		.loc 1 212 7 is_stmt 1 view .LVU3123
 9051              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
GAS LISTING /tmp/ccW0oq2B.s 			page 252


 9052              		.loc 1 212 27 is_stmt 0 view .LVU3124
 9053 33c0 4C21D9   		and	rcx, r11	# tmp799, _361
 9054              	.LVL534:
 9055              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9056              		.loc 1 212 18 view .LVU3125
 9057 33c3 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_1143, tmp799
 9058 33c6 EBE5     		jmp	.L711	#
 9059              	.LVL535:
 9060 33c8 0F1F8400 		.p2align 4,,10
 9060      00000000 
 9061              		.p2align 3
 9062              	.L1576:
 212:sieve_extend.c ****    }
 9063              		.loc 1 212 18 view .LVU3126
 9064              	.LBE472:
 9065              	.LBE475:
 9066              	.LBE478:
 9067              	.LBE480:
 9068              	.LBE482:
 9069              	.LBE508:
 969:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9070              		.loc 1 969 48 is_stmt 1 view .LVU3127
 9071              	.LBB509:
 9072              	.LBI509:
 283:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9073              		.loc 1 283 20 view .LVU3128
 9074              	.LBB510:
 284:sieve_extend.c **** 
 9075              		.loc 1 284 5 view .LVU3129
 286:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9076              		.loc 1 286 5 view .LVU3130
 9077              	# sieve_extend.c:286:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 286:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 9078              		.loc 1 286 8 is_stmt 0 view .LVU3131
 9079 33d0 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# tmp728, %sfp
 9079      38
 9080 33d5 48394C24 		cmp	QWORD PTR 112[rsp], rcx	# %sfp, tmp728
 9080      70
 9081 33da 0F82C002 		jb	.L684	#,
 9081      0000
 9082              	.LVL536:
 9083              	.LBB511:
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9084              		.loc 1 307 54 is_stmt 1 view .LVU3132
 9085              	# sieve_extend.c:307:         for (register counter_t index = range_start; index <= range_stop_uniq
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9086              		.loc 1 307 9 is_stmt 0 view .LVU3133
 9087 33e0 4885D2   		test	rdx, rdx	# _203
 9088 33e3 0F8558F9 		jne	.L678	#,
 9088      FFFF
 9089              	.LBB512:
 9090              	.LBB513:
 9091              	.LBB514:
 9092              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9093              		.loc 1 186 20 view .LVU3134
GAS LISTING /tmp/ccW0oq2B.s 			page 253


 9094 33e9 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# _66, %sfp
 9094      70
 9095              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9096              		.loc 1 188 84 view .LVU3135
 9097 33ee 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp736,
 9098              	# sieve_extend.c:186:    const counter_t range_stop_word = wordindex(range_stop);
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9099              		.loc 1 186 20 view .LVU3136
 9100 33f2 4989D2   		mov	r10, rdx	# range_stop_word, _66
 9101 33f5 49C1EA06 		shr	r10, 6	# range_stop_word,
 9102              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9103              		.loc 1 188 107 view .LVU3137
 9104 33f9 4C89D0   		mov	rax, r10	# tmp742, range_stop_word
 9105              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9106              		.loc 1 212 29 view .LVU3138
 9107 33fc 4189D1   		mov	r9d, edx	# tmp738, _66
 9108              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 9109              		.loc 1 188 107 view .LVU3139
 9110 33ff 4829F8   		sub	rax, rdi	# tmp742, tmp736
 9111              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9112              		.loc 1 212 29 view .LVU3140
 9113 3402 41F7D1   		not	r9d	# tmp738
 9114 3405 48C7C6FF 		mov	rsi, -1	# tmp2159,
 9114      FFFFFF
 9115 340c 4939FA   		cmp	r10, rdi	# range_stop_word, tmp736
 9116 340f 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, index
 9116      20
 9117              	# sieve_extend.c:205:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9118              		.loc 1 205 41 view .LVU3141
 9119 3414 4F8D04D6 		lea	r8, [r14+r10*8]	# range_stop_ptr,
 9120              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9121              		.loc 1 212 29 view .LVU3142
 9122 3418 C462B3F7 		shrx	r11, rsi, r9	# _234, tmp2159, tmp738
 9122      DE
 9123 341d 4D89E2   		mov	r10, r12	# _1777, step
 9124 3420 4D8D0CC6 		lea	r9, [r14+rax*8]	# tmp744,
 9125 3424 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# tmp728, %sfp
 9125      38
 9126 3429 4D0F46CE 		cmovbe	r9, r14	# _94,, prephitmp_1617
 9127              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 9128              		.loc 1 194 17 view .LVU3143
 9129 342d 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _202,
 9129      00000000 
 9130 3435 48C1E703 		sal	rdi, 3	# tmp748,
 9131 3439 49C1E204 		sal	r10, 4	# _1777,
 9132              	.LVL537:
 9133 343d 0F1F00   		.p2align 4,,10
 9134              		.p2align 3
 9135              	.L695:
GAS LISTING /tmp/ccW0oq2B.s 			page 254


 194:sieve_extend.c ****        *index_ptr |= mask;
 9136              		.loc 1 194 17 view .LVU3144
 9137              	.LBE514:
 9138              	.LBE513:
 308:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9139              		.loc 1 308 13 is_stmt 1 view .LVU3145
 9140              	# sieve_extend.c:308:             register counter_t index_word = wordindex(index);
 308:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9141              		.loc 1 308 32 is_stmt 0 view .LVU3146
 9142 3440 4889D8   		mov	rax, rbx	# index_word, index
 9143 3443 48C1E806 		shr	rax, 6	# index_word,
 9144              	.LVL538:
 309:sieve_extend.c ****             #pragma ivdep
 9145              		.loc 1 309 13 is_stmt 1 view .LVU3147
 9146              	# sieve_extend.c:309:             register bitword_t mask = SAFE_ZERO;
 309:sieve_extend.c ****             #pragma ivdep
 9147              		.loc 1 309 32 is_stmt 0 view .LVU3148
 9148 3447 31D2     		xor	edx, edx	# mask
 9149              	.LVL539:
 9150              	.L689:
 311:sieve_extend.c ****                 mask |= markmask(index);
 9151              		.loc 1 311 13 is_stmt 1 view .LVU3149
 312:sieve_extend.c ****                 index += step;
 9152              		.loc 1 312 17 view .LVU3150
 9153              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9154              		.loc 1 312 25 is_stmt 0 view .LVU3151
 9155 3449 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp750, tmp1047, index
 9155      F7
 9156              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9157              		.loc 1 313 23 view .LVU3152
 9158 344e 4C01E3   		add	rbx, r12	# index, step
 9159              	.LVL540:
 9160              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9161              		.loc 1 312 22 view .LVU3153
 9162 3451 4809F2   		or	rdx, rsi	# mask, tmp750
 9163              	.LVL541:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9164              		.loc 1 313 17 is_stmt 1 view .LVU3154
 314:sieve_extend.c ****             // #pragma ivdep
 9165              		.loc 1 314 21 view .LVU3155
 9166              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9167              		.loc 1 314 36 is_stmt 0 view .LVU3156
 9168 3454 4889DE   		mov	rsi, rbx	# tmp752, index
 9169 3457 48C1EE06 		shr	rsi, 6	# tmp752,
 9170              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9171              		.loc 1 314 13 view .LVU3157
 9172 345b 4839F0   		cmp	rax, rsi	# index_word, tmp752
 9173 345e 0F85AC00 		jne	.L1369	#,
 9173      0000
 311:sieve_extend.c ****                 mask |= markmask(index);
 9174              		.loc 1 311 13 is_stmt 1 view .LVU3158
 312:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccW0oq2B.s 			page 255


 9175              		.loc 1 312 17 view .LVU3159
 9176              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9177              		.loc 1 312 25 is_stmt 0 view .LVU3160
 9178 3464 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1613, tmp1047, index
 9178      F7
 9179              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9180              		.loc 1 313 23 view .LVU3161
 9181 3469 4C01E3   		add	rbx, r12	# index, step
 9182              	.LVL542:
 9183              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9184              		.loc 1 312 22 view .LVU3162
 9185 346c 4809F2   		or	rdx, rsi	# mask, tmp1613
 9186              	.LVL543:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9187              		.loc 1 313 17 is_stmt 1 view .LVU3163
 314:sieve_extend.c ****             // #pragma ivdep
 9188              		.loc 1 314 21 view .LVU3164
 9189              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9190              		.loc 1 314 36 is_stmt 0 view .LVU3165
 9191 346f 4889DE   		mov	rsi, rbx	# tmp1614, index
 9192 3472 48C1EE06 		shr	rsi, 6	# tmp1614,
 9193              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9194              		.loc 1 314 13 view .LVU3166
 9195 3476 4839F0   		cmp	rax, rsi	# index_word, tmp1614
 9196 3479 0F859100 		jne	.L1369	#,
 9196      0000
 311:sieve_extend.c ****                 mask |= markmask(index);
 9197              		.loc 1 311 13 is_stmt 1 view .LVU3167
 312:sieve_extend.c ****                 index += step;
 9198              		.loc 1 312 17 view .LVU3168
 9199              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9200              		.loc 1 312 25 is_stmt 0 view .LVU3169
 9201 347f C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1615, tmp1047, index
 9201      F7
 9202              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9203              		.loc 1 313 23 view .LVU3170
 9204 3484 4C01E3   		add	rbx, r12	# index, step
 9205              	.LVL544:
 9206              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9207              		.loc 1 312 22 view .LVU3171
 9208 3487 4809F2   		or	rdx, rsi	# mask, tmp1615
 9209              	.LVL545:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9210              		.loc 1 313 17 is_stmt 1 view .LVU3172
 314:sieve_extend.c ****             // #pragma ivdep
 9211              		.loc 1 314 21 view .LVU3173
 9212              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9213              		.loc 1 314 36 is_stmt 0 view .LVU3174
GAS LISTING /tmp/ccW0oq2B.s 			page 256


 9214 348a 4889DE   		mov	rsi, rbx	# tmp1616, index
 9215 348d 48C1EE06 		shr	rsi, 6	# tmp1616,
 9216              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9217              		.loc 1 314 13 view .LVU3175
 9218 3491 4839F0   		cmp	rax, rsi	# index_word, tmp1616
 9219 3494 757A     		jne	.L1369	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 9220              		.loc 1 311 13 is_stmt 1 view .LVU3176
 312:sieve_extend.c ****                 index += step;
 9221              		.loc 1 312 17 view .LVU3177
 9222              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9223              		.loc 1 312 25 is_stmt 0 view .LVU3178
 9224 3496 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1617, tmp1047, index
 9224      F7
 9225              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9226              		.loc 1 313 23 view .LVU3179
 9227 349b 4C01E3   		add	rbx, r12	# index, step
 9228              	.LVL546:
 9229              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9230              		.loc 1 312 22 view .LVU3180
 9231 349e 4809F2   		or	rdx, rsi	# mask, tmp1617
 9232              	.LVL547:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9233              		.loc 1 313 17 is_stmt 1 view .LVU3181
 314:sieve_extend.c ****             // #pragma ivdep
 9234              		.loc 1 314 21 view .LVU3182
 9235              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9236              		.loc 1 314 36 is_stmt 0 view .LVU3183
 9237 34a1 4889DE   		mov	rsi, rbx	# tmp1618, index
 9238 34a4 48C1EE06 		shr	rsi, 6	# tmp1618,
 9239              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9240              		.loc 1 314 13 view .LVU3184
 9241 34a8 4839F0   		cmp	rax, rsi	# index_word, tmp1618
 9242 34ab 7563     		jne	.L1369	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 9243              		.loc 1 311 13 is_stmt 1 view .LVU3185
 312:sieve_extend.c ****                 index += step;
 9244              		.loc 1 312 17 view .LVU3186
 9245              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9246              		.loc 1 312 25 is_stmt 0 view .LVU3187
 9247 34ad C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1619, tmp1047, index
 9247      F7
 9248              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9249              		.loc 1 313 23 view .LVU3188
 9250 34b2 4C01E3   		add	rbx, r12	# index, step
 9251              	.LVL548:
 9252              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9253              		.loc 1 312 22 view .LVU3189
GAS LISTING /tmp/ccW0oq2B.s 			page 257


 9254 34b5 4809F2   		or	rdx, rsi	# mask, tmp1619
 9255              	.LVL549:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9256              		.loc 1 313 17 is_stmt 1 view .LVU3190
 314:sieve_extend.c ****             // #pragma ivdep
 9257              		.loc 1 314 21 view .LVU3191
 9258              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9259              		.loc 1 314 36 is_stmt 0 view .LVU3192
 9260 34b8 4889DE   		mov	rsi, rbx	# tmp1620, index
 9261 34bb 48C1EE06 		shr	rsi, 6	# tmp1620,
 9262              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9263              		.loc 1 314 13 view .LVU3193
 9264 34bf 4839F0   		cmp	rax, rsi	# index_word, tmp1620
 9265 34c2 754C     		jne	.L1369	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 9266              		.loc 1 311 13 is_stmt 1 view .LVU3194
 312:sieve_extend.c ****                 index += step;
 9267              		.loc 1 312 17 view .LVU3195
 9268              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9269              		.loc 1 312 25 is_stmt 0 view .LVU3196
 9270 34c4 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1621, tmp1047, index
 9270      F7
 9271              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9272              		.loc 1 313 23 view .LVU3197
 9273 34c9 4C01E3   		add	rbx, r12	# index, step
 9274              	.LVL550:
 9275              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9276              		.loc 1 312 22 view .LVU3198
 9277 34cc 4809F2   		or	rdx, rsi	# mask, tmp1621
 9278              	.LVL551:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9279              		.loc 1 313 17 is_stmt 1 view .LVU3199
 314:sieve_extend.c ****             // #pragma ivdep
 9280              		.loc 1 314 21 view .LVU3200
 9281              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9282              		.loc 1 314 36 is_stmt 0 view .LVU3201
 9283 34cf 4889DE   		mov	rsi, rbx	# tmp1622, index
 9284 34d2 48C1EE06 		shr	rsi, 6	# tmp1622,
 9285              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9286              		.loc 1 314 13 view .LVU3202
 9287 34d6 4839F0   		cmp	rax, rsi	# index_word, tmp1622
 9288 34d9 7535     		jne	.L1369	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 9289              		.loc 1 311 13 is_stmt 1 view .LVU3203
 312:sieve_extend.c ****                 index += step;
 9290              		.loc 1 312 17 view .LVU3204
 9291              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9292              		.loc 1 312 25 is_stmt 0 view .LVU3205
 9293 34db C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1623, tmp1047, index
GAS LISTING /tmp/ccW0oq2B.s 			page 258


 9293      F7
 9294              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9295              		.loc 1 313 23 view .LVU3206
 9296 34e0 4C01E3   		add	rbx, r12	# index, step
 9297              	.LVL552:
 9298              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9299              		.loc 1 312 22 view .LVU3207
 9300 34e3 4809F2   		or	rdx, rsi	# mask, tmp1623
 9301              	.LVL553:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9302              		.loc 1 313 17 is_stmt 1 view .LVU3208
 314:sieve_extend.c ****             // #pragma ivdep
 9303              		.loc 1 314 21 view .LVU3209
 9304              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9305              		.loc 1 314 36 is_stmt 0 view .LVU3210
 9306 34e6 4889DE   		mov	rsi, rbx	# tmp1624, index
 9307 34e9 48C1EE06 		shr	rsi, 6	# tmp1624,
 9308              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9309              		.loc 1 314 13 view .LVU3211
 9310 34ed 4839F0   		cmp	rax, rsi	# index_word, tmp1624
 9311 34f0 751E     		jne	.L1369	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 9312              		.loc 1 311 13 is_stmt 1 view .LVU3212
 312:sieve_extend.c ****                 index += step;
 9313              		.loc 1 312 17 view .LVU3213
 9314              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9315              		.loc 1 312 25 is_stmt 0 view .LVU3214
 9316 34f2 C4C2E1F7 		shlx	rsi, r15, rbx	# tmp1625, tmp1047, index
 9316      F7
 9317              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9318              		.loc 1 313 23 view .LVU3215
 9319 34f7 4C01E3   		add	rbx, r12	# index, step
 9320              	.LVL554:
 9321              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 9322              		.loc 1 312 22 view .LVU3216
 9323 34fa 4809F2   		or	rdx, rsi	# mask, tmp1625
 9324              	.LVL555:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 9325              		.loc 1 313 17 is_stmt 1 view .LVU3217
 314:sieve_extend.c ****             // #pragma ivdep
 9326              		.loc 1 314 21 view .LVU3218
 9327              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9328              		.loc 1 314 36 is_stmt 0 view .LVU3219
 9329 34fd 4889DE   		mov	rsi, rbx	# tmp1626, index
 9330 3500 48C1EE06 		shr	rsi, 6	# tmp1626,
 9331              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 9332              		.loc 1 314 13 view .LVU3220
 9333 3504 4839F0   		cmp	rax, rsi	# index_word, tmp1626
GAS LISTING /tmp/ccW0oq2B.s 			page 259


 9334 3507 0F843CFF 		je	.L689	#,
 9334      FFFF
 9335 350d 0F1F00   		.p2align 4,,10
 9336              		.p2align 3
 9337              	.L1369:
 318:sieve_extend.c ****         }
 9338              		.loc 1 318 13 is_stmt 1 view .LVU3221
 9339              	.LVL556:
 9340              	.LBB517:
 9341              	.LBI513:
 154:sieve_extend.c **** // #if __APPLE__
 9342              		.loc 1 154 20 view .LVU3222
 9343              	.LBB515:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9344              		.loc 1 186 4 view .LVU3223
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 9345              		.loc 1 187 4 view .LVU3224
 9346              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 9347              		.loc 1 187 78 is_stmt 0 view .LVU3225
 9348 3510 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 9349              	.LVL557:
 188:sieve_extend.c **** 
 9350              		.loc 1 188 4 is_stmt 1 view .LVU3226
 192:sieve_extend.c ****        *index_ptr |= mask;
 9351              		.loc 1 192 4 view .LVU3227
 192:sieve_extend.c ****        *index_ptr |= mask;
 9352              		.loc 1 192 10 view .LVU3228
 9353 3514 4C39C8   		cmp	rax, r9	# index_ptr, prephitmp_1617
 9354 3517 0F830301 		jnb	.L690	#,
 9354      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 9355              		.loc 1 192 10 is_stmt 0 view .LVU3229
 9356 351d 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.598,
 9357              	.L691:
 193:sieve_extend.c ****        index_ptr+=step;
 9358              		.loc 1 193 8 is_stmt 1 view .LVU3230
 9359              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9360              		.loc 1 193 19 is_stmt 0 view .LVU3231
 9361 3521 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9362              		.loc 1 194 8 is_stmt 1 view .LVU3232
 9363              	.LVL558:
 195:sieve_extend.c ****        index_ptr+=step;
 9364              		.loc 1 195 8 view .LVU3233
 9365              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9366              		.loc 1 195 19 is_stmt 0 view .LVU3234
 9367 3524 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9368              		.loc 1 196 8 is_stmt 1 view .LVU3235
 9369              	.LVL559:
 197:sieve_extend.c ****        index_ptr+=step;
 9370              		.loc 1 197 8 view .LVU3236
 9371              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW0oq2B.s 			page 260


 9372              		.loc 1 197 19 is_stmt 0 view .LVU3237
 9373 3528 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9374              		.loc 1 198 8 is_stmt 1 view .LVU3238
 9375              	.LVL560:
 199:sieve_extend.c ****        index_ptr+=step;
 9376              		.loc 1 199 8 view .LVU3239
 9377              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9378              		.loc 1 199 19 is_stmt 0 view .LVU3240
 9379 352b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9380              		.loc 1 200 8 is_stmt 1 view .LVU3241
 9381              	.LVL561:
 201:sieve_extend.c ****        index_ptr+=step;
 9382              		.loc 1 201 8 view .LVU3242
 9383 352f 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9384              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9385              		.loc 1 201 19 is_stmt 0 view .LVU3243
 9386 3532 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9387              		.loc 1 202 8 is_stmt 1 view .LVU3244
 9388 3536 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9389              	.LVL562:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9390              		.loc 1 192 10 view .LVU3245
 9391 3539 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9392 353c 0F86DE00 		jbe	.L690	#,
 9392      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9393              		.loc 1 193 8 view .LVU3246
 9394              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9395              		.loc 1 193 19 is_stmt 0 view .LVU3247
 9396 3542 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9397              		.loc 1 194 8 is_stmt 1 view .LVU3248
 9398              	.LVL563:
 195:sieve_extend.c ****        index_ptr+=step;
 9399              		.loc 1 195 8 view .LVU3249
 9400              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9401              		.loc 1 195 19 is_stmt 0 view .LVU3250
 9402 3545 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9403              		.loc 1 196 8 is_stmt 1 view .LVU3251
 9404              	.LVL564:
 197:sieve_extend.c ****        index_ptr+=step;
 9405              		.loc 1 197 8 view .LVU3252
 9406              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9407              		.loc 1 197 19 is_stmt 0 view .LVU3253
 9408 3549 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9409              		.loc 1 198 8 is_stmt 1 view .LVU3254
 9410              	.LVL565:
GAS LISTING /tmp/ccW0oq2B.s 			page 261


 199:sieve_extend.c ****        index_ptr+=step;
 9411              		.loc 1 199 8 view .LVU3255
 9412              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9413              		.loc 1 199 19 is_stmt 0 view .LVU3256
 9414 354c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9415              		.loc 1 200 8 is_stmt 1 view .LVU3257
 9416              	.LVL566:
 201:sieve_extend.c ****        index_ptr+=step;
 9417              		.loc 1 201 8 view .LVU3258
 9418 3550 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9419              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9420              		.loc 1 201 19 is_stmt 0 view .LVU3259
 9421 3553 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9422              		.loc 1 202 8 is_stmt 1 view .LVU3260
 9423 3557 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9424              	.LVL567:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9425              		.loc 1 192 10 view .LVU3261
 9426 355a 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9427 355d 0F86BD00 		jbe	.L690	#,
 9427      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9428              		.loc 1 193 8 view .LVU3262
 9429              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9430              		.loc 1 193 19 is_stmt 0 view .LVU3263
 9431 3563 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9432              		.loc 1 194 8 is_stmt 1 view .LVU3264
 9433              	.LVL568:
 195:sieve_extend.c ****        index_ptr+=step;
 9434              		.loc 1 195 8 view .LVU3265
 9435              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9436              		.loc 1 195 19 is_stmt 0 view .LVU3266
 9437 3566 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9438              		.loc 1 196 8 is_stmt 1 view .LVU3267
 9439              	.LVL569:
 197:sieve_extend.c ****        index_ptr+=step;
 9440              		.loc 1 197 8 view .LVU3268
 9441              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9442              		.loc 1 197 19 is_stmt 0 view .LVU3269
 9443 356a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9444              		.loc 1 198 8 is_stmt 1 view .LVU3270
 9445              	.LVL570:
 199:sieve_extend.c ****        index_ptr+=step;
 9446              		.loc 1 199 8 view .LVU3271
 9447              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9448              		.loc 1 199 19 is_stmt 0 view .LVU3272
GAS LISTING /tmp/ccW0oq2B.s 			page 262


 9449 356d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9450              		.loc 1 200 8 is_stmt 1 view .LVU3273
 9451              	.LVL571:
 201:sieve_extend.c ****        index_ptr+=step;
 9452              		.loc 1 201 8 view .LVU3274
 9453 3571 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9454              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9455              		.loc 1 201 19 is_stmt 0 view .LVU3275
 9456 3574 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9457              		.loc 1 202 8 is_stmt 1 view .LVU3276
 9458 3578 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9459              	.LVL572:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9460              		.loc 1 192 10 view .LVU3277
 9461 357b 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9462 357e 0F869C00 		jbe	.L690	#,
 9462      0000
 193:sieve_extend.c ****        index_ptr+=step;
 9463              		.loc 1 193 8 view .LVU3278
 9464              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9465              		.loc 1 193 19 is_stmt 0 view .LVU3279
 9466 3584 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9467              		.loc 1 194 8 is_stmt 1 view .LVU3280
 9468              	.LVL573:
 195:sieve_extend.c ****        index_ptr+=step;
 9469              		.loc 1 195 8 view .LVU3281
 9470              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9471              		.loc 1 195 19 is_stmt 0 view .LVU3282
 9472 3587 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9473              		.loc 1 196 8 is_stmt 1 view .LVU3283
 9474              	.LVL574:
 197:sieve_extend.c ****        index_ptr+=step;
 9475              		.loc 1 197 8 view .LVU3284
 9476              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9477              		.loc 1 197 19 is_stmt 0 view .LVU3285
 9478 358b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9479              		.loc 1 198 8 is_stmt 1 view .LVU3286
 9480              	.LVL575:
 199:sieve_extend.c ****        index_ptr+=step;
 9481              		.loc 1 199 8 view .LVU3287
 9482              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9483              		.loc 1 199 19 is_stmt 0 view .LVU3288
 9484 358e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9485              		.loc 1 200 8 is_stmt 1 view .LVU3289
 9486              	.LVL576:
 201:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW0oq2B.s 			page 263


 9487              		.loc 1 201 8 view .LVU3290
 9488 3592 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9489              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9490              		.loc 1 201 19 is_stmt 0 view .LVU3291
 9491 3595 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9492              		.loc 1 202 8 is_stmt 1 view .LVU3292
 9493 3599 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9494              	.LVL577:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9495              		.loc 1 192 10 view .LVU3293
 9496 359c 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9497 359f 767F     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9498              		.loc 1 193 8 view .LVU3294
 9499              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9500              		.loc 1 193 19 is_stmt 0 view .LVU3295
 9501 35a1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9502              		.loc 1 194 8 is_stmt 1 view .LVU3296
 9503              	.LVL578:
 195:sieve_extend.c ****        index_ptr+=step;
 9504              		.loc 1 195 8 view .LVU3297
 9505              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9506              		.loc 1 195 19 is_stmt 0 view .LVU3298
 9507 35a4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9508              		.loc 1 196 8 is_stmt 1 view .LVU3299
 9509              	.LVL579:
 197:sieve_extend.c ****        index_ptr+=step;
 9510              		.loc 1 197 8 view .LVU3300
 9511              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9512              		.loc 1 197 19 is_stmt 0 view .LVU3301
 9513 35a8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9514              		.loc 1 198 8 is_stmt 1 view .LVU3302
 9515              	.LVL580:
 199:sieve_extend.c ****        index_ptr+=step;
 9516              		.loc 1 199 8 view .LVU3303
 9517              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9518              		.loc 1 199 19 is_stmt 0 view .LVU3304
 9519 35ab 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9520              		.loc 1 200 8 is_stmt 1 view .LVU3305
 9521              	.LVL581:
 201:sieve_extend.c ****        index_ptr+=step;
 9522              		.loc 1 201 8 view .LVU3306
 9523 35af 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9524              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9525              		.loc 1 201 19 is_stmt 0 view .LVU3307
 9526 35b2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
GAS LISTING /tmp/ccW0oq2B.s 			page 264


 202:sieve_extend.c ****    }
 9527              		.loc 1 202 8 is_stmt 1 view .LVU3308
 9528 35b6 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9529              	.LVL582:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9530              		.loc 1 192 10 view .LVU3309
 9531 35b9 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9532 35bc 7662     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9533              		.loc 1 193 8 view .LVU3310
 9534              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9535              		.loc 1 193 19 is_stmt 0 view .LVU3311
 9536 35be 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9537              		.loc 1 194 8 is_stmt 1 view .LVU3312
 9538              	.LVL583:
 195:sieve_extend.c ****        index_ptr+=step;
 9539              		.loc 1 195 8 view .LVU3313
 9540              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9541              		.loc 1 195 19 is_stmt 0 view .LVU3314
 9542 35c1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9543              		.loc 1 196 8 is_stmt 1 view .LVU3315
 9544              	.LVL584:
 197:sieve_extend.c ****        index_ptr+=step;
 9545              		.loc 1 197 8 view .LVU3316
 9546              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9547              		.loc 1 197 19 is_stmt 0 view .LVU3317
 9548 35c5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9549              		.loc 1 198 8 is_stmt 1 view .LVU3318
 9550              	.LVL585:
 199:sieve_extend.c ****        index_ptr+=step;
 9551              		.loc 1 199 8 view .LVU3319
 9552              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9553              		.loc 1 199 19 is_stmt 0 view .LVU3320
 9554 35c8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9555              		.loc 1 200 8 is_stmt 1 view .LVU3321
 9556              	.LVL586:
 201:sieve_extend.c ****        index_ptr+=step;
 9557              		.loc 1 201 8 view .LVU3322
 9558 35cc 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9559              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9560              		.loc 1 201 19 is_stmt 0 view .LVU3323
 9561 35cf 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9562              		.loc 1 202 8 is_stmt 1 view .LVU3324
 9563 35d3 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9564              	.LVL587:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9565              		.loc 1 192 10 view .LVU3325
GAS LISTING /tmp/ccW0oq2B.s 			page 265


 9566 35d6 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9567 35d9 7645     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9568              		.loc 1 193 8 view .LVU3326
 9569              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 9570              		.loc 1 193 19 is_stmt 0 view .LVU3327
 9571 35db 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9572              		.loc 1 194 8 is_stmt 1 view .LVU3328
 9573              	.LVL588:
 195:sieve_extend.c ****        index_ptr+=step;
 9574              		.loc 1 195 8 view .LVU3329
 9575              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9576              		.loc 1 195 19 is_stmt 0 view .LVU3330
 9577 35de 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9578              		.loc 1 196 8 is_stmt 1 view .LVU3331
 9579              	.LVL589:
 197:sieve_extend.c ****        index_ptr+=step;
 9580              		.loc 1 197 8 view .LVU3332
 9581              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9582              		.loc 1 197 19 is_stmt 0 view .LVU3333
 9583 35e2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9584              		.loc 1 198 8 is_stmt 1 view .LVU3334
 9585              	.LVL590:
 199:sieve_extend.c ****        index_ptr+=step;
 9586              		.loc 1 199 8 view .LVU3335
 9587              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9588              		.loc 1 199 19 is_stmt 0 view .LVU3336
 9589 35e5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9590              		.loc 1 200 8 is_stmt 1 view .LVU3337
 9591              	.LVL591:
 201:sieve_extend.c ****        index_ptr+=step;
 9592              		.loc 1 201 8 view .LVU3338
 9593 35e9 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9594              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9595              		.loc 1 201 19 is_stmt 0 view .LVU3339
 9596 35ec 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9597              		.loc 1 202 8 is_stmt 1 view .LVU3340
 9598 35f0 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9599              	.LVL592:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9600              		.loc 1 192 10 view .LVU3341
 9601 35f3 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9602 35f6 7628     		jbe	.L690	#,
 193:sieve_extend.c ****        index_ptr+=step;
 9603              		.loc 1 193 8 view .LVU3342
 9604              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW0oq2B.s 			page 266


 9605              		.loc 1 193 19 is_stmt 0 view .LVU3343
 9606 35f8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1150, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 9607              		.loc 1 194 8 is_stmt 1 view .LVU3344
 9608              	.LVL593:
 195:sieve_extend.c ****        index_ptr+=step;
 9609              		.loc 1 195 8 view .LVU3345
 9610              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 9611              		.loc 1 195 19 is_stmt 0 view .LVU3346
 9612 35fb 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_1150, index: _202, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 9613              		.loc 1 196 8 is_stmt 1 view .LVU3347
 9614              	.LVL594:
 197:sieve_extend.c ****        index_ptr+=step;
 9615              		.loc 1 197 8 view .LVU3348
 9616              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 9617              		.loc 1 197 19 is_stmt 0 view .LVU3349
 9618 35ff 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1771, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 9619              		.loc 1 198 8 is_stmt 1 view .LVU3350
 9620              	.LVL595:
 199:sieve_extend.c ****        index_ptr+=step;
 9621              		.loc 1 199 8 view .LVU3351
 9622              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 9623              		.loc 1 199 19 is_stmt 0 view .LVU3352
 9624 3602 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1771, index: _202, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 9625              		.loc 1 200 8 is_stmt 1 view .LVU3353
 9626              	.LVL596:
 201:sieve_extend.c ****        index_ptr+=step;
 9627              		.loc 1 201 8 view .LVU3354
 9628 3606 4801FE   		add	rsi, rdi	# ivtmp.598, tmp748
 9629              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 9630              		.loc 1 201 19 is_stmt 0 view .LVU3355
 9631 3609 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_1150, index: _202, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 9632              		.loc 1 202 8 is_stmt 1 view .LVU3356
 9633 360d 4801F8   		add	rax, rdi	# index_ptr, tmp748
 9634              	.LVL597:
 192:sieve_extend.c ****        *index_ptr |= mask;
 9635              		.loc 1 192 10 view .LVU3357
 9636 3610 4939C1   		cmp	r9, rax	# prephitmp_1617, index_ptr
 9637 3613 0F8708FF 		ja	.L691	#,
 9637      FFFF
 9638 3619 0F1F8000 		.p2align 4,,10
 9638      000000
 9639              		.p2align 3
 9640              	.L690:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9641              		.loc 1 205 4 view .LVU3358
 206:sieve_extend.c ****        *index_ptr |= mask;
 9642              		.loc 1 206 4 view .LVU3359
 206:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 267


 9643              		.loc 1 206 10 view .LVU3360
 9644 3620 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9645 3623 765B     		jbe	.L692	#,
 9646              	.L693:
 207:sieve_extend.c ****        index_ptr+=step;
 9647              		.loc 1 207 8 view .LVU3361
 9648              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9649              		.loc 1 207 19 is_stmt 0 view .LVU3362
 9650 3625 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9651              		.loc 1 208 8 is_stmt 1 view .LVU3363
 9652              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9653              		.loc 1 208 17 is_stmt 0 view .LVU3364
 9654 3628 4801C8   		add	rax, rcx	# index_ptr, _202
 9655              	.LVL598:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9656              		.loc 1 206 10 is_stmt 1 view .LVU3365
 9657 362b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9658 362e 7650     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9659              		.loc 1 207 8 view .LVU3366
 9660              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9661              		.loc 1 207 19 is_stmt 0 view .LVU3367
 9662 3630 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9663              		.loc 1 208 8 is_stmt 1 view .LVU3368
 9664              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9665              		.loc 1 208 17 is_stmt 0 view .LVU3369
 9666 3633 4801C8   		add	rax, rcx	# index_ptr, _202
 9667              	.LVL599:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9668              		.loc 1 206 10 is_stmt 1 view .LVU3370
 9669 3636 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9670 3639 7645     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9671              		.loc 1 207 8 view .LVU3371
 9672              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9673              		.loc 1 207 19 is_stmt 0 view .LVU3372
 9674 363b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9675              		.loc 1 208 8 is_stmt 1 view .LVU3373
 9676              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9677              		.loc 1 208 17 is_stmt 0 view .LVU3374
 9678 363e 4801C8   		add	rax, rcx	# index_ptr, _202
 9679              	.LVL600:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9680              		.loc 1 206 10 is_stmt 1 view .LVU3375
 9681 3641 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9682 3644 763A     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9683              		.loc 1 207 8 view .LVU3376
GAS LISTING /tmp/ccW0oq2B.s 			page 268


 9684              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9685              		.loc 1 207 19 is_stmt 0 view .LVU3377
 9686 3646 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9687              		.loc 1 208 8 is_stmt 1 view .LVU3378
 9688              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9689              		.loc 1 208 17 is_stmt 0 view .LVU3379
 9690 3649 4801C8   		add	rax, rcx	# index_ptr, _202
 9691              	.LVL601:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9692              		.loc 1 206 10 is_stmt 1 view .LVU3380
 9693 364c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9694 364f 762F     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9695              		.loc 1 207 8 view .LVU3381
 9696              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9697              		.loc 1 207 19 is_stmt 0 view .LVU3382
 9698 3651 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9699              		.loc 1 208 8 is_stmt 1 view .LVU3383
 9700              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9701              		.loc 1 208 17 is_stmt 0 view .LVU3384
 9702 3654 4801C8   		add	rax, rcx	# index_ptr, _202
 9703              	.LVL602:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9704              		.loc 1 206 10 is_stmt 1 view .LVU3385
 9705 3657 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9706 365a 7624     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9707              		.loc 1 207 8 view .LVU3386
 9708              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9709              		.loc 1 207 19 is_stmt 0 view .LVU3387
 9710 365c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9711              		.loc 1 208 8 is_stmt 1 view .LVU3388
 9712              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9713              		.loc 1 208 17 is_stmt 0 view .LVU3389
 9714 365f 4801C8   		add	rax, rcx	# index_ptr, _202
 9715              	.LVL603:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9716              		.loc 1 206 10 is_stmt 1 view .LVU3390
 9717 3662 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9718 3665 7619     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9719              		.loc 1 207 8 view .LVU3391
 9720              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9721              		.loc 1 207 19 is_stmt 0 view .LVU3392
 9722 3667 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9723              		.loc 1 208 8 is_stmt 1 view .LVU3393
GAS LISTING /tmp/ccW0oq2B.s 			page 269


 9724              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9725              		.loc 1 208 17 is_stmt 0 view .LVU3394
 9726 366a 4801C8   		add	rax, rcx	# index_ptr, _202
 9727              	.LVL604:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9728              		.loc 1 206 10 is_stmt 1 view .LVU3395
 9729 366d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9730 3670 760E     		jbe	.L692	#,
 207:sieve_extend.c ****        index_ptr+=step;
 9731              		.loc 1 207 8 view .LVU3396
 9732              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 9733              		.loc 1 207 19 is_stmt 0 view .LVU3397
 9734 3672 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_729, offset: 0B], mask
 208:sieve_extend.c ****    }
 9735              		.loc 1 208 8 is_stmt 1 view .LVU3398
 9736              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 9737              		.loc 1 208 17 is_stmt 0 view .LVU3399
 9738 3675 4801C8   		add	rax, rcx	# index_ptr, _202
 9739              	.LVL605:
 206:sieve_extend.c ****        *index_ptr |= mask;
 9740              		.loc 1 206 10 is_stmt 1 view .LVU3400
 9741 3678 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9742 367b 77A8     		ja	.L693	#,
 9743 367d 0F1F00   		.p2align 4,,10
 9744              		.p2align 3
 9745              	.L692:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9746              		.loc 1 211 4 view .LVU3401
 9747              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9748              		.loc 1 211 7 is_stmt 0 view .LVU3402
 9749 3680 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9750 3683 7413     		je	.L1582	#,
 9751              	.LVL606:
 9752              	.L694:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9753              		.loc 1 211 7 view .LVU3403
 9754              	.LBE515:
 9755              	.LBE517:
 9756              	.LBE512:
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9757              		.loc 1 307 54 is_stmt 1 view .LVU3404
 9758              	# sieve_extend.c:307:         for (register counter_t index = range_start; index <= range_stop_uniq
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9759              		.loc 1 307 9 is_stmt 0 view .LVU3405
 9760 3685 4C39EB   		cmp	rbx, r13	# index, tmp728
 9761 3688 0F86B2FD 		jbe	.L695	#,
 9761      FFFF
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9762              		.loc 1 307 9 view .LVU3406
 9763 368e E9A9F6FF 		jmp	.L1565	#
 9763      FF
 9764              	.LVL607:
 9765              		.p2align 4,,10
GAS LISTING /tmp/ccW0oq2B.s 			page 270


 9766 3693 0F1F4400 		.p2align 3
 9766      00
 9767              	.L1582:
 9768              	.LBB519:
 9769              	.LBB518:
 9770              	.LBB516:
 212:sieve_extend.c ****    }
 9771              		.loc 1 212 7 is_stmt 1 view .LVU3407
 9772              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9773              		.loc 1 212 27 is_stmt 0 view .LVU3408
 9774 3698 4C21DA   		and	rdx, r11	# tmp754, _234
 9775              	.LVL608:
 9776              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 9777              		.loc 1 212 18 view .LVU3409
 9778 369b 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_1149, tmp754
 9779 369e EBE5     		jmp	.L694	#
 9780              	.LVL609:
 9781              		.p2align 4,,10
 9782              		.p2align 3
 9783              	.L684:
 212:sieve_extend.c ****    }
 9784              		.loc 1 212 18 view .LVU3410
 9785              	.LBE516:
 9786              	.LBE518:
 9787              	.LBE519:
 9788              	.LBE511:
 9789              	.LBB520:
 9790              	.LBB521:
 9791              	.LBB522:
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9792              		.loc 1 290 54 is_stmt 1 view .LVU3411
 9793              	# sieve_extend.c:290:         for (register counter_t index = range_start; index <= range_stop;) {
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 9794              		.loc 1 290 9 is_stmt 0 view .LVU3412
 9795 36a0 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	# _66, %sfp
 9795      70
 9796 36a5 4839DF   		cmp	rdi, rbx	# _66, index
 9797 36a8 0F8293F6 		jb	.L678	#,
 9797      FFFF
 9798              	.LVL610:
 9799 36ae 6690     		.p2align 4,,10
 9800              		.p2align 3
 9801              	.L688:
 9802              	.LBB523:
 291:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9803              		.loc 1 291 13 is_stmt 1 view .LVU3413
 9804              	# sieve_extend.c:291:             register counter_t index_word = wordindex(index);
 291:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 9805              		.loc 1 291 32 is_stmt 0 view .LVU3414
 9806 36b0 4989D8   		mov	r8, rbx	# index_word, index
 9807 36b3 49C1E806 		shr	r8, 6	# index_word,
 9808              	.LVL611:
 292:sieve_extend.c ****             #pragma ivdep
 9809              		.loc 1 292 13 is_stmt 1 view .LVU3415
 9810              	# sieve_extend.c:292:             register bitword_t mask = SAFE_ZERO;
GAS LISTING /tmp/ccW0oq2B.s 			page 271


 292:sieve_extend.c ****             #pragma ivdep
 9811              		.loc 1 292 32 is_stmt 0 view .LVU3416
 9812 36b7 4531DB   		xor	r11d, r11d	# mask
 9813              	.LVL612:
 9814              	.L687:
 294:sieve_extend.c ****                 mask |= markmask(index);
 9815              		.loc 1 294 13 is_stmt 1 view .LVU3417
 295:sieve_extend.c ****                 index += step;
 9816              		.loc 1 295 17 view .LVU3418
 9817              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9818              		.loc 1 295 25 is_stmt 0 view .LVU3419
 9819 36ba C4C2E1F7 		shlx	rcx, r15, rbx	# tmp730, tmp1047, index
 9819      CF
 9820              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9821              		.loc 1 296 23 view .LVU3420
 9822 36bf 4C01E3   		add	rbx, r12	# index, step
 9823              	.LVL613:
 9824              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9825              		.loc 1 297 36 view .LVU3421
 9826 36c2 4989D9   		mov	r9, rbx	# tmp732, index
 9827 36c5 49C1E906 		shr	r9, 6	# tmp732,
 9828              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9829              		.loc 1 295 22 view .LVU3422
 9830 36c9 4909CB   		or	r11, rcx	# mask, tmp730
 9831              	.LVL614:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9832              		.loc 1 296 17 is_stmt 1 view .LVU3423
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9833              		.loc 1 297 21 view .LVU3424
 9834              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9835              		.loc 1 297 13 is_stmt 0 view .LVU3425
 9836 36cc 4D39C8   		cmp	r8, r9	# index_word, tmp732
 9837 36cf 0F85AB00 		jne	.L1368	#,
 9837      0000
 294:sieve_extend.c ****                 mask |= markmask(index);
 9838              		.loc 1 294 13 is_stmt 1 view .LVU3426
 295:sieve_extend.c ****                 index += step;
 9839              		.loc 1 295 17 view .LVU3427
 9840              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9841              		.loc 1 295 25 is_stmt 0 view .LVU3428
 9842 36d5 C442E1F7 		shlx	r10, r15, rbx	# tmp1593, tmp1047, index
 9842      D7
 9843              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9844              		.loc 1 296 23 view .LVU3429
 9845 36da 4C01E3   		add	rbx, r12	# index, step
 9846              	.LVL615:
 9847              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9848              		.loc 1 297 36 view .LVU3430
 9849 36dd 4889DA   		mov	rdx, rbx	# tmp1594, index
GAS LISTING /tmp/ccW0oq2B.s 			page 272


 9850 36e0 48C1EA06 		shr	rdx, 6	# tmp1594,
 9851              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9852              		.loc 1 295 22 view .LVU3431
 9853 36e4 4D09D3   		or	r11, r10	# mask, tmp1593
 9854              	.LVL616:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9855              		.loc 1 296 17 is_stmt 1 view .LVU3432
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9856              		.loc 1 297 21 view .LVU3433
 9857              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9858              		.loc 1 297 13 is_stmt 0 view .LVU3434
 9859 36e7 4939D0   		cmp	r8, rdx	# index_word, tmp1594
 9860 36ea 0F859000 		jne	.L1368	#,
 9860      0000
 294:sieve_extend.c ****                 mask |= markmask(index);
 9861              		.loc 1 294 13 is_stmt 1 view .LVU3435
 295:sieve_extend.c ****                 index += step;
 9862              		.loc 1 295 17 view .LVU3436
 9863              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9864              		.loc 1 295 25 is_stmt 0 view .LVU3437
 9865 36f0 C4C2E1F7 		shlx	rax, r15, rbx	# tmp1595, tmp1047, index
 9865      C7
 9866              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9867              		.loc 1 296 23 view .LVU3438
 9868 36f5 4C01E3   		add	rbx, r12	# index, step
 9869              	.LVL617:
 9870              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9871              		.loc 1 297 36 view .LVU3439
 9872 36f8 4889DE   		mov	rsi, rbx	# tmp1596, index
 9873 36fb 48C1EE06 		shr	rsi, 6	# tmp1596,
 9874              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9875              		.loc 1 295 22 view .LVU3440
 9876 36ff 4909C3   		or	r11, rax	# mask, tmp1595
 9877              	.LVL618:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9878              		.loc 1 296 17 is_stmt 1 view .LVU3441
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9879              		.loc 1 297 21 view .LVU3442
 9880              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9881              		.loc 1 297 13 is_stmt 0 view .LVU3443
 9882 3702 4939F0   		cmp	r8, rsi	# index_word, tmp1596
 9883 3705 7579     		jne	.L1368	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 9884              		.loc 1 294 13 is_stmt 1 view .LVU3444
 295:sieve_extend.c ****                 index += step;
 9885              		.loc 1 295 17 view .LVU3445
 9886              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9887              		.loc 1 295 25 is_stmt 0 view .LVU3446
 9888 3707 C4C2E1F7 		shlx	rcx, r15, rbx	# tmp1597, tmp1047, index
GAS LISTING /tmp/ccW0oq2B.s 			page 273


 9888      CF
 9889              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9890              		.loc 1 296 23 view .LVU3447
 9891 370c 4C01E3   		add	rbx, r12	# index, step
 9892              	.LVL619:
 9893              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9894              		.loc 1 297 36 view .LVU3448
 9895 370f 4989D9   		mov	r9, rbx	# tmp1598, index
 9896 3712 49C1E906 		shr	r9, 6	# tmp1598,
 9897              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9898              		.loc 1 295 22 view .LVU3449
 9899 3716 4909CB   		or	r11, rcx	# mask, tmp1597
 9900              	.LVL620:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9901              		.loc 1 296 17 is_stmt 1 view .LVU3450
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9902              		.loc 1 297 21 view .LVU3451
 9903              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9904              		.loc 1 297 13 is_stmt 0 view .LVU3452
 9905 3719 4D39C8   		cmp	r8, r9	# index_word, tmp1598
 9906 371c 7562     		jne	.L1368	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 9907              		.loc 1 294 13 is_stmt 1 view .LVU3453
 295:sieve_extend.c ****                 index += step;
 9908              		.loc 1 295 17 view .LVU3454
 9909              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9910              		.loc 1 295 25 is_stmt 0 view .LVU3455
 9911 371e C442E1F7 		shlx	r10, r15, rbx	# tmp1599, tmp1047, index
 9911      D7
 9912              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9913              		.loc 1 296 23 view .LVU3456
 9914 3723 4C01E3   		add	rbx, r12	# index, step
 9915              	.LVL621:
 9916              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9917              		.loc 1 297 36 view .LVU3457
 9918 3726 4889DA   		mov	rdx, rbx	# tmp1600, index
 9919 3729 48C1EA06 		shr	rdx, 6	# tmp1600,
 9920              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9921              		.loc 1 295 22 view .LVU3458
 9922 372d 4D09D3   		or	r11, r10	# mask, tmp1599
 9923              	.LVL622:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9924              		.loc 1 296 17 is_stmt 1 view .LVU3459
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9925              		.loc 1 297 21 view .LVU3460
 9926              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9927              		.loc 1 297 13 is_stmt 0 view .LVU3461
 9928 3730 4939D0   		cmp	r8, rdx	# index_word, tmp1600
GAS LISTING /tmp/ccW0oq2B.s 			page 274


 9929 3733 754B     		jne	.L1368	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 9930              		.loc 1 294 13 is_stmt 1 view .LVU3462
 295:sieve_extend.c ****                 index += step;
 9931              		.loc 1 295 17 view .LVU3463
 9932              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9933              		.loc 1 295 25 is_stmt 0 view .LVU3464
 9934 3735 C4C2E1F7 		shlx	rax, r15, rbx	# tmp1601, tmp1047, index
 9934      C7
 9935              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9936              		.loc 1 296 23 view .LVU3465
 9937 373a 4C01E3   		add	rbx, r12	# index, step
 9938              	.LVL623:
 9939              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9940              		.loc 1 297 36 view .LVU3466
 9941 373d 4889DE   		mov	rsi, rbx	# tmp1602, index
 9942 3740 48C1EE06 		shr	rsi, 6	# tmp1602,
 9943              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9944              		.loc 1 295 22 view .LVU3467
 9945 3744 4909C3   		or	r11, rax	# mask, tmp1601
 9946              	.LVL624:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9947              		.loc 1 296 17 is_stmt 1 view .LVU3468
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9948              		.loc 1 297 21 view .LVU3469
 9949              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9950              		.loc 1 297 13 is_stmt 0 view .LVU3470
 9951 3747 4939F0   		cmp	r8, rsi	# index_word, tmp1602
 9952 374a 7534     		jne	.L1368	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 9953              		.loc 1 294 13 is_stmt 1 view .LVU3471
 295:sieve_extend.c ****                 index += step;
 9954              		.loc 1 295 17 view .LVU3472
 9955              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9956              		.loc 1 295 25 is_stmt 0 view .LVU3473
 9957 374c C4C2E1F7 		shlx	rcx, r15, rbx	# tmp1603, tmp1047, index
 9957      CF
 9958              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9959              		.loc 1 296 23 view .LVU3474
 9960 3751 4C01E3   		add	rbx, r12	# index, step
 9961              	.LVL625:
 9962              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9963              		.loc 1 297 36 view .LVU3475
 9964 3754 4989D9   		mov	r9, rbx	# tmp1604, index
 9965 3757 49C1E906 		shr	r9, 6	# tmp1604,
 9966              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9967              		.loc 1 295 22 view .LVU3476
 9968 375b 4909CB   		or	r11, rcx	# mask, tmp1603
GAS LISTING /tmp/ccW0oq2B.s 			page 275


 9969              	.LVL626:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9970              		.loc 1 296 17 is_stmt 1 view .LVU3477
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9971              		.loc 1 297 21 view .LVU3478
 9972              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9973              		.loc 1 297 13 is_stmt 0 view .LVU3479
 9974 375e 4D39C8   		cmp	r8, r9	# index_word, tmp1604
 9975 3761 751D     		jne	.L1368	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 9976              		.loc 1 294 13 is_stmt 1 view .LVU3480
 295:sieve_extend.c ****                 index += step;
 9977              		.loc 1 295 17 view .LVU3481
 9978              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9979              		.loc 1 295 25 is_stmt 0 view .LVU3482
 9980 3763 C442E1F7 		shlx	r10, r15, rbx	# tmp1605, tmp1047, index
 9980      D7
 9981              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9982              		.loc 1 296 23 view .LVU3483
 9983 3768 4C01E3   		add	rbx, r12	# index, step
 9984              	.LVL627:
 9985              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9986              		.loc 1 297 36 view .LVU3484
 9987 376b 4889DA   		mov	rdx, rbx	# tmp1606, index
 9988 376e 48C1EA06 		shr	rdx, 6	# tmp1606,
 9989              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 9990              		.loc 1 295 22 view .LVU3485
 9991 3772 4D09D3   		or	r11, r10	# mask, tmp1605
 9992              	.LVL628:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 9993              		.loc 1 296 17 is_stmt 1 view .LVU3486
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9994              		.loc 1 297 21 view .LVU3487
 9995              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 9996              		.loc 1 297 13 is_stmt 0 view .LVU3488
 9997 3775 4939D0   		cmp	r8, rdx	# index_word, tmp1606
 9998 3778 0F843CFF 		je	.L687	#,
 9998      FFFF
 9999 377e 6690     		.p2align 4,,10
 10000              		.p2align 3
 10001              	.L1368:
 300:sieve_extend.c ****         }
 10002              		.loc 1 300 13 is_stmt 1 view .LVU3489
 10003              	# sieve_extend.c:300:             bitarray[index_word] |= mask;
 300:sieve_extend.c ****         }
 10004              		.loc 1 300 34 is_stmt 0 view .LVU3490
 10005 3780 4F091CC6 		or	QWORD PTR [r14+r8*8], r11	# *_185, mask
 300:sieve_extend.c ****         }
 10006              		.loc 1 300 34 view .LVU3491
 10007              	.LBE523:
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccW0oq2B.s 			page 276


 10008              		.loc 1 290 54 is_stmt 1 view .LVU3492
 10009              	# sieve_extend.c:290:         for (register counter_t index = range_start; index <= range_stop;) {
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10010              		.loc 1 290 9 is_stmt 0 view .LVU3493
 10011 3784 4839DF   		cmp	rdi, rbx	# _66, index
 10012 3787 0F8323FF 		jnb	.L688	#,
 10012      FFFF
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10013              		.loc 1 290 9 view .LVU3494
 10014 378d E9AFF5FF 		jmp	.L678	#
 10014      FF
 10015              	.LVL629:
 10016              		.p2align 4,,10
 10017 3792 660F1F44 		.p2align 3
 10017      0000
 10018              	.L673:
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10019              		.loc 1 290 9 view .LVU3495
 10020              	.LBE522:
 10021              	.LBE521:
 10022              	.LBE520:
 10023              	.LBE510:
 10024              	.LBE509:
 10025              	.LBB524:
 10026              	.LBB498:
 856:sieve_extend.c **** }
 10027              		.loc 1 856 37 is_stmt 1 view .LVU3496
 10028 3798 E893D8FF 		call	extendSieve_aligned	#
 10028      FF
 10029              	.LVL630:
 856:sieve_extend.c **** }
 10030              		.loc 1 856 37 is_stmt 0 view .LVU3497
 10031 379d 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 10031      78
 10032 37a2 48894C24 		mov	QWORD PTR 72[rsp], rcx	# %sfp, patternsize_bits
 10032      48
 10033 37a7 E9F6F1FF 		jmp	.L670	#
 10033      FF
 10034              	.LVL631:
 10035 37ac 0F1F4000 		.p2align 4,,10
 10036              		.p2align 3
 10037              	.L1579:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10038              		.loc 1 854 37 is_stmt 1 view .LVU3498
 10039 37b0 E87BDDFF 		call	extendSieve_shiftleft	#
 10039      FF
 10040              	.LVL632:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10041              		.loc 1 854 37 is_stmt 0 view .LVU3499
 10042 37b5 488B4424 		mov	rax, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 10042      78
 10043 37ba 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, patternsize_bits
 10043      48
 10044 37bf E9DEF1FF 		jmp	.L670	#
 10044      FF
 10045              	.LVL633:
 10046              	.L1578:
GAS LISTING /tmp/ccW0oq2B.s 			page 277


 846:sieve_extend.c ****         return; // rapid exit for small sizes
 10047              		.loc 1 846 9 is_stmt 1 view .LVU3500
 10048 37c4 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 10048      70
 10049 37c9 4C89CE   		mov	rsi, r9	#, patternsize_bits
 10050              	.LVL634:
 846:sieve_extend.c ****         return; // rapid exit for small sizes
 10051              		.loc 1 846 9 is_stmt 0 view .LVU3501
 10052 37cc 4C89CA   		mov	rdx, r9	# patternsize_bits, patternsize_bits
 10053 37cf 4C89F7   		mov	rdi, r14	#, _94
 10054 37d2 E829C8FF 		call	extendSieve_smallSize	#
 10054      FF
 10055              	.LVL635:
 847:sieve_extend.c ****     }
 10056              		.loc 1 847 9 is_stmt 1 view .LVU3502
 10057 37d7 488B7424 		mov	rsi, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 10057      78
 10058 37dc 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, patternsize_bits
 10058      48
 10059 37e1 E9BCF1FF 		jmp	.L670	#
 10059      FF
 10060              	.LVL636:
 10061              	.L1580:
 847:sieve_extend.c ****     }
 10062              		.loc 1 847 9 is_stmt 0 view .LVU3503
 10063              	.LBE498:
 10064              	.LBE524:
 10065              	.LBB525:
 10066              	.LBB505:
 256:sieve_extend.c ****        return;
 10067              		.loc 1 256 8 is_stmt 1 view .LVU3504
 10068              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 10069              		.loc 1 256 67 is_stmt 0 view .LVU3505
 10070 37e6 4921F1   		and	r9, rsi	# tmp707,
 10071              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 10072              		.loc 1 256 28 view .LVU3506
 10073 37e9 4C09C8   		or	rax, r9	# tmp708, tmp707
 10074 37ec 488902   		mov	QWORD PTR [rdx], rax	# MEM[(uint64_t *)_1635], tmp708
 257:sieve_extend.c ****     }
 10075              		.loc 1 257 8 is_stmt 1 view .LVU3507
 10076 37ef E94DF5FF 		jmp	.L678	#
 10076      FF
 10077              	.LVL637:
 10078              	.L1572:
 257:sieve_extend.c ****     }
 10079              		.loc 1 257 8 is_stmt 0 view .LVU3508
 10080 37f4 4C8B4C24 		mov	r9, QWORD PTR 80[rsp]	# <retval>, %sfp
 10080      50
 10081 37f9 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, prime
 10081      40
 10082 37fe 4D8B5908 		mov	r11, QWORD PTR 8[r9]	# prephitmp_1898, sieve_89->bits
 10083 3802 4C895C24 		mov	QWORD PTR 104[rsp], r11	# %sfp, prephitmp_1898
 10083      68
 10084              	.LVL638:
 10085              	.L669:
GAS LISTING /tmp/ccW0oq2B.s 			page 278


 257:sieve_extend.c ****     }
 10086              		.loc 1 257 8 view .LVU3509
 10087              	.LBE505:
 10088              	.LBE525:
 10089              	.LBE532:
 10090              	.LBE535:
 10091              	.LBE543:
 987:sieve_extend.c ****     prime = block.prime;
 10092              		.loc 1 987 5 is_stmt 1 view .LVU3510
 10093              	.LBB544:
 844:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10094              		.loc 1 844 20 view .LVU3511
 10095              	.LBB541:
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10096              		.loc 1 845 5 view .LVU3512
 10097              	# sieve_extend.c:845:     if (size < WORD_SIZE_counter)   {
 845:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10098              		.loc 1 845 8 is_stmt 0 view .LVU3513
 10099 3807 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10100 380b 0F86A9F9 		jbe	.L662	#,
 10100      FFFF
 10101              	.LVL639:
 10102              	.L714:
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10103              		.loc 1 850 5 is_stmt 1 view .LVU3514
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10104              		.loc 1 851 5 view .LVU3515
 10105              	# sieve_extend.c:850:     const counter_t copy_start  = source_start + size;
 850:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10106              		.loc 1 850 21 is_stmt 0 view .LVU3516
 10107 3811 488D0432 		lea	rax, [rdx+rsi]	# copy_start,
 10108              	.LVL640:
 10109              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 10110              		.loc 1 852 22 view .LVU3517
 10111 3815 4889F3   		mov	rbx, rsi	# source_bit, block$pattern_start
 10112              	# sieve_extend.c:851:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 851:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10113              		.loc 1 851 22 view .LVU3518
 10114 3818 83E03F   		and	eax, 63	# copy_bit,
 10115              	.LVL641:
 852:sieve_extend.c **** 
 10116              		.loc 1 852 5 is_stmt 1 view .LVU3519
 10117              	# sieve_extend.c:852:     const bitshift_t source_bit = bitindex_calc(source_start);
 852:sieve_extend.c **** 
 10118              		.loc 1 852 22 is_stmt 0 view .LVU3520
 10119 381b 83E33F   		and	ebx, 63	# source_bit,
 10120              	.LVL642:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10121              		.loc 1 854 5 is_stmt 1 view .LVU3521
 10122              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10123              		.loc 1 854 13 is_stmt 0 view .LVU3522
 10124 381e 4839D8   		cmp	rax, rbx	# copy_bit, source_bit
 10125              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10126              		.loc 1 854 37 view .LVU3523
GAS LISTING /tmp/ccW0oq2B.s 			page 279


 10127 3821 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	#, %sfp
 10127      68
 10128 3826 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	#, %sfp
 10128      28
 10129              	# sieve_extend.c:854:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10130              		.loc 1 854 13 view .LVU3524
 10131 382b 0F82B717 		jb	.L1583	#,
 10131      0000
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10132              		.loc 1 855 10 is_stmt 1 view .LVU3525
 10133              	# sieve_extend.c:855:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10134              		.loc 1 855 13 is_stmt 0 view .LVU3526
 10135 3831 0F86A717 		jbe	.L717	#,
 10135      0000
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10136              		.loc 1 855 37 is_stmt 1 view .LVU3527
 10137 3837 E884CBFF 		call	extendSieve_shiftright_ivdep	#
 10137      FF
 10138              	.LVL643:
 10139              	.L715:
 855:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10140              		.loc 1 855 37 is_stmt 0 view .LVU3528
 10141              	.LBE541:
 10142              	.LBE544:
 988:sieve_extend.c **** 
 10143              		.loc 1 988 5 is_stmt 1 view .LVU3529
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10144              		.loc 1 991 5 view .LVU3530
 10145              	.LBB545:
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10146              		.loc 1 991 10 view .LVU3531
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10147              		.loc 1 991 10 is_stmt 0 view .LVU3532
 10148 383c 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# prime, %sfp
 10148      40
 10149              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10150              		.loc 1 991 83 view .LVU3533
 10151 3841 4C8B6424 		mov	r12, QWORD PTR 80[rsp]	# <retval>, %sfp
 10151      50
 10152 3846 48FFC6   		inc	rsi	# tmp1023
 10153              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10154              		.loc 1 991 38 view .LVU3534
 10155 3849 488B4C24 		mov	rcx, QWORD PTR 48[rsp]	# blocksize, %sfp
 10155      30
 10156              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10157              		.loc 1 991 20 view .LVU3535
 10158 384e 48C74424 		mov	QWORD PTR 120[rsp], 0	# %sfp,
 10158      78000000 
 10158      00
 10159 3857 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, tmp1023
 10159      48
 10160              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
GAS LISTING /tmp/ccW0oq2B.s 			page 280


 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10161              		.loc 1 991 83 view .LVU3536
 10162 385c 498B4424 		mov	rax, QWORD PTR 8[r12]	# _8, sieve_89->bits
 10162      08
 10163 3861 4D8B2424 		mov	r12, QWORD PTR [r12]	# pretmp_1655, MEM[(uint64_t * *)sieve_89]
 10164              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10165              		.loc 1 991 38 view .LVU3537
 10166 3865 4C8D79FF 		lea	r15, -1[rcx]	# block_stop,
 10167              	.LVL644:
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10168              		.loc 1 991 63 is_stmt 1 view .LVU3538
 10169              	.LBB546:
 10170              	.LBB547:
 10171              	.LBB548:
 10172              	.LBB549:
 10173              	.LBB550:
 10174              	.LBB551:
 10175              	.LBB552:
 10176              	.LBB553:
 10177              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 10178              		.loc 1 295 25 is_stmt 0 view .LVU3539
 10179 3869 41BD0100 		mov	r13d, 1	# tmp1041,
 10179      0000
 10180              	.LVL645:
 10181 386f 90       		.p2align 4,,10
 10182              		.p2align 3
 10183              	.L721:
 295:sieve_extend.c ****                 index += step;
 10184              		.loc 1 295 25 view .LVU3540
 10185              	.LBE553:
 10186              	.LBE552:
 10187              	.LBE551:
 10188              	.LBE550:
 10189              	.LBE549:
 10190              	.LBE548:
 10191              	.LBE547:
 10192              	.LBE546:
 992:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 10193              		.loc 1 992 9 is_stmt 1 view .LVU3541
 10194              	.LBB638:
 10195              	.LBB639:
 10196              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10197              		.loc 1 124 21 is_stmt 0 view .LVU3542
 10198 3870 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# prime, %sfp
 10198      40
 10199 3875 4939C7   		cmp	r15, rax	# block_stop, _8
 10200              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10201              		.loc 1 124 12 view .LVU3543
 10202 3878 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# _94, %sfp
 10202      28
 10203              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10204              		.loc 1 124 21 view .LVU3544
GAS LISTING /tmp/ccW0oq2B.s 			page 281


 10205 387d 4D89D0   		mov	r8, r10	# tmp801, prime
 10206 3880 4C0F47F8 		cmova	r15, rax	# block_stop,, block_stop, _8
 10207              	.LVL646:
 124:sieve_extend.c ****     return index;
 10208              		.loc 1 124 21 view .LVU3545
 10209              	.LBE639:
 10210              	.LBE638:
 993:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 10211              		.loc 1 993 9 is_stmt 1 view .LVU3546
 10212              	.LBB641:
 10213              	.LBI638:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10214              		.loc 1 123 25 view .LVU3547
 10215              	.LBB640:
 124:sieve_extend.c ****     return index;
 10216              		.loc 1 124 5 view .LVU3548
 124:sieve_extend.c ****     return index;
 10217              		.loc 1 124 11 view .LVU3549
 10218              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10219              		.loc 1 124 21 is_stmt 0 view .LVU3550
 10220 3884 49C1E806 		shr	r8, 6	# tmp801,
 10221              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10222              		.loc 1 124 12 view .LVU3551
 10223 3888 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_1181, *_1181
 10224              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10225              		.loc 1 124 11 view .LVU3552
 10226 388c 4C0FA3D7 		bt	rdi, r10	# *_1181, tmp2188
 10227 3890 0F83EC00 		jnc	.L718	#,
 10227      0000
 10228 3896 488B5424 		mov	rdx, QWORD PTR 72[rsp]	# tmp1023, %sfp
 10228      48
 10229              	.L719:
 124:sieve_extend.c ****     return index;
 10230              		.loc 1 124 58 is_stmt 1 view .LVU3553
 10231              	.LVL647:
 10232              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10233              		.loc 1 124 21 is_stmt 0 view .LVU3554
 10234 389b 4989D1   		mov	r9, rdx	# tmp806, tmp1023
 10235 389e 49C1E906 		shr	r9, 6	# tmp806,
 10236              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10237              		.loc 1 124 12 view .LVU3555
 10238 38a2 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10239              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10240              		.loc 1 124 63 view .LVU3556
 10241 38a6 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10242              		.loc 1 124 11 is_stmt 1 view .LVU3557
 10243 38a9 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10244 38ad 0F83BD00 		jnc	.L1502	#,
 10244      0000
 10245 38b3 488D5A01 		lea	rbx, 1[rdx]	# tmp1059,
GAS LISTING /tmp/ccW0oq2B.s 			page 282


 10246              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10247              		.loc 1 124 21 is_stmt 0 view .LVU3558
 10248 38b7 4889D9   		mov	rcx, rbx	# tmp1101, tmp1023
 10249 38ba 48C1E906 		shr	rcx, 6	# tmp1101,
 10250              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10251              		.loc 1 124 12 view .LVU3559
 10252 38be 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10253 38c2 4889DA   		mov	rdx, rbx	# tmp1023, tmp1059
 10254              	.LVL648:
 124:sieve_extend.c ****     return index;
 10255              		.loc 1 124 58 is_stmt 1 view .LVU3560
 10256              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10257              		.loc 1 124 11 is_stmt 0 view .LVU3561
 10258 38c5 490FA3DA 		bt	r10, rbx	# *_34, tmp1023
 10259              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10260              		.loc 1 124 63 view .LVU3562
 10261 38c9 4889DE   		mov	rsi, rbx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10262              		.loc 1 124 11 is_stmt 1 view .LVU3563
 10263 38cc 0F839E00 		jnc	.L1502	#,
 10263      0000
 10264 38d2 48FFC2   		inc	rdx	# tmp1023
 10265              	.LVL649:
 124:sieve_extend.c ****     return index;
 10266              		.loc 1 124 58 view .LVU3564
 10267              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10268              		.loc 1 124 21 is_stmt 0 view .LVU3565
 10269 38d5 4989D0   		mov	r8, rdx	# tmp1514, tmp1023
 10270 38d8 49C1E806 		shr	r8, 6	# tmp1514,
 10271              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10272              		.loc 1 124 12 view .LVU3566
 10273 38dc 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_34, *_34
 10274              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10275              		.loc 1 124 63 view .LVU3567
 10276 38e0 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10277              		.loc 1 124 11 is_stmt 1 view .LVU3568
 10278 38e3 480FA3D7 		bt	rdi, rdx	# *_34, tmp1023
 10279 38e7 0F838300 		jnc	.L1502	#,
 10279      0000
 10280 38ed 488D5302 		lea	rdx, 2[rbx]	# tmp1023,
 10281              	.LVL650:
 124:sieve_extend.c ****     return index;
 10282              		.loc 1 124 58 view .LVU3569
 10283              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10284              		.loc 1 124 21 is_stmt 0 view .LVU3570
 10285 38f1 4989D1   		mov	r9, rdx	# tmp1518, tmp1023
 10286 38f4 49C1E906 		shr	r9, 6	# tmp1518,
 10287              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 283


 124:sieve_extend.c ****     return index;
 10288              		.loc 1 124 12 view .LVU3571
 10289 38f8 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10290              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10291              		.loc 1 124 63 view .LVU3572
 10292 38fc 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10293              		.loc 1 124 11 is_stmt 1 view .LVU3573
 10294 38ff 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10295 3903 736B     		jnc	.L1502	#,
 10296 3905 488D5303 		lea	rdx, 3[rbx]	# tmp1023,
 10297              	.LVL651:
 124:sieve_extend.c ****     return index;
 10298              		.loc 1 124 58 view .LVU3574
 10299              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10300              		.loc 1 124 21 is_stmt 0 view .LVU3575
 10301 3909 4889D1   		mov	rcx, rdx	# tmp1522, tmp1023
 10302 390c 48C1E906 		shr	rcx, 6	# tmp1522,
 10303              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10304              		.loc 1 124 12 view .LVU3576
 10305 3910 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10306              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10307              		.loc 1 124 63 view .LVU3577
 10308 3914 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10309              		.loc 1 124 11 is_stmt 1 view .LVU3578
 10310 3917 490FA3D2 		bt	r10, rdx	# *_34, tmp1023
 10311 391b 7353     		jnc	.L1502	#,
 10312 391d 488D5304 		lea	rdx, 4[rbx]	# tmp1023,
 10313              	.LVL652:
 124:sieve_extend.c ****     return index;
 10314              		.loc 1 124 58 view .LVU3579
 10315              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10316              		.loc 1 124 21 is_stmt 0 view .LVU3580
 10317 3921 4989D0   		mov	r8, rdx	# tmp1526, tmp1023
 10318 3924 49C1E806 		shr	r8, 6	# tmp1526,
 10319              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10320              		.loc 1 124 12 view .LVU3581
 10321 3928 4B8B3CC6 		mov	rdi, QWORD PTR [r14+r8*8]	# *_34, *_34
 10322              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10323              		.loc 1 124 63 view .LVU3582
 10324 392c 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10325              		.loc 1 124 11 is_stmt 1 view .LVU3583
 10326 392f 480FA3D7 		bt	rdi, rdx	# *_34, tmp1023
 10327 3933 733B     		jnc	.L1502	#,
 10328 3935 488D5305 		lea	rdx, 5[rbx]	# tmp1023,
 10329              	.LVL653:
 124:sieve_extend.c ****     return index;
 10330              		.loc 1 124 58 view .LVU3584
GAS LISTING /tmp/ccW0oq2B.s 			page 284


 10331              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10332              		.loc 1 124 21 is_stmt 0 view .LVU3585
 10333 3939 4989D1   		mov	r9, rdx	# tmp1530, tmp1023
 10334 393c 49C1E906 		shr	r9, 6	# tmp1530,
 10335              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10336              		.loc 1 124 12 view .LVU3586
 10337 3940 4F8B1CCE 		mov	r11, QWORD PTR [r14+r9*8]	# *_34, *_34
 10338              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10339              		.loc 1 124 63 view .LVU3587
 10340 3944 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10341              		.loc 1 124 11 is_stmt 1 view .LVU3588
 10342 3947 490FA3D3 		bt	r11, rdx	# *_34, tmp1023
 10343 394b 7323     		jnc	.L1502	#,
 10344 394d 488D5306 		lea	rdx, 6[rbx]	# tmp1023,
 10345              	.LVL654:
 124:sieve_extend.c ****     return index;
 10346              		.loc 1 124 58 view .LVU3589
 10347              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10348              		.loc 1 124 21 is_stmt 0 view .LVU3590
 10349 3951 4889D1   		mov	rcx, rdx	# tmp1534, tmp1023
 10350 3954 48C1E906 		shr	rcx, 6	# tmp1534,
 10351              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10352              		.loc 1 124 12 view .LVU3591
 10353 3958 4D8B14CE 		mov	r10, QWORD PTR [r14+rcx*8]	# *_34, *_34
 10354              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10355              		.loc 1 124 63 view .LVU3592
 10356 395c 4889D6   		mov	rsi, rdx	# prime, tmp1023
 124:sieve_extend.c ****     return index;
 10357              		.loc 1 124 11 is_stmt 1 view .LVU3593
 10358 395f 490FA3D2 		bt	r10, rdx	# *_34, tmp1023
 10359 3963 730B     		jnc	.L1502	#,
 10360 3965 488D5307 		lea	rdx, 7[rbx]	# tmp1023,
 10361              	.LVL655:
 124:sieve_extend.c ****     return index;
 10362              		.loc 1 124 11 is_stmt 0 view .LVU3594
 10363 3969 E92DFFFF 		jmp	.L719	#
 10363      FF
 10364              	.LVL656:
 10365 396e 6690     		.p2align 4,,10
 10366              		.p2align 3
 10367              	.L1502:
 124:sieve_extend.c ****     return index;
 10368              		.loc 1 124 11 view .LVU3595
 10369 3970 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, tmp1023
 10369      48
 10370 3975 48FFC2   		inc	rdx	# tmp1023
 10371              	.LVL657:
 124:sieve_extend.c ****     return index;
 10372              		.loc 1 124 11 view .LVU3596
 10373 3978 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, prime
GAS LISTING /tmp/ccW0oq2B.s 			page 285


 10373      40
 10374 397d 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, tmp1023
 10374      48
 10375              	.LVL658:
 10376              	.L718:
 125:sieve_extend.c **** }
 10377              		.loc 1 125 5 is_stmt 1 view .LVU3597
 125:sieve_extend.c **** }
 10378              		.loc 1 125 5 is_stmt 0 view .LVU3598
 10379              	.LBE640:
 10380              	.LBE641:
 994:sieve_extend.c ****     } 
 10381              		.loc 1 994 9 is_stmt 1 view .LVU3599
 10382              	.LBB642:
 10383              	.LBI546:
 859:sieve_extend.c ****     counter_t prime = prime_start;
 10384              		.loc 1 859 13 view .LVU3600
 10385              	.LBB635:
 860:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 10386              		.loc 1 860 5 view .LVU3601
 861:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10387              		.loc 1 861 5 view .LVU3602
 10388              	# sieve_extend.c:861:     counter_t start = prime * prime * 2 + prime * 2;
 861:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10389              		.loc 1 861 15 is_stmt 0 view .LVU3603
 10390 3982 4C8B7424 		mov	r14, QWORD PTR 72[rsp]	# tmp812, %sfp
 10390      48
 10391 3987 4C0FAF74 		imul	r14, QWORD PTR 64[rsp]	# tmp812, %sfp
 10391      2440
 10392 398d 4D01F6   		add	r14, r14	# index
 10393              	.LVL659:
 862:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 10394              		.loc 1 862 5 is_stmt 1 view .LVU3604
 863:sieve_extend.c **** 
 10395              		.loc 1 863 5 view .LVU3605
 865:sieve_extend.c ****     
 10396              		.loc 1 865 5 view .LVU3606
 867:sieve_extend.c ****         step  = prime * 2 + 1;
 10397              		.loc 1 867 5 view .LVU3607
 867:sieve_extend.c ****         step  = prime * 2 + 1;
 10398              		.loc 1 867 11 view .LVU3608
 10399 3990 4D39F7   		cmp	r15, r14	# block_stop, index
 10400 3993 0F821704 		jb	.L725	#,
 10400      0000
 10401              	.LBB570:
 10402              	.LBB571:
 10403              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10404              		.loc 1 253 21 is_stmt 0 view .LVU3609
 10405 3999 4C89FB   		mov	rbx, r15	# range_stop_word, block_stop
 10406 399c 48C1EB06 		shr	rbx, 6	# range_stop_word,
 10407              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 10408              		.loc 1 276 38 view .LVU3610
 10409 39a0 4489F8   		mov	eax, r15d	# tmp813, block_stop
 10410 39a3 F7D0     		not	eax	# tmp813
 10411 39a5 49C7C0FF 		mov	r8, -1	# tmp2202,
GAS LISTING /tmp/ccW0oq2B.s 			page 286


 10411      FFFFFF
 10412 39ac 4C8D5BFF 		lea	r11, -1[rbx]	# tmp1034,
 10413 39b0 C4C2FBF7 		shrx	rdi, r8, rax	# _578, tmp2202, tmp813
 10413      F8
 10414              	# sieve_extend.c:253:     const counter_t range_stop_word = wordindex(range_stop);
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10415              		.loc 1 253 21 view .LVU3611
 10416 39b5 48895C24 		mov	QWORD PTR 96[rsp], rbx	# %sfp, range_stop_word
 10416      60
 10417              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 10418              		.loc 1 276 38 view .LVU3612
 10419 39ba 48897C24 		mov	QWORD PTR 112[rsp], rdi	# %sfp, _578
 10419      70
 10420 39bf 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, tmp1034
 10420      58
 10421 39c4 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# prime, %sfp
 10421      40
 10422 39c9 4C897C24 		mov	QWORD PTR 104[rsp], r15	# %sfp, block_stop
 10422      68
 10423 39ce 4D8D04DC 		lea	r8, [r12+rbx*8]	# range_stop_ptr,
 10424 39d2 4989DF   		mov	r15, rbx	# range_stop_word, range_stop_word
 10425              	.LVL660:
 276:sieve_extend.c **** }
 10426              		.loc 1 276 38 view .LVU3613
 10427 39d5 4C89F0   		mov	rax, r14	# index, index
 10428              	.LVL661:
 10429 39d8 0F1F8400 		.p2align 4,,10
 10429      00000000 
 10430              		.p2align 3
 10431              	.L735:
 276:sieve_extend.c **** }
 10432              		.loc 1 276 38 view .LVU3614
 10433              	.LBE571:
 10434              	.LBE570:
 868:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 10435              		.loc 1 868 9 is_stmt 1 view .LVU3615
 10436              	# sieve_extend.c:868:         step  = prime * 2 + 1;
 868:sieve_extend.c ****         if (step > SMALLSTEP_FASTER) break;
 10437              		.loc 1 868 15 is_stmt 0 view .LVU3616
 10438 39e0 4C8D5436 		lea	r10, 1[rsi+rsi]	# step,
 10438      01
 10439              	.LVL662:
 869:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 10440              		.loc 1 869 9 is_stmt 1 view .LVU3617
 10441              	# sieve_extend.c:869:         if (step > SMALLSTEP_FASTER) break;
 869:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 10442              		.loc 1 869 12 is_stmt 0 view .LVU3618
 10443 39e5 4C3B1500 		cmp	r10, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10443      000000
 10444 39ec 0F870E04 		ja	.L1584	#,
 10444      0000
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10445              		.loc 1 870 9 is_stmt 1 view .LVU3619
 10446              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10447              		.loc 1 870 12 is_stmt 0 view .LVU3620
GAS LISTING /tmp/ccW0oq2B.s 			page 287


 10448 39f2 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# block_start, %sfp
 10448      78
 10449              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10450              		.loc 1 870 35 view .LVU3621
 10451 39f7 488D7E01 		lea	rdi, 1[rsi]	# index,
 10452              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10453              		.loc 1 870 12 view .LVU3622
 10454 39fb 4839CF   		cmp	rdi, rcx	# index, block_start
 10455 39fe 7712     		ja	.L726	#,
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10456              		.loc 1 870 41 is_stmt 1 view .LVU3623
 10457              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10458              		.loc 1 870 61 is_stmt 0 view .LVU3624
 10459 3a00 488D040E 		lea	rax, [rsi+rcx]	# _374,
 10460              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10461              		.loc 1 870 102 view .LVU3625
 10462 3a04 31D2     		xor	edx, edx	# tmp819
 10463              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10464              		.loc 1 870 69 view .LVU3626
 10465 3a06 4801C6   		add	rsi, rax	# tmp817, _374
 10466              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10467              		.loc 1 870 102 view .LVU3627
 10468 3a09 49F7F2   		div	r10	# step
 10469              	.LVL663:
 10470              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 10471              		.loc 1 870 47 view .LVU3628
 10472 3a0c 4889F0   		mov	rax, rsi	# tmp817, tmp817
 10473 3a0f 4829D0   		sub	rax, rdx	# tmp817, tmp819
 10474              	.LVL664:
 10475              	.L726:
 871:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 10476              		.loc 1 871 9 is_stmt 1 view .LVU3629
 10477              	.LBB576:
 10478              	.LBI570:
 245:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 10479              		.loc 1 245 20 view .LVU3630
 10480              	.LBB574:
 246:sieve_extend.c **** 
 10481              		.loc 1 246 5 view .LVU3631
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 10482              		.loc 1 249 2 view .LVU3632
 250:sieve_extend.c **** 
 10483              		.loc 1 250 5 view .LVU3633
 10484              	.LBB572:
 250:sieve_extend.c **** 
 10485              		.loc 1 250 10 view .LVU3634
 250:sieve_extend.c **** 
 10486              		.loc 1 250 41 view .LVU3635
 10487              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 288


 10488              		.loc 1 250 5 is_stmt 0 view .LVU3636
 10489 3a12 4983FA40 		cmp	r10, 64	# step,
 10490 3a16 0F87D403 		ja	.L806	#,
 10490      0000
 10491 3a1c 4C89D6   		mov	rsi, r10	# patternsize, step
 10492              	.LBE572:
 10493              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 10494              		.loc 1 249 21 view .LVU3637
 10495 3a1f 41B90100 		mov	r9d, 1	# pattern,
 10495      0000
 10496              	.LVL665:
 10497              	.L728:
 10498              	.LBB573:
 250:sieve_extend.c **** 
 10499              		.loc 1 250 95 is_stmt 1 view .LVU3638
 10500              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10501              		.loc 1 250 79 is_stmt 0 view .LVU3639
 10502 3a25 488D1C36 		lea	rbx, [rsi+rsi]	# patternsize,
 10503              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10504              		.loc 1 250 115 view .LVU3640
 10505 3a29 C442C9F7 		shlx	r14, r9, rsi	# _522, pattern, patternsize
 10505      F1
 10506              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10507              		.loc 1 250 103 view .LVU3641
 10508 3a2e 4D09F1   		or	r9, r14	# pattern, _522
 10509              	.LVL666:
 250:sieve_extend.c **** 
 10510              		.loc 1 250 67 is_stmt 1 view .LVU3642
 250:sieve_extend.c **** 
 10511              		.loc 1 250 41 view .LVU3643
 10512              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10513              		.loc 1 250 5 is_stmt 0 view .LVU3644
 10514 3a31 4883FB40 		cmp	rbx, 64	# patternsize,
 10515 3a35 0F879D00 		ja	.L727	#,
 10515      0000
 250:sieve_extend.c **** 
 10516              		.loc 1 250 95 is_stmt 1 view .LVU3645
 10517              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10518              		.loc 1 250 79 is_stmt 0 view .LVU3646
 10519 3a3b 488D0CB5 		lea	rcx, 0[0+rsi*4]	# patternsize,
 10519      00000000 
 10520              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10521              		.loc 1 250 115 view .LVU3647
 10522 3a43 C442E1F7 		shlx	r11, r9, rbx	# _522, pattern, patternsize
 10522      D9
 10523              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10524              		.loc 1 250 103 view .LVU3648
 10525 3a48 4D09D9   		or	r9, r11	# pattern, _522
 10526              	.LVL667:
GAS LISTING /tmp/ccW0oq2B.s 			page 289


 250:sieve_extend.c **** 
 10527              		.loc 1 250 67 is_stmt 1 view .LVU3649
 250:sieve_extend.c **** 
 10528              		.loc 1 250 41 view .LVU3650
 10529              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10530              		.loc 1 250 5 is_stmt 0 view .LVU3651
 10531 3a4b 4883F940 		cmp	rcx, 64	# patternsize,
 10532 3a4f 0F878300 		ja	.L727	#,
 10532      0000
 250:sieve_extend.c **** 
 10533              		.loc 1 250 95 is_stmt 1 view .LVU3652
 10534              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10535              		.loc 1 250 79 is_stmt 0 view .LVU3653
 10536 3a55 4C8D34F5 		lea	r14, 0[0+rsi*8]	# patternsize,
 10536      00000000 
 10537              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10538              		.loc 1 250 115 view .LVU3654
 10539 3a5d C4C2F1F7 		shlx	rdx, r9, rcx	# _522, pattern, patternsize
 10539      D1
 10540              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10541              		.loc 1 250 103 view .LVU3655
 10542 3a62 4909D1   		or	r9, rdx	# pattern, _522
 10543              	.LVL668:
 250:sieve_extend.c **** 
 10544              		.loc 1 250 67 is_stmt 1 view .LVU3656
 250:sieve_extend.c **** 
 10545              		.loc 1 250 41 view .LVU3657
 10546              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10547              		.loc 1 250 5 is_stmt 0 view .LVU3658
 10548 3a65 4983FE40 		cmp	r14, 64	# patternsize,
 10549 3a69 776D     		ja	.L727	#,
 250:sieve_extend.c **** 
 10550              		.loc 1 250 95 is_stmt 1 view .LVU3659
 10551              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10552              		.loc 1 250 79 is_stmt 0 view .LVU3660
 10553 3a6b 4989F3   		mov	r11, rsi	# patternsize, patternsize
 10554 3a6e 49C1E304 		sal	r11, 4	# patternsize,
 10555              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10556              		.loc 1 250 115 view .LVU3661
 10557 3a72 C4C289F7 		shlx	rbx, r9, r14	# _522, pattern, patternsize
 10557      D9
 10558              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10559              		.loc 1 250 103 view .LVU3662
 10560 3a77 4909D9   		or	r9, rbx	# pattern, _522
 10561              	.LVL669:
 250:sieve_extend.c **** 
 10562              		.loc 1 250 67 is_stmt 1 view .LVU3663
 250:sieve_extend.c **** 
 10563              		.loc 1 250 41 view .LVU3664
GAS LISTING /tmp/ccW0oq2B.s 			page 290


 10564              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10565              		.loc 1 250 5 is_stmt 0 view .LVU3665
 10566 3a7a 4983FB40 		cmp	r11, 64	# patternsize,
 10567 3a7e 7758     		ja	.L727	#,
 250:sieve_extend.c **** 
 10568              		.loc 1 250 95 is_stmt 1 view .LVU3666
 10569              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10570              		.loc 1 250 79 is_stmt 0 view .LVU3667
 10571 3a80 4889F2   		mov	rdx, rsi	# patternsize, patternsize
 10572 3a83 48C1E205 		sal	rdx, 5	# patternsize,
 10573              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10574              		.loc 1 250 115 view .LVU3668
 10575 3a87 C4C2A1F7 		shlx	rcx, r9, r11	# _522, pattern, patternsize
 10575      C9
 10576              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10577              		.loc 1 250 103 view .LVU3669
 10578 3a8c 4909C9   		or	r9, rcx	# pattern, _522
 10579              	.LVL670:
 250:sieve_extend.c **** 
 10580              		.loc 1 250 67 is_stmt 1 view .LVU3670
 250:sieve_extend.c **** 
 10581              		.loc 1 250 41 view .LVU3671
 10582              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10583              		.loc 1 250 5 is_stmt 0 view .LVU3672
 10584 3a8f 4883FA40 		cmp	rdx, 64	# patternsize,
 10585 3a93 7743     		ja	.L727	#,
 250:sieve_extend.c **** 
 10586              		.loc 1 250 95 is_stmt 1 view .LVU3673
 10587              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10588              		.loc 1 250 79 is_stmt 0 view .LVU3674
 10589 3a95 4889F3   		mov	rbx, rsi	# patternsize, patternsize
 10590 3a98 48C1E306 		sal	rbx, 6	# patternsize,
 10591              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10592              		.loc 1 250 115 view .LVU3675
 10593 3a9c C442E9F7 		shlx	r14, r9, rdx	# _522, pattern, patternsize
 10593      F1
 10594              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10595              		.loc 1 250 103 view .LVU3676
 10596 3aa1 4D09F1   		or	r9, r14	# pattern, _522
 10597              	.LVL671:
 250:sieve_extend.c **** 
 10598              		.loc 1 250 67 is_stmt 1 view .LVU3677
 250:sieve_extend.c **** 
 10599              		.loc 1 250 41 view .LVU3678
 10600              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10601              		.loc 1 250 5 is_stmt 0 view .LVU3679
 10602 3aa4 4883FB40 		cmp	rbx, 64	# patternsize,
 10603 3aa8 772E     		ja	.L727	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 291


 250:sieve_extend.c **** 
 10604              		.loc 1 250 95 is_stmt 1 view .LVU3680
 10605              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10606              		.loc 1 250 79 is_stmt 0 view .LVU3681
 10607 3aaa 4889F1   		mov	rcx, rsi	# patternsize, patternsize
 10608 3aad 48C1E107 		sal	rcx, 7	# patternsize,
 10609              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10610              		.loc 1 250 115 view .LVU3682
 10611 3ab1 C442E1F7 		shlx	r11, r9, rbx	# _522, pattern, patternsize
 10611      D9
 10612              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10613              		.loc 1 250 103 view .LVU3683
 10614 3ab6 4D09D9   		or	r9, r11	# pattern, _522
 10615              	.LVL672:
 250:sieve_extend.c **** 
 10616              		.loc 1 250 67 is_stmt 1 view .LVU3684
 250:sieve_extend.c **** 
 10617              		.loc 1 250 41 view .LVU3685
 10618              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10619              		.loc 1 250 5 is_stmt 0 view .LVU3686
 10620 3ab9 4883F940 		cmp	rcx, 64	# patternsize,
 10621 3abd 7719     		ja	.L727	#,
 250:sieve_extend.c **** 
 10622              		.loc 1 250 95 is_stmt 1 view .LVU3687
 10623              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10624              		.loc 1 250 79 is_stmt 0 view .LVU3688
 10625 3abf 48C1E608 		sal	rsi, 8	# patternsize,
 10626              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10627              		.loc 1 250 115 view .LVU3689
 10628 3ac3 C4C2F1F7 		shlx	rdx, r9, rcx	# _522, pattern, patternsize
 10628      D1
 10629              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10630              		.loc 1 250 103 view .LVU3690
 10631 3ac8 4909D1   		or	r9, rdx	# pattern, _522
 10632              	.LVL673:
 250:sieve_extend.c **** 
 10633              		.loc 1 250 67 is_stmt 1 view .LVU3691
 250:sieve_extend.c **** 
 10634              		.loc 1 250 41 view .LVU3692
 10635              	# sieve_extend.c:250:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize
 250:sieve_extend.c **** 
 10636              		.loc 1 250 5 is_stmt 0 view .LVU3693
 10637 3acb 4883FE40 		cmp	rsi, 64	# patternsize,
 10638 3acf 0F8650FF 		jbe	.L728	#,
 10638      FFFF
 10639              	.LVL674:
 10640              		.p2align 4,,10
 10641 3ad5 0F1F00   		.p2align 3
 10642              	.L727:
 250:sieve_extend.c **** 
GAS LISTING /tmp/ccW0oq2B.s 			page 292


 10643              		.loc 1 250 5 view .LVU3694
 10644              	.LBE573:
 253:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 10645              		.loc 1 253 5 is_stmt 1 view .LVU3695
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 10646              		.loc 1 254 5 view .LVU3696
 10647              	# sieve_extend.c:254:     register counter_t copy_word = wordindex(range_start);
 254:sieve_extend.c ****      if (copy_word == range_stop_word) { // shortcut
 10648              		.loc 1 254 24 is_stmt 0 view .LVU3697
 10649 3ad8 4989C6   		mov	r14, rax	# copy_word, index
 10650 3adb 49C1EE06 		shr	r14, 6	# copy_word,
 10651              	.LVL675:
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10652              		.loc 1 255 6 is_stmt 1 view .LVU3698
 10653 3adf 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _1696,
 10653      00000000 
 10654 3ae7 498D0C34 		lea	rcx, [r12+rsi]	# _1697,
 10655 3aeb 488B11   		mov	rdx, QWORD PTR [rcx]	# pretmp_1698, *_1697
 10656 3aee C442F9F7 		shlx	r11, r9, rax	# _1700, pattern, index
 10656      D9
 10657              	# sieve_extend.c:255:      if (copy_word == range_stop_word) { // shortcut
 255:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 10658              		.loc 1 255 9 is_stmt 0 view .LVU3699
 10659 3af3 4D39F7   		cmp	r15, r14	# range_stop_word, copy_word
 10660 3af6 0F84E402 		je	.L1585	#,
 10660      0000
 260:sieve_extend.c **** 
 10661              		.loc 1 260 5 is_stmt 1 view .LVU3700
 10662              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 10663              		.loc 1 260 27 is_stmt 0 view .LVU3701
 10664 3afc 4C09DA   		or	rdx, r11	# tmp825, _1700
 10665 3aff 488911   		mov	QWORD PTR [rcx], rdx	# *_1697, tmp825
 10666              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10667              		.loc 1 264 28 view .LVU3702
 10668 3b02 83E03F   		and	eax, 63	# tmp826,
 10669              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10670              		.loc 1 264 55 view .LVU3703
 10671 3b05 31D2     		xor	edx, edx	# tmp828
 10672 3b07 49F7F2   		div	r10	# step
 10673              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10674              		.loc 1 265 25 view .LVU3704
 10675 3b0a B8400000 		mov	eax, 64	# tmp833,
 10675      00
 10676              	# sieve_extend.c:260:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 260:sieve_extend.c **** 
 10677              		.loc 1 260 23 view .LVU3705
 10678 3b0f 498D5E01 		lea	rbx, 1[r14]	# copy_word,
 10679              	.LVL676:
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10680              		.loc 1 264 5 is_stmt 1 view .LVU3706
 10681              	# sieve_extend.c:264:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 264:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 10682              		.loc 1 264 13 is_stmt 0 view .LVU3707
GAS LISTING /tmp/ccW0oq2B.s 			page 293


 10683 3b13 C4C2E9F7 		shlx	rcx, r9, rdx	# pattern, pattern, tmp828
 10683      C9
 10684              	.LVL677:
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10685              		.loc 1 265 5 is_stmt 1 view .LVU3708
 10686              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10687              		.loc 1 265 25 is_stmt 0 view .LVU3709
 10688 3b18 31D2     		xor	edx, edx	# tmp832
 10689              	.LVL678:
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10690              		.loc 1 265 25 view .LVU3710
 10691 3b1a 49F7F2   		div	r10	# step
 10692              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 10693              		.loc 1 266 84 view .LVU3711
 10694 3b1d B8200000 		mov	eax, 32	# tmp834,
 10694      00
 10695 3b22 4829D0   		sub	rax, rdx	# tmp834, tmp832
 10696              	# sieve_extend.c:266:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 266:sieve_extend.c ****     // copy_word++;
 10697              		.loc 1 266 25 view .LVU3712
 10698 3b25 4801C0   		add	rax, rax	# pattern_shift_flipped
 10699              	# sieve_extend.c:265:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 265:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 10700              		.loc 1 265 25 view .LVU3713
 10701 3b28 4989D3   		mov	r11, rdx	# tmp832, tmp832
 10702              	.LVL679:
 266:sieve_extend.c ****     // copy_word++;
 10703              		.loc 1 266 5 is_stmt 1 view .LVU3714
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10704              		.loc 1 270 5 view .LVU3715
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10705              		.loc 1 270 11 view .LVU3716
 10706 3b2b 4189D2   		mov	r10d, edx	# _1927, tmp832
 10707              	.LVL680:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10708              		.loc 1 270 11 is_stmt 0 view .LVU3717
 10709 3b2e 4189C1   		mov	r9d, eax	# _1928, pattern_shift_flipped
 10710              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10711              		.loc 1 270 5 view .LVU3718
 10712 3b31 4939DF   		cmp	r15, rbx	# range_stop_word, copy_word
 10713 3b34 0F867801 		jbe	.L731	#,
 10713      0000
 10714 3b3a 498D5434 		lea	rdx, 8[r12+rsi]	# ivtmp.555,
 10714      08
 10715              	.LVL681:
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10716              		.loc 1 270 5 view .LVU3719
 10717 3b3f 4C89C6   		mov	rsi, r8	# tmp1054, range_stop_ptr
 10718 3b42 4829D6   		sub	rsi, rdx	# tmp1054, ivtmp.555
 10719 3b45 4883EE08 		sub	rsi, 8	# tmp1055,
 10720 3b49 48C1EE03 		shr	rsi, 3	# tmp1053,
 10721 3b4d 48FFC6   		inc	rsi	# tmp1056
 10722 3b50 83E607   		and	esi, 7	# tmp1057,
 10723 3b53 0F84BD00 		je	.L732	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 294


 10723      0000
 10724 3b59 4883FE01 		cmp	rsi, 1	# tmp1057,
 10725 3b5d 0F849600 		je	.L1139	#,
 10725      0000
 10726 3b63 4883FE02 		cmp	rsi, 2	# tmp1057,
 10727 3b67 747C     		je	.L1140	#,
 10728 3b69 4883FE03 		cmp	rsi, 3	# tmp1057,
 10729 3b6d 7462     		je	.L1141	#,
 10730 3b6f 4883FE04 		cmp	rsi, 4	# tmp1057,
 10731 3b73 7448     		je	.L1142	#,
 10732 3b75 4883FE05 		cmp	rsi, 5	# tmp1057,
 10733 3b79 742E     		je	.L1143	#,
 10734 3b7b 4883FE06 		cmp	rsi, 6	# tmp1057,
 10735 3b7f 7414     		je	.L1144	#,
 10736              	.LVL682:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10737              		.loc 1 271 9 is_stmt 1 view .LVU3720
 10738              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10739              		.loc 1 271 28 is_stmt 0 view .LVU3721
 10740 3b81 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10740      F1
 10741              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10742              		.loc 1 271 57 view .LVU3722
 10743 3b86 C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10743      C9
 10744              	.LVL683:
 10745              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10746              		.loc 1 271 17 view .LVU3723
 10747 3b8b 4809F1   		or	rcx, rsi	# pattern, _555
 10748              	.LVL684:
 272:sieve_extend.c ****     } 
 10749              		.loc 1 272 9 is_stmt 1 view .LVU3724
 10750              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10751              		.loc 1 272 29 is_stmt 0 view .LVU3725
 10752 3b8e 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10753              		.loc 1 270 40 is_stmt 1 view .LVU3726
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10754              		.loc 1 270 11 view .LVU3727
 10755 3b91 4883C208 		add	rdx, 8	# ivtmp.555,
 10756              	.LVL685:
 10757              	.L1144:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10758              		.loc 1 271 9 view .LVU3728
 10759              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10760              		.loc 1 271 28 is_stmt 0 view .LVU3729
 10761 3b95 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10761      F1
 10762              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10763              		.loc 1 271 57 view .LVU3730
 10764 3b9a C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
GAS LISTING /tmp/ccW0oq2B.s 			page 295


 10764      C9
 10765              	.LVL686:
 10766              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10767              		.loc 1 271 17 view .LVU3731
 10768 3b9f 4809F1   		or	rcx, rsi	# pattern, _555
 10769              	.LVL687:
 272:sieve_extend.c ****     } 
 10770              		.loc 1 272 9 is_stmt 1 view .LVU3732
 10771              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10772              		.loc 1 272 29 is_stmt 0 view .LVU3733
 10773 3ba2 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10774              		.loc 1 270 40 is_stmt 1 view .LVU3734
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10775              		.loc 1 270 11 view .LVU3735
 10776 3ba5 4883C208 		add	rdx, 8	# ivtmp.555,
 10777              	.LVL688:
 10778              	.L1143:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10779              		.loc 1 271 9 view .LVU3736
 10780              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10781              		.loc 1 271 28 is_stmt 0 view .LVU3737
 10782 3ba9 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10782      F1
 10783              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10784              		.loc 1 271 57 view .LVU3738
 10785 3bae C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10785      C9
 10786              	.LVL689:
 10787              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10788              		.loc 1 271 17 view .LVU3739
 10789 3bb3 4809F1   		or	rcx, rsi	# pattern, _555
 10790              	.LVL690:
 272:sieve_extend.c ****     } 
 10791              		.loc 1 272 9 is_stmt 1 view .LVU3740
 10792              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10793              		.loc 1 272 29 is_stmt 0 view .LVU3741
 10794 3bb6 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10795              		.loc 1 270 40 is_stmt 1 view .LVU3742
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10796              		.loc 1 270 11 view .LVU3743
 10797 3bb9 4883C208 		add	rdx, 8	# ivtmp.555,
 10798              	.LVL691:
 10799              	.L1142:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10800              		.loc 1 271 9 view .LVU3744
 10801              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10802              		.loc 1 271 28 is_stmt 0 view .LVU3745
 10803 3bbd C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
GAS LISTING /tmp/ccW0oq2B.s 			page 296


 10803      F1
 10804              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10805              		.loc 1 271 57 view .LVU3746
 10806 3bc2 C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10806      C9
 10807              	.LVL692:
 10808              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10809              		.loc 1 271 17 view .LVU3747
 10810 3bc7 4809F1   		or	rcx, rsi	# pattern, _555
 10811              	.LVL693:
 272:sieve_extend.c ****     } 
 10812              		.loc 1 272 9 is_stmt 1 view .LVU3748
 10813              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10814              		.loc 1 272 29 is_stmt 0 view .LVU3749
 10815 3bca 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10816              		.loc 1 270 40 is_stmt 1 view .LVU3750
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10817              		.loc 1 270 11 view .LVU3751
 10818 3bcd 4883C208 		add	rdx, 8	# ivtmp.555,
 10819              	.LVL694:
 10820              	.L1141:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10821              		.loc 1 271 9 view .LVU3752
 10822              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10823              		.loc 1 271 28 is_stmt 0 view .LVU3753
 10824 3bd1 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10824      F1
 10825              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10826              		.loc 1 271 57 view .LVU3754
 10827 3bd6 C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10827      C9
 10828              	.LVL695:
 10829              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10830              		.loc 1 271 17 view .LVU3755
 10831 3bdb 4809F1   		or	rcx, rsi	# pattern, _555
 10832              	.LVL696:
 272:sieve_extend.c ****     } 
 10833              		.loc 1 272 9 is_stmt 1 view .LVU3756
 10834              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10835              		.loc 1 272 29 is_stmt 0 view .LVU3757
 10836 3bde 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10837              		.loc 1 270 40 is_stmt 1 view .LVU3758
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10838              		.loc 1 270 11 view .LVU3759
 10839 3be1 4883C208 		add	rdx, 8	# ivtmp.555,
 10840              	.LVL697:
 10841              	.L1140:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
GAS LISTING /tmp/ccW0oq2B.s 			page 297


 10842              		.loc 1 271 9 view .LVU3760
 10843              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10844              		.loc 1 271 28 is_stmt 0 view .LVU3761
 10845 3be5 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10845      F1
 10846              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10847              		.loc 1 271 57 view .LVU3762
 10848 3bea C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10848      C9
 10849              	.LVL698:
 10850              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10851              		.loc 1 271 17 view .LVU3763
 10852 3bef 4809F1   		or	rcx, rsi	# pattern, _555
 10853              	.LVL699:
 272:sieve_extend.c ****     } 
 10854              		.loc 1 272 9 is_stmt 1 view .LVU3764
 10855              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10856              		.loc 1 272 29 is_stmt 0 view .LVU3765
 10857 3bf2 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10858              		.loc 1 270 40 is_stmt 1 view .LVU3766
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10859              		.loc 1 270 11 view .LVU3767
 10860 3bf5 4883C208 		add	rdx, 8	# ivtmp.555,
 10861              	.LVL700:
 10862              	.L1139:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10863              		.loc 1 271 9 view .LVU3768
 10864              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10865              		.loc 1 271 28 is_stmt 0 view .LVU3769
 10866 3bf9 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10866      F1
 10867              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10868              		.loc 1 271 57 view .LVU3770
 10869 3bfe C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10869      C9
 10870              	.LVL701:
 10871              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10872              		.loc 1 271 17 view .LVU3771
 10873 3c03 4809F1   		or	rcx, rsi	# pattern, _555
 10874              	.LVL702:
 272:sieve_extend.c ****     } 
 10875              		.loc 1 272 9 is_stmt 1 view .LVU3772
 10876              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10877              		.loc 1 272 29 is_stmt 0 view .LVU3773
 10878 3c06 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10879              		.loc 1 270 40 is_stmt 1 view .LVU3774
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/ccW0oq2B.s 			page 298


 10880              		.loc 1 270 11 view .LVU3775
 10881 3c09 4883C208 		add	rdx, 8	# ivtmp.555,
 10882              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10883              		.loc 1 270 5 is_stmt 0 view .LVU3776
 10884 3c0d 4939D0   		cmp	r8, rdx	# range_stop_ptr, ivtmp.555
 10885 3c10 0F849400 		je	.L1366	#,
 10885      0000
 10886              	.LVL703:
 10887              	.L732:
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10888              		.loc 1 271 9 is_stmt 1 view .LVU3777
 10889              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10890              		.loc 1 271 28 is_stmt 0 view .LVU3778
 10891 3c16 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10891      F1
 10892              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10893              		.loc 1 271 57 view .LVU3779
 10894 3c1b C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10894      C9
 10895              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10896              		.loc 1 271 17 view .LVU3780
 10897 3c20 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10898              		.loc 1 272 9 is_stmt 1 view .LVU3781
 10899              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10900              		.loc 1 272 29 is_stmt 0 view .LVU3782
 10901 3c23 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10902              		.loc 1 270 40 is_stmt 1 view .LVU3783
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10903              		.loc 1 270 11 view .LVU3784
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10904              		.loc 1 271 9 view .LVU3785
 10905              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10906              		.loc 1 271 28 is_stmt 0 view .LVU3786
 10907 3c26 C4E2ABF7 		shrx	rcx, rsi, r10	# _555, pattern, _1927
 10907      CE
 10908              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10909              		.loc 1 271 57 view .LVU3787
 10910 3c2b C4E2B1F7 		shlx	rsi, rsi, r9	# _557, pattern, _1928
 10910      F6
 10911              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10912              		.loc 1 271 17 view .LVU3788
 10913 3c30 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10914              		.loc 1 272 9 is_stmt 1 view .LVU3789
 10915              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10916              		.loc 1 272 29 is_stmt 0 view .LVU3790
GAS LISTING /tmp/ccW0oq2B.s 			page 299


 10917 3c33 48094A08 		or	QWORD PTR 8[rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10918              		.loc 1 270 40 is_stmt 1 view .LVU3791
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10919              		.loc 1 270 11 view .LVU3792
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10920              		.loc 1 271 9 view .LVU3793
 10921              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10922              		.loc 1 271 28 is_stmt 0 view .LVU3794
 10923 3c37 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10923      F1
 10924              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10925              		.loc 1 271 57 view .LVU3795
 10926 3c3c C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10926      C9
 10927              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10928              		.loc 1 271 17 view .LVU3796
 10929 3c41 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10930              		.loc 1 272 9 is_stmt 1 view .LVU3797
 10931              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10932              		.loc 1 272 29 is_stmt 0 view .LVU3798
 10933 3c44 48097210 		or	QWORD PTR 16[rdx], rsi	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10934              		.loc 1 270 40 is_stmt 1 view .LVU3799
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10935              		.loc 1 270 11 view .LVU3800
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10936              		.loc 1 271 9 view .LVU3801
 10937              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10938              		.loc 1 271 28 is_stmt 0 view .LVU3802
 10939 3c48 C4E2ABF7 		shrx	rcx, rsi, r10	# _555, pattern, _1927
 10939      CE
 10940              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10941              		.loc 1 271 57 view .LVU3803
 10942 3c4d C4E2B1F7 		shlx	rsi, rsi, r9	# _557, pattern, _1928
 10942      F6
 10943              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10944              		.loc 1 271 17 view .LVU3804
 10945 3c52 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10946              		.loc 1 272 9 is_stmt 1 view .LVU3805
 10947              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10948              		.loc 1 272 29 is_stmt 0 view .LVU3806
 10949 3c55 48094A18 		or	QWORD PTR 24[rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10950              		.loc 1 270 40 is_stmt 1 view .LVU3807
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10951              		.loc 1 270 11 view .LVU3808
GAS LISTING /tmp/ccW0oq2B.s 			page 300


 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10952              		.loc 1 271 9 view .LVU3809
 10953              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10954              		.loc 1 271 28 is_stmt 0 view .LVU3810
 10955 3c59 C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10955      F1
 10956              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10957              		.loc 1 271 57 view .LVU3811
 10958 3c5e C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10958      C9
 10959              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10960              		.loc 1 271 17 view .LVU3812
 10961 3c63 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10962              		.loc 1 272 9 is_stmt 1 view .LVU3813
 10963              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10964              		.loc 1 272 29 is_stmt 0 view .LVU3814
 10965 3c66 48097220 		or	QWORD PTR 32[rdx], rsi	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10966              		.loc 1 270 40 is_stmt 1 view .LVU3815
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10967              		.loc 1 270 11 view .LVU3816
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10968              		.loc 1 271 9 view .LVU3817
 10969              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10970              		.loc 1 271 28 is_stmt 0 view .LVU3818
 10971 3c6a C4E2ABF7 		shrx	rcx, rsi, r10	# _555, pattern, _1927
 10971      CE
 10972              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10973              		.loc 1 271 57 view .LVU3819
 10974 3c6f C4E2B1F7 		shlx	rsi, rsi, r9	# _557, pattern, _1928
 10974      F6
 10975              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10976              		.loc 1 271 17 view .LVU3820
 10977 3c74 4809F1   		or	rcx, rsi	# pattern, _557
 272:sieve_extend.c ****     } 
 10978              		.loc 1 272 9 is_stmt 1 view .LVU3821
 10979              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10980              		.loc 1 272 29 is_stmt 0 view .LVU3822
 10981 3c77 48094A28 		or	QWORD PTR 40[rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10982              		.loc 1 270 40 is_stmt 1 view .LVU3823
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10983              		.loc 1 270 11 view .LVU3824
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10984              		.loc 1 271 9 view .LVU3825
 10985              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10986              		.loc 1 271 28 is_stmt 0 view .LVU3826
GAS LISTING /tmp/ccW0oq2B.s 			page 301


 10987 3c7b C4E2ABF7 		shrx	rsi, rcx, r10	# _555, pattern, _1927
 10987      F1
 10988              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10989              		.loc 1 271 57 view .LVU3827
 10990 3c80 C4E2B1F7 		shlx	rcx, rcx, r9	# _557, pattern, _1928
 10990      C9
 10991              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 10992              		.loc 1 271 17 view .LVU3828
 10993 3c85 4809CE   		or	rsi, rcx	# pattern, _557
 272:sieve_extend.c ****     } 
 10994              		.loc 1 272 9 is_stmt 1 view .LVU3829
 10995              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 10996              		.loc 1 272 29 is_stmt 0 view .LVU3830
 10997 3c88 48097230 		or	QWORD PTR 48[rdx], rsi	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10998              		.loc 1 270 40 is_stmt 1 view .LVU3831
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 10999              		.loc 1 270 11 view .LVU3832
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11000              		.loc 1 271 9 view .LVU3833
 11001              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11002              		.loc 1 271 28 is_stmt 0 view .LVU3834
 11003 3c8c C4E2ABF7 		shrx	rcx, rsi, r10	# _555, pattern, _1927
 11003      CE
 11004              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11005              		.loc 1 271 57 view .LVU3835
 11006 3c91 C4E2B1F7 		shlx	rsi, rsi, r9	# _557, pattern, _1928
 11006      F6
 11007              	.LVL704:
 11008              	# sieve_extend.c:271:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 271:sieve_extend.c ****         bitarray[copy_word] |= pattern;
 11009              		.loc 1 271 17 view .LVU3836
 11010 3c96 4809F1   		or	rcx, rsi	# pattern, _557
 11011              	.LVL705:
 272:sieve_extend.c ****     } 
 11012              		.loc 1 272 9 is_stmt 1 view .LVU3837
 11013              	# sieve_extend.c:272:         bitarray[copy_word] |= pattern;
 272:sieve_extend.c ****     } 
 11014              		.loc 1 272 29 is_stmt 0 view .LVU3838
 11015 3c99 48094A38 		or	QWORD PTR 56[rdx], rcx	# MEM[base: _1801, offset: 0B], pattern
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11016              		.loc 1 270 40 is_stmt 1 view .LVU3839
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11017              		.loc 1 270 11 view .LVU3840
 11018 3c9d 4883C240 		add	rdx, 64	# ivtmp.555,
 11019              	# sieve_extend.c:270:     for (;copy_word < range_stop_word; copy_word++) {
 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11020              		.loc 1 270 5 is_stmt 0 view .LVU3841
 11021 3ca1 4939D0   		cmp	r8, rdx	# range_stop_ptr, ivtmp.555
 11022 3ca4 0F856CFF 		jne	.L732	#,
 11022      FFFF
 11023              	.L1366:
GAS LISTING /tmp/ccW0oq2B.s 			page 302


 270:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11024              		.loc 1 270 5 view .LVU3842
 11025 3caa 48035C24 		add	rbx, QWORD PTR 88[rsp]	# _330, %sfp
 11025      58
 11026 3caf 4C29F3   		sub	rbx, r14	# copy_word, copy_word
 11027              	.LVL706:
 11028              	.L731:
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11029              		.loc 1 275 5 is_stmt 1 view .LVU3843
 11030              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11031              		.loc 1 275 24 is_stmt 0 view .LVU3844
 11032 3cb2 C462A3F7 		shrx	r14, rcx, r11	# _567, pattern, tmp832
 11032      F1
 11033              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11034              		.loc 1 275 53 view .LVU3845
 11035 3cb7 C462F9F7 		shlx	r11, rcx, rax	# _569, pattern, pattern_shift_flipped
 11035      D9
 11036              	.LVL707:
 276:sieve_extend.c **** }
 11037              		.loc 1 276 5 is_stmt 1 view .LVU3846
 11038              	# sieve_extend.c:275:     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped)
 275:sieve_extend.c ****     bitarray[copy_word] |= pattern & chopmask(range_stop);
 11039              		.loc 1 275 13 is_stmt 0 view .LVU3847
 11040 3cbc 4D09DE   		or	r14, r11	# pattern, _569
 11041              	.LVL708:
 11042              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 11043              		.loc 1 276 36 view .LVU3848
 11044 3cbf 4C237424 		and	r14, QWORD PTR 112[rsp]	# tmp841, %sfp
 11044      70
 11045              	.LVL709:
 11046              	# sieve_extend.c:276:     bitarray[copy_word] |= pattern & chopmask(range_stop);
 276:sieve_extend.c **** }
 11047              		.loc 1 276 25 view .LVU3849
 11048 3cc4 4D0934DC 		or	QWORD PTR [r12+rbx*8], r14	# *_573, tmp841
 11049              	.LVL710:
 11050              	.L730:
 276:sieve_extend.c **** }
 11051              		.loc 1 276 25 view .LVU3850
 11052              	.LBE574:
 11053              	.LBE576:
 872:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11054              		.loc 1 872 9 is_stmt 1 view .LVU3851
 11055              	.LBB577:
 11056              	.LBI577:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11057              		.loc 1 123 25 view .LVU3852
 11058              	.LBB578:
 124:sieve_extend.c ****     return index;
 11059              		.loc 1 124 5 view .LVU3853
 124:sieve_extend.c ****     return index;
 11060              		.loc 1 124 11 view .LVU3854
 11061              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11062              		.loc 1 124 21 is_stmt 0 view .LVU3855
GAS LISTING /tmp/ccW0oq2B.s 			page 303


 11063 3cc8 4889FB   		mov	rbx, rdi	# tmp842, index
 11064 3ccb 48C1EB06 		shr	rbx, 6	# tmp842,
 11065              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11066              		.loc 1 124 12 view .LVU3856
 11067 3ccf 4D8B14DC 		mov	r10, QWORD PTR [r12+rbx*8]	# *_480,* pretmp_1655
 11068              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11069              		.loc 1 124 11 view .LVU3857
 11070 3cd3 490FA3FA 		bt	r10, rdi	# *_480, index
 11071 3cd7 0F83A300 		jnc	.L807	#,
 11071      0000
 124:sieve_extend.c ****     return index;
 11072              		.loc 1 124 58 is_stmt 1 view .LVU3858
 11073              	.LVL711:
 11074              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11075              		.loc 1 124 63 is_stmt 0 view .LVU3859
 11076 3cdd 488D4701 		lea	rax, 1[rdi]	# tmp1052,
 11077              	.LVL712:
 11078              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11079              		.loc 1 124 21 view .LVU3860
 11080 3ce1 4989C1   		mov	r9, rax	# tmp847, index
 11081 3ce4 49C1E906 		shr	r9, 6	# tmp847,
 11082              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11083              		.loc 1 124 12 view .LVU3861
 11084 3ce8 4B8B14CC 		mov	rdx, QWORD PTR [r12+r9*8]	# *_383, *_383
 11085              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11086              		.loc 1 124 63 view .LVU3862
 11087 3cec 4889C7   		mov	rdi, rax	# index, tmp1052
 124:sieve_extend.c ****     return index;
 11088              		.loc 1 124 11 is_stmt 1 view .LVU3863
 11089 3cef 480FA3C2 		bt	rdx, rax	# *_383, index
 11090 3cf3 0F838700 		jnc	.L807	#,
 11090      0000
 124:sieve_extend.c ****     return index;
 11091              		.loc 1 124 58 view .LVU3864
 11092              	.LVL713:
 11093              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11094              		.loc 1 124 63 is_stmt 0 view .LVU3865
 11095 3cf9 48FFC7   		inc	rdi	# index
 11096              	.LVL714:
 124:sieve_extend.c ****     return index;
 11097              		.loc 1 124 11 is_stmt 1 view .LVU3866
 11098              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11099              		.loc 1 124 21 is_stmt 0 view .LVU3867
 11100 3cfc 4889F9   		mov	rcx, rdi	# tmp1459, index
 11101 3cff 48C1E906 		shr	rcx, 6	# tmp1459,
 11102              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11103              		.loc 1 124 12 view .LVU3868
 11104 3d03 498B34CC 		mov	rsi, QWORD PTR [r12+rcx*8]	# *_383, *_383
GAS LISTING /tmp/ccW0oq2B.s 			page 304


 11105              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11106              		.loc 1 124 11 view .LVU3869
 11107 3d07 480FA3FE 		bt	rsi, rdi	# *_383, index
 11108 3d0b 7373     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11109              		.loc 1 124 58 is_stmt 1 view .LVU3870
 11110              	.LVL715:
 11111              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11112              		.loc 1 124 63 is_stmt 0 view .LVU3871
 11113 3d0d 488D7802 		lea	rdi, 2[rax]	# index,
 11114              	.LVL716:
 124:sieve_extend.c ****     return index;
 11115              		.loc 1 124 11 is_stmt 1 view .LVU3872
 11116              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11117              		.loc 1 124 21 is_stmt 0 view .LVU3873
 11118 3d11 4989FE   		mov	r14, rdi	# tmp1463, index
 11119 3d14 49C1EE06 		shr	r14, 6	# tmp1463,
 11120              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11121              		.loc 1 124 12 view .LVU3874
 11122 3d18 4F8B1CF4 		mov	r11, QWORD PTR [r12+r14*8]	# *_383, *_383
 11123              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11124              		.loc 1 124 11 view .LVU3875
 11125 3d1c 490FA3FB 		bt	r11, rdi	# *_383, index
 11126 3d20 735E     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11127              		.loc 1 124 58 is_stmt 1 view .LVU3876
 11128              	.LVL717:
 11129              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11130              		.loc 1 124 63 is_stmt 0 view .LVU3877
 11131 3d22 488D7803 		lea	rdi, 3[rax]	# index,
 11132              	.LVL718:
 124:sieve_extend.c ****     return index;
 11133              		.loc 1 124 11 is_stmt 1 view .LVU3878
 11134              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11135              		.loc 1 124 21 is_stmt 0 view .LVU3879
 11136 3d26 4889FB   		mov	rbx, rdi	# tmp1467, index
 11137 3d29 48C1EB06 		shr	rbx, 6	# tmp1467,
 11138              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11139              		.loc 1 124 12 view .LVU3880
 11140 3d2d 4D8B14DC 		mov	r10, QWORD PTR [r12+rbx*8]	# *_383, *_383
 11141              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11142              		.loc 1 124 11 view .LVU3881
 11143 3d31 490FA3FA 		bt	r10, rdi	# *_383, index
 11144 3d35 7349     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11145              		.loc 1 124 58 is_stmt 1 view .LVU3882
 11146              	.LVL719:
 11147              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 305


 124:sieve_extend.c ****     return index;
 11148              		.loc 1 124 63 is_stmt 0 view .LVU3883
 11149 3d37 488D7804 		lea	rdi, 4[rax]	# index,
 11150              	.LVL720:
 124:sieve_extend.c ****     return index;
 11151              		.loc 1 124 11 is_stmt 1 view .LVU3884
 11152              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11153              		.loc 1 124 21 is_stmt 0 view .LVU3885
 11154 3d3b 4989F9   		mov	r9, rdi	# tmp1471, index
 11155 3d3e 49C1E906 		shr	r9, 6	# tmp1471,
 11156              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11157              		.loc 1 124 12 view .LVU3886
 11158 3d42 4B8B14CC 		mov	rdx, QWORD PTR [r12+r9*8]	# *_383, *_383
 11159              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11160              		.loc 1 124 11 view .LVU3887
 11161 3d46 480FA3FA 		bt	rdx, rdi	# *_383, index
 11162 3d4a 7334     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11163              		.loc 1 124 58 is_stmt 1 view .LVU3888
 11164              	.LVL721:
 11165              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11166              		.loc 1 124 63 is_stmt 0 view .LVU3889
 11167 3d4c 488D7805 		lea	rdi, 5[rax]	# index,
 11168              	.LVL722:
 124:sieve_extend.c ****     return index;
 11169              		.loc 1 124 11 is_stmt 1 view .LVU3890
 11170              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11171              		.loc 1 124 21 is_stmt 0 view .LVU3891
 11172 3d50 4889F9   		mov	rcx, rdi	# tmp1475, index
 11173 3d53 48C1E906 		shr	rcx, 6	# tmp1475,
 11174              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11175              		.loc 1 124 12 view .LVU3892
 11176 3d57 498B34CC 		mov	rsi, QWORD PTR [r12+rcx*8]	# *_383, *_383
 11177              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11178              		.loc 1 124 11 view .LVU3893
 11179 3d5b 480FA3FE 		bt	rsi, rdi	# *_383, index
 11180 3d5f 731F     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11181              		.loc 1 124 58 is_stmt 1 view .LVU3894
 11182              	.LVL723:
 11183              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11184              		.loc 1 124 63 is_stmt 0 view .LVU3895
 11185 3d61 488D7806 		lea	rdi, 6[rax]	# index,
 11186              	.LVL724:
 124:sieve_extend.c ****     return index;
 11187              		.loc 1 124 11 is_stmt 1 view .LVU3896
 11188              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11189              		.loc 1 124 21 is_stmt 0 view .LVU3897
GAS LISTING /tmp/ccW0oq2B.s 			page 306


 11190 3d65 4989FE   		mov	r14, rdi	# tmp1479, index
 11191 3d68 49C1EE06 		shr	r14, 6	# tmp1479,
 11192              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11193              		.loc 1 124 12 view .LVU3898
 11194 3d6c 4F8B1CF4 		mov	r11, QWORD PTR [r12+r14*8]	# *_383, *_383
 11195              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11196              		.loc 1 124 11 view .LVU3899
 11197 3d70 490FA3FB 		bt	r11, rdi	# *_383, index
 11198 3d74 730A     		jnc	.L807	#,
 124:sieve_extend.c ****     return index;
 11199              		.loc 1 124 58 is_stmt 1 view .LVU3900
 11200              	.LVL725:
 11201              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 11202              		.loc 1 124 63 is_stmt 0 view .LVU3901
 11203 3d76 488D7807 		lea	rdi, 7[rax]	# index,
 11204              	.LVL726:
 124:sieve_extend.c ****     return index;
 11205              		.loc 1 124 11 is_stmt 1 view .LVU3902
 11206 3d7a E949FFFF 		jmp	.L730	#
 11206      FF
 11207              	.LVL727:
 11208 3d7f 90       		.p2align 4,,10
 11209              		.p2align 3
 11210              	.L807:
 124:sieve_extend.c ****     return index;
 11211              		.loc 1 124 11 is_stmt 0 view .LVU3903
 11212              	.LBE578:
 11213              	.LBE577:
 11214              	# sieve_extend.c:873:         start = prime * prime * 2 + prime * 2;
 873:sieve_extend.c ****     }
 11215              		.loc 1 873 35 view .LVU3904
 11216 3d80 488D4701 		lea	rax, 1[rdi]	# tmp852,
 11217              	# sieve_extend.c:870:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 870:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11218              		.loc 1 870 35 view .LVU3905
 11219 3d84 4889FE   		mov	rsi, rdi	# prime, index
 11220              	.LBB580:
 11221              	.LBB579:
 125:sieve_extend.c **** }
 11222              		.loc 1 125 5 is_stmt 1 view .LVU3906
 11223              	.LVL728:
 125:sieve_extend.c **** }
 11224              		.loc 1 125 5 is_stmt 0 view .LVU3907
 11225              	.LBE579:
 11226              	.LBE580:
 873:sieve_extend.c ****     }
 11227              		.loc 1 873 9 is_stmt 1 view .LVU3908
 11228              	# sieve_extend.c:873:         start = prime * prime * 2 + prime * 2;
 873:sieve_extend.c ****     }
 11229              		.loc 1 873 15 is_stmt 0 view .LVU3909
 11230 3d87 480FAFF8 		imul	rdi, rax	# tmp853, tmp852
 11231              	.LVL729:
 873:sieve_extend.c ****     }
 11232              		.loc 1 873 15 view .LVU3910
GAS LISTING /tmp/ccW0oq2B.s 			page 307


 11233 3d8b 488D043F 		lea	rax, [rdi+rdi]	# index,
 867:sieve_extend.c ****         step  = prime * 2 + 1;
 11234              		.loc 1 867 11 is_stmt 1 view .LVU3911
 11235 3d8f 48394424 		cmp	QWORD PTR 104[rsp], rax	# %sfp, index
 11235      68
 11236 3d94 0F8346FC 		jnb	.L735	#,
 11236      FFFF
 11237 3d9a 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# <retval>, %sfp
 11237      50
 11238 3d9f 4C8B7C24 		mov	r15, QWORD PTR 104[rsp]	# block_stop, %sfp
 11238      68
 11239 3da4 498B4008 		mov	rax, QWORD PTR 8[r8]	# _8, sieve_89->bits
 11240              	.LVL730:
 11241 3da8 0F1F8400 		.p2align 4,,10
 11241      00000000 
 11242              		.p2align 3
 11243              	.L725:
 867:sieve_extend.c ****         step  = prime * 2 + 1;
 11244              		.loc 1 867 11 is_stmt 0 view .LVU3912
 11245              	.LBE635:
 11246              	.LBE642:
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11247              		.loc 1 991 91 is_stmt 1 view .LVU3913
 11248              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11249              		.loc 1 991 103 is_stmt 0 view .LVU3914
 11250 3db0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# blocksize, %sfp
 11250      30
 11251 3db5 48015424 		add	QWORD PTR 120[rsp], rdx	# %sfp, blocksize
 11251      78
 11252              	.LVL731:
 11253              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11254              		.loc 1 991 128 view .LVU3915
 11255 3dba 4E8D3C3A 		lea	r15, [rdx+r15]	# block_stop,
 11256              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11257              		.loc 1 991 103 view .LVU3916
 11258 3dbe 488B7424 		mov	rsi, QWORD PTR 120[rsp]	# block_start, %sfp
 11258      78
 11259              	.LVL732:
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11260              		.loc 1 991 63 is_stmt 1 view .LVU3917
 11261              	# sieve_extend.c:991:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 991:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11262              		.loc 1 991 5 is_stmt 0 view .LVU3918
 11263 3dc3 4839F0   		cmp	rax, rsi	# _8, block_start
 11264 3dc6 0F83A4FA 		jnb	.L721	#,
 11264      FFFF
 11265              	.LBE545:
 11266              	# sieve_extend.c:998: }
 998:sieve_extend.c **** 
 11267              		.loc 1 998 1 view .LVU3919
 11268 3dcc 488B4424 		mov	rax, QWORD PTR 80[rsp]	#, %sfp
 11268      50
 11269 3dd1 488D65D8 		lea	rsp, -40[rbp]	#,
 11270              	.LVL733:
GAS LISTING /tmp/ccW0oq2B.s 			page 308


 998:sieve_extend.c **** 
 11271              		.loc 1 998 1 view .LVU3920
 11272 3dd5 5B       		pop	rbx	#
 11273 3dd6 415C     		pop	r12	#
 11274 3dd8 415D     		pop	r13	#
 11275 3dda 415E     		pop	r14	#
 11276 3ddc 415F     		pop	r15	#
 11277              	.LVL734:
 998:sieve_extend.c **** 
 11278              		.loc 1 998 1 view .LVU3921
 11279 3dde 5D       		pop	rbp	#
 11280              		.cfi_remember_state
 11281              		.cfi_def_cfa 7, 8
 11282              	.LVL735:
 998:sieve_extend.c **** 
 11283              		.loc 1 998 1 view .LVU3922
 11284 3ddf C3       		ret	
 11285              	.LVL736:
 11286              		.p2align 4,,10
 11287              		.p2align 3
 11288              	.L1585:
 11289              		.cfi_restore_state
 11290              	.LBB645:
 11291              	.LBB643:
 11292              	.LBB636:
 11293              	.LBB581:
 11294              	.LBB575:
 256:sieve_extend.c ****        return;
 11295              		.loc 1 256 8 is_stmt 1 view .LVU3923
 11296              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 11297              		.loc 1 256 67 is_stmt 0 view .LVU3924
 11298 3de0 4C235C24 		and	r11, QWORD PTR 112[rsp]	# tmp823, %sfp
 11298      70
 11299              	# sieve_extend.c:256:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 256:sieve_extend.c ****        return;
 11300              		.loc 1 256 28 view .LVU3925
 11301 3de5 4C09DA   		or	rdx, r11	# tmp824, tmp823
 11302 3de8 488911   		mov	QWORD PTR [rcx], rdx	# *_1697, tmp824
 257:sieve_extend.c ****     }
 11303              		.loc 1 257 8 is_stmt 1 view .LVU3926
 11304 3deb E9D8FEFF 		jmp	.L730	#
 11304      FF
 11305              	.LVL737:
 11306              		.p2align 4,,10
 11307              		.p2align 3
 11308              	.L806:
 11309              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11310              		.loc 1 249 21 is_stmt 0 view .LVU3927
 11311 3df0 41B90100 		mov	r9d, 1	# pattern,
 11311      0000
 11312 3df6 E9DDFCFF 		jmp	.L727	#
 11312      FF
 11313              	.LVL738:
 11314 3dfb 0F1F4400 		.p2align 4,,10
 11314      00
GAS LISTING /tmp/ccW0oq2B.s 			page 309


 11315              		.p2align 3
 11316              	.L1584:
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11317              		.loc 1 249 21 view .LVU3928
 11318 3e00 4C8B7C24 		mov	r15, QWORD PTR 104[rsp]	# block_stop, %sfp
 11318      68
 11319 3e05 4889C1   		mov	rcx, rax	# index, index
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 11320              		.loc 1 249 21 view .LVU3929
 11321              	.LBE575:
 11322              	.LBE581:
 876:sieve_extend.c ****         step  = prime * 2 + 1;
 11323              		.loc 1 876 11 is_stmt 1 view .LVU3930
 11324 3e08 4939C7   		cmp	r15, rax	# block_stop, index
 11325 3e0b 0F82C303 		jb	.L1567	#,
 11325      0000
 11326              	.LVL739:
 11327              		.p2align 4,,10
 11328 3e11 0F1F8000 		.p2align 3
 11328      000000
 11329              	.L756:
 877:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 11330              		.loc 1 877 9 view .LVU3931
 11331              	# sieve_extend.c:877:         step  = prime * 2 + 1;
 877:sieve_extend.c ****         if (step > MEDIUMSTEP_FASTER) break;
 11332              		.loc 1 877 15 is_stmt 0 view .LVU3932
 11333 3e18 4C8D4C36 		lea	r9, 1[rsi+rsi]	# step,
 11333      01
 11334              	.LVL740:
 878:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11335              		.loc 1 878 9 is_stmt 1 view .LVU3933
 11336              	# sieve_extend.c:878:         if (step > MEDIUMSTEP_FASTER) break;
 878:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 11337              		.loc 1 878 12 is_stmt 0 view .LVU3934
 11338 3e1d 4C3B0D00 		cmp	r9, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 11338      000000
 11339 3e24 0F87CE04 		ja	.L1586	#,
 11339      0000
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11340              		.loc 1 879 9 is_stmt 1 view .LVU3935
 11341              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11342              		.loc 1 879 12 is_stmt 0 view .LVU3936
 11343 3e2a 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 11343      78
 11344              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11345              		.loc 1 879 35 view .LVU3937
 11346 3e2f 4C8D5E01 		lea	r11, 1[rsi]	# _397,
 11347              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11348              		.loc 1 879 12 view .LVU3938
 11349 3e33 4939C3   		cmp	r11, rax	# _397, block_start
 11350 3e36 770F     		ja	.L739	#,
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11351              		.loc 1 879 41 is_stmt 1 view .LVU3939
 11352              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
GAS LISTING /tmp/ccW0oq2B.s 			page 310


 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11353              		.loc 1 879 61 is_stmt 0 view .LVU3940
 11354 3e38 4801F0   		add	rax, rsi	# _398, prime
 11355              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11356              		.loc 1 879 102 view .LVU3941
 11357 3e3b 31D2     		xor	edx, edx	# tmp857
 11358              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11359              		.loc 1 879 69 view .LVU3942
 11360 3e3d 488D0C30 		lea	rcx, [rax+rsi]	# tmp855,
 11361              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11362              		.loc 1 879 102 view .LVU3943
 11363 3e41 49F7F1   		div	r9	# step
 11364              	.LVL741:
 11365              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 11366              		.loc 1 879 47 view .LVU3944
 11367 3e44 4829D1   		sub	rcx, rdx	# index, tmp857
 11368              	.LVL742:
 11369              	.L739:
 880:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 11370              		.loc 1 880 9 is_stmt 1 view .LVU3945
 11371              	.LBB582:
 11372              	.LBI548:
 283:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11373              		.loc 1 283 20 view .LVU3946
 11374              	.LBB568:
 284:sieve_extend.c **** 
 11375              		.loc 1 284 5 view .LVU3947
 11376              	# sieve_extend.c:284:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 284:sieve_extend.c **** 
 11377              		.loc 1 284 74 is_stmt 0 view .LVU3948
 11378 3e47 4D89CE   		mov	r14, r9	# tmp859, step
 11379 3e4a 49C1E606 		sal	r14, 6	# tmp859,
 11380 3e4e 31DB     		xor	ebx, ebx	# _257
 11381 3e50 4901CE   		add	r14, rcx	# tmp860, index
 11382 3e53 0F92C3   		setc	bl	#, _257
 11383              	.LVL743:
 286:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11384              		.loc 1 286 5 is_stmt 1 view .LVU3949
 11385              	# sieve_extend.c:286:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 286:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11386              		.loc 1 286 8 is_stmt 0 view .LVU3950
 11387 3e56 4D39F7   		cmp	r15, r14	# block_stop, tmp860
 11388 3e59 0F829903 		jb	.L742	#,
 11388      0000
 11389              	.LVL744:
 11390              	.LBB557:
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11391              		.loc 1 307 54 is_stmt 1 view .LVU3951
 11392              	# sieve_extend.c:307:         for (register counter_t index = range_start; index <= range_stop_uniq
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11393              		.loc 1 307 9 is_stmt 0 view .LVU3952
 11394 3e5f 4885DB   		test	rbx, rbx	# _257
 11395 3e62 0F858A02 		jne	.L746	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 311


 11395      0000
 11396              	.LBB558:
 11397              	.LBB559:
 11398              	.LBB560:
 11399              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11400              		.loc 1 188 107 view .LVU3953
 11401 3e68 488B7C24 		mov	rdi, QWORD PTR 96[rsp]	# range_stop_word, %sfp
 11401      60
 11402              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11403              		.loc 1 188 84 view .LVU3954
 11404 3e6d 4F8D1489 		lea	r10, [r9+r9*4]	# tmp873,
 11405              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 11406              		.loc 1 188 107 view .LVU3955
 11407 3e71 4889F8   		mov	rax, rdi	# tmp875, range_stop_word
 11408 3e74 4C29D0   		sub	rax, r10	# tmp875, tmp873
 11409 3e77 498D1CC4 		lea	rbx, [r12+rax*8]	# tmp877,
 11410 3e7b 4C39D7   		cmp	rdi, r10	# range_stop_word, tmp873
 11411 3e7e 4C89CA   		mov	rdx, r9	# _1824, step
 11412 3e81 490F46DC 		cmovbe	rbx, r12	# pretmp_1655,, prephitmp_1754
 11413 3e85 48C1E204 		sal	rdx, 4	# _1824,
 11414 3e89 48895424 		mov	QWORD PTR 104[rsp], rdx	# %sfp, _1824
 11414      68
 11415              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 11416              		.loc 1 194 17 view .LVU3956
 11417 3e8e 4A8D34CD 		lea	rsi, 0[0+r9*8]	# _622,
 11417      00000000 
 11418 3e96 49C1E203 		sal	r10, 3	# tmp881,
 11419 3e9a 660F1F44 		.p2align 4,,10
 11419      0000
 11420              		.p2align 3
 11421              	.L755:
 194:sieve_extend.c ****        *index_ptr |= mask;
 11422              		.loc 1 194 17 view .LVU3957
 11423              	.LBE560:
 11424              	.LBE559:
 308:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11425              		.loc 1 308 13 is_stmt 1 view .LVU3958
 11426              	# sieve_extend.c:308:             register counter_t index_word = wordindex(index);
 308:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11427              		.loc 1 308 32 is_stmt 0 view .LVU3959
 11428 3ea0 4889C8   		mov	rax, rcx	# index_word, index
 11429 3ea3 48C1E806 		shr	rax, 6	# index_word,
 11430              	.LVL745:
 309:sieve_extend.c ****             #pragma ivdep
 11431              		.loc 1 309 13 is_stmt 1 view .LVU3960
 11432              	# sieve_extend.c:309:             register bitword_t mask = SAFE_ZERO;
 309:sieve_extend.c ****             #pragma ivdep
 11433              		.loc 1 309 32 is_stmt 0 view .LVU3961
 11434 3ea7 31D2     		xor	edx, edx	# mask
 11435              	.LVL746:
 11436              	.L749:
 311:sieve_extend.c ****                 mask |= markmask(index);
 11437              		.loc 1 311 13 is_stmt 1 view .LVU3962
GAS LISTING /tmp/ccW0oq2B.s 			page 312


 312:sieve_extend.c ****                 index += step;
 11438              		.loc 1 312 17 view .LVU3963
 11439              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11440              		.loc 1 312 25 is_stmt 0 view .LVU3964
 11441 3ea9 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp883, tmp1041, index
 11441      FD
 11442              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11443              		.loc 1 313 23 view .LVU3965
 11444 3eae 4C01C9   		add	rcx, r9	# index, step
 11445              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11446              		.loc 1 312 22 view .LVU3966
 11447 3eb1 4809FA   		or	rdx, rdi	# mask, tmp883
 11448              	.LVL747:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11449              		.loc 1 313 17 is_stmt 1 view .LVU3967
 314:sieve_extend.c ****             // #pragma ivdep
 11450              		.loc 1 314 21 view .LVU3968
 11451              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11452              		.loc 1 314 36 is_stmt 0 view .LVU3969
 11453 3eb4 4889CF   		mov	rdi, rcx	# tmp885, index
 11454 3eb7 48C1EF06 		shr	rdi, 6	# tmp885,
 11455              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11456              		.loc 1 314 13 view .LVU3970
 11457 3ebb 4839F8   		cmp	rax, rdi	# index_word, tmp885
 11458 3ebe 0F85AC00 		jne	.L1364	#,
 11458      0000
 311:sieve_extend.c ****                 mask |= markmask(index);
 11459              		.loc 1 311 13 is_stmt 1 view .LVU3971
 312:sieve_extend.c ****                 index += step;
 11460              		.loc 1 312 17 view .LVU3972
 11461              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11462              		.loc 1 312 25 is_stmt 0 view .LVU3973
 11463 3ec4 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1445, tmp1041, index
 11463      FD
 11464              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11465              		.loc 1 313 23 view .LVU3974
 11466 3ec9 4C01C9   		add	rcx, r9	# index, step
 11467              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11468              		.loc 1 312 22 view .LVU3975
 11469 3ecc 4809FA   		or	rdx, rdi	# mask, tmp1445
 11470              	.LVL748:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11471              		.loc 1 313 17 is_stmt 1 view .LVU3976
 314:sieve_extend.c ****             // #pragma ivdep
 11472              		.loc 1 314 21 view .LVU3977
 11473              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11474              		.loc 1 314 36 is_stmt 0 view .LVU3978
 11475 3ecf 4889CF   		mov	rdi, rcx	# tmp1446, index
GAS LISTING /tmp/ccW0oq2B.s 			page 313


 11476 3ed2 48C1EF06 		shr	rdi, 6	# tmp1446,
 11477              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11478              		.loc 1 314 13 view .LVU3979
 11479 3ed6 4839F8   		cmp	rax, rdi	# index_word, tmp1446
 11480 3ed9 0F859100 		jne	.L1364	#,
 11480      0000
 311:sieve_extend.c ****                 mask |= markmask(index);
 11481              		.loc 1 311 13 is_stmt 1 view .LVU3980
 312:sieve_extend.c ****                 index += step;
 11482              		.loc 1 312 17 view .LVU3981
 11483              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11484              		.loc 1 312 25 is_stmt 0 view .LVU3982
 11485 3edf C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1447, tmp1041, index
 11485      FD
 11486              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11487              		.loc 1 313 23 view .LVU3983
 11488 3ee4 4C01C9   		add	rcx, r9	# index, step
 11489              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11490              		.loc 1 312 22 view .LVU3984
 11491 3ee7 4809FA   		or	rdx, rdi	# mask, tmp1447
 11492              	.LVL749:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11493              		.loc 1 313 17 is_stmt 1 view .LVU3985
 314:sieve_extend.c ****             // #pragma ivdep
 11494              		.loc 1 314 21 view .LVU3986
 11495              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11496              		.loc 1 314 36 is_stmt 0 view .LVU3987
 11497 3eea 4889CF   		mov	rdi, rcx	# tmp1448, index
 11498 3eed 48C1EF06 		shr	rdi, 6	# tmp1448,
 11499              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11500              		.loc 1 314 13 view .LVU3988
 11501 3ef1 4839F8   		cmp	rax, rdi	# index_word, tmp1448
 11502 3ef4 757A     		jne	.L1364	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 11503              		.loc 1 311 13 is_stmt 1 view .LVU3989
 312:sieve_extend.c ****                 index += step;
 11504              		.loc 1 312 17 view .LVU3990
 11505              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11506              		.loc 1 312 25 is_stmt 0 view .LVU3991
 11507 3ef6 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1449, tmp1041, index
 11507      FD
 11508              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11509              		.loc 1 313 23 view .LVU3992
 11510 3efb 4C01C9   		add	rcx, r9	# index, step
 11511              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11512              		.loc 1 312 22 view .LVU3993
 11513 3efe 4809FA   		or	rdx, rdi	# mask, tmp1449
 11514              	.LVL750:
GAS LISTING /tmp/ccW0oq2B.s 			page 314


 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11515              		.loc 1 313 17 is_stmt 1 view .LVU3994
 314:sieve_extend.c ****             // #pragma ivdep
 11516              		.loc 1 314 21 view .LVU3995
 11517              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11518              		.loc 1 314 36 is_stmt 0 view .LVU3996
 11519 3f01 4889CF   		mov	rdi, rcx	# tmp1450, index
 11520 3f04 48C1EF06 		shr	rdi, 6	# tmp1450,
 11521              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11522              		.loc 1 314 13 view .LVU3997
 11523 3f08 4839F8   		cmp	rax, rdi	# index_word, tmp1450
 11524 3f0b 7563     		jne	.L1364	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 11525              		.loc 1 311 13 is_stmt 1 view .LVU3998
 312:sieve_extend.c ****                 index += step;
 11526              		.loc 1 312 17 view .LVU3999
 11527              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11528              		.loc 1 312 25 is_stmt 0 view .LVU4000
 11529 3f0d C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1451, tmp1041, index
 11529      FD
 11530              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11531              		.loc 1 313 23 view .LVU4001
 11532 3f12 4C01C9   		add	rcx, r9	# index, step
 11533              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11534              		.loc 1 312 22 view .LVU4002
 11535 3f15 4809FA   		or	rdx, rdi	# mask, tmp1451
 11536              	.LVL751:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11537              		.loc 1 313 17 is_stmt 1 view .LVU4003
 314:sieve_extend.c ****             // #pragma ivdep
 11538              		.loc 1 314 21 view .LVU4004
 11539              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11540              		.loc 1 314 36 is_stmt 0 view .LVU4005
 11541 3f18 4889CF   		mov	rdi, rcx	# tmp1452, index
 11542 3f1b 48C1EF06 		shr	rdi, 6	# tmp1452,
 11543              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11544              		.loc 1 314 13 view .LVU4006
 11545 3f1f 4839F8   		cmp	rax, rdi	# index_word, tmp1452
 11546 3f22 754C     		jne	.L1364	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 11547              		.loc 1 311 13 is_stmt 1 view .LVU4007
 312:sieve_extend.c ****                 index += step;
 11548              		.loc 1 312 17 view .LVU4008
 11549              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11550              		.loc 1 312 25 is_stmt 0 view .LVU4009
 11551 3f24 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1453, tmp1041, index
 11551      FD
 11552              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccW0oq2B.s 			page 315


 11553              		.loc 1 313 23 view .LVU4010
 11554 3f29 4C01C9   		add	rcx, r9	# index, step
 11555              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11556              		.loc 1 312 22 view .LVU4011
 11557 3f2c 4809FA   		or	rdx, rdi	# mask, tmp1453
 11558              	.LVL752:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11559              		.loc 1 313 17 is_stmt 1 view .LVU4012
 314:sieve_extend.c ****             // #pragma ivdep
 11560              		.loc 1 314 21 view .LVU4013
 11561              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11562              		.loc 1 314 36 is_stmt 0 view .LVU4014
 11563 3f2f 4889CF   		mov	rdi, rcx	# tmp1454, index
 11564 3f32 48C1EF06 		shr	rdi, 6	# tmp1454,
 11565              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11566              		.loc 1 314 13 view .LVU4015
 11567 3f36 4839F8   		cmp	rax, rdi	# index_word, tmp1454
 11568 3f39 7535     		jne	.L1364	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 11569              		.loc 1 311 13 is_stmt 1 view .LVU4016
 312:sieve_extend.c ****                 index += step;
 11570              		.loc 1 312 17 view .LVU4017
 11571              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11572              		.loc 1 312 25 is_stmt 0 view .LVU4018
 11573 3f3b C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1455, tmp1041, index
 11573      FD
 11574              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11575              		.loc 1 313 23 view .LVU4019
 11576 3f40 4C01C9   		add	rcx, r9	# index, step
 11577              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11578              		.loc 1 312 22 view .LVU4020
 11579 3f43 4809FA   		or	rdx, rdi	# mask, tmp1455
 11580              	.LVL753:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11581              		.loc 1 313 17 is_stmt 1 view .LVU4021
 314:sieve_extend.c ****             // #pragma ivdep
 11582              		.loc 1 314 21 view .LVU4022
 11583              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11584              		.loc 1 314 36 is_stmt 0 view .LVU4023
 11585 3f46 4889CF   		mov	rdi, rcx	# tmp1456, index
 11586 3f49 48C1EF06 		shr	rdi, 6	# tmp1456,
 11587              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11588              		.loc 1 314 13 view .LVU4024
 11589 3f4d 4839F8   		cmp	rax, rdi	# index_word, tmp1456
 11590 3f50 751E     		jne	.L1364	#,
 311:sieve_extend.c ****                 mask |= markmask(index);
 11591              		.loc 1 311 13 is_stmt 1 view .LVU4025
 312:sieve_extend.c ****                 index += step;
 11592              		.loc 1 312 17 view .LVU4026
GAS LISTING /tmp/ccW0oq2B.s 			page 316


 11593              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11594              		.loc 1 312 25 is_stmt 0 view .LVU4027
 11595 3f52 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1457, tmp1041, index
 11595      FD
 11596              	# sieve_extend.c:313:                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11597              		.loc 1 313 23 view .LVU4028
 11598 3f57 4C01C9   		add	rcx, r9	# index, step
 11599              	# sieve_extend.c:312:                 mask |= markmask(index);
 312:sieve_extend.c ****                 index += step;
 11600              		.loc 1 312 22 view .LVU4029
 11601 3f5a 4809FA   		or	rdx, rdi	# mask, tmp1457
 11602              	.LVL754:
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 11603              		.loc 1 313 17 is_stmt 1 view .LVU4030
 314:sieve_extend.c ****             // #pragma ivdep
 11604              		.loc 1 314 21 view .LVU4031
 11605              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11606              		.loc 1 314 36 is_stmt 0 view .LVU4032
 11607 3f5d 4889CF   		mov	rdi, rcx	# tmp1458, index
 11608 3f60 48C1EF06 		shr	rdi, 6	# tmp1458,
 11609              	# sieve_extend.c:314:             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // #pragma ivdep
 11610              		.loc 1 314 13 view .LVU4033
 11611 3f64 4839F8   		cmp	rax, rdi	# index_word, tmp1458
 11612 3f67 0F843CFF 		je	.L749	#,
 11612      FFFF
 11613 3f6d 0F1F00   		.p2align 4,,10
 11614              		.p2align 3
 11615              	.L1364:
 318:sieve_extend.c ****         }
 11616              		.loc 1 318 13 is_stmt 1 view .LVU4034
 11617              	.LVL755:
 11618              	.LBB563:
 11619              	.LBI559:
 154:sieve_extend.c **** // #if __APPLE__
 11620              		.loc 1 154 20 view .LVU4035
 11621              	.LBB561:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11622              		.loc 1 186 4 view .LVU4036
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 11623              		.loc 1 187 4 view .LVU4037
 11624              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 11625              		.loc 1 187 78 is_stmt 0 view .LVU4038
 11626 3f70 498D04C4 		lea	rax, [r12+rax*8]	# index_ptr,
 11627              	.LVL756:
 188:sieve_extend.c **** 
 11628              		.loc 1 188 4 is_stmt 1 view .LVU4039
 192:sieve_extend.c ****        *index_ptr |= mask;
 11629              		.loc 1 192 4 view .LVU4040
 192:sieve_extend.c ****        *index_ptr |= mask;
 11630              		.loc 1 192 10 view .LVU4041
 11631 3f74 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1754
 11632 3f77 0F830301 		jnb	.L750	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 317


 11632      0000
 192:sieve_extend.c ****        *index_ptr |= mask;
 11633              		.loc 1 192 10 is_stmt 0 view .LVU4042
 11634 3f7d 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# _1824, %sfp
 11634      68
 11635 3f82 4801C7   		add	rdi, rax	# ivtmp.535, index_ptr
 11636              	.L751:
 193:sieve_extend.c ****        index_ptr+=step;
 11637              		.loc 1 193 8 is_stmt 1 view .LVU4043
 11638              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11639              		.loc 1 193 19 is_stmt 0 view .LVU4044
 11640 3f85 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11641              		.loc 1 194 8 is_stmt 1 view .LVU4045
 11642              	.LVL757:
 195:sieve_extend.c ****        index_ptr+=step;
 11643              		.loc 1 195 8 view .LVU4046
 11644              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11645              		.loc 1 195 19 is_stmt 0 view .LVU4047
 11646 3f88 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11647              		.loc 1 196 8 is_stmt 1 view .LVU4048
 11648              	.LVL758:
 197:sieve_extend.c ****        index_ptr+=step;
 11649              		.loc 1 197 8 view .LVU4049
 11650              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11651              		.loc 1 197 19 is_stmt 0 view .LVU4050
 11652 3f8c 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11653              		.loc 1 198 8 is_stmt 1 view .LVU4051
 11654              	.LVL759:
 199:sieve_extend.c ****        index_ptr+=step;
 11655              		.loc 1 199 8 view .LVU4052
 11656              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11657              		.loc 1 199 19 is_stmt 0 view .LVU4053
 11658 3f8f 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11659              		.loc 1 200 8 is_stmt 1 view .LVU4054
 11660              	.LVL760:
 201:sieve_extend.c ****        index_ptr+=step;
 11661              		.loc 1 201 8 view .LVU4055
 11662 3f93 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11663              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11664              		.loc 1 201 19 is_stmt 0 view .LVU4056
 11665 3f96 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11666              		.loc 1 202 8 is_stmt 1 view .LVU4057
 11667 3f9a 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11668              	.LVL761:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11669              		.loc 1 192 10 view .LVU4058
 11670 3f9d 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
GAS LISTING /tmp/ccW0oq2B.s 			page 318


 11671 3fa0 0F86DA00 		jbe	.L750	#,
 11671      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11672              		.loc 1 193 8 view .LVU4059
 11673              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11674              		.loc 1 193 19 is_stmt 0 view .LVU4060
 11675 3fa6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11676              		.loc 1 194 8 is_stmt 1 view .LVU4061
 11677              	.LVL762:
 195:sieve_extend.c ****        index_ptr+=step;
 11678              		.loc 1 195 8 view .LVU4062
 11679              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11680              		.loc 1 195 19 is_stmt 0 view .LVU4063
 11681 3fa9 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11682              		.loc 1 196 8 is_stmt 1 view .LVU4064
 11683              	.LVL763:
 197:sieve_extend.c ****        index_ptr+=step;
 11684              		.loc 1 197 8 view .LVU4065
 11685              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11686              		.loc 1 197 19 is_stmt 0 view .LVU4066
 11687 3fad 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11688              		.loc 1 198 8 is_stmt 1 view .LVU4067
 11689              	.LVL764:
 199:sieve_extend.c ****        index_ptr+=step;
 11690              		.loc 1 199 8 view .LVU4068
 11691              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11692              		.loc 1 199 19 is_stmt 0 view .LVU4069
 11693 3fb0 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11694              		.loc 1 200 8 is_stmt 1 view .LVU4070
 11695              	.LVL765:
 201:sieve_extend.c ****        index_ptr+=step;
 11696              		.loc 1 201 8 view .LVU4071
 11697 3fb4 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11698              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11699              		.loc 1 201 19 is_stmt 0 view .LVU4072
 11700 3fb7 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11701              		.loc 1 202 8 is_stmt 1 view .LVU4073
 11702 3fbb 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11703              	.LVL766:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11704              		.loc 1 192 10 view .LVU4074
 11705 3fbe 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11706 3fc1 0F86B900 		jbe	.L750	#,
 11706      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11707              		.loc 1 193 8 view .LVU4075
 11708              	# sieve_extend.c:193:        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 319


 193:sieve_extend.c ****        index_ptr+=step;
 11709              		.loc 1 193 19 is_stmt 0 view .LVU4076
 11710 3fc7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11711              		.loc 1 194 8 is_stmt 1 view .LVU4077
 11712              	.LVL767:
 195:sieve_extend.c ****        index_ptr+=step;
 11713              		.loc 1 195 8 view .LVU4078
 11714              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11715              		.loc 1 195 19 is_stmt 0 view .LVU4079
 11716 3fca 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11717              		.loc 1 196 8 is_stmt 1 view .LVU4080
 11718              	.LVL768:
 197:sieve_extend.c ****        index_ptr+=step;
 11719              		.loc 1 197 8 view .LVU4081
 11720              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11721              		.loc 1 197 19 is_stmt 0 view .LVU4082
 11722 3fce 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11723              		.loc 1 198 8 is_stmt 1 view .LVU4083
 11724              	.LVL769:
 199:sieve_extend.c ****        index_ptr+=step;
 11725              		.loc 1 199 8 view .LVU4084
 11726              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11727              		.loc 1 199 19 is_stmt 0 view .LVU4085
 11728 3fd1 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11729              		.loc 1 200 8 is_stmt 1 view .LVU4086
 11730              	.LVL770:
 201:sieve_extend.c ****        index_ptr+=step;
 11731              		.loc 1 201 8 view .LVU4087
 11732 3fd5 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11733              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11734              		.loc 1 201 19 is_stmt 0 view .LVU4088
 11735 3fd8 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11736              		.loc 1 202 8 is_stmt 1 view .LVU4089
 11737 3fdc 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11738              	.LVL771:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11739              		.loc 1 192 10 view .LVU4090
 11740 3fdf 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11741 3fe2 0F869800 		jbe	.L750	#,
 11741      0000
 193:sieve_extend.c ****        index_ptr+=step;
 11742              		.loc 1 193 8 view .LVU4091
 11743              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11744              		.loc 1 193 19 is_stmt 0 view .LVU4092
 11745 3fe8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11746              		.loc 1 194 8 is_stmt 1 view .LVU4093
GAS LISTING /tmp/ccW0oq2B.s 			page 320


 11747              	.LVL772:
 195:sieve_extend.c ****        index_ptr+=step;
 11748              		.loc 1 195 8 view .LVU4094
 11749              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11750              		.loc 1 195 19 is_stmt 0 view .LVU4095
 11751 3feb 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11752              		.loc 1 196 8 is_stmt 1 view .LVU4096
 11753              	.LVL773:
 197:sieve_extend.c ****        index_ptr+=step;
 11754              		.loc 1 197 8 view .LVU4097
 11755              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11756              		.loc 1 197 19 is_stmt 0 view .LVU4098
 11757 3fef 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11758              		.loc 1 198 8 is_stmt 1 view .LVU4099
 11759              	.LVL774:
 199:sieve_extend.c ****        index_ptr+=step;
 11760              		.loc 1 199 8 view .LVU4100
 11761              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11762              		.loc 1 199 19 is_stmt 0 view .LVU4101
 11763 3ff2 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11764              		.loc 1 200 8 is_stmt 1 view .LVU4102
 11765              	.LVL775:
 201:sieve_extend.c ****        index_ptr+=step;
 11766              		.loc 1 201 8 view .LVU4103
 11767 3ff6 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11768              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11769              		.loc 1 201 19 is_stmt 0 view .LVU4104
 11770 3ff9 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11771              		.loc 1 202 8 is_stmt 1 view .LVU4105
 11772 3ffd 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11773              	.LVL776:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11774              		.loc 1 192 10 view .LVU4106
 11775 4000 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11776 4003 767B     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11777              		.loc 1 193 8 view .LVU4107
 11778              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11779              		.loc 1 193 19 is_stmt 0 view .LVU4108
 11780 4005 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11781              		.loc 1 194 8 is_stmt 1 view .LVU4109
 11782              	.LVL777:
 195:sieve_extend.c ****        index_ptr+=step;
 11783              		.loc 1 195 8 view .LVU4110
 11784              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11785              		.loc 1 195 19 is_stmt 0 view .LVU4111
GAS LISTING /tmp/ccW0oq2B.s 			page 321


 11786 4008 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11787              		.loc 1 196 8 is_stmt 1 view .LVU4112
 11788              	.LVL778:
 197:sieve_extend.c ****        index_ptr+=step;
 11789              		.loc 1 197 8 view .LVU4113
 11790              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11791              		.loc 1 197 19 is_stmt 0 view .LVU4114
 11792 400c 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11793              		.loc 1 198 8 is_stmt 1 view .LVU4115
 11794              	.LVL779:
 199:sieve_extend.c ****        index_ptr+=step;
 11795              		.loc 1 199 8 view .LVU4116
 11796              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11797              		.loc 1 199 19 is_stmt 0 view .LVU4117
 11798 400f 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11799              		.loc 1 200 8 is_stmt 1 view .LVU4118
 11800              	.LVL780:
 201:sieve_extend.c ****        index_ptr+=step;
 11801              		.loc 1 201 8 view .LVU4119
 11802 4013 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11803              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11804              		.loc 1 201 19 is_stmt 0 view .LVU4120
 11805 4016 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11806              		.loc 1 202 8 is_stmt 1 view .LVU4121
 11807 401a 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11808              	.LVL781:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11809              		.loc 1 192 10 view .LVU4122
 11810 401d 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11811 4020 765E     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11812              		.loc 1 193 8 view .LVU4123
 11813              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11814              		.loc 1 193 19 is_stmt 0 view .LVU4124
 11815 4022 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11816              		.loc 1 194 8 is_stmt 1 view .LVU4125
 11817              	.LVL782:
 195:sieve_extend.c ****        index_ptr+=step;
 11818              		.loc 1 195 8 view .LVU4126
 11819              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11820              		.loc 1 195 19 is_stmt 0 view .LVU4127
 11821 4025 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11822              		.loc 1 196 8 is_stmt 1 view .LVU4128
 11823              	.LVL783:
 197:sieve_extend.c ****        index_ptr+=step;
 11824              		.loc 1 197 8 view .LVU4129
GAS LISTING /tmp/ccW0oq2B.s 			page 322


 11825              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11826              		.loc 1 197 19 is_stmt 0 view .LVU4130
 11827 4029 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11828              		.loc 1 198 8 is_stmt 1 view .LVU4131
 11829              	.LVL784:
 199:sieve_extend.c ****        index_ptr+=step;
 11830              		.loc 1 199 8 view .LVU4132
 11831              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11832              		.loc 1 199 19 is_stmt 0 view .LVU4133
 11833 402c 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11834              		.loc 1 200 8 is_stmt 1 view .LVU4134
 11835              	.LVL785:
 201:sieve_extend.c ****        index_ptr+=step;
 11836              		.loc 1 201 8 view .LVU4135
 11837 4030 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11838              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11839              		.loc 1 201 19 is_stmt 0 view .LVU4136
 11840 4033 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11841              		.loc 1 202 8 is_stmt 1 view .LVU4137
 11842 4037 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11843              	.LVL786:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11844              		.loc 1 192 10 view .LVU4138
 11845 403a 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11846 403d 7641     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11847              		.loc 1 193 8 view .LVU4139
 11848              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11849              		.loc 1 193 19 is_stmt 0 view .LVU4140
 11850 403f 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11851              		.loc 1 194 8 is_stmt 1 view .LVU4141
 11852              	.LVL787:
 195:sieve_extend.c ****        index_ptr+=step;
 11853              		.loc 1 195 8 view .LVU4142
 11854              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11855              		.loc 1 195 19 is_stmt 0 view .LVU4143
 11856 4042 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11857              		.loc 1 196 8 is_stmt 1 view .LVU4144
 11858              	.LVL788:
 197:sieve_extend.c ****        index_ptr+=step;
 11859              		.loc 1 197 8 view .LVU4145
 11860              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11861              		.loc 1 197 19 is_stmt 0 view .LVU4146
 11862 4046 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11863              		.loc 1 198 8 is_stmt 1 view .LVU4147
GAS LISTING /tmp/ccW0oq2B.s 			page 323


 11864              	.LVL789:
 199:sieve_extend.c ****        index_ptr+=step;
 11865              		.loc 1 199 8 view .LVU4148
 11866              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11867              		.loc 1 199 19 is_stmt 0 view .LVU4149
 11868 4049 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11869              		.loc 1 200 8 is_stmt 1 view .LVU4150
 11870              	.LVL790:
 201:sieve_extend.c ****        index_ptr+=step;
 11871              		.loc 1 201 8 view .LVU4151
 11872 404d 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11873              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11874              		.loc 1 201 19 is_stmt 0 view .LVU4152
 11875 4050 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11876              		.loc 1 202 8 is_stmt 1 view .LVU4153
 11877 4054 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11878              	.LVL791:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11879              		.loc 1 192 10 view .LVU4154
 11880 4057 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11881 405a 7624     		jbe	.L750	#,
 193:sieve_extend.c ****        index_ptr+=step;
 11882              		.loc 1 193 8 view .LVU4155
 11883              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 11884              		.loc 1 193 19 is_stmt 0 view .LVU4156
 11885 405c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1124, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 11886              		.loc 1 194 8 is_stmt 1 view .LVU4157
 11887              	.LVL792:
 195:sieve_extend.c ****        index_ptr+=step;
 11888              		.loc 1 195 8 view .LVU4158
 11889              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 11890              		.loc 1 195 19 is_stmt 0 view .LVU4159
 11891 405f 48091430 		or	QWORD PTR [rax+rsi], rdx	# MEM[base: index_ptr_1124, index: _622, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 11892              		.loc 1 196 8 is_stmt 1 view .LVU4160
 11893              	.LVL793:
 197:sieve_extend.c ****        index_ptr+=step;
 11894              		.loc 1 197 8 view .LVU4161
 11895              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 11896              		.loc 1 197 19 is_stmt 0 view .LVU4162
 11897 4063 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1813, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 11898              		.loc 1 198 8 is_stmt 1 view .LVU4163
 11899              	.LVL794:
 199:sieve_extend.c ****        index_ptr+=step;
 11900              		.loc 1 199 8 view .LVU4164
 11901              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 11902              		.loc 1 199 19 is_stmt 0 view .LVU4165
GAS LISTING /tmp/ccW0oq2B.s 			page 324


 11903 4066 48091437 		or	QWORD PTR [rdi+rsi], rdx	# MEM[base: _1813, index: _622, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 11904              		.loc 1 200 8 is_stmt 1 view .LVU4166
 11905              	.LVL795:
 201:sieve_extend.c ****        index_ptr+=step;
 11906              		.loc 1 201 8 view .LVU4167
 11907 406a 4C01D7   		add	rdi, r10	# ivtmp.535, tmp881
 11908              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 11909              		.loc 1 201 19 is_stmt 0 view .LVU4168
 11910 406d 480914B0 		or	QWORD PTR [rax+rsi*4], rdx	# MEM[base: index_ptr_1124, index: _622, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 11911              		.loc 1 202 8 is_stmt 1 view .LVU4169
 11912 4071 4C01D0   		add	rax, r10	# index_ptr, tmp881
 11913              	.LVL796:
 192:sieve_extend.c ****        *index_ptr |= mask;
 11914              		.loc 1 192 10 view .LVU4170
 11915 4074 4839C3   		cmp	rbx, rax	# prephitmp_1754, index_ptr
 11916 4077 0F8708FF 		ja	.L751	#,
 11916      FFFF
 11917 407d 0F1F00   		.p2align 4,,10
 11918              		.p2align 3
 11919              	.L750:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11920              		.loc 1 205 4 view .LVU4171
 11921              	.LVL797:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11922              		.loc 1 206 4 view .LVU4172
 206:sieve_extend.c ****        *index_ptr |= mask;
 11923              		.loc 1 206 10 view .LVU4173
 11924 4080 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11925 4083 765B     		jbe	.L752	#,
 11926              	.L753:
 207:sieve_extend.c ****        index_ptr+=step;
 11927              		.loc 1 207 8 view .LVU4174
 11928              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11929              		.loc 1 207 19 is_stmt 0 view .LVU4175
 11930 4085 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 11931              		.loc 1 208 8 is_stmt 1 view .LVU4176
 11932              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11933              		.loc 1 208 17 is_stmt 0 view .LVU4177
 11934 4088 4801F0   		add	rax, rsi	# index_ptr, _622
 11935              	.LVL798:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11936              		.loc 1 206 10 is_stmt 1 view .LVU4178
 11937 408b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11938 408e 7650     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11939              		.loc 1 207 8 view .LVU4179
 11940              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11941              		.loc 1 207 19 is_stmt 0 view .LVU4180
 11942 4090 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
GAS LISTING /tmp/ccW0oq2B.s 			page 325


 11943              		.loc 1 208 8 is_stmt 1 view .LVU4181
 11944              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11945              		.loc 1 208 17 is_stmt 0 view .LVU4182
 11946 4093 4801F0   		add	rax, rsi	# index_ptr, _622
 11947              	.LVL799:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11948              		.loc 1 206 10 is_stmt 1 view .LVU4183
 11949 4096 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11950 4099 7645     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11951              		.loc 1 207 8 view .LVU4184
 11952              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11953              		.loc 1 207 19 is_stmt 0 view .LVU4185
 11954 409b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 11955              		.loc 1 208 8 is_stmt 1 view .LVU4186
 11956              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11957              		.loc 1 208 17 is_stmt 0 view .LVU4187
 11958 409e 4801F0   		add	rax, rsi	# index_ptr, _622
 11959              	.LVL800:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11960              		.loc 1 206 10 is_stmt 1 view .LVU4188
 11961 40a1 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11962 40a4 763A     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11963              		.loc 1 207 8 view .LVU4189
 11964              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11965              		.loc 1 207 19 is_stmt 0 view .LVU4190
 11966 40a6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 11967              		.loc 1 208 8 is_stmt 1 view .LVU4191
 11968              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11969              		.loc 1 208 17 is_stmt 0 view .LVU4192
 11970 40a9 4801F0   		add	rax, rsi	# index_ptr, _622
 11971              	.LVL801:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11972              		.loc 1 206 10 is_stmt 1 view .LVU4193
 11973 40ac 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11974 40af 762F     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11975              		.loc 1 207 8 view .LVU4194
 11976              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11977              		.loc 1 207 19 is_stmt 0 view .LVU4195
 11978 40b1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 11979              		.loc 1 208 8 is_stmt 1 view .LVU4196
 11980              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11981              		.loc 1 208 17 is_stmt 0 view .LVU4197
 11982 40b4 4801F0   		add	rax, rsi	# index_ptr, _622
 11983              	.LVL802:
GAS LISTING /tmp/ccW0oq2B.s 			page 326


 206:sieve_extend.c ****        *index_ptr |= mask;
 11984              		.loc 1 206 10 is_stmt 1 view .LVU4198
 11985 40b7 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11986 40ba 7624     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11987              		.loc 1 207 8 view .LVU4199
 11988              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 11989              		.loc 1 207 19 is_stmt 0 view .LVU4200
 11990 40bc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 11991              		.loc 1 208 8 is_stmt 1 view .LVU4201
 11992              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 11993              		.loc 1 208 17 is_stmt 0 view .LVU4202
 11994 40bf 4801F0   		add	rax, rsi	# index_ptr, _622
 11995              	.LVL803:
 206:sieve_extend.c ****        *index_ptr |= mask;
 11996              		.loc 1 206 10 is_stmt 1 view .LVU4203
 11997 40c2 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 11998 40c5 7619     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 11999              		.loc 1 207 8 view .LVU4204
 12000              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 12001              		.loc 1 207 19 is_stmt 0 view .LVU4205
 12002 40c7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 12003              		.loc 1 208 8 is_stmt 1 view .LVU4206
 12004              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 12005              		.loc 1 208 17 is_stmt 0 view .LVU4207
 12006 40ca 4801F0   		add	rax, rsi	# index_ptr, _622
 12007              	.LVL804:
 206:sieve_extend.c ****        *index_ptr |= mask;
 12008              		.loc 1 206 10 is_stmt 1 view .LVU4208
 12009 40cd 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12010 40d0 760E     		jbe	.L752	#,
 207:sieve_extend.c ****        index_ptr+=step;
 12011              		.loc 1 207 8 view .LVU4209
 12012              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 12013              		.loc 1 207 19 is_stmt 0 view .LVU4210
 12014 40d2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_1120, offset: 0B], mask
 208:sieve_extend.c ****    }
 12015              		.loc 1 208 8 is_stmt 1 view .LVU4211
 12016              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 12017              		.loc 1 208 17 is_stmt 0 view .LVU4212
 12018 40d5 4801F0   		add	rax, rsi	# index_ptr, _622
 12019              	.LVL805:
 206:sieve_extend.c ****        *index_ptr |= mask;
 12020              		.loc 1 206 10 is_stmt 1 view .LVU4213
 12021 40d8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12022 40db 77A8     		ja	.L753	#,
 12023 40dd 0F1F00   		.p2align 4,,10
 12024              		.p2align 3
GAS LISTING /tmp/ccW0oq2B.s 			page 327


 12025              	.L752:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12026              		.loc 1 211 4 view .LVU4214
 12027              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12028              		.loc 1 211 7 is_stmt 0 view .LVU4215
 12029 40e0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 12030 40e3 0F84FF00 		je	.L1587	#,
 12030      0000
 12031              	.LVL806:
 12032              	.L754:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12033              		.loc 1 211 7 view .LVU4216
 12034              	.LBE561:
 12035              	.LBE563:
 12036              	.LBE558:
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12037              		.loc 1 307 54 is_stmt 1 view .LVU4217
 12038              	# sieve_extend.c:307:         for (register counter_t index = range_start; index <= range_stop_uniq
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12039              		.loc 1 307 9 is_stmt 0 view .LVU4218
 12040 40e9 4939CE   		cmp	r14, rcx	# tmp860, index
 12041 40ec 0F83AEFD 		jnb	.L755	#,
 12041      FFFF
 12042              	.LVL807:
 12043              	.L746:
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12044              		.loc 1 307 9 view .LVU4219
 12045              	.LBE557:
 12046              	.LBE568:
 12047              	.LBE582:
 881:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12048              		.loc 1 881 9 is_stmt 1 view .LVU4220
 12049              	.LBB583:
 12050              	.LBI583:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12051              		.loc 1 123 25 view .LVU4221
 12052              	.LBB584:
 124:sieve_extend.c ****     return index;
 12053              		.loc 1 124 5 view .LVU4222
 124:sieve_extend.c ****     return index;
 12054              		.loc 1 124 11 view .LVU4223
 12055              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12056              		.loc 1 124 21 is_stmt 0 view .LVU4224
 12057 40f2 4D89D9   		mov	r9, r11	# tmp861, _397
 12058              	.LVL808:
 124:sieve_extend.c ****     return index;
 12059              		.loc 1 124 21 view .LVU4225
 12060 40f5 49C1E906 		shr	r9, 6	# tmp861,
 12061              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12062              		.loc 1 124 12 view .LVU4226
 12063 40f9 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_1201, *_1201
 12064              	.LBE584:
 12065              	.LBE583:
 12066              	# sieve_extend.c:879:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
GAS LISTING /tmp/ccW0oq2B.s 			page 328


 879:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12067              		.loc 1 879 35 view .LVU4227
 12068 40fd 4C89DE   		mov	rsi, r11	# prime, _397
 12069              	.LBB586:
 12070              	.LBB585:
 12071              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12072              		.loc 1 124 11 view .LVU4228
 12073 4100 4C0FA3D9 		bt	rcx, r11	# *_1201, _397
 12074 4104 0F83B600 		jnc	.L745	#,
 12074      0000
 12075              	.LVL809:
 12076              	.L744:
 124:sieve_extend.c ****     return index;
 12077              		.loc 1 124 58 is_stmt 1 view .LVU4229
 12078              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12079              		.loc 1 124 63 is_stmt 0 view .LVU4230
 12080 410a 4C8D5E01 		lea	r11, 1[rsi]	# tmp1051,
 12081              	.LVL810:
 12082              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12083              		.loc 1 124 21 view .LVU4231
 12084 410e 4D89DE   		mov	r14, r11	# tmp888, prime
 12085 4111 49C1EE06 		shr	r14, 6	# tmp888,
 12086              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12087              		.loc 1 124 12 view .LVU4232
 12088 4115 4F8B14F4 		mov	r10, QWORD PTR [r12+r14*8]	# *_407, *_407
 12089              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12090              		.loc 1 124 63 view .LVU4233
 12091 4119 4C89DE   		mov	rsi, r11	# prime, tmp1051
 124:sieve_extend.c ****     return index;
 12092              		.loc 1 124 11 is_stmt 1 view .LVU4234
 12093 411c 4D0FA3DA 		bt	r10, r11	# *_407, prime
 12094 4120 0F839A00 		jnc	.L745	#,
 12094      0000
 124:sieve_extend.c ****     return index;
 12095              		.loc 1 124 58 view .LVU4235
 12096              	.LVL811:
 12097              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12098              		.loc 1 124 63 is_stmt 0 view .LVU4236
 12099 4126 48FFC6   		inc	rsi	# prime
 12100              	.LVL812:
 124:sieve_extend.c ****     return index;
 12101              		.loc 1 124 11 is_stmt 1 view .LVU4237
 12102              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12103              		.loc 1 124 21 is_stmt 0 view .LVU4238
 12104 4129 4889F3   		mov	rbx, rsi	# tmp1397, prime
 12105 412c 48C1EB06 		shr	rbx, 6	# tmp1397,
 12106              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12107              		.loc 1 124 12 view .LVU4239
 12108 4130 498B14DC 		mov	rdx, QWORD PTR [r12+rbx*8]	# *_407, *_407
GAS LISTING /tmp/ccW0oq2B.s 			page 329


 12109              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12110              		.loc 1 124 11 view .LVU4240
 12111 4134 480FA3F2 		bt	rdx, rsi	# *_407, prime
 12112 4138 0F838200 		jnc	.L745	#,
 12112      0000
 124:sieve_extend.c ****     return index;
 12113              		.loc 1 124 58 is_stmt 1 view .LVU4241
 12114              	.LVL813:
 12115              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12116              		.loc 1 124 63 is_stmt 0 view .LVU4242
 12117 413e 498D7302 		lea	rsi, 2[r11]	# prime,
 12118              	.LVL814:
 124:sieve_extend.c ****     return index;
 12119              		.loc 1 124 11 is_stmt 1 view .LVU4243
 12120              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12121              		.loc 1 124 21 is_stmt 0 view .LVU4244
 12122 4142 4889F0   		mov	rax, rsi	# tmp1401, prime
 12123 4145 48C1E806 		shr	rax, 6	# tmp1401,
 12124              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12125              		.loc 1 124 12 view .LVU4245
 12126 4149 498B3CC4 		mov	rdi, QWORD PTR [r12+rax*8]	# *_407, *_407
 12127              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12128              		.loc 1 124 11 view .LVU4246
 12129 414d 480FA3F7 		bt	rdi, rsi	# *_407, prime
 12130 4151 736D     		jnc	.L745	#,
 124:sieve_extend.c ****     return index;
 12131              		.loc 1 124 58 is_stmt 1 view .LVU4247
 12132              	.LVL815:
 12133              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12134              		.loc 1 124 63 is_stmt 0 view .LVU4248
 12135 4153 498D7303 		lea	rsi, 3[r11]	# prime,
 12136              	.LVL816:
 124:sieve_extend.c ****     return index;
 12137              		.loc 1 124 11 is_stmt 1 view .LVU4249
 12138              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12139              		.loc 1 124 21 is_stmt 0 view .LVU4250
 12140 4157 4989F1   		mov	r9, rsi	# tmp1405, prime
 12141 415a 49C1E906 		shr	r9, 6	# tmp1405,
 12142              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12143              		.loc 1 124 12 view .LVU4251
 12144 415e 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_407, *_407
 12145              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12146              		.loc 1 124 11 view .LVU4252
 12147 4162 480FA3F1 		bt	rcx, rsi	# *_407, prime
 12148 4166 7358     		jnc	.L745	#,
 124:sieve_extend.c ****     return index;
 12149              		.loc 1 124 58 is_stmt 1 view .LVU4253
 12150              	.LVL817:
GAS LISTING /tmp/ccW0oq2B.s 			page 330


 12151              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12152              		.loc 1 124 63 is_stmt 0 view .LVU4254
 12153 4168 498D7304 		lea	rsi, 4[r11]	# prime,
 12154              	.LVL818:
 124:sieve_extend.c ****     return index;
 12155              		.loc 1 124 11 is_stmt 1 view .LVU4255
 12156              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12157              		.loc 1 124 21 is_stmt 0 view .LVU4256
 12158 416c 4989F6   		mov	r14, rsi	# tmp1409, prime
 12159 416f 49C1EE06 		shr	r14, 6	# tmp1409,
 12160              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12161              		.loc 1 124 12 view .LVU4257
 12162 4173 4F8B14F4 		mov	r10, QWORD PTR [r12+r14*8]	# *_407, *_407
 12163              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12164              		.loc 1 124 11 view .LVU4258
 12165 4177 490FA3F2 		bt	r10, rsi	# *_407, prime
 12166 417b 7343     		jnc	.L745	#,
 124:sieve_extend.c ****     return index;
 12167              		.loc 1 124 58 is_stmt 1 view .LVU4259
 12168              	.LVL819:
 12169              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12170              		.loc 1 124 63 is_stmt 0 view .LVU4260
 12171 417d 498D7305 		lea	rsi, 5[r11]	# prime,
 12172              	.LVL820:
 124:sieve_extend.c ****     return index;
 12173              		.loc 1 124 11 is_stmt 1 view .LVU4261
 12174              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12175              		.loc 1 124 21 is_stmt 0 view .LVU4262
 12176 4181 4889F3   		mov	rbx, rsi	# tmp1413, prime
 12177 4184 48C1EB06 		shr	rbx, 6	# tmp1413,
 12178              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12179              		.loc 1 124 12 view .LVU4263
 12180 4188 498B14DC 		mov	rdx, QWORD PTR [r12+rbx*8]	# *_407, *_407
 12181              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12182              		.loc 1 124 11 view .LVU4264
 12183 418c 480FA3F2 		bt	rdx, rsi	# *_407, prime
 12184 4190 732E     		jnc	.L745	#,
 124:sieve_extend.c ****     return index;
 12185              		.loc 1 124 58 is_stmt 1 view .LVU4265
 12186              	.LVL821:
 12187              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12188              		.loc 1 124 63 is_stmt 0 view .LVU4266
 12189 4192 498D7306 		lea	rsi, 6[r11]	# prime,
 12190              	.LVL822:
 124:sieve_extend.c ****     return index;
 12191              		.loc 1 124 11 is_stmt 1 view .LVU4267
 12192              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW0oq2B.s 			page 331


 12193              		.loc 1 124 21 is_stmt 0 view .LVU4268
 12194 4196 4889F0   		mov	rax, rsi	# tmp1417, prime
 12195 4199 48C1E806 		shr	rax, 6	# tmp1417,
 12196              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12197              		.loc 1 124 12 view .LVU4269
 12198 419d 498B3CC4 		mov	rdi, QWORD PTR [r12+rax*8]	# *_407, *_407
 12199              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12200              		.loc 1 124 11 view .LVU4270
 12201 41a1 480FA3F7 		bt	rdi, rsi	# *_407, prime
 12202 41a5 7319     		jnc	.L745	#,
 124:sieve_extend.c ****     return index;
 12203              		.loc 1 124 58 is_stmt 1 view .LVU4271
 12204              	.LVL823:
 12205              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12206              		.loc 1 124 63 is_stmt 0 view .LVU4272
 12207 41a7 498D7307 		lea	rsi, 7[r11]	# prime,
 12208              	.LVL824:
 124:sieve_extend.c ****     return index;
 12209              		.loc 1 124 11 is_stmt 1 view .LVU4273
 12210              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12211              		.loc 1 124 21 is_stmt 0 view .LVU4274
 12212 41ab 4989F3   		mov	r11, rsi	# tmp1421, prime
 12213 41ae 49C1EB06 		shr	r11, 6	# tmp1421,
 12214              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12215              		.loc 1 124 12 view .LVU4275
 12216 41b2 4F8B0CDC 		mov	r9, QWORD PTR [r12+r11*8]	# *_407, *_407
 12217              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12218              		.loc 1 124 11 view .LVU4276
 12219 41b6 490FA3F1 		bt	r9, rsi	# *_407, prime
 12220 41ba 0F824AFF 		jc	.L744	#,
 12220      FFFF
 12221              	.LVL825:
 12222              		.p2align 4,,10
 12223              		.p2align 3
 12224              	.L745:
 125:sieve_extend.c **** }
 12225              		.loc 1 125 5 is_stmt 1 view .LVU4277
 125:sieve_extend.c **** }
 12226              		.loc 1 125 5 is_stmt 0 view .LVU4278
 12227              	.LBE585:
 12228              	.LBE586:
 882:sieve_extend.c ****     }
 12229              		.loc 1 882 9 is_stmt 1 view .LVU4279
 12230              	# sieve_extend.c:882:         start = prime * prime * 2 + prime * 2;
 882:sieve_extend.c ****     }
 12231              		.loc 1 882 35 is_stmt 0 view .LVU4280
 12232 41c0 488D4E01 		lea	rcx, 1[rsi]	# _491,
 12233              	# sieve_extend.c:882:         start = prime * prime * 2 + prime * 2;
 882:sieve_extend.c ****     }
 12234              		.loc 1 882 15 view .LVU4281
 12235 41c4 480FAFCE 		imul	rcx, rsi	# tmp894, prime
GAS LISTING /tmp/ccW0oq2B.s 			page 332


 12236              	.LVL826:
 882:sieve_extend.c ****     }
 12237              		.loc 1 882 15 view .LVU4282
 12238 41c8 4801C9   		add	rcx, rcx	# index
 12239              	.LVL827:
 876:sieve_extend.c ****         step  = prime * 2 + 1;
 12240              		.loc 1 876 11 is_stmt 1 view .LVU4283
 12241 41cb 4939CF   		cmp	r15, rcx	# block_stop, index
 12242 41ce 0F8344FC 		jnb	.L756	#,
 12242      FFFF
 12243              	.LVL828:
 12244              	.L1567:
 876:sieve_extend.c ****         step  = prime * 2 + 1;
 12245              		.loc 1 876 11 is_stmt 0 view .LVU4284
 12246 41d4 488B4424 		mov	rax, QWORD PTR 80[rsp]	# <retval>, %sfp
 12246      50
 12247 41d9 488B4008 		mov	rax, QWORD PTR 8[rax]	# _8, sieve_89->bits
 12248 41dd E9CEFBFF 		jmp	.L725	#
 12248      FF
 12249              	.LVL829:
 12250              		.p2align 4,,10
 12251 41e2 660F1F44 		.p2align 3
 12251      0000
 12252              	.L1587:
 12253              	.LBB587:
 12254              	.LBB569:
 12255              	.LBB566:
 12256              	.LBB565:
 12257              	.LBB564:
 12258              	.LBB562:
 212:sieve_extend.c ****    }
 12259              		.loc 1 212 7 is_stmt 1 view .LVU4285
 12260              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 12261              		.loc 1 212 27 is_stmt 0 view .LVU4286
 12262 41e8 48235424 		and	rdx, QWORD PTR 112[rsp]	# tmp887, %sfp
 12262      70
 12263              	.LVL830:
 12264              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 12265              		.loc 1 212 18 view .LVU4287
 12266 41ed 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_1119, tmp887
 12267 41f0 E9F4FEFF 		jmp	.L754	#
 12267      FF
 12268              	.LVL831:
 12269              		.p2align 4,,10
 12270 41f5 0F1F00   		.p2align 3
 12271              	.L742:
 212:sieve_extend.c ****    }
 12272              		.loc 1 212 18 view .LVU4288
 12273              	.LBE562:
 12274              	.LBE564:
 12275              	.LBE565:
 12276              	.LBE566:
 12277              	.LBB567:
 12278              	.LBB556:
 12279              	.LBB555:
GAS LISTING /tmp/ccW0oq2B.s 			page 333


 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12280              		.loc 1 290 54 is_stmt 1 view .LVU4289
 12281              	# sieve_extend.c:290:         for (register counter_t index = range_start; index <= range_stop;) {
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12282              		.loc 1 290 9 is_stmt 0 view .LVU4290
 12283 41f8 4939CF   		cmp	r15, rcx	# block_stop, index
 12284 41fb 0F82F1FE 		jb	.L746	#,
 12284      FFFF
 12285              	.LVL832:
 12286              		.p2align 4,,10
 12287 4201 0F1F8000 		.p2align 3
 12287      000000
 12288              	.L748:
 12289              	.LBB554:
 291:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12290              		.loc 1 291 13 is_stmt 1 view .LVU4291
 12291              	# sieve_extend.c:291:             register counter_t index_word = wordindex(index);
 291:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12292              		.loc 1 291 32 is_stmt 0 view .LVU4292
 12293 4208 4989CE   		mov	r14, rcx	# index_word, index
 12294 420b 49C1EE06 		shr	r14, 6	# index_word,
 12295              	.LVL833:
 292:sieve_extend.c ****             #pragma ivdep
 12296              		.loc 1 292 13 is_stmt 1 view .LVU4293
 12297              	# sieve_extend.c:292:             register bitword_t mask = SAFE_ZERO;
 292:sieve_extend.c ****             #pragma ivdep
 12298              		.loc 1 292 32 is_stmt 0 view .LVU4294
 12299 420f 4531D2   		xor	r10d, r10d	# mask
 12300              	.LVL834:
 12301              	.L747:
 294:sieve_extend.c ****                 mask |= markmask(index);
 12302              		.loc 1 294 13 is_stmt 1 view .LVU4295
 295:sieve_extend.c ****                 index += step;
 12303              		.loc 1 295 17 view .LVU4296
 12304              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12305              		.loc 1 295 25 is_stmt 0 view .LVU4297
 12306 4212 C4C2F1F7 		shlx	rsi, r13, rcx	# tmp867, tmp1041, index
 12306      F5
 12307              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12308              		.loc 1 296 23 view .LVU4298
 12309 4217 4C01C9   		add	rcx, r9	# index, step
 12310              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12311              		.loc 1 297 36 view .LVU4299
 12312 421a 4889CB   		mov	rbx, rcx	# tmp869, index
 12313 421d 48C1EB06 		shr	rbx, 6	# tmp869,
 12314              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12315              		.loc 1 295 22 view .LVU4300
 12316 4221 4909F2   		or	r10, rsi	# mask, tmp867
 12317              	.LVL835:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12318              		.loc 1 296 17 is_stmt 1 view .LVU4301
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12319              		.loc 1 297 21 view .LVU4302
GAS LISTING /tmp/ccW0oq2B.s 			page 334


 12320              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12321              		.loc 1 297 13 is_stmt 0 view .LVU4303
 12322 4224 4939DE   		cmp	r14, rbx	# index_word, tmp869
 12323 4227 0F85B300 		jne	.L1363	#,
 12323      0000
 294:sieve_extend.c ****                 mask |= markmask(index);
 12324              		.loc 1 294 13 is_stmt 1 view .LVU4304
 295:sieve_extend.c ****                 index += step;
 12325              		.loc 1 295 17 view .LVU4305
 12326              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12327              		.loc 1 295 25 is_stmt 0 view .LVU4306
 12328 422d C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1425, tmp1041, index
 12328      D5
 12329              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12330              		.loc 1 296 23 view .LVU4307
 12331 4232 4C01C9   		add	rcx, r9	# index, step
 12332              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12333              		.loc 1 297 36 view .LVU4308
 12334 4235 4889C8   		mov	rax, rcx	# tmp1426, index
 12335 4238 48C1E806 		shr	rax, 6	# tmp1426,
 12336              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12337              		.loc 1 295 22 view .LVU4309
 12338 423c 4909D2   		or	r10, rdx	# mask, tmp1425
 12339              	.LVL836:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12340              		.loc 1 296 17 is_stmt 1 view .LVU4310
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12341              		.loc 1 297 21 view .LVU4311
 12342              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12343              		.loc 1 297 13 is_stmt 0 view .LVU4312
 12344 423f 4939C6   		cmp	r14, rax	# index_word, tmp1426
 12345 4242 0F859800 		jne	.L1363	#,
 12345      0000
 294:sieve_extend.c ****                 mask |= markmask(index);
 12346              		.loc 1 294 13 is_stmt 1 view .LVU4313
 295:sieve_extend.c ****                 index += step;
 12347              		.loc 1 295 17 view .LVU4314
 12348              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12349              		.loc 1 295 25 is_stmt 0 view .LVU4315
 12350 4248 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1427, tmp1041, index
 12350      FD
 12351              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12352              		.loc 1 296 23 view .LVU4316
 12353 424d 4C01C9   		add	rcx, r9	# index, step
 12354              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12355              		.loc 1 297 36 view .LVU4317
 12356 4250 4889CE   		mov	rsi, rcx	# tmp1428, index
 12357 4253 48C1EE06 		shr	rsi, 6	# tmp1428,
GAS LISTING /tmp/ccW0oq2B.s 			page 335


 12358              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12359              		.loc 1 295 22 view .LVU4318
 12360 4257 4909FA   		or	r10, rdi	# mask, tmp1427
 12361              	.LVL837:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12362              		.loc 1 296 17 is_stmt 1 view .LVU4319
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12363              		.loc 1 297 21 view .LVU4320
 12364              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12365              		.loc 1 297 13 is_stmt 0 view .LVU4321
 12366 425a 4939F6   		cmp	r14, rsi	# index_word, tmp1428
 12367 425d 0F857D00 		jne	.L1363	#,
 12367      0000
 294:sieve_extend.c ****                 mask |= markmask(index);
 12368              		.loc 1 294 13 is_stmt 1 view .LVU4322
 295:sieve_extend.c ****                 index += step;
 12369              		.loc 1 295 17 view .LVU4323
 12370              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12371              		.loc 1 295 25 is_stmt 0 view .LVU4324
 12372 4263 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1429, tmp1041, index
 12372      DD
 12373              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12374              		.loc 1 296 23 view .LVU4325
 12375 4268 4C01C9   		add	rcx, r9	# index, step
 12376              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12377              		.loc 1 297 36 view .LVU4326
 12378 426b 4889CA   		mov	rdx, rcx	# tmp1430, index
 12379 426e 48C1EA06 		shr	rdx, 6	# tmp1430,
 12380              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12381              		.loc 1 295 22 view .LVU4327
 12382 4272 4909DA   		or	r10, rbx	# mask, tmp1429
 12383              	.LVL838:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12384              		.loc 1 296 17 is_stmt 1 view .LVU4328
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12385              		.loc 1 297 21 view .LVU4329
 12386              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12387              		.loc 1 297 13 is_stmt 0 view .LVU4330
 12388 4275 4939D6   		cmp	r14, rdx	# index_word, tmp1430
 12389 4278 7566     		jne	.L1363	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 12390              		.loc 1 294 13 is_stmt 1 view .LVU4331
 295:sieve_extend.c ****                 index += step;
 12391              		.loc 1 295 17 view .LVU4332
 12392              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12393              		.loc 1 295 25 is_stmt 0 view .LVU4333
 12394 427a C4C2F1F7 		shlx	rax, r13, rcx	# tmp1431, tmp1041, index
 12394      C5
 12395              	# sieve_extend.c:296:                 index += step;
GAS LISTING /tmp/ccW0oq2B.s 			page 336


 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12396              		.loc 1 296 23 view .LVU4334
 12397 427f 4C01C9   		add	rcx, r9	# index, step
 12398              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12399              		.loc 1 297 36 view .LVU4335
 12400 4282 4889CF   		mov	rdi, rcx	# tmp1432, index
 12401 4285 48C1EF06 		shr	rdi, 6	# tmp1432,
 12402              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12403              		.loc 1 295 22 view .LVU4336
 12404 4289 4909C2   		or	r10, rax	# mask, tmp1431
 12405              	.LVL839:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12406              		.loc 1 296 17 is_stmt 1 view .LVU4337
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12407              		.loc 1 297 21 view .LVU4338
 12408              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12409              		.loc 1 297 13 is_stmt 0 view .LVU4339
 12410 428c 4939FE   		cmp	r14, rdi	# index_word, tmp1432
 12411 428f 754F     		jne	.L1363	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 12412              		.loc 1 294 13 is_stmt 1 view .LVU4340
 295:sieve_extend.c ****                 index += step;
 12413              		.loc 1 295 17 view .LVU4341
 12414              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12415              		.loc 1 295 25 is_stmt 0 view .LVU4342
 12416 4291 C4C2F1F7 		shlx	rsi, r13, rcx	# tmp1433, tmp1041, index
 12416      F5
 12417              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12418              		.loc 1 296 23 view .LVU4343
 12419 4296 4C01C9   		add	rcx, r9	# index, step
 12420              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12421              		.loc 1 297 36 view .LVU4344
 12422 4299 4889CB   		mov	rbx, rcx	# tmp1434, index
 12423 429c 48C1EB06 		shr	rbx, 6	# tmp1434,
 12424              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12425              		.loc 1 295 22 view .LVU4345
 12426 42a0 4909F2   		or	r10, rsi	# mask, tmp1433
 12427              	.LVL840:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12428              		.loc 1 296 17 is_stmt 1 view .LVU4346
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12429              		.loc 1 297 21 view .LVU4347
 12430              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12431              		.loc 1 297 13 is_stmt 0 view .LVU4348
 12432 42a3 4939DE   		cmp	r14, rbx	# index_word, tmp1434
 12433 42a6 7538     		jne	.L1363	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 12434              		.loc 1 294 13 is_stmt 1 view .LVU4349
 295:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccW0oq2B.s 			page 337


 12435              		.loc 1 295 17 view .LVU4350
 12436              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12437              		.loc 1 295 25 is_stmt 0 view .LVU4351
 12438 42a8 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1435, tmp1041, index
 12438      D5
 12439              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12440              		.loc 1 296 23 view .LVU4352
 12441 42ad 4C01C9   		add	rcx, r9	# index, step
 12442              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12443              		.loc 1 297 36 view .LVU4353
 12444 42b0 4889C8   		mov	rax, rcx	# tmp1436, index
 12445 42b3 48C1E806 		shr	rax, 6	# tmp1436,
 12446              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12447              		.loc 1 295 22 view .LVU4354
 12448 42b7 4909D2   		or	r10, rdx	# mask, tmp1435
 12449              	.LVL841:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12450              		.loc 1 296 17 is_stmt 1 view .LVU4355
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12451              		.loc 1 297 21 view .LVU4356
 12452              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12453              		.loc 1 297 13 is_stmt 0 view .LVU4357
 12454 42ba 4939C6   		cmp	r14, rax	# index_word, tmp1436
 12455 42bd 7521     		jne	.L1363	#,
 294:sieve_extend.c ****                 mask |= markmask(index);
 12456              		.loc 1 294 13 is_stmt 1 view .LVU4358
 295:sieve_extend.c ****                 index += step;
 12457              		.loc 1 295 17 view .LVU4359
 12458              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12459              		.loc 1 295 25 is_stmt 0 view .LVU4360
 12460 42bf C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1437, tmp1041, index
 12460      FD
 12461              	# sieve_extend.c:296:                 index += step;
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12462              		.loc 1 296 23 view .LVU4361
 12463 42c4 4C01C9   		add	rcx, r9	# index, step
 12464              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12465              		.loc 1 297 36 view .LVU4362
 12466 42c7 4889CE   		mov	rsi, rcx	# tmp1438, index
 12467 42ca 48C1EE06 		shr	rsi, 6	# tmp1438,
 12468              	# sieve_extend.c:295:                 mask |= markmask(index);
 295:sieve_extend.c ****                 index += step;
 12469              		.loc 1 295 22 view .LVU4363
 12470 42ce 4909FA   		or	r10, rdi	# mask, tmp1437
 12471              	.LVL842:
 296:sieve_extend.c ****             } while (index_word == wordindex(index));
 12472              		.loc 1 296 17 is_stmt 1 view .LVU4364
 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12473              		.loc 1 297 21 view .LVU4365
 12474              	# sieve_extend.c:297:             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccW0oq2B.s 			page 338


 297:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12475              		.loc 1 297 13 is_stmt 0 view .LVU4366
 12476 42d1 4939F6   		cmp	r14, rsi	# index_word, tmp1438
 12477 42d4 0F8438FF 		je	.L747	#,
 12477      FFFF
 12478 42da 660F1F44 		.p2align 4,,10
 12478      0000
 12479              		.p2align 3
 12480              	.L1363:
 300:sieve_extend.c ****         }
 12481              		.loc 1 300 13 is_stmt 1 view .LVU4367
 12482              	# sieve_extend.c:300:             bitarray[index_word] |= mask;
 300:sieve_extend.c ****         }
 12483              		.loc 1 300 34 is_stmt 0 view .LVU4368
 12484 42e0 4F0914F4 		or	QWORD PTR [r12+r14*8], r10	# *_605, mask
 300:sieve_extend.c ****         }
 12485              		.loc 1 300 34 view .LVU4369
 12486              	.LBE554:
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12487              		.loc 1 290 54 is_stmt 1 view .LVU4370
 12488              	# sieve_extend.c:290:         for (register counter_t index = range_start; index <= range_stop;) {
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12489              		.loc 1 290 9 is_stmt 0 view .LVU4371
 12490 42e4 4939CF   		cmp	r15, rcx	# block_stop, index
 12491 42e7 0F831BFF 		jnb	.L748	#,
 12491      FFFF
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12492              		.loc 1 290 9 view .LVU4372
 12493 42ed E900FEFF 		jmp	.L746	#
 12493      FF
 12494              	.LVL843:
 12495              		.p2align 4,,10
 12496 42f2 660F1F44 		.p2align 3
 12496      0000
 12497              	.L1586:
 290:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12498              		.loc 1 290 9 view .LVU4373
 12499              	.LBE555:
 12500              	.LBE556:
 12501              	.LBE567:
 12502              	.LBE569:
 12503              	.LBE587:
 887:sieve_extend.c ****         step  = prime * 2 + 1;
 12504              		.loc 1 887 11 is_stmt 1 view .LVU4374
 12505 42f8 4939CF   		cmp	r15, rcx	# block_stop, index
 12506 42fb 0F82D3FE 		jb	.L1567	#,
 12506      FFFF
 888:sieve_extend.c ****         if (step > 64) break;
 12507              		.loc 1 888 9 view .LVU4375
 889:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12508              		.loc 1 889 9 view .LVU4376
 12509 4301 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# block_start, %sfp
 12509      78
 12510 4306 4C8D5601 		lea	r10, 1[rsi]	# _491,
 12511              	# sieve_extend.c:889:         if (step > 64) break;
 889:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12512              		.loc 1 889 12 is_stmt 0 view .LVU4377
GAS LISTING /tmp/ccW0oq2B.s 			page 339


 12513 430a 4983F940 		cmp	r9, 64	# step,
 12514 430e 0F873407 		ja	.L801	#,
 12514      0000
 12515              		.p2align 4,,10
 12516 4314 0F1F4000 		.p2align 3
 12517              	.L738:
 890:sieve_extend.c ****         start1 = start; // save value
 12518              		.loc 1 890 9 is_stmt 1 view .LVU4378
 12519              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12520              		.loc 1 890 35 is_stmt 0 view .LVU4379
 12521 4318 4C89D7   		mov	rdi, r10	# index, _491
 12522              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12523              		.loc 1 890 12 view .LVU4380
 12524 431b 4D39DA   		cmp	r10, r11	# _491, block_start
 12525 431e 7710     		ja	.L757	#,
 890:sieve_extend.c ****         start1 = start; // save value
 12526              		.loc 1 890 41 is_stmt 1 view .LVU4381
 12527              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12528              		.loc 1 890 61 is_stmt 0 view .LVU4382
 12529 4320 4A8D041E 		lea	rax, [rsi+r11]	# _421,
 12530              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12531              		.loc 1 890 102 view .LVU4383
 12532 4324 31D2     		xor	edx, edx	# tmp897
 12533              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12534              		.loc 1 890 69 view .LVU4384
 12535 4326 488D0C30 		lea	rcx, [rax+rsi]	# tmp895,
 12536              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12537              		.loc 1 890 102 view .LVU4385
 12538 432a 49F7F1   		div	r9	# step
 12539              	.LVL844:
 12540              	# sieve_extend.c:890:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 890:sieve_extend.c ****         start1 = start; // save value
 12541              		.loc 1 890 47 view .LVU4386
 12542 432d 4829D1   		sub	rcx, rdx	# index, tmp897
 12543              	.LVL845:
 12544              	.L757:
 891:sieve_extend.c ****         step1 = step; // save value
 12545              		.loc 1 891 9 is_stmt 1 view .LVU4387
 892:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12546              		.loc 1 892 9 view .LVU4388
 893:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12547              		.loc 1 893 9 view .LVU4389
 12548              	.LBB588:
 12549              	.LBI588:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12550              		.loc 1 123 25 view .LVU4390
 12551              	.LBB589:
 124:sieve_extend.c ****     return index;
 12552              		.loc 1 124 5 view .LVU4391
 124:sieve_extend.c ****     return index;
 12553              		.loc 1 124 11 view .LVU4392
GAS LISTING /tmp/ccW0oq2B.s 			page 340


 12554              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12555              		.loc 1 124 21 is_stmt 0 view .LVU4393
 12556 4330 4D89D6   		mov	r14, r10	# tmp899, _491
 12557 4333 49C1EE06 		shr	r14, 6	# tmp899,
 12558              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12559              		.loc 1 124 12 view .LVU4394
 12560 4337 4B8B1CF4 		mov	rbx, QWORD PTR [r12+r14*8]	# *_345, *_345
 12561              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12562              		.loc 1 124 11 view .LVU4395
 12563 433b 4C0FA3D3 		bt	rbx, r10	# *_345, _491
 12564 433f 0F83BB00 		jnc	.L758	#,
 12564      0000
 12565              	.LVL846:
 12566              	.L759:
 124:sieve_extend.c ****     return index;
 12567              		.loc 1 124 58 is_stmt 1 view .LVU4396
 12568              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12569              		.loc 1 124 63 is_stmt 0 view .LVU4397
 12570 4345 4C8D5701 		lea	r10, 1[rdi]	# tmp1050,
 12571              	.LVL847:
 12572              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12573              		.loc 1 124 21 view .LVU4398
 12574 4349 4C89D6   		mov	rsi, r10	# tmp904, index
 12575 434c 48C1EE06 		shr	rsi, 6	# tmp904,
 12576              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12577              		.loc 1 124 12 view .LVU4399
 12578 4350 498B04F4 		mov	rax, QWORD PTR [r12+rsi*8]	# *_429, *_429
 12579              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12580              		.loc 1 124 63 view .LVU4400
 12581 4354 4C89D7   		mov	rdi, r10	# index, tmp1050
 124:sieve_extend.c ****     return index;
 12582              		.loc 1 124 11 is_stmt 1 view .LVU4401
 12583 4357 4C0FA3D0 		bt	rax, r10	# *_429, index
 12584 435b 0F839F00 		jnc	.L758	#,
 12584      0000
 124:sieve_extend.c ****     return index;
 12585              		.loc 1 124 58 view .LVU4402
 12586              	.LVL848:
 12587              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12588              		.loc 1 124 63 is_stmt 0 view .LVU4403
 12589 4361 48FFC7   		inc	rdi	# index
 12590              	.LVL849:
 124:sieve_extend.c ****     return index;
 12591              		.loc 1 124 11 is_stmt 1 view .LVU4404
 12592              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12593              		.loc 1 124 21 is_stmt 0 view .LVU4405
 12594 4364 4889FA   		mov	rdx, rdi	# tmp1369, index
 12595 4367 48C1EA06 		shr	rdx, 6	# tmp1369,
GAS LISTING /tmp/ccW0oq2B.s 			page 341


 12596              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12597              		.loc 1 124 12 view .LVU4406
 12598 436b 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# *_429, *_429
 12599              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12600              		.loc 1 124 11 view .LVU4407
 12601 436f 490FA3FE 		bt	r14, rdi	# *_429, index
 12602 4373 0F838700 		jnc	.L758	#,
 12602      0000
 124:sieve_extend.c ****     return index;
 12603              		.loc 1 124 58 is_stmt 1 view .LVU4408
 12604              	.LVL850:
 12605              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12606              		.loc 1 124 63 is_stmt 0 view .LVU4409
 12607 4379 498D7A02 		lea	rdi, 2[r10]	# index,
 12608              	.LVL851:
 124:sieve_extend.c ****     return index;
 12609              		.loc 1 124 11 is_stmt 1 view .LVU4410
 12610              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12611              		.loc 1 124 21 is_stmt 0 view .LVU4411
 12612 437d 4889FB   		mov	rbx, rdi	# tmp1373, index
 12613 4380 48C1EB06 		shr	rbx, 6	# tmp1373,
 12614              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12615              		.loc 1 124 12 view .LVU4412
 12616 4384 498B34DC 		mov	rsi, QWORD PTR [r12+rbx*8]	# *_429, *_429
 12617              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12618              		.loc 1 124 11 view .LVU4413
 12619 4388 480FA3FE 		bt	rsi, rdi	# *_429, index
 12620 438c 7372     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12621              		.loc 1 124 58 is_stmt 1 view .LVU4414
 12622              	.LVL852:
 12623              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12624              		.loc 1 124 63 is_stmt 0 view .LVU4415
 12625 438e 498D7A03 		lea	rdi, 3[r10]	# index,
 12626              	.LVL853:
 124:sieve_extend.c ****     return index;
 12627              		.loc 1 124 11 is_stmt 1 view .LVU4416
 12628              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12629              		.loc 1 124 21 is_stmt 0 view .LVU4417
 12630 4392 4889F8   		mov	rax, rdi	# tmp1377, index
 12631 4395 48C1E806 		shr	rax, 6	# tmp1377,
 12632              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12633              		.loc 1 124 12 view .LVU4418
 12634 4399 498B14C4 		mov	rdx, QWORD PTR [r12+rax*8]	# *_429, *_429
 12635              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12636              		.loc 1 124 11 view .LVU4419
 12637 439d 480FA3FA 		bt	rdx, rdi	# *_429, index
GAS LISTING /tmp/ccW0oq2B.s 			page 342


 12638 43a1 735D     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12639              		.loc 1 124 58 is_stmt 1 view .LVU4420
 12640              	.LVL854:
 12641              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12642              		.loc 1 124 63 is_stmt 0 view .LVU4421
 12643 43a3 498D7A04 		lea	rdi, 4[r10]	# index,
 12644              	.LVL855:
 124:sieve_extend.c ****     return index;
 12645              		.loc 1 124 11 is_stmt 1 view .LVU4422
 12646              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12647              		.loc 1 124 21 is_stmt 0 view .LVU4423
 12648 43a7 4989FE   		mov	r14, rdi	# tmp1381, index
 12649 43aa 49C1EE06 		shr	r14, 6	# tmp1381,
 12650              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12651              		.loc 1 124 12 view .LVU4424
 12652 43ae 4B8B1CF4 		mov	rbx, QWORD PTR [r12+r14*8]	# *_429, *_429
 12653              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12654              		.loc 1 124 11 view .LVU4425
 12655 43b2 480FA3FB 		bt	rbx, rdi	# *_429, index
 12656 43b6 7348     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12657              		.loc 1 124 58 is_stmt 1 view .LVU4426
 12658              	.LVL856:
 12659              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12660              		.loc 1 124 63 is_stmt 0 view .LVU4427
 12661 43b8 498D7A05 		lea	rdi, 5[r10]	# index,
 12662              	.LVL857:
 124:sieve_extend.c ****     return index;
 12663              		.loc 1 124 11 is_stmt 1 view .LVU4428
 12664              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12665              		.loc 1 124 21 is_stmt 0 view .LVU4429
 12666 43bc 4889FE   		mov	rsi, rdi	# tmp1385, index
 12667 43bf 48C1EE06 		shr	rsi, 6	# tmp1385,
 12668              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12669              		.loc 1 124 12 view .LVU4430
 12670 43c3 498B04F4 		mov	rax, QWORD PTR [r12+rsi*8]	# *_429, *_429
 12671              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12672              		.loc 1 124 11 view .LVU4431
 12673 43c7 480FA3F8 		bt	rax, rdi	# *_429, index
 12674 43cb 7333     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12675              		.loc 1 124 58 is_stmt 1 view .LVU4432
 12676              	.LVL858:
 12677              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12678              		.loc 1 124 63 is_stmt 0 view .LVU4433
 12679 43cd 498D7A06 		lea	rdi, 6[r10]	# index,
 12680              	.LVL859:
GAS LISTING /tmp/ccW0oq2B.s 			page 343


 124:sieve_extend.c ****     return index;
 12681              		.loc 1 124 11 is_stmt 1 view .LVU4434
 12682              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12683              		.loc 1 124 21 is_stmt 0 view .LVU4435
 12684 43d1 4889FA   		mov	rdx, rdi	# tmp1389, index
 12685 43d4 48C1EA06 		shr	rdx, 6	# tmp1389,
 12686              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12687              		.loc 1 124 12 view .LVU4436
 12688 43d8 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# *_429, *_429
 12689              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12690              		.loc 1 124 11 view .LVU4437
 12691 43dc 490FA3FE 		bt	r14, rdi	# *_429, index
 12692 43e0 731E     		jnc	.L758	#,
 124:sieve_extend.c ****     return index;
 12693              		.loc 1 124 58 is_stmt 1 view .LVU4438
 12694              	.LVL860:
 12695              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12696              		.loc 1 124 63 is_stmt 0 view .LVU4439
 12697 43e2 498D7A07 		lea	rdi, 7[r10]	# index,
 12698              	.LVL861:
 124:sieve_extend.c ****     return index;
 12699              		.loc 1 124 11 is_stmt 1 view .LVU4440
 12700              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12701              		.loc 1 124 21 is_stmt 0 view .LVU4441
 12702 43e6 4989FA   		mov	r10, rdi	# tmp1393, index
 12703 43e9 49C1EA06 		shr	r10, 6	# tmp1393,
 12704              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12705              		.loc 1 124 12 view .LVU4442
 12706 43ed 4B8B1CD4 		mov	rbx, QWORD PTR [r12+r10*8]	# *_429, *_429
 12707              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 12708              		.loc 1 124 11 view .LVU4443
 12709 43f1 480FA3FB 		bt	rbx, rdi	# *_429, index
 12710 43f5 0F824AFF 		jc	.L759	#,
 12710      FFFF
 12711              	.LVL862:
 12712 43fb 0F1F4400 		.p2align 4,,10
 12712      00
 12713              		.p2align 3
 12714              	.L758:
 125:sieve_extend.c **** }
 12715              		.loc 1 125 5 is_stmt 1 view .LVU4444
 125:sieve_extend.c **** }
 12716              		.loc 1 125 5 is_stmt 0 view .LVU4445
 12717              	.LBE589:
 12718              	.LBE588:
 894:sieve_extend.c ****         step  = prime * 2 + 1;
 12719              		.loc 1 894 9 is_stmt 1 view .LVU4446
 12720 4400 488D043F 		lea	rax, [rdi+rdi]	# _146,
 12721              	.LVL863:
 895:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
GAS LISTING /tmp/ccW0oq2B.s 			page 344


 12722              		.loc 1 895 9 view .LVU4447
 12723              	# sieve_extend.c:894:         start = prime * prime * 2 + prime * 2;
 894:sieve_extend.c ****         step  = prime * 2 + 1;
 12724              		.loc 1 894 35 is_stmt 0 view .LVU4448
 12725 4404 488D7701 		lea	rsi, 1[rdi]	# prime,
 12726              	# sieve_extend.c:895:         step  = prime * 2 + 1;
 895:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 12727              		.loc 1 895 15 view .LVU4449
 12728 4408 4C8D5001 		lea	r10, 1[rax]	# step,
 12729              	.LVL864:
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12730              		.loc 1 896 9 is_stmt 1 view .LVU4450
 12731              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 12732              		.loc 1 896 12 is_stmt 0 view .LVU4451
 12733 440c 4C39DE   		cmp	rsi, r11	# prime, block_start
 12734 440f 0F86F309 		jbe	.L760	#,
 12734      0000
 12735              	# sieve_extend.c:894:         start = prime * prime * 2 + prime * 2;
 894:sieve_extend.c ****         step  = prime * 2 + 1;
 12736              		.loc 1 894 15 view .LVU4452
 12737 4415 480FAFC6 		imul	rax, rsi	# index2, prime
 12738              	.LVL865:
 12739              	.L761:
 897:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 12740              		.loc 1 897 9 is_stmt 1 view .LVU4453
 12741              	.LBB590:
 12742              	.LBB591:
 12743              	# sieve_extend.c:338:     counter_t index1_word = wordindex(index1);
 338:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 12744              		.loc 1 338 15 is_stmt 0 view .LVU4454
 12745 4419 4989CE   		mov	r14, rcx	# index1_word, index
 12746              	# sieve_extend.c:339:     counter_t index2_word = wordindex(index2);
 339:sieve_extend.c ****     
 12747              		.loc 1 339 15 view .LVU4455
 12748 441c 4889C2   		mov	rdx, rax	# index2_word, index2
 12749              	# sieve_extend.c:338:     counter_t index1_word = wordindex(index1);
 338:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 12750              		.loc 1 338 15 view .LVU4456
 12751 441f 49C1EE06 		shr	r14, 6	# index1_word,
 12752              	.LVL866:
 339:sieve_extend.c ****     
 12753              		.loc 1 339 5 is_stmt 1 view .LVU4457
 12754              	# sieve_extend.c:339:     counter_t index2_word = wordindex(index2);
 339:sieve_extend.c ****     
 12755              		.loc 1 339 15 is_stmt 0 view .LVU4458
 12756 4423 48C1EA06 		shr	rdx, 6	# index2_word,
 12757              	.LBE591:
 12758              	.LBE590:
 12759              	# sieve_extend.c:897:         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, st
 897:sieve_extend.c ****         else                     setBitsTrue_smallRange(bitarray, start1, step1, block_stop);
 12760              		.loc 1 897 12 view .LVU4459
 12761 4427 4939C7   		cmp	r15, rax	# block_stop, index2
 12762 442a 0F82C007 		jb	.L1588	#,
 12762      0000
 12763              	.LVL867:
 12764              		.p2align 4,,10
GAS LISTING /tmp/ccW0oq2B.s 			page 345


 12765              		.p2align 3
 12766              	.L777:
 12767              	.LBB595:
 12768              	.LBB593:
 341:sieve_extend.c ****         if (index1_word == index2_word) {
 12769              		.loc 1 341 5 is_stmt 1 view .LVU4460
 342:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 12770              		.loc 1 342 9 view .LVU4461
 12771              	# sieve_extend.c:342:         if (index1_word == index2_word) {
 342:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 12772              		.loc 1 342 12 is_stmt 0 view .LVU4462
 12773 4430 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12774 4433 0F84DF01 		je	.L1589	#,
 12774      0000
 12775              	.L766:
 359:sieve_extend.c ****             while (index1 <= range_stop) {
 12776              		.loc 1 359 9 is_stmt 1 view .LVU4463
 12777              	# sieve_extend.c:359:         if (index2 > range_stop) {
 359:sieve_extend.c ****             while (index1 <= range_stop) {
 12778              		.loc 1 359 12 is_stmt 0 view .LVU4464
 12779 4439 4939C7   		cmp	r15, rax	# block_stop, index2
 12780 443c 0F827E03 		jb	.L1590	#,
 12780      0000
 12781              	.L769:
 367:sieve_extend.c ****             while (index2 <= range_stop) {
 12782              		.loc 1 367 9 is_stmt 1 view .LVU4465
 12783              	# sieve_extend.c:367:         if (index1 > range_stop) {
 367:sieve_extend.c ****             while (index2 <= range_stop) {
 12784              		.loc 1 367 12 is_stmt 0 view .LVU4466
 12785 4442 4939CF   		cmp	r15, rcx	# block_stop, index
 12786 4445 0F829508 		jb	.L772	#,
 12786      0000
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12787              		.loc 1 375 15 is_stmt 1 view .LVU4467
 12788 444b 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12789 444e 0F86CC00 		jbe	.L774	#,
 12789      0000
 12790              	.L773:
 376:sieve_extend.c ****             index1 += step1;
 12791              		.loc 1 376 13 view .LVU4468
 12792              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12793              		.loc 1 376 38 is_stmt 0 view .LVU4469
 12794 4454 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp937, tmp1041, index
 12794      FD
 12795              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12796              		.loc 1 377 20 view .LVU4470
 12797 4459 4C01C9   		add	rcx, r9	# index, step
 12798              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12799              		.loc 1 376 35 view .LVU4471
 12800 445c 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp937
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12801              		.loc 1 377 13 is_stmt 1 view .LVU4472
 378:sieve_extend.c ****         }
 12802              		.loc 1 378 13 view .LVU4473
GAS LISTING /tmp/ccW0oq2B.s 			page 346


 12803              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12804              		.loc 1 378 25 is_stmt 0 view .LVU4474
 12805 4460 4989CE   		mov	r14, rcx	# index1_word, index
 12806              	.LVL868:
 378:sieve_extend.c ****         }
 12807              		.loc 1 378 25 view .LVU4475
 12808 4463 49C1EE06 		shr	r14, 6	# index1_word,
 12809              	.LVL869:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12810              		.loc 1 375 15 is_stmt 1 view .LVU4476
 12811 4467 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12812 446a 0F83B000 		jnb	.L774	#,
 12812      0000
 376:sieve_extend.c ****             index1 += step1;
 12813              		.loc 1 376 13 view .LVU4477
 12814              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12815              		.loc 1 376 38 is_stmt 0 view .LVU4478
 12816 4470 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1302, tmp1041, index
 12816      DD
 12817              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12818              		.loc 1 377 20 view .LVU4479
 12819 4475 4C01C9   		add	rcx, r9	# index, step
 12820              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12821              		.loc 1 376 35 view .LVU4480
 12822 4478 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1302
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12823              		.loc 1 377 13 is_stmt 1 view .LVU4481
 378:sieve_extend.c ****         }
 12824              		.loc 1 378 13 view .LVU4482
 12825              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12826              		.loc 1 378 25 is_stmt 0 view .LVU4483
 12827 447c 4989CE   		mov	r14, rcx	# index1_word, index
 12828              	.LVL870:
 378:sieve_extend.c ****         }
 12829              		.loc 1 378 25 view .LVU4484
 12830 447f 49C1EE06 		shr	r14, 6	# index1_word,
 12831              	.LVL871:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12832              		.loc 1 375 15 is_stmt 1 view .LVU4485
 12833 4483 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12834 4486 0F839400 		jnb	.L774	#,
 12834      0000
 376:sieve_extend.c ****             index1 += step1;
 12835              		.loc 1 376 13 view .LVU4486
 12836              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12837              		.loc 1 376 38 is_stmt 0 view .LVU4487
 12838 448c C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1305, tmp1041, index
 12838      FD
 12839              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12840              		.loc 1 377 20 view .LVU4488
GAS LISTING /tmp/ccW0oq2B.s 			page 347


 12841 4491 4C01C9   		add	rcx, r9	# index, step
 12842              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12843              		.loc 1 376 35 view .LVU4489
 12844 4494 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1305
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12845              		.loc 1 377 13 is_stmt 1 view .LVU4490
 378:sieve_extend.c ****         }
 12846              		.loc 1 378 13 view .LVU4491
 12847              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12848              		.loc 1 378 25 is_stmt 0 view .LVU4492
 12849 4498 4989CE   		mov	r14, rcx	# index1_word, index
 12850              	.LVL872:
 378:sieve_extend.c ****         }
 12851              		.loc 1 378 25 view .LVU4493
 12852 449b 49C1EE06 		shr	r14, 6	# index1_word,
 12853              	.LVL873:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12854              		.loc 1 375 15 is_stmt 1 view .LVU4494
 12855 449f 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12856 44a2 737C     		jnb	.L774	#,
 376:sieve_extend.c ****             index1 += step1;
 12857              		.loc 1 376 13 view .LVU4495
 12858              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12859              		.loc 1 376 38 is_stmt 0 view .LVU4496
 12860 44a4 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1308, tmp1041, index
 12860      DD
 12861              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12862              		.loc 1 377 20 view .LVU4497
 12863 44a9 4C01C9   		add	rcx, r9	# index, step
 12864              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12865              		.loc 1 376 35 view .LVU4498
 12866 44ac 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1308
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12867              		.loc 1 377 13 is_stmt 1 view .LVU4499
 378:sieve_extend.c ****         }
 12868              		.loc 1 378 13 view .LVU4500
 12869              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12870              		.loc 1 378 25 is_stmt 0 view .LVU4501
 12871 44b0 4989CE   		mov	r14, rcx	# index1_word, index
 12872              	.LVL874:
 378:sieve_extend.c ****         }
 12873              		.loc 1 378 25 view .LVU4502
 12874 44b3 49C1EE06 		shr	r14, 6	# index1_word,
 12875              	.LVL875:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12876              		.loc 1 375 15 is_stmt 1 view .LVU4503
 12877 44b7 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12878 44ba 7364     		jnb	.L774	#,
 376:sieve_extend.c ****             index1 += step1;
 12879              		.loc 1 376 13 view .LVU4504
 12880              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
GAS LISTING /tmp/ccW0oq2B.s 			page 348


 376:sieve_extend.c ****             index1 += step1;
 12881              		.loc 1 376 38 is_stmt 0 view .LVU4505
 12882 44bc C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1311, tmp1041, index
 12882      FD
 12883              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12884              		.loc 1 377 20 view .LVU4506
 12885 44c1 4C01C9   		add	rcx, r9	# index, step
 12886              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12887              		.loc 1 376 35 view .LVU4507
 12888 44c4 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1311
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12889              		.loc 1 377 13 is_stmt 1 view .LVU4508
 378:sieve_extend.c ****         }
 12890              		.loc 1 378 13 view .LVU4509
 12891              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12892              		.loc 1 378 25 is_stmt 0 view .LVU4510
 12893 44c8 4989CE   		mov	r14, rcx	# index1_word, index
 12894              	.LVL876:
 378:sieve_extend.c ****         }
 12895              		.loc 1 378 25 view .LVU4511
 12896 44cb 49C1EE06 		shr	r14, 6	# index1_word,
 12897              	.LVL877:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12898              		.loc 1 375 15 is_stmt 1 view .LVU4512
 12899 44cf 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12900 44d2 734C     		jnb	.L774	#,
 376:sieve_extend.c ****             index1 += step1;
 12901              		.loc 1 376 13 view .LVU4513
 12902              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12903              		.loc 1 376 38 is_stmt 0 view .LVU4514
 12904 44d4 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1314, tmp1041, index
 12904      DD
 12905              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12906              		.loc 1 377 20 view .LVU4515
 12907 44d9 4C01C9   		add	rcx, r9	# index, step
 12908              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12909              		.loc 1 376 35 view .LVU4516
 12910 44dc 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1314
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12911              		.loc 1 377 13 is_stmt 1 view .LVU4517
 378:sieve_extend.c ****         }
 12912              		.loc 1 378 13 view .LVU4518
 12913              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12914              		.loc 1 378 25 is_stmt 0 view .LVU4519
 12915 44e0 4989CE   		mov	r14, rcx	# index1_word, index
 12916              	.LVL878:
 378:sieve_extend.c ****         }
 12917              		.loc 1 378 25 view .LVU4520
 12918 44e3 49C1EE06 		shr	r14, 6	# index1_word,
 12919              	.LVL879:
GAS LISTING /tmp/ccW0oq2B.s 			page 349


 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12920              		.loc 1 375 15 is_stmt 1 view .LVU4521
 12921 44e7 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12922 44ea 7334     		jnb	.L774	#,
 376:sieve_extend.c ****             index1 += step1;
 12923              		.loc 1 376 13 view .LVU4522
 12924              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12925              		.loc 1 376 38 is_stmt 0 view .LVU4523
 12926 44ec C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1317, tmp1041, index
 12926      FD
 12927              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12928              		.loc 1 377 20 view .LVU4524
 12929 44f1 4C01C9   		add	rcx, r9	# index, step
 12930              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12931              		.loc 1 376 35 view .LVU4525
 12932 44f4 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_703, tmp1317
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12933              		.loc 1 377 13 is_stmt 1 view .LVU4526
 378:sieve_extend.c ****         }
 12934              		.loc 1 378 13 view .LVU4527
 12935              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
 12936              		.loc 1 378 25 is_stmt 0 view .LVU4528
 12937 44f8 4989CE   		mov	r14, rcx	# index1_word, index
 12938              	.LVL880:
 378:sieve_extend.c ****         }
 12939              		.loc 1 378 25 view .LVU4529
 12940 44fb 49C1EE06 		shr	r14, 6	# index1_word,
 12941              	.LVL881:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12942              		.loc 1 375 15 is_stmt 1 view .LVU4530
 12943 44ff 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12944 4502 731C     		jnb	.L774	#,
 376:sieve_extend.c ****             index1 += step1;
 12945              		.loc 1 376 13 view .LVU4531
 12946              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12947              		.loc 1 376 38 is_stmt 0 view .LVU4532
 12948 4504 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1320, tmp1041, index
 12948      DD
 12949              	# sieve_extend.c:377:             index1 += step1;
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12950              		.loc 1 377 20 view .LVU4533
 12951 4509 4C01C9   		add	rcx, r9	# index, step
 12952              	# sieve_extend.c:376:             bitarray[index1_word] |= markmask(index1);
 376:sieve_extend.c ****             index1 += step1;
 12953              		.loc 1 376 35 view .LVU4534
 12954 450c 4B091CF4 		or	QWORD PTR [r12+r14*8], rbx	# *_703, tmp1320
 377:sieve_extend.c ****             index1_word = wordindex(index1);
 12955              		.loc 1 377 13 is_stmt 1 view .LVU4535
 378:sieve_extend.c ****         }
 12956              		.loc 1 378 13 view .LVU4536
 12957              	# sieve_extend.c:378:             index1_word = wordindex(index1);
 378:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 350


 12958              		.loc 1 378 25 is_stmt 0 view .LVU4537
 12959 4510 4989CE   		mov	r14, rcx	# index1_word, index
 12960              	.LVL882:
 378:sieve_extend.c ****         }
 12961              		.loc 1 378 25 view .LVU4538
 12962 4513 49C1EE06 		shr	r14, 6	# index1_word,
 12963              	.LVL883:
 375:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 12964              		.loc 1 375 15 is_stmt 1 view .LVU4539
 12965 4517 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 12966 451a 0F8234FF 		jb	.L773	#,
 12966      FFFF
 12967              		.p2align 4,,10
 12968              		.p2align 3
 12969              	.L774:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 12970              		.loc 1 381 15 view .LVU4540
 12971 4520 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12972 4523 0F8307FF 		jnb	.L777	#,
 12972      FFFF
 12973              	.L776:
 382:sieve_extend.c ****             index2 += step2;
 12974              		.loc 1 382 13 view .LVU4541
 12975              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 12976              		.loc 1 382 38 is_stmt 0 view .LVU4542
 12977 4529 C4C2F9F7 		shlx	rdi, r13, rax	# tmp941, tmp1041, index2
 12977      FD
 12978              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 12979              		.loc 1 383 20 view .LVU4543
 12980 452e 4C01D0   		add	rax, r10	# index2, step
 12981              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 12982              		.loc 1 382 35 view .LVU4544
 12983 4531 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp941
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 12984              		.loc 1 383 13 is_stmt 1 view .LVU4545
 384:sieve_extend.c ****         }
 12985              		.loc 1 384 13 view .LVU4546
 12986              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 12987              		.loc 1 384 25 is_stmt 0 view .LVU4547
 12988 4535 4889C2   		mov	rdx, rax	# index2_word, index2
 12989              	.LVL884:
 384:sieve_extend.c ****         }
 12990              		.loc 1 384 25 view .LVU4548
 12991 4538 48C1EA06 		shr	rdx, 6	# index2_word,
 12992              	.LVL885:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 12993              		.loc 1 381 15 is_stmt 1 view .LVU4549
 12994 453c 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 12995 453f 0F83EBFE 		jnb	.L777	#,
 12995      FFFF
 382:sieve_extend.c ****             index2 += step2;
 12996              		.loc 1 382 13 view .LVU4550
 12997              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
GAS LISTING /tmp/ccW0oq2B.s 			page 351


 382:sieve_extend.c ****             index2 += step2;
 12998              		.loc 1 382 38 is_stmt 0 view .LVU4551
 12999 4545 C4C2F9F7 		shlx	rbx, r13, rax	# tmp1281, tmp1041, index2
 12999      DD
 13000              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13001              		.loc 1 383 20 view .LVU4552
 13002 454a 4C01D0   		add	rax, r10	# index2, step
 13003              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13004              		.loc 1 382 35 view .LVU4553
 13005 454d 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1281
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13006              		.loc 1 383 13 is_stmt 1 view .LVU4554
 384:sieve_extend.c ****         }
 13007              		.loc 1 384 13 view .LVU4555
 13008              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13009              		.loc 1 384 25 is_stmt 0 view .LVU4556
 13010 4551 4889C2   		mov	rdx, rax	# index2_word, index2
 13011              	.LVL886:
 384:sieve_extend.c ****         }
 13012              		.loc 1 384 25 view .LVU4557
 13013 4554 48C1EA06 		shr	rdx, 6	# index2_word,
 13014              	.LVL887:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13015              		.loc 1 381 15 is_stmt 1 view .LVU4558
 13016 4558 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13017 455b 0F83CFFE 		jnb	.L777	#,
 13017      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13018              		.loc 1 382 13 view .LVU4559
 13019              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13020              		.loc 1 382 38 is_stmt 0 view .LVU4560
 13021 4561 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1284, tmp1041, index2
 13021      FD
 13022              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13023              		.loc 1 383 20 view .LVU4561
 13024 4566 4C01D0   		add	rax, r10	# index2, step
 13025              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13026              		.loc 1 382 35 view .LVU4562
 13027 4569 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1284
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13028              		.loc 1 383 13 is_stmt 1 view .LVU4563
 384:sieve_extend.c ****         }
 13029              		.loc 1 384 13 view .LVU4564
 13030              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13031              		.loc 1 384 25 is_stmt 0 view .LVU4565
 13032 456d 4889C2   		mov	rdx, rax	# index2_word, index2
 13033              	.LVL888:
 384:sieve_extend.c ****         }
 13034              		.loc 1 384 25 view .LVU4566
 13035 4570 48C1EA06 		shr	rdx, 6	# index2_word,
GAS LISTING /tmp/ccW0oq2B.s 			page 352


 13036              	.LVL889:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13037              		.loc 1 381 15 is_stmt 1 view .LVU4567
 13038 4574 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13039 4577 0F83B3FE 		jnb	.L777	#,
 13039      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13040              		.loc 1 382 13 view .LVU4568
 13041              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13042              		.loc 1 382 38 is_stmt 0 view .LVU4569
 13043 457d C4C2F9F7 		shlx	rbx, r13, rax	# tmp1287, tmp1041, index2
 13043      DD
 13044              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13045              		.loc 1 383 20 view .LVU4570
 13046 4582 4C01D0   		add	rax, r10	# index2, step
 13047              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13048              		.loc 1 382 35 view .LVU4571
 13049 4585 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1287
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13050              		.loc 1 383 13 is_stmt 1 view .LVU4572
 384:sieve_extend.c ****         }
 13051              		.loc 1 384 13 view .LVU4573
 13052              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13053              		.loc 1 384 25 is_stmt 0 view .LVU4574
 13054 4589 4889C2   		mov	rdx, rax	# index2_word, index2
 13055              	.LVL890:
 384:sieve_extend.c ****         }
 13056              		.loc 1 384 25 view .LVU4575
 13057 458c 48C1EA06 		shr	rdx, 6	# index2_word,
 13058              	.LVL891:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13059              		.loc 1 381 15 is_stmt 1 view .LVU4576
 13060 4590 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13061 4593 0F8397FE 		jnb	.L777	#,
 13061      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13062              		.loc 1 382 13 view .LVU4577
 13063              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13064              		.loc 1 382 38 is_stmt 0 view .LVU4578
 13065 4599 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1290, tmp1041, index2
 13065      FD
 13066              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13067              		.loc 1 383 20 view .LVU4579
 13068 459e 4C01D0   		add	rax, r10	# index2, step
 13069              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13070              		.loc 1 382 35 view .LVU4580
 13071 45a1 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1290
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13072              		.loc 1 383 13 is_stmt 1 view .LVU4581
 384:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 353


 13073              		.loc 1 384 13 view .LVU4582
 13074              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13075              		.loc 1 384 25 is_stmt 0 view .LVU4583
 13076 45a5 4889C2   		mov	rdx, rax	# index2_word, index2
 13077              	.LVL892:
 384:sieve_extend.c ****         }
 13078              		.loc 1 384 25 view .LVU4584
 13079 45a8 48C1EA06 		shr	rdx, 6	# index2_word,
 13080              	.LVL893:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13081              		.loc 1 381 15 is_stmt 1 view .LVU4585
 13082 45ac 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13083 45af 0F837BFE 		jnb	.L777	#,
 13083      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13084              		.loc 1 382 13 view .LVU4586
 13085              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13086              		.loc 1 382 38 is_stmt 0 view .LVU4587
 13087 45b5 C4C2F9F7 		shlx	rbx, r13, rax	# tmp1293, tmp1041, index2
 13087      DD
 13088              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13089              		.loc 1 383 20 view .LVU4588
 13090 45ba 4C01D0   		add	rax, r10	# index2, step
 13091              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13092              		.loc 1 382 35 view .LVU4589
 13093 45bd 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1293
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13094              		.loc 1 383 13 is_stmt 1 view .LVU4590
 384:sieve_extend.c ****         }
 13095              		.loc 1 384 13 view .LVU4591
 13096              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13097              		.loc 1 384 25 is_stmt 0 view .LVU4592
 13098 45c1 4889C2   		mov	rdx, rax	# index2_word, index2
 13099              	.LVL894:
 384:sieve_extend.c ****         }
 13100              		.loc 1 384 25 view .LVU4593
 13101 45c4 48C1EA06 		shr	rdx, 6	# index2_word,
 13102              	.LVL895:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13103              		.loc 1 381 15 is_stmt 1 view .LVU4594
 13104 45c8 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13105 45cb 0F835FFE 		jnb	.L777	#,
 13105      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13106              		.loc 1 382 13 view .LVU4595
 13107              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13108              		.loc 1 382 38 is_stmt 0 view .LVU4596
 13109 45d1 C4C2F9F7 		shlx	rdi, r13, rax	# tmp1296, tmp1041, index2
 13109      FD
 13110              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
GAS LISTING /tmp/ccW0oq2B.s 			page 354


 13111              		.loc 1 383 20 view .LVU4597
 13112 45d6 4C01D0   		add	rax, r10	# index2, step
 13113              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13114              		.loc 1 382 35 view .LVU4598
 13115 45d9 49093CD4 		or	QWORD PTR [r12+rdx*8], rdi	# *_714, tmp1296
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13116              		.loc 1 383 13 is_stmt 1 view .LVU4599
 384:sieve_extend.c ****         }
 13117              		.loc 1 384 13 view .LVU4600
 13118              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13119              		.loc 1 384 25 is_stmt 0 view .LVU4601
 13120 45dd 4889C2   		mov	rdx, rax	# index2_word, index2
 13121              	.LVL896:
 384:sieve_extend.c ****         }
 13122              		.loc 1 384 25 view .LVU4602
 13123 45e0 48C1EA06 		shr	rdx, 6	# index2_word,
 13124              	.LVL897:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13125              		.loc 1 381 15 is_stmt 1 view .LVU4603
 13126 45e4 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13127 45e7 0F8343FE 		jnb	.L777	#,
 13127      FFFF
 382:sieve_extend.c ****             index2 += step2;
 13128              		.loc 1 382 13 view .LVU4604
 13129              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13130              		.loc 1 382 38 is_stmt 0 view .LVU4605
 13131 45ed C4C2F9F7 		shlx	rbx, r13, rax	# tmp1299, tmp1041, index2
 13131      DD
 13132              	# sieve_extend.c:383:             index2 += step2;
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13133              		.loc 1 383 20 view .LVU4606
 13134 45f2 4C01D0   		add	rax, r10	# index2, step
 13135              	# sieve_extend.c:382:             bitarray[index2_word] |= markmask(index2);
 382:sieve_extend.c ****             index2 += step2;
 13136              		.loc 1 382 35 view .LVU4607
 13137 45f5 49091CD4 		or	QWORD PTR [r12+rdx*8], rbx	# *_714, tmp1299
 383:sieve_extend.c ****             index2_word = wordindex(index2);
 13138              		.loc 1 383 13 is_stmt 1 view .LVU4608
 384:sieve_extend.c ****         }
 13139              		.loc 1 384 13 view .LVU4609
 13140              	# sieve_extend.c:384:             index2_word = wordindex(index2);
 384:sieve_extend.c ****         }
 13141              		.loc 1 384 25 is_stmt 0 view .LVU4610
 13142 45f9 4889C2   		mov	rdx, rax	# index2_word, index2
 13143              	.LVL898:
 384:sieve_extend.c ****         }
 13144              		.loc 1 384 25 view .LVU4611
 13145 45fc 48C1EA06 		shr	rdx, 6	# index2_word,
 13146              	.LVL899:
 381:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 13147              		.loc 1 381 15 is_stmt 1 view .LVU4612
 13148 4600 4C39F2   		cmp	rdx, r14	# index2_word, index1_word
 13149 4603 0F8220FF 		jb	.L776	#,
 13149      FFFF
GAS LISTING /tmp/ccW0oq2B.s 			page 355


 341:sieve_extend.c ****         if (index1_word == index2_word) {
 13150              		.loc 1 341 5 view .LVU4613
 342:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 13151              		.loc 1 342 9 view .LVU4614
 13152              	# sieve_extend.c:342:         if (index1_word == index2_word) {
 342:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 13153              		.loc 1 342 12 is_stmt 0 view .LVU4615
 13154 4609 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13155 460c 0F8527FE 		jne	.L766	#,
 13155      FFFF
 13156              		.p2align 4,,10
 13157 4612 660F1F44 		.p2align 3
 13157      0000
 13158              	.L1589:
 13159              	.LBB592:
 13160              	# sieve_extend.c:343:             bitword_t mask = SAFE_ZERO;
 343:sieve_extend.c ****             counter_t index_word = index1_word;
 13161              		.loc 1 343 23 view .LVU4616
 13162 4618 31FF     		xor	edi, edi	# mask
 13163              	.LVL900:
 13164              	.L767:
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13165              		.loc 1 345 13 is_stmt 1 view .LVU4617
 346:sieve_extend.c ****                 index1 += step1;
 13166              		.loc 1 346 17 view .LVU4618
 13167              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13168              		.loc 1 346 25 is_stmt 0 view .LVU4619
 13169 461a C4C2F1F7 		shlx	rdx, r13, rcx	# tmp919, tmp1041, index
 13169      D5
 13170              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13171              		.loc 1 347 24 view .LVU4620
 13172 461f 4C01C9   		add	rcx, r9	# index, step
 13173              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13174              		.loc 1 348 29 view .LVU4621
 13175 4622 4889CB   		mov	rbx, rcx	# index1_word, index
 13176 4625 48C1EB06 		shr	rbx, 6	# index1_word,
 13177              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13178              		.loc 1 346 22 view .LVU4622
 13179 4629 4809D7   		or	rdi, rdx	# mask, tmp919
 13180              	.LVL901:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13181              		.loc 1 347 17 is_stmt 1 view .LVU4623
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13182              		.loc 1 348 17 view .LVU4624
 349:sieve_extend.c ****             do {
 13183              		.loc 1 349 21 view .LVU4625
 13184              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13185              		.loc 1 349 13 is_stmt 0 view .LVU4626
 13186 462c 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13187 462f 0F85AB00 		jne	.L768	#,
 13187      0000
 345:sieve_extend.c ****                 mask |= markmask(index1);
GAS LISTING /tmp/ccW0oq2B.s 			page 356


 13188              		.loc 1 345 13 is_stmt 1 view .LVU4627
 346:sieve_extend.c ****                 index1 += step1;
 13189              		.loc 1 346 17 view .LVU4628
 13190              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13191              		.loc 1 346 25 is_stmt 0 view .LVU4629
 13192 4635 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1328, tmp1041, index
 13192      DD
 13193              	.LVL902:
 13194              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13195              		.loc 1 347 24 view .LVU4630
 13196 463a 4C01C9   		add	rcx, r9	# index, step
 13197              	.LVL903:
 13198              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13199              		.loc 1 346 22 view .LVU4631
 13200 463d 4809DF   		or	rdi, rbx	# mask, tmp1328
 13201              	.LVL904:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13202              		.loc 1 347 17 is_stmt 1 view .LVU4632
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13203              		.loc 1 348 17 view .LVU4633
 13204              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13205              		.loc 1 348 29 is_stmt 0 view .LVU4634
 13206 4640 4889CB   		mov	rbx, rcx	# index1_word, index
 13207 4643 48C1EB06 		shr	rbx, 6	# index1_word,
 13208              	.LVL905:
 349:sieve_extend.c ****             do {
 13209              		.loc 1 349 21 is_stmt 1 view .LVU4635
 13210              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13211              		.loc 1 349 13 is_stmt 0 view .LVU4636
 13212 4647 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13213 464a 0F859000 		jne	.L768	#,
 13213      0000
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13214              		.loc 1 345 13 is_stmt 1 view .LVU4637
 346:sieve_extend.c ****                 index1 += step1;
 13215              		.loc 1 346 17 view .LVU4638
 13216              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13217              		.loc 1 346 25 is_stmt 0 view .LVU4639
 13218 4650 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1329, tmp1041, index
 13218      D5
 13219              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13220              		.loc 1 347 24 view .LVU4640
 13221 4655 4C01C9   		add	rcx, r9	# index, step
 13222              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13223              		.loc 1 348 29 view .LVU4641
 13224 4658 4889CB   		mov	rbx, rcx	# index1_word, index
 13225              	.LVL906:
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13226              		.loc 1 348 29 view .LVU4642
GAS LISTING /tmp/ccW0oq2B.s 			page 357


 13227 465b 48C1EB06 		shr	rbx, 6	# index1_word,
 13228              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13229              		.loc 1 346 22 view .LVU4643
 13230 465f 4809D7   		or	rdi, rdx	# mask, tmp1329
 13231              	.LVL907:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13232              		.loc 1 347 17 is_stmt 1 view .LVU4644
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13233              		.loc 1 348 17 view .LVU4645
 349:sieve_extend.c ****             do {
 13234              		.loc 1 349 21 view .LVU4646
 13235              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13236              		.loc 1 349 13 is_stmt 0 view .LVU4647
 13237 4662 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13238 4665 7579     		jne	.L768	#,
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13239              		.loc 1 345 13 is_stmt 1 view .LVU4648
 346:sieve_extend.c ****                 index1 += step1;
 13240              		.loc 1 346 17 view .LVU4649
 13241              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13242              		.loc 1 346 25 is_stmt 0 view .LVU4650
 13243 4667 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1330, tmp1041, index
 13243      DD
 13244              	.LVL908:
 13245              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13246              		.loc 1 347 24 view .LVU4651
 13247 466c 4C01C9   		add	rcx, r9	# index, step
 13248              	.LVL909:
 13249              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13250              		.loc 1 346 22 view .LVU4652
 13251 466f 4809DF   		or	rdi, rbx	# mask, tmp1330
 13252              	.LVL910:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13253              		.loc 1 347 17 is_stmt 1 view .LVU4653
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13254              		.loc 1 348 17 view .LVU4654
 13255              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13256              		.loc 1 348 29 is_stmt 0 view .LVU4655
 13257 4672 4889CB   		mov	rbx, rcx	# index1_word, index
 13258 4675 48C1EB06 		shr	rbx, 6	# index1_word,
 13259              	.LVL911:
 349:sieve_extend.c ****             do {
 13260              		.loc 1 349 21 is_stmt 1 view .LVU4656
 13261              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13262              		.loc 1 349 13 is_stmt 0 view .LVU4657
 13263 4679 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13264 467c 7562     		jne	.L768	#,
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13265              		.loc 1 345 13 is_stmt 1 view .LVU4658
 346:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccW0oq2B.s 			page 358


 13266              		.loc 1 346 17 view .LVU4659
 13267              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13268              		.loc 1 346 25 is_stmt 0 view .LVU4660
 13269 467e C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1331, tmp1041, index
 13269      D5
 13270              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13271              		.loc 1 347 24 view .LVU4661
 13272 4683 4C01C9   		add	rcx, r9	# index, step
 13273              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13274              		.loc 1 348 29 view .LVU4662
 13275 4686 4889CB   		mov	rbx, rcx	# index1_word, index
 13276              	.LVL912:
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13277              		.loc 1 348 29 view .LVU4663
 13278 4689 48C1EB06 		shr	rbx, 6	# index1_word,
 13279              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13280              		.loc 1 346 22 view .LVU4664
 13281 468d 4809D7   		or	rdi, rdx	# mask, tmp1331
 13282              	.LVL913:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13283              		.loc 1 347 17 is_stmt 1 view .LVU4665
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13284              		.loc 1 348 17 view .LVU4666
 349:sieve_extend.c ****             do {
 13285              		.loc 1 349 21 view .LVU4667
 13286              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13287              		.loc 1 349 13 is_stmt 0 view .LVU4668
 13288 4690 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13289 4693 754B     		jne	.L768	#,
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13290              		.loc 1 345 13 is_stmt 1 view .LVU4669
 346:sieve_extend.c ****                 index1 += step1;
 13291              		.loc 1 346 17 view .LVU4670
 13292              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13293              		.loc 1 346 25 is_stmt 0 view .LVU4671
 13294 4695 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1332, tmp1041, index
 13294      DD
 13295              	.LVL914:
 13296              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13297              		.loc 1 347 24 view .LVU4672
 13298 469a 4C01C9   		add	rcx, r9	# index, step
 13299              	.LVL915:
 13300              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13301              		.loc 1 346 22 view .LVU4673
 13302 469d 4809DF   		or	rdi, rbx	# mask, tmp1332
 13303              	.LVL916:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13304              		.loc 1 347 17 is_stmt 1 view .LVU4674
 348:sieve_extend.c ****             } while (index1_word == index_word);
GAS LISTING /tmp/ccW0oq2B.s 			page 359


 13305              		.loc 1 348 17 view .LVU4675
 13306              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13307              		.loc 1 348 29 is_stmt 0 view .LVU4676
 13308 46a0 4889CB   		mov	rbx, rcx	# index1_word, index
 13309 46a3 48C1EB06 		shr	rbx, 6	# index1_word,
 13310              	.LVL917:
 349:sieve_extend.c ****             do {
 13311              		.loc 1 349 21 is_stmt 1 view .LVU4677
 13312              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13313              		.loc 1 349 13 is_stmt 0 view .LVU4678
 13314 46a7 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13315 46aa 7534     		jne	.L768	#,
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13316              		.loc 1 345 13 is_stmt 1 view .LVU4679
 346:sieve_extend.c ****                 index1 += step1;
 13317              		.loc 1 346 17 view .LVU4680
 13318              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13319              		.loc 1 346 25 is_stmt 0 view .LVU4681
 13320 46ac C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1333, tmp1041, index
 13320      D5
 13321              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13322              		.loc 1 347 24 view .LVU4682
 13323 46b1 4C01C9   		add	rcx, r9	# index, step
 13324              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13325              		.loc 1 348 29 view .LVU4683
 13326 46b4 4889CB   		mov	rbx, rcx	# index1_word, index
 13327              	.LVL918:
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13328              		.loc 1 348 29 view .LVU4684
 13329 46b7 48C1EB06 		shr	rbx, 6	# index1_word,
 13330              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13331              		.loc 1 346 22 view .LVU4685
 13332 46bb 4809D7   		or	rdi, rdx	# mask, tmp1333
 13333              	.LVL919:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13334              		.loc 1 347 17 is_stmt 1 view .LVU4686
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13335              		.loc 1 348 17 view .LVU4687
 349:sieve_extend.c ****             do {
 13336              		.loc 1 349 21 view .LVU4688
 13337              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13338              		.loc 1 349 13 is_stmt 0 view .LVU4689
 13339 46be 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13340 46c1 751D     		jne	.L768	#,
 345:sieve_extend.c ****                 mask |= markmask(index1);
 13341              		.loc 1 345 13 is_stmt 1 view .LVU4690
 346:sieve_extend.c ****                 index1 += step1;
 13342              		.loc 1 346 17 view .LVU4691
 13343              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccW0oq2B.s 			page 360


 13344              		.loc 1 346 25 is_stmt 0 view .LVU4692
 13345 46c3 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1334, tmp1041, index
 13345      DD
 13346              	.LVL920:
 13347              	# sieve_extend.c:347:                 index1 += step1;
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13348              		.loc 1 347 24 view .LVU4693
 13349 46c8 4C01C9   		add	rcx, r9	# index, step
 13350              	.LVL921:
 13351              	# sieve_extend.c:346:                 mask |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 13352              		.loc 1 346 22 view .LVU4694
 13353 46cb 4809DF   		or	rdi, rbx	# mask, tmp1334
 13354              	.LVL922:
 347:sieve_extend.c ****                 index1_word = wordindex(index1);
 13355              		.loc 1 347 17 is_stmt 1 view .LVU4695
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13356              		.loc 1 348 17 view .LVU4696
 13357              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13358              		.loc 1 348 29 is_stmt 0 view .LVU4697
 13359 46ce 4889CB   		mov	rbx, rcx	# index1_word, index
 13360 46d1 48C1EB06 		shr	rbx, 6	# index1_word,
 13361              	.LVL923:
 349:sieve_extend.c ****             do {
 13362              		.loc 1 349 21 is_stmt 1 view .LVU4698
 13363              	# sieve_extend.c:349:             } while (index1_word == index_word);
 349:sieve_extend.c ****             do {
 13364              		.loc 1 349 13 is_stmt 0 view .LVU4699
 13365 46d5 4939DE   		cmp	r14, rbx	# index1_word, index1_word
 13366 46d8 0F843CFF 		je	.L767	#,
 13366      FFFF
 13367 46de 6690     		.p2align 4,,10
 13368              		.p2align 3
 13369              	.L768:
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13370              		.loc 1 350 13 is_stmt 1 view .LVU4700
 351:sieve_extend.c ****                 index2 += step2;
 13371              		.loc 1 351 17 view .LVU4701
 13372              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13373              		.loc 1 351 25 is_stmt 0 view .LVU4702
 13374 46e0 C4C2F9F7 		shlx	rdx, r13, rax	# tmp922, tmp1041, index2
 13374      D5
 13375              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13376              		.loc 1 352 24 view .LVU4703
 13377 46e5 4C01D0   		add	rax, r10	# index2, step
 13378              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13379              		.loc 1 351 22 view .LVU4704
 13380 46e8 4809D7   		or	rdi, rdx	# mask, tmp922
 13381              	.LVL924:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13382              		.loc 1 352 17 is_stmt 1 view .LVU4705
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13383              		.loc 1 353 17 view .LVU4706
GAS LISTING /tmp/ccW0oq2B.s 			page 361


 13384              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13385              		.loc 1 353 29 is_stmt 0 view .LVU4707
 13386 46eb 4889C2   		mov	rdx, rax	# index2_word, index2
 13387 46ee 48C1EA06 		shr	rdx, 6	# index2_word,
 13388              	.LVL925:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13389              		.loc 1 354 21 is_stmt 1 view .LVU4708
 13390              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13391              		.loc 1 354 13 is_stmt 0 view .LVU4709
 13392 46f2 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13393 46f5 0F85AD00 		jne	.L1362	#,
 13393      0000
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13394              		.loc 1 350 13 is_stmt 1 view .LVU4710
 351:sieve_extend.c ****                 index2 += step2;
 13395              		.loc 1 351 17 view .LVU4711
 13396              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13397              		.loc 1 351 25 is_stmt 0 view .LVU4712
 13398 46fb C4C2F9F7 		shlx	rdx, r13, rax	# tmp1321, tmp1041, index2
 13398      D5
 13399              	.LVL926:
 13400              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13401              		.loc 1 352 24 view .LVU4713
 13402 4700 4C01D0   		add	rax, r10	# index2, step
 13403              	.LVL927:
 13404              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13405              		.loc 1 351 22 view .LVU4714
 13406 4703 4809D7   		or	rdi, rdx	# mask, tmp1321
 13407              	.LVL928:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13408              		.loc 1 352 17 is_stmt 1 view .LVU4715
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13409              		.loc 1 353 17 view .LVU4716
 13410              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13411              		.loc 1 353 29 is_stmt 0 view .LVU4717
 13412 4706 4889C2   		mov	rdx, rax	# index2_word, index2
 13413 4709 48C1EA06 		shr	rdx, 6	# index2_word,
 13414              	.LVL929:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13415              		.loc 1 354 21 is_stmt 1 view .LVU4718
 13416              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13417              		.loc 1 354 13 is_stmt 0 view .LVU4719
 13418 470d 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13419 4710 0F859200 		jne	.L1362	#,
 13419      0000
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13420              		.loc 1 350 13 is_stmt 1 view .LVU4720
 351:sieve_extend.c ****                 index2 += step2;
 13421              		.loc 1 351 17 view .LVU4721
 13422              	# sieve_extend.c:351:                 mask |= markmask(index2);
GAS LISTING /tmp/ccW0oq2B.s 			page 362


 351:sieve_extend.c ****                 index2 += step2;
 13423              		.loc 1 351 25 is_stmt 0 view .LVU4722
 13424 4716 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1322, tmp1041, index2
 13424      D5
 13425              	.LVL930:
 13426              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13427              		.loc 1 352 24 view .LVU4723
 13428 471b 4C01D0   		add	rax, r10	# index2, step
 13429              	.LVL931:
 13430              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13431              		.loc 1 351 22 view .LVU4724
 13432 471e 4809D7   		or	rdi, rdx	# mask, tmp1322
 13433              	.LVL932:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13434              		.loc 1 352 17 is_stmt 1 view .LVU4725
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13435              		.loc 1 353 17 view .LVU4726
 13436              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13437              		.loc 1 353 29 is_stmt 0 view .LVU4727
 13438 4721 4889C2   		mov	rdx, rax	# index2_word, index2
 13439 4724 48C1EA06 		shr	rdx, 6	# index2_word,
 13440              	.LVL933:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13441              		.loc 1 354 21 is_stmt 1 view .LVU4728
 13442              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13443              		.loc 1 354 13 is_stmt 0 view .LVU4729
 13444 4728 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13445 472b 757B     		jne	.L1362	#,
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13446              		.loc 1 350 13 is_stmt 1 view .LVU4730
 351:sieve_extend.c ****                 index2 += step2;
 13447              		.loc 1 351 17 view .LVU4731
 13448              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13449              		.loc 1 351 25 is_stmt 0 view .LVU4732
 13450 472d C4C2F9F7 		shlx	rdx, r13, rax	# tmp1323, tmp1041, index2
 13450      D5
 13451              	.LVL934:
 13452              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13453              		.loc 1 352 24 view .LVU4733
 13454 4732 4C01D0   		add	rax, r10	# index2, step
 13455              	.LVL935:
 13456              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13457              		.loc 1 351 22 view .LVU4734
 13458 4735 4809D7   		or	rdi, rdx	# mask, tmp1323
 13459              	.LVL936:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13460              		.loc 1 352 17 is_stmt 1 view .LVU4735
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13461              		.loc 1 353 17 view .LVU4736
 13462              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
GAS LISTING /tmp/ccW0oq2B.s 			page 363


 353:sieve_extend.c ****             } while (index2_word == index_word);
 13463              		.loc 1 353 29 is_stmt 0 view .LVU4737
 13464 4738 4889C2   		mov	rdx, rax	# index2_word, index2
 13465 473b 48C1EA06 		shr	rdx, 6	# index2_word,
 13466              	.LVL937:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13467              		.loc 1 354 21 is_stmt 1 view .LVU4738
 13468              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13469              		.loc 1 354 13 is_stmt 0 view .LVU4739
 13470 473f 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13471 4742 7564     		jne	.L1362	#,
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13472              		.loc 1 350 13 is_stmt 1 view .LVU4740
 351:sieve_extend.c ****                 index2 += step2;
 13473              		.loc 1 351 17 view .LVU4741
 13474              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13475              		.loc 1 351 25 is_stmt 0 view .LVU4742
 13476 4744 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1324, tmp1041, index2
 13476      D5
 13477              	.LVL938:
 13478              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13479              		.loc 1 352 24 view .LVU4743
 13480 4749 4C01D0   		add	rax, r10	# index2, step
 13481              	.LVL939:
 13482              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13483              		.loc 1 351 22 view .LVU4744
 13484 474c 4809D7   		or	rdi, rdx	# mask, tmp1324
 13485              	.LVL940:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13486              		.loc 1 352 17 is_stmt 1 view .LVU4745
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13487              		.loc 1 353 17 view .LVU4746
 13488              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13489              		.loc 1 353 29 is_stmt 0 view .LVU4747
 13490 474f 4889C2   		mov	rdx, rax	# index2_word, index2
 13491 4752 48C1EA06 		shr	rdx, 6	# index2_word,
 13492              	.LVL941:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13493              		.loc 1 354 21 is_stmt 1 view .LVU4748
 13494              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13495              		.loc 1 354 13 is_stmt 0 view .LVU4749
 13496 4756 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13497 4759 754D     		jne	.L1362	#,
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13498              		.loc 1 350 13 is_stmt 1 view .LVU4750
 351:sieve_extend.c ****                 index2 += step2;
 13499              		.loc 1 351 17 view .LVU4751
 13500              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13501              		.loc 1 351 25 is_stmt 0 view .LVU4752
 13502 475b C4C2F9F7 		shlx	rdx, r13, rax	# tmp1325, tmp1041, index2
GAS LISTING /tmp/ccW0oq2B.s 			page 364


 13502      D5
 13503              	.LVL942:
 13504              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13505              		.loc 1 352 24 view .LVU4753
 13506 4760 4C01D0   		add	rax, r10	# index2, step
 13507              	.LVL943:
 13508              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13509              		.loc 1 351 22 view .LVU4754
 13510 4763 4809D7   		or	rdi, rdx	# mask, tmp1325
 13511              	.LVL944:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13512              		.loc 1 352 17 is_stmt 1 view .LVU4755
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13513              		.loc 1 353 17 view .LVU4756
 13514              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13515              		.loc 1 353 29 is_stmt 0 view .LVU4757
 13516 4766 4889C2   		mov	rdx, rax	# index2_word, index2
 13517 4769 48C1EA06 		shr	rdx, 6	# index2_word,
 13518              	.LVL945:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13519              		.loc 1 354 21 is_stmt 1 view .LVU4758
 13520              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13521              		.loc 1 354 13 is_stmt 0 view .LVU4759
 13522 476d 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13523 4770 7536     		jne	.L1362	#,
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13524              		.loc 1 350 13 is_stmt 1 view .LVU4760
 351:sieve_extend.c ****                 index2 += step2;
 13525              		.loc 1 351 17 view .LVU4761
 13526              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13527              		.loc 1 351 25 is_stmt 0 view .LVU4762
 13528 4772 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1326, tmp1041, index2
 13528      D5
 13529              	.LVL946:
 13530              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13531              		.loc 1 352 24 view .LVU4763
 13532 4777 4C01D0   		add	rax, r10	# index2, step
 13533              	.LVL947:
 13534              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13535              		.loc 1 351 22 view .LVU4764
 13536 477a 4809D7   		or	rdi, rdx	# mask, tmp1326
 13537              	.LVL948:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13538              		.loc 1 352 17 is_stmt 1 view .LVU4765
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13539              		.loc 1 353 17 view .LVU4766
 13540              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13541              		.loc 1 353 29 is_stmt 0 view .LVU4767
 13542 477d 4889C2   		mov	rdx, rax	# index2_word, index2
GAS LISTING /tmp/ccW0oq2B.s 			page 365


 13543 4780 48C1EA06 		shr	rdx, 6	# index2_word,
 13544              	.LVL949:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13545              		.loc 1 354 21 is_stmt 1 view .LVU4768
 13546              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13547              		.loc 1 354 13 is_stmt 0 view .LVU4769
 13548 4784 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13549 4787 751F     		jne	.L1362	#,
 350:sieve_extend.c ****                 mask |= markmask(index2);
 13550              		.loc 1 350 13 is_stmt 1 view .LVU4770
 351:sieve_extend.c ****                 index2 += step2;
 13551              		.loc 1 351 17 view .LVU4771
 13552              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13553              		.loc 1 351 25 is_stmt 0 view .LVU4772
 13554 4789 C4C2F9F7 		shlx	rdx, r13, rax	# tmp1327, tmp1041, index2
 13554      D5
 13555              	.LVL950:
 13556              	# sieve_extend.c:352:                 index2 += step2;
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13557              		.loc 1 352 24 view .LVU4773
 13558 478e 4C01D0   		add	rax, r10	# index2, step
 13559              	.LVL951:
 13560              	# sieve_extend.c:351:                 mask |= markmask(index2);
 351:sieve_extend.c ****                 index2 += step2;
 13561              		.loc 1 351 22 view .LVU4774
 13562 4791 4809D7   		or	rdi, rdx	# mask, tmp1327
 13563              	.LVL952:
 352:sieve_extend.c ****                 index2_word = wordindex(index2);
 13564              		.loc 1 352 17 is_stmt 1 view .LVU4775
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13565              		.loc 1 353 17 view .LVU4776
 13566              	# sieve_extend.c:353:                 index2_word = wordindex(index2);
 353:sieve_extend.c ****             } while (index2_word == index_word);
 13567              		.loc 1 353 29 is_stmt 0 view .LVU4777
 13568 4794 4889C2   		mov	rdx, rax	# index2_word, index2
 13569 4797 48C1EA06 		shr	rdx, 6	# index2_word,
 13570              	.LVL953:
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13571              		.loc 1 354 21 is_stmt 1 view .LVU4778
 13572              	# sieve_extend.c:354:             } while (index2_word == index_word);
 354:sieve_extend.c ****             bitarray[index_word] |= mask;
 13573              		.loc 1 354 13 is_stmt 0 view .LVU4779
 13574 479b 4939D6   		cmp	r14, rdx	# index1_word, index2_word
 13575 479e 0F843CFF 		je	.L768	#,
 13575      FFFF
 13576              		.p2align 4,,10
 13577 47a4 0F1F4000 		.p2align 3
 13578              	.L1362:
 355:sieve_extend.c ****         }
 13579              		.loc 1 355 13 is_stmt 1 view .LVU4780
 13580              	# sieve_extend.c:355:             bitarray[index_word] |= mask;
 355:sieve_extend.c ****         }
 13581              		.loc 1 355 34 is_stmt 0 view .LVU4781
 13582 47a8 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_677, mask
 13583              	# sieve_extend.c:348:                 index1_word = wordindex(index1);
GAS LISTING /tmp/ccW0oq2B.s 			page 366


 348:sieve_extend.c ****             } while (index1_word == index_word);
 13584              		.loc 1 348 29 view .LVU4782
 13585 47ac 4989DE   		mov	r14, rbx	# index1_word, index1_word
 13586              	.LVL954:
 348:sieve_extend.c ****             } while (index1_word == index_word);
 13587              		.loc 1 348 29 view .LVU4783
 13588              	.LBE592:
 359:sieve_extend.c ****             while (index1 <= range_stop) {
 13589              		.loc 1 359 9 is_stmt 1 view .LVU4784
 13590              	# sieve_extend.c:359:         if (index2 > range_stop) {
 359:sieve_extend.c ****             while (index1 <= range_stop) {
 13591              		.loc 1 359 12 is_stmt 0 view .LVU4785
 13592 47af 4939C7   		cmp	r15, rax	# block_stop, index2
 13593 47b2 0F838AFC 		jnb	.L769	#,
 13593      FFFF
 13594              	.LVL955:
 13595 47b8 0F1F8400 		.p2align 4,,10
 13595      00000000 
 13596              		.p2align 3
 13597              	.L1590:
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13598              		.loc 1 360 19 is_stmt 1 view .LVU4786
 13599 47c0 4939CF   		cmp	r15, rcx	# block_stop, index
 13600 47c3 0F82CF00 		jb	.L1569	#,
 13600      0000
 13601              	.LVL956:
 13602              	.L771:
 361:sieve_extend.c ****                 index1 += step1;
 13603              		.loc 1 361 17 view .LVU4787
 13604              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13605              		.loc 1 361 45 is_stmt 0 view .LVU4788
 13606 47c9 4889C8   		mov	rax, rcx	# tmp925, index
 13607              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13608              		.loc 1 361 48 view .LVU4789
 13609 47cc C442F1F7 		shlx	r10, r13, rcx	# tmp928, tmp1041, index
 13609      D5
 13610              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13611              		.loc 1 361 45 view .LVU4790
 13612 47d1 48C1E806 		shr	rax, 6	# tmp925,
 13613              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13614              		.loc 1 362 24 view .LVU4791
 13615 47d5 4C01C9   		add	rcx, r9	# index, step
 13616              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13617              		.loc 1 361 45 view .LVU4792
 13618 47d8 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp928
 362:sieve_extend.c ****             }
 13619              		.loc 1 362 17 is_stmt 1 view .LVU4793
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13620              		.loc 1 360 19 view .LVU4794
 13621 47dc 4939CF   		cmp	r15, rcx	# block_stop, index
 13622 47df 0F82B300 		jb	.L1569	#,
 13622      0000
GAS LISTING /tmp/ccW0oq2B.s 			page 367


 361:sieve_extend.c ****                 index1 += step1;
 13623              		.loc 1 361 17 view .LVU4795
 13624              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13625              		.loc 1 361 45 is_stmt 0 view .LVU4796
 13626 47e5 4889CF   		mov	rdi, rcx	# tmp1211, index
 13627              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13628              		.loc 1 361 48 view .LVU4797
 13629 47e8 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1214, tmp1041, index
 13629      DD
 13630              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13631              		.loc 1 361 45 view .LVU4798
 13632 47ed 48C1EF06 		shr	rdi, 6	# tmp1211,
 13633              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13634              		.loc 1 362 24 view .LVU4799
 13635 47f1 4C01C9   		add	rcx, r9	# index, step
 13636              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13637              		.loc 1 361 45 view .LVU4800
 13638 47f4 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1214
 362:sieve_extend.c ****             }
 13639              		.loc 1 362 17 is_stmt 1 view .LVU4801
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13640              		.loc 1 360 19 view .LVU4802
 13641 47f8 4939CF   		cmp	r15, rcx	# block_stop, index
 13642 47fb 0F829700 		jb	.L1569	#,
 13642      0000
 361:sieve_extend.c ****                 index1 += step1;
 13643              		.loc 1 361 17 view .LVU4803
 13644              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13645              		.loc 1 361 45 is_stmt 0 view .LVU4804
 13646 4801 4989CE   		mov	r14, rcx	# tmp1216, index
 13647              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13648              		.loc 1 361 48 view .LVU4805
 13649 4804 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1219, tmp1041, index
 13649      D5
 13650              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13651              		.loc 1 361 45 view .LVU4806
 13652 4809 49C1EE06 		shr	r14, 6	# tmp1216,
 13653              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13654              		.loc 1 362 24 view .LVU4807
 13655 480d 4C01C9   		add	rcx, r9	# index, step
 13656              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13657              		.loc 1 361 45 view .LVU4808
 13658 4810 4B0914F4 		or	QWORD PTR [r12+r14*8], rdx	# *_685, tmp1219
 362:sieve_extend.c ****             }
 13659              		.loc 1 362 17 is_stmt 1 view .LVU4809
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13660              		.loc 1 360 19 view .LVU4810
GAS LISTING /tmp/ccW0oq2B.s 			page 368


 13661 4814 4939CF   		cmp	r15, rcx	# block_stop, index
 13662 4817 727F     		jb	.L1569	#,
 361:sieve_extend.c ****                 index1 += step1;
 13663              		.loc 1 361 17 view .LVU4811
 13664              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13665              		.loc 1 361 45 is_stmt 0 view .LVU4812
 13666 4819 4889C8   		mov	rax, rcx	# tmp1221, index
 13667              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13668              		.loc 1 361 48 view .LVU4813
 13669 481c C442F1F7 		shlx	r10, r13, rcx	# tmp1224, tmp1041, index
 13669      D5
 13670              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13671              		.loc 1 361 45 view .LVU4814
 13672 4821 48C1E806 		shr	rax, 6	# tmp1221,
 13673              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13674              		.loc 1 362 24 view .LVU4815
 13675 4825 4C01C9   		add	rcx, r9	# index, step
 13676              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13677              		.loc 1 361 45 view .LVU4816
 13678 4828 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp1224
 362:sieve_extend.c ****             }
 13679              		.loc 1 362 17 is_stmt 1 view .LVU4817
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13680              		.loc 1 360 19 view .LVU4818
 13681 482c 4939CF   		cmp	r15, rcx	# block_stop, index
 13682 482f 7267     		jb	.L1569	#,
 361:sieve_extend.c ****                 index1 += step1;
 13683              		.loc 1 361 17 view .LVU4819
 13684              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13685              		.loc 1 361 45 is_stmt 0 view .LVU4820
 13686 4831 4889CF   		mov	rdi, rcx	# tmp1226, index
 13687              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13688              		.loc 1 361 48 view .LVU4821
 13689 4834 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1229, tmp1041, index
 13689      DD
 13690              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13691              		.loc 1 361 45 view .LVU4822
 13692 4839 48C1EF06 		shr	rdi, 6	# tmp1226,
 13693              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13694              		.loc 1 362 24 view .LVU4823
 13695 483d 4C01C9   		add	rcx, r9	# index, step
 13696              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13697              		.loc 1 361 45 view .LVU4824
 13698 4840 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1229
 362:sieve_extend.c ****             }
 13699              		.loc 1 362 17 is_stmt 1 view .LVU4825
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
GAS LISTING /tmp/ccW0oq2B.s 			page 369


 13700              		.loc 1 360 19 view .LVU4826
 13701 4844 4939CF   		cmp	r15, rcx	# block_stop, index
 13702 4847 724F     		jb	.L1569	#,
 361:sieve_extend.c ****                 index1 += step1;
 13703              		.loc 1 361 17 view .LVU4827
 13704              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13705              		.loc 1 361 45 is_stmt 0 view .LVU4828
 13706 4849 4989CE   		mov	r14, rcx	# tmp1231, index
 13707              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13708              		.loc 1 361 48 view .LVU4829
 13709 484c C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1234, tmp1041, index
 13709      D5
 13710              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13711              		.loc 1 361 45 view .LVU4830
 13712 4851 49C1EE06 		shr	r14, 6	# tmp1231,
 13713              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13714              		.loc 1 362 24 view .LVU4831
 13715 4855 4C01C9   		add	rcx, r9	# index, step
 13716              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13717              		.loc 1 361 45 view .LVU4832
 13718 4858 4B0914F4 		or	QWORD PTR [r12+r14*8], rdx	# *_685, tmp1234
 362:sieve_extend.c ****             }
 13719              		.loc 1 362 17 is_stmt 1 view .LVU4833
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13720              		.loc 1 360 19 view .LVU4834
 13721 485c 4939CF   		cmp	r15, rcx	# block_stop, index
 13722 485f 7237     		jb	.L1569	#,
 361:sieve_extend.c ****                 index1 += step1;
 13723              		.loc 1 361 17 view .LVU4835
 13724              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13725              		.loc 1 361 45 is_stmt 0 view .LVU4836
 13726 4861 4889C8   		mov	rax, rcx	# tmp1236, index
 13727              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13728              		.loc 1 361 48 view .LVU4837
 13729 4864 C442F1F7 		shlx	r10, r13, rcx	# tmp1239, tmp1041, index
 13729      D5
 13730              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13731              		.loc 1 361 45 view .LVU4838
 13732 4869 48C1E806 		shr	rax, 6	# tmp1236,
 13733              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13734              		.loc 1 362 24 view .LVU4839
 13735 486d 4C01C9   		add	rcx, r9	# index, step
 13736              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13737              		.loc 1 361 45 view .LVU4840
 13738 4870 4D0914C4 		or	QWORD PTR [r12+rax*8], r10	# *_685, tmp1239
 362:sieve_extend.c ****             }
 13739              		.loc 1 362 17 is_stmt 1 view .LVU4841
GAS LISTING /tmp/ccW0oq2B.s 			page 370


 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13740              		.loc 1 360 19 view .LVU4842
 13741 4874 4939CF   		cmp	r15, rcx	# block_stop, index
 13742 4877 721F     		jb	.L1569	#,
 361:sieve_extend.c ****                 index1 += step1;
 13743              		.loc 1 361 17 view .LVU4843
 13744              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13745              		.loc 1 361 45 is_stmt 0 view .LVU4844
 13746 4879 4889CF   		mov	rdi, rcx	# tmp1241, index
 13747              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13748              		.loc 1 361 48 view .LVU4845
 13749 487c C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1244, tmp1041, index
 13749      DD
 13750              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13751              		.loc 1 361 45 view .LVU4846
 13752 4881 48C1EF06 		shr	rdi, 6	# tmp1241,
 13753              	# sieve_extend.c:362:                 index1 += step1;
 362:sieve_extend.c ****             }
 13754              		.loc 1 362 24 view .LVU4847
 13755 4885 4C01C9   		add	rcx, r9	# index, step
 13756              	# sieve_extend.c:361:                 bitarray[wordindex(index1)] |= markmask(index1);
 361:sieve_extend.c ****                 index1 += step1;
 13757              		.loc 1 361 45 view .LVU4848
 13758 4888 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_685, tmp1244
 362:sieve_extend.c ****             }
 13759              		.loc 1 362 17 is_stmt 1 view .LVU4849
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13760              		.loc 1 360 19 view .LVU4850
 13761 488c 4939CF   		cmp	r15, rcx	# block_stop, index
 13762 488f 0F8334FF 		jnb	.L771	#,
 13762      FFFF
 13763              	.LVL957:
 13764              		.p2align 4,,10
 13765 4895 0F1F00   		.p2align 3
 13766              	.L1569:
 360:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 13767              		.loc 1 360 19 is_stmt 0 view .LVU4851
 13768              	.LBE593:
 13769              	.LBE595:
 13770              	.LBB596:
 13771              	.LBB597:
 124:sieve_extend.c ****     return index;
 13772              		.loc 1 124 11 is_stmt 1 view .LVU4852
 13773              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13774              		.loc 1 124 21 is_stmt 0 view .LVU4853
 13775 4898 4989F1   		mov	r9, rsi	# tmp1207, prime
 13776 489b 49C1E906 		shr	r9, 6	# tmp1207,
 13777              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13778              		.loc 1 124 12 view .LVU4854
 13779 489f 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_459,* pretmp_1655
 13780              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW0oq2B.s 			page 371


 13781              		.loc 1 124 11 view .LVU4855
 13782 48a3 480FA3F1 		bt	rcx, rsi	# *_459, prime
 13783 48a7 0F832B05 		jnc	.L765	#,
 13783      0000
 124:sieve_extend.c ****     return index;
 13784              		.loc 1 124 58 is_stmt 1 view .LVU4856
 13785              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13786              		.loc 1 124 63 is_stmt 0 view .LVU4857
 13787 48ad 4C8D7601 		lea	r14, 1[rsi]	# tmp1049,
 13788              	.LVL958:
 13789              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13790              		.loc 1 124 21 view .LVU4858
 13791 48b1 4C89F2   		mov	rdx, r14	# tmp948, prime
 13792 48b4 48C1EA06 		shr	rdx, 6	# tmp948,
 13793              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13794              		.loc 1 124 12 view .LVU4859
 13795 48b8 498B04D4 		mov	rax, QWORD PTR [r12+rdx*8]	# *_459, *_459
 13796              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13797              		.loc 1 124 63 view .LVU4860
 13798 48bc 4C89F6   		mov	rsi, r14	# prime, tmp1049
 124:sieve_extend.c ****     return index;
 13799              		.loc 1 124 11 is_stmt 1 view .LVU4861
 13800 48bf 4C0FA3F0 		bt	rax, r14	# *_459, prime
 13801 48c3 0F830F05 		jnc	.L765	#,
 13801      0000
 124:sieve_extend.c ****     return index;
 13802              		.loc 1 124 58 view .LVU4862
 13803              	.LVL959:
 13804              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13805              		.loc 1 124 63 is_stmt 0 view .LVU4863
 13806 48c9 48FFC6   		inc	rsi	# prime
 13807              	.LVL960:
 124:sieve_extend.c ****     return index;
 13808              		.loc 1 124 11 is_stmt 1 view .LVU4864
 13809              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13810              		.loc 1 124 21 is_stmt 0 view .LVU4865
 13811 48cc 4989F2   		mov	r10, rsi	# tmp1183, prime
 13812 48cf 49C1EA06 		shr	r10, 6	# tmp1183,
 13813              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13814              		.loc 1 124 12 view .LVU4866
 13815 48d3 4B8B3CD4 		mov	rdi, QWORD PTR [r12+r10*8]	# *_459, *_459
 13816              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13817              		.loc 1 124 11 view .LVU4867
 13818 48d7 480FA3F7 		bt	rdi, rsi	# *_459, prime
 13819 48db 0F83F704 		jnc	.L765	#,
 13819      0000
 124:sieve_extend.c ****     return index;
 13820              		.loc 1 124 58 is_stmt 1 view .LVU4868
 13821              	.LVL961:
GAS LISTING /tmp/ccW0oq2B.s 			page 372


 13822              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13823              		.loc 1 124 63 is_stmt 0 view .LVU4869
 13824 48e1 498D7602 		lea	rsi, 2[r14]	# prime,
 13825              	.LVL962:
 124:sieve_extend.c ****     return index;
 13826              		.loc 1 124 11 is_stmt 1 view .LVU4870
 13827              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13828              		.loc 1 124 21 is_stmt 0 view .LVU4871
 13829 48e5 4889F3   		mov	rbx, rsi	# tmp1187, prime
 13830 48e8 48C1EB06 		shr	rbx, 6	# tmp1187,
 13831              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13832              		.loc 1 124 12 view .LVU4872
 13833 48ec 4D8B0CDC 		mov	r9, QWORD PTR [r12+rbx*8]	# *_459, *_459
 13834              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13835              		.loc 1 124 11 view .LVU4873
 13836 48f0 490FA3F1 		bt	r9, rsi	# *_459, prime
 13837 48f4 0F83DE04 		jnc	.L765	#,
 13837      0000
 124:sieve_extend.c ****     return index;
 13838              		.loc 1 124 58 is_stmt 1 view .LVU4874
 13839              	.LVL963:
 13840              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13841              		.loc 1 124 63 is_stmt 0 view .LVU4875
 13842 48fa 498D7603 		lea	rsi, 3[r14]	# prime,
 13843              	.LVL964:
 124:sieve_extend.c ****     return index;
 13844              		.loc 1 124 11 is_stmt 1 view .LVU4876
 13845              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13846              		.loc 1 124 21 is_stmt 0 view .LVU4877
 13847 48fe 4889F1   		mov	rcx, rsi	# tmp1191, prime
 13848 4901 48C1E906 		shr	rcx, 6	# tmp1191,
 13849              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13850              		.loc 1 124 12 view .LVU4878
 13851 4905 498B14CC 		mov	rdx, QWORD PTR [r12+rcx*8]	# *_459, *_459
 13852              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13853              		.loc 1 124 11 view .LVU4879
 13854 4909 480FA3F2 		bt	rdx, rsi	# *_459, prime
 13855 490d 0F83C504 		jnc	.L765	#,
 13855      0000
 124:sieve_extend.c ****     return index;
 13856              		.loc 1 124 58 is_stmt 1 view .LVU4880
 13857              	.LVL965:
 13858              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13859              		.loc 1 124 63 is_stmt 0 view .LVU4881
 13860 4913 498D7604 		lea	rsi, 4[r14]	# prime,
 13861              	.LVL966:
 124:sieve_extend.c ****     return index;
 13862              		.loc 1 124 11 is_stmt 1 view .LVU4882
GAS LISTING /tmp/ccW0oq2B.s 			page 373


 13863              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13864              		.loc 1 124 21 is_stmt 0 view .LVU4883
 13865 4917 4889F0   		mov	rax, rsi	# tmp1195, prime
 13866 491a 48C1E806 		shr	rax, 6	# tmp1195,
 13867              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13868              		.loc 1 124 12 view .LVU4884
 13869 491e 4D8B14C4 		mov	r10, QWORD PTR [r12+rax*8]	# *_459, *_459
 13870              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13871              		.loc 1 124 11 view .LVU4885
 13872 4922 490FA3F2 		bt	r10, rsi	# *_459, prime
 13873 4926 0F83AC04 		jnc	.L765	#,
 13873      0000
 124:sieve_extend.c ****     return index;
 13874              		.loc 1 124 58 is_stmt 1 view .LVU4886
 13875              	.LVL967:
 13876              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13877              		.loc 1 124 63 is_stmt 0 view .LVU4887
 13878 492c 498D7605 		lea	rsi, 5[r14]	# prime,
 13879              	.LVL968:
 124:sieve_extend.c ****     return index;
 13880              		.loc 1 124 11 is_stmt 1 view .LVU4888
 13881              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13882              		.loc 1 124 21 is_stmt 0 view .LVU4889
 13883 4930 4889F7   		mov	rdi, rsi	# tmp1199, prime
 13884 4933 48C1EF06 		shr	rdi, 6	# tmp1199,
 13885              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13886              		.loc 1 124 12 view .LVU4890
 13887 4937 498B1CFC 		mov	rbx, QWORD PTR [r12+rdi*8]	# *_459, *_459
 13888              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13889              		.loc 1 124 11 view .LVU4891
 13890 493b 480FA3F3 		bt	rbx, rsi	# *_459, prime
 13891 493f 0F839304 		jnc	.L765	#,
 13891      0000
 124:sieve_extend.c ****     return index;
 13892              		.loc 1 124 58 is_stmt 1 view .LVU4892
 13893              	.LVL969:
 13894              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13895              		.loc 1 124 63 is_stmt 0 view .LVU4893
 13896 4945 498D7606 		lea	rsi, 6[r14]	# prime,
 13897              	.LVL970:
 124:sieve_extend.c ****     return index;
 13898              		.loc 1 124 11 is_stmt 1 view .LVU4894
 13899              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13900              		.loc 1 124 21 is_stmt 0 view .LVU4895
 13901 4949 4989F1   		mov	r9, rsi	# tmp1203, prime
 13902 494c 49C1E906 		shr	r9, 6	# tmp1203,
 13903              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW0oq2B.s 			page 374


 13904              		.loc 1 124 12 view .LVU4896
 13905 4950 4B8B0CCC 		mov	rcx, QWORD PTR [r12+r9*8]	# *_459, *_459
 13906              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13907              		.loc 1 124 11 view .LVU4897
 13908 4954 480FA3F1 		bt	rcx, rsi	# *_459, prime
 13909 4958 0F837A04 		jnc	.L765	#,
 13909      0000
 124:sieve_extend.c ****     return index;
 13910              		.loc 1 124 58 is_stmt 1 view .LVU4898
 13911              	.LVL971:
 13912              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13913              		.loc 1 124 63 is_stmt 0 view .LVU4899
 13914 495e 498D7607 		lea	rsi, 7[r14]	# prime,
 13915              	.LVL972:
 124:sieve_extend.c ****     return index;
 13916              		.loc 1 124 63 view .LVU4900
 13917 4962 E931FFFF 		jmp	.L1569	#
 13917      FF
 13918              	.LVL973:
 13919 4967 660F1F84 		.p2align 4,,10
 13919      00000000 
 13919      00
 13920              		.p2align 3
 13921              	.L787:
 124:sieve_extend.c ****     return index;
 13922              		.loc 1 124 63 view .LVU4901
 13923              	.LBE597:
 13924              	.LBE596:
 13925              	.LBB599:
 13926              	.LBB600:
 13927              	.LBB601:
 13928              	.LBB602:
 13929              	.LBB603:
 13930              	.LBB604:
 205:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13931              		.loc 1 205 4 is_stmt 1 view .LVU4902
 206:sieve_extend.c ****        *index_ptr |= mask;
 13932              		.loc 1 206 4 view .LVU4903
 206:sieve_extend.c ****        *index_ptr |= mask;
 13933              		.loc 1 206 10 view .LVU4904
 13934 4970 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13935 4973 765B     		jbe	.L789	#,
 13936              	.L790:
 207:sieve_extend.c ****        index_ptr+=step;
 13937              		.loc 1 207 8 view .LVU4905
 13938              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13939              		.loc 1 207 19 is_stmt 0 view .LVU4906
 13940 4975 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 13941              		.loc 1 208 8 is_stmt 1 view .LVU4907
 13942              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13943              		.loc 1 208 17 is_stmt 0 view .LVU4908
 13944 4978 4801D0   		add	rax, rdx	# index_ptr, _775
GAS LISTING /tmp/ccW0oq2B.s 			page 375


 13945              	.LVL974:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13946              		.loc 1 206 10 is_stmt 1 view .LVU4909
 13947 497b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13948 497e 7650     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13949              		.loc 1 207 8 view .LVU4910
 13950              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13951              		.loc 1 207 19 is_stmt 0 view .LVU4911
 13952 4980 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 13953              		.loc 1 208 8 is_stmt 1 view .LVU4912
 13954              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13955              		.loc 1 208 17 is_stmt 0 view .LVU4913
 13956 4983 4801D0   		add	rax, rdx	# index_ptr, _775
 13957              	.LVL975:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13958              		.loc 1 206 10 is_stmt 1 view .LVU4914
 13959 4986 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13960 4989 7645     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13961              		.loc 1 207 8 view .LVU4915
 13962              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13963              		.loc 1 207 19 is_stmt 0 view .LVU4916
 13964 498b 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 13965              		.loc 1 208 8 is_stmt 1 view .LVU4917
 13966              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13967              		.loc 1 208 17 is_stmt 0 view .LVU4918
 13968 498e 4801D0   		add	rax, rdx	# index_ptr, _775
 13969              	.LVL976:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13970              		.loc 1 206 10 is_stmt 1 view .LVU4919
 13971 4991 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13972 4994 763A     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13973              		.loc 1 207 8 view .LVU4920
 13974              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13975              		.loc 1 207 19 is_stmt 0 view .LVU4921
 13976 4996 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 13977              		.loc 1 208 8 is_stmt 1 view .LVU4922
 13978              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13979              		.loc 1 208 17 is_stmt 0 view .LVU4923
 13980 4999 4801D0   		add	rax, rdx	# index_ptr, _775
 13981              	.LVL977:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13982              		.loc 1 206 10 is_stmt 1 view .LVU4924
 13983 499c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13984 499f 762F     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW0oq2B.s 			page 376


 13985              		.loc 1 207 8 view .LVU4925
 13986              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13987              		.loc 1 207 19 is_stmt 0 view .LVU4926
 13988 49a1 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 13989              		.loc 1 208 8 is_stmt 1 view .LVU4927
 13990              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 13991              		.loc 1 208 17 is_stmt 0 view .LVU4928
 13992 49a4 4801D0   		add	rax, rdx	# index_ptr, _775
 13993              	.LVL978:
 206:sieve_extend.c ****        *index_ptr |= mask;
 13994              		.loc 1 206 10 is_stmt 1 view .LVU4929
 13995 49a7 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 13996 49aa 7624     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 13997              		.loc 1 207 8 view .LVU4930
 13998              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 13999              		.loc 1 207 19 is_stmt 0 view .LVU4931
 14000 49ac 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 14001              		.loc 1 208 8 is_stmt 1 view .LVU4932
 14002              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 14003              		.loc 1 208 17 is_stmt 0 view .LVU4933
 14004 49af 4801D0   		add	rax, rdx	# index_ptr, _775
 14005              	.LVL979:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14006              		.loc 1 206 10 is_stmt 1 view .LVU4934
 14007 49b2 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14008 49b5 7619     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 14009              		.loc 1 207 8 view .LVU4935
 14010              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 14011              		.loc 1 207 19 is_stmt 0 view .LVU4936
 14012 49b7 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
 14013              		.loc 1 208 8 is_stmt 1 view .LVU4937
 14014              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 14015              		.loc 1 208 17 is_stmt 0 view .LVU4938
 14016 49ba 4801D0   		add	rax, rdx	# index_ptr, _775
 14017              	.LVL980:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14018              		.loc 1 206 10 is_stmt 1 view .LVU4939
 14019 49bd 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14020 49c0 760E     		jbe	.L789	#,
 207:sieve_extend.c ****        index_ptr+=step;
 14021              		.loc 1 207 8 view .LVU4940
 14022              	# sieve_extend.c:207:        *index_ptr |= mask;
 207:sieve_extend.c ****        index_ptr+=step;
 14023              		.loc 1 207 19 is_stmt 0 view .LVU4941
 14024 49c2 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1114, offset: 0B], mask
 208:sieve_extend.c ****    }
GAS LISTING /tmp/ccW0oq2B.s 			page 377


 14025              		.loc 1 208 8 is_stmt 1 view .LVU4942
 14026              	# sieve_extend.c:208:        index_ptr+=step;
 208:sieve_extend.c ****    }
 14027              		.loc 1 208 17 is_stmt 0 view .LVU4943
 14028 49c5 4801D0   		add	rax, rdx	# index_ptr, _775
 14029              	.LVL981:
 206:sieve_extend.c ****        *index_ptr |= mask;
 14030              		.loc 1 206 10 is_stmt 1 view .LVU4944
 14031 49c8 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14032 49cb 77A8     		ja	.L790	#,
 14033 49cd 0F1F00   		.p2align 4,,10
 14034              		.p2align 3
 14035              	.L789:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14036              		.loc 1 211 4 view .LVU4945
 14037              	# sieve_extend.c:211:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14038              		.loc 1 211 7 is_stmt 0 view .LVU4946
 14039 49d0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 14040 49d3 0F84EF03 		je	.L1591	#,
 14040      0000
 14041              	.LVL982:
 14042              	.L791:
 211:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14043              		.loc 1 211 7 view .LVU4947
 14044              	.LBE604:
 14045              	.LBE603:
 14046              	.LBE602:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14047              		.loc 1 397 78 is_stmt 1 view .LVU4948
 14048              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14049              		.loc 1 397 84 is_stmt 0 view .LVU4949
 14050 49d9 4C01D9   		add	rcx, r11	# index, step
 14051              	.LVL983:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14052              		.loc 1 397 50 is_stmt 1 view .LVU4950
 14053              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14054              		.loc 1 397 5 is_stmt 0 view .LVU4951
 14055 49dc 4939CE   		cmp	r14, rcx	# tmp960, index
 14056 49df 0F83DB00 		jnb	.L792	#,
 14056      0000
 14057              	.LVL984:
 14058              	.L793:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14059              		.loc 1 397 5 view .LVU4952
 14060              	.LBE601:
 14061              	.LBE600:
 14062              	.LBE599:
 917:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14063              		.loc 1 917 9 is_stmt 1 view .LVU4953
 14064              	.LBB619:
 14065              	.LBI619:
 102:sieve_extend.c ****     // #pragma ivdep
 14066              		.loc 1 102 25 view .LVU4954
 14067              	.LBB620:
GAS LISTING /tmp/ccW0oq2B.s 			page 378


 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14068              		.loc 1 107 4 view .LVU4955
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14069              		.loc 1 108 4 view .LVU4956
 14070              	# sieve_extend.c:107:    register counter_t index_word = wordindex(index);
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14071              		.loc 1 107 23 is_stmt 0 view .LVU4957
 14072 49e5 4D89D6   		mov	r14, r10	# index_word, _491
 14073 49e8 49C1EE06 		shr	r14, 6	# index_word,
 14074              	.LVL985:
 14075              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14076              		.loc 1 109 89 view .LVU4958
 14077 49ec 4F8B0CF4 		mov	r9, QWORD PTR [r12+r14*8]	# *_735, *_735
 14078              	# sieve_extend.c:108:    bitshift_t index_bit  = bitindex_calc(index);
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14079              		.loc 1 108 15 view .LVU4959
 14080 49f0 4D89D3   		mov	r11, r10	# index_bit, _491
 14081              	.LVL986:
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14082              		.loc 1 108 15 view .LVU4960
 14083 49f3 4183E33F 		and	r11d, 63	# index_bit,
 14084              	.LVL987:
 109:sieve_extend.c ****    index += distance;
 14085              		.loc 1 109 4 is_stmt 1 view .LVU4961
 14086              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14087              		.loc 1 109 25 is_stmt 0 view .LVU4962
 14088 49f7 31DB     		xor	ebx, ebx	# distance
 14089              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14090              		.loc 1 109 89 view .LVU4963
 14091 49f9 C4C2A3F7 		shrx	rdx, r9, r11	# tmp963, *_735, index_bit
 14091      D1
 14092              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14093              		.loc 1 109 66 view .LVU4964
 14094 49fe 48F7D2   		not	rdx	# tmp965
 14095              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14096              		.loc 1 109 25 view .LVU4965
 14097 4a01 F3480FBC 		tzcnt	rbx, rdx	# distance, tmp965
 14097      DA
 14098              	.LVL988:
 110:sieve_extend.c ****    distance += index_bit;
 14099              		.loc 1 110 4 is_stmt 1 view .LVU4966
 14100              	# sieve_extend.c:110:    index += distance;
 110:sieve_extend.c ****    distance += index_bit;
 14101              		.loc 1 110 10 is_stmt 0 view .LVU4967
 14102 4a06 498D341A 		lea	rsi, [r10+rbx]	# prime,
 14103              	.LVL989:
 111:sieve_extend.c **** 
 14104              		.loc 1 111 4 is_stmt 1 view .LVU4968
 113:sieve_extend.c ****        index_word++;
 14105              		.loc 1 113 4 view .LVU4969
 113:sieve_extend.c ****        index_word++;
 14106              		.loc 1 113 10 view .LVU4970
GAS LISTING /tmp/ccW0oq2B.s 			page 379


 14107              	# sieve_extend.c:111:    distance += index_bit;
 111:sieve_extend.c **** 
 14108              		.loc 1 111 13 is_stmt 0 view .LVU4971
 14109 4a0a 4C01DB   		add	rbx, r11	# distance, index_bit
 14110              	.LVL990:
 14111              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 14112              		.loc 1 109 76 view .LVU4972
 14113 4a0d 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _734,
 14113      00000000 
 14114              	# sieve_extend.c:113:    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 113:sieve_extend.c ****        index_word++;
 14115              		.loc 1 113 10 view .LVU4973
 14116 4a15 4883FB40 		cmp	rbx, 64	# distance,
 14117 4a19 0F85E305 		jne	.L1592	#,
 14117      0000
 14118              	.LVL991:
 114:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 14119              		.loc 1 114 8 is_stmt 1 view .LVU4974
 115:sieve_extend.c ****        index += distance;
 14120              		.loc 1 115 8 view .LVU4975
 14121              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14122              		.loc 1 115 48 is_stmt 0 view .LVU4976
 14123 4a1f 4D8B540C 		mov	r10, QWORD PTR 8[r12+rcx]	# *_747, *_747
 14123      08
 14124              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14125              		.loc 1 115 17 view .LVU4977
 14126 4a24 31C0     		xor	eax, eax	# distance
 14127              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14128              		.loc 1 115 48 view .LVU4978
 14129 4a26 49F7D2   		not	r10	# tmp984
 14130              	.LVL992:
 116:sieve_extend.c ****    }
 14131              		.loc 1 116 8 is_stmt 1 view .LVU4979
 14132              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 14133              		.loc 1 115 17 is_stmt 0 view .LVU4980
 14134 4a29 F3490FBC 		tzcnt	rax, r10	# distance, tmp984
 14134      C2
 14135              	.LVL993:
 14136              	# sieve_extend.c:116:        index += distance;
 116:sieve_extend.c ****    }
 14137              		.loc 1 116 14 view .LVU4981
 14138 4a2e 4801C6   		add	rsi, rax	# prime, distance
 14139              	.LVL994:
 113:sieve_extend.c ****        index_word++;
 14140              		.loc 1 113 10 is_stmt 1 view .LVU4982
 119:sieve_extend.c **** }
 14141              		.loc 1 119 4 view .LVU4983
 119:sieve_extend.c **** }
 14142              		.loc 1 119 4 is_stmt 0 view .LVU4984
 14143              	.LBE620:
 14144              	.LBE619:
 918:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 380


 14145              		.loc 1 918 9 is_stmt 1 view .LVU4985
 14146              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 14147              		.loc 1 918 35 is_stmt 0 view .LVU4986
 14148 4a31 4C8D5601 		lea	r10, 1[rsi]	# _491,
 14149              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 14150              		.loc 1 918 15 view .LVU4987
 14151 4a35 4C89D1   		mov	rcx, r10	# tmp989, _491
 14152 4a38 480FAFCE 		imul	rcx, rsi	# tmp989, prime
 14153              	.LVL995:
 918:sieve_extend.c ****     }
 14154              		.loc 1 918 15 view .LVU4988
 14155 4a3c 4801C9   		add	rcx, rcx	# index
 14156              	.LVL996:
 912:sieve_extend.c ****         step  = prime * 2 + 1;
 14157              		.loc 1 912 11 is_stmt 1 view .LVU4989
 14158 4a3f 4939CF   		cmp	r15, rcx	# block_stop, index
 14159 4a42 0F828CF7 		jb	.L1567	#,
 14159      FFFF
 14160              	.LVL997:
 14161              	.L801:
 913:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14162              		.loc 1 913 9 view .LVU4990
 14163              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14164              		.loc 1 914 12 is_stmt 0 view .LVU4991
 14165 4a48 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 14165      78
 14166              	# sieve_extend.c:913:         step  = prime * 2 + 1;
 913:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14167              		.loc 1 913 15 view .LVU4992
 14168 4a4d 4C8D5C36 		lea	r11, 1[rsi+rsi]	# step,
 14168      01
 14169              	.LVL998:
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14170              		.loc 1 914 9 is_stmt 1 view .LVU4993
 14171              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14172              		.loc 1 914 12 is_stmt 0 view .LVU4994
 14173 4a52 4939C2   		cmp	r10, rax	# _491, block_start
 14174 4a55 770F     		ja	.L779	#,
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14175              		.loc 1 914 41 is_stmt 1 view .LVU4995
 14176              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14177              		.loc 1 914 61 is_stmt 0 view .LVU4996
 14178 4a57 4801F0   		add	rax, rsi	# _473, prime
 14179              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14180              		.loc 1 914 102 view .LVU4997
 14181 4a5a 31D2     		xor	edx, edx	# tmp957
 14182              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14183              		.loc 1 914 69 view .LVU4998
 14184 4a5c 488D0C30 		lea	rcx, [rax+rsi]	# tmp955,
 14185              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
GAS LISTING /tmp/ccW0oq2B.s 			page 381


 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14186              		.loc 1 914 102 view .LVU4999
 14187 4a60 49F7F3   		div	r11	# step
 14188              	.LVL999:
 14189              	# sieve_extend.c:914:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 914:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 14190              		.loc 1 914 47 view .LVU5000
 14191 4a63 4829D1   		sub	rcx, rdx	# index, tmp957
 14192              	.LVL1000:
 14193              	.L779:
 915:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14194              		.loc 1 915 9 is_stmt 1 view .LVU5001
 14195              	# sieve_extend.c:915:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 915:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 14196              		.loc 1 915 12 is_stmt 0 view .LVU5002
 14197 4a66 4D89DE   		mov	r14, r11	# tmp959, step
 14198 4a69 49C1E606 		sal	r14, 6	# tmp959,
 14199 4a6d 31FF     		xor	edi, edi	# _256
 14200 4a6f 4901CE   		add	r14, rcx	# tmp960, index
 14201 4a72 400F92C7 		setc	dil	#, _256
 14202 4a76 4D39F7   		cmp	r15, r14	# block_stop, tmp960
 14203 4a79 0F82B103 		jb	.L1570	#,
 14203      0000
 14204              	.LBB622:
 14205              	.LBB617:
 14206              	.LBB615:
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14207              		.loc 1 397 50 is_stmt 1 view .LVU5003
 14208              	# sieve_extend.c:397:     for (register counter_t index = range_start; index <= range_stop_unique; 
 397:sieve_extend.c ****         register bitword_t mask = markmask(index);
 14209              		.loc 1 397 5 is_stmt 0 view .LVU5004
 14210 4a7f 4885FF   		test	rdi, rdi	# _256
 14211 4a82 0F855DFF 		jne	.L793	#,
 14211      FFFF
 14212              	.LBB613:
 14213              	.LBB609:
 14214              	.LBB605:
 14215              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14216              		.loc 1 188 107 view .LVU5005
 14217 4a88 488B7424 		mov	rsi, QWORD PTR 96[rsp]	# range_stop_word, %sfp
 14217      60
 14218              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14219              		.loc 1 188 84 view .LVU5006
 14220 4a8d 4F8D0C9B 		lea	r9, [r11+r11*4]	# tmp970,
 14221              	# sieve_extend.c:188:    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_wor
 188:sieve_extend.c **** 
 14222              		.loc 1 188 107 view .LVU5007
 14223 4a91 4889F3   		mov	rbx, rsi	# tmp972, range_stop_word
 14224 4a94 4C29CB   		sub	rbx, r9	# tmp972, tmp970
 14225 4a97 498D1CDC 		lea	rbx, [r12+rbx*8]	# tmp974,
 14226 4a9b 4C39CE   		cmp	rsi, r9	# range_stop_word, tmp970
 14227 4a9e 4C89D8   		mov	rax, r11	# _1865, step
 14228 4aa1 490F46DC 		cmovbe	rbx, r12	# pretmp_1655,, prephitmp_1870
 14229 4aa5 48C1E004 		sal	rax, 4	# _1865,
 14230 4aa9 48894424 		mov	QWORD PTR 104[rsp], rax	# %sfp, _1865
GAS LISTING /tmp/ccW0oq2B.s 			page 382


 14230      68
 14231              	# sieve_extend.c:194:        index_ptr+=step;
 194:sieve_extend.c ****        *index_ptr |= mask;
 14232              		.loc 1 194 17 view .LVU5008
 14233 4aae 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _775,
 14233      00000000 
 14234 4ab6 49C1E103 		sal	r9, 3	# tmp978,
 14235 4aba 660F1F44 		.p2align 4,,10
 14235      0000
 14236              		.p2align 3
 14237              	.L792:
 194:sieve_extend.c ****        *index_ptr |= mask;
 14238              		.loc 1 194 17 view .LVU5009
 14239              	.LBE605:
 14240              	.LBE609:
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 14241              		.loc 1 398 9 is_stmt 1 view .LVU5010
 14242              	# sieve_extend.c:399:         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 399:sieve_extend.c ****     }
 14243              		.loc 1 399 9 is_stmt 0 view .LVU5011
 14244 4ac0 4889CF   		mov	rdi, rcx	# tmp981, index
 14245 4ac3 48C1EF06 		shr	rdi, 6	# tmp981,
 14246              	.LBB610:
 14247              	.LBB606:
 14248              	# sieve_extend.c:187:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 14249              		.loc 1 187 78 view .LVU5012
 14250 4ac7 498D04FC 		lea	rax, [r12+rdi*8]	# index_ptr,
 14251              	.LBE606:
 14252              	.LBE610:
 14253              	# sieve_extend.c:398:         register bitword_t mask = markmask(index);
 398:sieve_extend.c ****         applyMask(bitarray, step, range_stop, mask, wordindex(index));
 14254              		.loc 1 398 28 view .LVU5013
 14255 4acb C4C2F1F7 		shlx	rsi, r13, rcx	# mask, tmp1041, index
 14255      F5
 14256              	.LVL1001:
 399:sieve_extend.c ****     }
 14257              		.loc 1 399 9 is_stmt 1 view .LVU5014
 14258              	.LBB611:
 14259              	.LBI603:
 154:sieve_extend.c **** // #if __APPLE__
 14260              		.loc 1 154 20 view .LVU5015
 14261              	.LBB607:
 186:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 14262              		.loc 1 186 4 view .LVU5016
 187:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  = &bitarray[((range_stop_word>step*5) ? (range_sto
 14263              		.loc 1 187 4 view .LVU5017
 188:sieve_extend.c **** 
 14264              		.loc 1 188 4 view .LVU5018
 192:sieve_extend.c ****        *index_ptr |= mask;
 14265              		.loc 1 192 4 view .LVU5019
 192:sieve_extend.c ****        *index_ptr |= mask;
 14266              		.loc 1 192 10 view .LVU5020
 14267 4ad0 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14268 4ad3 0F8397FE 		jnb	.L787	#,
 14268      FFFF
 14269 4ad9 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# _1865, %sfp
GAS LISTING /tmp/ccW0oq2B.s 			page 383


 14269      68
 14270 4ade 4801C7   		add	rdi, rax	# ivtmp.447, index_ptr
 14271              	.L788:
 193:sieve_extend.c ****        index_ptr+=step;
 14272              		.loc 1 193 8 view .LVU5021
 14273              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14274              		.loc 1 193 19 is_stmt 0 view .LVU5022
 14275 4ae1 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14276              		.loc 1 194 8 is_stmt 1 view .LVU5023
 14277              	.LVL1002:
 195:sieve_extend.c ****        index_ptr+=step;
 14278              		.loc 1 195 8 view .LVU5024
 14279              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14280              		.loc 1 195 19 is_stmt 0 view .LVU5025
 14281 4ae4 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14282              		.loc 1 196 8 is_stmt 1 view .LVU5026
 14283              	.LVL1003:
 197:sieve_extend.c ****        index_ptr+=step;
 14284              		.loc 1 197 8 view .LVU5027
 14285              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14286              		.loc 1 197 19 is_stmt 0 view .LVU5028
 14287 4ae8 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14288              		.loc 1 198 8 is_stmt 1 view .LVU5029
 14289              	.LVL1004:
 199:sieve_extend.c ****        index_ptr+=step;
 14290              		.loc 1 199 8 view .LVU5030
 14291              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14292              		.loc 1 199 19 is_stmt 0 view .LVU5031
 14293 4aeb 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14294              		.loc 1 200 8 is_stmt 1 view .LVU5032
 14295              	.LVL1005:
 201:sieve_extend.c ****        index_ptr+=step;
 14296              		.loc 1 201 8 view .LVU5033
 14297 4aef 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14298              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14299              		.loc 1 201 19 is_stmt 0 view .LVU5034
 14300 4af2 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14301              		.loc 1 202 8 is_stmt 1 view .LVU5035
 14302 4af6 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14303              	.LVL1006:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14304              		.loc 1 192 10 view .LVU5036
 14305 4af9 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14306 4afc 0F836EFE 		jnb	.L787	#,
 14306      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14307              		.loc 1 193 8 view .LVU5037
GAS LISTING /tmp/ccW0oq2B.s 			page 384


 14308              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14309              		.loc 1 193 19 is_stmt 0 view .LVU5038
 14310 4b02 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14311              		.loc 1 194 8 is_stmt 1 view .LVU5039
 14312              	.LVL1007:
 195:sieve_extend.c ****        index_ptr+=step;
 14313              		.loc 1 195 8 view .LVU5040
 14314              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14315              		.loc 1 195 19 is_stmt 0 view .LVU5041
 14316 4b05 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14317              		.loc 1 196 8 is_stmt 1 view .LVU5042
 14318              	.LVL1008:
 197:sieve_extend.c ****        index_ptr+=step;
 14319              		.loc 1 197 8 view .LVU5043
 14320              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14321              		.loc 1 197 19 is_stmt 0 view .LVU5044
 14322 4b09 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14323              		.loc 1 198 8 is_stmt 1 view .LVU5045
 14324              	.LVL1009:
 199:sieve_extend.c ****        index_ptr+=step;
 14325              		.loc 1 199 8 view .LVU5046
 14326              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14327              		.loc 1 199 19 is_stmt 0 view .LVU5047
 14328 4b0c 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14329              		.loc 1 200 8 is_stmt 1 view .LVU5048
 14330              	.LVL1010:
 201:sieve_extend.c ****        index_ptr+=step;
 14331              		.loc 1 201 8 view .LVU5049
 14332 4b10 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14333              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14334              		.loc 1 201 19 is_stmt 0 view .LVU5050
 14335 4b13 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14336              		.loc 1 202 8 is_stmt 1 view .LVU5051
 14337 4b17 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14338              	.LVL1011:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14339              		.loc 1 192 10 view .LVU5052
 14340 4b1a 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14341 4b1d 0F834DFE 		jnb	.L787	#,
 14341      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14342              		.loc 1 193 8 view .LVU5053
 14343              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14344              		.loc 1 193 19 is_stmt 0 view .LVU5054
 14345 4b23 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 385


 14346              		.loc 1 194 8 is_stmt 1 view .LVU5055
 14347              	.LVL1012:
 195:sieve_extend.c ****        index_ptr+=step;
 14348              		.loc 1 195 8 view .LVU5056
 14349              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14350              		.loc 1 195 19 is_stmt 0 view .LVU5057
 14351 4b26 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14352              		.loc 1 196 8 is_stmt 1 view .LVU5058
 14353              	.LVL1013:
 197:sieve_extend.c ****        index_ptr+=step;
 14354              		.loc 1 197 8 view .LVU5059
 14355              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14356              		.loc 1 197 19 is_stmt 0 view .LVU5060
 14357 4b2a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14358              		.loc 1 198 8 is_stmt 1 view .LVU5061
 14359              	.LVL1014:
 199:sieve_extend.c ****        index_ptr+=step;
 14360              		.loc 1 199 8 view .LVU5062
 14361              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14362              		.loc 1 199 19 is_stmt 0 view .LVU5063
 14363 4b2d 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14364              		.loc 1 200 8 is_stmt 1 view .LVU5064
 14365              	.LVL1015:
 201:sieve_extend.c ****        index_ptr+=step;
 14366              		.loc 1 201 8 view .LVU5065
 14367 4b31 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14368              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14369              		.loc 1 201 19 is_stmt 0 view .LVU5066
 14370 4b34 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14371              		.loc 1 202 8 is_stmt 1 view .LVU5067
 14372 4b38 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14373              	.LVL1016:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14374              		.loc 1 192 10 view .LVU5068
 14375 4b3b 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14376 4b3e 0F832CFE 		jnb	.L787	#,
 14376      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14377              		.loc 1 193 8 view .LVU5069
 14378              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14379              		.loc 1 193 19 is_stmt 0 view .LVU5070
 14380 4b44 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14381              		.loc 1 194 8 is_stmt 1 view .LVU5071
 14382              	.LVL1017:
 195:sieve_extend.c ****        index_ptr+=step;
 14383              		.loc 1 195 8 view .LVU5072
 14384              	# sieve_extend.c:195:        *index_ptr |= mask;
GAS LISTING /tmp/ccW0oq2B.s 			page 386


 195:sieve_extend.c ****        index_ptr+=step;
 14385              		.loc 1 195 19 is_stmt 0 view .LVU5073
 14386 4b47 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14387              		.loc 1 196 8 is_stmt 1 view .LVU5074
 14388              	.LVL1018:
 197:sieve_extend.c ****        index_ptr+=step;
 14389              		.loc 1 197 8 view .LVU5075
 14390              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14391              		.loc 1 197 19 is_stmt 0 view .LVU5076
 14392 4b4b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14393              		.loc 1 198 8 is_stmt 1 view .LVU5077
 14394              	.LVL1019:
 199:sieve_extend.c ****        index_ptr+=step;
 14395              		.loc 1 199 8 view .LVU5078
 14396              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14397              		.loc 1 199 19 is_stmt 0 view .LVU5079
 14398 4b4e 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14399              		.loc 1 200 8 is_stmt 1 view .LVU5080
 14400              	.LVL1020:
 201:sieve_extend.c ****        index_ptr+=step;
 14401              		.loc 1 201 8 view .LVU5081
 14402 4b52 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14403              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14404              		.loc 1 201 19 is_stmt 0 view .LVU5082
 14405 4b55 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14406              		.loc 1 202 8 is_stmt 1 view .LVU5083
 14407 4b59 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14408              	.LVL1021:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14409              		.loc 1 192 10 view .LVU5084
 14410 4b5c 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14411 4b5f 0F830BFE 		jnb	.L787	#,
 14411      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14412              		.loc 1 193 8 view .LVU5085
 14413              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14414              		.loc 1 193 19 is_stmt 0 view .LVU5086
 14415 4b65 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14416              		.loc 1 194 8 is_stmt 1 view .LVU5087
 14417              	.LVL1022:
 195:sieve_extend.c ****        index_ptr+=step;
 14418              		.loc 1 195 8 view .LVU5088
 14419              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14420              		.loc 1 195 19 is_stmt 0 view .LVU5089
 14421 4b68 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14422              		.loc 1 196 8 is_stmt 1 view .LVU5090
GAS LISTING /tmp/ccW0oq2B.s 			page 387


 14423              	.LVL1023:
 197:sieve_extend.c ****        index_ptr+=step;
 14424              		.loc 1 197 8 view .LVU5091
 14425              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14426              		.loc 1 197 19 is_stmt 0 view .LVU5092
 14427 4b6c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14428              		.loc 1 198 8 is_stmt 1 view .LVU5093
 14429              	.LVL1024:
 199:sieve_extend.c ****        index_ptr+=step;
 14430              		.loc 1 199 8 view .LVU5094
 14431              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14432              		.loc 1 199 19 is_stmt 0 view .LVU5095
 14433 4b6f 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14434              		.loc 1 200 8 is_stmt 1 view .LVU5096
 14435              	.LVL1025:
 201:sieve_extend.c ****        index_ptr+=step;
 14436              		.loc 1 201 8 view .LVU5097
 14437 4b73 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14438              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14439              		.loc 1 201 19 is_stmt 0 view .LVU5098
 14440 4b76 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14441              		.loc 1 202 8 is_stmt 1 view .LVU5099
 14442 4b7a 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14443              	.LVL1026:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14444              		.loc 1 192 10 view .LVU5100
 14445 4b7d 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14446 4b80 0F83EAFD 		jnb	.L787	#,
 14446      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14447              		.loc 1 193 8 view .LVU5101
 14448              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14449              		.loc 1 193 19 is_stmt 0 view .LVU5102
 14450 4b86 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14451              		.loc 1 194 8 is_stmt 1 view .LVU5103
 14452              	.LVL1027:
 195:sieve_extend.c ****        index_ptr+=step;
 14453              		.loc 1 195 8 view .LVU5104
 14454              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14455              		.loc 1 195 19 is_stmt 0 view .LVU5105
 14456 4b89 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14457              		.loc 1 196 8 is_stmt 1 view .LVU5106
 14458              	.LVL1028:
 197:sieve_extend.c ****        index_ptr+=step;
 14459              		.loc 1 197 8 view .LVU5107
 14460              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccW0oq2B.s 			page 388


 14461              		.loc 1 197 19 is_stmt 0 view .LVU5108
 14462 4b8d 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14463              		.loc 1 198 8 is_stmt 1 view .LVU5109
 14464              	.LVL1029:
 199:sieve_extend.c ****        index_ptr+=step;
 14465              		.loc 1 199 8 view .LVU5110
 14466              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14467              		.loc 1 199 19 is_stmt 0 view .LVU5111
 14468 4b90 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14469              		.loc 1 200 8 is_stmt 1 view .LVU5112
 14470              	.LVL1030:
 201:sieve_extend.c ****        index_ptr+=step;
 14471              		.loc 1 201 8 view .LVU5113
 14472 4b94 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14473              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14474              		.loc 1 201 19 is_stmt 0 view .LVU5114
 14475 4b97 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14476              		.loc 1 202 8 is_stmt 1 view .LVU5115
 14477 4b9b 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14478              	.LVL1031:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14479              		.loc 1 192 10 view .LVU5116
 14480 4b9e 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14481 4ba1 0F83C9FD 		jnb	.L787	#,
 14481      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14482              		.loc 1 193 8 view .LVU5117
 14483              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14484              		.loc 1 193 19 is_stmt 0 view .LVU5118
 14485 4ba7 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14486              		.loc 1 194 8 is_stmt 1 view .LVU5119
 14487              	.LVL1032:
 195:sieve_extend.c ****        index_ptr+=step;
 14488              		.loc 1 195 8 view .LVU5120
 14489              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14490              		.loc 1 195 19 is_stmt 0 view .LVU5121
 14491 4baa 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14492              		.loc 1 196 8 is_stmt 1 view .LVU5122
 14493              	.LVL1033:
 197:sieve_extend.c ****        index_ptr+=step;
 14494              		.loc 1 197 8 view .LVU5123
 14495              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14496              		.loc 1 197 19 is_stmt 0 view .LVU5124
 14497 4bae 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14498              		.loc 1 198 8 is_stmt 1 view .LVU5125
 14499              	.LVL1034:
GAS LISTING /tmp/ccW0oq2B.s 			page 389


 199:sieve_extend.c ****        index_ptr+=step;
 14500              		.loc 1 199 8 view .LVU5126
 14501              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14502              		.loc 1 199 19 is_stmt 0 view .LVU5127
 14503 4bb1 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14504              		.loc 1 200 8 is_stmt 1 view .LVU5128
 14505              	.LVL1035:
 201:sieve_extend.c ****        index_ptr+=step;
 14506              		.loc 1 201 8 view .LVU5129
 14507 4bb5 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14508              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14509              		.loc 1 201 19 is_stmt 0 view .LVU5130
 14510 4bb8 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14511              		.loc 1 202 8 is_stmt 1 view .LVU5131
 14512 4bbc 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14513              	.LVL1036:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14514              		.loc 1 192 10 view .LVU5132
 14515 4bbf 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14516 4bc2 0F83A8FD 		jnb	.L787	#,
 14516      FFFF
 193:sieve_extend.c ****        index_ptr+=step;
 14517              		.loc 1 193 8 view .LVU5133
 14518              	# sieve_extend.c:193:        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 14519              		.loc 1 193 19 is_stmt 0 view .LVU5134
 14520 4bc8 480930   		or	QWORD PTR [rax], rsi	# MEM[base: index_ptr_1117, offset: 0B], mask
 194:sieve_extend.c ****        *index_ptr |= mask;
 14521              		.loc 1 194 8 is_stmt 1 view .LVU5135
 14522              	.LVL1037:
 195:sieve_extend.c ****        index_ptr+=step;
 14523              		.loc 1 195 8 view .LVU5136
 14524              	# sieve_extend.c:195:        *index_ptr |= mask;
 195:sieve_extend.c ****        index_ptr+=step;
 14525              		.loc 1 195 19 is_stmt 0 view .LVU5137
 14526 4bcb 48093410 		or	QWORD PTR [rax+rdx], rsi	# MEM[base: index_ptr_1117, index: _775, offset: 0B], mask
 196:sieve_extend.c ****        *index_ptr |= mask;
 14527              		.loc 1 196 8 is_stmt 1 view .LVU5138
 14528              	.LVL1038:
 197:sieve_extend.c ****        index_ptr+=step;
 14529              		.loc 1 197 8 view .LVU5139
 14530              	# sieve_extend.c:197:        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
 14531              		.loc 1 197 19 is_stmt 0 view .LVU5140
 14532 4bcf 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1845, offset: 0B], mask
 198:sieve_extend.c ****        *index_ptr |= mask;
 14533              		.loc 1 198 8 is_stmt 1 view .LVU5141
 14534              	.LVL1039:
 199:sieve_extend.c ****        index_ptr+=step;
 14535              		.loc 1 199 8 view .LVU5142
 14536              	# sieve_extend.c:199:        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 14537              		.loc 1 199 19 is_stmt 0 view .LVU5143
GAS LISTING /tmp/ccW0oq2B.s 			page 390


 14538 4bd2 48093417 		or	QWORD PTR [rdi+rdx], rsi	# MEM[base: _1845, index: _775, offset: 0B], mask
 200:sieve_extend.c ****        *index_ptr |= mask;
 14539              		.loc 1 200 8 is_stmt 1 view .LVU5144
 14540              	.LVL1040:
 201:sieve_extend.c ****        index_ptr+=step;
 14541              		.loc 1 201 8 view .LVU5145
 14542 4bd6 4C01CF   		add	rdi, r9	# ivtmp.447, tmp978
 14543              	# sieve_extend.c:201:        *index_ptr |= mask;
 201:sieve_extend.c ****        index_ptr+=step;
 14544              		.loc 1 201 19 is_stmt 0 view .LVU5146
 14545 4bd9 48093490 		or	QWORD PTR [rax+rdx*4], rsi	# MEM[base: index_ptr_1117, index: _775, step: 4, offset: 0B], mask
 202:sieve_extend.c ****    }
 14546              		.loc 1 202 8 is_stmt 1 view .LVU5147
 14547 4bdd 4C01C8   		add	rax, r9	# index_ptr, tmp978
 14548              	.LVL1041:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14549              		.loc 1 192 10 view .LVU5148
 14550 4be0 4839D8   		cmp	rax, rbx	# index_ptr, prephitmp_1870
 14551 4be3 0F82F8FE 		jb	.L788	#,
 14551      FFFF
 14552 4be9 E982FDFF 		jmp	.L787	#
 14552      FF
 14553              	.LVL1042:
 14554 4bee 6690     		.p2align 4,,10
 14555              		.p2align 3
 14556              	.L1588:
 192:sieve_extend.c ****        *index_ptr |= mask;
 14557              		.loc 1 192 10 is_stmt 0 view .LVU5149
 14558              	.LBE607:
 14559              	.LBE611:
 14560              	.LBE613:
 14561              	.LBE615:
 14562              	.LBE617:
 14563              	.LBE622:
 14564              	.LBB623:
 14565              	.LBB624:
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14566              		.loc 1 329 50 is_stmt 1 view .LVU5150
 14567              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14568              		.loc 1 329 5 is_stmt 0 view .LVU5151
 14569 4bf0 4939CF   		cmp	r15, rcx	# block_stop, index
 14570 4bf3 0F829FFC 		jb	.L1569	#,
 14570      FFFF
 14571              	.LVL1043:
 14572              	.L763:
 330:sieve_extend.c ****     }
 14573              		.loc 1 330 9 is_stmt 1 view .LVU5152
 14574              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14575              		.loc 1 330 36 is_stmt 0 view .LVU5153
 14576 4bf9 4989CE   		mov	r14, rcx	# tmp943, index
 14577              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14578              		.loc 1 330 39 view .LVU5154
 14579 4bfc C4C2F1F7 		shlx	rdi, r13, rcx	# tmp946, tmp1041, index
 14579      FD
GAS LISTING /tmp/ccW0oq2B.s 			page 391


 14580              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14581              		.loc 1 330 36 view .LVU5155
 14582 4c01 49C1EE06 		shr	r14, 6	# tmp943,
 14583              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14584              		.loc 1 329 77 view .LVU5156
 14585 4c05 4C01C9   		add	rcx, r9	# index, step
 14586              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14587              		.loc 1 330 36 view .LVU5157
 14588 4c08 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_449, tmp946
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14589              		.loc 1 329 71 is_stmt 1 view .LVU5158
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14590              		.loc 1 329 50 view .LVU5159
 14591              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14592              		.loc 1 329 5 is_stmt 0 view .LVU5160
 14593 4c0c 4939CF   		cmp	r15, rcx	# block_stop, index
 14594 4c0f 0F8283FC 		jb	.L1569	#,
 14594      FFFF
 330:sieve_extend.c ****     }
 14595              		.loc 1 330 9 is_stmt 1 view .LVU5161
 14596              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14597              		.loc 1 330 36 is_stmt 0 view .LVU5162
 14598 4c15 4889CB   		mov	rbx, rcx	# tmp1335, index
 14599              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14600              		.loc 1 330 39 view .LVU5163
 14601 4c18 C442F1F7 		shlx	r10, r13, rcx	# tmp1338, tmp1041, index
 14601      D5
 14602              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14603              		.loc 1 330 36 view .LVU5164
 14604 4c1d 48C1EB06 		shr	rbx, 6	# tmp1335,
 14605              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14606              		.loc 1 329 77 view .LVU5165
 14607 4c21 4C01C9   		add	rcx, r9	# index, step
 14608              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14609              		.loc 1 330 36 view .LVU5166
 14610 4c24 4D0914DC 		or	QWORD PTR [r12+rbx*8], r10	# *_449, tmp1338
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14611              		.loc 1 329 71 is_stmt 1 view .LVU5167
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14612              		.loc 1 329 50 view .LVU5168
 14613              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14614              		.loc 1 329 5 is_stmt 0 view .LVU5169
 14615 4c28 4939CF   		cmp	r15, rcx	# block_stop, index
 14616 4c2b 0F8267FC 		jb	.L1569	#,
 14616      FFFF
 330:sieve_extend.c ****     }
 14617              		.loc 1 330 9 is_stmt 1 view .LVU5170
GAS LISTING /tmp/ccW0oq2B.s 			page 392


 14618              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14619              		.loc 1 330 36 is_stmt 0 view .LVU5171
 14620 4c31 4889C8   		mov	rax, rcx	# tmp1340, index
 14621              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14622              		.loc 1 330 39 view .LVU5172
 14623 4c34 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1343, tmp1041, index
 14623      D5
 14624              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14625              		.loc 1 330 36 view .LVU5173
 14626 4c39 48C1E806 		shr	rax, 6	# tmp1340,
 14627              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14628              		.loc 1 329 77 view .LVU5174
 14629 4c3d 4C01C9   		add	rcx, r9	# index, step
 14630              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14631              		.loc 1 330 36 view .LVU5175
 14632 4c40 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_449, tmp1343
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14633              		.loc 1 329 71 is_stmt 1 view .LVU5176
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14634              		.loc 1 329 50 view .LVU5177
 14635              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14636              		.loc 1 329 5 is_stmt 0 view .LVU5178
 14637 4c44 4939CF   		cmp	r15, rcx	# block_stop, index
 14638 4c47 0F824BFC 		jb	.L1569	#,
 14638      FFFF
 330:sieve_extend.c ****     }
 14639              		.loc 1 330 9 is_stmt 1 view .LVU5179
 14640              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14641              		.loc 1 330 36 is_stmt 0 view .LVU5180
 14642 4c4d 4989CE   		mov	r14, rcx	# tmp1345, index
 14643              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14644              		.loc 1 330 39 view .LVU5181
 14645 4c50 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1348, tmp1041, index
 14645      FD
 14646              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14647              		.loc 1 330 36 view .LVU5182
 14648 4c55 49C1EE06 		shr	r14, 6	# tmp1345,
 14649              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14650              		.loc 1 329 77 view .LVU5183
 14651 4c59 4C01C9   		add	rcx, r9	# index, step
 14652              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14653              		.loc 1 330 36 view .LVU5184
 14654 4c5c 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_449, tmp1348
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14655              		.loc 1 329 71 is_stmt 1 view .LVU5185
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccW0oq2B.s 			page 393


 14656              		.loc 1 329 50 view .LVU5186
 14657              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14658              		.loc 1 329 5 is_stmt 0 view .LVU5187
 14659 4c60 4939CF   		cmp	r15, rcx	# block_stop, index
 14660 4c63 0F822FFC 		jb	.L1569	#,
 14660      FFFF
 330:sieve_extend.c ****     }
 14661              		.loc 1 330 9 is_stmt 1 view .LVU5188
 14662              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14663              		.loc 1 330 36 is_stmt 0 view .LVU5189
 14664 4c69 4889CB   		mov	rbx, rcx	# tmp1350, index
 14665              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14666              		.loc 1 330 39 view .LVU5190
 14667 4c6c C442F1F7 		shlx	r10, r13, rcx	# tmp1353, tmp1041, index
 14667      D5
 14668              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14669              		.loc 1 330 36 view .LVU5191
 14670 4c71 48C1EB06 		shr	rbx, 6	# tmp1350,
 14671              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14672              		.loc 1 329 77 view .LVU5192
 14673 4c75 4C01C9   		add	rcx, r9	# index, step
 14674              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14675              		.loc 1 330 36 view .LVU5193
 14676 4c78 4D0914DC 		or	QWORD PTR [r12+rbx*8], r10	# *_449, tmp1353
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14677              		.loc 1 329 71 is_stmt 1 view .LVU5194
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14678              		.loc 1 329 50 view .LVU5195
 14679              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14680              		.loc 1 329 5 is_stmt 0 view .LVU5196
 14681 4c7c 4939CF   		cmp	r15, rcx	# block_stop, index
 14682 4c7f 0F8213FC 		jb	.L1569	#,
 14682      FFFF
 330:sieve_extend.c ****     }
 14683              		.loc 1 330 9 is_stmt 1 view .LVU5197
 14684              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14685              		.loc 1 330 36 is_stmt 0 view .LVU5198
 14686 4c85 4889C8   		mov	rax, rcx	# tmp1355, index
 14687              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14688              		.loc 1 330 39 view .LVU5199
 14689 4c88 C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1358, tmp1041, index
 14689      D5
 14690              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14691              		.loc 1 330 36 view .LVU5200
 14692 4c8d 48C1E806 		shr	rax, 6	# tmp1355,
 14693              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccW0oq2B.s 			page 394


 14694              		.loc 1 329 77 view .LVU5201
 14695 4c91 4C01C9   		add	rcx, r9	# index, step
 14696              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14697              		.loc 1 330 36 view .LVU5202
 14698 4c94 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_449, tmp1358
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14699              		.loc 1 329 71 is_stmt 1 view .LVU5203
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14700              		.loc 1 329 50 view .LVU5204
 14701              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14702              		.loc 1 329 5 is_stmt 0 view .LVU5205
 14703 4c98 4939CF   		cmp	r15, rcx	# block_stop, index
 14704 4c9b 0F82F7FB 		jb	.L1569	#,
 14704      FFFF
 330:sieve_extend.c ****     }
 14705              		.loc 1 330 9 is_stmt 1 view .LVU5206
 14706              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14707              		.loc 1 330 36 is_stmt 0 view .LVU5207
 14708 4ca1 4989CE   		mov	r14, rcx	# tmp1360, index
 14709              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14710              		.loc 1 330 39 view .LVU5208
 14711 4ca4 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1363, tmp1041, index
 14711      FD
 14712              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14713              		.loc 1 330 36 view .LVU5209
 14714 4ca9 49C1EE06 		shr	r14, 6	# tmp1360,
 14715              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14716              		.loc 1 329 77 view .LVU5210
 14717 4cad 4C01C9   		add	rcx, r9	# index, step
 14718              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14719              		.loc 1 330 36 view .LVU5211
 14720 4cb0 4B093CF4 		or	QWORD PTR [r12+r14*8], rdi	# *_449, tmp1363
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14721              		.loc 1 329 71 is_stmt 1 view .LVU5212
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14722              		.loc 1 329 50 view .LVU5213
 14723              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14724              		.loc 1 329 5 is_stmt 0 view .LVU5214
 14725 4cb4 4939CF   		cmp	r15, rcx	# block_stop, index
 14726 4cb7 0F82DBFB 		jb	.L1569	#,
 14726      FFFF
 330:sieve_extend.c ****     }
 14727              		.loc 1 330 9 is_stmt 1 view .LVU5215
 14728              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14729              		.loc 1 330 36 is_stmt 0 view .LVU5216
 14730 4cbd 4889CB   		mov	rbx, rcx	# tmp1365, index
 14731              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 395


 14732              		.loc 1 330 39 view .LVU5217
 14733 4cc0 C442F1F7 		shlx	r10, r13, rcx	# tmp1368, tmp1041, index
 14733      D5
 14734              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14735              		.loc 1 330 36 view .LVU5218
 14736 4cc5 48C1EB06 		shr	rbx, 6	# tmp1365,
 14737              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14738              		.loc 1 329 77 view .LVU5219
 14739 4cc9 4C01C9   		add	rcx, r9	# index, step
 14740              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 14741              		.loc 1 330 36 view .LVU5220
 14742 4ccc 4D0914DC 		or	QWORD PTR [r12+rbx*8], r10	# *_449, tmp1368
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14743              		.loc 1 329 71 is_stmt 1 view .LVU5221
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14744              		.loc 1 329 50 view .LVU5222
 14745              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14746              		.loc 1 329 5 is_stmt 0 view .LVU5223
 14747 4cd0 4939CF   		cmp	r15, rcx	# block_stop, index
 14748 4cd3 0F8320FF 		jnb	.L763	#,
 14748      FFFF
 14749 4cd9 E9BAFBFF 		jmp	.L1569	#
 14749      FF
 14750              	.LVL1044:
 14751 4cde 6690     		.p2align 4,,10
 14752              		.p2align 3
 14753              	.L772:
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14754              		.loc 1 329 5 view .LVU5224
 14755              	.LBE624:
 14756              	.LBE623:
 14757              	.LBB625:
 14758              	.LBB594:
 369:sieve_extend.c ****                 index2 += step2;
 14759              		.loc 1 369 17 is_stmt 1 view .LVU5225
 14760              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14761              		.loc 1 369 45 is_stmt 0 view .LVU5226
 14762 4ce0 4989C1   		mov	r9, rax	# tmp930, index2
 14763              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14764              		.loc 1 369 48 view .LVU5227
 14765 4ce3 C4C2F9F7 		shlx	rcx, r13, rax	# tmp933, tmp1041, index2
 14765      CD
 14766              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14767              		.loc 1 369 45 view .LVU5228
 14768 4ce8 49C1E906 		shr	r9, 6	# tmp930,
 14769              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14770              		.loc 1 370 24 view .LVU5229
 14771 4cec 4C01D0   		add	rax, r10	# index2, step
 14772              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
GAS LISTING /tmp/ccW0oq2B.s 			page 396


 369:sieve_extend.c ****                 index2 += step2;
 14773              		.loc 1 369 45 view .LVU5230
 14774 4cef 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp933
 370:sieve_extend.c ****             }
 14775              		.loc 1 370 17 is_stmt 1 view .LVU5231
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14776              		.loc 1 368 19 view .LVU5232
 14777 4cf3 4939C7   		cmp	r15, rax	# block_stop, index2
 14778 4cf6 0F829CFB 		jb	.L1569	#,
 14778      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14779              		.loc 1 369 17 view .LVU5233
 14780              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14781              		.loc 1 369 45 is_stmt 0 view .LVU5234
 14782 4cfc 4889C2   		mov	rdx, rax	# tmp1245, index2
 14783              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14784              		.loc 1 369 48 view .LVU5235
 14785 4cff C442F9F7 		shlx	r14, r13, rax	# tmp1248, tmp1041, index2
 14785      F5
 14786              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14787              		.loc 1 369 45 view .LVU5236
 14788 4d04 48C1EA06 		shr	rdx, 6	# tmp1245,
 14789              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14790              		.loc 1 370 24 view .LVU5237
 14791 4d08 4C01D0   		add	rax, r10	# index2, step
 14792              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14793              		.loc 1 369 45 view .LVU5238
 14794 4d0b 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1248
 370:sieve_extend.c ****             }
 14795              		.loc 1 370 17 is_stmt 1 view .LVU5239
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14796              		.loc 1 368 19 view .LVU5240
 14797 4d0f 4939C7   		cmp	r15, rax	# block_stop, index2
 14798 4d12 0F8280FB 		jb	.L1569	#,
 14798      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14799              		.loc 1 369 17 view .LVU5241
 14800              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14801              		.loc 1 369 45 is_stmt 0 view .LVU5242
 14802 4d18 4889C7   		mov	rdi, rax	# tmp1250, index2
 14803              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14804              		.loc 1 369 48 view .LVU5243
 14805 4d1b C4C2F9F7 		shlx	rbx, r13, rax	# tmp1253, tmp1041, index2
 14805      DD
 14806              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14807              		.loc 1 369 45 view .LVU5244
 14808 4d20 48C1EF06 		shr	rdi, 6	# tmp1250,
 14809              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
GAS LISTING /tmp/ccW0oq2B.s 			page 397


 14810              		.loc 1 370 24 view .LVU5245
 14811 4d24 4C01D0   		add	rax, r10	# index2, step
 14812              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14813              		.loc 1 369 45 view .LVU5246
 14814 4d27 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_695, tmp1253
 370:sieve_extend.c ****             }
 14815              		.loc 1 370 17 is_stmt 1 view .LVU5247
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14816              		.loc 1 368 19 view .LVU5248
 14817 4d2b 4939C7   		cmp	r15, rax	# block_stop, index2
 14818 4d2e 0F8264FB 		jb	.L1569	#,
 14818      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14819              		.loc 1 369 17 view .LVU5249
 14820              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14821              		.loc 1 369 45 is_stmt 0 view .LVU5250
 14822 4d34 4989C1   		mov	r9, rax	# tmp1255, index2
 14823              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14824              		.loc 1 369 48 view .LVU5251
 14825 4d37 C4C2F9F7 		shlx	rcx, r13, rax	# tmp1258, tmp1041, index2
 14825      CD
 14826              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14827              		.loc 1 369 45 view .LVU5252
 14828 4d3c 49C1E906 		shr	r9, 6	# tmp1255,
 14829              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14830              		.loc 1 370 24 view .LVU5253
 14831 4d40 4C01D0   		add	rax, r10	# index2, step
 14832              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14833              		.loc 1 369 45 view .LVU5254
 14834 4d43 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp1258
 370:sieve_extend.c ****             }
 14835              		.loc 1 370 17 is_stmt 1 view .LVU5255
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14836              		.loc 1 368 19 view .LVU5256
 14837 4d47 4939C7   		cmp	r15, rax	# block_stop, index2
 14838 4d4a 0F8248FB 		jb	.L1569	#,
 14838      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14839              		.loc 1 369 17 view .LVU5257
 14840              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14841              		.loc 1 369 45 is_stmt 0 view .LVU5258
 14842 4d50 4889C2   		mov	rdx, rax	# tmp1260, index2
 14843              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14844              		.loc 1 369 48 view .LVU5259
 14845 4d53 C442F9F7 		shlx	r14, r13, rax	# tmp1263, tmp1041, index2
 14845      F5
 14846              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14847              		.loc 1 369 45 view .LVU5260
GAS LISTING /tmp/ccW0oq2B.s 			page 398


 14848 4d58 48C1EA06 		shr	rdx, 6	# tmp1260,
 14849              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14850              		.loc 1 370 24 view .LVU5261
 14851 4d5c 4C01D0   		add	rax, r10	# index2, step
 14852              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14853              		.loc 1 369 45 view .LVU5262
 14854 4d5f 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1263
 370:sieve_extend.c ****             }
 14855              		.loc 1 370 17 is_stmt 1 view .LVU5263
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14856              		.loc 1 368 19 view .LVU5264
 14857 4d63 4939C7   		cmp	r15, rax	# block_stop, index2
 14858 4d66 0F822CFB 		jb	.L1569	#,
 14858      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14859              		.loc 1 369 17 view .LVU5265
 14860              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14861              		.loc 1 369 45 is_stmt 0 view .LVU5266
 14862 4d6c 4889C7   		mov	rdi, rax	# tmp1265, index2
 14863              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14864              		.loc 1 369 48 view .LVU5267
 14865 4d6f C4C2F9F7 		shlx	rbx, r13, rax	# tmp1268, tmp1041, index2
 14865      DD
 14866              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14867              		.loc 1 369 45 view .LVU5268
 14868 4d74 48C1EF06 		shr	rdi, 6	# tmp1265,
 14869              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14870              		.loc 1 370 24 view .LVU5269
 14871 4d78 4C01D0   		add	rax, r10	# index2, step
 14872              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14873              		.loc 1 369 45 view .LVU5270
 14874 4d7b 49091CFC 		or	QWORD PTR [r12+rdi*8], rbx	# *_695, tmp1268
 370:sieve_extend.c ****             }
 14875              		.loc 1 370 17 is_stmt 1 view .LVU5271
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14876              		.loc 1 368 19 view .LVU5272
 14877 4d7f 4939C7   		cmp	r15, rax	# block_stop, index2
 14878 4d82 0F8210FB 		jb	.L1569	#,
 14878      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14879              		.loc 1 369 17 view .LVU5273
 14880              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14881              		.loc 1 369 45 is_stmt 0 view .LVU5274
 14882 4d88 4989C1   		mov	r9, rax	# tmp1270, index2
 14883              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14884              		.loc 1 369 48 view .LVU5275
 14885 4d8b C4C2F9F7 		shlx	rcx, r13, rax	# tmp1273, tmp1041, index2
 14885      CD
GAS LISTING /tmp/ccW0oq2B.s 			page 399


 14886              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14887              		.loc 1 369 45 view .LVU5276
 14888 4d90 49C1E906 		shr	r9, 6	# tmp1270,
 14889              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14890              		.loc 1 370 24 view .LVU5277
 14891 4d94 4C01D0   		add	rax, r10	# index2, step
 14892              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14893              		.loc 1 369 45 view .LVU5278
 14894 4d97 4B090CCC 		or	QWORD PTR [r12+r9*8], rcx	# *_695, tmp1273
 370:sieve_extend.c ****             }
 14895              		.loc 1 370 17 is_stmt 1 view .LVU5279
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14896              		.loc 1 368 19 view .LVU5280
 14897 4d9b 4939C7   		cmp	r15, rax	# block_stop, index2
 14898 4d9e 0F82F4FA 		jb	.L1569	#,
 14898      FFFF
 369:sieve_extend.c ****                 index2 += step2;
 14899              		.loc 1 369 17 view .LVU5281
 14900              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14901              		.loc 1 369 45 is_stmt 0 view .LVU5282
 14902 4da4 4889C2   		mov	rdx, rax	# tmp1275, index2
 14903              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14904              		.loc 1 369 48 view .LVU5283
 14905 4da7 C442F9F7 		shlx	r14, r13, rax	# tmp1278, tmp1041, index2
 14905      F5
 14906              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14907              		.loc 1 369 45 view .LVU5284
 14908 4dac 48C1EA06 		shr	rdx, 6	# tmp1275,
 14909              	# sieve_extend.c:370:                 index2 += step2;
 370:sieve_extend.c ****             }
 14910              		.loc 1 370 24 view .LVU5285
 14911 4db0 4C01D0   		add	rax, r10	# index2, step
 14912              	# sieve_extend.c:369:                 bitarray[wordindex(index2)] |= markmask(index2);
 369:sieve_extend.c ****                 index2 += step2;
 14913              		.loc 1 369 45 view .LVU5286
 14914 4db3 4D0934D4 		or	QWORD PTR [r12+rdx*8], r14	# *_695, tmp1278
 370:sieve_extend.c ****             }
 14915              		.loc 1 370 17 is_stmt 1 view .LVU5287
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14916              		.loc 1 368 19 view .LVU5288
 14917 4db7 4939C7   		cmp	r15, rax	# block_stop, index2
 14918 4dba 0F8320FF 		jnb	.L772	#,
 14918      FFFF
 14919 4dc0 E9D3FAFF 		jmp	.L1569	#
 14919      FF
 14920              	.LVL1045:
 14921              		.p2align 4,,10
 14922 4dc5 0F1F00   		.p2align 3
 14923              	.L1591:
 368:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 14924              		.loc 1 368 19 is_stmt 0 view .LVU5289
GAS LISTING /tmp/ccW0oq2B.s 			page 400


 14925              	.LBE594:
 14926              	.LBE625:
 14927              	.LBB626:
 14928              	.LBB618:
 14929              	.LBB616:
 14930              	.LBB614:
 14931              	.LBB612:
 14932              	.LBB608:
 212:sieve_extend.c ****    }
 14933              		.loc 1 212 7 is_stmt 1 view .LVU5290
 14934              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 14935              		.loc 1 212 27 is_stmt 0 view .LVU5291
 14936 4dc8 48237424 		and	rsi, QWORD PTR 112[rsp]	# tmp983, %sfp
 14936      70
 14937              	.LVL1046:
 14938              	# sieve_extend.c:212:       *index_ptr |= (mask & chopmask(range_stop));
 212:sieve_extend.c ****    }
 14939              		.loc 1 212 18 view .LVU5292
 14940 4dcd 490930   		or	QWORD PTR [r8], rsi	# *index_ptr_1112, tmp983
 14941 4dd0 E904FCFF 		jmp	.L791	#
 14941      FF
 14942              	.LVL1047:
 14943              		.p2align 4,,10
 14944 4dd5 0F1F00   		.p2align 3
 14945              	.L765:
 212:sieve_extend.c ****    }
 14946              		.loc 1 212 18 view .LVU5293
 14947              	.LBE608:
 14948              	.LBE612:
 14949              	.LBE614:
 14950              	.LBE616:
 14951              	.LBE618:
 14952              	.LBE626:
 14953              	.LBB627:
 14954              	.LBB598:
 125:sieve_extend.c **** }
 14955              		.loc 1 125 5 is_stmt 1 view .LVU5294
 125:sieve_extend.c **** }
 14956              		.loc 1 125 5 is_stmt 0 view .LVU5295
 14957              	.LBE598:
 14958              	.LBE627:
 900:sieve_extend.c ****     }
 14959              		.loc 1 900 9 is_stmt 1 view .LVU5296
 14960              	# sieve_extend.c:900:         start = prime * prime * 2 + prime * 2;
 900:sieve_extend.c ****     }
 14961              		.loc 1 900 35 is_stmt 0 view .LVU5297
 14962 4dd8 4C8D5601 		lea	r10, 1[rsi]	# _491,
 14963 4ddc 4C8D0C36 		lea	r9, [rsi+rsi]	# _60,
 14964              	.LVL1048:
 14965              	# sieve_extend.c:900:         start = prime * prime * 2 + prime * 2;
 900:sieve_extend.c ****     }
 14966              		.loc 1 900 15 view .LVU5298
 14967 4de0 4C89D1   		mov	rcx, r10	# index, _491
 14968 4de3 490FAFC9 		imul	rcx, r9	# index, _60
 14969              	.LVL1049:
 887:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccW0oq2B.s 			page 401


 14970              		.loc 1 887 11 is_stmt 1 view .LVU5299
 14971 4de7 4939CF   		cmp	r15, rcx	# block_stop, index
 14972 4dea 0F82E4F3 		jb	.L1567	#,
 14972      FFFF
 888:sieve_extend.c ****         if (step > 64) break;
 14973              		.loc 1 888 9 view .LVU5300
 14974              	# sieve_extend.c:888:         step  = prime * 2 + 1;
 888:sieve_extend.c ****         if (step > 64) break;
 14975              		.loc 1 888 15 is_stmt 0 view .LVU5301
 14976 4df0 49FFC1   		inc	r9	# step
 14977              	.LVL1050:
 889:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14978              		.loc 1 889 9 is_stmt 1 view .LVU5302
 14979              	# sieve_extend.c:889:         if (step > 64) break;
 889:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 14980              		.loc 1 889 12 is_stmt 0 view .LVU5303
 14981 4df3 4983F940 		cmp	r9, 64	# step,
 14982 4df7 0F861BF5 		jbe	.L738	#,
 14982      FFFF
 14983 4dfd E946FCFF 		jmp	.L801	#
 14983      FF
 14984              	.LVL1051:
 14985              		.p2align 4,,10
 14986 4e02 660F1F44 		.p2align 3
 14986      0000
 14987              	.L760:
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14988              		.loc 1 896 41 is_stmt 1 view .LVU5304
 14989              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14990              		.loc 1 896 61 is_stmt 0 view .LVU5305
 14991 4e08 4A8D041F 		lea	rax, [rdi+r11]	# _440,
 14992              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14993              		.loc 1 896 102 view .LVU5306
 14994 4e0c 31D2     		xor	edx, edx	# tmp911
 14995              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 14996              		.loc 1 896 69 view .LVU5307
 14997 4e0e 4801C7   		add	rdi, rax	# tmp909, _440
 14998              	.LVL1052:
 14999              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 15000              		.loc 1 896 102 view .LVU5308
 15001 4e11 49F7F2   		div	r10	# step
 15002              	# sieve_extend.c:896:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 15003              		.loc 1 896 47 view .LVU5309
 15004 4e14 4889F8   		mov	rax, rdi	# tmp909, tmp909
 15005 4e17 4829D0   		sub	rax, rdx	# tmp909, tmp911
 15006              	.LVL1053:
 896:sieve_extend.c ****         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_stop)
 15007              		.loc 1 896 47 view .LVU5310
 15008 4e1a E9FAF5FF 		jmp	.L761	#
 15008      FF
 15009              	.LVL1054:
 15010              	.L1593:
GAS LISTING /tmp/ccW0oq2B.s 			page 402


 15011              	.LBB628:
 15012              	.LBB629:
 119:sieve_extend.c **** }
 15013              		.loc 1 119 4 is_stmt 1 view .LVU5311
 119:sieve_extend.c **** }
 15014              		.loc 1 119 4 is_stmt 0 view .LVU5312
 15015              	.LBE629:
 15016              	.LBE628:
 926:sieve_extend.c ****     }
 15017              		.loc 1 926 9 is_stmt 1 view .LVU5313
 15018              	# sieve_extend.c:926:         start = prime * prime * 2 + prime * 2;
 926:sieve_extend.c ****     }
 15019              		.loc 1 926 35 is_stmt 0 view .LVU5314
 15020 4e1f 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15021              	# sieve_extend.c:926:         start = prime * prime * 2 + prime * 2;
 926:sieve_extend.c ****     }
 15022              		.loc 1 926 15 view .LVU5315
 15023 4e23 4C89D1   		mov	rcx, r10	# tmp1017, _491
 15024 4e26 480FAFCE 		imul	rcx, rsi	# tmp1017, prime
 15025 4e2a 4801C9   		add	rcx, rcx	# tmp1018, tmp1017
 15026              	.LVL1055:
 15027 4e2d 0F1F00   		.p2align 4,,10
 15028              		.p2align 3
 15029              	.L1570:
 921:sieve_extend.c ****         step  = prime * 2 + 1;
 15030              		.loc 1 921 11 is_stmt 1 view .LVU5316
 15031 4e30 4939CF   		cmp	r15, rcx	# block_stop, index
 15032 4e33 0F829BF3 		jb	.L1567	#,
 15032      FFFF
 15033 4e39 0F1F8000 		.p2align 4,,10
 15033      000000
 15034              		.p2align 3
 15035              	.L786:
 922:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 15036              		.loc 1 922 9 view .LVU5317
 15037              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15038              		.loc 1 923 12 is_stmt 0 view .LVU5318
 15039 4e40 488B4424 		mov	rax, QWORD PTR 120[rsp]	# block_start, %sfp
 15039      78
 15040              	# sieve_extend.c:922:         step  = prime * 2 + 1;
 922:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 15041              		.loc 1 922 15 view .LVU5319
 15042 4e45 4C8D4436 		lea	r8, 1[rsi+rsi]	# step,
 15042      01
 15043              	.LVL1056:
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15044              		.loc 1 923 9 is_stmt 1 view .LVU5320
 15045              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15046              		.loc 1 923 12 is_stmt 0 view .LVU5321
 15047 4e4a 4939C2   		cmp	r10, rax	# _491, block_start
 15048 4e4d 770F     		ja	.L795	#,
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15049              		.loc 1 923 41 is_stmt 1 view .LVU5322
 15050              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
GAS LISTING /tmp/ccW0oq2B.s 			page 403


 15051              		.loc 1 923 61 is_stmt 0 view .LVU5323
 15052 4e4f 4801F0   		add	rax, rsi	# _492, prime
 15053              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15054              		.loc 1 923 102 view .LVU5324
 15055 4e52 31D2     		xor	edx, edx	# tmp996
 15056              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15057              		.loc 1 923 69 view .LVU5325
 15058 4e54 488D0C30 		lea	rcx, [rax+rsi]	# tmp994,
 15059              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15060              		.loc 1 923 102 view .LVU5326
 15061 4e58 49F7F0   		div	r8	# step
 15062              	.LVL1057:
 15063              	# sieve_extend.c:923:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 923:sieve_extend.c ****         setBitsTrue_smallRange(bitarray, start, step, block_stop);
 15064              		.loc 1 923 47 view .LVU5327
 15065 4e5b 4829D1   		sub	rcx, rdx	# index, tmp996
 15066              	.LVL1058:
 15067              	.L795:
 15068              	.LBB631:
 15069              	.LBB632:
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15070              		.loc 1 329 50 is_stmt 1 view .LVU5328
 15071              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15072              		.loc 1 329 5 is_stmt 0 view .LVU5329
 15073 4e5e 4C39F9   		cmp	rcx, r15	# index, block_stop
 15074 4e61 0F87D900 		ja	.L799	#,
 15074      0000
 15075              	.L796:
 330:sieve_extend.c ****     }
 15076              		.loc 1 330 9 is_stmt 1 view .LVU5330
 15077              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15078              		.loc 1 330 36 is_stmt 0 view .LVU5331
 15079 4e67 4889CE   		mov	rsi, rcx	# tmp998, index
 15080              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15081              		.loc 1 330 39 view .LVU5332
 15082 4e6a C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1001, tmp1041, index
 15082      FD
 15083              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15084              		.loc 1 330 36 view .LVU5333
 15085 4e6f 48C1EE06 		shr	rsi, 6	# tmp998,
 15086              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15087              		.loc 1 329 77 view .LVU5334
 15088 4e73 4C01C1   		add	rcx, r8	# index, step
 15089              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15090              		.loc 1 330 36 view .LVU5335
 15091 4e76 49093CF4 		or	QWORD PTR [r12+rsi*8], rdi	# *_499, tmp1001
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15092              		.loc 1 329 71 is_stmt 1 view .LVU5336
GAS LISTING /tmp/ccW0oq2B.s 			page 404


 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15093              		.loc 1 329 50 view .LVU5337
 15094              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15095              		.loc 1 329 5 is_stmt 0 view .LVU5338
 15096 4e7a 4939CF   		cmp	r15, rcx	# block_stop, index
 15097 4e7d 0F82BD00 		jb	.L799	#,
 15097      0000
 330:sieve_extend.c ****     }
 15098              		.loc 1 330 9 is_stmt 1 view .LVU5339
 15099              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15100              		.loc 1 330 36 is_stmt 0 view .LVU5340
 15101 4e83 4989CB   		mov	r11, rcx	# tmp1143, index
 15102              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15103              		.loc 1 330 39 view .LVU5341
 15104 4e86 C442F1F7 		shlx	r14, r13, rcx	# tmp1146, tmp1041, index
 15104      F5
 15105              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15106              		.loc 1 330 36 view .LVU5342
 15107 4e8b 49C1EB06 		shr	r11, 6	# tmp1143,
 15108              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15109              		.loc 1 329 77 view .LVU5343
 15110 4e8f 4C01C1   		add	rcx, r8	# index, step
 15111              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15112              		.loc 1 330 36 view .LVU5344
 15113 4e92 4F0934DC 		or	QWORD PTR [r12+r11*8], r14	# *_499, tmp1146
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15114              		.loc 1 329 71 is_stmt 1 view .LVU5345
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15115              		.loc 1 329 50 view .LVU5346
 15116              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15117              		.loc 1 329 5 is_stmt 0 view .LVU5347
 15118 4e96 4939CF   		cmp	r15, rcx	# block_stop, index
 15119 4e99 0F82A100 		jb	.L799	#,
 15119      0000
 330:sieve_extend.c ****     }
 15120              		.loc 1 330 9 is_stmt 1 view .LVU5348
 15121              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15122              		.loc 1 330 36 is_stmt 0 view .LVU5349
 15123 4e9f 4989C9   		mov	r9, rcx	# tmp1148, index
 15124              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15125              		.loc 1 330 39 view .LVU5350
 15126 4ea2 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1151, tmp1041, index
 15126      DD
 15127              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15128              		.loc 1 330 36 view .LVU5351
 15129 4ea7 49C1E906 		shr	r9, 6	# tmp1148,
 15130              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
GAS LISTING /tmp/ccW0oq2B.s 			page 405


 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15131              		.loc 1 329 77 view .LVU5352
 15132 4eab 4C01C1   		add	rcx, r8	# index, step
 15133              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15134              		.loc 1 330 36 view .LVU5353
 15135 4eae 4B091CCC 		or	QWORD PTR [r12+r9*8], rbx	# *_499, tmp1151
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15136              		.loc 1 329 71 is_stmt 1 view .LVU5354
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15137              		.loc 1 329 50 view .LVU5355
 15138              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15139              		.loc 1 329 5 is_stmt 0 view .LVU5356
 15140 4eb2 4939CF   		cmp	r15, rcx	# block_stop, index
 15141 4eb5 0F828500 		jb	.L799	#,
 15141      0000
 330:sieve_extend.c ****     }
 15142              		.loc 1 330 9 is_stmt 1 view .LVU5357
 15143              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15144              		.loc 1 330 36 is_stmt 0 view .LVU5358
 15145 4ebb 4889C8   		mov	rax, rcx	# tmp1153, index
 15146              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15147              		.loc 1 330 39 view .LVU5359
 15148 4ebe C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1156, tmp1041, index
 15148      D5
 15149              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15150              		.loc 1 330 36 view .LVU5360
 15151 4ec3 48C1E806 		shr	rax, 6	# tmp1153,
 15152              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15153              		.loc 1 329 77 view .LVU5361
 15154 4ec7 4C01C1   		add	rcx, r8	# index, step
 15155              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15156              		.loc 1 330 36 view .LVU5362
 15157 4eca 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_499, tmp1156
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15158              		.loc 1 329 71 is_stmt 1 view .LVU5363
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15159              		.loc 1 329 50 view .LVU5364
 15160              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15161              		.loc 1 329 5 is_stmt 0 view .LVU5365
 15162 4ece 4939CF   		cmp	r15, rcx	# block_stop, index
 15163 4ed1 726D     		jb	.L799	#,
 330:sieve_extend.c ****     }
 15164              		.loc 1 330 9 is_stmt 1 view .LVU5366
 15165              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15166              		.loc 1 330 36 is_stmt 0 view .LVU5367
 15167 4ed3 4889CE   		mov	rsi, rcx	# tmp1158, index
 15168              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 406


 15169              		.loc 1 330 39 view .LVU5368
 15170 4ed6 C4C2F1F7 		shlx	rdi, r13, rcx	# tmp1161, tmp1041, index
 15170      FD
 15171              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15172              		.loc 1 330 36 view .LVU5369
 15173 4edb 48C1EE06 		shr	rsi, 6	# tmp1158,
 15174              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15175              		.loc 1 329 77 view .LVU5370
 15176 4edf 4C01C1   		add	rcx, r8	# index, step
 15177              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15178              		.loc 1 330 36 view .LVU5371
 15179 4ee2 49093CF4 		or	QWORD PTR [r12+rsi*8], rdi	# *_499, tmp1161
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15180              		.loc 1 329 71 is_stmt 1 view .LVU5372
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15181              		.loc 1 329 50 view .LVU5373
 15182              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15183              		.loc 1 329 5 is_stmt 0 view .LVU5374
 15184 4ee6 4939CF   		cmp	r15, rcx	# block_stop, index
 15185 4ee9 7255     		jb	.L799	#,
 330:sieve_extend.c ****     }
 15186              		.loc 1 330 9 is_stmt 1 view .LVU5375
 15187              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15188              		.loc 1 330 36 is_stmt 0 view .LVU5376
 15189 4eeb 4989CB   		mov	r11, rcx	# tmp1163, index
 15190              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15191              		.loc 1 330 39 view .LVU5377
 15192 4eee C442F1F7 		shlx	r14, r13, rcx	# tmp1166, tmp1041, index
 15192      F5
 15193              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15194              		.loc 1 330 36 view .LVU5378
 15195 4ef3 49C1EB06 		shr	r11, 6	# tmp1163,
 15196              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15197              		.loc 1 329 77 view .LVU5379
 15198 4ef7 4C01C1   		add	rcx, r8	# index, step
 15199              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15200              		.loc 1 330 36 view .LVU5380
 15201 4efa 4F0934DC 		or	QWORD PTR [r12+r11*8], r14	# *_499, tmp1166
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15202              		.loc 1 329 71 is_stmt 1 view .LVU5381
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15203              		.loc 1 329 50 view .LVU5382
 15204              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15205              		.loc 1 329 5 is_stmt 0 view .LVU5383
 15206 4efe 4939CF   		cmp	r15, rcx	# block_stop, index
 15207 4f01 723D     		jb	.L799	#,
 330:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 407


 15208              		.loc 1 330 9 is_stmt 1 view .LVU5384
 15209              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15210              		.loc 1 330 36 is_stmt 0 view .LVU5385
 15211 4f03 4989C9   		mov	r9, rcx	# tmp1168, index
 15212              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15213              		.loc 1 330 39 view .LVU5386
 15214 4f06 C4C2F1F7 		shlx	rbx, r13, rcx	# tmp1171, tmp1041, index
 15214      DD
 15215              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15216              		.loc 1 330 36 view .LVU5387
 15217 4f0b 49C1E906 		shr	r9, 6	# tmp1168,
 15218              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15219              		.loc 1 329 77 view .LVU5388
 15220 4f0f 4C01C1   		add	rcx, r8	# index, step
 15221              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15222              		.loc 1 330 36 view .LVU5389
 15223 4f12 4B091CCC 		or	QWORD PTR [r12+r9*8], rbx	# *_499, tmp1171
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15224              		.loc 1 329 71 is_stmt 1 view .LVU5390
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15225              		.loc 1 329 50 view .LVU5391
 15226              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15227              		.loc 1 329 5 is_stmt 0 view .LVU5392
 15228 4f16 4939CF   		cmp	r15, rcx	# block_stop, index
 15229 4f19 7225     		jb	.L799	#,
 330:sieve_extend.c ****     }
 15230              		.loc 1 330 9 is_stmt 1 view .LVU5393
 15231              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15232              		.loc 1 330 36 is_stmt 0 view .LVU5394
 15233 4f1b 4889C8   		mov	rax, rcx	# tmp1173, index
 15234              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15235              		.loc 1 330 39 view .LVU5395
 15236 4f1e C4C2F1F7 		shlx	rdx, r13, rcx	# tmp1176, tmp1041, index
 15236      D5
 15237              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15238              		.loc 1 330 36 view .LVU5396
 15239 4f23 48C1E806 		shr	rax, 6	# tmp1173,
 15240              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15241              		.loc 1 329 77 view .LVU5397
 15242 4f27 4C01C1   		add	rcx, r8	# index, step
 15243              	# sieve_extend.c:330:         bitarray[wordindex(index)] |= markmask(index);
 330:sieve_extend.c ****     }
 15244              		.loc 1 330 36 view .LVU5398
 15245 4f2a 490914C4 		or	QWORD PTR [r12+rax*8], rdx	# *_499, tmp1176
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15246              		.loc 1 329 71 is_stmt 1 view .LVU5399
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccW0oq2B.s 			page 408


 15247              		.loc 1 329 50 view .LVU5400
 15248              	# sieve_extend.c:329:     for (register counter_t index = range_start; index <= range_stop; index +
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15249              		.loc 1 329 5 is_stmt 0 view .LVU5401
 15250 4f2e 4939CF   		cmp	r15, rcx	# block_stop, index
 15251 4f31 0F8330FF 		jnb	.L796	#,
 15251      FFFF
 15252 4f37 660F1F84 		.p2align 4,,10
 15252      00000000 
 15252      00
 15253              		.p2align 3
 15254              	.L799:
 329:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15255              		.loc 1 329 5 view .LVU5402
 15256              	.LBE632:
 15257              	.LBE631:
 925:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15258              		.loc 1 925 9 is_stmt 1 view .LVU5403
 15259              	.LVL1059:
 15260              	.LBB633:
 15261              	.LBI628:
 102:sieve_extend.c ****     // #pragma ivdep
 15262              		.loc 1 102 25 view .LVU5404
 15263              	.LBB630:
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15264              		.loc 1 107 4 view .LVU5405
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15265              		.loc 1 108 4 view .LVU5406
 15266              	# sieve_extend.c:107:    register counter_t index_word = wordindex(index);
 107:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15267              		.loc 1 107 23 is_stmt 0 view .LVU5407
 15268 4f40 4C89D6   		mov	rsi, r10	# index_word, _491
 15269 4f43 48C1EE06 		shr	rsi, 6	# index_word,
 15270              	.LVL1060:
 15271              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15272              		.loc 1 109 89 view .LVU5408
 15273 4f47 498B3CF4 		mov	rdi, QWORD PTR [r12+rsi*8]	# *_814, *_814
 15274              	# sieve_extend.c:108:    bitshift_t index_bit  = bitindex_calc(index);
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15275              		.loc 1 108 15 view .LVU5409
 15276 4f4b 4D89D0   		mov	r8, r10	# index_bit, _491
 15277              	.LVL1061:
 108:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15278              		.loc 1 108 15 view .LVU5410
 15279 4f4e 4183E03F 		and	r8d, 63	# index_bit,
 15280              	.LVL1062:
 109:sieve_extend.c ****    index += distance;
 15281              		.loc 1 109 4 is_stmt 1 view .LVU5411
 15282              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15283              		.loc 1 109 25 is_stmt 0 view .LVU5412
 15284 4f52 4531F6   		xor	r14d, r14d	# distance
 15285              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15286              		.loc 1 109 89 view .LVU5413
 15287 4f55 C462BBF7 		shrx	r11, rdi, r8	# tmp1005, *_814, index_bit
GAS LISTING /tmp/ccW0oq2B.s 			page 409


 15287      DF
 15288              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15289              		.loc 1 109 66 view .LVU5414
 15290 4f5a 49F7D3   		not	r11	# tmp1007
 15291              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15292              		.loc 1 109 25 view .LVU5415
 15293 4f5d F34D0FBC 		tzcnt	r14, r11	# distance, tmp1007
 15293      F3
 15294              	.LVL1063:
 110:sieve_extend.c ****    distance += index_bit;
 15295              		.loc 1 110 4 is_stmt 1 view .LVU5416
 15296              	# sieve_extend.c:109:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 109:sieve_extend.c ****    index += distance;
 15297              		.loc 1 109 76 is_stmt 0 view .LVU5417
 15298 4f62 488D0CF5 		lea	rcx, 0[0+rsi*8]	# _813,
 15298      00000000 
 15299              	# sieve_extend.c:110:    index += distance;
 110:sieve_extend.c ****    distance += index_bit;
 15300              		.loc 1 110 10 view .LVU5418
 15301 4f6a 4B8D3432 		lea	rsi, [r10+r14]	# prime,
 15302              	.LVL1064:
 111:sieve_extend.c **** 
 15303              		.loc 1 111 4 is_stmt 1 view .LVU5419
 113:sieve_extend.c ****        index_word++;
 15304              		.loc 1 113 4 view .LVU5420
 113:sieve_extend.c ****        index_word++;
 15305              		.loc 1 113 10 view .LVU5421
 15306              	# sieve_extend.c:111:    distance += index_bit;
 111:sieve_extend.c **** 
 15307              		.loc 1 111 13 is_stmt 0 view .LVU5422
 15308 4f6e 4D01C6   		add	r14, r8	# distance, index_bit
 15309              	.LVL1065:
 15310              	# sieve_extend.c:113:    while (distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 113:sieve_extend.c ****        index_word++;
 15311              		.loc 1 113 10 view .LVU5423
 15312 4f71 4983FE40 		cmp	r14, 64	# distance,
 15313 4f75 0F85A4FE 		jne	.L1593	#,
 15313      FFFF
 15314              	.LVL1066:
 114:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15315              		.loc 1 114 8 is_stmt 1 view .LVU5424
 115:sieve_extend.c ****        index += distance;
 15316              		.loc 1 115 8 view .LVU5425
 15317              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15318              		.loc 1 115 48 is_stmt 0 view .LVU5426
 15319 4f7b 4D8B4C0C 		mov	r9, QWORD PTR 8[r12+rcx]	# *_826, *_826
 15319      08
 15320              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15321              		.loc 1 115 17 view .LVU5427
 15322 4f80 31DB     		xor	ebx, ebx	# distance
 15323              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15324              		.loc 1 115 48 view .LVU5428
GAS LISTING /tmp/ccW0oq2B.s 			page 410


 15325 4f82 49F7D1   		not	r9	# tmp1010
 15326              	.LVL1067:
 116:sieve_extend.c ****    }
 15327              		.loc 1 116 8 is_stmt 1 view .LVU5429
 15328              	# sieve_extend.c:115:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 115:sieve_extend.c ****        index += distance;
 15329              		.loc 1 115 17 is_stmt 0 view .LVU5430
 15330 4f85 F3490FBC 		tzcnt	rbx, r9	# distance, tmp1010
 15330      D9
 15331              	.LVL1068:
 15332              	# sieve_extend.c:116:        index += distance;
 116:sieve_extend.c ****    }
 15333              		.loc 1 116 14 view .LVU5431
 15334 4f8a 4801DE   		add	rsi, rbx	# prime, distance
 15335              	.LVL1069:
 113:sieve_extend.c ****        index_word++;
 15336              		.loc 1 113 10 is_stmt 1 view .LVU5432
 119:sieve_extend.c **** }
 15337              		.loc 1 119 4 view .LVU5433
 119:sieve_extend.c **** }
 15338              		.loc 1 119 4 is_stmt 0 view .LVU5434
 15339              	.LBE630:
 15340              	.LBE633:
 926:sieve_extend.c ****     }
 15341              		.loc 1 926 9 is_stmt 1 view .LVU5435
 15342              	# sieve_extend.c:926:         start = prime * prime * 2 + prime * 2;
 926:sieve_extend.c ****     }
 15343              		.loc 1 926 35 is_stmt 0 view .LVU5436
 15344 4f8d 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15345              	# sieve_extend.c:926:         start = prime * prime * 2 + prime * 2;
 926:sieve_extend.c ****     }
 15346              		.loc 1 926 15 view .LVU5437
 15347 4f91 4C89D1   		mov	rcx, r10	# tmp1015, _491
 15348 4f94 480FAFCE 		imul	rcx, rsi	# tmp1015, prime
 15349 4f98 4801C9   		add	rcx, rcx	# index
 15350              	.LVL1070:
 921:sieve_extend.c ****         step  = prime * 2 + 1;
 15351              		.loc 1 921 11 is_stmt 1 view .LVU5438
 15352 4f9b 4939CF   		cmp	r15, rcx	# block_stop, index
 15353 4f9e 0F839CFE 		jnb	.L786	#,
 15353      FFFF
 15354 4fa4 488B4424 		mov	rax, QWORD PTR 80[rsp]	# <retval>, %sfp
 15354      50
 15355 4fa9 488B4008 		mov	rax, QWORD PTR 8[rax]	# _8, sieve_89->bits
 15356 4fad E9FEEDFF 		jmp	.L725	#
 15356      FF
 15357              	.LVL1071:
 15358              	.L1573:
 921:sieve_extend.c ****         step  = prime * 2 + 1;
 15359              		.loc 1 921 11 is_stmt 0 view .LVU5439
 15360 4fb2 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# <retval>, %sfp
 15360      50
 15361 4fb7 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, prime
 15361      40
 15362 4fbc 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# prephitmp_1898, sieve_89->bits
 15363              	.LVL1072:
 921:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccW0oq2B.s 			page 411


 15364              		.loc 1 921 11 view .LVU5440
 15365 4fc0 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# patternsize_bits, %sfp
 15365      78
 15366 4fc5 4C897424 		mov	QWORD PTR 104[rsp], r14	# %sfp, prephitmp_1898
 15366      68
 15367              	.LVL1073:
 921:sieve_extend.c ****         step  = prime * 2 + 1;
 15368              		.loc 1 921 11 view .LVU5441
 15369              	.LBE636:
 15370              	.LBE643:
 15371              	.LBE645:
 15372              	.LBB646:
 15373              	.LBB536:
 15374              	.LBB533:
 15375              	# sieve_extend.c:960:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 960:sieve_extend.c **** 
 15376              		.loc 1 960 12 view .LVU5442
 15377 4fca 488B7424 		mov	rsi, QWORD PTR 88[rsp]	# block$pattern_start, %sfp
 15377      58
 15378              	.LVL1074:
 960:sieve_extend.c **** 
 15379              		.loc 1 960 12 view .LVU5443
 15380 4fcf E933E8FF 		jmp	.L669	#
 15380      FF
 15381              	.LVL1075:
 15382              	.L805:
 15383              	.LBB526:
 15384              	.LBB506:
 15385              	# sieve_extend.c:249: 	register bitword_t pattern = SAFE_SHIFTBIT;
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 15386              		.loc 1 249 21 view .LVU5444
 15387 4fd4 B9010000 		mov	ecx, 1	# pattern,
 15387      00
 15388 4fd9 E982DFFF 		jmp	.L675	#
 15388      FF
 15389              	.LVL1076:
 15390              	.L717:
 249:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE; patternsize += patternsize) patte
 15391              		.loc 1 249 21 view .LVU5445
 15392              	.LBE506:
 15393              	.LBE526:
 15394              	.LBE533:
 15395              	.LBE536:
 15396              	.LBE646:
 15397              	.LBB647:
 15398              	.LBB542:
 856:sieve_extend.c **** }
 15399              		.loc 1 856 37 is_stmt 1 view .LVU5446
 15400 4fde E84DC0FF 		call	extendSieve_aligned	#
 15400      FF
 15401              	.LVL1077:
 856:sieve_extend.c **** }
 15402              		.loc 1 856 37 is_stmt 0 view .LVU5447
 15403 4fe3 E954E8FF 		jmp	.L715	#
 15403      FF
 15404              	.LVL1078:
 15405              	.L1583:
GAS LISTING /tmp/ccW0oq2B.s 			page 412


 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15406              		.loc 1 854 37 is_stmt 1 view .LVU5448
 15407 4fe8 E843C5FF 		call	extendSieve_shiftleft	#
 15407      FF
 15408              	.LVL1079:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15409              		.loc 1 854 37 is_stmt 0 view .LVU5449
 15410 4fed E94AE8FF 		jmp	.L715	#
 15410      FF
 15411              	.LVL1080:
 15412              	.L1571:
 854:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 15413              		.loc 1 854 37 view .LVU5450
 15414              	.LBE542:
 15415              	.LBE647:
 15416              	.LBB648:
 15417              	.LBB537:
 15418              	# sieve_extend.c:940:     register counter_t prime   = 0;
 940:sieve_extend.c ****     counter_t patternsize_bits = 1;
 15419              		.loc 1 940 24 view .LVU5451
 15420 4ff2 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 15420      40000000 
 15420      00
 15421              	# sieve_extend.c:945:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 945:sieve_extend.c **** 
 15422              		.loc 1 945 18 view .LVU5452
 15423 4ffb 31D2     		xor	edx, edx	# block$pattern_size
 15424 4ffd E9B8E1FF 		jmp	.L662	#
 15424      FF
 15425              	.LVL1081:
 15426              	.L1592:
 945:sieve_extend.c **** 
 15427              		.loc 1 945 18 view .LVU5453
 15428              	.LBE537:
 15429              	.LBE648:
 15430              	.LBB649:
 15431              	.LBB644:
 15432              	.LBB637:
 15433              	.LBB634:
 15434              	.LBB621:
 119:sieve_extend.c **** }
 15435              		.loc 1 119 4 is_stmt 1 view .LVU5454
 119:sieve_extend.c **** }
 15436              		.loc 1 119 4 is_stmt 0 view .LVU5455
 15437              	.LBE621:
 15438              	.LBE634:
 918:sieve_extend.c ****     }
 15439              		.loc 1 918 9 is_stmt 1 view .LVU5456
 15440              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15441              		.loc 1 918 35 is_stmt 0 view .LVU5457
 15442 5002 4C8D5601 		lea	r10, 1[rsi]	# _491,
 15443              	# sieve_extend.c:918:         start = prime * prime * 2 + prime * 2;
 918:sieve_extend.c ****     }
 15444              		.loc 1 918 15 view .LVU5458
 15445 5006 4C89D1   		mov	rcx, r10	# tmp991, _491
 15446 5009 480FAFCE 		imul	rcx, rsi	# tmp991, prime
GAS LISTING /tmp/ccW0oq2B.s 			page 413


 15447 500d 4801C9   		add	rcx, rcx	# tmp992, tmp991
 15448              	.LVL1082:
 912:sieve_extend.c ****         step  = prime * 2 + 1;
 15449              		.loc 1 912 11 is_stmt 1 view .LVU5459
 15450 5010 4939CF   		cmp	r15, rcx	# block_stop, index
 15451 5013 0F832FFA 		jnb	.L801	#,
 15451      FFFF
 15452 5019 E9B6F1FF 		jmp	.L1567	#
 15452      FF
 15453              	.LBE637:
 15454              	.LBE644:
 15455              	.LBE649:
 15456              		.cfi_endproc
 15457              	.LFE77:
 15459 501e 6690     		.p2align 4
 15461              	tune_benchmark:
 15462              	.LVL1083:
 15463              	.LFB84:
1103:sieve_extend.c **** 
1104:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 15464              		.loc 1 1104 94 view -0
 15465              		.cfi_startproc
 15466              		.loc 1 1104 94 is_stmt 0 view .LVU5461
 15467 5020 4154     		push	r12	#
 15468              		.cfi_def_cfa_offset 16
 15469              		.cfi_offset 12, -16
 15470              	# sieve_extend.c:1110:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1105:sieve_extend.c ****     counter_t passes = 0;
1106:sieve_extend.c ****     double elapsed_time = 0;
1107:sieve_extend.c ****     struct timespec start_time,end_time;
1108:sieve_extend.c ****     struct sieve_state *sieve_instance;
1109:sieve_extend.c **** 
1110:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 15471              		.loc 1 1110 44 view .LVU5462
 15472 5022 486BF658 		imul	rsi, rsi, 88	# tmp112, tmp147,
 15473              	.LVL1084:
 15474              	# sieve_extend.c:1105:     counter_t passes = 0;
1105:sieve_extend.c ****     counter_t passes = 0;
 15475              		.loc 1 1105 15 view .LVU5463
 15476 5026 4531E4   		xor	r12d, r12d	# passes
 15477              	# sieve_extend.c:1104: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1104:sieve_extend.c ****     counter_t passes = 0;
 15478              		.loc 1 1104 94 view .LVU5464
 15479 5029 55       		push	rbp	#
 15480              		.cfi_def_cfa_offset 24
 15481              		.cfi_offset 6, -24
 15482 502a 53       		push	rbx	#
 15483              		.cfi_def_cfa_offset 32
 15484              		.cfi_offset 3, -32
 15485              	# sieve_extend.c:1110:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 15486              		.loc 1 1110 44 view .LVU5465
 15487 502b 488D1C37 		lea	rbx, [rdi+rsi]	# _2,
 15488              	# sieve_extend.c:1113:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1111:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1112:sieve_extend.c **** 
1113:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15489              		.loc 1 1113 5 view .LVU5466
GAS LISTING /tmp/ccW0oq2B.s 			page 414


 15490 502f BF010000 		mov	edi, 1	#,
 15490      00
 15491              	.LVL1085:
 15492              	# sieve_extend.c:1104: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1104:sieve_extend.c ****     counter_t passes = 0;
 15493              		.loc 1 1104 94 view .LVU5467
 15494 5034 4883EC30 		sub	rsp, 48	#,
 15495              		.cfi_def_cfa_offset 80
 15496              	# sieve_extend.c:1104: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1104:sieve_extend.c ****     counter_t passes = 0;
 15497              		.loc 1 1104 94 view .LVU5468
 15498 5038 64488B04 		mov	rax, QWORD PTR fs:40	# tmp162, MEM[(<address-space-1> long unsigned int *)40B]
 15498      25280000 
 15498      00
 15499 5041 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7216, tmp162
 15499      28
 15500 5046 31C0     		xor	eax, eax	# tmp162
1105:sieve_extend.c ****     double elapsed_time = 0;
 15501              		.loc 1 1105 5 is_stmt 1 view .LVU5469
 15502              	.LVL1086:
1106:sieve_extend.c ****     struct timespec start_time,end_time;
 15503              		.loc 1 1106 5 view .LVU5470
1107:sieve_extend.c ****     struct sieve_state *sieve_instance;
 15504              		.loc 1 1107 5 view .LVU5471
1108:sieve_extend.c **** 
 15505              		.loc 1 1108 5 view .LVU5472
1110:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15506              		.loc 1 1110 5 view .LVU5473
 15507              	# sieve_extend.c:1111:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1111:sieve_extend.c **** 
 15508              		.loc 1 1111 30 is_stmt 0 view .LVU5474
 15509 5048 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 15510              	# sieve_extend.c:1110:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1110:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15511              		.loc 1 1110 29 view .LVU5475
 15512 504c 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 15513              	# sieve_extend.c:1113:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15514              		.loc 1 1113 5 view .LVU5476
 15515 5050 4889E6   		mov	rsi, rsp	# tmp115,
 15516              	# sieve_extend.c:1110:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1110:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15517              		.loc 1 1110 29 view .LVU5477
 15518 5053 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 15518      000000
1111:sieve_extend.c **** 
 15519              		.loc 1 1111 5 is_stmt 1 view .LVU5478
 15520              	# sieve_extend.c:1111:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1111:sieve_extend.c **** 
 15521              		.loc 1 1111 30 is_stmt 0 view .LVU5479
 15522 505a 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 15522      000000
 15523              		.loc 1 1113 5 is_stmt 1 view .LVU5480
 15524 5061 E8000000 		call	clock_gettime@PLT	#
 15524      00
 15525              	.LVL1087:
1114:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 15526              		.loc 1 1114 5 view .LVU5481
GAS LISTING /tmp/ccW0oq2B.s 			page 415


 15527              		.loc 1 1114 11 view .LVU5482
 15528 5066 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# elapsed_time
 15529 506a C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15529      38
 15530 506f C57B1015 		vmovsd	xmm10, QWORD PTR .LC3[rip]	# _56,
 15530      00000000 
 15531 5077 0F879000 		ja	.L1596	#,
 15531      0000
 15532 507d C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 15533 5081 EB76     		jmp	.L1595	#
 15534              	.LVL1088:
 15535              		.p2align 4,,10
 15536 5083 0F1F4400 		.p2align 3
 15536      00
 15537              	.L1599:
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15538              		.loc 1 1115 9 view .LVU5483
 15539              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 15540              		.loc 1 1115 26 is_stmt 0 view .LVU5484
 15541 5088 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 15542 508c 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 15543              	# sieve_extend.c:1117:         passes++;
1116:sieve_extend.c ****         delete_sieve(sieve_instance);
1117:sieve_extend.c ****         passes++;
 15544              		.loc 1 1117 15 view .LVU5485
 15545 508f 49FFC4   		inc	r12	# passes
 15546              	.LVL1089:
 15547              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15548              		.loc 1 1115 26 view .LVU5486
 15549 5092 E8E9D7FF 		call	sieve	#
 15549      FF
 15550              	.LVL1090:
 15551              	.LBB650:
 15552              	.LBB651:
 15553              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 15554              		.loc 1 97 5 view .LVU5487
 15555 5097 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_35->bitarray
 15556              	.LBE651:
 15557              	.LBE650:
 15558              	# sieve_extend.c:1115:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1115:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15559              		.loc 1 1115 26 view .LVU5488
 15560 509a 4889C5   		mov	rbp, rax	# sieve_instance, tmp148
 15561              	.LVL1091:
1116:sieve_extend.c ****         delete_sieve(sieve_instance);
 15562              		.loc 1 1116 9 is_stmt 1 view .LVU5489
 15563              	.LBB653:
 15564              	.LBI650:
  96:sieve_extend.c ****     free(sieve->bitarray);
 15565              		.loc 1 96 13 view .LVU5490
 15566              	.LBB652:
  97:sieve_extend.c ****     free(sieve);
 15567              		.loc 1 97 5 view .LVU5491
 15568 509d E8000000 		call	free@PLT	#
 15568      00
GAS LISTING /tmp/ccW0oq2B.s 			page 416


 15569              	.LVL1092:
  98:sieve_extend.c **** }
 15570              		.loc 1 98 5 view .LVU5492
 15571 50a2 4889EF   		mov	rdi, rbp	#, sieve_instance
 15572 50a5 E8000000 		call	free@PLT	#
 15572      00
 15573              	.LVL1093:
  98:sieve_extend.c **** }
 15574              		.loc 1 98 5 is_stmt 0 view .LVU5493
 15575              	.LBE652:
 15576              	.LBE653:
 15577              		.loc 1 1117 9 is_stmt 1 view .LVU5494
1118:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15578              		.loc 1 1118 9 view .LVU5495
 15579 50aa 488D7424 		lea	rsi, 16[rsp]	# tmp118,
 15579      10
 15580 50af BF010000 		mov	edi, 1	#,
 15580      00
 15581 50b4 E8000000 		call	clock_gettime@PLT	#
 15581      00
 15582              	.LVL1094:
1119:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15583              		.loc 1 1119 9 view .LVU5496
 15584              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15585              		.loc 1 1119 58 is_stmt 0 view .LVU5497
 15586 50b9 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp149
 15587 50bd C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 24[rsp]	# tmp150, tmp149, end_time.tv_nsec
 15587      542418
 15588              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15589              		.loc 1 1119 64 view .LVU5498
 15590 50c4 C4E1E32A 		vcvtsi2sd	xmm4, xmm3, QWORD PTR [rsp]	# tmp151, tmp149, start_time.tv_sec
 15590      2424
 15591              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15592              		.loc 1 1119 40 view .LVU5499
 15593 50ca C4E1E32A 		vcvtsi2sd	xmm7, xmm3, QWORD PTR 16[rsp]	# tmp153, tmp149, end_time.tv_sec
 15593      7C2410
 15594              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15595              		.loc 1 1119 58 view .LVU5500
 15596 50d1 C5F928CA 		vmovapd	xmm1, xmm2	# tmp119, tmp150
 15597              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15598              		.loc 1 1119 104 view .LVU5501
 15599 50d5 C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 8[rsp]	# tmp152, tmp149, start_time.tv_nsec
 15599      542408
 15600 50dc C4E2D99B 		vfmsub132sd	xmm1, xmm4, QWORD PTR .LC4[rip]	# tmp119, tmp120,
 15600      0D000000 
 15600      00
 15601 50e5 C4E2E9BD 		vfnmadd231sd	xmm7, xmm2, QWORD PTR .LC4[rip]	# _61, tmp122,
 15601      3D000000 
 15601      00
 15602              	# sieve_extend.c:1119:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15603              		.loc 1 1119 22 view .LVU5502
 15604 50ee C5F358C7 		vaddsd	xmm0, xmm1, xmm7	# elapsed_time, _60, _61
 15605              	.LVL1095:
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15606              		.loc 1 1114 11 is_stmt 1 view .LVU5503
 15607 50f2 C5F92F43 		vcomisd	xmm0, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15607      38
GAS LISTING /tmp/ccW0oq2B.s 			page 417


 15608 50f7 7706     		ja	.L1611	#,
 15609              	.LVL1096:
 15610              	.L1595:
 15611              	# sieve_extend.c:1114:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15612              		.loc 1 1114 79 is_stmt 0 discriminator 1 view .LVU5504
 15613 50f9 4C396330 		cmp	QWORD PTR 48[rbx], r12	# _2->sample_max, passes
 15614 50fd 7789     		ja	.L1599	#,
 15615              	.L1611:
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15616              		.loc 1 1114 79 discriminator 1 view .LVU5505
 15617 50ff 4D85E4   		test	r12, r12	# passes
 15618 5102 7834     		js	.L1600	#,
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15619              		.loc 1 1114 79 discriminator 1 view .LVU5506
 15620 5104 C441E32A 		vcvtsi2sd	xmm9, xmm3, r12	# tmp156, tmp149, passes
 15620      CC
 15621              	.L1601:
1114:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15622              		.loc 1 1114 79 discriminator 1 view .LVU5507
 15623 5109 C5335ED0 		vdivsd	xmm10, xmm9, xmm0	# _56, tmp129, elapsed_time
 15624              	.LVL1097:
 15625              	.L1596:
1120:sieve_extend.c ****     }
1121:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 15626              		.loc 1 1121 5 is_stmt 1 view .LVU5508
 15627              	# sieve_extend.c:1121:     tuning_result[tuning_result_index].passes = passes;
 15628              		.loc 1 1121 47 is_stmt 0 view .LVU5509
 15629 510d 4C896340 		mov	QWORD PTR 64[rbx], r12	# _2->passes, passes
1122:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15630              		.loc 1 1122 5 is_stmt 1 view .LVU5510
1123:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 15631              		.loc 1 1123 5 view .LVU5511
 15632              	# sieve_extend.c:1122:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
1122:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15633              		.loc 1 1122 53 is_stmt 0 view .LVU5512
 15634 5111 C4417914 		vunpcklpd	xmm11, xmm0, xmm10	# tmp133, elapsed_time, _56
 15634      DA
 15635 5116 C578115B 		vmovups	XMMWORD PTR 72[rbx], xmm11	# MEM[(double *)_2 + 72B], tmp133
 15635      48
 15636              	# sieve_extend.c:1124: }
1124:sieve_extend.c **** }
 15637              		.loc 1 1124 1 view .LVU5513
 15638 511b 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp163, D.7216
 15638      28
 15639 5120 64483304 		xor	rax, QWORD PTR fs:40	# tmp163, MEM[(<address-space-1> long unsigned int *)40B]
 15639      25280000 
 15639      00
 15640 5129 7528     		jne	.L1612	#,
 15641 512b 4883C430 		add	rsp, 48	#,
 15642              		.cfi_remember_state
 15643              		.cfi_def_cfa_offset 32
 15644 512f 5B       		pop	rbx	#
 15645              		.cfi_def_cfa_offset 24
 15646 5130 5D       		pop	rbp	#
 15647              		.cfi_def_cfa_offset 16
 15648 5131 415C     		pop	r12	#
GAS LISTING /tmp/ccW0oq2B.s 			page 418


 15649              		.cfi_def_cfa_offset 8
 15650 5133 C3       		ret	
 15651              	.LVL1098:
 15652              		.p2align 4,,10
 15653 5134 0F1F4000 		.p2align 3
 15654              	.L1600:
 15655              		.cfi_restore_state
 15656              		.loc 1 1124 1 view .LVU5514
 15657 5138 4C89E1   		mov	rcx, r12	# tmp131, passes
 15658 513b 4C89E7   		mov	rdi, r12	# tmp132, passes
 15659 513e 48D1E9   		shr	rcx	# tmp131
 15660 5141 83E701   		and	edi, 1	# tmp132,
 15661 5144 4809F9   		or	rcx, rdi	# tmp145, tmp132
 15662 5147 C461E32A 		vcvtsi2sd	xmm8, xmm3, rcx	# tmp157, tmp149, tmp145
 15662      C1
 15663 514c C4413B58 		vaddsd	xmm9, xmm8, xmm8	# tmp129, tmp130, tmp130
 15663      C8
 15664 5151 EBB6     		jmp	.L1601	#
 15665              	.LVL1099:
 15666              	.L1612:
 15667              		.loc 1 1124 1 view .LVU5515
 15668 5153 E8000000 		call	__stack_chk_fail@PLT	#
 15668      00
 15669              	.LVL1100:
 15670              		.cfi_endproc
 15671              	.LFE84:
 15673 5158 0F1F8400 		.p2align 4
 15673      00000000 
 15674              		.globl	shiftvec
 15676              	shiftvec:
 15677              	.LVL1101:
 15678              	.LFB68:
 567:sieve_extend.c ****     int i = 0;
 15679              		.loc 1 567 1 is_stmt 1 view -0
 15680              		.cfi_startproc
 567:sieve_extend.c ****     int i = 0;
 15681              		.loc 1 567 1 is_stmt 0 view .LVU5517
 15682 5160 F30F1EFA 		endbr64	
 568:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 15683              		.loc 1 568 5 is_stmt 1 view .LVU5518
 15684              	.LVL1102:
 570:sieve_extend.c ****     {
 15685              		.loc 1 570 5 view .LVU5519
 570:sieve_extend.c ****     {
 15686              		.loc 1 570 12 view .LVU5520
 15687              	# sieve_extend.c:570:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 570:sieve_extend.c ****     {
 15688              		.loc 1 570 5 is_stmt 0 view .LVU5521
 15689 5164 83FA04   		cmp	edx, 4	# size,
 15690 5167 0F8E8A03 		jle	.L1660	#,
 15690      0000
 15691 516d 41BB4000 		mov	r11d, 64	# tmp134,
 15691      0000
 15692              	.LBB654:
 15693              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15694              		.loc 1 573 25 view .LVU5522
GAS LISTING /tmp/ccW0oq2B.s 			page 419


 15695 5173 C5FE6F1E 		vmovdqu	ymm3, YMMWORD PTR [rsi]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[base
 15696 5177 4489D8   		mov	eax, r11d	# _4, tmp134
 15697 517a 29C8     		sub	eax, ecx	# _4, shift
 15698 517c C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 15698      C0
 15699 5181 C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 15700 5185 C4E3FD00 		vpermq	ymm2, ymm3, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 15700      D355
 15701              	.LBE654:
 15702              	.LBB655:
 15703              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15704              		.loc 1 575 34 view .LVU5523
 15705 518b C5EDD3E0 		vpsrlq	ymm4, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 15706              	.LBE655:
 15707              	.LBB656:
 15708              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15709              		.loc 1 573 34 view .LVU5524
 15710 518f C5E5F3E9 		vpsllq	ymm5, ymm3, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 15711 5193 448D4AFB 		lea	r9d, -5[rdx]	# tmp135,
 15712 5197 41C1E902 		shr	r9d, 2	# _80,
 15713 519b 4589CB   		mov	r11d, r9d	# tmp175, _80
 15714              	.LBE656:
 15715              	.LBB657:
 15716              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15717              		.loc 1 575 22 view .LVU5525
 15718 519e C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# vect__58.683, vect__57.678, vect__104.682
 15719 51a2 458D4101 		lea	r8d, 1[r9]	# tmp172,
 15720 51a6 4183E307 		and	r11d, 7	# tmp175,
 15721              	.LVL1103:
 575:sieve_extend.c ****     }
 15722              		.loc 1 575 22 view .LVU5526
 15723              	.LBE657:
 15724              	.LBB658:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15725              		.loc 1 572 25 is_stmt 1 view .LVU5527
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15726              		.loc 1 573 13 view .LVU5528
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15727              		.loc 1 572 32 view .LVU5529
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15728              		.loc 1 572 25 view .LVU5530
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15729              		.loc 1 573 13 view .LVU5531
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15730              		.loc 1 572 32 view .LVU5532
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15731              		.loc 1 572 25 view .LVU5533
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15732              		.loc 1 573 13 view .LVU5534
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15733              		.loc 1 572 32 view .LVU5535
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15734              		.loc 1 572 25 view .LVU5536
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccW0oq2B.s 			page 420


 15735              		.loc 1 573 13 view .LVU5537
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15736              		.loc 1 572 32 view .LVU5538
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15737              		.loc 1 572 25 view .LVU5539
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15738              		.loc 1 572 25 is_stmt 0 view .LVU5540
 15739              	.LBE658:
 15740              	.LBB659:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15741              		.loc 1 574 25 is_stmt 1 view .LVU5541
 575:sieve_extend.c ****     }
 15742              		.loc 1 575 13 view .LVU5542
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15743              		.loc 1 574 32 view .LVU5543
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15744              		.loc 1 574 25 view .LVU5544
 575:sieve_extend.c ****     }
 15745              		.loc 1 575 13 view .LVU5545
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15746              		.loc 1 574 32 view .LVU5546
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15747              		.loc 1 574 25 view .LVU5547
 575:sieve_extend.c ****     }
 15748              		.loc 1 575 13 view .LVU5548
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15749              		.loc 1 574 32 view .LVU5549
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15750              		.loc 1 574 25 view .LVU5550
 575:sieve_extend.c ****     }
 15751              		.loc 1 575 13 view .LVU5551
 15752              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15753              		.loc 1 575 22 is_stmt 0 view .LVU5552
 15754 51aa C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect__58
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15755              		.loc 1 574 32 is_stmt 1 view .LVU5553
 15756              	.LVL1104:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15757              		.loc 1 574 25 view .LVU5554
 15758              	.LBE659:
 570:sieve_extend.c ****     {
 15759              		.loc 1 570 24 view .LVU5555
 570:sieve_extend.c ****     {
 15760              		.loc 1 570 12 view .LVU5556
 15761 51ae 41BA0100 		mov	r10d, 1	# ivtmp.688,
 15761      0000
 15762 51b4 B8200000 		mov	eax, 32	# ivtmp.691,
 15762      00
 15763 51b9 4183F801 		cmp	r8d, 1	# tmp172,
 15764 51bd 0F863902 		jbe	.L1658	#,
 15764      0000
 15765 51c3 4585DB   		test	r11d, r11d	# tmp175
 15766 51c6 0F841201 		je	.L1616	#,
 15766      0000
 15767 51cc 4183FB01 		cmp	r11d, 1	# tmp175,
 15768 51d0 0F84DB00 		je	.L1645	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 421


 15768      0000
 15769 51d6 4183FB02 		cmp	r11d, 2	# tmp175,
 15770 51da 0F84AE00 		je	.L1646	#,
 15770      0000
 15771 51e0 4183FB03 		cmp	r11d, 3	# tmp175,
 15772 51e4 0F848100 		je	.L1647	#,
 15772      0000
 15773 51ea 4183FB04 		cmp	r11d, 4	# tmp175,
 15774 51ee 7457     		je	.L1648	#,
 15775 51f0 4183FB05 		cmp	r11d, 5	# tmp175,
 15776 51f4 742E     		je	.L1649	#,
 15777 51f6 4183FB06 		cmp	r11d, 6	# tmp175,
 15778 51fa 0F85CA02 		jne	.L1661	#,
 15778      0000
 15779              	.L1650:
 15780              	.LVL1105:
 15781              	.LBB660:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15782              		.loc 1 572 25 view .LVU5557
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15783              		.loc 1 573 13 view .LVU5558
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15784              		.loc 1 572 32 view .LVU5559
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15785              		.loc 1 572 25 view .LVU5560
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15786              		.loc 1 573 13 view .LVU5561
 15787              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15788              		.loc 1 573 25 is_stmt 0 view .LVU5562
 15789 5200 C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM
 15789      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15790              		.loc 1 572 32 is_stmt 1 view .LVU5563
 15791              	.LVL1106:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15792              		.loc 1 572 25 view .LVU5564
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15793              		.loc 1 573 13 view .LVU5565
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15794              		.loc 1 572 32 view .LVU5566
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15795              		.loc 1 572 25 view .LVU5567
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15796              		.loc 1 573 13 view .LVU5568
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15797              		.loc 1 572 32 view .LVU5569
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15798              		.loc 1 572 25 view .LVU5570
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15799              		.loc 1 572 25 is_stmt 0 view .LVU5571
 15800              	.LBE660:
 15801              	.LBB661:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15802              		.loc 1 574 25 is_stmt 1 view .LVU5572
 575:sieve_extend.c ****     }
 15803              		.loc 1 575 13 view .LVU5573
GAS LISTING /tmp/ccW0oq2B.s 			page 422


 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15804              		.loc 1 574 32 view .LVU5574
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15805              		.loc 1 574 25 view .LVU5575
 575:sieve_extend.c ****     }
 15806              		.loc 1 575 13 view .LVU5576
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15807              		.loc 1 574 32 view .LVU5577
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15808              		.loc 1 574 25 view .LVU5578
 575:sieve_extend.c ****     }
 15809              		.loc 1 575 13 view .LVU5579
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15810              		.loc 1 574 32 view .LVU5580
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15811              		.loc 1 574 25 view .LVU5581
 575:sieve_extend.c ****     }
 15812              		.loc 1 575 13 view .LVU5582
 15813 5205 41FFC2   		inc	r10d	# ivtmp.688
 15814              	.LBE661:
 15815              	.LBB662:
 15816              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15817              		.loc 1 573 25 is_stmt 0 view .LVU5583
 15818 5208 C443FD00 		vpermq	ymm13, ymm12, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 15818      EC55
 15819              	.LBE662:
 15820              	.LBB663:
 15821              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15822              		.loc 1 575 34 view .LVU5584
 15823 520e C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.678, vect__102.677, _4
 15824              	.LBE663:
 15825              	.LBB664:
 15826              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15827              		.loc 1 573 34 view .LVU5585
 15828 5212 C51DF3F9 		vpsllq	ymm15, ymm12, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 15829              	.LBE664:
 15830              	.LBB665:
 15831              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15832              		.loc 1 575 22 view .LVU5586
 15833 5216 C4C10DEB 		vpor	ymm3, ymm14, ymm15	# vect__58.683, vect__57.678, vect__104.682
 15833      DF
 15834 521b C5FE7F1C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm3	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect
 15834      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15835              		.loc 1 574 32 is_stmt 1 view .LVU5587
 15836              	.LVL1107:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15837              		.loc 1 574 25 view .LVU5588
 15838              	.LBE665:
 570:sieve_extend.c ****     {
 15839              		.loc 1 570 24 view .LVU5589
 570:sieve_extend.c ****     {
 15840              		.loc 1 570 12 view .LVU5590
GAS LISTING /tmp/ccW0oq2B.s 			page 423


 15841 5220 4883C020 		add	rax, 32	# ivtmp.691,
 15842              	.L1649:
 15843              	.LVL1108:
 15844              	.LBB666:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15845              		.loc 1 572 25 view .LVU5591
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15846              		.loc 1 573 13 view .LVU5592
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15847              		.loc 1 572 32 view .LVU5593
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15848              		.loc 1 572 25 view .LVU5594
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15849              		.loc 1 573 13 view .LVU5595
 15850              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15851              		.loc 1 573 25 is_stmt 0 view .LVU5596
 15852 5224 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[
 15852      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15853              		.loc 1 572 32 is_stmt 1 view .LVU5597
 15854              	.LVL1109:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15855              		.loc 1 572 25 view .LVU5598
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15856              		.loc 1 573 13 view .LVU5599
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15857              		.loc 1 572 32 view .LVU5600
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15858              		.loc 1 572 25 view .LVU5601
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15859              		.loc 1 573 13 view .LVU5602
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15860              		.loc 1 572 32 view .LVU5603
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15861              		.loc 1 572 25 view .LVU5604
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15862              		.loc 1 572 25 is_stmt 0 view .LVU5605
 15863              	.LBE666:
 15864              	.LBB667:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15865              		.loc 1 574 25 is_stmt 1 view .LVU5606
 575:sieve_extend.c ****     }
 15866              		.loc 1 575 13 view .LVU5607
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15867              		.loc 1 574 32 view .LVU5608
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15868              		.loc 1 574 25 view .LVU5609
 575:sieve_extend.c ****     }
 15869              		.loc 1 575 13 view .LVU5610
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15870              		.loc 1 574 32 view .LVU5611
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15871              		.loc 1 574 25 view .LVU5612
 575:sieve_extend.c ****     }
 15872              		.loc 1 575 13 view .LVU5613
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccW0oq2B.s 			page 424


 15873              		.loc 1 574 32 view .LVU5614
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15874              		.loc 1 574 25 view .LVU5615
 575:sieve_extend.c ****     }
 15875              		.loc 1 575 13 view .LVU5616
 15876 5229 41FFC2   		inc	r10d	# ivtmp.688
 15877              	.LBE667:
 15878              	.LBB668:
 15879              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15880              		.loc 1 573 25 is_stmt 0 view .LVU5617
 15881 522c C4E3FD00 		vpermq	ymm2, ymm4, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 15881      D455
 15882              	.LBE668:
 15883              	.LBB669:
 15884              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15885              		.loc 1 575 34 view .LVU5618
 15886 5232 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 15887              	.LBE669:
 15888              	.LBB670:
 15889              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15890              		.loc 1 573 34 view .LVU5619
 15891 5236 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 15892              	.LBE670:
 15893              	.LBB671:
 15894              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15895              		.loc 1 575 22 view .LVU5620
 15896 523a C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.683, vect__57.678, vect__104.682
 15897 523e C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect
 15897      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15898              		.loc 1 574 32 is_stmt 1 view .LVU5621
 15899              	.LVL1110:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15900              		.loc 1 574 25 view .LVU5622
 15901              	.LBE671:
 570:sieve_extend.c ****     {
 15902              		.loc 1 570 24 view .LVU5623
 570:sieve_extend.c ****     {
 15903              		.loc 1 570 12 view .LVU5624
 15904 5243 4883C020 		add	rax, 32	# ivtmp.691,
 15905              	.L1648:
 15906              	.LVL1111:
 15907              	.LBB672:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15908              		.loc 1 572 25 view .LVU5625
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15909              		.loc 1 573 13 view .LVU5626
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15910              		.loc 1 572 32 view .LVU5627
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15911              		.loc 1 572 25 view .LVU5628
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15912              		.loc 1 573 13 view .LVU5629
GAS LISTING /tmp/ccW0oq2B.s 			page 425


 15913              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15914              		.loc 1 573 25 is_stmt 0 view .LVU5630
 15915 5247 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[
 15915      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15916              		.loc 1 572 32 is_stmt 1 view .LVU5631
 15917              	.LVL1112:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15918              		.loc 1 572 25 view .LVU5632
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15919              		.loc 1 573 13 view .LVU5633
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15920              		.loc 1 572 32 view .LVU5634
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15921              		.loc 1 572 25 view .LVU5635
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15922              		.loc 1 573 13 view .LVU5636
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15923              		.loc 1 572 32 view .LVU5637
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15924              		.loc 1 572 25 view .LVU5638
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15925              		.loc 1 572 25 is_stmt 0 view .LVU5639
 15926              	.LBE672:
 15927              	.LBB673:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15928              		.loc 1 574 25 is_stmt 1 view .LVU5640
 575:sieve_extend.c ****     }
 15929              		.loc 1 575 13 view .LVU5641
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15930              		.loc 1 574 32 view .LVU5642
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15931              		.loc 1 574 25 view .LVU5643
 575:sieve_extend.c ****     }
 15932              		.loc 1 575 13 view .LVU5644
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15933              		.loc 1 574 32 view .LVU5645
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15934              		.loc 1 574 25 view .LVU5646
 575:sieve_extend.c ****     }
 15935              		.loc 1 575 13 view .LVU5647
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15936              		.loc 1 574 32 view .LVU5648
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15937              		.loc 1 574 25 view .LVU5649
 575:sieve_extend.c ****     }
 15938              		.loc 1 575 13 view .LVU5650
 15939 524c 41FFC2   		inc	r10d	# ivtmp.688
 15940              	.LBE673:
 15941              	.LBB674:
 15942              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15943              		.loc 1 573 25 is_stmt 0 view .LVU5651
 15944 524f C443FD00 		vpermq	ymm9, ymm8, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 15944      C855
 15945              	.LBE674:
GAS LISTING /tmp/ccW0oq2B.s 			page 426


 15946              	.LBB675:
 15947              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15948              		.loc 1 575 34 view .LVU5652
 15949 5255 C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.678, vect__102.677, _4
 15950              	.LBE675:
 15951              	.LBB676:
 15952              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15953              		.loc 1 573 34 view .LVU5653
 15954 5259 C53DF3D9 		vpsllq	ymm11, ymm8, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 15955              	.LBE676:
 15956              	.LBB677:
 15957              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 15958              		.loc 1 575 22 view .LVU5654
 15959 525d C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.683, vect__57.678, vect__104.682
 15959      E3
 15960 5262 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vec
 15960      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15961              		.loc 1 574 32 is_stmt 1 view .LVU5655
 15962              	.LVL1113:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15963              		.loc 1 574 25 view .LVU5656
 15964              	.LBE677:
 570:sieve_extend.c ****     {
 15965              		.loc 1 570 24 view .LVU5657
 570:sieve_extend.c ****     {
 15966              		.loc 1 570 12 view .LVU5658
 15967 5267 4883C020 		add	rax, 32	# ivtmp.691,
 15968              	.L1647:
 15969              	.LVL1114:
 15970              	.LBB678:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15971              		.loc 1 572 25 view .LVU5659
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15972              		.loc 1 573 13 view .LVU5660
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15973              		.loc 1 572 32 view .LVU5661
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15974              		.loc 1 572 25 view .LVU5662
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15975              		.loc 1 573 13 view .LVU5663
 15976              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15977              		.loc 1 573 25 is_stmt 0 view .LVU5664
 15978 526b C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM
 15978      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15979              		.loc 1 572 32 is_stmt 1 view .LVU5665
 15980              	.LVL1115:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15981              		.loc 1 572 25 view .LVU5666
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15982              		.loc 1 573 13 view .LVU5667
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW0oq2B.s 			page 427


 15983              		.loc 1 572 32 view .LVU5668
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15984              		.loc 1 572 25 view .LVU5669
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15985              		.loc 1 573 13 view .LVU5670
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15986              		.loc 1 572 32 view .LVU5671
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15987              		.loc 1 572 25 view .LVU5672
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15988              		.loc 1 572 25 is_stmt 0 view .LVU5673
 15989              	.LBE678:
 15990              	.LBB679:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15991              		.loc 1 574 25 is_stmt 1 view .LVU5674
 575:sieve_extend.c ****     }
 15992              		.loc 1 575 13 view .LVU5675
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15993              		.loc 1 574 32 view .LVU5676
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15994              		.loc 1 574 25 view .LVU5677
 575:sieve_extend.c ****     }
 15995              		.loc 1 575 13 view .LVU5678
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15996              		.loc 1 574 32 view .LVU5679
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15997              		.loc 1 574 25 view .LVU5680
 575:sieve_extend.c ****     }
 15998              		.loc 1 575 13 view .LVU5681
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15999              		.loc 1 574 32 view .LVU5682
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16000              		.loc 1 574 25 view .LVU5683
 575:sieve_extend.c ****     }
 16001              		.loc 1 575 13 view .LVU5684
 16002 5270 41FFC2   		inc	r10d	# ivtmp.688
 16003              	.LBE679:
 16004              	.LBB680:
 16005              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16006              		.loc 1 573 25 is_stmt 0 view .LVU5685
 16007 5273 C443FD00 		vpermq	ymm14, ymm13, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16007      F555
 16008              	.LBE680:
 16009              	.LBB681:
 16010              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16011              		.loc 1 575 34 view .LVU5686
 16012 5279 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.678, vect__102.677, _4
 16013              	.LBE681:
 16014              	.LBB682:
 16015              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16016              		.loc 1 573 34 view .LVU5687
 16017 527d C595F3D9 		vpsllq	ymm3, ymm13, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16018              	.LBE682:
 16019              	.LBB683:
GAS LISTING /tmp/ccW0oq2B.s 			page 428


 16020              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16021              		.loc 1 575 22 view .LVU5688
 16022 5281 C585EBE3 		vpor	ymm4, ymm15, ymm3	# vect__58.683, vect__57.678, vect__104.682
 16023 5285 C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect
 16023      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16024              		.loc 1 574 32 is_stmt 1 view .LVU5689
 16025              	.LVL1116:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16026              		.loc 1 574 25 view .LVU5690
 16027              	.LBE683:
 570:sieve_extend.c ****     {
 16028              		.loc 1 570 24 view .LVU5691
 570:sieve_extend.c ****     {
 16029              		.loc 1 570 12 view .LVU5692
 16030 528a 4883C020 		add	rax, 32	# ivtmp.691,
 16031              	.L1646:
 16032              	.LVL1117:
 16033              	.LBB684:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16034              		.loc 1 572 25 view .LVU5693
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16035              		.loc 1 573 13 view .LVU5694
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16036              		.loc 1 572 32 view .LVU5695
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16037              		.loc 1 572 25 view .LVU5696
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16038              		.loc 1 573 13 view .LVU5697
 16039              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16040              		.loc 1 573 25 is_stmt 0 view .LVU5698
 16041 528e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[
 16041      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16042              		.loc 1 572 32 is_stmt 1 view .LVU5699
 16043              	.LVL1118:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16044              		.loc 1 572 25 view .LVU5700
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16045              		.loc 1 573 13 view .LVU5701
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16046              		.loc 1 572 32 view .LVU5702
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16047              		.loc 1 572 25 view .LVU5703
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16048              		.loc 1 573 13 view .LVU5704
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16049              		.loc 1 572 32 view .LVU5705
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16050              		.loc 1 572 25 view .LVU5706
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16051              		.loc 1 572 25 is_stmt 0 view .LVU5707
 16052              	.LBE684:
 16053              	.LBB685:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccW0oq2B.s 			page 429


 16054              		.loc 1 574 25 is_stmt 1 view .LVU5708
 575:sieve_extend.c ****     }
 16055              		.loc 1 575 13 view .LVU5709
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16056              		.loc 1 574 32 view .LVU5710
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16057              		.loc 1 574 25 view .LVU5711
 575:sieve_extend.c ****     }
 16058              		.loc 1 575 13 view .LVU5712
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16059              		.loc 1 574 32 view .LVU5713
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16060              		.loc 1 574 25 view .LVU5714
 575:sieve_extend.c ****     }
 16061              		.loc 1 575 13 view .LVU5715
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16062              		.loc 1 574 32 view .LVU5716
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16063              		.loc 1 574 25 view .LVU5717
 575:sieve_extend.c ****     }
 16064              		.loc 1 575 13 view .LVU5718
 16065 5293 41FFC2   		inc	r10d	# ivtmp.688
 16066              	.LBE685:
 16067              	.LBB686:
 16068              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16069              		.loc 1 573 25 is_stmt 0 view .LVU5719
 16070 5296 C4E3FD00 		vpermq	ymm2, ymm5, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16070      D555
 16071              	.LBE686:
 16072              	.LBB687:
 16073              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16074              		.loc 1 575 34 view .LVU5720
 16075 529c C5EDD3F0 		vpsrlq	ymm6, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 16076              	.LBE687:
 16077              	.LBB688:
 16078              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16079              		.loc 1 573 34 view .LVU5721
 16080 52a0 C5D5F3F9 		vpsllq	ymm7, ymm5, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 16081              	.LBE688:
 16082              	.LBB689:
 16083              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16084              		.loc 1 575 22 view .LVU5722
 16085 52a4 C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.683, vect__57.678, vect__104.682
 16086 52a8 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect
 16086      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16087              		.loc 1 574 32 is_stmt 1 view .LVU5723
 16088              	.LVL1119:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16089              		.loc 1 574 25 view .LVU5724
 16090              	.LBE689:
 570:sieve_extend.c ****     {
 16091              		.loc 1 570 24 view .LVU5725
GAS LISTING /tmp/ccW0oq2B.s 			page 430


 570:sieve_extend.c ****     {
 16092              		.loc 1 570 12 view .LVU5726
 16093 52ad 4883C020 		add	rax, 32	# ivtmp.691,
 16094              	.L1645:
 16095              	.LVL1120:
 16096              	.LBB690:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16097              		.loc 1 572 25 view .LVU5727
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16098              		.loc 1 573 13 view .LVU5728
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16099              		.loc 1 572 32 view .LVU5729
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16100              		.loc 1 572 25 view .LVU5730
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16101              		.loc 1 573 13 view .LVU5731
 16102              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16103              		.loc 1 573 25 is_stmt 0 view .LVU5732
 16104 52b1 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[
 16104      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16105              		.loc 1 572 32 is_stmt 1 view .LVU5733
 16106              	.LVL1121:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16107              		.loc 1 572 25 view .LVU5734
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16108              		.loc 1 573 13 view .LVU5735
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16109              		.loc 1 572 32 view .LVU5736
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16110              		.loc 1 572 25 view .LVU5737
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16111              		.loc 1 573 13 view .LVU5738
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16112              		.loc 1 572 32 view .LVU5739
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16113              		.loc 1 572 25 view .LVU5740
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16114              		.loc 1 572 25 is_stmt 0 view .LVU5741
 16115              	.LBE690:
 16116              	.LBB691:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16117              		.loc 1 574 25 is_stmt 1 view .LVU5742
 575:sieve_extend.c ****     }
 16118              		.loc 1 575 13 view .LVU5743
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16119              		.loc 1 574 32 view .LVU5744
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16120              		.loc 1 574 25 view .LVU5745
 575:sieve_extend.c ****     }
 16121              		.loc 1 575 13 view .LVU5746
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16122              		.loc 1 574 32 view .LVU5747
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16123              		.loc 1 574 25 view .LVU5748
 575:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 431


 16124              		.loc 1 575 13 view .LVU5749
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16125              		.loc 1 574 32 view .LVU5750
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16126              		.loc 1 574 25 view .LVU5751
 575:sieve_extend.c ****     }
 16127              		.loc 1 575 13 view .LVU5752
 16128 52b6 41FFC2   		inc	r10d	# ivtmp.688
 16129              	.LBE691:
 16130              	.LBB692:
 16131              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16132              		.loc 1 573 25 is_stmt 0 view .LVU5753
 16133 52b9 C443FD00 		vpermq	ymm10, ymm9, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16133      D155
 16134              	.LBE692:
 16135              	.LBB693:
 16136              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16137              		.loc 1 575 34 view .LVU5754
 16138 52bf C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.678, vect__102.677, _4
 16139              	.LBE693:
 16140              	.LBB694:
 16141              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16142              		.loc 1 573 34 view .LVU5755
 16143 52c3 C535F3E1 		vpsllq	ymm12, ymm9, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16144              	.LBE694:
 16145              	.LBB695:
 16146              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16147              		.loc 1 575 22 view .LVU5756
 16148 52c7 C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.683, vect__57.678, vect__104.682
 16148      EC
 16149 52cc C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vec
 16149      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16150              		.loc 1 574 32 is_stmt 1 view .LVU5757
 16151              	.LVL1122:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16152              		.loc 1 574 25 view .LVU5758
 16153              	.LBE695:
 570:sieve_extend.c ****     {
 16154              		.loc 1 570 24 view .LVU5759
 570:sieve_extend.c ****     {
 16155              		.loc 1 570 12 view .LVU5760
 16156 52d1 4883C020 		add	rax, 32	# ivtmp.691,
 16157 52d5 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.688
 16158 52d8 0F861E01 		jbe	.L1658	#,
 16158      0000
 16159              	.L1616:
 16160              	.LVL1123:
 16161              	.LBB696:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16162              		.loc 1 572 25 view .LVU5761
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16163              		.loc 1 573 13 view .LVU5762
GAS LISTING /tmp/ccW0oq2B.s 			page 432


 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16164              		.loc 1 572 32 view .LVU5763
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16165              		.loc 1 572 25 view .LVU5764
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16166              		.loc 1 573 13 view .LVU5765
 16167              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16168              		.loc 1 573 25 is_stmt 0 view .LVU5766
 16169 52de C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], ME
 16169      0620
 16170 52e4 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM
 16170      06
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16171              		.loc 1 572 32 is_stmt 1 view .LVU5767
 16172              	.LVL1124:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16173              		.loc 1 572 25 view .LVU5768
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16174              		.loc 1 573 13 view .LVU5769
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16175              		.loc 1 572 32 view .LVU5770
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16176              		.loc 1 572 25 view .LVU5771
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16177              		.loc 1 573 13 view .LVU5772
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16178              		.loc 1 572 32 view .LVU5773
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16179              		.loc 1 572 25 view .LVU5774
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16180              		.loc 1 572 25 is_stmt 0 view .LVU5775
 16181              	.LBE696:
 16182              	.LBB697:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16183              		.loc 1 574 25 is_stmt 1 view .LVU5776
 575:sieve_extend.c ****     }
 16184              		.loc 1 575 13 view .LVU5777
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16185              		.loc 1 574 32 view .LVU5778
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16186              		.loc 1 574 25 view .LVU5779
 575:sieve_extend.c ****     }
 16187              		.loc 1 575 13 view .LVU5780
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16188              		.loc 1 574 32 view .LVU5781
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16189              		.loc 1 574 25 view .LVU5782
 575:sieve_extend.c ****     }
 16190              		.loc 1 575 13 view .LVU5783
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16191              		.loc 1 574 32 view .LVU5784
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16192              		.loc 1 574 25 view .LVU5785
 575:sieve_extend.c ****     }
 16193              		.loc 1 575 13 view .LVU5786
 16194              	.LBE697:
GAS LISTING /tmp/ccW0oq2B.s 			page 433


 16195              	.LBB698:
 16196              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16197              		.loc 1 573 25 is_stmt 0 view .LVU5787
 16198 52e9 C4E3FD00 		vpermq	ymm2, ymm6, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16198      D655
 16199              	.LBE698:
 16200              	.LBB699:
 16201              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16202              		.loc 1 575 34 view .LVU5788
 16203 52ef C5EDD3F8 		vpsrlq	ymm7, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 16204              	.LBE699:
 16205              	.LBB700:
 16206              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16207              		.loc 1 573 34 view .LVU5789
 16208 52f3 C54DF3C1 		vpsllq	ymm8, ymm6, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 16209              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16210              		.loc 1 573 25 view .LVU5790
 16211 52f7 C443FD00 		vpermq	ymm15, ymm14, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16211      FE55
 16212              	.LBE700:
 16213              	.LBB701:
 16214              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16215              		.loc 1 575 22 view .LVU5791
 16216 52fd C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.683, vect__57.678, vect__104.682
 16216      C8
 16217              	.LBE701:
 16218              	.LBB702:
 16219              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16220              		.loc 1 573 25 view .LVU5792
 16221 5302 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 128[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], M
 16221      06800000 
 16221      00
 16222 530b C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 64[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], M
 16222      0640
 16223              	.LBE702:
 16224              	.LBB703:
 16225              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16226              		.loc 1 575 34 view .LVU5793
 16227 5311 C585D3E0 		vpsrlq	ymm4, ymm15, xmm0	# vect__57.678, vect__102.677, _4
 16228              	.LBE703:
 16229              	.LBB704:
 16230              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16231              		.loc 1 573 34 view .LVU5794
 16232 5315 C58DF3D9 		vpsllq	ymm3, ymm14, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16233              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16234              		.loc 1 573 25 view .LVU5795
 16235 5319 C57E6F7C 		vmovdqu	ymm15, YMMWORD PTR 96[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], M
 16235      0660
GAS LISTING /tmp/ccW0oq2B.s 			page 434


 16236 531f C4E3FD00 		vpermq	ymm2, ymm7, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16236      D755
 16237              	.LBE704:
 16238              	.LBB705:
 16239              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16240              		.loc 1 575 34 view .LVU5796
 16241 5325 C56DD3C0 		vpsrlq	ymm8, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 16242              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16243              		.loc 1 575 22 view .LVU5797
 16244 5329 C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], ve
 16244      0720
 16245              	.LBE705:
 16246              	.LBB706:
 16247              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16248              		.loc 1 573 34 view .LVU5798
 16249 532f C545F3C9 		vpsllq	ymm9, ymm7, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 16250              	.LBE706:
 16251              	.LBB707:
 16252              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16253              		.loc 1 575 22 view .LVU5799
 16254 5333 C5DDEBEB 		vpor	ymm5, ymm4, ymm3	# vect__58.683, vect__57.678, vect__104.682
 16255              	.LBE707:
 16256              	.LBB708:
 16257              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16258              		.loc 1 573 25 view .LVU5800
 16259 5337 C443FD00 		vpermq	ymm11, ymm10, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16259      DA55
 16260 533d C4C3FD00 		vpermq	ymm4, ymm15, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16260      E755
 16261              	.LBE708:
 16262              	.LBB709:
 16263              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16264              		.loc 1 575 34 view .LVU5801
 16265 5343 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.678, vect__102.677, _4
 16266              	.LBE709:
 16267              	.LBB710:
 16268              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16269              		.loc 1 573 34 view .LVU5802
 16270 5347 C52DF3E9 		vpsllq	ymm13, ymm10, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16271              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16272              		.loc 1 573 25 view .LVU5803
 16273 534b C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 160[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16273      06A00000 
 16273      00
 16274              	.LBE710:
 16275              	.LBB711:
 16276              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16277              		.loc 1 575 22 view .LVU5804
GAS LISTING /tmp/ccW0oq2B.s 			page 435


 16278 5354 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.683, vect__57.678, vect__104.682
 16278      D1
 16279              	.LBE711:
 16280              	.LBB712:
 16281              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16282              		.loc 1 573 34 view .LVU5805
 16283 5359 C585F3D9 		vpsllq	ymm3, ymm15, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16284              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16285              		.loc 1 573 25 view .LVU5806
 16286 535d C57E6F84 		vmovdqu	ymm8, YMMWORD PTR 224[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], M
 16286      06E00000 
 16286      00
 16287              	.LBE712:
 16288              	.LBB713:
 16289              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16290              		.loc 1 575 22 view .LVU5807
 16291 5366 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect
 16291      07
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16292              		.loc 1 574 32 is_stmt 1 view .LVU5808
 16293              	.LVL1125:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16294              		.loc 1 574 25 view .LVU5809
 16295              	.LBE713:
 570:sieve_extend.c ****     {
 16296              		.loc 1 570 24 view .LVU5810
 570:sieve_extend.c ****     {
 16297              		.loc 1 570 12 view .LVU5811
 16298              	.LBB714:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16299              		.loc 1 572 25 view .LVU5812
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16300              		.loc 1 573 13 view .LVU5813
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16301              		.loc 1 572 32 view .LVU5814
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16302              		.loc 1 572 25 view .LVU5815
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16303              		.loc 1 573 13 view .LVU5816
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16304              		.loc 1 572 32 view .LVU5817
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16305              		.loc 1 572 25 view .LVU5818
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16306              		.loc 1 573 13 view .LVU5819
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16307              		.loc 1 572 32 view .LVU5820
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16308              		.loc 1 572 25 view .LVU5821
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16309              		.loc 1 573 13 view .LVU5822
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16310              		.loc 1 572 32 view .LVU5823
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccW0oq2B.s 			page 436


 16311              		.loc 1 572 25 view .LVU5824
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16312              		.loc 1 572 25 is_stmt 0 view .LVU5825
 16313              	.LBE714:
 16314              	.LBB715:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16315              		.loc 1 574 25 is_stmt 1 view .LVU5826
 575:sieve_extend.c ****     }
 16316              		.loc 1 575 13 view .LVU5827
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16317              		.loc 1 574 32 view .LVU5828
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16318              		.loc 1 574 25 view .LVU5829
 575:sieve_extend.c ****     }
 16319              		.loc 1 575 13 view .LVU5830
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16320              		.loc 1 574 32 view .LVU5831
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16321              		.loc 1 574 25 view .LVU5832
 575:sieve_extend.c ****     }
 16322              		.loc 1 575 13 view .LVU5833
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16323              		.loc 1 574 32 view .LVU5834
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16324              		.loc 1 574 25 view .LVU5835
 575:sieve_extend.c ****     }
 16325              		.loc 1 575 13 view .LVU5836
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16326              		.loc 1 574 32 view .LVU5837
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16327              		.loc 1 574 25 view .LVU5838
 16328              	.LBE715:
 570:sieve_extend.c ****     {
 16329              		.loc 1 570 24 view .LVU5839
 570:sieve_extend.c ****     {
 16330              		.loc 1 570 12 view .LVU5840
 16331              	.LBB716:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16332              		.loc 1 572 25 view .LVU5841
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16333              		.loc 1 573 13 view .LVU5842
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16334              		.loc 1 572 32 view .LVU5843
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16335              		.loc 1 572 25 view .LVU5844
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16336              		.loc 1 573 13 view .LVU5845
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16337              		.loc 1 572 32 view .LVU5846
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16338              		.loc 1 572 25 view .LVU5847
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16339              		.loc 1 573 13 view .LVU5848
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16340              		.loc 1 572 32 view .LVU5849
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16341              		.loc 1 572 25 view .LVU5850
GAS LISTING /tmp/ccW0oq2B.s 			page 437


 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16342              		.loc 1 573 13 view .LVU5851
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16343              		.loc 1 572 32 view .LVU5852
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16344              		.loc 1 572 25 view .LVU5853
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16345              		.loc 1 572 25 is_stmt 0 view .LVU5854
 16346              	.LBE716:
 16347              	.LBB717:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16348              		.loc 1 574 25 is_stmt 1 view .LVU5855
 575:sieve_extend.c ****     }
 16349              		.loc 1 575 13 view .LVU5856
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16350              		.loc 1 574 32 view .LVU5857
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16351              		.loc 1 574 25 view .LVU5858
 575:sieve_extend.c ****     }
 16352              		.loc 1 575 13 view .LVU5859
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16353              		.loc 1 574 32 view .LVU5860
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16354              		.loc 1 574 25 view .LVU5861
 575:sieve_extend.c ****     }
 16355              		.loc 1 575 13 view .LVU5862
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16356              		.loc 1 574 32 view .LVU5863
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16357              		.loc 1 574 25 view .LVU5864
 575:sieve_extend.c ****     }
 16358              		.loc 1 575 13 view .LVU5865
 16359              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16360              		.loc 1 575 34 is_stmt 0 view .LVU5866
 16361 536b C5DDD3E8 		vpsrlq	ymm5, ymm4, xmm0	# vect__57.678, vect__102.677, _4
 16362              	.LBE717:
 16363              	.LBB718:
 16364              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16365              		.loc 1 573 25 view .LVU5867
 16366 536f C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], M
 16366      06C00000 
 16366      00
 16367              	.LBE718:
 16368              	.LBB719:
 16369              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16370              		.loc 1 575 22 view .LVU5868
 16371 5378 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.683, vect__57.678, vect__104.682
 16371      F5
 16372 537d C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.683, vect__57.678, vect__104.682
 16373              	.LBE719:
 16374              	.LBB720:
 16375              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16376              		.loc 1 573 25 view .LVU5869
GAS LISTING /tmp/ccW0oq2B.s 			page 438


 16377 5381 C443FD00 		vpermq	ymm12, ymm11, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16377      E355
 16378 5387 C4E3FD00 		vpermq	ymm5, ymm4, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16378      EC55
 16379 538d C4C3FD00 		vpermq	ymm2, ymm8, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16379      D055
 16380              	.LBE720:
 16381              	.LBB721:
 16382              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16383              		.loc 1 575 22 view .LVU5870
 16384 5393 C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], v
 16384      0740
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16385              		.loc 1 574 32 is_stmt 1 view .LVU5871
 16386              	.LVL1126:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16387              		.loc 1 574 25 view .LVU5872
 16388              	.LBE721:
 570:sieve_extend.c ****     {
 16389              		.loc 1 570 24 view .LVU5873
 570:sieve_extend.c ****     {
 16390              		.loc 1 570 12 view .LVU5874
 16391              	.LBB722:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16392              		.loc 1 572 25 view .LVU5875
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16393              		.loc 1 573 13 view .LVU5876
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16394              		.loc 1 572 32 view .LVU5877
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16395              		.loc 1 572 25 view .LVU5878
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16396              		.loc 1 573 13 view .LVU5879
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16397              		.loc 1 572 32 view .LVU5880
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16398              		.loc 1 572 25 view .LVU5881
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16399              		.loc 1 573 13 view .LVU5882
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16400              		.loc 1 572 32 view .LVU5883
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16401              		.loc 1 572 25 view .LVU5884
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16402              		.loc 1 573 13 view .LVU5885
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16403              		.loc 1 572 32 view .LVU5886
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16404              		.loc 1 572 25 view .LVU5887
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16405              		.loc 1 572 25 is_stmt 0 view .LVU5888
 16406              	.LBE722:
 16407              	.LBB723:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16408              		.loc 1 574 25 is_stmt 1 view .LVU5889
 575:sieve_extend.c ****     }
GAS LISTING /tmp/ccW0oq2B.s 			page 439


 16409              		.loc 1 575 13 view .LVU5890
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16410              		.loc 1 574 32 view .LVU5891
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16411              		.loc 1 574 25 view .LVU5892
 575:sieve_extend.c ****     }
 16412              		.loc 1 575 13 view .LVU5893
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16413              		.loc 1 574 32 view .LVU5894
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16414              		.loc 1 574 25 view .LVU5895
 575:sieve_extend.c ****     }
 16415              		.loc 1 575 13 view .LVU5896
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16416              		.loc 1 574 32 view .LVU5897
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16417              		.loc 1 574 25 view .LVU5898
 575:sieve_extend.c ****     }
 16418              		.loc 1 575 13 view .LVU5899
 16419              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16420              		.loc 1 575 22 is_stmt 0 view .LVU5900
 16421 5399 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], ve
 16421      0760
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16422              		.loc 1 574 32 is_stmt 1 view .LVU5901
 16423              	.LVL1127:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16424              		.loc 1 574 25 view .LVU5902
 16425              	.LBE723:
 570:sieve_extend.c ****     {
 16426              		.loc 1 570 24 view .LVU5903
 570:sieve_extend.c ****     {
 16427              		.loc 1 570 12 view .LVU5904
 16428              	.LBB724:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16429              		.loc 1 572 25 view .LVU5905
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16430              		.loc 1 573 13 view .LVU5906
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16431              		.loc 1 572 32 view .LVU5907
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16432              		.loc 1 572 25 view .LVU5908
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16433              		.loc 1 573 13 view .LVU5909
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16434              		.loc 1 572 32 view .LVU5910
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16435              		.loc 1 572 25 view .LVU5911
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16436              		.loc 1 573 13 view .LVU5912
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16437              		.loc 1 572 32 view .LVU5913
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16438              		.loc 1 572 25 view .LVU5914
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16439              		.loc 1 573 13 view .LVU5915
GAS LISTING /tmp/ccW0oq2B.s 			page 440


 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16440              		.loc 1 572 32 view .LVU5916
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16441              		.loc 1 572 25 view .LVU5917
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16442              		.loc 1 572 25 is_stmt 0 view .LVU5918
 16443              	.LBE724:
 16444              	.LBB725:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16445              		.loc 1 574 25 is_stmt 1 view .LVU5919
 575:sieve_extend.c ****     }
 16446              		.loc 1 575 13 view .LVU5920
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16447              		.loc 1 574 32 view .LVU5921
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16448              		.loc 1 574 25 view .LVU5922
 575:sieve_extend.c ****     }
 16449              		.loc 1 575 13 view .LVU5923
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16450              		.loc 1 574 32 view .LVU5924
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16451              		.loc 1 574 25 view .LVU5925
 575:sieve_extend.c ****     }
 16452              		.loc 1 575 13 view .LVU5926
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16453              		.loc 1 574 32 view .LVU5927
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16454              		.loc 1 574 25 view .LVU5928
 575:sieve_extend.c ****     }
 16455              		.loc 1 575 13 view .LVU5929
 16456              	.LBE725:
 16457              	.LBB726:
 16458              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16459              		.loc 1 573 34 is_stmt 0 view .LVU5930
 16460 539f C525F3F1 		vpsllq	ymm14, ymm11, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16461              	.LBE726:
 16462              	.LBB727:
 16463              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16464              		.loc 1 575 22 view .LVU5931
 16465 53a3 C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], 
 16465      07800000 
 16465      00
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16466              		.loc 1 574 32 is_stmt 1 view .LVU5932
 16467              	.LVL1128:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16468              		.loc 1 574 25 view .LVU5933
 16469              	.LBE727:
 570:sieve_extend.c ****     {
 16470              		.loc 1 570 24 view .LVU5934
 570:sieve_extend.c ****     {
 16471              		.loc 1 570 12 view .LVU5935
 16472              	.LBB728:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16473              		.loc 1 572 25 view .LVU5936
GAS LISTING /tmp/ccW0oq2B.s 			page 441


 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16474              		.loc 1 573 13 view .LVU5937
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16475              		.loc 1 572 32 view .LVU5938
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16476              		.loc 1 572 25 view .LVU5939
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16477              		.loc 1 573 13 view .LVU5940
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16478              		.loc 1 572 32 view .LVU5941
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16479              		.loc 1 572 25 view .LVU5942
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16480              		.loc 1 573 13 view .LVU5943
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16481              		.loc 1 572 32 view .LVU5944
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16482              		.loc 1 572 25 view .LVU5945
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16483              		.loc 1 573 13 view .LVU5946
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16484              		.loc 1 572 32 view .LVU5947
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16485              		.loc 1 572 25 view .LVU5948
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16486              		.loc 1 572 25 is_stmt 0 view .LVU5949
 16487              	.LBE728:
 16488              	.LBB729:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16489              		.loc 1 574 25 is_stmt 1 view .LVU5950
 575:sieve_extend.c ****     }
 16490              		.loc 1 575 13 view .LVU5951
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16491              		.loc 1 574 32 view .LVU5952
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16492              		.loc 1 574 25 view .LVU5953
 575:sieve_extend.c ****     }
 16493              		.loc 1 575 13 view .LVU5954
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16494              		.loc 1 574 32 view .LVU5955
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16495              		.loc 1 574 25 view .LVU5956
 575:sieve_extend.c ****     }
 16496              		.loc 1 575 13 view .LVU5957
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16497              		.loc 1 574 32 view .LVU5958
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16498              		.loc 1 574 25 view .LVU5959
 575:sieve_extend.c ****     }
 16499              		.loc 1 575 13 view .LVU5960
 16500              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16501              		.loc 1 575 34 is_stmt 0 view .LVU5961
 16502 53ac C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.678, vect__102.677, _4
 16503 53b0 C5D5D3F0 		vpsrlq	ymm6, ymm5, xmm0	# vect__57.678, vect__102.677, _4
 16504              	.LBE729:
 16505              	.LBB730:
GAS LISTING /tmp/ccW0oq2B.s 			page 442


 16506              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16507              		.loc 1 573 34 view .LVU5962
 16508 53b4 C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], s
 16509              	.LBE730:
 16510              	.LBB731:
 16511              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16512              		.loc 1 575 34 view .LVU5963
 16513 53b8 C56DD3C8 		vpsrlq	ymm9, ymm2, xmm0	# vect__57.678, vect__102.677, _4
 16514              	.LBE731:
 16515              	.LBB732:
 16516              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16517              		.loc 1 573 34 view .LVU5964
 16518 53bc C53DF3D1 		vpsllq	ymm10, ymm8, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
 16519              	.LBE732:
 16520              	.LBB733:
 16521              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16522              		.loc 1 575 22 view .LVU5965
 16523 53c0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.683, vect__57.678, vect__104.682
 16523      FE
 16524 53c5 C5CDEBFB 		vpor	ymm7, ymm6, ymm3	# vect__58.683, vect__57.678, vect__104.682
 16525 53c9 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.683, vect__57.678, vect__104.682
 16525      DA
 16526 53ce 4183C208 		add	r10d, 8	# ivtmp.688,
 16527 53d2 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], 
 16527      07A00000 
 16527      00
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16528              		.loc 1 574 32 is_stmt 1 view .LVU5966
 16529              	.LVL1129:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16530              		.loc 1 574 25 view .LVU5967
 16531              	.LBE733:
 570:sieve_extend.c ****     {
 16532              		.loc 1 570 24 view .LVU5968
 570:sieve_extend.c ****     {
 16533              		.loc 1 570 12 view .LVU5969
 16534              	.LBB734:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16535              		.loc 1 572 25 view .LVU5970
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16536              		.loc 1 573 13 view .LVU5971
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16537              		.loc 1 572 32 view .LVU5972
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16538              		.loc 1 572 25 view .LVU5973
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16539              		.loc 1 573 13 view .LVU5974
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16540              		.loc 1 572 32 view .LVU5975
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16541              		.loc 1 572 25 view .LVU5976
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16542              		.loc 1 573 13 view .LVU5977
GAS LISTING /tmp/ccW0oq2B.s 			page 443


 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16543              		.loc 1 572 32 view .LVU5978
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16544              		.loc 1 572 25 view .LVU5979
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16545              		.loc 1 573 13 view .LVU5980
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16546              		.loc 1 572 32 view .LVU5981
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16547              		.loc 1 572 25 view .LVU5982
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16548              		.loc 1 572 25 is_stmt 0 view .LVU5983
 16549              	.LBE734:
 16550              	.LBB735:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16551              		.loc 1 574 25 is_stmt 1 view .LVU5984
 575:sieve_extend.c ****     }
 16552              		.loc 1 575 13 view .LVU5985
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16553              		.loc 1 574 32 view .LVU5986
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16554              		.loc 1 574 25 view .LVU5987
 575:sieve_extend.c ****     }
 16555              		.loc 1 575 13 view .LVU5988
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16556              		.loc 1 574 32 view .LVU5989
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16557              		.loc 1 574 25 view .LVU5990
 575:sieve_extend.c ****     }
 16558              		.loc 1 575 13 view .LVU5991
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16559              		.loc 1 574 32 view .LVU5992
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16560              		.loc 1 574 25 view .LVU5993
 575:sieve_extend.c ****     }
 16561              		.loc 1 575 13 view .LVU5994
 16562              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16563              		.loc 1 575 22 is_stmt 0 view .LVU5995
 16564 53db C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], v
 16564      07C00000 
 16564      00
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16565              		.loc 1 574 32 is_stmt 1 view .LVU5996
 16566              	.LVL1130:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16567              		.loc 1 574 25 view .LVU5997
 16568              	.LBE735:
 570:sieve_extend.c ****     {
 16569              		.loc 1 570 24 view .LVU5998
 570:sieve_extend.c ****     {
 16570              		.loc 1 570 12 view .LVU5999
 16571              	.LBB736:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16572              		.loc 1 572 25 view .LVU6000
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16573              		.loc 1 573 13 view .LVU6001
GAS LISTING /tmp/ccW0oq2B.s 			page 444


 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16574              		.loc 1 572 32 view .LVU6002
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16575              		.loc 1 572 25 view .LVU6003
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16576              		.loc 1 573 13 view .LVU6004
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16577              		.loc 1 572 32 view .LVU6005
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16578              		.loc 1 572 25 view .LVU6006
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16579              		.loc 1 573 13 view .LVU6007
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16580              		.loc 1 572 32 view .LVU6008
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16581              		.loc 1 572 25 view .LVU6009
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16582              		.loc 1 573 13 view .LVU6010
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16583              		.loc 1 572 32 view .LVU6011
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16584              		.loc 1 572 25 view .LVU6012
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16585              		.loc 1 572 25 is_stmt 0 view .LVU6013
 16586              	.LBE736:
 16587              	.LBB737:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16588              		.loc 1 574 25 is_stmt 1 view .LVU6014
 575:sieve_extend.c ****     }
 16589              		.loc 1 575 13 view .LVU6015
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16590              		.loc 1 574 32 view .LVU6016
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16591              		.loc 1 574 25 view .LVU6017
 575:sieve_extend.c ****     }
 16592              		.loc 1 575 13 view .LVU6018
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16593              		.loc 1 574 32 view .LVU6019
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16594              		.loc 1 574 25 view .LVU6020
 575:sieve_extend.c ****     }
 16595              		.loc 1 575 13 view .LVU6021
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16596              		.loc 1 574 32 view .LVU6022
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16597              		.loc 1 574 25 view .LVU6023
 575:sieve_extend.c ****     }
 16598              		.loc 1 575 13 view .LVU6024
 16599              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16600              		.loc 1 575 22 is_stmt 0 view .LVU6025
 16601 53e4 C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], 
 16601      07E00000 
 16601      00
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16602              		.loc 1 574 32 is_stmt 1 view .LVU6026
 16603              	.LVL1131:
GAS LISTING /tmp/ccW0oq2B.s 			page 445


 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16604              		.loc 1 574 25 view .LVU6027
 16605              	.LBE737:
 570:sieve_extend.c ****     {
 16606              		.loc 1 570 24 view .LVU6028
 570:sieve_extend.c ****     {
 16607              		.loc 1 570 12 view .LVU6029
 16608 53ed 48050001 		add	rax, 256	# ivtmp.691,
 16608      0000
 16609 53f3 4539D0   		cmp	r8d, r10d	# tmp172, ivtmp.688
 16610 53f6 0F87E2FE 		ja	.L1616	#,
 16610      FFFF
 16611              	.L1658:
 16612 53fc 4589CB   		mov	r11d, r9d	# _80, _80
 16613 53ff 49FFC3   		inc	r11	# tmp144
 16614 5402 49C1E305 		sal	r11, 5	# _105,
 16615 5406 4C01DF   		add	rdi, r11	# dst, _105
 16616 5409 4C01DE   		add	rsi, r11	# src, _105
 16617 540c 428D0485 		lea	eax, 0[0+r8*4]	# tmp.661,
 16617      00000000 
 16618              	.LVL1132:
 16619              	.L1617:
 577:sieve_extend.c ****     {
 16620              		.loc 1 577 12 view .LVU6030
 16621              	# sieve_extend.c:577:     for (; i < size; ++i,++src,++dst)
 577:sieve_extend.c ****     {
 16622              		.loc 1 577 5 is_stmt 0 view .LVU6031
 16623 5414 39C2     		cmp	edx, eax	# size, tmp.661
 16624 5416 0F8EAA00 		jle	.L1659	#,
 16624      0000
 16625 541c 448D42FF 		lea	r8d, -1[rdx]	# tmp147,
 16626 5420 41BA4000 		mov	r10d, 64	# tmp146,
 16626      0000
 16627 5426 4189D3   		mov	r11d, edx	# niters.656, size
 16628 5429 4129C0   		sub	r8d, eax	# tmp148, tmp.661
 16629 542c 4129CA   		sub	r10d, ecx	# _97, shift
 16630 542f 4129C3   		sub	r11d, eax	# niters.656, tmp.661
 16631 5432 4183F802 		cmp	r8d, 2	# tmp148,
 16632 5436 7640     		jbe	.L1618	#,
 16633              	.LVL1133:
 579:sieve_extend.c ****     }    
 16634              		.loc 1 579 9 is_stmt 1 view .LVU6032
 16635              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16636              		.loc 1 579 23 is_stmt 0 view .LVU6033
 16637 5438 C5FE6F0E 		vmovdqu	ymm1, YMMWORD PTR [rsi]	# tmp276, MEM[(const uint64_t *)src_30]
 16638              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16639              		.loc 1 579 43 view .LVU6034
 16640 543c C57E6F76 		vmovdqu	ymm14, YMMWORD PTR 8[rsi]	# tmp277, MEM[(const uint64_t *)src_30 + 8B]
 16640      08
 16641              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16642              		.loc 1 579 23 view .LVU6035
 16643 5441 C5F96EC1 		vmovd	xmm0, ecx	# shift, shift
 16644              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
GAS LISTING /tmp/ccW0oq2B.s 			page 446


 16645              		.loc 1 579 43 view .LVU6036
 16646 5445 C441796E 		vmovd	xmm13, r10d	# _97, _97
 16646      EA
 16647 544a 4589D9   		mov	r9d, r11d	# niters_vector_mult_vf.658, niters.656
 16648 544d 4183E1FC 		and	r9d, -4	# niters_vector_mult_vf.658,
 16649              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16650              		.loc 1 579 23 view .LVU6037
 16651 5451 C575D3E0 		vpsrlq	ymm12, ymm1, xmm0	# vect__17.665, tmp276, shift
 16652              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16653              		.loc 1 579 43 view .LVU6038
 16654 5455 C4410DF3 		vpsllq	ymm15, ymm14, xmm13	# vect__20.669, tmp277, _97
 16654      FD
 16655 545a 4589C8   		mov	r8d, r9d	# niters_vector_mult_vf.658, niters_vector_mult_vf.658
 16656 545d 49C1E003 		sal	r8, 3	# _129,
 16657              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16658              		.loc 1 579 32 view .LVU6039
 16659 5461 C4C11DEB 		vpor	ymm4, ymm12, ymm15	# vect__21.670, vect__17.665, vect__20.669
 16659      E7
 16660              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16661              		.loc 1 579 14 view .LVU6040
 16662 5466 C5FE7F27 		vmovdqu	YMMWORD PTR [rdi], ymm4	# MEM[(uint64_t *)dst_86], vect__21.670
 577:sieve_extend.c ****     {
 16663              		.loc 1 577 22 is_stmt 1 view .LVU6041
 577:sieve_extend.c ****     {
 16664              		.loc 1 577 12 view .LVU6042
 16665 546a 4C01C6   		add	rsi, r8	# src, _129
 16666 546d 4C01C7   		add	rdi, r8	# dst, _129
 16667 5470 4401C8   		add	eax, r9d	# tmp.661, niters_vector_mult_vf.658
 16668 5473 4539CB   		cmp	r11d, r9d	# niters.656, niters_vector_mult_vf.658
 16669 5476 744E     		je	.L1659	#,
 16670              	.L1618:
 16671              	.LVL1134:
 579:sieve_extend.c ****     }    
 16672              		.loc 1 579 9 view .LVU6043
 16673              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16674              		.loc 1 579 35 is_stmt 0 view .LVU6044
 16675 5478 4C8B4608 		mov	r8, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_110 + 8B]
 16676              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16677              		.loc 1 579 23 view .LVU6045
 16678 547c C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp157, *src_110, shift
 16678      0E
 16679              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16680              		.loc 1 579 43 view .LVU6046
 16681 5481 C442A9F7 		shlx	r11, r8, r10	# tmp159, _57, _97
 16681      D8
 16682              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16683              		.loc 1 579 32 view .LVU6047
 16684 5486 4D09D9   		or	r9, r11	# tmp160, tmp159
 16685 5489 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_109, tmp160
GAS LISTING /tmp/ccW0oq2B.s 			page 447


 577:sieve_extend.c ****     {
 16686              		.loc 1 577 22 is_stmt 1 view .LVU6048
 16687              	.LVL1135:
 577:sieve_extend.c ****     {
 16688              		.loc 1 577 12 view .LVU6049
 16689              	# sieve_extend.c:577:     for (; i < size; ++i,++src,++dst)
 577:sieve_extend.c ****     {
 16690              		.loc 1 577 22 is_stmt 0 view .LVU6050
 16691 548c 448D4801 		lea	r9d, 1[rax]	# i,
 16692              	.LVL1136:
 16693              	# sieve_extend.c:577:     for (; i < size; ++i,++src,++dst)
 577:sieve_extend.c ****     {
 16694              		.loc 1 577 5 view .LVU6051
 16695 5490 4439CA   		cmp	edx, r9d	# size, i
 16696 5493 7E31     		jle	.L1659	#,
 579:sieve_extend.c ****     }    
 16697              		.loc 1 579 9 is_stmt 1 view .LVU6052
 16698              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16699              		.loc 1 579 35 is_stmt 0 view .LVU6053
 16700 5495 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _21, MEM[(const uint64_t *)src_110 + 16B]
 16701              	.LVL1137:
 16702              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16703              		.loc 1 579 23 view .LVU6054
 16704 5499 C442F3F7 		shrx	r8, r8, rcx	# tmp162, _57, shift
 16704      C0
 16705              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16706              		.loc 1 579 43 view .LVU6055
 16707 549e C442A9F7 		shlx	r11, r9, r10	# tmp163, _21, _97
 16707      D9
 16708              	# sieve_extend.c:577:     for (; i < size; ++i,++src,++dst)
 577:sieve_extend.c ****     {
 16709              		.loc 1 577 22 view .LVU6056
 16710 54a3 83C002   		add	eax, 2	# i,
 16711              	.LVL1138:
 16712              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16713              		.loc 1 579 32 view .LVU6057
 16714 54a6 4D09D8   		or	r8, r11	# tmp164, tmp163
 16715 54a9 4C894708 		mov	QWORD PTR 8[rdi], r8	# MEM[(uint64_t *)dst_109 + 8B], tmp164
 577:sieve_extend.c ****     {
 16716              		.loc 1 577 22 is_stmt 1 view .LVU6058
 16717              	.LVL1139:
 577:sieve_extend.c ****     {
 16718              		.loc 1 577 12 view .LVU6059
 16719              	# sieve_extend.c:577:     for (; i < size; ++i,++src,++dst)
 577:sieve_extend.c ****     {
 16720              		.loc 1 577 5 is_stmt 0 view .LVU6060
 16721 54ad 39D0     		cmp	eax, edx	# i, size
 16722 54af 7D15     		jge	.L1659	#,
 579:sieve_extend.c ****     }    
 16723              		.loc 1 579 9 is_stmt 1 view .LVU6061
 16724              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16725              		.loc 1 579 43 is_stmt 0 view .LVU6062
GAS LISTING /tmp/ccW0oq2B.s 			page 448


 16726 54b1 488B5618 		mov	rdx, QWORD PTR 24[rsi]	# MEM[(const uint64_t *)src_110 + 24B], MEM[(const uint64_t *)src_110 +
 16727              	.LVL1140:
 16728              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16729              		.loc 1 579 23 view .LVU6063
 16730 54b5 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp168, _21, shift
 16730      C9
 16731              	.LVL1141:
 16732              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16733              		.loc 1 579 43 view .LVU6064
 16734 54ba C4E2A9F7 		shlx	rsi, rdx, r10	# tmp166, MEM[(const uint64_t *)src_110 + 24B], _97
 16734      F2
 16735              	.LVL1142:
 16736              	# sieve_extend.c:579:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 579:sieve_extend.c ****     }    
 16737              		.loc 1 579 32 view .LVU6065
 16738 54bf 4809F1   		or	rcx, rsi	# tmp169, tmp166
 16739 54c2 48894F10 		mov	QWORD PTR 16[rdi], rcx	# MEM[(uint64_t *)dst_109 + 16B], tmp169
 577:sieve_extend.c ****     {
 16740              		.loc 1 577 22 is_stmt 1 view .LVU6066
 16741              	.LVL1143:
 577:sieve_extend.c ****     {
 16742              		.loc 1 577 12 view .LVU6067
 16743              	.L1659:
 577:sieve_extend.c ****     {
 16744              		.loc 1 577 12 is_stmt 0 view .LVU6068
 16745 54c6 C5F877   		vzeroupper
 16746              	# sieve_extend.c:581: }
 581:sieve_extend.c **** 
 16747              		.loc 1 581 1 view .LVU6069
 16748 54c9 C3       		ret	
 16749              	.LVL1144:
 16750              	.L1661:
 16751              	.LBB738:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16752              		.loc 1 572 25 is_stmt 1 view .LVU6070
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16753              		.loc 1 573 13 view .LVU6071
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16754              		.loc 1 572 32 view .LVU6072
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16755              		.loc 1 572 25 view .LVU6073
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16756              		.loc 1 573 13 view .LVU6074
 16757              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16758              		.loc 1 573 25 is_stmt 0 view .LVU6075
 16759 54ca C5FE6F7E 		vmovdqu	ymm7, YMMWORD PTR 32[rsi]	# MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], MEM[ba
 16759      20
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16760              		.loc 1 572 32 is_stmt 1 view .LVU6076
 16761              	.LVL1145:
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16762              		.loc 1 572 25 view .LVU6077
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16763              		.loc 1 573 13 view .LVU6078
GAS LISTING /tmp/ccW0oq2B.s 			page 449


 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16764              		.loc 1 572 32 view .LVU6079
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16765              		.loc 1 572 25 view .LVU6080
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16766              		.loc 1 573 13 view .LVU6081
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16767              		.loc 1 572 32 view .LVU6082
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16768              		.loc 1 572 25 view .LVU6083
 572:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16769              		.loc 1 572 25 is_stmt 0 view .LVU6084
 16770              	.LBE738:
 16771              	.LBB739:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16772              		.loc 1 574 25 is_stmt 1 view .LVU6085
 575:sieve_extend.c ****     }
 16773              		.loc 1 575 13 view .LVU6086
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16774              		.loc 1 574 32 view .LVU6087
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16775              		.loc 1 574 25 view .LVU6088
 575:sieve_extend.c ****     }
 16776              		.loc 1 575 13 view .LVU6089
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16777              		.loc 1 574 32 view .LVU6090
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16778              		.loc 1 574 25 view .LVU6091
 575:sieve_extend.c ****     }
 16779              		.loc 1 575 13 view .LVU6092
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16780              		.loc 1 574 32 view .LVU6093
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16781              		.loc 1 574 25 view .LVU6094
 575:sieve_extend.c ****     }
 16782              		.loc 1 575 13 view .LVU6095
 16783 54cf 41BA0200 		mov	r10d, 2	# ivtmp.688,
 16783      0000
 16784              	.LBE739:
 16785              	.LBB740:
 16786              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16787              		.loc 1 573 25 is_stmt 0 view .LVU6096
 16788 54d5 C463FD00 		vpermq	ymm8, ymm7, 85	# vect__102.677, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B],
 16788      C755
 16789              	.LBE740:
 16790              	.LBB741:
 16791              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16792              		.loc 1 575 34 view .LVU6097
 16793 54db C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.678, vect__102.677, _4
 16794              	.LBE741:
 16795              	.LBB742:
 16796              	# sieve_extend.c:573:             *(dst+j) = (*(src+j))<<shift;
 573:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16797              		.loc 1 573 34 view .LVU6098
 16798 54df C545F3D1 		vpsllq	ymm10, ymm7, xmm1	# vect__104.682, MEM[base: src_35(D), index: ivtmp.691_114, offset: 0B], 
GAS LISTING /tmp/ccW0oq2B.s 			page 450


 16799 54e3 B8400000 		mov	eax, 64	# ivtmp.691,
 16799      00
 16800              	.LBE742:
 16801              	.LBB743:
 16802              	# sieve_extend.c:575:             *(dst+j) |= (*(src+1)>>(64-shift));
 575:sieve_extend.c ****     }
 16803              		.loc 1 575 22 view .LVU6099
 16804 54e8 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.683, vect__57.678, vect__104.682
 16804      DA
 16805 54ed C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.691_114, offset: 0B], vect_
 16805      20
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16806              		.loc 1 574 32 is_stmt 1 view .LVU6100
 16807              	.LVL1146:
 574:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16808              		.loc 1 574 25 view .LVU6101
 16809              	.LBE743:
 570:sieve_extend.c ****     {
 16810              		.loc 1 570 24 view .LVU6102
 570:sieve_extend.c ****     {
 16811              		.loc 1 570 12 view .LVU6103
 16812 54f2 E909FDFF 		jmp	.L1650	#
 16812      FF
 16813              	.LVL1147:
 16814              	.L1660:
 16815              	# sieve_extend.c:568:     int i = 0;
 568:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16816              		.loc 1 568 9 is_stmt 0 view .LVU6104
 16817 54f7 31C0     		xor	eax, eax	# tmp.661
 16818 54f9 E916FFFF 		jmp	.L1617	#
 16818      FF
 16819              		.cfi_endproc
 16820              	.LFE68:
 16822              		.section	.rodata.str1.8,"aMS",@progbits,1
 16823              		.align 8
 16824              	.LC5:
 16825 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 16825      6C743A20 
 16825      53696576 
 16825      6573697A 
 16825      6520256A 
 16826 0055 000000   		.align 8
 16827              	.LC6:
 16828 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 16828      616C6964 
 16828      20726573 
 16828      756C742E 
 16828      20536965 
 16829              		.section	.rodata.str1.1
 16830              	.LC7:
 16831 0023 44656570 		.string	"DeepAnalyzing"
 16831      416E616C 
 16831      797A696E 
 16831      6700
 16832              		.section	.rodata.str1.8
 16833 00bb 00000000 		.align 8
 16833      00
GAS LISTING /tmp/ccW0oq2B.s 			page 451


 16834              	.LC8:
 16835 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 16835      65722025 
 16835      6A752028 
 16835      256A7529 
 16835      20776173 
 16836              		.align 8
 16837              	.LC9:
 16838 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 16838      65722025 
 16838      6A752028 
 16838      256A7529 
 16838      20776173 
 16839              		.text
 16840 54fe 6690     		.p2align 4
 16841              		.globl	validatePrimeCount
 16843              	validatePrimeCount:
 16844              	.LVL1148:
 16845              	.LFB81:
1041:sieve_extend.c **** 
 16846              		.loc 1 1041 76 is_stmt 1 view -0
 16847              		.cfi_startproc
1041:sieve_extend.c **** 
 16848              		.loc 1 1041 76 is_stmt 0 view .LVU6106
 16849 5500 F30F1EFA 		endbr64	
1043:sieve_extend.c ****     counter_t valid_primes = 0;
 16850              		.loc 1 1043 5 is_stmt 1 view .LVU6107
 16851              	# sieve_extend.c:1041: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1041:sieve_extend.c **** 
 16852              		.loc 1 1041 76 is_stmt 0 view .LVU6108
 16853 5504 4157     		push	r15	#
 16854              		.cfi_def_cfa_offset 16
 16855              		.cfi_offset 15, -16
 16856 5506 4156     		push	r14	#
 16857              		.cfi_def_cfa_offset 24
 16858              		.cfi_offset 14, -24
 16859 5508 4155     		push	r13	#
 16860              		.cfi_def_cfa_offset 32
 16861              		.cfi_offset 13, -32
 16862 550a 4154     		push	r12	#
 16863              		.cfi_def_cfa_offset 40
 16864              		.cfi_offset 12, -40
 16865 550c 55       		push	rbp	#
 16866              		.cfi_def_cfa_offset 48
 16867              		.cfi_offset 6, -48
 16868 550d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 16869 5510 53       		push	rbx	#
 16870              		.cfi_def_cfa_offset 56
 16871              		.cfi_offset 3, -56
 16872 5511 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 16873 5513 4883EC28 		sub	rsp, 40	#,
 16874              		.cfi_def_cfa_offset 96
 16875              	# sieve_extend.c:1043:     counter_t primecount = count_primes(sieve);
1043:sieve_extend.c ****     counter_t valid_primes = 0;
 16876              		.loc 1 1043 28 view .LVU6109
 16877 5517 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 16878 551a 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
GAS LISTING /tmp/ccW0oq2B.s 			page 452


 16879              	.LVL1149:
 16880              	.LBB765:
 16881              	.LBI765:
1012:sieve_extend.c ****     counter_t primeCount = 1;
 16882              		.loc 1 1012 18 is_stmt 1 view .LVU6110
 16883              	.LBB766:
 16884              	.LBB767:
1014:sieve_extend.c ****     return primeCount;
 16885              		.loc 1 1014 30 view .LVU6111
 16886 551e 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 16887              	# sieve_extend.c:1014:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1014:sieve_extend.c ****     return primeCount;
 16888              		.loc 1 1014 5 is_stmt 0 view .LVU6112
 16889 5522 4883FF01 		cmp	rdi, 1	# _25,
 16890 5526 0F861705 		jbe	.L1663	#,
 16890      0000
 16891              	# sieve_extend.c:1014:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1014:sieve_extend.c ****     return primeCount;
 16892              		.loc 1 1014 20 view .LVU6113
 16893 552c B8010000 		mov	eax, 1	# factor,
 16893      00
 16894              	.LBE767:
 16895              	# sieve_extend.c:1013:     counter_t primeCount = 1;
1013:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 16896              		.loc 1 1013 15 view .LVU6114
 16897 5531 41B80100 		mov	r8d, 1	# primeCount,
 16897      0000
 16898              	.LVL1150:
 16899 5537 660F1F84 		.p2align 4,,10
 16899      00000000 
 16899      00
 16900              		.p2align 3
 16901              	.L1666:
 16902              	.LBB770:
1014:sieve_extend.c ****     return primeCount;
 16903              		.loc 1 1014 104 is_stmt 1 view .LVU6115
 16904              	# sieve_extend.c:1014:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1014:sieve_extend.c ****     return primeCount;
 16905              		.loc 1 1014 114 is_stmt 0 view .LVU6116
 16906 5540 49FFC0   		inc	r8	# primeCount
 16907              	.LVL1151:
1014:sieve_extend.c ****     return primeCount;
 16908              		.loc 1 1014 52 is_stmt 1 view .LVU6117
 16909              	# sieve_extend.c:1014:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1014:sieve_extend.c ****     return primeCount;
 16910              		.loc 1 1014 61 is_stmt 0 view .LVU6118
 16911 5543 48FFC0   		inc	rax	# factor
 16912              	.LVL1152:
 16913              	.L1806:
 16914              	.LBB768:
 16915              	.LBI768:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 16916              		.loc 1 123 25 is_stmt 1 view .LVU6119
 16917              	.LBB769:
 124:sieve_extend.c ****     return index;
 16918              		.loc 1 124 5 view .LVU6120
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccW0oq2B.s 			page 453


 16919              		.loc 1 124 11 view .LVU6121
 16920              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16921              		.loc 1 124 21 is_stmt 0 view .LVU6122
 16922 5546 4889C1   		mov	rcx, rax	# tmp162, factor
 16923 5549 48C1E906 		shr	rcx, 6	# tmp162,
 16924              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16925              		.loc 1 124 12 view .LVU6123
 16926 554d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 16927              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16928              		.loc 1 124 11 view .LVU6124
 16929 5551 490FA3C3 		bt	r11, rax	# *_106, factor
 16930 5555 0F83AD00 		jnc	.L1664	#,
 16930      0000
 124:sieve_extend.c ****     return index;
 16931              		.loc 1 124 58 is_stmt 1 view .LVU6125
 16932              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16933              		.loc 1 124 63 is_stmt 0 view .LVU6126
 16934 555b 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 16935              	.LVL1153:
 16936              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16937              		.loc 1 124 21 view .LVU6127
 16938 555f 4D89E5   		mov	r13, r12	# tmp167, factor
 16939 5562 49C1ED06 		shr	r13, 6	# tmp167,
 16940              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16941              		.loc 1 124 12 view .LVU6128
 16942 5566 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 16943              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16944              		.loc 1 124 63 view .LVU6129
 16945 556a 4C89E0   		mov	rax, r12	# factor, tmp235
 124:sieve_extend.c ****     return index;
 16946              		.loc 1 124 11 is_stmt 1 view .LVU6130
 16947 556d 4D0FA3E7 		bt	r15, r12	# *_35, factor
 16948 5571 0F839100 		jnc	.L1664	#,
 16948      0000
 124:sieve_extend.c ****     return index;
 16949              		.loc 1 124 58 view .LVU6131
 16950              	.LVL1154:
 16951              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16952              		.loc 1 124 63 is_stmt 0 view .LVU6132
 16953 5577 48FFC0   		inc	rax	# factor
 16954              	.LVL1155:
 124:sieve_extend.c ****     return index;
 16955              		.loc 1 124 11 is_stmt 1 view .LVU6133
 16956              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16957              		.loc 1 124 21 is_stmt 0 view .LVU6134
 16958 557a 4989C6   		mov	r14, rax	# tmp279, factor
 16959 557d 49C1EE06 		shr	r14, 6	# tmp279,
 16960              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccW0oq2B.s 			page 454


 124:sieve_extend.c ****     return index;
 16961              		.loc 1 124 12 view .LVU6135
 16962 5581 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 16963              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16964              		.loc 1 124 11 view .LVU6136
 16965 5585 480FA3C6 		bt	rsi, rax	# *_35, factor
 16966 5589 737D     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 16967              		.loc 1 124 58 is_stmt 1 view .LVU6137
 16968              	.LVL1156:
 16969              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16970              		.loc 1 124 63 is_stmt 0 view .LVU6138
 16971 558b 498D4424 		lea	rax, 2[r12]	# factor,
 16971      02
 16972              	.LVL1157:
 124:sieve_extend.c ****     return index;
 16973              		.loc 1 124 11 is_stmt 1 view .LVU6139
 16974              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16975              		.loc 1 124 21 is_stmt 0 view .LVU6140
 16976 5590 4989C2   		mov	r10, rax	# tmp283, factor
 16977 5593 49C1EA06 		shr	r10, 6	# tmp283,
 16978              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16979              		.loc 1 124 12 view .LVU6141
 16980 5597 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 16981              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16982              		.loc 1 124 11 view .LVU6142
 16983 559b 480FA3C1 		bt	rcx, rax	# *_35, factor
 16984 559f 7367     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 16985              		.loc 1 124 58 is_stmt 1 view .LVU6143
 16986              	.LVL1158:
 16987              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16988              		.loc 1 124 63 is_stmt 0 view .LVU6144
 16989 55a1 498D4424 		lea	rax, 3[r12]	# factor,
 16989      03
 16990              	.LVL1159:
 124:sieve_extend.c ****     return index;
 16991              		.loc 1 124 11 is_stmt 1 view .LVU6145
 16992              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16993              		.loc 1 124 21 is_stmt 0 view .LVU6146
 16994 55a6 4989C3   		mov	r11, rax	# tmp287, factor
 16995 55a9 49C1EB06 		shr	r11, 6	# tmp287,
 16996              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 16997              		.loc 1 124 12 view .LVU6147
 16998 55ad 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 16999              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17000              		.loc 1 124 11 view .LVU6148
 17001 55b1 490FA3C5 		bt	r13, rax	# *_35, factor
GAS LISTING /tmp/ccW0oq2B.s 			page 455


 17002 55b5 7351     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 17003              		.loc 1 124 58 is_stmt 1 view .LVU6149
 17004              	.LVL1160:
 17005              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17006              		.loc 1 124 63 is_stmt 0 view .LVU6150
 17007 55b7 498D4424 		lea	rax, 4[r12]	# factor,
 17007      04
 17008              	.LVL1161:
 124:sieve_extend.c ****     return index;
 17009              		.loc 1 124 11 is_stmt 1 view .LVU6151
 17010              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17011              		.loc 1 124 21 is_stmt 0 view .LVU6152
 17012 55bc 4989C7   		mov	r15, rax	# tmp291, factor
 17013 55bf 49C1EF06 		shr	r15, 6	# tmp291,
 17014              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17015              		.loc 1 124 12 view .LVU6153
 17016 55c3 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17017              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17018              		.loc 1 124 11 view .LVU6154
 17019 55c7 490FA3C6 		bt	r14, rax	# *_35, factor
 17020 55cb 733B     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 17021              		.loc 1 124 58 is_stmt 1 view .LVU6155
 17022              	.LVL1162:
 17023              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17024              		.loc 1 124 63 is_stmt 0 view .LVU6156
 17025 55cd 498D4424 		lea	rax, 5[r12]	# factor,
 17025      05
 17026              	.LVL1163:
 124:sieve_extend.c ****     return index;
 17027              		.loc 1 124 11 is_stmt 1 view .LVU6157
 17028              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17029              		.loc 1 124 21 is_stmt 0 view .LVU6158
 17030 55d2 4889C6   		mov	rsi, rax	# tmp295, factor
 17031 55d5 48C1EE06 		shr	rsi, 6	# tmp295,
 17032              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17033              		.loc 1 124 12 view .LVU6159
 17034 55d9 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17035              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17036              		.loc 1 124 11 view .LVU6160
 17037 55dd 490FA3C2 		bt	r10, rax	# *_35, factor
 17038 55e1 7325     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 17039              		.loc 1 124 58 is_stmt 1 view .LVU6161
 17040              	.LVL1164:
 17041              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17042              		.loc 1 124 63 is_stmt 0 view .LVU6162
GAS LISTING /tmp/ccW0oq2B.s 			page 456


 17043 55e3 498D4424 		lea	rax, 6[r12]	# factor,
 17043      06
 17044              	.LVL1165:
 124:sieve_extend.c ****     return index;
 17045              		.loc 1 124 11 is_stmt 1 view .LVU6163
 17046              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17047              		.loc 1 124 21 is_stmt 0 view .LVU6164
 17048 55e8 4889C1   		mov	rcx, rax	# tmp299, factor
 17049 55eb 48C1E906 		shr	rcx, 6	# tmp299,
 17050              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17051              		.loc 1 124 12 view .LVU6165
 17052 55ef 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17053              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17054              		.loc 1 124 11 view .LVU6166
 17055 55f3 490FA3C3 		bt	r11, rax	# *_35, factor
 17056 55f7 730F     		jnc	.L1664	#,
 124:sieve_extend.c ****     return index;
 17057              		.loc 1 124 58 is_stmt 1 view .LVU6167
 17058              	.LVL1166:
 17059              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 17060              		.loc 1 124 63 is_stmt 0 view .LVU6168
 17061 55f9 498D4424 		lea	rax, 7[r12]	# factor,
 17061      07
 17062              	.LVL1167:
 124:sieve_extend.c ****     return index;
 17063              		.loc 1 124 11 is_stmt 1 view .LVU6169
 17064 55fe E943FFFF 		jmp	.L1806	#
 17064      FF
 17065              		.p2align 4,,10
 17066 5603 0F1F4400 		.p2align 3
 17066      00
 17067              	.L1664:
 17068              	.LVL1168:
 124:sieve_extend.c ****     return index;
 17069              		.loc 1 124 11 is_stmt 0 view .LVU6170
 17070              	.LBE769:
 17071              	.LBE768:
1014:sieve_extend.c ****     return primeCount;
 17072              		.loc 1 1014 30 is_stmt 1 view .LVU6171
 17073              	# sieve_extend.c:1014:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1014:sieve_extend.c ****     return primeCount;
 17074              		.loc 1 1014 5 is_stmt 0 view .LVU6172
 17075 5608 4839C7   		cmp	rdi, rax	# _25, factor
 17076 560b 0F872FFF 		ja	.L1666	#,
 17076      FFFF
1014:sieve_extend.c ****     return primeCount;
 17077              		.loc 1 1014 5 view .LVU6173
 17078              	.LBE770:
1015:sieve_extend.c **** }
 17079              		.loc 1 1015 5 is_stmt 1 view .LVU6174
 17080              	.LVL1169:
1015:sieve_extend.c **** }
 17081              		.loc 1 1015 5 is_stmt 0 view .LVU6175
GAS LISTING /tmp/ccW0oq2B.s 			page 457


 17082              	.LBE766:
 17083              	.LBE765:
1044:sieve_extend.c ****     switch(sieve->size) {
 17084              		.loc 1 1044 5 is_stmt 1 view .LVU6176
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17085              		.loc 1 1045 5 view .LVU6177
 17086 5611 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17087 5614 0F9FC2   		setg	dl	#, tmp172
 17088 5617 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17088      860100
 17089 561e 0F843806 		je	.L1667	#,
 17089      0000
 17090 5624 0F86CA02 		jbe	.L1807	#,
 17090      0000
 17091 562a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17091      E1F505
 17092 5631 0F84E405 		je	.L1675	#,
 17092      0000
 17093 5637 0F863303 		jbe	.L1808	#,
 17093      0000
 17094 563d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17094      CA9A3B
 17095 5644 0F85F605 		jne	.L1673	#,
 17095      0000
 17096 564a 4981F82E 		cmp	r8, 50847534	# primeCount,
 17096      DF0703
 17097 5651 410F94C4 		sete	r12b	#, tmp189
 17098 5655 4421E2   		and	edx, r12d	# _251, tmp189
 17099 5658 4981F82E 		cmp	r8, 50847534	# primeCount,
 17099      DF0703
 17100 565f 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17101 5663 410F95C6 		setne	r14b	#, _135
1054:sieve_extend.c ****         default:            valid_primes= 0;
 17102              		.loc 1 1054 29 view .LVU6178
 17103              	.LVL1170:
1054:sieve_extend.c ****         default:            valid_primes= 0;
 17104              		.loc 1 1054 54 view .LVU6179
 17105              	# sieve_extend.c:1054:         case 1000000000:    valid_primes = 50847534; break;
1054:sieve_extend.c ****         default:            valid_primes= 0;
 17106              		.loc 1 1054 42 is_stmt 0 view .LVU6180
 17107 5667 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17107      03
 17108              	.LVL1171:
 17109 566c 0F1F4000 		.p2align 4,,10
 17110              		.p2align 3
 17111              	.L1680:
1058:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17112              		.loc 1 1058 5 is_stmt 1 view .LVU6181
1059:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17113              		.loc 1 1059 5 view .LVU6182
 17114              	# sieve_extend.c:1059:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1059:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17115              		.loc 1 1059 8 is_stmt 0 view .LVU6183
 17116 5670 84D2     		test	dl, dl	# _251
 17117 5672 0F842204 		je	.L1681	#,
 17117      0000
1059:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
GAS LISTING /tmp/ccW0oq2B.s 			page 458


 17118              		.loc 1 1059 45 is_stmt 1 discriminator 1 view .LVU6184
 17119              	.LVL1172:
 17120              	.LBB772:
 17121              	.LBI772:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17122              		.loc 3 105 1 discriminator 1 view .LVU6185
 17123              	.LBB773:
 17124              		.loc 3 107 3 discriminator 1 view .LVU6186
 17125              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17126              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6187
 17127 5678 4C89CA   		mov	rdx, r9	#, pretmp_199
 17128 567b 488D3500 		lea	rsi, .LC5[rip]	#,
 17128      000000
 17129 5682 BF010000 		mov	edi, 1	#,
 17129      00
 17130 5687 31C0     		xor	eax, eax	#
 17131 5689 E8000000 		call	__printf_chk@PLT	#
 17131      00
 17132              	.LVL1173:
 17133              		.loc 3 107 10 discriminator 1 view .LVU6188
 17134              	.LBE773:
 17135              	.LBE772:
1060:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17136              		.loc 1 1060 5 is_stmt 1 discriminator 1 view .LVU6189
 17137              	.L1682:
1064:sieve_extend.c ****     return (valid);
 17138              		.loc 1 1064 5 view .LVU6190
 17139              	# sieve_extend.c:1064:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1064:sieve_extend.c ****     return (valid);
 17140              		.loc 1 1064 8 is_stmt 0 view .LVU6191
 17141 568e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17142 5691 0F8E4B02 		jle	.L1662	#,
 17142      0000
 17143 5697 4584F6   		test	r14b, r14b	# _135
 17144 569a 0F844202 		je	.L1662	#,
 17144      0000
1064:sieve_extend.c ****     return (valid);
 17145              		.loc 1 1064 45 is_stmt 1 discriminator 1 view .LVU6192
 17146              	.LBB774:
 17147              	.LBI774:
1018:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17148              		.loc 1 1018 13 discriminator 1 view .LVU6193
 17149              	.LVL1174:
 17150              	.LBB775:
1019:sieve_extend.c ****     counter_t warn_prime = 0;
 17151              		.loc 1 1019 5 discriminator 1 view .LVU6194
 17152              	.LBB776:
 17153              	.LBI776:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17154              		.loc 3 105 1 discriminator 1 view .LVU6195
 17155              	.LBB777:
 17156              		.loc 3 107 3 discriminator 1 view .LVU6196
 17157              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17158              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6197
 17159 56a0 488D3D00 		lea	rdi, .LC7[rip]	#,
 17159      000000
 17160 56a7 E8000000 		call	puts@PLT	#
GAS LISTING /tmp/ccW0oq2B.s 			page 459


 17160      00
 17161              	.LVL1175:
 17162              		.loc 3 107 10 discriminator 1 view .LVU6198
 17163              	.LBE777:
 17164              	.LBE776:
1020:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17165              		.loc 1 1020 5 is_stmt 1 discriminator 1 view .LVU6199
1021:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17166              		.loc 1 1021 5 discriminator 1 view .LVU6200
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17167              		.loc 1 1022 5 discriminator 1 view .LVU6201
 17168              	.LBB778:
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17169              		.loc 1 1022 10 discriminator 1 view .LVU6202
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17170              		.loc 1 1022 31 discriminator 1 view .LVU6203
 17171              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17172              		.loc 1 1022 44 is_stmt 0 discriminator 1 view .LVU6204
 17173 56ac 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17174              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17175              		.loc 1 1022 5 discriminator 1 view .LVU6205
 17176 56b0 4883FF01 		cmp	rdi, 1	# _137,
 17177 56b4 0F862802 		jbe	.L1662	#,
 17177      0000
 17178              	.LBE778:
 17179              	# sieve_extend.c:1021:     counter_t warn_nonprime = 0;
1021:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17180              		.loc 1 1021 15 view .LVU6206
 17181 56ba 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 17181      08000000 
 17181      00
 17182              	.LBB800:
 17183              	.LBB779:
 17184              	.LBB780:
 17185              	.LBB781:
 17186              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17187              		.loc 3 107 10 view .LVU6207
 17188 56c3 44896C24 		mov	DWORD PTR 20[rsp], r13d	# %sfp, <retval>
 17188      14
 17189              	.LBE781:
 17190              	.LBE780:
 17191              	.LBE779:
 17192              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17193              		.loc 1 1022 5 view .LVU6208
 17194 56c8 41BF0200 		mov	r15d, 2	# ivtmp.724,
 17194      0000
 17195 56ce 41BC0300 		mov	r12d, 3	# ivtmp.722,
 17195      0000
 17196              	.LBE800:
 17197              	# sieve_extend.c:1020:     counter_t warn_prime = 0;
1020:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17198              		.loc 1 1020 15 view .LVU6209
 17199 56d4 4531C0   		xor	r8d, r8d	# warn_prime
 17200              	.LBB801:
GAS LISTING /tmp/ccW0oq2B.s 			page 460


 17201              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17202              		.loc 1 1022 20 view .LVU6210
 17203 56d7 41BE0100 		mov	r14d, 1	# prime,
 17203      0000
 17204              	.LBB788:
 17205              	.LBB785:
 17206              	.LBB782:
 17207              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17208              		.loc 3 107 10 view .LVU6211
 17209 56dd 4989ED   		mov	r13, rbp	# sieve, sieve
 17210              	.LVL1176:
 17211              		.p2align 4,,10
 17212              		.p2align 3
 17213              	.L1692:
 17214              		.loc 3 107 10 view .LVU6212
 17215              	.LBE782:
 17216              	.LBE785:
 17217              	.LBE788:
1023:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17218              		.loc 1 1023 9 is_stmt 1 view .LVU6213
 17219              	# sieve_extend.c:1023:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1023:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17220              		.loc 1 1023 29 is_stmt 0 view .LVU6214
 17221 56e0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 17222              	# sieve_extend.c:1023:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1023:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17223              		.loc 1 1023 30 view .LVU6215
 17224 56e4 4C89F3   		mov	rbx, r14	# tmp198, prime
 17225 56e7 48C1EB06 		shr	rbx, 6	# tmp198,
 17226              	# sieve_extend.c:1023:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1023:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17227              		.loc 1 1023 71 view .LVU6216
 17228 56eb 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 17228      00
 17229 56f0 C4C28BF7 		shrx	rcx, r9, r14	# tmp201, *_47, prime
 17229      C9
 17230              	# sieve_extend.c:1023:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1023:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17231              		.loc 1 1023 12 view .LVU6217
 17232 56f5 83E101   		and	ecx, 1	# c,
 17233 56f8 0F84BA02 		je	.L1684	#,
 17233      0000
 17234              	.LVL1177:
 17235              	.LBB789:
 17236              	.LBB790:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17237              		.loc 1 1032 32 is_stmt 1 view .LVU6218
 17238              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17239              		.loc 1 1032 13 is_stmt 0 view .LVU6219
 17240 56fe BE030000 		mov	esi, 3	# ivtmp.714,
 17240      00
 17241              	.LBE790:
 17242              	# sieve_extend.c:1031:             counter_t c_prime = 0;
1031:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 17243              		.loc 1 1031 23 view .LVU6220
GAS LISTING /tmp/ccW0oq2B.s 			page 461


 17244 5703 31ED     		xor	ebp, ebp	# c_prime
 17245              	.LBB791:
 17246              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17247              		.loc 1 1032 13 view .LVU6221
 17248 5705 4885FF   		test	rdi, rdi	# _137
 17249 5708 0F84EC03 		je	.L1796	#,
 17249      0000
 17250 570e 4989FB   		mov	r11, rdi	# tmp231, _137
 17251 5711 4929CB   		sub	r11, rcx	# tmp231, c
 17252 5714 4183E303 		and	r11d, 3	# tmp231,
 17253 5718 4D89DA   		mov	r10, r11	# tmp232, tmp231
 17254 571b 0F84B700 		je	.L1685	#,
 17254      0000
 17255              	.LVL1178:
1033:sieve_extend.c ****             }
 17256              		.loc 1 1033 17 is_stmt 1 view .LVU6222
 17257              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17258              		.loc 1 1033 48 is_stmt 0 view .LVU6223
 17259 5721 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 17260 5725 4C39F8   		cmp	rax, r15	# tmp239, ivtmp.724
 17261 5728 7411     		je	.L1737	#,
 17262              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17263              		.loc 1 1033 33 view .LVU6224
 17264 572a 31D2     		xor	edx, edx	# tmp241
 17265 572c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.722
 17266 572f 48F7F6   		div	rsi	# ivtmp.714
 17267              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17268              		.loc 1 1033 82 view .LVU6225
 17269 5732 31ED     		xor	ebp, ebp	# c_prime
1033:sieve_extend.c ****             }
 17270              		.loc 1 1033 82 view .LVU6226
 17271 5734 4885D2   		test	rdx, rdx	# tmp241
 17272 5737 400F94C5 		sete	bpl	#, c_prime
 17273              	.LVL1179:
 17274              	.L1737:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17275              		.loc 1 1032 68 is_stmt 1 view .LVU6227
 17276              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17277              		.loc 1 1032 69 is_stmt 0 view .LVU6228
 17278 573b 48FFC1   		inc	rcx	# c
 17279              	.LVL1180:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17280              		.loc 1 1032 32 is_stmt 1 view .LVU6229
 17281              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17282              		.loc 1 1032 13 is_stmt 0 view .LVU6230
 17283 573e 4839F9   		cmp	rcx, rdi	# c, _137
 17284 5741 0F877901 		ja	.L1691	#,
 17284      0000
 17285              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17286              		.loc 1 1032 51 view .LVU6231
GAS LISTING /tmp/ccW0oq2B.s 			page 462


 17287 5747 4989C9   		mov	r9, rcx	# tmp244, c
 17288 574a 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 17289 574e BE050000 		mov	esi, 5	# ivtmp.714,
 17289      00
 17290              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17291              		.loc 1 1032 47 view .LVU6232
 17292 5753 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.722
 17293 5756 0F876401 		ja	.L1691	#,
 17293      0000
 17294 575c 4983FA01 		cmp	r10, 1	# tmp232,
 17295 5760 7476     		je	.L1685	#,
 17296 5762 4983FA02 		cmp	r10, 2	# tmp232,
 17297 5766 7437     		je	.L1768	#,
1033:sieve_extend.c ****             }
 17298              		.loc 1 1033 17 is_stmt 1 view .LVU6233
 17299              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17300              		.loc 1 1033 48 is_stmt 0 view .LVU6234
 17301 5768 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 17302 576c 4C39FB   		cmp	rbx, r15	# tmp245, ivtmp.724
 17303 576f 7417     		je	.L1739	#,
 17304              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17305              		.loc 1 1033 33 view .LVU6235
 17306 5771 31D2     		xor	edx, edx	# tmp247
 17307 5773 4C89E0   		mov	rax, r12	# tmp248, ivtmp.722
 17308 5776 48F7F6   		div	rsi	# ivtmp.714
 17309              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17310              		.loc 1 1033 20 view .LVU6236
 17311 5779 4885D2   		test	rdx, rdx	# tmp247
 17312 577c 410F94C3 		sete	r11b	#, tmp249
 17313              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17314              		.loc 1 1033 82 view .LVU6237
 17315 5780 4180FB01 		cmp	r11b, 1	# tmp249,
 17316 5784 4883DDFF 		sbb	rbp, -1	# c_prime,
 17317              	.LVL1181:
 17318              	.L1739:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17319              		.loc 1 1032 68 is_stmt 1 view .LVU6238
 17320              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17321              		.loc 1 1032 69 is_stmt 0 view .LVU6239
 17322 5788 48FFC1   		inc	rcx	# c
 17323              	.LVL1182:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17324              		.loc 1 1032 32 is_stmt 1 view .LVU6240
 17325              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17326              		.loc 1 1032 51 is_stmt 0 view .LVU6241
 17327 578b 4989CA   		mov	r10, rcx	# tmp250, c
 17328 578e 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 17329 5792 4883C602 		add	rsi, 2	# ivtmp.714,
 17330              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccW0oq2B.s 			page 463


 17331              		.loc 1 1032 47 view .LVU6242
 17332 5796 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.722
 17333 5799 0F872101 		ja	.L1691	#,
 17333      0000
 17334              	.L1768:
1033:sieve_extend.c ****             }
 17335              		.loc 1 1033 17 is_stmt 1 view .LVU6243
 17336              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17337              		.loc 1 1033 48 is_stmt 0 view .LVU6244
 17338 579f 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 17339 57a3 4D39F9   		cmp	r9, r15	# tmp251, ivtmp.724
 17340 57a6 7415     		je	.L1742	#,
 17341              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17342              		.loc 1 1033 33 view .LVU6245
 17343 57a8 31D2     		xor	edx, edx	# tmp253
 17344 57aa 4C89E0   		mov	rax, r12	# tmp254, ivtmp.722
 17345 57ad 48F7F6   		div	rsi	# ivtmp.714
 17346              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17347              		.loc 1 1033 20 view .LVU6246
 17348 57b0 4885D2   		test	rdx, rdx	# tmp253
 17349 57b3 0F94C3   		sete	bl	#, tmp255
 17350              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17351              		.loc 1 1033 82 view .LVU6247
 17352 57b6 80FB01   		cmp	bl, 1	# tmp255,
 17353 57b9 4883DDFF 		sbb	rbp, -1	# c_prime,
 17354              	.LVL1183:
 17355              	.L1742:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17356              		.loc 1 1032 68 is_stmt 1 view .LVU6248
 17357              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17358              		.loc 1 1032 69 is_stmt 0 view .LVU6249
 17359 57bd 48FFC1   		inc	rcx	# c
 17360              	.LVL1184:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17361              		.loc 1 1032 32 is_stmt 1 view .LVU6250
 17362              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17363              		.loc 1 1032 51 is_stmt 0 view .LVU6251
 17364 57c0 4989CB   		mov	r11, rcx	# tmp256, c
 17365 57c3 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 17366 57c7 4883C602 		add	rsi, 2	# ivtmp.714,
 17367              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17368              		.loc 1 1032 47 view .LVU6252
 17369 57cb 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.722
 17370 57ce 0F87EC00 		ja	.L1691	#,
 17370      0000
 17371              	.LVL1185:
 17372              		.p2align 4,,10
 17373 57d4 0F1F4000 		.p2align 3
 17374              	.L1685:
1033:sieve_extend.c ****             }
GAS LISTING /tmp/ccW0oq2B.s 			page 464


 17375              		.loc 1 1033 17 is_stmt 1 view .LVU6253
 17376              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17377              		.loc 1 1033 48 is_stmt 0 view .LVU6254
 17378 57d8 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 17379 57dc 4D39FA   		cmp	r10, r15	# tmp210, ivtmp.724
 17380 57df 7417     		je	.L1690	#,
 17381              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17382              		.loc 1 1033 33 view .LVU6255
 17383 57e1 31D2     		xor	edx, edx	# tmp214
 17384 57e3 4C89E0   		mov	rax, r12	# tmp215, ivtmp.722
 17385 57e6 48F7F6   		div	rsi	# ivtmp.714
 17386              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17387              		.loc 1 1033 20 view .LVU6256
 17388 57e9 4885D2   		test	rdx, rdx	# tmp214
 17389 57ec 410F94C1 		sete	r9b	#, tmp217
 17390              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17391              		.loc 1 1033 82 view .LVU6257
 17392 57f0 4180F901 		cmp	r9b, 1	# tmp217,
 17393 57f4 4883DDFF 		sbb	rbp, -1	# c_prime,
 17394              	.LVL1186:
 17395              	.L1690:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17396              		.loc 1 1032 68 is_stmt 1 view .LVU6258
 17397              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17398              		.loc 1 1032 69 is_stmt 0 view .LVU6259
 17399 57f8 48FFC1   		inc	rcx	# tmp234
 17400              	.LVL1187:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17401              		.loc 1 1032 32 is_stmt 1 view .LVU6260
 17402              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17403              		.loc 1 1032 13 is_stmt 0 view .LVU6261
 17404 57fb 4839F9   		cmp	rcx, rdi	# tmp234, _137
 17405 57fe 0F87BC00 		ja	.L1691	#,
 17405      0000
 17406              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17407              		.loc 1 1032 51 view .LVU6262
 17408 5804 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 17409 5807 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 17410 580b 4883C602 		add	rsi, 2	# tmp233,
 17411              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17412              		.loc 1 1032 47 view .LVU6263
 17413 580f 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.722
 17414 5812 0F87A800 		ja	.L1691	#,
 17414      0000
1033:sieve_extend.c ****             }
 17415              		.loc 1 1033 17 is_stmt 1 view .LVU6264
 17416              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17417              		.loc 1 1033 48 is_stmt 0 view .LVU6265
GAS LISTING /tmp/ccW0oq2B.s 			page 465


 17418 5818 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 17419 581c 4D39FB   		cmp	r11, r15	# tmp257, ivtmp.724
 17420 581f 7417     		je	.L1746	#,
 17421              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17422              		.loc 1 1033 33 view .LVU6266
 17423 5821 31D2     		xor	edx, edx	# tmp259
 17424 5823 4C89E0   		mov	rax, r12	# tmp260, ivtmp.722
 17425 5826 48F7F6   		div	rsi	# tmp233
 17426              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17427              		.loc 1 1033 20 view .LVU6267
 17428 5829 4885D2   		test	rdx, rdx	# tmp259
 17429 582c 410F94C2 		sete	r10b	#, tmp261
 17430              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17431              		.loc 1 1033 82 view .LVU6268
 17432 5830 4180FA01 		cmp	r10b, 1	# tmp261,
 17433 5834 4883DDFF 		sbb	rbp, -1	# c_prime,
 17434              	.LVL1188:
 17435              	.L1746:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17436              		.loc 1 1032 68 is_stmt 1 view .LVU6269
 17437              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17438              		.loc 1 1032 69 is_stmt 0 view .LVU6270
 17439 5838 4C8D4901 		lea	r9, 1[rcx]	# c,
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17440              		.loc 1 1032 32 is_stmt 1 view .LVU6271
 17441              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17442              		.loc 1 1032 51 is_stmt 0 view .LVU6272
 17443 583c 4D89CB   		mov	r11, r9	# tmp264, c
 17444 583f 4D0FAFD9 		imul	r11, r9	# tmp264, c
 17445 5843 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.714,
 17446              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17447              		.loc 1 1032 47 view .LVU6273
 17448 5847 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.722
 17449 584a 7774     		ja	.L1691	#,
1033:sieve_extend.c ****             }
 17450              		.loc 1 1033 17 is_stmt 1 view .LVU6274
 17451              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17452              		.loc 1 1033 48 is_stmt 0 view .LVU6275
 17453 584c 4D01C9   		add	r9, r9	# tmp265
 17454 584f 4D39F9   		cmp	r9, r15	# tmp265, ivtmp.724
 17455 5852 7417     		je	.L1748	#,
 17456              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17457              		.loc 1 1033 33 view .LVU6276
 17458 5854 31D2     		xor	edx, edx	# tmp267
 17459 5856 4C89E0   		mov	rax, r12	# tmp268, ivtmp.722
 17460 5859 48F7F3   		div	rbx	# ivtmp.714
 17461              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17462              		.loc 1 1033 20 view .LVU6277
GAS LISTING /tmp/ccW0oq2B.s 			page 466


 17463 585c 4885D2   		test	rdx, rdx	# tmp267
 17464 585f 410F94C2 		sete	r10b	#, tmp269
 17465              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17466              		.loc 1 1033 82 view .LVU6278
 17467 5863 4180FA01 		cmp	r10b, 1	# tmp269,
 17468 5867 4883DDFF 		sbb	rbp, -1	# c_prime,
 17469              	.LVL1189:
 17470              	.L1748:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17471              		.loc 1 1032 68 is_stmt 1 view .LVU6279
 17472              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17473              		.loc 1 1032 69 is_stmt 0 view .LVU6280
 17474 586b 4C8D4902 		lea	r9, 2[rcx]	# c,
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17475              		.loc 1 1032 32 is_stmt 1 view .LVU6281
 17476              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17477              		.loc 1 1032 51 is_stmt 0 view .LVU6282
 17478 586f 4D89CB   		mov	r11, r9	# tmp272, c
 17479 5872 4D0FAFD9 		imul	r11, r9	# tmp272, c
 17480 5876 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.714,
 17481              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17482              		.loc 1 1032 47 view .LVU6283
 17483 587a 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.722
 17484 587d 7741     		ja	.L1691	#,
1033:sieve_extend.c ****             }
 17485              		.loc 1 1033 17 is_stmt 1 view .LVU6284
 17486              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17487              		.loc 1 1033 48 is_stmt 0 view .LVU6285
 17488 587f 4D01C9   		add	r9, r9	# tmp273
 17489 5882 4D39F9   		cmp	r9, r15	# tmp273, ivtmp.724
 17490 5885 7417     		je	.L1750	#,
 17491              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17492              		.loc 1 1033 33 view .LVU6286
 17493 5887 31D2     		xor	edx, edx	# tmp275
 17494 5889 4C89E0   		mov	rax, r12	# tmp276, ivtmp.722
 17495 588c 48F7F3   		div	rbx	# ivtmp.714
 17496              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17497              		.loc 1 1033 20 view .LVU6287
 17498 588f 4885D2   		test	rdx, rdx	# tmp275
 17499 5892 410F94C2 		sete	r10b	#, tmp277
 17500              	# sieve_extend.c:1033:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1033:sieve_extend.c ****             }
 17501              		.loc 1 1033 82 view .LVU6288
 17502 5896 4180FA01 		cmp	r10b, 1	# tmp277,
 17503 589a 4883DDFF 		sbb	rbp, -1	# c_prime,
 17504              	.LVL1190:
 17505              	.L1750:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17506              		.loc 1 1032 68 is_stmt 1 view .LVU6289
 17507              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccW0oq2B.s 			page 467


1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17508              		.loc 1 1032 69 is_stmt 0 view .LVU6290
 17509 589e 4883C103 		add	rcx, 3	# c,
 17510              	.LVL1191:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17511              		.loc 1 1032 32 is_stmt 1 view .LVU6291
 17512              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17513              		.loc 1 1032 51 is_stmt 0 view .LVU6292
 17514 58a2 4989C9   		mov	r9, rcx	# tmp278, c
 17515 58a5 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 17516 58a9 4883C606 		add	rsi, 6	# ivtmp.714,
 17517              	# sieve_extend.c:1032:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17518              		.loc 1 1032 47 view .LVU6293
 17519 58ad 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.722
 17520 58b0 0F8622FF 		jbe	.L1685	#,
 17520      FFFF
 17521              	.LVL1192:
 17522 58b6 662E0F1F 		.p2align 4,,10
 17522      84000000 
 17522      0000
 17523              		.p2align 3
 17524              	.L1691:
1032:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17525              		.loc 1 1032 47 view .LVU6294
 17526              	.LBE791:
1035:sieve_extend.c ****         }
 17527              		.loc 1 1035 13 is_stmt 1 view .LVU6295
 17528              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17529              		.loc 1 1035 16 is_stmt 0 view .LVU6296
 17530 58c0 4885ED   		test	rbp, rbp	# c_prime
 17531 58c3 0F841802 		je	.L1809	#,
 17531      0000
 17532              	.LVL1193:
 17533              	.L1688:
1035:sieve_extend.c ****         }
 17534              		.loc 1 1035 16 view .LVU6297
 17535              	.LBE789:
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17536              		.loc 1 1022 52 is_stmt 1 view .LVU6298
 17537              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17538              		.loc 1 1022 57 is_stmt 0 view .LVU6299
 17539 58c9 49FFC6   		inc	r14	# prime
 17540              	.LVL1194:
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17541              		.loc 1 1022 31 is_stmt 1 view .LVU6300
 17542 58cc 4983C402 		add	r12, 2	# ivtmp.722,
 17543 58d0 4983C702 		add	r15, 2	# ivtmp.724,
 17544              	# sieve_extend.c:1022:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17545              		.loc 1 1022 5 is_stmt 0 view .LVU6301
 17546 58d4 4939FE   		cmp	r14, rdi	# prime, _137
 17547 58d7 0F8203FE 		jb	.L1692	#,
 17547      FFFF
GAS LISTING /tmp/ccW0oq2B.s 			page 468


 17548              	.LVL1195:
 17549              	.L1798:
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17550              		.loc 1 1022 5 view .LVU6302
 17551 58dd 448B6C24 		mov	r13d, DWORD PTR 20[rsp]	# <retval>, %sfp
 17551      14
 17552              	.LVL1196:
 17553              	.L1662:
1022:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17554              		.loc 1 1022 5 view .LVU6303
 17555              	.LBE801:
 17556              	.LBE775:
 17557              	.LBE774:
 17558              	# sieve_extend.c:1066: }
1066:sieve_extend.c **** 
 17559              		.loc 1 1066 1 view .LVU6304
 17560 58e2 4883C428 		add	rsp, 40	#,
 17561              		.cfi_remember_state
 17562              		.cfi_def_cfa_offset 56
 17563 58e6 5B       		pop	rbx	#
 17564              		.cfi_def_cfa_offset 48
 17565 58e7 5D       		pop	rbp	#
 17566              		.cfi_def_cfa_offset 40
 17567 58e8 415C     		pop	r12	#
 17568              		.cfi_def_cfa_offset 32
 17569 58ea 4489E8   		mov	eax, r13d	#, <retval>
 17570 58ed 415D     		pop	r13	#
 17571              		.cfi_def_cfa_offset 24
 17572 58ef 415E     		pop	r14	#
 17573              		.cfi_def_cfa_offset 16
 17574 58f1 415F     		pop	r15	#
 17575              		.cfi_def_cfa_offset 8
 17576 58f3 C3       		ret	
 17577              	.LVL1197:
 17578              	.L1807:
 17579              		.cfi_restore_state
 17580              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17581              		.loc 1 1045 5 view .LVU6305
 17582 58f4 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17582      030000
 17583 58fb 0F84F302 		je	.L1669	#,
 17583      0000
 17584 5901 7633     		jbe	.L1810	#,
 17585 5903 4981F910 		cmp	r9, 10000	# pretmp_199,
 17585      270000
 17586 590a 0F853003 		jne	.L1673	#,
 17586      0000
 17587 5910 4981F8CD 		cmp	r8, 1229	# primeCount,
 17587      040000
 17588 5917 400F94C6 		sete	sil	#, tmp179
 17589 591b 21F2     		and	edx, esi	# _251, tmp179
 17590 591d 4981F8CD 		cmp	r8, 1229	# primeCount,
 17590      040000
 17591 5924 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 17592 5928 410F95C6 		setne	r14b	#, _135
1049:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
GAS LISTING /tmp/ccW0oq2B.s 			page 469


 17593              		.loc 1 1049 29 is_stmt 1 view .LVU6306
 17594              	.LVL1198:
1049:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17595              		.loc 1 1049 54 view .LVU6307
 17596              	# sieve_extend.c:1049:         case 10000:         valid_primes = 1229;     break;
1049:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17597              		.loc 1 1049 42 is_stmt 0 view .LVU6308
 17598 592c B9CD0400 		mov	ecx, 1229	# valid_primes,
 17598      00
 17599              	# sieve_extend.c:1049:         case 10000:         valid_primes = 1229;     break;
1049:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17600              		.loc 1 1049 9 view .LVU6309
 17601 5931 E93AFDFF 		jmp	.L1680	#
 17601      FF
 17602              	.LVL1199:
 17603              	.L1810:
 17604              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17605              		.loc 1 1045 5 view .LVU6310
 17606 5936 4983F90A 		cmp	r9, 10	# pretmp_199,
 17607 593a 0F842702 		je	.L1671	#,
 17607      0000
 17608 5940 4983F964 		cmp	r9, 100	# pretmp_199,
 17609 5944 0F85F602 		jne	.L1673	#,
 17609      0000
 17610 594a 4983F819 		cmp	r8, 25	# primeCount,
 17611 594e 0F94C1   		sete	cl	#, tmp173
 17612 5951 21CA     		and	edx, ecx	# _251, tmp173
 17613 5953 4983F819 		cmp	r8, 25	# primeCount,
 17614 5957 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 17615 595b 410F95C6 		setne	r14b	#, _135
 17616              	# sieve_extend.c:1047:         case 100:           valid_primes = 25;       break;
1047:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 17617              		.loc 1 1047 42 view .LVU6311
 17618 595f B9190000 		mov	ecx, 25	# valid_primes,
 17618      00
 17619 5964 E907FDFF 		jmp	.L1680	#
 17619      FF
 17620 5969 0F1F8000 		.p2align 4,,10
 17620      000000
 17621              		.p2align 3
 17622              	.L1808:
 17623              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17624              		.loc 1 1045 5 view .LVU6312
 17625 5970 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17625      420F00
 17626 5977 0F84C301 		je	.L1677	#,
 17626      0000
 17627 597d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17627      969800
 17628 5984 0F85B602 		jne	.L1673	#,
 17628      0000
 17629 598a 4981F803 		cmp	r8, 664579	# primeCount,
 17629      240A00
 17630 5991 410F94C7 		sete	r15b	#, tmp185
 17631 5995 4421FA   		and	edx, r15d	# _251, tmp185
GAS LISTING /tmp/ccW0oq2B.s 			page 470


 17632 5998 4981F803 		cmp	r8, 664579	# primeCount,
 17632      240A00
 17633 599f 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 17634 59a3 410F95C6 		setne	r14b	#, _135
1052:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17635              		.loc 1 1052 29 is_stmt 1 view .LVU6313
 17636              	.LVL1200:
1052:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17637              		.loc 1 1052 54 view .LVU6314
 17638              	# sieve_extend.c:1052:         case 10000000:      valid_primes = 664579;   break;
1052:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17639              		.loc 1 1052 42 is_stmt 0 view .LVU6315
 17640 59a7 B903240A 		mov	ecx, 664579	# valid_primes,
 17640      00
 17641              	# sieve_extend.c:1052:         case 10000000:      valid_primes = 664579;   break;
1052:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17642              		.loc 1 1052 9 view .LVU6316
 17643 59ac E9BFFCFF 		jmp	.L1680	#
 17643      FF
 17644              	.LVL1201:
 17645              		.p2align 4,,10
 17646 59b1 0F1F8000 		.p2align 3
 17646      000000
 17647              	.L1684:
 17648              	.LBB806:
 17649              	.LBB804:
 17650              	.LBB802:
 17651              	.LBB798:
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17652              		.loc 1 1024 32 is_stmt 1 view .LVU6317
 17653              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17654              		.loc 1 1024 13 is_stmt 0 view .LVU6318
 17655 59b8 4885FF   		test	rdi, rdi	# _137
 17656 59bb 0F841CFF 		je	.L1798	#,
 17656      FFFF
 17657              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17658              		.loc 1 1024 27 view .LVU6319
 17659 59c1 BB010000 		mov	ebx, 1	# c,
 17659      00
 17660 59c6 EB27     		jmp	.L1689	#
 17661              	.LVL1202:
 17662 59c8 0F1F8400 		.p2align 4,,10
 17662      00000000 
 17663              		.p2align 3
 17664              	.L1698:
 17665              	# sieve_extend.c:1026:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1026:sieve_extend.c ****                 }
 17666              		.loc 1 1026 35 view .LVU6320
 17667 59d0 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17668              	.LVL1203:
 17669              	.L1687:
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17670              		.loc 1 1024 68 is_stmt 1 view .LVU6321
 17671              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
GAS LISTING /tmp/ccW0oq2B.s 			page 471


 17672              		.loc 1 1024 69 is_stmt 0 view .LVU6322
 17673 59d3 48FFC3   		inc	rbx	# c
 17674              	.LVL1204:
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17675              		.loc 1 1024 32 is_stmt 1 view .LVU6323
 17676              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17677              		.loc 1 1024 13 is_stmt 0 view .LVU6324
 17678 59d6 4839FB   		cmp	rbx, rdi	# c, _137
 17679 59d9 0F87EAFE 		ja	.L1688	#,
 17679      FFFF
 17680              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17681              		.loc 1 1024 51 view .LVU6325
 17682 59df 4989DB   		mov	r11, rbx	# tmp209, c
 17683 59e2 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 17684              	# sieve_extend.c:1024:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1024:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17685              		.loc 1 1024 47 view .LVU6326
 17686 59e6 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.722
 17687 59e9 0F87DAFE 		ja	.L1688	#,
 17687      FFFF
 17688              	.LVL1205:
 17689              	.L1689:
1025:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17690              		.loc 1 1025 17 is_stmt 1 view .LVU6327
 17691 59ef 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 17692              	# sieve_extend.c:1025:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1025:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17693              		.loc 1 1025 39 is_stmt 0 view .LVU6328
 17694 59f3 488D7501 		lea	rsi, 1[rbp]	# _55,
 17695 59f7 4C89E0   		mov	rax, r12	# tmp203, ivtmp.722
 17696 59fa 31D2     		xor	edx, edx	# tmp204
 17697 59fc 48F7F6   		div	rsi	# _55
 17698              	# sieve_extend.c:1025:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1025:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17699              		.loc 1 1025 48 view .LVU6329
 17700 59ff 4885D2   		test	rdx, rdx	# tmp204
 17701 5a02 75CF     		jne	.L1687	#,
1025:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17702              		.loc 1 1025 48 view .LVU6330
 17703 5a04 4939EF   		cmp	r15, rbp	# ivtmp.724, _216
 17704 5a07 74CA     		je	.L1687	#,
1026:sieve_extend.c ****                 }
 17705              		.loc 1 1026 21 is_stmt 1 view .LVU6331
 17706              	# sieve_extend.c:1026:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1026:sieve_extend.c ****                 }
 17707              		.loc 1 1026 35 is_stmt 0 view .LVU6332
 17708 5a09 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 17709              	.LVL1206:
 17710              	# sieve_extend.c:1026:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1026:sieve_extend.c ****                 }
 17711              		.loc 1 1026 24 view .LVU6333
 17712 5a0d 4983F81D 		cmp	r8, 29	# warn_prime,
 17713 5a11 77BD     		ja	.L1698	#,
1026:sieve_extend.c ****                 }
 17714              		.loc 1 1026 44 is_stmt 1 view .LVU6334
GAS LISTING /tmp/ccW0oq2B.s 			page 472


 17715              	.LVL1207:
 17716              	.LBB786:
 17717              	.LBI780:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17718              		.loc 3 105 1 view .LVU6335
 17719              	.LBB783:
 17720              		.loc 3 107 3 view .LVU6336
 17721              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17722              		.loc 3 107 10 is_stmt 0 view .LVU6337
 17723 5a13 4883EC08 		sub	rsp, 8	#,
 17724              		.cfi_def_cfa_offset 104
 17725 5a17 4154     		push	r12	# ivtmp.722
 17726              		.cfi_def_cfa_offset 112
 17727 5a19 4989F0   		mov	r8, rsi	#, _55
 17728 5a1c 4989C1   		mov	r9, rax	#, tmp203
 17729 5a1f 4C89E2   		mov	rdx, r12	#, ivtmp.722
 17730 5a22 BF010000 		mov	edi, 1	#,
 17730      00
 17731 5a27 4C89F1   		mov	rcx, r14	#, prime
 17732 5a2a 488D3500 		lea	rsi, .LC8[rip]	#,
 17732      000000
 17733 5a31 31C0     		xor	eax, eax	#
 17734 5a33 E8000000 		call	__printf_chk@PLT	#
 17734      00
 17735              	.LVL1208:
 17736 5a38 58       		pop	rax	#
 17737              		.cfi_def_cfa_offset 104
 17738 5a39 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17739 5a3d 5A       		pop	rdx	#
 17740              		.cfi_def_cfa_offset 96
 17741              	.LBE783:
 17742              	.LBE786:
 17743              	# sieve_extend.c:1026:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1026:sieve_extend.c ****                 }
 17744              		.loc 1 1026 35 view .LVU6338
 17745 5a3e 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17746              	.LBB787:
 17747              	.LBB784:
 17748              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17749              		.loc 3 107 10 view .LVU6339
 17750 5a41 EB90     		jmp	.L1687	#
 17751              	.LVL1209:
 17752              	.L1663:
 17753              		.loc 3 107 10 view .LVU6340
 17754              	.LBE784:
 17755              	.LBE787:
 17756              	.LBE798:
 17757              	.LBE802:
 17758              	.LBE804:
 17759              	.LBE806:
 17760              	.LBB807:
 17761              	.LBB771:
1015:sieve_extend.c **** }
 17762              		.loc 1 1015 5 is_stmt 1 view .LVU6341
1015:sieve_extend.c **** }
 17763              		.loc 1 1015 5 is_stmt 0 view .LVU6342
 17764              	.LBE771:
GAS LISTING /tmp/ccW0oq2B.s 			page 473


 17765              	.LBE807:
1044:sieve_extend.c ****     switch(sieve->size) {
 17766              		.loc 1 1044 5 is_stmt 1 view .LVU6343
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17767              		.loc 1 1045 5 view .LVU6344
 17768 5a43 41BE0100 		mov	r14d, 1	# _135,
 17768      0000
 17769 5a49 41B80100 		mov	r8d, 1	# primeCount,
 17769      0000
 17770 5a4f 4531ED   		xor	r13d, r13d	# <retval>
 17771 5a52 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17771      860100
 17772 5a59 0F842302 		je	.L1701	#,
 17772      0000
 17773 5a5f 0F872301 		ja	.L1693	#,
 17773      0000
 17774 5a65 B9190000 		mov	ecx, 25	# valid_primes,
 17774      00
 17775 5a6a 4983F964 		cmp	r9, 100	# pretmp_199,
 17776 5a6e 742A     		je	.L1681	#,
 17777 5a70 0F864001 		jbe	.L1811	#,
 17777      0000
 17778              	# sieve_extend.c:1048:         case 1000:          valid_primes = 168;      break;
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17779              		.loc 1 1048 42 is_stmt 0 view .LVU6345
 17780 5a76 B9A80000 		mov	ecx, 168	# valid_primes,
 17780      00
 17781              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17782              		.loc 1 1045 5 view .LVU6346
 17783 5a7b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17783      030000
 17784 5a82 7416     		je	.L1681	#,
 17785 5a84 4981F910 		cmp	r9, 10000	# pretmp_199,
 17785      270000
 17786 5a8b B9CD0400 		mov	ecx, 1229	# tmp223,
 17786      00
 17787 5a90 41BA0000 		mov	r10d, 0	# tmp224,
 17787      0000
 17788 5a96 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 17789              	.LVL1210:
 17790              	.L1681:
1060:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17791              		.loc 1 1060 5 is_stmt 1 view .LVU6347
 17792              	# sieve_extend.c:1060:     if (!valid && option_verboselevel >= 1) {
1060:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17793              		.loc 1 1060 39 is_stmt 0 view .LVU6348
 17794 5a9a 85DB     		test	ebx, ebx	# option_verboselevel
 17795 5a9c 410F9FC4 		setg	r12b	#, tmp194
 17796              	# sieve_extend.c:1060:     if (!valid && option_verboselevel >= 1) {
1060:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17797              		.loc 1 1060 8 view .LVU6349
 17798 5aa0 4520F4   		and	r12b, r14b	# _7, _135
 17799 5aa3 0F84E5FB 		je	.L1682	#,
 17799      FFFF
1061:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 17800              		.loc 1 1061 9 is_stmt 1 view .LVU6350
GAS LISTING /tmp/ccW0oq2B.s 			page 474


 17801              	.LVL1211:
 17802              	.LBB808:
 17803              	.LBI808:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17804              		.loc 3 105 1 view .LVU6351
 17805              	.LBB809:
 17806              		.loc 3 107 3 view .LVU6352
 17807              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17808              		.loc 3 107 10 is_stmt 0 view .LVU6353
 17809 5aa9 31C0     		xor	eax, eax	#
 17810 5aab 4C89CA   		mov	rdx, r9	#, pretmp_199
 17811 5aae 488D3500 		lea	rsi, .LC6[rip]	#,
 17811      000000
 17812 5ab5 BF010000 		mov	edi, 1	#,
 17812      00
 17813 5aba E8000000 		call	__printf_chk@PLT	#
 17813      00
 17814              	.LVL1212:
 17815              		.loc 3 107 10 view .LVU6354
 17816              	.LBE809:
 17817              	.LBE808:
1062:sieve_extend.c ****     }
 17818              		.loc 1 1062 9 is_stmt 1 view .LVU6355
 17819              	# sieve_extend.c:1062:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1062:sieve_extend.c ****     }
 17820              		.loc 1 1062 12 is_stmt 0 view .LVU6356
 17821 5abf 83FB01   		cmp	ebx, 1	# option_verboselevel,
 17822 5ac2 0F841AFE 		je	.L1662	#,
 17822      FFFF
1062:sieve_extend.c ****     }
 17823              		.loc 1 1062 49 is_stmt 1 discriminator 1 view .LVU6357
 17824 5ac8 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 17825 5acc BA640000 		mov	edx, 100	#,
 17825      00
 17826 5ad1 4889EF   		mov	rdi, rbp	#, sieve
 17827 5ad4 E807CCFF 		call	show_primes.isra.0	#
 17827      FF
 17828              	.LVL1213:
 17829              	# sieve_extend.c:1060:     if (!valid && option_verboselevel >= 1) {
1060:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17830              		.loc 1 1060 9 is_stmt 0 discriminator 1 view .LVU6358
 17831 5ad9 4589E6   		mov	r14d, r12d	# _135, _7
 17832 5adc E9ADFBFF 		jmp	.L1682	#
 17832      FF
 17833              	.LVL1214:
 17834              	.L1809:
 17835              	.LBB810:
 17836              	.LBB805:
 17837              	.LBB803:
 17838              	.LBB799:
 17839              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17840              		.loc 1 1035 44 view .LVU6359
 17841 5ae1 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 17841      08
 17842 5ae6 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 17843              	.LVL1215:
GAS LISTING /tmp/ccW0oq2B.s 			page 475


 17844              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17845              		.loc 1 1035 28 view .LVU6360
 17846 5aea 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 17847 5aee 761D     		jbe	.L1696	#,
 17848              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17849              		.loc 1 1035 44 view .LVU6361
 17850 5af0 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 17850      08
 17851 5af5 E9CFFDFF 		jmp	.L1688	#
 17851      FF
 17852              	.LVL1216:
 17853              	.L1796:
1035:sieve_extend.c ****         }
 17854              		.loc 1 1035 44 view .LVU6362
 17855 5afa 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 17855      08
 17856 5aff 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 17857              	.LVL1217:
 17858              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17859              		.loc 1 1035 28 view .LVU6363
 17860 5b03 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 17861 5b07 0F87D0FD 		ja	.L1798	#,
 17861      FFFF
 17862              	.LVL1218:
 17863              	.L1696:
 17864              	.LBB792:
 17865              	.LBB793:
 17866              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17867              		.loc 3 107 10 view .LVU6364
 17868 5b0d BF010000 		mov	edi, 1	#,
 17868      00
 17869              	.LBE793:
 17870              	.LBE792:
 17871              	# sieve_extend.c:1035:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1035:sieve_extend.c ****         }
 17872              		.loc 1 1035 53 view .LVU6365
 17873 5b12 4B8D5436 		lea	rdx, 1[r14+r14]	# tmp220,
 17873      01
 17874              	.LBB796:
 17875              	.LBB794:
 17876              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17877              		.loc 3 107 10 view .LVU6366
 17878 5b17 4C89F1   		mov	rcx, r14	#, prime
 17879 5b1a 488D3500 		lea	rsi, .LC9[rip]	#,
 17879      000000
 17880 5b21 31C0     		xor	eax, eax	#
 17881 5b23 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, warn_prime
 17881      18
 17882              	.LBE794:
 17883              	.LBE796:
1035:sieve_extend.c ****         }
 17884              		.loc 1 1035 53 is_stmt 1 view .LVU6367
 17885              	.LVL1219:
 17886              	.LBB797:
GAS LISTING /tmp/ccW0oq2B.s 			page 476


 17887              	.LBI792:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17888              		.loc 3 105 1 view .LVU6368
 17889              	.LBB795:
 17890              		.loc 3 107 3 view .LVU6369
 17891              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17892              		.loc 3 107 10 is_stmt 0 view .LVU6370
 17893 5b28 E8000000 		call	__printf_chk@PLT	#
 17893      00
 17894              	.LVL1220:
 17895              		.loc 3 107 10 view .LVU6371
 17896 5b2d 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 17896      08
 17897 5b32 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17898 5b36 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# warn_prime, %sfp
 17898      18
 17899 5b3b E989FDFF 		jmp	.L1688	#
 17899      FF
 17900              	.LVL1221:
 17901              	.L1677:
 17902              		.loc 3 107 10 view .LVU6372
 17903 5b40 4981F8A2 		cmp	r8, 78498	# primeCount,
 17903      320100
 17904 5b47 410F94C5 		sete	r13b	#, tmp183
 17905 5b4b 4421EA   		and	edx, r13d	# _251, tmp183
 17906 5b4e 4981F8A2 		cmp	r8, 78498	# primeCount,
 17906      320100
 17907 5b55 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 17908 5b59 410F95C6 		setne	r14b	#, _135
 17909              	.LBE795:
 17910              	.LBE797:
 17911              	.LBE799:
 17912              	.LBE803:
 17913              	.LBE805:
 17914              	.LBE810:
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17915              		.loc 1 1051 29 is_stmt 1 view .LVU6373
 17916              	.LVL1222:
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17917              		.loc 1 1051 54 view .LVU6374
 17918              	# sieve_extend.c:1051:         case 1000000:       valid_primes = 78498;    break;
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17919              		.loc 1 1051 42 is_stmt 0 view .LVU6375
 17920 5b5d B9A23201 		mov	ecx, 78498	# valid_primes,
 17920      00
 17921              	# sieve_extend.c:1051:         case 1000000:       valid_primes = 78498;    break;
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17922              		.loc 1 1051 9 view .LVU6376
 17923 5b62 E909FBFF 		jmp	.L1680	#
 17923      FF
 17924              	.LVL1223:
 17925              	.L1671:
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17926              		.loc 1 1051 9 view .LVU6377
 17927 5b67 4983F804 		cmp	r8, 4	# primeCount,
 17928 5b6b 410F94C2 		sete	r10b	#, tmp175
 17929 5b6f 4421D2   		and	edx, r10d	# _251, tmp175
GAS LISTING /tmp/ccW0oq2B.s 			page 477


 17930 5b72 4983F804 		cmp	r8, 4	# primeCount,
 17931 5b76 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 17932 5b7a 410F95C6 		setne	r14b	#, _135
 17933              	# sieve_extend.c:1046:         case 10:            valid_primes = 4;        break;
1046:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 17934              		.loc 1 1046 42 view .LVU6378
 17935 5b7e B9040000 		mov	ecx, 4	# valid_primes,
 17935      00
 17936 5b83 E9E8FAFF 		jmp	.L1680	#
 17936      FF
 17937              	.LVL1224:
 17938              	.L1693:
 17939              	# sieve_extend.c:1053:         case 100000000:     valid_primes = 5761455;  break;
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17940              		.loc 1 1053 42 view .LVU6379
 17941 5b88 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 17941      00
 17942              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17943              		.loc 1 1045 5 view .LVU6380
 17944 5b8d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17944      E1F505
 17945 5b94 0F8400FF 		je	.L1681	#,
 17945      FFFF
 17946 5b9a 762C     		jbe	.L1812	#,
 17947 5b9c 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17947      CA9A3B
 17948 5ba3 B92EDF07 		mov	ecx, 50847534	# tmp227,
 17948      03
 17949 5ba8 B8000000 		mov	eax, 0	# tmp228,
 17949      00
 17950 5bad 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 17951 5bb1 E9E4FEFF 		jmp	.L1681	#
 17951      FF
 17952              	.L1811:
 17953 5bb6 31C9     		xor	ecx, ecx	# valid_primes
 17954 5bb8 4983F90A 		cmp	r9, 10	# pretmp_199,
 17955 5bbc 0F94C1   		sete	cl	#, valid_primes
 17956 5bbf 48C1E102 		sal	rcx, 2	# valid_primes,
 17957 5bc3 E9D2FEFF 		jmp	.L1681	#
 17957      FF
 17958              	.L1812:
 17959              	# sieve_extend.c:1051:         case 1000000:       valid_primes = 78498;    break;
1051:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17960              		.loc 1 1051 42 view .LVU6381
 17961 5bc8 B9A23201 		mov	ecx, 78498	# valid_primes,
 17961      00
 17962              	# sieve_extend.c:1045:     switch(sieve->size) {
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17963              		.loc 1 1045 5 view .LVU6382
 17964 5bcd 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17964      420F00
 17965 5bd4 0F84C0FE 		je	.L1681	#,
 17965      FFFF
 17966 5bda 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17966      969800
 17967 5be1 B903240A 		mov	ecx, 664579	# tmp225,
GAS LISTING /tmp/ccW0oq2B.s 			page 478


 17967      00
 17968 5be6 BE000000 		mov	esi, 0	# tmp226,
 17968      00
 17969 5beb 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 17970 5bef E9A6FEFF 		jmp	.L1681	#
 17970      FF
 17971              	.LVL1225:
 17972              	.L1669:
1045:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17973              		.loc 1 1045 5 view .LVU6383
 17974 5bf4 4981F8A8 		cmp	r8, 168	# primeCount,
 17974      000000
 17975 5bfb 410F94C6 		sete	r14b	#, tmp177
 17976 5bff 4421F2   		and	edx, r14d	# _251, tmp177
 17977 5c02 4981F8A8 		cmp	r8, 168	# primeCount,
 17977      000000
 17978 5c09 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 17979              	# sieve_extend.c:1048:         case 1000:          valid_primes = 168;      break;
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17980              		.loc 1 1048 42 view .LVU6384
 17981 5c0d B9A80000 		mov	ecx, 168	# valid_primes,
 17981      00
 17982 5c12 410F95C6 		setne	r14b	#, _135
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17983              		.loc 1 1048 29 is_stmt 1 view .LVU6385
 17984              	.LVL1226:
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17985              		.loc 1 1048 54 view .LVU6386
 17986              	# sieve_extend.c:1048:         case 1000:          valid_primes = 168;      break;
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17987              		.loc 1 1048 9 is_stmt 0 view .LVU6387
 17988 5c16 E955FAFF 		jmp	.L1680	#
 17988      FF
 17989              	.LVL1227:
 17990              	.L1675:
1048:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17991              		.loc 1 1048 9 view .LVU6388
 17992 5c1b 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17992      E95700
 17993 5c22 0F94C0   		sete	al	#, tmp187
 17994 5c25 21C2     		and	edx, eax	# _251, tmp187
 17995 5c27 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17995      E95700
 17996 5c2e 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 17997 5c32 410F95C6 		setne	r14b	#, _135
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17998              		.loc 1 1053 29 is_stmt 1 view .LVU6389
 17999              	.LVL1228:
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18000              		.loc 1 1053 54 view .LVU6390
 18001              	# sieve_extend.c:1053:         case 100000000:     valid_primes = 5761455;  break;
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18002              		.loc 1 1053 42 is_stmt 0 view .LVU6391
 18003 5c36 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18003      00
 18004              	# sieve_extend.c:1053:         case 100000000:     valid_primes = 5761455;  break;
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
GAS LISTING /tmp/ccW0oq2B.s 			page 479


 18005              		.loc 1 1053 9 view .LVU6392
 18006 5c3b E930FAFF 		jmp	.L1680	#
 18006      FF
 18007              	.LVL1229:
 18008              	.L1673:
1053:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18009              		.loc 1 1053 9 view .LVU6393
 18010 5c40 4D85C0   		test	r8, r8	# primeCount
 18011 5c43 410F94C3 		sete	r11b	#, tmp191
 18012 5c47 4421DA   		and	edx, r11d	# _251, tmp191
 18013 5c4a 4D85C0   		test	r8, r8	# primeCount
 18014 5c4d 410F95C6 		setne	r14b	#, _135
1055:sieve_extend.c ****     }
 18015              		.loc 1 1055 29 is_stmt 1 view .LVU6394
1055:sieve_extend.c ****     }
 18016              		.loc 1 1055 29 is_stmt 0 view .LVU6395
 18017 5c51 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18018              	# sieve_extend.c:1055:         default:            valid_primes= 0;
1055:sieve_extend.c ****     }
 18019              		.loc 1 1055 41 view .LVU6396
 18020 5c55 31C9     		xor	ecx, ecx	# valid_primes
 18021 5c57 E914FAFF 		jmp	.L1680	#
 18021      FF
 18022              	.L1667:
1055:sieve_extend.c ****     }
 18023              		.loc 1 1055 41 view .LVU6397
 18024 5c5c 4981F878 		cmp	r8, 9592	# primeCount,
 18024      250000
 18025 5c63 400F94C7 		sete	dil	#, tmp181
 18026 5c67 21FA     		and	edx, edi	# _251, tmp181
 18027 5c69 4981F878 		cmp	r8, 9592	# primeCount,
 18027      250000
 18028 5c70 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18029 5c74 410F95C6 		setne	r14b	#, _135
1050:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18030              		.loc 1 1050 29 is_stmt 1 view .LVU6398
 18031              	.LVL1230:
1050:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18032              		.loc 1 1050 54 view .LVU6399
 18033              	# sieve_extend.c:1050:         case 100000:        valid_primes = 9592;     break;
1050:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18034              		.loc 1 1050 42 is_stmt 0 view .LVU6400
 18035 5c78 B9782500 		mov	ecx, 9592	# valid_primes,
 18035      00
 18036              	# sieve_extend.c:1050:         case 100000:        valid_primes = 9592;     break;
1050:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18037              		.loc 1 1050 9 view .LVU6401
 18038 5c7d E9EEF9FF 		jmp	.L1680	#
 18038      FF
 18039              	.LVL1231:
 18040              	.L1701:
 18041              	# sieve_extend.c:1050:         case 100000:        valid_primes = 9592;     break;
1050:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18042              		.loc 1 1050 42 view .LVU6402
 18043 5c82 B9782500 		mov	ecx, 9592	# valid_primes,
 18043      00
 18044 5c87 E90EFEFF 		jmp	.L1681	#
GAS LISTING /tmp/ccW0oq2B.s 			page 480


 18044      FF
 18045              		.cfi_endproc
 18046              	.LFE81:
 18048              		.section	.rodata.str1.8
 18049 0145 000000   		.align 8
 18050              	.LC10:
 18051 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18051      653A2025 
 18051      73205B6F 
 18051      7074696F 
 18051      6E735D20 
 18052              		.section	.rodata.str1.1
 18053              	.LC11:
 18054 0031 4F707469 		.string	"Options:\n"
 18054      6F6E733A 
 18054      0A00
 18055              		.section	.rodata.str1.8
 18056 0167 00       		.align 8
 18057              	.LC12:
 18058 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18058      76657262 
 18058      6F736520 
 18058      3C6C6576 
 18058      656C3E20 
 18059 01a3 00000000 		.align 8
 18059      00
 18060              	.LC13:
 18061 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18061      20202020 
 18061      20202020 
 18061      20202020 
 18061      20202020 
 18062 01d6 0000     		.align 8
 18063              	.LC14:
 18064 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18064      20202020 
 18064      20202020 
 18064      20202020 
 18064      20202020 
 18065 0219 00000000 		.align 8
 18065      000000
 18066              	.LC15:
 18067 0220 20202020 		.string	"                     3 - show actual work\n"
 18067      20202020 
 18067      20202020 
 18067      20202020 
 18067      20202020 
 18068 024b 00000000 		.align 8
 18068      00
 18069              	.LC16:
 18070 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18070      63686563 
 18070      6B202020 
 18070      20202020 
 18070      20202020 
 18071 028d 000000   		.align 8
 18072              	.LC17:
GAS LISTING /tmp/ccW0oq2B.s 			page 481


 18073 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 18073      73686F77 
 18073      203C6D61 
 18073      78696D75 
 18073      6D3E2020 
 18074 02ce 0000     		.align 8
 18075              	.LC18:
 18076 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18076      74756E65 
 18076      20203C6C 
 18076      6576656C 
 18076      3E202020 
 18077 031d 000000   		.align 8
 18078              	.LC19:
 18079 0320 20202020 		.string	"                     1 - fast tuning\n"
 18079      20202020 
 18079      20202020 
 18079      20202020 
 18079      20202020 
 18080 0346 0000     		.align 8
 18081              	.LC20:
 18082 0348 20202020 		.string	"                     2 - refined tuning\n"
 18082      20202020 
 18082      20202020 
 18082      20202020 
 18082      20202020 
 18083 0371 00000000 		.align 8
 18083      000000
 18084              	.LC21:
 18085 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18085      20202020 
 18085      20202020 
 18085      20202020 
 18085      20202020 
 18086              		.text
 18087 5c8c 0F1F4000 		.p2align 4
 18088              		.globl	usage
 18090              	usage:
 18091              	.LVL1232:
 18092              	.LFB82:
1068:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18093              		.loc 1 1068 24 is_stmt 1 view -0
 18094              		.cfi_startproc
1068:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18095              		.loc 1 1068 24 is_stmt 0 view .LVU6404
 18096 5c90 F30F1EFA 		endbr64	
 18097 5c94 50       		push	rax	#
 18098              		.cfi_def_cfa_offset 16
 18099 5c95 58       		pop	rax	#
 18100              		.cfi_def_cfa_offset 8
1069:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18101              		.loc 1 1069 5 is_stmt 1 view .LVU6405
 18102              	.LVL1233:
 18103              	.LBB811:
 18104              	.LBI811:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18105              		.loc 3 98 1 view .LVU6406
GAS LISTING /tmp/ccW0oq2B.s 			page 482


 18106              	.LBB812:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18107              		.loc 3 100 3 view .LVU6407
 18108              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18109              		.loc 3 100 10 is_stmt 0 view .LVU6408
 18110 5c96 488D1500 		lea	rdx, .LC10[rip]	#,
 18110      000000
 18111 5c9d BE010000 		mov	esi, 1	#,
 18111      00
 18112 5ca2 31C0     		xor	eax, eax	#
 18113              	.LBE812:
 18114              	.LBE811:
 18115              	# sieve_extend.c:1068: void usage(char *name) {
1068:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18116              		.loc 1 1068 24 view .LVU6409
 18117 5ca4 4883EC08 		sub	rsp, 8	#,
 18118              		.cfi_def_cfa_offset 16
 18119              	# sieve_extend.c:1068: void usage(char *name) {
1068:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18120              		.loc 1 1068 24 view .LVU6410
 18121 5ca8 4889F9   		mov	rcx, rdi	# name, tmp107
 18122              	.LBB814:
 18123              	.LBB813:
 18124              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18125              		.loc 3 100 10 view .LVU6411
 18126 5cab 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18126      000000
 18127              	.LVL1234:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18128              		.loc 3 100 10 view .LVU6412
 18129 5cb2 E8000000 		call	__fprintf_chk@PLT	#
 18129      00
 18130              	.LVL1235:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18131              		.loc 3 100 10 view .LVU6413
 18132              	.LBE813:
 18133              	.LBE814:
1070:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18134              		.loc 1 1070 5 is_stmt 1 view .LVU6414
 18135              	.LBB815:
 18136              	.LBI815:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18137              		.loc 3 98 1 view .LVU6415
 18138              	.LBB816:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18139              		.loc 3 100 3 view .LVU6416
 18140              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18141              		.loc 3 100 10 is_stmt 0 view .LVU6417
 18142 5cb7 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18142      000000
 18143 5cbe BA090000 		mov	edx, 9	#,
 18143      00
 18144 5cc3 BE010000 		mov	esi, 1	#,
 18144      00
GAS LISTING /tmp/ccW0oq2B.s 			page 483


 18145 5cc8 488D3D00 		lea	rdi, .LC11[rip]	#,
 18145      000000
 18146 5ccf E8000000 		call	fwrite@PLT	#
 18146      00
 18147              	.LVL1236:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18148              		.loc 3 100 10 view .LVU6418
 18149              	.LBE816:
 18150              	.LBE815:
1071:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18151              		.loc 1 1071 5 is_stmt 1 view .LVU6419
 18152              	.LBB817:
 18153              	.LBI817:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18154              		.loc 3 98 1 view .LVU6420
 18155              	.LBB818:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18156              		.loc 3 100 3 view .LVU6421
 18157              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18158              		.loc 3 100 10 is_stmt 0 view .LVU6422
 18159 5cd4 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18159      000000
 18160 5cdb BA3A0000 		mov	edx, 58	#,
 18160      00
 18161 5ce0 BE010000 		mov	esi, 1	#,
 18161      00
 18162 5ce5 488D3D00 		lea	rdi, .LC12[rip]	#,
 18162      000000
 18163 5cec E8000000 		call	fwrite@PLT	#
 18163      00
 18164              	.LVL1237:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18165              		.loc 3 100 10 view .LVU6423
 18166              	.LBE818:
 18167              	.LBE817:
1072:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18168              		.loc 1 1072 5 is_stmt 1 view .LVU6424
 18169              	.LBB819:
 18170              	.LBI819:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18171              		.loc 3 98 1 view .LVU6425
 18172              	.LBB820:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18173              		.loc 3 100 3 view .LVU6426
 18174              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18175              		.loc 3 100 10 is_stmt 0 view .LVU6427
 18176 5cf1 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18176      000000
 18177 5cf8 BA2D0000 		mov	edx, 45	#,
 18177      00
 18178 5cfd BE010000 		mov	esi, 1	#,
 18178      00
 18179 5d02 488D3D00 		lea	rdi, .LC13[rip]	#,
 18179      000000
 18180 5d09 E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/ccW0oq2B.s 			page 484


 18180      00
 18181              	.LVL1238:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18182              		.loc 3 100 10 view .LVU6428
 18183              	.LBE820:
 18184              	.LBE819:
1073:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 18185              		.loc 1 1073 5 is_stmt 1 view .LVU6429
 18186              	.LBB821:
 18187              	.LBI821:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18188              		.loc 3 98 1 view .LVU6430
 18189              	.LBB822:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18190              		.loc 3 100 3 view .LVU6431
 18191              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18192              		.loc 3 100 10 is_stmt 0 view .LVU6432
 18193 5d0e 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18193      000000
 18194 5d15 BA400000 		mov	edx, 64	#,
 18194      00
 18195 5d1a BE010000 		mov	esi, 1	#,
 18195      00
 18196 5d1f 488D3D00 		lea	rdi, .LC14[rip]	#,
 18196      000000
 18197 5d26 E8000000 		call	fwrite@PLT	#
 18197      00
 18198              	.LVL1239:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18199              		.loc 3 100 10 view .LVU6433
 18200              	.LBE822:
 18201              	.LBE821:
1074:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 18202              		.loc 1 1074 5 is_stmt 1 view .LVU6434
 18203              	.LBB823:
 18204              	.LBI823:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18205              		.loc 3 98 1 view .LVU6435
 18206              	.LBB824:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18207              		.loc 3 100 3 view .LVU6436
 18208              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18209              		.loc 3 100 10 is_stmt 0 view .LVU6437
 18210 5d2b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18210      000000
 18211 5d32 BA2A0000 		mov	edx, 42	#,
 18211      00
 18212 5d37 BE010000 		mov	esi, 1	#,
 18212      00
 18213 5d3c 488D3D00 		lea	rdi, .LC15[rip]	#,
 18213      000000
 18214 5d43 E8000000 		call	fwrite@PLT	#
 18214      00
 18215              	.LVL1240:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccW0oq2B.s 			page 485


 18216              		.loc 3 100 10 view .LVU6438
 18217              	.LBE824:
 18218              	.LBE823:
1075:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 18219              		.loc 1 1075 5 is_stmt 1 view .LVU6439
 18220              	.LBB825:
 18221              	.LBI825:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18222              		.loc 3 98 1 view .LVU6440
 18223              	.LBB826:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18224              		.loc 3 100 3 view .LVU6441
 18225              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18226              		.loc 3 100 10 is_stmt 0 view .LVU6442
 18227 5d48 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18227      000000
 18228 5d4f BA3C0000 		mov	edx, 60	#,
 18228      00
 18229 5d54 BE010000 		mov	esi, 1	#,
 18229      00
 18230 5d59 488D3D00 		lea	rdi, .LC16[rip]	#,
 18230      000000
 18231 5d60 E8000000 		call	fwrite@PLT	#
 18231      00
 18232              	.LVL1241:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18233              		.loc 3 100 10 view .LVU6443
 18234              	.LBE826:
 18235              	.LBE825:
1076:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 18236              		.loc 1 1076 5 is_stmt 1 view .LVU6444
 18237              	.LBB827:
 18238              	.LBI827:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18239              		.loc 3 98 1 view .LVU6445
 18240              	.LBB828:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18241              		.loc 3 100 3 view .LVU6446
 18242              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18243              		.loc 3 100 10 is_stmt 0 view .LVU6447
 18244 5d65 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18244      000000
 18245 5d6c BA3D0000 		mov	edx, 61	#,
 18245      00
 18246 5d71 BE010000 		mov	esi, 1	#,
 18246      00
 18247 5d76 488D3D00 		lea	rdi, .LC17[rip]	#,
 18247      000000
 18248 5d7d E8000000 		call	fwrite@PLT	#
 18248      00
 18249              	.LVL1242:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18250              		.loc 3 100 10 view .LVU6448
 18251              	.LBE828:
 18252              	.LBE827:
GAS LISTING /tmp/ccW0oq2B.s 			page 486


1077:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 18253              		.loc 1 1077 5 is_stmt 1 view .LVU6449
 18254              	.LBB829:
 18255              	.LBI829:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18256              		.loc 3 98 1 view .LVU6450
 18257              	.LBB830:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18258              		.loc 3 100 3 view .LVU6451
 18259              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18260              		.loc 3 100 10 is_stmt 0 view .LVU6452
 18261 5d82 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18261      000000
 18262 5d89 BA4C0000 		mov	edx, 76	#,
 18262      00
 18263 5d8e BE010000 		mov	esi, 1	#,
 18263      00
 18264 5d93 488D3D00 		lea	rdi, .LC18[rip]	#,
 18264      000000
 18265 5d9a E8000000 		call	fwrite@PLT	#
 18265      00
 18266              	.LVL1243:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18267              		.loc 3 100 10 view .LVU6453
 18268              	.LBE830:
 18269              	.LBE829:
1078:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 18270              		.loc 1 1078 5 is_stmt 1 view .LVU6454
 18271              	.LBB831:
 18272              	.LBI831:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18273              		.loc 3 98 1 view .LVU6455
 18274              	.LBB832:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18275              		.loc 3 100 3 view .LVU6456
 18276              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18277              		.loc 3 100 10 is_stmt 0 view .LVU6457
 18278 5d9f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18278      000000
 18279 5da6 BA250000 		mov	edx, 37	#,
 18279      00
 18280 5dab BE010000 		mov	esi, 1	#,
 18280      00
 18281 5db0 488D3D00 		lea	rdi, .LC19[rip]	#,
 18281      000000
 18282 5db7 E8000000 		call	fwrite@PLT	#
 18282      00
 18283              	.LVL1244:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18284              		.loc 3 100 10 view .LVU6458
 18285              	.LBE832:
 18286              	.LBE831:
1079:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 18287              		.loc 1 1079 5 is_stmt 1 view .LVU6459
 18288              	.LBB833:
GAS LISTING /tmp/ccW0oq2B.s 			page 487


 18289              	.LBI833:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18290              		.loc 3 98 1 view .LVU6460
 18291              	.LBB834:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18292              		.loc 3 100 3 view .LVU6461
 18293              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18294              		.loc 3 100 10 is_stmt 0 view .LVU6462
 18295 5dbc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18295      000000
 18296 5dc3 BA280000 		mov	edx, 40	#,
 18296      00
 18297 5dc8 BE010000 		mov	esi, 1	#,
 18297      00
 18298 5dcd 488D3D00 		lea	rdi, .LC20[rip]	#,
 18298      000000
 18299 5dd4 E8000000 		call	fwrite@PLT	#
 18299      00
 18300              	.LVL1245:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18301              		.loc 3 100 10 view .LVU6463
 18302              	.LBE834:
 18303              	.LBE833:
1080:sieve_extend.c ****     exit(1);
 18304              		.loc 1 1080 5 is_stmt 1 view .LVU6464
 18305              	.LBB835:
 18306              	.LBI835:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18307              		.loc 3 98 1 view .LVU6465
 18308              	.LBB836:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18309              		.loc 3 100 3 view .LVU6466
 18310              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18311              		.loc 3 100 10 is_stmt 0 view .LVU6467
 18312 5dd9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18312      000000
 18313 5de0 488D3D00 		lea	rdi, .LC21[rip]	#,
 18313      000000
 18314 5de7 BA350000 		mov	edx, 53	#,
 18314      00
 18315 5dec BE010000 		mov	esi, 1	#,
 18315      00
 18316 5df1 E8000000 		call	fwrite@PLT	#
 18316      00
 18317              	.LVL1246:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18318              		.loc 3 100 10 view .LVU6468
 18319              	.LBE836:
 18320              	.LBE835:
1081:sieve_extend.c **** }
 18321              		.loc 1 1081 5 is_stmt 1 view .LVU6469
 18322 5df6 BF010000 		mov	edi, 1	#,
 18322      00
 18323 5dfb E8000000 		call	exit@PLT	#
 18323      00
GAS LISTING /tmp/ccW0oq2B.s 			page 488


 18324              	.LVL1247:
 18325              		.cfi_endproc
 18326              	.LFE82:
 18328              		.section	.rodata.str1.1
 18329              	.LC23:
 18330 003b 56616C69 		.string	"Validating... "
 18330      64617469 
 18330      6E672E2E 
 18330      2E2000
 18331              	.LC24:
 18332 004a 2D2D6865 		.string	"--help"
 18332      6C7000
 18333              	.LC25:
 18334 0051 2D2D7665 		.string	"--verbose"
 18334      72626F73 
 18334      6500
 18335              	.LC26:
 18336 005b 4E6F2076 		.string	"No verbose level specified\n"
 18336      6572626F 
 18336      7365206C 
 18336      6576656C 
 18336      20737065 
 18337              	.LC27:
 18338 0077 256400   		.string	"%d"
 18339              		.section	.rodata.str1.8
 18340 03ae 0000     		.align 8
 18341              	.LC28:
 18342 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 18342      723A2049 
 18342      6E76616C 
 18342      6964206D 
 18342      65617375 
 18343              		.section	.rodata.str1.1
 18344              	.LC29:
 18345 007a 56657262 		.string	"Verbose level set to %d\n"
 18345      6F736520 
 18345      6C657665 
 18345      6C207365 
 18345      7420746F 
 18346              	.LC30:
 18347 0093 2D2D6368 		.string	"--check"
 18347      65636B00 
 18348              	.LC31:
 18349 009b 2D2D7475 		.string	"--tune"
 18349      6E6500
 18350              	.LC32:
 18351 00a2 4E6F2074 		.string	"No tune level specified\n"
 18351      756E6520 
 18351      6C657665 
 18351      6C207370 
 18351      65636966 
 18352              		.section	.rodata.str1.8
 18353 03d5 000000   		.align 8
 18354              	.LC33:
 18355 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 18355      723A2049 
 18355      6E76616C 
GAS LISTING /tmp/ccW0oq2B.s 			page 489


 18355      69642074 
 18355      756E6520 
 18356              		.section	.rodata.str1.1
 18357              	.LC34:
 18358 00bb 54756E65 		.string	"Tune level set to %d\n"
 18358      206C6576 
 18358      656C2073 
 18358      65742074 
 18358      6F202564 
 18359              	.LC35:
 18360 00d1 2D2D7368 		.string	"--show"
 18360      6F7700
 18361              	.LC36:
 18362 00d8 4E6F2073 		.string	"No show maximum specified\n"
 18362      686F7720 
 18362      6D617869 
 18362      6D756D20 
 18362      73706563 
 18363              	.LC37:
 18364 00f3 256A7500 		.string	"%ju"
 18365              		.section	.rodata.str1.8
 18366 03f7 00       		.align 8
 18367              	.LC38:
 18368 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 18368      723A2049 
 18368      6E76616C 
 18368      69642073 
 18368      686F7720 
 18369              		.section	.rodata.str1.1
 18370              	.LC39:
 18371 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 18371      206D6178 
 18371      696D756D 
 18371      20736574 
 18371      20746F20 
 18372              	.LC40:
 18373 0110 496E7661 		.string	"Invalid size %s\n"
 18373      6C696420 
 18373      73697A65 
 18373      2025730A 
 18373      00
 18374              	.LC41:
 18375 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 18375      6865636B 
 18375      696E6720 
 18375      73697A65 
 18375      20256A75 
 18376              	.LC42:
 18377 013a 2E626C6F 		.string	".blocksize %ju-"
 18377      636B7369 
 18377      7A652025 
 18377      6A752D00 
 18378              	.LC43:
 18379 014a 76616C69 		.string	"valid;"
 18379      643B00
 18380              	.LC44:
 18381 0151 2E2E2E56 		.string	"...Valid algorithm"
GAS LISTING /tmp/ccW0oq2B.s 			page 490


 18381      616C6964 
 18381      20616C67 
 18381      6F726974 
 18381      686D00
 18382              	.LC45:
 18383 0164 54756E69 		.string	"Tuning..."
 18383      6E672E2E 
 18383      2E00
 18384              		.section	.rodata.str1.8
 18385 0419 00000000 		.align 8
 18385      000000
 18386              	.LC46:
 18387 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 18387      626C6F63 
 18387      6B73697A 
 18387      655F6269 
 18387      74732025 
 18388 04a7 00       		.align 8
 18389              	.LC47:
 18390 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 18390      6C6F636B 
 18390      73697A65 
 18390      5F626974 
 18390      73202531 
 18391 052e 0000     		.align 8
 18392              	.LC48:
 18393 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 18393      72657375 
 18393      6C74732E 
 18393      20496E69 
 18393      74616C20 
 18394              		.section	.rodata.str1.1
 18395              	.LC49:
 18396 016e 42657374 		.string	"Best options"
 18396      206F7074 
 18396      696F6E73 
 18396      00
 18397              		.section	.rodata.str1.8
 18398 0582 00000000 		.align 8
 18398      0000
 18399              	.LC50:
 18400 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 18400      2920626C 
 18400      6F636B73 
 18400      697A655F 
 18400      62697473 
 18401 0611 00000000 		.align 8
 18401      000000
 18402              	.LC51:
 18403 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 18403      74207265 
 18403      73756C74 
 18403      3A20626C 
 18403      6F636B73 
 18404              		.align 8
 18405              	.LC52:
 18406 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
GAS LISTING /tmp/ccW0oq2B.s 			page 491


 18406      686D6172 
 18406      6B696E67 
 18406      2E2E2E20 
 18406      77697468 
 18407 06c3 00000000 		.align 8
 18407      00
 18408              	.LC54:
 18409 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 18409      65727661 
 18409      6E64616D 
 18409      5F657874 
 18409      656E643B 
 18410 070a 00000000 		.align 8
 18410      0000
 18411              	.LC55:
 18412 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 18412      6573202D 
 18412      20706572 
 18412      20352073 
 18412      65636F6E 
 18413              		.section	.rodata.str1.1
 18414              	.LC56:
 18415 017b 53686F77 		.string	"Show result set:"
 18415      20726573 
 18415      756C7420 
 18415      7365743A 
 18415      00
 18416              		.section	.text.startup,"ax",@progbits
 18417              		.p2align 4
 18418              		.globl	main
 18420              	main:
 18421              	.LVL1248:
 18422              	.LFB86:
1125:sieve_extend.c **** 
1126:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1127:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1128:sieve_extend.c **** 
1129:sieve_extend.c ****     double best_avg = 0;
1130:sieve_extend.c ****     best_blocksize_bits = 0;
1131:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1132:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1133:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1134:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1135:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1136:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1137:sieve_extend.c ****     double sample_duration = default_sample_duration;
1138:sieve_extend.c **** 
1139:sieve_extend.c ****     // determines the size of the resultset
1140:sieve_extend.c ****     switch (tune_level) {
1141:sieve_extend.c ****         case 1:
1142:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1143:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1144:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1145:sieve_extend.c ****             sample_max = 4;
1146:sieve_extend.c ****             sample_duration = 0.1;
1147:sieve_extend.c ****             break;
1148:sieve_extend.c ****         case 2:
GAS LISTING /tmp/ccW0oq2B.s 			page 492


1149:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1150:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1151:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1152:sieve_extend.c ****             sample_max = 4;
1153:sieve_extend.c ****             sample_duration = 0.2;
1154:sieve_extend.c ****             break;
1155:sieve_extend.c ****         case 3:
1156:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1157:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1158:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1159:sieve_extend.c ****             sample_max = 4;
1160:sieve_extend.c ****             sample_duration = 0.4;
1161:sieve_extend.c ****             break;
1162:sieve_extend.c ****     }
1163:sieve_extend.c ****     
1164:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1165:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1166:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1167:sieve_extend.c ****     counter_t tuning_results=0;
1168:sieve_extend.c ****     counter_t tuning_result_index=0;
1169:sieve_extend.c ****     
1170:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1171:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1172:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1173:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
1174:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1175:sieve_extend.c **** 
1176:sieve_extend.c ****                     // set variables
1177:sieve_extend.c ****                     tuning_results++;
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
1179:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
1180:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
1181:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1182:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
1183:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1184:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1185:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1186:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1187:sieve_extend.c **** 
1188:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1189:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1190:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1191:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1192:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1193:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1194:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1195:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1196:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1197:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1198:sieve_extend.c ****                     }
1199:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1200:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1201:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1202:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1203:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1204:sieve_extend.c ****                     tuning_result_index++;
1205:sieve_extend.c ****                 }
GAS LISTING /tmp/ccW0oq2B.s 			page 493


1206:sieve_extend.c ****             }
1207:sieve_extend.c ****         }
1208:sieve_extend.c ****     }
1209:sieve_extend.c ****     if (option_verboselevel >= 2) {
1210:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1211:sieve_extend.c ****         printf("Best options\n");
1212:sieve_extend.c ****     }
1213:sieve_extend.c ****     counter_t step=0;
1214:sieve_extend.c ****     while (tuning_results>4) {
1215:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1216:sieve_extend.c ****         step++;
1217:sieve_extend.c ****         if (option_verboselevel >= 2) {
1218:sieve_extend.c ****             tuning_result_index = 0;
1219:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1220:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1221:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1222:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1223:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1224:sieve_extend.c ****             if (option_verboselevel >= 3) {
1225:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1226:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1227:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1228:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1229:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1230:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1231:sieve_extend.c ****                 }
1232:sieve_extend.c ****             }
1233:sieve_extend.c ****         }
1234:sieve_extend.c **** 
1235:sieve_extend.c ****         tuning_results = tuning_results / 2;
1236:sieve_extend.c **** 
1237:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1238:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1239:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1240:sieve_extend.c ****         }
1241:sieve_extend.c ****         
1242:sieve_extend.c ****     }
1243:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1244:sieve_extend.c ****     if (option_verboselevel >= 1) {
1245:sieve_extend.c ****         tuning_result_index = 0;
1246:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1247:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1248:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1249:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1250:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1251:sieve_extend.c ****     }
1252:sieve_extend.c **** 
1253:sieve_extend.c ****     free(tuning_result);
1254:sieve_extend.c ****     return best_result;
1255:sieve_extend.c **** }
1256:sieve_extend.c **** 
1257:sieve_extend.c **** int main(int argc, char *argv[]) {
 18423              		.loc 1 1257 34 view -0
 18424              		.cfi_startproc
 18425              		.loc 1 1257 34 is_stmt 0 view .LVU6471
 18426 0000 F30F1EFA 		endbr64	
 18427 0004 4157     		push	r15	#
GAS LISTING /tmp/ccW0oq2B.s 			page 494


 18428              		.cfi_def_cfa_offset 16
 18429              		.cfi_offset 15, -16
 18430 0006 4156     		push	r14	#
 18431              		.cfi_def_cfa_offset 24
 18432              		.cfi_offset 14, -24
 18433 0008 4155     		push	r13	#
 18434              		.cfi_def_cfa_offset 32
 18435              		.cfi_offset 13, -32
 18436 000a 4154     		push	r12	#
 18437              		.cfi_def_cfa_offset 40
 18438              		.cfi_offset 12, -40
 18439 000c 55       		push	rbp	#
 18440              		.cfi_def_cfa_offset 48
 18441              		.cfi_offset 6, -48
 18442 000d 53       		push	rbx	#
 18443              		.cfi_def_cfa_offset 56
 18444              		.cfi_offset 3, -56
 18445 000e 4881ECB8 		sub	rsp, 184	#,
 18445      000000
 18446              		.cfi_def_cfa_offset 240
 18447              	# sieve_extend.c:1257: int main(int argc, char *argv[]) {
 18448              		.loc 1 1257 34 view .LVU6472
 18449 0015 64488B04 		mov	rax, QWORD PTR fs:40	# tmp525, MEM[(<address-space-1> long unsigned int *)40B]
 18449      25280000 
 18449      00
 18450 001e 48898424 		mov	QWORD PTR 168[rsp], rax	# D.7486, tmp525
 18450      A8000000 
 18451 0026 31C0     		xor	eax, eax	# tmp525
1258:sieve_extend.c **** 
1259:sieve_extend.c ****     
1260:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 18452              		.loc 1 1260 5 is_stmt 1 view .LVU6473
 18453              	# sieve_extend.c:1260:     counter_t option_maxFactor  = default_sieve_limit;
 18454              		.loc 1 1260 15 is_stmt 0 view .LVU6474
 18455 0028 48C74424 		mov	QWORD PTR 112[rsp], 1000000	# option_maxFactor,
 18455      7040420F 
 18455      00
1261:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18456              		.loc 1 1261 5 is_stmt 1 view .LVU6475
 18457              	# sieve_extend.c:1261:     counter_t option_showMaxFactor = default_showMaxFactor;
 18458              		.loc 1 1261 15 is_stmt 0 view .LVU6476
 18459 0031 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 18459      78000000 
 18459      00
1262:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18460              		.loc 1 1262 5 is_stmt 1 view .LVU6477
 18461              	# sieve_extend.c:1262:     int option_verboselevel = default_verbose_level;
 18462              		.loc 1 1262 9 is_stmt 0 view .LVU6478
 18463 003a C7442468 		mov	DWORD PTR 104[rsp], 1	# option_verboselevel,
 18463      01000000 
1263:sieve_extend.c ****     int option_check = default_check_level;
 18464              		.loc 1 1263 5 is_stmt 1 view .LVU6479
 18465              	.LVL1249:
1264:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 18466              		.loc 1 1264 5 view .LVU6480
 18467              	# sieve_extend.c:1264:     int option_tunelevel = default_tune_level;
 18468              		.loc 1 1264 9 is_stmt 0 view .LVU6481
GAS LISTING /tmp/ccW0oq2B.s 			page 495


 18469 0042 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 18469      00000000 
1265:sieve_extend.c **** 
1266:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 18470              		.loc 1 1266 5 is_stmt 1 view .LVU6482
 18471              	.LBB922:
 18472              		.loc 1 1266 10 view .LVU6483
 18473              	.LVL1250:
 18474              		.loc 1 1266 21 view .LVU6484
 18475              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
 18476              		.loc 1 1266 5 is_stmt 0 view .LVU6485
 18477 004a 83FF01   		cmp	edi, 1	# argc,
 18478 004d 0F8EC804 		jle	.L1832	#,
 18478      0000
 18479 0053 89FD     		mov	ebp, edi	# argc, tmp468
 18480 0055 4989F4   		mov	r12, rsi	# argv, tmp469
 18481              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
 18482              		.loc 1 1266 14 view .LVU6486
 18483 0058 BB010000 		mov	ebx, 1	# arg,
 18483      00
 18484 005d 4C8D2D00 		lea	r13, .LC24[rip]	# tmp407,
 18484      000000
 18485              	# sieve_extend.c:1268:         else if (strcmp(argv[arg], "--verbose")==0) {
1267:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1268:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18486              		.loc 1 1268 18 view .LVU6487
 18487 0064 4C8D3500 		lea	r14, .LC25[rip]	# tmp423,
 18487      000000
 18488 006b EB5B     		jmp	.L1816	#
 18489              	.LVL1251:
 18490 006d 0F1F00   		.p2align 4,,10
 18491              		.p2align 3
 18492              	.L1948:
1269:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18493              		.loc 1 1269 13 is_stmt 1 view .LVU6488
 18494              	# sieve_extend.c:1269:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 18495              		.loc 1 1269 16 is_stmt 0 view .LVU6489
 18496 0070 FFC3     		inc	ebx	# arg
 18497              	.LVL1252:
 18498              		.loc 1 1269 16 view .LVU6490
 18499 0072 39DD     		cmp	ebp, ebx	# argc, arg
 18500 0074 0F8EC10C 		jle	.L1946	#,
 18500      0000
1270:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18501              		.loc 1 1270 13 is_stmt 1 view .LVU6491
 18502              	# sieve_extend.c:1270:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18503              		.loc 1 1270 28 is_stmt 0 view .LVU6492
 18504 007a 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 18504      08
 18505              	# sieve_extend.c:1270:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18506              		.loc 1 1270 17 view .LVU6493
 18507 007f 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 18508 0082 31C0     		xor	eax, eax	#
 18509 0084 488D5424 		lea	rdx, 104[rsp]	# tmp285,
 18509      68
 18510 0089 488D3500 		lea	rsi, .LC27[rip]	#,
 18510      000000
GAS LISTING /tmp/ccW0oq2B.s 			page 496


 18511 0090 E8000000 		call	__isoc99_sscanf@PLT	#
 18511      00
 18512              	.LVL1253:
 18513              	# sieve_extend.c:1270:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18514              		.loc 1 1270 16 view .LVU6494
 18515 0095 83F801   		cmp	eax, 1	# tmp470,
 18516 0098 0F859504 		jne	.L1821	#,
 18516      0000
 18517              	# sieve_extend.c:1270:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18518              		.loc 1 1270 91 discriminator 1 view .LVU6495
 18519 009e 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.16_19, option_verboselevel
 18520              	# sieve_extend.c:1270:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18521              		.loc 1 1270 68 discriminator 1 view .LVU6496
 18522 00a2 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 18523 00a5 0F8F8804 		jg	.L1821	#,
 18523      0000
1271:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1272:sieve_extend.c ****             }
1273:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 18524              		.loc 1 1273 13 is_stmt 1 view .LVU6497
 18525              	.LVL1254:
 18526              	.LBB923:
 18527              	.LBI923:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18528              		.loc 3 105 1 view .LVU6498
 18529              	.LBB924:
 18530              		.loc 3 107 3 view .LVU6499
 18531              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18532              		.loc 3 107 10 is_stmt 0 view .LVU6500
 18533 00ab 488D3500 		lea	rsi, .LC29[rip]	#,
 18533      000000
 18534 00b2 BF010000 		mov	edi, 1	#,
 18534      00
 18535 00b7 31C0     		xor	eax, eax	#
 18536 00b9 E8000000 		call	__printf_chk@PLT	#
 18536      00
 18537              	.LVL1255:
 18538              	.L1823:
 18539              		.loc 3 107 10 view .LVU6501
 18540              	.LBE924:
 18541              	.LBE923:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18542              		.loc 1 1266 33 is_stmt 1 discriminator 2 view .LVU6502
 18543              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18544              		.loc 1 1266 36 is_stmt 0 discriminator 2 view .LVU6503
 18545 00be FFC3     		inc	ebx	# arg
 18546              	.LVL1256:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18547              		.loc 1 1266 21 is_stmt 1 discriminator 2 view .LVU6504
 18548              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18549              		.loc 1 1266 5 is_stmt 0 discriminator 2 view .LVU6505
 18550 00c0 39DD     		cmp	ebp, ebx	# argc, arg
 18551 00c2 0F8EE800 		jle	.L1947	#,
 18551      0000
 18552              	.LVL1257:
GAS LISTING /tmp/ccW0oq2B.s 			page 497


 18553              	.L1816:
1267:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18554              		.loc 1 1267 9 is_stmt 1 view .LVU6506
 18555              	# sieve_extend.c:1267:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1267:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18556              		.loc 1 1267 24 is_stmt 0 view .LVU6507
 18557 00c8 4863C3   		movsx	rax, ebx	# arg, arg
 18558 00cb 48C1E003 		sal	rax, 3	# _2,
 18559 00cf 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 18560              	# sieve_extend.c:1267:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1267:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18561              		.loc 1 1267 13 view .LVU6508
 18562 00d3 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 18563 00d6 41B90700 		mov	r9d, 7	# tmp274,
 18563      0000
 18564 00dc 4C89C6   		mov	rsi, r8	# _4, _4
 18565 00df 4C89EF   		mov	rdi, r13	# tmp273, tmp407
 18566 00e2 4C89C9   		mov	rcx, r9	# tmp434, tmp274
 18567 00e5 F3A6     		repz cmpsb
 18568 00e7 0F97C2   		seta	dl	#, tmp275
 18569 00ea 80DA00   		sbb	dl, 0	# _5
 18570              	# sieve_extend.c:1267:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1267:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18571              		.loc 1 1267 12 view .LVU6509
 18572 00ed 84D2     		test	dl, dl	# _5
 18573 00ef 0F845B04 		je	.L1944	#,
 18573      0000
1268:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18574              		.loc 1 1268 14 is_stmt 1 view .LVU6510
 18575              	# sieve_extend.c:1268:         else if (strcmp(argv[arg], "--verbose")==0) {
1268:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18576              		.loc 1 1268 18 is_stmt 0 view .LVU6511
 18577 00f5 B90A0000 		mov	ecx, 10	# tmp280,
 18577      00
 18578 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 18579 00fd 4C89F7   		mov	rdi, r14	# tmp279, tmp423
 18580 0100 F3A6     		repz cmpsb
 18581 0102 410F97C2 		seta	r10b	#, tmp281
 18582 0106 4180DA00 		sbb	r10b, 0	# _11
 18583              	# sieve_extend.c:1268:         else if (strcmp(argv[arg], "--verbose")==0) {
1268:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18584              		.loc 1 1268 17 view .LVU6512
 18585 010a 4584D2   		test	r10b, r10b	# _11
 18586 010d 0F845DFF 		je	.L1948	#,
 18586      FFFF
1274:sieve_extend.c ****         } 
1275:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18587              		.loc 1 1275 14 is_stmt 1 view .LVU6513
 18588              	# sieve_extend.c:1275:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18589              		.loc 1 1275 18 is_stmt 0 view .LVU6514
 18590 0113 B9080000 		mov	ecx, 8	# tmp290,
 18590      00
 18591 0118 4C89C6   		mov	rsi, r8	# _4, _4
 18592 011b 488D3D00 		lea	rdi, .LC30[rip]	# tmp289,
 18592      000000
 18593 0122 F3A6     		repz cmpsb
 18594 0124 410F97C3 		seta	r11b	#, tmp291
GAS LISTING /tmp/ccW0oq2B.s 			page 498


 18595 0128 4180DB00 		sbb	r11b, 0	# _23
 18596              	# sieve_extend.c:1275:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18597              		.loc 1 1275 17 view .LVU6515
 18598 012c 4584DB   		test	r11b, r11b	# _23
 18599 012f 748D     		je	.L1823	#,
1276:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18600              		.loc 1 1276 14 is_stmt 1 view .LVU6516
 18601              	# sieve_extend.c:1276:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18602              		.loc 1 1276 18 is_stmt 0 view .LVU6517
 18603 0131 4C89C6   		mov	rsi, r8	# _4, _4
 18604 0134 488D3D00 		lea	rdi, .LC31[rip]	# tmp295,
 18604      000000
 18605 013b 4C89C9   		mov	rcx, r9	# tmp440, tmp274
 18606 013e F3A6     		repz cmpsb
 18607 0140 0F97C2   		seta	dl	#, tmp297
 18608 0143 80DA00   		sbb	dl, 0	# _24
 18609              	# sieve_extend.c:1276:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18610              		.loc 1 1276 17 view .LVU6518
 18611 0146 84D2     		test	dl, dl	# _24
 18612 0148 0F853201 		jne	.L1824	#,
 18612      0000
 18613              		.loc 1 1276 52 is_stmt 1 discriminator 1 view .LVU6519
 18614              	# sieve_extend.c:1277:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
1277:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 18615              		.loc 1 1277 16 is_stmt 0 discriminator 1 view .LVU6520
 18616 014e FFC3     		inc	ebx	# arg
 18617              	.LVL1258:
 18618              	# sieve_extend.c:1276:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
1276:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18619              		.loc 1 1276 68 discriminator 1 view .LVU6521
 18620 0150 C744246C 		mov	DWORD PTR 108[rsp], 0	# option_tunelevel,
 18620      00000000 
 18621              		.loc 1 1277 13 is_stmt 1 discriminator 1 view .LVU6522
 18622              	.LVL1259:
 18623              	# sieve_extend.c:1277:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 18624              		.loc 1 1277 16 is_stmt 0 discriminator 1 view .LVU6523
 18625 0158 39DD     		cmp	ebp, ebx	# argc, arg
 18626 015a 0F8E1B0C 		jle	.L1949	#,
 18626      0000
1278:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18627              		.loc 1 1278 13 is_stmt 1 view .LVU6524
 18628              	# sieve_extend.c:1278:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18629              		.loc 1 1278 28 is_stmt 0 view .LVU6525
 18630 0160 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 18630      08
 18631              	# sieve_extend.c:1278:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18632              		.loc 1 1278 17 view .LVU6526
 18633 0165 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 18634 0168 31C0     		xor	eax, eax	#
 18635 016a 488D5424 		lea	rdx, 108[rsp]	# tmp301,
 18635      6C
 18636 016f 488D3500 		lea	rsi, .LC27[rip]	#,
 18636      000000
 18637 0176 E8000000 		call	__isoc99_sscanf@PLT	#
 18637      00
 18638              	.LVL1260:
 18639              	# sieve_extend.c:1278:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
GAS LISTING /tmp/ccW0oq2B.s 			page 499


 18640              		.loc 1 1278 16 view .LVU6527
 18641 017b 83F801   		cmp	eax, 1	# tmp471,
 18642 017e 0F85D90B 		jne	.L1826	#,
 18642      0000
 18643              	# sieve_extend.c:1278:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18644              		.loc 1 1278 85 discriminator 1 view .LVU6528
 18645 0184 8B54246C 		mov	edx, DWORD PTR 108[rsp]	# option_tunelevel.20_32, option_tunelevel
 18646              	# sieve_extend.c:1278:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18647              		.loc 1 1278 65 discriminator 1 view .LVU6529
 18648 0188 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 18649 018b 0F8FCC0B 		jg	.L1826	#,
 18649      0000
1279:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1280:sieve_extend.c ****             }
1281:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 18650              		.loc 1 1281 13 is_stmt 1 view .LVU6530
 18651              	.LVL1261:
 18652              	.LBB925:
 18653              	.LBI925:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18654              		.loc 3 105 1 view .LVU6531
 18655              	.LBB926:
 18656              		.loc 3 107 3 view .LVU6532
 18657              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18658              		.loc 3 107 10 is_stmt 0 view .LVU6533
 18659 0191 488D3500 		lea	rsi, .LC34[rip]	#,
 18659      000000
 18660 0198 BF010000 		mov	edi, 1	#,
 18660      00
 18661 019d 31C0     		xor	eax, eax	#
 18662              	.LBE926:
 18663              	.LBE925:
 18664              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18665              		.loc 1 1266 36 view .LVU6534
 18666 019f FFC3     		inc	ebx	# arg
 18667              	.LVL1262:
 18668              	.LBB928:
 18669              	.LBB927:
 18670              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18671              		.loc 3 107 10 view .LVU6535
 18672 01a1 E8000000 		call	__printf_chk@PLT	#
 18672      00
 18673              	.LVL1263:
 18674              		.loc 3 107 10 view .LVU6536
 18675              	.LBE927:
 18676              	.LBE928:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18677              		.loc 1 1266 33 is_stmt 1 view .LVU6537
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18678              		.loc 1 1266 21 view .LVU6538
 18679              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18680              		.loc 1 1266 5 is_stmt 0 view .LVU6539
 18681 01a6 39DD     		cmp	ebp, ebx	# argc, arg
 18682 01a8 0F8F1AFF 		jg	.L1816	#,
 18682      FFFF
GAS LISTING /tmp/ccW0oq2B.s 			page 500


 18683 01ae 6690     		.p2align 4,,10
 18684              		.p2align 3
 18685              	.L1947:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18686              		.loc 1 1266 5 view .LVU6540
 18687              	.LBE922:
1282:sieve_extend.c ****         }
1283:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1284:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1285:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1286:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1287:sieve_extend.c ****             }
1288:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1289:sieve_extend.c ****         }
1290:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1291:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1292:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1293:sieve_extend.c ****         }
1294:sieve_extend.c ****     }
1295:sieve_extend.c **** 
1296:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 18688              		.loc 1 1296 5 is_stmt 1 view .LVU6541
1297:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1298:sieve_extend.c ****         printf("\nResult set:\n");
1299:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1300:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,1);
1301:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1302:sieve_extend.c ****         else printf("The sieve is VALID\n");
1303:sieve_extend.c ****         delete_sieve(sieve_instance);
1304:sieve_extend.c ****         exit(0);
1305:sieve_extend.c ****     }
1306:sieve_extend.c **** 
1307:sieve_extend.c ****     struct timespec start_time,end_time;
 18689              		.loc 1 1307 5 view .LVU6542
1308:sieve_extend.c **** 
1309:sieve_extend.c ****     if (option_check) {
 18690              		.loc 1 1309 5 view .LVU6543
1310:sieve_extend.c ****         // Count the number of primes and validate the result
1311:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 18691              		.loc 1 1311 9 view .LVU6544
 18692              	# sieve_extend.c:1311:         if (option_verboselevel >= 1) printf("Validating... ");
 18693              		.loc 1 1311 12 is_stmt 0 view .LVU6545
 18694 01b0 8B6C2468 		mov	ebp, DWORD PTR 104[rsp]	#, option_verboselevel
 18695              	.LVL1264:
 18696              		.loc 1 1311 12 view .LVU6546
 18697 01b4 85ED     		test	ebp, ebp	#
 18698 01b6 0F8F5F03 		jg	.L1832	#,
 18698      0000
 18699              	.LVL1265:
 18700              	.L1817:
1312:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18701              		.loc 1 1312 9 is_stmt 1 view .LVU6547
 18702              	# sieve_extend.c:1312:         if (option_verboselevel >= 2) printf("\n");
 18703              		.loc 1 1312 12 is_stmt 0 view .LVU6548
 18704 01bc 837C2468 		cmp	DWORD PTR 104[rsp], 1	# option_verboselevel,
 18704      01
 18705 01c1 7E0A     		jle	.L1833	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 501


 18706              		.loc 1 1312 39 is_stmt 1 view .LVU6549
 18707              	.LVL1266:
 18708              	.LBB947:
 18709              	.LBI947:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18710              		.loc 3 105 1 view .LVU6550
 18711              	.LBB948:
 18712              		.loc 3 107 3 view .LVU6551
 18713              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18714              		.loc 3 107 10 is_stmt 0 view .LVU6552
 18715 01c3 BF0A0000 		mov	edi, 10	#,
 18715      00
 18716 01c8 E8000000 		call	putchar@PLT	#
 18716      00
 18717              	.LVL1267:
 18718              	.L1833:
 18719              		.loc 3 107 10 view .LVU6553
 18720              	.LBE948:
 18721              	.LBE947:
 18722              	.LBB949:
 18723              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18724              		.loc 1 1266 14 view .LVU6554
 18725 01cd C7042407 		mov	DWORD PTR [rsp], 7	# %sfp,
 18725      000000
 18726 01d4 41BC6400 		mov	r12d, 100	# sieveSize_check,
 18726      0000
 18727              	.LBE949:
 18728              	.LBB950:
 18729              	.LBB951:
 18730              	.LBB952:
 18731              	.LBB953:
 18732              	.LBB954:
 18733              	.LBB955:
 18734              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18735              		.loc 3 107 10 view .LVU6555
 18736 01da 4C8D2D00 		lea	r13, .LC42[rip]	# tmp422,
 18736      000000
 18737              	.L1840:
 18738              	.LVL1268:
 18739              		.loc 3 107 10 view .LVU6556
 18740              	.LBE955:
 18741              	.LBE954:
 18742              	.LBE953:
 18743              	.LBE952:
1313:sieve_extend.c **** 
1314:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1315:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1316:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18744              		.loc 1 1316 13 is_stmt 1 view .LVU6557
 18745              	# sieve_extend.c:1316:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18746              		.loc 1 1316 37 is_stmt 0 view .LVU6558
 18747 01e1 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18748              	# sieve_extend.c:1316:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18749              		.loc 1 1316 16 view .LVU6559
 18750 01e5 83F801   		cmp	eax, 1	# prephitmp_382,
 18751 01e8 7E1A     		jle	.L1834	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 502


 18752              		.loc 1 1316 43 is_stmt 1 view .LVU6560
 18753              	.LVL1269:
 18754              	.LBB968:
 18755              	.LBI968:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18756              		.loc 3 105 1 view .LVU6561
 18757              	.LBB969:
 18758              		.loc 3 107 3 view .LVU6562
 18759              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18760              		.loc 3 107 10 is_stmt 0 view .LVU6563
 18761 01ea 4C89E2   		mov	rdx, r12	#, sieveSize_check
 18762 01ed 488D3500 		lea	rsi, .LC41[rip]	#,
 18762      000000
 18763 01f4 BF010000 		mov	edi, 1	#,
 18763      00
 18764 01f9 31C0     		xor	eax, eax	#
 18765 01fb E8000000 		call	__printf_chk@PLT	#
 18765      00
 18766              	.LVL1270:
 18767 0200 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18768              	.LVL1271:
 18769              	.L1834:
 18770              		.loc 3 107 10 view .LVU6564
 18771              	.LBE969:
 18772              	.LBE968:
 18773              	.LBE951:
 18774              	.LBE950:
 18775              	.LBB978:
 18776              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18777              		.loc 1 1266 14 view .LVU6565
 18778 0204 BB050000 		mov	ebx, 5	# ivtmp_213,
 18778      00
 18779 0209 41BE0004 		mov	r14d, 1024	# blocksize_bits,
 18779      0000
 18780 020f EB56     		jmp	.L1838	#
 18781              	.LVL1272:
 18782              		.p2align 4,,10
 18783 0211 0F1F8000 		.p2align 3
 18783      000000
 18784              	.L1835:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18785              		.loc 1 1266 14 view .LVU6566
 18786              	.LBE978:
 18787              	.LBB979:
 18788              	.LBB975:
 18789              	.LBB970:
 18790              	.LBB964:
1317:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1318:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1319:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1320:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18791              		.loc 1 1320 17 is_stmt 1 view .LVU6567
 18792              	# sieve_extend.c:1320:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 18793              		.loc 1 1320 40 is_stmt 0 view .LVU6568
 18794 0218 4C89F6   		mov	rsi, r14	#, blocksize_bits
 18795 021b 4C89E7   		mov	rdi, r12	#, sieveSize_check
GAS LISTING /tmp/ccW0oq2B.s 			page 503


 18796 021e E8000000 		call	sieve	#
 18796      00
 18797              	.LVL1273:
 18798              	# sieve_extend.c:1321:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1321:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18799              		.loc 1 1321 29 view .LVU6569
 18800 0223 8B742468 		mov	esi, DWORD PTR 104[rsp]	#, option_verboselevel
 18801              	# sieve_extend.c:1320:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1320:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18802              		.loc 1 1320 40 view .LVU6570
 18803 0227 4889C5   		mov	rbp, rax	# sieve_instance_check, tmp474
 18804              	.LVL1274:
 18805              		.loc 1 1321 17 is_stmt 1 view .LVU6571
 18806              	# sieve_extend.c:1321:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18807              		.loc 1 1321 29 is_stmt 0 view .LVU6572
 18808 022a 4889C7   		mov	rdi, rax	#, sieve_instance_check
 18809 022d E8000000 		call	validatePrimeCount	#
 18809      00
 18810              	.LVL1275:
 18811              	.LBB957:
 18812              	.LBB958:
 18813              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 18814              		.loc 1 97 5 view .LVU6573
 18815 0232 488B7D00 		mov	rdi, QWORD PTR 0[rbp]	#, sieve_instance_check_126->bitarray
 18816              	.LBE958:
 18817              	.LBE957:
 18818              	# sieve_extend.c:1321:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18819              		.loc 1 1321 29 view .LVU6574
 18820 0236 4189C7   		mov	r15d, eax	# valid, tmp475
 18821              	.LVL1276:
1322:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 18822              		.loc 1 1322 17 is_stmt 1 view .LVU6575
 18823              	.LBB960:
 18824              	.LBI957:
  96:sieve_extend.c ****     free(sieve->bitarray);
 18825              		.loc 1 96 13 view .LVU6576
 18826              	.LBB959:
  97:sieve_extend.c ****     free(sieve);
 18827              		.loc 1 97 5 view .LVU6577
 18828 0239 E8000000 		call	free@PLT	#
 18828      00
 18829              	.LVL1277:
  98:sieve_extend.c **** }
 18830              		.loc 1 98 5 view .LVU6578
 18831 023e 4889EF   		mov	rdi, rbp	#, sieve_instance_check
 18832 0241 E8000000 		call	free@PLT	#
 18832      00
 18833              	.LVL1278:
  98:sieve_extend.c **** }
 18834              		.loc 1 98 5 is_stmt 0 view .LVU6579
 18835              	.LBE959:
 18836              	.LBE960:
1323:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 18837              		.loc 1 1323 17 is_stmt 1 view .LVU6580
 18838              	# sieve_extend.c:1323:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18839              		.loc 1 1323 20 is_stmt 0 view .LVU6581
GAS LISTING /tmp/ccW0oq2B.s 			page 504


 18840 0246 4585FF   		test	r15d, r15d	# valid
 18841 0249 0F84A102 		je	.L1874	#,
 18841      0000
 18842              		.loc 1 1323 44 is_stmt 1 discriminator 2 view .LVU6582
 18843              	# sieve_extend.c:1323:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18844              		.loc 1 1323 68 is_stmt 0 discriminator 2 view .LVU6583
 18845 024f 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 18846              	# sieve_extend.c:1323:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18847              		.loc 1 1323 47 discriminator 2 view .LVU6584
 18848 0253 83F802   		cmp	eax, 2	# prephitmp_382,
 18849 0256 0F8FD400 		jg	.L1950	#,
 18849      0000
 18850              	.LBE964:
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18851              		.loc 1 1318 75 is_stmt 1 discriminator 2 view .LVU6585
 18852              	# sieve_extend.c:1318:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18853              		.loc 1 1318 90 is_stmt 0 discriminator 2 view .LVU6586
 18854 025c 4D01F6   		add	r14, r14	# blocksize_bits
 18855              	.LVL1279:
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18856              		.loc 1 1318 49 is_stmt 1 discriminator 2 view .LVU6587
 18857              	# sieve_extend.c:1318:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18858              		.loc 1 1318 13 is_stmt 0 discriminator 2 view .LVU6588
 18859 025f FFCB     		dec	ebx	# ivtmp_213
 18860 0261 0F84EB00 		je	.L1951	#,
 18860      0000
 18861              	.LVL1280:
 18862              	.L1838:
 18863              	.LBB965:
1319:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18864              		.loc 1 1319 17 is_stmt 1 view .LVU6589
 18865              	# sieve_extend.c:1319:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1319:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18866              		.loc 1 1319 20 is_stmt 0 view .LVU6590
 18867 0267 83F802   		cmp	eax, 2	# prephitmp_382,
 18868 026a 7EAC     		jle	.L1835	#,
1319:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18869              		.loc 1 1319 47 is_stmt 1 view .LVU6591
 18870              	.LVL1281:
 18871              	.LBB961:
 18872              	.LBI954:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18873              		.loc 3 105 1 view .LVU6592
 18874              	.LBB956:
 18875              		.loc 3 107 3 view .LVU6593
 18876              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18877              		.loc 3 107 10 is_stmt 0 view .LVU6594
 18878 026c 4C89F2   		mov	rdx, r14	#, blocksize_bits
 18879 026f 4C89EE   		mov	rsi, r13	#, tmp422
 18880 0272 BF010000 		mov	edi, 1	#,
 18880      00
 18881 0277 31C0     		xor	eax, eax	#
 18882 0279 E8000000 		call	__printf_chk@PLT	#
 18882      00
 18883              	.LVL1282:
GAS LISTING /tmp/ccW0oq2B.s 			page 505


 18884 027e EB98     		jmp	.L1835	#
 18885              	.LVL1283:
 18886              		.p2align 4,,10
 18887              		.p2align 3
 18888              	.L1824:
 18889              		.loc 3 107 10 view .LVU6595
 18890              	.LBE956:
 18891              	.LBE961:
 18892              	.LBE965:
 18893              	.LBE970:
 18894              	.LBE975:
 18895              	.LBE979:
 18896              	.LBB980:
1283:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18897              		.loc 1 1283 14 is_stmt 1 view .LVU6596
 18898              	# sieve_extend.c:1283:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1283:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18899              		.loc 1 1283 18 is_stmt 0 view .LVU6597
 18900 0280 4C89C9   		mov	rcx, r9	# tmp274, tmp274
 18901 0283 4C89C6   		mov	rsi, r8	# _4, _4
 18902 0286 488D3D00 		lea	rdi, .LC35[rip]	# tmp305,
 18902      000000
 18903 028d F3A6     		repz cmpsb
 18904 028f 410F97C1 		seta	r9b	#, tmp307
 18905 0293 4180D900 		sbb	r9b, 0	# _36
 18906              	# sieve_extend.c:1283:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1283:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18907              		.loc 1 1283 17 view .LVU6598
 18908 0297 4584C9   		test	r9b, r9b	# _36
 18909 029a 7564     		jne	.L1828	#,
1283:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18910              		.loc 1 1283 52 is_stmt 1 discriminator 1 view .LVU6599
 18911              	# sieve_extend.c:1284:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1284:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18912              		.loc 1 1284 16 is_stmt 0 discriminator 1 view .LVU6600
 18913 029c FFC3     		inc	ebx	# arg
 18914              	.LVL1284:
 18915              	# sieve_extend.c:1283:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1283:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18916              		.loc 1 1283 72 discriminator 1 view .LVU6601
 18917 029e 48C74424 		mov	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 18917      78000000 
 18917      00
1284:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18918              		.loc 1 1284 13 is_stmt 1 discriminator 1 view .LVU6602
 18919              	.LVL1285:
 18920              	# sieve_extend.c:1284:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1284:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18921              		.loc 1 1284 16 is_stmt 0 discriminator 1 view .LVU6603
 18922 02a7 39DD     		cmp	ebp, ebx	# argc, arg
 18923 02a9 0F8EF70A 		jle	.L1952	#,
 18923      0000
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18924              		.loc 1 1285 13 is_stmt 1 view .LVU6604
 18925              	# sieve_extend.c:1285:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18926              		.loc 1 1285 28 is_stmt 0 view .LVU6605
GAS LISTING /tmp/ccW0oq2B.s 			page 506


 18927 02af 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 18927      08
 18928              	# sieve_extend.c:1285:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18929              		.loc 1 1285 17 view .LVU6606
 18930 02b4 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 18931 02b7 31C0     		xor	eax, eax	#
 18932 02b9 488D5424 		lea	rdx, 120[rsp]	# tmp311,
 18932      78
 18933 02be 488D3500 		lea	rsi, .LC37[rip]	#,
 18933      000000
 18934 02c5 E8000000 		call	__isoc99_sscanf@PLT	#
 18934      00
 18935              	.LVL1286:
 18936              	# sieve_extend.c:1285:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18937              		.loc 1 1285 16 view .LVU6607
 18938 02ca 83F801   		cmp	eax, 1	# tmp472,
 18939 02cd 0F85990A 		jne	.L1830	#,
 18939      0000
 18940              	# sieve_extend.c:1285:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18941              		.loc 1 1285 106 discriminator 1 view .LVU6608
 18942 02d3 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 18942      78
 18943              	# sieve_extend.c:1285:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1285:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18944              		.loc 1 1285 82 discriminator 1 view .LVU6609
 18945 02d8 483B5424 		cmp	rdx, QWORD PTR 112[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 18945      70
 18946 02dd 0F87890A 		ja	.L1830	#,
 18946      0000
1288:sieve_extend.c ****         }
 18947              		.loc 1 1288 13 is_stmt 1 view .LVU6610
 18948              	.LVL1287:
 18949              	.LBB929:
 18950              	.LBI929:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18951              		.loc 3 105 1 view .LVU6611
 18952              	.LBB930:
 18953              		.loc 3 107 3 view .LVU6612
 18954              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18955              		.loc 3 107 10 is_stmt 0 view .LVU6613
 18956 02e3 488D3500 		lea	rsi, .LC39[rip]	#,
 18956      000000
 18957 02ea BF010000 		mov	edi, 1	#,
 18957      00
 18958 02ef 31C0     		xor	eax, eax	#
 18959 02f1 E8000000 		call	__printf_chk@PLT	#
 18959      00
 18960              	.LVL1288:
 18961 02f6 E9C3FDFF 		jmp	.L1823	#
 18961      FF
 18962              	.LVL1289:
 18963 02fb 0F1F4400 		.p2align 4,,10
 18963      00
 18964              		.p2align 3
GAS LISTING /tmp/ccW0oq2B.s 			page 507


 18965              	.L1828:
 18966              		.loc 3 107 10 view .LVU6614
 18967              	.LBE930:
 18968              	.LBE929:
1290:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18969              		.loc 1 1290 14 is_stmt 1 view .LVU6615
 18970              	# sieve_extend.c:1290:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1290:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18971              		.loc 1 1290 18 is_stmt 0 view .LVU6616
 18972 0300 31C0     		xor	eax, eax	#
 18973 0302 488D5424 		lea	rdx, 112[rsp]	# tmp313,
 18973      70
 18974 0307 488D3500 		lea	rsi, .LC37[rip]	#,
 18974      000000
 18975 030e 4C89C7   		mov	rdi, r8	#, _4
 18976 0311 E8000000 		call	__isoc99_sscanf@PLT	#
 18976      00
 18977              	.LVL1290:
 18978              	# sieve_extend.c:1290:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1290:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18979              		.loc 1 1290 17 view .LVU6617
 18980 0316 83F801   		cmp	eax, 1	# tmp473,
 18981 0319 0F849FFD 		je	.L1823	#,
 18981      FFFF
1291:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 18982              		.loc 1 1291 13 is_stmt 1 view .LVU6618
 18983              	.LVL1291:
 18984              	.LBB931:
 18985              	.LBI931:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18986              		.loc 3 98 1 view .LVU6619
 18987              	.LBB932:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18988              		.loc 3 100 3 view .LVU6620
 18989              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18990              		.loc 3 100 10 is_stmt 0 view .LVU6621
 18991 031f 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 18992 0322 488D1500 		lea	rdx, .LC40[rip]	#,
 18992      000000
 18993 0329 E90F0200 		jmp	.L1943	#
 18993      00
 18994              	.LVL1292:
 18995 032e 6690     		.p2align 4,,10
 18996              		.p2align 3
 18997              	.L1950:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18998              		.loc 3 100 10 view .LVU6622
 18999              	.LBE932:
 19000              	.LBE931:
 19001              	.LBE980:
 19002              	.LBB981:
 19003              	.LBB976:
 19004              	.LBB971:
 19005              	.LBB966:
 19006              		.loc 1 1323 74 is_stmt 1 view .LVU6623
 19007              	.LBB962:
GAS LISTING /tmp/ccW0oq2B.s 			page 508


 19008              	.LBI962:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19009              		.loc 3 105 1 view .LVU6624
 19010              	.LBB963:
 19011              		.loc 3 107 3 view .LVU6625
 19012              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19013              		.loc 3 107 10 is_stmt 0 view .LVU6626
 19014 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 19014      000000
 19015 0337 BF010000 		mov	edi, 1	#,
 19015      00
 19016 033c 31C0     		xor	eax, eax	#
 19017 033e E8000000 		call	__printf_chk@PLT	#
 19017      00
 19018              	.LVL1293:
 19019              	.LBE963:
 19020              	.LBE962:
 19021              	.LBE966:
 19022              	# sieve_extend.c:1318:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19023              		.loc 1 1318 90 view .LVU6627
 19024 0343 4D01F6   		add	r14, r14	# blocksize_bits
 19025              	.LVL1294:
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19026              		.loc 1 1318 90 view .LVU6628
 19027 0346 8B442468 		mov	eax, DWORD PTR 104[rsp]	# prephitmp_382, option_verboselevel
 19028              	.LVL1295:
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19029              		.loc 1 1318 75 is_stmt 1 view .LVU6629
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19030              		.loc 1 1318 49 view .LVU6630
 19031              	# sieve_extend.c:1318:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19032              		.loc 1 1318 13 is_stmt 0 view .LVU6631
 19033 034a FFCB     		dec	ebx	# ivtmp_213
 19034 034c 0F8515FF 		jne	.L1838	#,
 19034      FFFF
 19035              	.L1951:
1318:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19036              		.loc 1 1318 13 view .LVU6632
 19037              	.LBE971:
1324:sieve_extend.c ****             }
1325:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19038              		.loc 1 1325 13 is_stmt 1 view .LVU6633
 19039              	# sieve_extend.c:1325:             if (option_verboselevel >= 2) printf("\n");
 19040              		.loc 1 1325 16 is_stmt 0 view .LVU6634
 19041 0352 83F801   		cmp	eax, 1	# prephitmp_382,
 19042 0355 7E0A     		jle	.L1839	#,
 19043              		.loc 1 1325 43 is_stmt 1 view .LVU6635
 19044              	.LVL1296:
 19045              	.LBB972:
 19046              	.LBI972:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19047              		.loc 3 105 1 view .LVU6636
 19048              	.LBB973:
 19049              		.loc 3 107 3 view .LVU6637
 19050              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccW0oq2B.s 			page 509


 19051              		.loc 3 107 10 is_stmt 0 view .LVU6638
 19052 0357 BF0A0000 		mov	edi, 10	#,
 19052      00
 19053 035c E8000000 		call	putchar@PLT	#
 19053      00
 19054              	.LVL1297:
 19055              	.L1839:
 19056              		.loc 3 107 10 view .LVU6639
 19057              	.LBE973:
 19058              	.LBE972:
 19059              	.LBE976:
1315:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19060              		.loc 1 1315 77 is_stmt 1 discriminator 2 view .LVU6640
 19061              	# sieve_extend.c:1315:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1315:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19062              		.loc 1 1315 93 is_stmt 0 discriminator 2 view .LVU6641
 19063 0361 4F8D24A4 		lea	r12, [r12+r12*4]	# tmp319,
 19064              	.LVL1298:
1315:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19065              		.loc 1 1315 93 discriminator 2 view .LVU6642
 19066 0365 4D01E4   		add	r12, r12	# sieveSize_check
 19067              	.LVL1299:
1315:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19068              		.loc 1 1315 47 is_stmt 1 discriminator 2 view .LVU6643
 19069              	# sieve_extend.c:1315:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1315:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19070              		.loc 1 1315 9 is_stmt 0 discriminator 2 view .LVU6644
 19071 0368 FF0C24   		dec	DWORD PTR [rsp]	# %sfp
 19072 036b 0F8570FE 		jne	.L1840	#,
 19072      FFFF
 19073              	.LBE981:
1326:sieve_extend.c ****         }
1327:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19074              		.loc 1 1327 9 is_stmt 1 view .LVU6645
 19075              	# sieve_extend.c:1327:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19076              		.loc 1 1327 12 is_stmt 0 view .LVU6646
 19077 0371 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 19077      00
 19078 0376 0F8FF807 		jg	.L1953	#,
 19078      0000
1328:sieve_extend.c ****     }
1329:sieve_extend.c ****     
1330:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19079              		.loc 1 1330 5 is_stmt 1 view .LVU6647
 19080              	.LVL1300:
1331:sieve_extend.c ****     if (option_tunelevel) {
 19081              		.loc 1 1331 5 view .LVU6648
 19082              	# sieve_extend.c:1331:     if (option_tunelevel) {
 19083              		.loc 1 1331 9 is_stmt 0 view .LVU6649
 19084 037c 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_342, option_tunelevel
 19084      6C
 19085              	# sieve_extend.c:1330:     counter_t best_blocksize_bits = default_blocksize;
1330:sieve_extend.c ****     if (option_tunelevel) {
 19086              		.loc 1 1330 15 view .LVU6650
 19087 0381 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 19087      0300
 19088              	.LVL1301:
GAS LISTING /tmp/ccW0oq2B.s 			page 510


 19089              	# sieve_extend.c:1331:     if (option_tunelevel) {
 19090              		.loc 1 1331 8 view .LVU6651
 19091 0387 4585C0   		test	r8d, r8d	# option_tunelevel.40_342
 19092 038a 0F856102 		jne	.L1954	#,
 19092      0000
 19093              	.LVL1302:
 19094              	.L1867:
 19095              	.LBB982:
1332:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1333:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1334:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1335:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1336:sieve_extend.c ****     }
1337:sieve_extend.c **** 
1338:sieve_extend.c ****     double max_time = default_sieve_duration;
1339:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1340:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1341:sieve_extend.c ****         counter_t passes = 0;
 19096              		.loc 1 1341 9 is_stmt 1 view .LVU6652
1342:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19097              		.loc 1 1342 9 view .LVU6653
1343:sieve_extend.c ****         double elapsed_time = 0;
 19098              		.loc 1 1343 9 view .LVU6654
1344:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19099              		.loc 1 1344 9 view .LVU6655
1345:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19100              		.loc 1 1345 9 view .LVU6656
 19101 0390 488DB424 		lea	rsi, 128[rsp]	# tmp382,
 19101      80000000 
 19102 0398 BF010000 		mov	edi, 1	#,
 19102      00
 19103 039d E8000000 		call	clock_gettime@PLT	#
 19103      00
 19104              	.LVL1303:
1346:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19105              		.loc 1 1346 9 view .LVU6657
 19106              		.loc 1 1346 15 view .LVU6658
 19107              	# sieve_extend.c:1341:         counter_t passes = 0;
1341:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19108              		.loc 1 1341 19 is_stmt 0 view .LVU6659
 19109 03a2 4531F6   		xor	r14d, r14d	# passes
 19110 03a5 488D9C24 		lea	rbx, 144[rsp]	# tmp409,
 19110      90000000 
 19111              	.LVL1304:
 19112              	.L1868:
1347:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19113              		.loc 1 1347 13 is_stmt 1 view .LVU6660
 19114              	# sieve_extend.c:1347:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19115              		.loc 1 1347 30 is_stmt 0 view .LVU6661
 19116 03ad 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 19116      70
 19117 03b2 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 19118 03b5 E8000000 		call	sieve	#
 19118      00
 19119              	.LVL1305:
 19120              	.LBB983:
 19121              	.LBB984:
GAS LISTING /tmp/ccW0oq2B.s 			page 511


 19122              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 19123              		.loc 1 97 5 view .LVU6662
 19124 03ba 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 19125              	.LBE984:
 19126              	.LBE983:
 19127              	# sieve_extend.c:1347:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19128              		.loc 1 1347 30 view .LVU6663
 19129 03bd 4989C4   		mov	r12, rax	# sieve_instance, tmp477
 19130              	.LVL1306:
1348:sieve_extend.c ****             delete_sieve(sieve_instance);
 19131              		.loc 1 1348 13 is_stmt 1 view .LVU6664
 19132              	.LBB988:
 19133              	.LBI983:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19134              		.loc 1 96 13 view .LVU6665
 19135              	.LBB985:
  97:sieve_extend.c ****     free(sieve);
 19136              		.loc 1 97 5 view .LVU6666
 19137 03c0 E8000000 		call	free@PLT	#
 19137      00
 19138              	.LVL1307:
  98:sieve_extend.c **** }
 19139              		.loc 1 98 5 view .LVU6667
 19140 03c5 4C89E7   		mov	rdi, r12	#, sieve_instance
 19141 03c8 E8000000 		call	free@PLT	#
 19141      00
 19142              	.LVL1308:
  98:sieve_extend.c **** }
 19143              		.loc 1 98 5 is_stmt 0 view .LVU6668
 19144              	.LBE985:
 19145              	.LBE988:
1349:sieve_extend.c ****             passes++;
 19146              		.loc 1 1349 13 is_stmt 1 view .LVU6669
 19147              	# sieve_extend.c:1350:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1350:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19148              		.loc 1 1350 13 is_stmt 0 view .LVU6670
 19149 03cd 4889DE   		mov	rsi, rbx	#, tmp409
 19150 03d0 BF010000 		mov	edi, 1	#,
 19150      00
 19151 03d5 E8000000 		call	clock_gettime@PLT	#
 19151      00
 19152              	.LVL1309:
 19153              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
1351:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19154              		.loc 1 1351 62 view .LVU6671
 19155 03da C5E857D2 		vxorps	xmm2, xmm2, xmm2	# tmp480
 19156 03de C4E1EB2A 		vcvtsi2sd	xmm1, xmm2, QWORD PTR 152[rsp]	# tmp481, tmp480, end_time.tv_nsec
 19156      8C249800 
 19156      0000
 19157              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19158              		.loc 1 1351 68 view .LVU6672
 19159 03e8 C4E1EB2A 		vcvtsi2sd	xmm5, xmm2, QWORD PTR 128[rsp]	# tmp482, tmp480, start_time.tv_sec
 19159      AC248000 
 19159      0000
 19160              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19161              		.loc 1 1351 108 view .LVU6673
GAS LISTING /tmp/ccW0oq2B.s 			page 512


 19162 03f2 C4E1EB2A 		vcvtsi2sd	xmm3, xmm2, QWORD PTR 136[rsp]	# tmp483, tmp480, start_time.tv_nsec
 19162      9C248800 
 19162      0000
 19163              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19164              		.loc 1 1351 44 view .LVU6674
 19165 03fc C461EB2A 		vcvtsi2sd	xmm9, xmm2, QWORD PTR 144[rsp]	# tmp484, tmp480, end_time.tv_sec
 19165      8C249000 
 19165      0000
 19166              	# sieve_extend.c:1346:         while (elapsed_time <= max_time) {
1346:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19167              		.loc 1 1346 15 view .LVU6675
 19168 0406 C57B1015 		vmovsd	xmm10, QWORD PTR .LC53[rip]	# tmp573,
 19168      00000000 
 19169 040e C4E2F1BB 		vfmsub231sd	xmm5, xmm1, QWORD PTR .LC4[rip]	# _285, tmp385,
 19169      2D000000 
 19169      00
 19170              	# sieve_extend.c:1349:             passes++;
1349:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19171              		.loc 1 1349 19 view .LVU6676
 19172 0417 49FFC6   		inc	r14	# passes
 19173              	.LVL1310:
1350:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19174              		.loc 1 1350 13 is_stmt 1 view .LVU6677
 19175              		.loc 1 1351 13 view .LVU6678
 19176 041a C462E1BD 		vfnmadd231sd	xmm9, xmm3, QWORD PTR .LC4[rip]	# _286, tmp388,
 19176      0D000000 
 19176      00
 19177              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19178              		.loc 1 1351 26 is_stmt 0 view .LVU6679
 19179 0423 C4C15358 		vaddsd	xmm0, xmm5, xmm9	# elapsed_time, _285, _286
 19179      C1
 19180              	.LVL1311:
1346:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19181              		.loc 1 1346 15 is_stmt 1 view .LVU6680
 19182 0428 C5792FD0 		vcomisd	xmm10, xmm0	# tmp573, elapsed_time
 19183 042c 0F828600 		jb	.L1940	#,
 19183      0000
 19184              	.LVL1312:
1347:sieve_extend.c ****             delete_sieve(sieve_instance);
 19185              		.loc 1 1347 13 view .LVU6681
 19186              	# sieve_extend.c:1347:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1347:sieve_extend.c ****             delete_sieve(sieve_instance);
 19187              		.loc 1 1347 30 is_stmt 0 view .LVU6682
 19188 0432 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	#, option_maxFactor
 19188      70
 19189 0437 4C89FE   		mov	rsi, r15	#, best_result$blocksize_bits
 19190 043a E8000000 		call	sieve	#
 19190      00
 19191              	.LVL1313:
 19192              	.LBB989:
 19193              	.LBB986:
 19194              	# sieve_extend.c:97:     free(sieve->bitarray);
  97:sieve_extend.c ****     free(sieve);
 19195              		.loc 1 97 5 view .LVU6683
 19196 043f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 19197              	.LBE986:
 19198              	.LBE989:
GAS LISTING /tmp/ccW0oq2B.s 			page 513


 19199              	# sieve_extend.c:1347:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1347:sieve_extend.c ****             delete_sieve(sieve_instance);
 19200              		.loc 1 1347 30 view .LVU6684
 19201 0442 4889C5   		mov	rbp, rax	# sieve_instance, tmp479
1348:sieve_extend.c ****             passes++;
 19202              		.loc 1 1348 13 is_stmt 1 view .LVU6685
 19203              	.LVL1314:
 19204              	.LBB990:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19205              		.loc 1 96 13 view .LVU6686
 19206              	.LBB987:
  97:sieve_extend.c ****     free(sieve);
 19207              		.loc 1 97 5 view .LVU6687
 19208 0445 E8000000 		call	free@PLT	#
 19208      00
 19209              	.LVL1315:
  98:sieve_extend.c **** }
 19210              		.loc 1 98 5 view .LVU6688
 19211 044a 4889EF   		mov	rdi, rbp	#, sieve_instance
 19212 044d E8000000 		call	free@PLT	#
 19212      00
 19213              	.LVL1316:
  98:sieve_extend.c **** }
 19214              		.loc 1 98 5 is_stmt 0 view .LVU6689
 19215              	.LBE987:
 19216              	.LBE990:
1349:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19217              		.loc 1 1349 13 is_stmt 1 view .LVU6690
 19218              	# sieve_extend.c:1350:             clock_gettime(CLOCK_MONOTONIC,&end_time);
1350:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19219              		.loc 1 1350 13 is_stmt 0 view .LVU6691
 19220 0452 4889DE   		mov	rsi, rbx	#, tmp409
 19221 0455 BF010000 		mov	edi, 1	#,
 19221      00
 19222 045a E8000000 		call	clock_gettime@PLT	#
 19222      00
 19223              	.LVL1317:
 19224              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19225              		.loc 1 1351 62 view .LVU6692
 19226 045f C4412057 		vxorps	xmm11, xmm11, xmm11	# tmp480
 19226      DB
 19227 0464 C4E1A32A 		vcvtsi2sd	xmm1, xmm11, QWORD PTR 152[rsp]	# tmp489, tmp480, end_time.tv_nsec
 19227      8C249800 
 19227      0000
 19228              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19229              		.loc 1 1351 68 view .LVU6693
 19230 046e C461A32A 		vcvtsi2sd	xmm13, xmm11, QWORD PTR 128[rsp]	# tmp490, tmp480, start_time.tv_sec
 19230      AC248000 
 19230      0000
 19231              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19232              		.loc 1 1351 108 view .LVU6694
 19233 0478 C4E1A32A 		vcvtsi2sd	xmm3, xmm11, QWORD PTR 136[rsp]	# tmp491, tmp480, start_time.tv_nsec
 19233      9C248800 
 19233      0000
 19234              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19235              		.loc 1 1351 44 view .LVU6695
 19236 0482 C461A32A 		vcvtsi2sd	xmm15, xmm11, QWORD PTR 144[rsp]	# tmp492, tmp480, end_time.tv_sec
GAS LISTING /tmp/ccW0oq2B.s 			page 514


 19236      BC249000 
 19236      0000
 19237              	# sieve_extend.c:1346:         while (elapsed_time <= max_time) {
1346:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19238              		.loc 1 1346 15 view .LVU6696
 19239 048c C5FB1035 		vmovsd	xmm6, QWORD PTR .LC53[rip]	# tmp580,
 19239      00000000 
 19240 0494 C462F1BB 		vfmsub231sd	xmm13, xmm1, QWORD PTR .LC4[rip]	# _285, tmp462,
 19240      2D000000 
 19240      00
 19241              	# sieve_extend.c:1349:             passes++;
1349:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19242              		.loc 1 1349 19 view .LVU6697
 19243 049d 49FFC6   		inc	r14	# passes
 19244              	.LVL1318:
1350:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19245              		.loc 1 1350 13 is_stmt 1 view .LVU6698
 19246              		.loc 1 1351 13 view .LVU6699
 19247 04a0 C462E1BD 		vfnmadd231sd	xmm15, xmm3, QWORD PTR .LC4[rip]	# _286, tmp465,
 19247      3D000000 
 19247      00
 19248              	# sieve_extend.c:1351:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19249              		.loc 1 1351 26 is_stmt 0 view .LVU6700
 19250 04a9 C4C11358 		vaddsd	xmm0, xmm13, xmm15	# elapsed_time, _285, _286
 19250      C7
 19251              	.LVL1319:
1346:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19252              		.loc 1 1346 15 is_stmt 1 view .LVU6701
 19253 04ae C5F92FF0 		vcomisd	xmm6, xmm0	# tmp580, elapsed_time
 19254 04b2 0F83F5FE 		jnb	.L1868	#,
 19254      FFFF
 19255              	.L1940:
1352:sieve_extend.c ****         }
1353:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 19256              		.loc 1 1353 9 view .LVU6702
 19257              	.LVL1320:
 19258              	.LBB991:
 19259              	.LBI991:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19260              		.loc 3 105 1 view .LVU6703
 19261              	.LBB992:
 19262              		.loc 3 107 3 view .LVU6704
 19263              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19264              		.loc 3 107 10 is_stmt 0 view .LVU6705
 19265 04b8 4C89F2   		mov	rdx, r14	#, passes
 19266 04bb 488D3500 		lea	rsi, .LC54[rip]	#,
 19266      000000
 19267 04c2 BF010000 		mov	edi, 1	#,
 19267      00
 19268 04c7 B8010000 		mov	eax, 1	#,
 19268      00
 19269 04cc C5FB1104 		vmovsd	QWORD PTR [rsp], xmm0	# %sfp, elapsed_time
 19269      24
 19270 04d1 E8000000 		call	__printf_chk@PLT	#
 19270      00
 19271              	.LVL1321:
 19272              		.loc 3 107 10 view .LVU6706
GAS LISTING /tmp/ccW0oq2B.s 			page 515


 19273              	.LBE992:
 19274              	.LBE991:
1354:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 19275              		.loc 1 1354 9 is_stmt 1 view .LVU6707
 19276              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 19277              		.loc 1 1354 12 is_stmt 0 view .LVU6708
 19278 04d6 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 19278      00
 19279 04db 0F8FC400 		jg	.L1955	#,
 19279      0000
 19280              	.LVL1322:
 19281              	.L1866:
 19282              		.loc 1 1354 12 view .LVU6709
 19283              	.LBE982:
1355:sieve_extend.c ****     }
1356:sieve_extend.c ****     
1357:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 19284              		.loc 1 1357 5 is_stmt 1 view .LVU6710
 19285              	# sieve_extend.c:1357:     if (option_showMaxFactor > 0) {
 19286              		.loc 1 1357 8 is_stmt 0 view .LVU6711
 19287 04e1 48837C24 		cmp	QWORD PTR 120[rsp], 0	# option_showMaxFactor,
 19287      7800
 19288 04e7 7570     		jne	.L1956	#,
 19289 04e9 0F1F8000 		.p2align 4,,10
 19289      000000
 19290              		.p2align 3
 19291              	.L1874:
 19292              	.LBB1001:
 19293              	.LBB977:
 19294              	.LBB974:
 19295              	.LBB967:
1323:sieve_extend.c ****             }
 19296              		.loc 1 1323 29 is_stmt 1 discriminator 1 view .LVU6712
 19297              	.LBE967:
 19298              	.LBE974:
 19299              	.LBE977:
 19300              	.LBE1001:
 19301              	# sieve_extend.c:1364: }
1358:sieve_extend.c ****         printf("Show result set:\n");
1359:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1360:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1361:sieve_extend.c ****         delete_sieve(sieve_instance);
1362:sieve_extend.c ****         printf("\n");
1363:sieve_extend.c ****     }
1364:sieve_extend.c **** }
 19302              		.loc 1 1364 1 is_stmt 0 discriminator 1 view .LVU6713
 19303 04f0 488B8424 		mov	rax, QWORD PTR 168[rsp]	# tmp526, D.7486
 19303      A8000000 
 19304 04f8 64483304 		xor	rax, QWORD PTR fs:40	# tmp526, MEM[(<address-space-1> long unsigned int *)40B]
 19304      25280000 
 19304      00
 19305 0501 0F859A08 		jne	.L1957	#,
 19305      0000
 19306              	# sieve_extend.c:1364: }
 19307              		.loc 1 1364 1 view .LVU6714
 19308 0507 4881C4B8 		add	rsp, 184	#,
 19308      000000
GAS LISTING /tmp/ccW0oq2B.s 			page 516


 19309              		.cfi_remember_state
 19310              		.cfi_def_cfa_offset 56
 19311 050e 5B       		pop	rbx	#
 19312              		.cfi_def_cfa_offset 48
 19313 050f 5D       		pop	rbp	#
 19314              		.cfi_def_cfa_offset 40
 19315 0510 415C     		pop	r12	#
 19316              		.cfi_def_cfa_offset 32
 19317 0512 415D     		pop	r13	#
 19318              		.cfi_def_cfa_offset 24
 19319 0514 415E     		pop	r14	#
 19320              		.cfi_def_cfa_offset 16
 19321 0516 31C0     		xor	eax, eax	#
 19322 0518 415F     		pop	r15	#
 19323              		.cfi_def_cfa_offset 8
 19324 051a C3       		ret	
 19325              	.L1832:
 19326              		.cfi_restore_state
1311:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19327              		.loc 1 1311 39 is_stmt 1 view .LVU6715
 19328              	.LVL1323:
 19329              	.LBB1002:
 19330              	.LBI1002:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19331              		.loc 3 105 1 view .LVU6716
 19332              	.LBB1003:
 19333              		.loc 3 107 3 view .LVU6717
 19334              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19335              		.loc 3 107 10 is_stmt 0 view .LVU6718
 19336 051b 488D3500 		lea	rsi, .LC23[rip]	#,
 19336      000000
 19337 0522 BF010000 		mov	edi, 1	#,
 19337      00
 19338 0527 31C0     		xor	eax, eax	#
 19339 0529 E8000000 		call	__printf_chk@PLT	#
 19339      00
 19340              	.LVL1324:
 19341 052e E989FCFF 		jmp	.L1817	#
 19341      FF
 19342              	.LVL1325:
 19343              	.L1821:
 19344              		.loc 3 107 10 view .LVU6719
 19345              	.LBE1003:
 19346              	.LBE1002:
 19347              	.LBB1004:
1271:sieve_extend.c ****             }
 19348              		.loc 1 1271 17 is_stmt 1 view .LVU6720
 19349              	.LBB933:
 19350              	.LBI933:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19351              		.loc 3 98 1 view .LVU6721
 19352              	.LBB934:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19353              		.loc 3 100 3 view .LVU6722
 19354              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19355              		.loc 3 100 10 is_stmt 0 view .LVU6723
GAS LISTING /tmp/ccW0oq2B.s 			page 517


 19356 0533 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 19357 0536 488D1500 		lea	rdx, .LC28[rip]	#,
 19357      000000
 19358              	.LVL1326:
 19359              	.L1943:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19360              		.loc 3 100 10 view .LVU6724
 19361              	.LBE934:
 19362              	.LBE933:
 19363              	.LBB935:
 19364              	.LBB936:
 19365 053d 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 19365      000000
 19366 0544 BE010000 		mov	esi, 1	#,
 19366      00
 19367 0549 31C0     		xor	eax, eax	#
 19368 054b E8000000 		call	__fprintf_chk@PLT	#
 19368      00
 19369              	.LVL1327:
 19370              	.L1944:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19371              		.loc 3 100 10 view .LVU6725
 19372              	.LBE936:
 19373              	.LBE935:
1279:sieve_extend.c ****             }
 19374              		.loc 1 1279 80 is_stmt 1 view .LVU6726
 19375 0550 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 19376 0554 E8000000 		call	usage	#
 19376      00
 19377              	.LVL1328:
 19378              	.L1956:
1279:sieve_extend.c ****             }
 19379              		.loc 1 1279 80 is_stmt 0 view .LVU6727
 19380              	.LBE1004:
 19381              	.LBB1005:
1358:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 19382              		.loc 1 1358 9 is_stmt 1 view .LVU6728
 19383              	.LBB1006:
 19384              	.LBI1006:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19385              		.loc 3 105 1 view .LVU6729
 19386              	.LBB1007:
 19387              		.loc 3 107 3 view .LVU6730
 19388              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19389              		.loc 3 107 10 is_stmt 0 view .LVU6731
 19390 0559 488D3D00 		lea	rdi, .LC56[rip]	#,
 19390      000000
 19391 0560 E8000000 		call	puts@PLT	#
 19391      00
 19392              	.LVL1329:
 19393              		.loc 3 107 10 view .LVU6732
 19394              	.LBE1007:
 19395              	.LBE1006:
1359:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19396              		.loc 1 1359 9 is_stmt 1 view .LVU6733
 19397              	# sieve_extend.c:1359:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1359:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
GAS LISTING /tmp/ccW0oq2B.s 			page 518


 19398              		.loc 1 1359 46 is_stmt 0 view .LVU6734
 19399 0565 488B7C24 		mov	rdi, QWORD PTR 112[rsp]	# option_maxFactor.50_91, option_maxFactor
 19399      70
 19400 056a 4889FE   		mov	rsi, rdi	#, option_maxFactor.50_91
 19401 056d E8000000 		call	sieve	#
 19401      00
 19402              	.LVL1330:
 19403              	# sieve_extend.c:1360:         show_primes(sieve_instance, option_showMaxFactor);
1360:sieve_extend.c ****         delete_sieve(sieve_instance);
 19404              		.loc 1 1360 9 view .LVU6735
 19405 0572 488B5424 		mov	rdx, QWORD PTR 120[rsp]	#, option_showMaxFactor
 19405      78
 19406              	# sieve_extend.c:1359:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1359:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 19407              		.loc 1 1359 46 view .LVU6736
 19408 0577 4989C7   		mov	r15, rax	# sieve_instance, tmp478
 19409              	.LVL1331:
1360:sieve_extend.c ****         delete_sieve(sieve_instance);
 19410              		.loc 1 1360 9 is_stmt 1 view .LVU6737
 19411 057a 488D7008 		lea	rsi, 8[rax]	# tmp404,
 19412 057e 4889C7   		mov	rdi, rax	#, sieve_instance
 19413 0581 E8000000 		call	show_primes.isra.0	#
 19413      00
 19414              	.LVL1332:
1361:sieve_extend.c ****         printf("\n");
 19415              		.loc 1 1361 9 view .LVU6738
 19416              	.LBB1008:
 19417              	.LBI1008:
  96:sieve_extend.c ****     free(sieve->bitarray);
 19418              		.loc 1 96 13 view .LVU6739
 19419              	.LBB1009:
  97:sieve_extend.c ****     free(sieve);
 19420              		.loc 1 97 5 view .LVU6740
 19421 0586 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_148->bitarray
 19422 0589 E8000000 		call	free@PLT	#
 19422      00
 19423              	.LVL1333:
  98:sieve_extend.c **** }
 19424              		.loc 1 98 5 view .LVU6741
 19425 058e 4C89FF   		mov	rdi, r15	#, sieve_instance
 19426 0591 E8000000 		call	free@PLT	#
 19426      00
 19427              	.LVL1334:
  98:sieve_extend.c **** }
 19428              		.loc 1 98 5 is_stmt 0 view .LVU6742
 19429              	.LBE1009:
 19430              	.LBE1008:
1362:sieve_extend.c ****     }
 19431              		.loc 1 1362 9 is_stmt 1 view .LVU6743
 19432              	.LBB1010:
 19433              	.LBI1010:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19434              		.loc 3 105 1 view .LVU6744
 19435              	.LBB1011:
 19436              		.loc 3 107 3 view .LVU6745
 19437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19438              		.loc 3 107 10 is_stmt 0 view .LVU6746
GAS LISTING /tmp/ccW0oq2B.s 			page 519


 19439 0596 BF0A0000 		mov	edi, 10	#,
 19439      00
 19440 059b E8000000 		call	putchar@PLT	#
 19440      00
 19441              	.LVL1335:
 19442 05a0 E94BFFFF 		jmp	.L1874	#
 19442      FF
 19443              	.LVL1336:
 19444              	.L1955:
 19445              		.loc 3 107 10 view .LVU6747
 19446              	.LBE1011:
 19447              	.LBE1010:
 19448              	.LBE1005:
 19449              	.LBB1012:
1354:sieve_extend.c ****     }
 19450              		.loc 1 1354 39 is_stmt 1 discriminator 1 view .LVU6748
 19451              	.LBB993:
 19452              	.LBI993:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19453              		.loc 3 105 1 discriminator 1 view .LVU6749
 19454              	.LBB994:
 19455              		.loc 3 107 3 discriminator 1 view .LVU6750
 19456              	.LBE994:
 19457              	.LBE993:
 19458              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1354:sieve_extend.c ****     }
 19459              		.loc 1 1354 39 is_stmt 0 discriminator 1 view .LVU6751
 19460 05a5 4D85F6   		test	r14, r14	# passes
 19461 05a8 C5FB103C 		vmovsd	xmm7, QWORD PTR [rsp]	# elapsed_time, %sfp
 19461      24
 19462 05ad C5F857C0 		vxorps	xmm0, xmm0, xmm0	# tmp480
 19463 05b1 0F881907 		js	.L1870	#,
 19463      0000
 19464 05b7 C4C1FB2A 		vcvtsi2sd	xmm2, xmm0, r14	# tmp485, tmp480, passes
 19464      D6
 19465              	.L1871:
 19466              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1354:sieve_extend.c ****     }
 19467              		.loc 1 1354 95 discriminator 1 view .LVU6752
 19468 05bc 4B8D14B6 		lea	rdx, [r14+r14*4]	# tmp397,
 19469              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1354:sieve_extend.c ****     }
 19470              		.loc 1 1354 39 discriminator 1 view .LVU6753
 19471 05c0 C5EB5ECF 		vdivsd	xmm1, xmm2, xmm7	# tmp396, tmp392, elapsed_time
 19472 05c4 4885D2   		test	rdx, rdx	# tmp397
 19473 05c7 0F88E906 		js	.L1872	#,
 19473      0000
 19474 05cd C461FB2A 		vcvtsi2sd	xmm8, xmm0, rdx	# tmp487, tmp480, tmp397
 19474      C2
 19475              	.L1873:
 19476              	.LBB997:
 19477              	.LBB995:
 19478              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19479              		.loc 3 107 10 discriminator 1 view .LVU6754
 19480 05d2 488D3500 		lea	rsi, .LC55[rip]	#,
 19480      000000
 19481 05d9 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccW0oq2B.s 			page 520


 19481      00
 19482 05de B8020000 		mov	eax, 2	#,
 19482      00
 19483              	.LBE995:
 19484              	.LBE997:
 19485              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1354:sieve_extend.c ****     }
 19486              		.loc 1 1354 39 discriminator 1 view .LVU6755
 19487 05e3 C5BB5EC7 		vdivsd	xmm0, xmm8, xmm7	# tmp402, tmp398, elapsed_time
 19488              	.LBB998:
 19489              	.LBB996:
 19490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19491              		.loc 3 107 10 discriminator 1 view .LVU6756
 19492 05e7 E8000000 		call	__printf_chk@PLT	#
 19492      00
 19493              	.LVL1337:
 19494 05ec E9F0FEFF 		jmp	.L1866	#
 19494      FF
 19495              	.LVL1338:
 19496              	.L1954:
 19497              		.loc 3 107 10 discriminator 1 view .LVU6757
 19498              	.LBE996:
 19499              	.LBE998:
 19500              	.LBE1012:
 19501              	.LBB1013:
1332:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19502              		.loc 1 1332 9 is_stmt 1 view .LVU6758
 19503              	# sieve_extend.c:1332:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1332:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19504              		.loc 1 1332 44 is_stmt 0 view .LVU6759
 19505 05f1 448B5424 		mov	r10d, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 19505      68
 19506 05f6 4C8B5C24 		mov	r11, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 19506      70
 19507 05fb 41FFC8   		dec	r8d	#
 19508 05fe 44895424 		mov	DWORD PTR 80[rsp], r10d	# %sfp, option_verboselevel.41_63
 19508      50
 19509 0603 4C895C24 		mov	QWORD PTR 72[rsp], r11	# %sfp, option_maxFactor.42_64
 19509      48
 19510              	.LVL1339:
 19511              	.LBB1014:
 19512              	.LBI1014:
1126:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19513              		.loc 1 1126 27 is_stmt 1 view .LVU6760
 19514              	.LBB1015:
1127:sieve_extend.c **** 
 19515              		.loc 1 1127 5 view .LVU6761
1129:sieve_extend.c ****     best_blocksize_bits = 0;
 19516              		.loc 1 1129 5 view .LVU6762
1130:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19517              		.loc 1 1130 5 view .LVU6763
1131:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19518              		.loc 1 1131 5 view .LVU6764
1132:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19519              		.loc 1 1132 5 view .LVU6765
1133:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19520              		.loc 1 1133 5 view .LVU6766
GAS LISTING /tmp/ccW0oq2B.s 			page 521


1134:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19521              		.loc 1 1134 5 view .LVU6767
1135:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19522              		.loc 1 1135 5 view .LVU6768
1136:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19523              		.loc 1 1136 5 view .LVU6769
1137:sieve_extend.c **** 
 19524              		.loc 1 1137 5 view .LVU6770
1140:sieve_extend.c ****         case 1:
 19525              		.loc 1 1140 5 view .LVU6771
 19526 0608 4183F802 		cmp	r8d, 2	# _209,
 19527 060c 0F862D06 		jbe	.L1875	#,
 19527      0000
 19528 0612 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC22[rip]	# sample_duration,
 19528      00000000 
 19529 061a 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 19529      30050000 
 19529      00
 19530 0623 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 19530      38800000 
 19530      00
 19531 062c 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 19531      58040000 
 19531      00
 19532 0635 C5FB1174 		vmovsd	QWORD PTR 64[rsp], xmm6	# %sfp, sample_duration
 19532      2440
 19533              	.LVL1340:
 19534              	.L1845:
1165:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19535              		.loc 1 1165 5 view .LVU6772
 19536              	# sieve_extend.c:1165:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1165:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19537              		.loc 1 1165 33 is_stmt 0 view .LVU6773
 19538 063b B8400000 		mov	eax, 64	# tmp330,
 19538      00
 19539 0640 31D2     		xor	edx, edx	# tmp329
 19540 0642 48F77424 		div	QWORD PTR 88[rsp]	# %sfp
 19540      58
 19541              	# sieve_extend.c:1165:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1165:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19542              		.loc 1 1165 194 view .LVU6774
 19543 0647 31D2     		xor	edx, edx	# tmp337
 19544              	# sieve_extend.c:1167:     counter_t tuning_results=0;
1167:sieve_extend.c ****     counter_t tuning_result_index=0;
 19545              		.loc 1 1167 15 view .LVU6775
 19546 0649 4531F6   		xor	r14d, r14d	# tuning_results
 19547              	.LBB1016:
 19548              	# sieve_extend.c:1170:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19549              		.loc 1 1170 20 view .LVU6776
 19550 064c 4531ED   		xor	r13d, r13d	# smallstep_faster
 19551              	.LBE1016:
 19552              	# sieve_extend.c:1165:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1165:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19553              		.loc 1 1165 83 view .LVU6777
 19554 064f 488D7801 		lea	rdi, 1[rax]	# _223,
 19555              	.LVL1341:
GAS LISTING /tmp/ccW0oq2B.s 			page 522


1166:sieve_extend.c ****     counter_t tuning_results=0;
 19556              		.loc 1 1166 5 is_stmt 1 view .LVU6778
 19557              	# sieve_extend.c:1165:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1165:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19558              		.loc 1 1165 194 is_stmt 0 view .LVU6779
 19559 0653 B8001000 		mov	eax, 4096	# tmp338,
 19559      00
 19560 0658 48F77424 		div	QWORD PTR 56[rsp]	# %sfp
 19560      38
 19561              	# sieve_extend.c:1166:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1166:sieve_extend.c ****     counter_t tuning_results=0;
 19562              		.loc 1 1166 41 view .LVU6780
 19563 065d 480FAFC7 		imul	rax, rdi	# tmp343, _223
 19564 0661 480FAFF8 		imul	rdi, rax	# tmp344, tmp343
 19565              	.LVL1342:
1166:sieve_extend.c ****     counter_t tuning_results=0;
 19566              		.loc 1 1166 41 view .LVU6781
 19567 0665 48C1E708 		sal	rdi, 8	# tmp345,
 19568 0669 E8000000 		call	malloc@PLT	#
 19568      00
 19569              	.LVL1343:
1167:sieve_extend.c ****     counter_t tuning_result_index=0;
 19570              		.loc 1 1167 5 is_stmt 1 view .LVU6782
1168:sieve_extend.c ****     
 19571              		.loc 1 1168 5 view .LVU6783
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19572              		.loc 1 1170 5 view .LVU6784
 19573              	.LBB1029:
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19574              		.loc 1 1170 10 view .LVU6785
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19575              		.loc 1 1170 42 view .LVU6786
 19576 066e 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, tuning_result
 19576      10
 19577              	.LBE1029:
 19578              	# sieve_extend.c:1132:     counter_t best_mediumstep_faster = 0;
1132:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19579              		.loc 1 1132 15 is_stmt 0 view .LVU6787
 19580 0673 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 19580      28000000 
 19580      00
 19581              	# sieve_extend.c:1131:     counter_t best_smallstep_faster = 0;
1131:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19582              		.loc 1 1131 15 view .LVU6788
 19583 067c 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 19583      20000000 
 19583      00
 19584              	# sieve_extend.c:1130:     best_blocksize_bits = 0;
1130:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19585              		.loc 1 1130 25 view .LVU6789
 19586 0685 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 19586      18000000 
 19586      00
 19587              	# sieve_extend.c:1129:     double best_avg = 0;
1129:sieve_extend.c ****     best_blocksize_bits = 0;
 19588              		.loc 1 1129 12 view .LVU6790
 19589 068e C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
GAS LISTING /tmp/ccW0oq2B.s 			page 523


 19590 0692 C5FB110C 		vmovsd	QWORD PTR [rsp], xmm1	# %sfp, best_avg
 19590      24
 19591              	.LVL1344:
 19592              	.L1847:
 19593              	.LBB1030:
 19594              	.LBB1017:
1171:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19595              		.loc 1 1171 62 is_stmt 1 view .LVU6791
 19596              	.LBB1018:
 19597              	# sieve_extend.c:1172:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19598              		.loc 1 1172 28 is_stmt 0 view .LVU6792
 19599 0697 4D89EC   		mov	r12, r13	# mediumstep_faster, smallstep_faster
 19600              	.LVL1345:
 19601 069a 660F1F44 		.p2align 4,,10
 19601      0000
 19602              		.p2align 3
 19603              	.L1857:
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19604              		.loc 1 1172 46 is_stmt 1 view .LVU6793
 19605              	.LBB1019:
 19606              	# sieve_extend.c:1173:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19607              		.loc 1 1173 32 is_stmt 0 view .LVU6794
 19608 06a0 C7442454 		mov	DWORD PTR 84[rsp], 6	# %sfp,
 19608      06000000 
 19609              	.LBE1019:
 19610              	# sieve_extend.c:1172:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19611              		.loc 1 1172 28 view .LVU6795
 19612 06a8 48C74424 		mov	QWORD PTR 8[rsp], 256	# %sfp,
 19612      08000100 
 19612      00
 19613              	.LVL1346:
 19614              		.p2align 4,,10
 19615 06b1 0F1F8000 		.p2align 3
 19615      000000
 19616              	.L1855:
 19617              	.LBB1028:
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19618              		.loc 1 1173 45 is_stmt 1 view .LVU6796
 19619 06b8 4D6BC658 		imul	r8, r14, 88	# tmp360, tuning_results,
 19620              	# sieve_extend.c:1173:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19621              		.loc 1 1173 130 is_stmt 0 view .LVU6797
 19622 06bc 488B5C24 		mov	rbx, QWORD PTR 8[rsp]	# ivtmp.765, %sfp
 19622      08
 19623 06c1 4C8B7C24 		mov	r15, QWORD PTR 16[rsp]	# tuning_result, %sfp
 19623      10
 19624 06c6 48C1E30D 		sal	rbx, 13	# ivtmp.765,
 19625 06ca 4F8D3C07 		lea	r15, [r15+r8]	# ivtmp.764,
 19626              	# sieve_extend.c:1173:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19627              		.loc 1 1173 32 view .LVU6798
 19628 06ce 31ED     		xor	ebp, ebp	# free_bits
 19629 06d0 EB41     		jmp	.L1853	#
 19630              	.LVL1347:
GAS LISTING /tmp/ccW0oq2B.s 			page 524


 19631              		.p2align 4,,10
 19632 06d2 660F1F44 		.p2align 3
 19632      0000
 19633              	.L1850:
 19634              	.LBB1020:
1189:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19635              		.loc 1 1189 25 is_stmt 1 view .LVU6799
1190:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19636              		.loc 1 1190 25 view .LVU6800
1191:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 19637              		.loc 1 1191 25 view .LVU6801
1192:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 19638              		.loc 1 1192 25 view .LVU6802
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19639              		.loc 1 1193 25 view .LVU6803
 19640              	# sieve_extend.c:1193:                         if (option_verboselevel >=2) printf(".(>)blocksize_b
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19641              		.loc 1 1193 28 is_stmt 0 view .LVU6804
 19642 06d8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19642      01
 19643 06dd 0F8FE500 		jg	.L1958	#,
 19643      0000
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19644              		.loc 1 1193 28 view .LVU6805
 19645 06e3 4C896424 		mov	QWORD PTR 40[rsp], r12	# %sfp, mediumstep_faster
 19645      28
 19646 06e8 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
 19646      20
 19647              	# sieve_extend.c:1190:                         best_blocksize_bits = blocksize_bits;
1190:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19648              		.loc 1 1190 45 view .LVU6806
 19649 06ed 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.765
 19649      18
 19650              	# sieve_extend.c:1189:                         best_avg = tuning_result[tuning_result_index].avg;
1189:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19651              		.loc 1 1189 34 view .LVU6807
 19652 06f2 C5FB1114 		vmovsd	QWORD PTR [rsp], xmm2	# %sfp, _242
 19652      24
 19653              	.LVL1348:
 19654              	.L1848:
1204:sieve_extend.c ****                 }
 19655              		.loc 1 1204 21 is_stmt 1 view .LVU6808
1204:sieve_extend.c ****                 }
 19656              		.loc 1 1204 21 is_stmt 0 view .LVU6809
 19657              	.LBE1020:
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19658              		.loc 1 1173 137 is_stmt 1 view .LVU6810
 19659              	# sieve_extend.c:1173:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19660              		.loc 1 1173 147 is_stmt 0 view .LVU6811
 19661 06f7 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# freebits_steps, %sfp
 19661      38
 19662 06fc 4983C758 		add	r15, 88	# ivtmp.764,
 19663 0700 4801F5   		add	rbp, rsi	# free_bits, freebits_steps
 19664              	.LVL1349:
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19665              		.loc 1 1173 45 is_stmt 1 view .LVU6812
GAS LISTING /tmp/ccW0oq2B.s 			page 525


 19666 0703 4829F3   		sub	rbx, rsi	# ivtmp.765, freebits_steps
 19667              	.LVL1350:
 19668              	# sieve_extend.c:1173:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1173:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19669              		.loc 1 1173 17 is_stmt 0 view .LVU6813
 19670 0706 4881FDFF 		cmp	rbp, 4095	# free_bits,
 19670      0F0000
 19671 070d 0F871D01 		ja	.L1849	#,
 19671      0000
 19672              	.LVL1351:
 19673              	.L1853:
 19674              	.LBB1027:
1174:sieve_extend.c **** 
 19675              		.loc 1 1174 21 is_stmt 1 view .LVU6814
1177:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19676              		.loc 1 1177 21 view .LVU6815
 19677              	# sieve_extend.c:1181:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1181:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19678              		.loc 1 1181 69 is_stmt 0 view .LVU6816
 19679 0713 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# blocksize_kb, %sfp
 19679      08
 19680              	# sieve_extend.c:1178:                     tuning_result[tuning_result_index].maxints = maxints;
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19681              		.loc 1 1178 64 view .LVU6817
 19682 0718 4C8B5424 		mov	r10, QWORD PTR 72[rsp]	# option_maxFactor.42_64, %sfp
 19682      48
 19683              	# sieve_extend.c:1180:                     tuning_result[tuning_result_index].sample_max = sample_m
1180:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19684              		.loc 1 1180 67 view .LVU6818
 19685 071d 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# sample_max, %sfp
 19685      30
 19686              	# sieve_extend.c:1181:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1181:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19687              		.loc 1 1181 69 view .LVU6819
 19688 0722 49897F10 		mov	QWORD PTR 16[r15], rdi	# MEM[base: _300, offset: 16B], blocksize_kb
 19689              	# sieve_extend.c:1179:                     tuning_result[tuning_result_index].sample_duration = sam
1179:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19690              		.loc 1 1179 72 view .LVU6820
 19691 0726 C5FB1064 		vmovsd	xmm4, QWORD PTR 64[rsp]	# sample_duration, %sfp
 19691      2440
 19692              	# sieve_extend.c:1178:                     tuning_result[tuning_result_index].maxints = maxints;
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19693              		.loc 1 1178 64 view .LVU6821
 19694 072c 4D8917   		mov	QWORD PTR [r15], r10	# MEM[base: _300, offset: 0B], option_maxFactor.42_64
 19695              	# sieve_extend.c:1180:                     tuning_result[tuning_result_index].sample_max = sample_m
1180:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19696              		.loc 1 1180 67 view .LVU6822
 19697 072f 4D895F30 		mov	QWORD PTR 48[r15], r11	# MEM[base: _300, offset: 48B], sample_max
 19698              	# sieve_extend.c:1182:                     tuning_result[tuning_result_index].free_bits = free_bits
1182:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19699              		.loc 1 1182 66 view .LVU6823
 19700 0733 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _300, offset: 24B], free_bits
 19701              	# sieve_extend.c:1183:                     tuning_result[tuning_result_index].blocksize_bits = bloc
1183:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19702              		.loc 1 1183 71 view .LVU6824
 19703 0737 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _300, offset: 8B], ivtmp.765
 19704              	# sieve_extend.c:1184:                     tuning_result[tuning_result_index].smallstep_faster = sm
GAS LISTING /tmp/ccW0oq2B.s 			page 526


1184:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19705              		.loc 1 1184 73 view .LVU6825
 19706 073b 4D896F20 		mov	QWORD PTR 32[r15], r13	# MEM[base: _300, offset: 32B], smallstep_faster
 19707              	# sieve_extend.c:1185:                     tuning_result[tuning_result_index].mediumstep_faster = m
1185:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19708              		.loc 1 1185 74 view .LVU6826
 19709 073f 4D896728 		mov	QWORD PTR 40[r15], r12	# MEM[base: _300, offset: 40B], mediumstep_faster
 19710              	# sieve_extend.c:1186:                     tune_benchmark(tuning_result, tuning_result_index);
1186:sieve_extend.c **** 
 19711              		.loc 1 1186 21 view .LVU6827
 19712 0743 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	#, %sfp
 19712      10
 19713 0748 4C89F6   		mov	rsi, r14	# tuning_results, tuning_results
 19714              	# sieve_extend.c:1179:                     tuning_result[tuning_result_index].sample_duration = sam
1179:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19715              		.loc 1 1179 72 view .LVU6828
 19716 074b C4C17B11 		vmovsd	QWORD PTR 56[r15], xmm4	# MEM[base: _300, offset: 56B], sample_duration
 19716      6738
 19717              	# sieve_extend.c:1186:                     tune_benchmark(tuning_result, tuning_result_index);
1186:sieve_extend.c **** 
 19718              		.loc 1 1186 21 view .LVU6829
 19719 0751 E8000000 		call	tune_benchmark	#
 19719      00
 19720              	.LVL1352:
 19721              	# sieve_extend.c:1188:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1188:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19722              		.loc 1 1188 60 view .LVU6830
 19723 0756 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	# _242, MEM[base: _300, offset: 80B]
 19723      5750
 19724              	# sieve_extend.c:1177:                     tuning_results++;
1177:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19725              		.loc 1 1177 35 view .LVU6831
 19726 075c 49FFC6   		inc	r14	# tuning_results
 19727              	.LVL1353:
1178:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19728              		.loc 1 1178 21 is_stmt 1 view .LVU6832
1179:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19729              		.loc 1 1179 21 view .LVU6833
1180:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19730              		.loc 1 1180 21 view .LVU6834
1181:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19731              		.loc 1 1181 21 view .LVU6835
1182:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19732              		.loc 1 1182 21 view .LVU6836
1183:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19733              		.loc 1 1183 21 view .LVU6837
1184:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19734              		.loc 1 1184 21 view .LVU6838
1185:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19735              		.loc 1 1185 21 view .LVU6839
1186:sieve_extend.c **** 
 19736              		.loc 1 1186 21 view .LVU6840
1188:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19737              		.loc 1 1188 21 view .LVU6841
 19738              	# sieve_extend.c:1188:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1188:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19739              		.loc 1 1188 24 is_stmt 0 view .LVU6842
GAS LISTING /tmp/ccW0oq2B.s 			page 527


 19740 075f C5F92F14 		vcomisd	xmm2, QWORD PTR [rsp]	# _242, %sfp
 19740      24
 19741 0764 0F876EFF 		ja	.L1850	#,
 19741      FFFF
 19742              	.L1851:
1199:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19743              		.loc 1 1199 21 is_stmt 1 view .LVU6843
 19744              	# sieve_extend.c:1199:                     if (option_verboselevel >= 3) printf("...blocksize_bits 
1199:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19745              		.loc 1 1199 24 is_stmt 0 view .LVU6844
 19746 076a 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 19746      02
 19747 076f 7E86     		jle	.L1848	#,
1199:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19748              		.loc 1 1199 51 is_stmt 1 view .LVU6845
 19749              	.LVL1354:
 19750              	.LBB1021:
 19751              	.LBI1021:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19752              		.loc 3 105 1 view .LVU6846
 19753              	.LBB1022:
 19754              		.loc 3 107 3 view .LVU6847
 19755              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19756              		.loc 3 107 10 is_stmt 0 view .LVU6848
 19757 0771 4883EC08 		sub	rsp, 8	#,
 19758              		.cfi_def_cfa_offset 248
 19759              	.LVL1355:
 19760              		.loc 3 107 10 view .LVU6849
 19761 0775 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19761      4748
 19762 077b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19763 077f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19764 0783 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
 19765              		.cfi_def_cfa_offset 256
 19766 0787 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, MEM[base: _300, offset: 80B]
 19766      5750
 19767 078d C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 19767      4F38
 19768 0793 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 19769              		.cfi_def_cfa_offset 264
 19770 0797 488D3500 		lea	rsi, .LC47[rip]	#,
 19770      000000
 19771 079e BF010000 		mov	edi, 1	#,
 19771      00
 19772 07a3 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 19773              		.cfi_def_cfa_offset 272
 19774 07a7 B8030000 		mov	eax, 3	#,
 19774      00
 19775 07ac 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 19776 07b0 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 19777 07b4 E8000000 		call	__printf_chk@PLT	#
 19777      00
 19778              	.LVL1356:
 19779 07b9 4883C420 		add	rsp, 32	#,
 19780              		.cfi_def_cfa_offset 240
 19781              	.LVL1357:
 19782              		.loc 3 107 10 view .LVU6850
GAS LISTING /tmp/ccW0oq2B.s 			page 528


 19783 07bd E935FFFF 		jmp	.L1848	#
 19783      FF
 19784              	.LVL1358:
 19785              		.p2align 4,,10
 19786 07c2 660F1F44 		.p2align 3
 19786      0000
 19787              	.L1958:
 19788              		.loc 3 107 10 view .LVU6851
 19789              	.LBE1022:
 19790              	.LBE1021:
1193:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19791              		.loc 1 1193 54 is_stmt 1 view .LVU6852
 19792              	.LBB1023:
 19793              	.LBI1023:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19794              		.loc 3 105 1 view .LVU6853
 19795              	.LBB1024:
 19796              		.loc 3 107 3 view .LVU6854
 19797              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19798              		.loc 3 107 10 is_stmt 0 view .LVU6855
 19799 07c8 4883EC08 		sub	rsp, 8	#,
 19800              		.cfi_def_cfa_offset 248
 19801 07cc C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19801      4748
 19802 07d2 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19803 07d6 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19804 07da 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _300, offset: 48B]
 19805              		.cfi_def_cfa_offset 256
 19806 07de C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[base: _300, offset: 56B]
 19806      4F38
 19807 07e4 488D3500 		lea	rsi, .LC46[rip]	#,
 19807      000000
 19808 07eb 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _300, offset: 64B]
 19809              		.cfi_def_cfa_offset 264
 19810 07ef BF010000 		mov	edi, 1	#,
 19810      00
 19811 07f4 B8030000 		mov	eax, 3	#,
 19811      00
 19812 07f9 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _300, offset: 40B]
 19813              		.cfi_def_cfa_offset 272
 19814 07fd 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _300, offset: 32B]
 19815 0801 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _300, offset: 24B]
 19816 0805 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 19816      2420
 19817 080b E8000000 		call	__printf_chk@PLT	#
 19817      00
 19818              	.LVL1359:
 19819              		.loc 3 107 10 view .LVU6856
 19820 0810 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, mediumstep_faster
 19820      48
 19821 0815 4883C420 		add	rsp, 32	#,
 19822              		.cfi_def_cfa_offset 240
 19823              	.LVL1360:
 19824              		.loc 3 107 10 view .LVU6857
 19825 0819 4C896C24 		mov	QWORD PTR 32[rsp], r13	# %sfp, smallstep_faster
 19825      20
 19826              	.LBE1024:
GAS LISTING /tmp/ccW0oq2B.s 			page 529


 19827              	.LBE1023:
 19828              	# sieve_extend.c:1190:                         best_blocksize_bits = blocksize_bits;
1190:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19829              		.loc 1 1190 45 view .LVU6858
 19830 081e 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, ivtmp.765
 19830      18
 19831              	.LBB1026:
 19832              	.LBB1025:
 19833              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19834              		.loc 3 107 10 view .LVU6859
 19835 0823 E942FFFF 		jmp	.L1851	#
 19835      FF
 19836              	.LVL1361:
 19837 0828 0F1F8400 		.p2align 4,,10
 19837      00000000 
 19838              		.p2align 3
 19839              	.L1849:
 19840              		.loc 3 107 10 view .LVU6860
 19841              	.LBE1025:
 19842              	.LBE1026:
 19843              	.LBE1027:
 19844              	.LBE1028:
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19845              		.loc 1 1172 63 is_stmt 1 view .LVU6861
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19846              		.loc 1 1172 46 view .LVU6862
 19847              	# sieve_extend.c:1172:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19848              		.loc 1 1172 76 is_stmt 0 view .LVU6863
 19849 0830 48D16C24 		shr	QWORD PTR 8[rsp]	# %sfp
 19849      08
 19850              	.LVL1362:
 19851              	# sieve_extend.c:1172:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1172:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19852              		.loc 1 1172 13 view .LVU6864
 19853 0835 FF4C2454 		dec	DWORD PTR 84[rsp]	# %sfp
 19854 0839 0F8579FE 		jne	.L1855	#,
 19854      FFFF
 19855              	.LBE1018:
1171:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19856              		.loc 1 1171 94 is_stmt 1 view .LVU6865
 19857              	# sieve_extend.c:1171:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1171:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19858              		.loc 1 1171 112 is_stmt 0 view .LVU6866
 19859 083f 4C036424 		add	r12, QWORD PTR 88[rsp]	# mediumstep_faster, %sfp
 19859      58
 19860              	.LVL1363:
1171:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19861              		.loc 1 1171 62 is_stmt 1 view .LVU6867
 19862              	# sieve_extend.c:1171:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1171:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19863              		.loc 1 1171 9 is_stmt 0 view .LVU6868
 19864 0844 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 19865 0848 0F8652FE 		jbe	.L1857	#,
 19865      FFFF
 19866              	.LBE1017:
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
GAS LISTING /tmp/ccW0oq2B.s 			page 530


 19867              		.loc 1 1170 75 is_stmt 1 view .LVU6869
 19868              	# sieve_extend.c:1170:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19869              		.loc 1 1170 92 is_stmt 0 view .LVU6870
 19870 084e 4C036C24 		add	r13, QWORD PTR 88[rsp]	# smallstep_faster, %sfp
 19870      58
 19871              	.LVL1364:
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19872              		.loc 1 1170 42 is_stmt 1 view .LVU6871
 19873              	# sieve_extend.c:1170:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1170:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19874              		.loc 1 1170 5 is_stmt 0 view .LVU6872
 19875 0853 4983FD20 		cmp	r13, 32	# smallstep_faster,
 19876 0857 0F863AFE 		jbe	.L1847	#,
 19876      FFFF
 19877              	.LBE1030:
 19878              	# sieve_extend.c:1209:     if (option_verboselevel >= 2) {
1209:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19879              		.loc 1 1209 8 view .LVU6873
 19880 085d 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19880      01
 19881 0862 4D89F7   		mov	r15, r14	# tuning_results, tuning_results
 19882 0865 4C8B7424 		mov	r14, QWORD PTR 16[rsp]	# tuning_result, %sfp
 19882      10
 19883              	.LVL1365:
1209:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19884              		.loc 1 1209 5 is_stmt 1 view .LVU6874
 19885              	# sieve_extend.c:1209:     if (option_verboselevel >= 2) {
1209:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19886              		.loc 1 1209 8 is_stmt 0 view .LVU6875
 19887 086a 7E31     		jle	.L1858	#,
1210:sieve_extend.c ****         printf("Best options\n");
 19888              		.loc 1 1210 9 is_stmt 1 view .LVU6876
 19889              	.LVL1366:
 19890              	.LBB1031:
 19891              	.LBI1031:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19892              		.loc 3 105 1 view .LVU6877
 19893              	.LBB1032:
 19894              		.loc 3 107 3 view .LVU6878
 19895              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19896              		.loc 3 107 10 is_stmt 0 view .LVU6879
 19897 086c 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	#, %sfp
 19897      28
 19898 0871 4C8B4424 		mov	r8, QWORD PTR 32[rsp]	#, %sfp
 19898      20
 19899 0876 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	#, %sfp
 19899      18
 19900 087b BF010000 		mov	edi, 1	#,
 19900      00
 19901 0880 4C89FA   		mov	rdx, r15	#, tuning_results
 19902 0883 488D3500 		lea	rsi, .LC48[rip]	#,
 19902      000000
 19903 088a 31C0     		xor	eax, eax	#
 19904 088c E8000000 		call	__printf_chk@PLT	#
 19904      00
 19905              	.LVL1367:
GAS LISTING /tmp/ccW0oq2B.s 			page 531


 19906              		.loc 3 107 10 view .LVU6880
 19907              	.LBE1032:
 19908              	.LBE1031:
1211:sieve_extend.c ****     }
 19909              		.loc 1 1211 9 is_stmt 1 view .LVU6881
 19910              	.LBB1033:
 19911              	.LBI1033:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19912              		.loc 3 105 1 view .LVU6882
 19913              	.LBB1034:
 19914              		.loc 3 107 3 view .LVU6883
 19915              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19916              		.loc 3 107 10 is_stmt 0 view .LVU6884
 19917 0891 488D3D00 		lea	rdi, .LC49[rip]	#,
 19917      000000
 19918 0898 E8000000 		call	puts@PLT	#
 19918      00
 19919              	.LVL1368:
 19920              	.L1858:
 19921              		.loc 3 107 10 view .LVU6885
 19922              	.LBE1034:
 19923              	.LBE1033:
 19924              	.LBB1035:
 19925              	# sieve_extend.c:1225:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19926              		.loc 1 1225 75 view .LVU6886
 19927 089d 4C8B6424 		mov	r12, QWORD PTR 48[rsp]	# sample_max, %sfp
 19927      30
 19928              	.LVL1369:
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19929              		.loc 1 1225 75 view .LVU6887
 19930              	.LBE1035:
 19931              	.LBB1040:
 19932              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19933              		.loc 1 1237 24 view .LVU6888
 19934 08a2 31DB     		xor	ebx, ebx	# step
 19935              	.LVL1370:
 19936              	.L1863:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19937              		.loc 1 1237 24 view .LVU6889
 19938              	.LBE1040:
1214:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 19939              		.loc 1 1214 11 is_stmt 1 view .LVU6890
 19940 08a4 4983FF04 		cmp	r15, 4	# tuning_results,
 19941 08a8 0F861A03 		jbe	.L1959	#,
 19941      0000
1215:sieve_extend.c ****         step++;
 19942              		.loc 1 1215 9 view .LVU6891
 19943 08ae 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 19943      000000
 19944 08b5 BA580000 		mov	edx, 88	#,
 19944      00
 19945 08ba 4C89FE   		mov	rsi, r15	#, tuning_results
 19946 08bd 4C89F7   		mov	rdi, r14	#, tuning_result
 19947 08c0 E8000000 		call	qsort@PLT	#
 19947      00
GAS LISTING /tmp/ccW0oq2B.s 			page 532


 19948              	.LVL1371:
1216:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19949              		.loc 1 1216 9 view .LVU6892
 19950              	# sieve_extend.c:1216:         step++;
1216:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19951              		.loc 1 1216 13 is_stmt 0 view .LVU6893
 19952 08c5 48FFC3   		inc	rbx	# step
 19953              	.LVL1372:
1217:sieve_extend.c ****             tuning_result_index = 0;
 19954              		.loc 1 1217 9 is_stmt 1 view .LVU6894
 19955              	# sieve_extend.c:1217:         if (option_verboselevel >= 2) {
1217:sieve_extend.c ****             tuning_result_index = 0;
 19956              		.loc 1 1217 12 is_stmt 0 view .LVU6895
 19957 08c8 837C2450 		cmp	DWORD PTR 80[rsp], 1	# %sfp,
 19957      01
 19958 08cd 0F8FE201 		jg	.L1859	#,
 19958      0000
 19959              	.L1861:
1235:sieve_extend.c **** 
 19960              		.loc 1 1235 9 is_stmt 1 view .LVU6896
 19961              	# sieve_extend.c:1235:         tuning_results = tuning_results / 2;
1235:sieve_extend.c **** 
 19962              		.loc 1 1235 24 is_stmt 0 view .LVU6897
 19963 08d3 49D1EF   		shr	r15	# tuning_results
 19964              	.LVL1373:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19965              		.loc 1 1237 9 is_stmt 1 view .LVU6898
 19966              	.LBB1041:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19967              		.loc 1 1237 14 view .LVU6899
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19968              		.loc 1 1237 29 view .LVU6900
 19969 08d6 4D89FA   		mov	r10, r15	# tmp431, tuning_results
 19970 08d9 498D6E30 		lea	rbp, 48[r14]	# ivtmp.746,
 19971              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19972              		.loc 1 1237 24 is_stmt 0 view .LVU6901
 19973 08dd 4531ED   		xor	r13d, r13d	# i
 19974 08e0 4183E207 		and	r10d, 7	# tmp431,
 19975 08e4 0F84D400 		je	.L1860	#,
 19975      0000
 19976 08ea 4983FA01 		cmp	r10, 1	# tmp431,
 19977 08ee 0F84AB00 		je	.L1918	#,
 19977      0000
 19978 08f4 4983FA02 		cmp	r10, 2	# tmp431,
 19979 08f8 0F848B00 		je	.L1919	#,
 19979      0000
 19980 08fe 4983FA03 		cmp	r10, 3	# tmp431,
 19981 0902 746F     		je	.L1920	#,
 19982 0904 4983FA04 		cmp	r10, 4	# tmp431,
 19983 0908 7453     		je	.L1921	#,
 19984 090a 4983FA05 		cmp	r10, 5	# tmp431,
 19985 090e 7437     		je	.L1922	#,
 19986 0910 4983FA06 		cmp	r10, 6	# tmp431,
 19987 0914 741B     		je	.L1923	#,
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19988              		.loc 1 1238 13 is_stmt 1 view .LVU6902
GAS LISTING /tmp/ccW0oq2B.s 			page 533


 19989 0916 31F6     		xor	esi, esi	#
 19990 0918 4C89F7   		mov	rdi, r14	#, tuning_result
 19991 091b E8000000 		call	tune_benchmark	#
 19991      00
 19992              	.LVL1374:
1239:sieve_extend.c ****         }
 19993              		.loc 1 1239 13 view .LVU6903
 19994              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19995              		.loc 1 1237 48 is_stmt 0 view .LVU6904
 19996 0920 41BD0100 		mov	r13d, 1	# i,
 19996      0000
 19997              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 19998              		.loc 1 1239 41 view .LVU6905
 19999 0926 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20000              		.loc 1 1237 47 is_stmt 1 view .LVU6906
 20001              	.LVL1375:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20002              		.loc 1 1237 29 view .LVU6907
 20003 092a 498DAE88 		lea	rbp, 136[r14]	# ivtmp.746,
 20003      000000
 20004              	.L1923:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20005              		.loc 1 1238 13 view .LVU6908
 20006 0931 4C89EE   		mov	rsi, r13	#, i
 20007 0934 4C89F7   		mov	rdi, r14	#, tuning_result
 20008 0937 E8000000 		call	tune_benchmark	#
 20008      00
 20009              	.LVL1376:
1239:sieve_extend.c ****         }
 20010              		.loc 1 1239 13 view .LVU6909
 20011              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20012              		.loc 1 1237 48 is_stmt 0 view .LVU6910
 20013 093c 49FFC5   		inc	r13	# i
 20014              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20015              		.loc 1 1239 41 view .LVU6911
 20016 093f 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20017              		.loc 1 1237 47 is_stmt 1 view .LVU6912
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20018              		.loc 1 1237 29 view .LVU6913
 20019 0943 4883C558 		add	rbp, 88	# ivtmp.746,
 20020              	.L1922:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20021              		.loc 1 1238 13 view .LVU6914
 20022 0947 4C89EE   		mov	rsi, r13	#, i
 20023 094a 4C89F7   		mov	rdi, r14	#, tuning_result
 20024 094d E8000000 		call	tune_benchmark	#
 20024      00
 20025              	.LVL1377:
1239:sieve_extend.c ****         }
 20026              		.loc 1 1239 13 view .LVU6915
 20027              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccW0oq2B.s 			page 534


1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20028              		.loc 1 1237 48 is_stmt 0 view .LVU6916
 20029 0952 49FFC5   		inc	r13	# i
 20030              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20031              		.loc 1 1239 41 view .LVU6917
 20032 0955 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20033              		.loc 1 1237 47 is_stmt 1 view .LVU6918
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20034              		.loc 1 1237 29 view .LVU6919
 20035 0959 4883C558 		add	rbp, 88	# ivtmp.746,
 20036              	.L1921:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20037              		.loc 1 1238 13 view .LVU6920
 20038 095d 4C89EE   		mov	rsi, r13	#, i
 20039 0960 4C89F7   		mov	rdi, r14	#, tuning_result
 20040 0963 E8000000 		call	tune_benchmark	#
 20040      00
 20041              	.LVL1378:
1239:sieve_extend.c ****         }
 20042              		.loc 1 1239 13 view .LVU6921
 20043              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20044              		.loc 1 1237 48 is_stmt 0 view .LVU6922
 20045 0968 49FFC5   		inc	r13	# i
 20046              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20047              		.loc 1 1239 41 view .LVU6923
 20048 096b 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20049              		.loc 1 1237 47 is_stmt 1 view .LVU6924
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20050              		.loc 1 1237 29 view .LVU6925
 20051 096f 4883C558 		add	rbp, 88	# ivtmp.746,
 20052              	.L1920:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20053              		.loc 1 1238 13 view .LVU6926
 20054 0973 4C89EE   		mov	rsi, r13	#, i
 20055 0976 4C89F7   		mov	rdi, r14	#, tuning_result
 20056 0979 E8000000 		call	tune_benchmark	#
 20056      00
 20057              	.LVL1379:
1239:sieve_extend.c ****         }
 20058              		.loc 1 1239 13 view .LVU6927
 20059              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20060              		.loc 1 1237 48 is_stmt 0 view .LVU6928
 20061 097e 49FFC5   		inc	r13	# i
 20062              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20063              		.loc 1 1239 41 view .LVU6929
 20064 0981 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20065              		.loc 1 1237 47 is_stmt 1 view .LVU6930
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20066              		.loc 1 1237 29 view .LVU6931
GAS LISTING /tmp/ccW0oq2B.s 			page 535


 20067 0985 4883C558 		add	rbp, 88	# ivtmp.746,
 20068              	.L1919:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20069              		.loc 1 1238 13 view .LVU6932
 20070 0989 4C89EE   		mov	rsi, r13	#, i
 20071 098c 4C89F7   		mov	rdi, r14	#, tuning_result
 20072 098f E8000000 		call	tune_benchmark	#
 20072      00
 20073              	.LVL1380:
1239:sieve_extend.c ****         }
 20074              		.loc 1 1239 13 view .LVU6933
 20075              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20076              		.loc 1 1237 48 is_stmt 0 view .LVU6934
 20077 0994 49FFC5   		inc	r13	# i
 20078              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20079              		.loc 1 1239 41 view .LVU6935
 20080 0997 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20081              		.loc 1 1237 47 is_stmt 1 view .LVU6936
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20082              		.loc 1 1237 29 view .LVU6937
 20083 099b 4883C558 		add	rbp, 88	# ivtmp.746,
 20084              	.L1918:
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20085              		.loc 1 1238 13 view .LVU6938
 20086 099f 4C89EE   		mov	rsi, r13	#, i
 20087 09a2 4C89F7   		mov	rdi, r14	#, tuning_result
 20088              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20089              		.loc 1 1237 48 is_stmt 0 view .LVU6939
 20090 09a5 49FFC5   		inc	r13	# i
 20091              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20092              		.loc 1 1238 13 view .LVU6940
 20093 09a8 E8000000 		call	tune_benchmark	#
 20093      00
 20094              	.LVL1381:
1239:sieve_extend.c ****         }
 20095              		.loc 1 1239 13 is_stmt 1 view .LVU6941
 20096              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20097              		.loc 1 1239 41 is_stmt 0 view .LVU6942
 20098 09ad 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20099              		.loc 1 1237 47 is_stmt 1 view .LVU6943
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20100              		.loc 1 1237 29 view .LVU6944
 20101 09b1 4883C558 		add	rbp, 88	# ivtmp.746,
 20102              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20103              		.loc 1 1237 9 is_stmt 0 view .LVU6945
 20104 09b5 4D39EF   		cmp	r15, r13	# tuning_results, i
 20105 09b8 0F84E6FE 		je	.L1863	#,
 20105      FFFF
 20106              	.L1860:
GAS LISTING /tmp/ccW0oq2B.s 			page 536


1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20107              		.loc 1 1238 13 is_stmt 1 view .LVU6946
 20108 09be 4C89EE   		mov	rsi, r13	#, i
 20109 09c1 4C89F7   		mov	rdi, r14	#, tuning_result
 20110 09c4 E8000000 		call	tune_benchmark	#
 20110      00
 20111              	.LVL1382:
1239:sieve_extend.c ****         }
 20112              		.loc 1 1239 13 view .LVU6947
 20113              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20114              		.loc 1 1239 41 is_stmt 0 view .LVU6948
 20115 09c9 4C016500 		add	QWORD PTR 0[rbp], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20116              		.loc 1 1237 47 is_stmt 1 view .LVU6949
 20117 09cd 4C8D5D58 		lea	r11, 88[rbp]	# tmp433,
 20118              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20119              		.loc 1 1237 48 is_stmt 0 view .LVU6950
 20120 09d1 498D7501 		lea	rsi, 1[r13]	# tmp432,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20121              		.loc 1 1237 29 is_stmt 1 view .LVU6951
 20122              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20123              		.loc 1 1238 13 is_stmt 0 view .LVU6952
 20124 09d5 4C89F7   		mov	rdi, r14	#, tuning_result
 20125 09d8 4C891C24 		mov	QWORD PTR [rsp], r11	# %sfp, tmp433
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20126              		.loc 1 1238 13 is_stmt 1 view .LVU6953
 20127 09dc E8000000 		call	tune_benchmark	#
 20127      00
 20128              	.LVL1383:
1239:sieve_extend.c ****         }
 20129              		.loc 1 1239 13 view .LVU6954
 20130              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20131              		.loc 1 1239 41 is_stmt 0 view .LVU6955
 20132 09e1 488B3C24 		mov	rdi, QWORD PTR [rsp]	# tmp433, %sfp
 20133 09e5 488D8DB0 		lea	rcx, 176[rbp]	# ivtmp.746,
 20133      000000
 20134 09ec 4C0127   		add	QWORD PTR [rdi], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20135              		.loc 1 1237 47 is_stmt 1 view .LVU6956
 20136              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20137              		.loc 1 1237 48 is_stmt 0 view .LVU6957
 20138 09ef 498D7502 		lea	rsi, 2[r13]	# i,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20139              		.loc 1 1237 29 is_stmt 1 view .LVU6958
 20140              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20141              		.loc 1 1238 13 is_stmt 0 view .LVU6959
 20142 09f3 4C89F7   		mov	rdi, r14	#, tuning_result
 20143 09f6 48890C24 		mov	QWORD PTR [rsp], rcx	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20144              		.loc 1 1238 13 is_stmt 1 view .LVU6960
 20145 09fa E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/ccW0oq2B.s 			page 537


 20145      00
 20146              	.LVL1384:
1239:sieve_extend.c ****         }
 20147              		.loc 1 1239 13 view .LVU6961
 20148              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20149              		.loc 1 1239 41 is_stmt 0 view .LVU6962
 20150 09ff 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20151 0a03 4C8D8D08 		lea	r9, 264[rbp]	# ivtmp.746,
 20151      010000
 20152 0a0a 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20153              		.loc 1 1237 47 is_stmt 1 view .LVU6963
 20154              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20155              		.loc 1 1238 13 is_stmt 0 view .LVU6964
 20156 0a0d 4C89F7   		mov	rdi, r14	#, tuning_result
 20157              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20158              		.loc 1 1237 48 view .LVU6965
 20159 0a10 498D7503 		lea	rsi, 3[r13]	# i,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20160              		.loc 1 1237 29 is_stmt 1 view .LVU6966
 20161 0a14 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20162              		.loc 1 1238 13 view .LVU6967
 20163 0a18 E8000000 		call	tune_benchmark	#
 20163      00
 20164              	.LVL1385:
1239:sieve_extend.c ****         }
 20165              		.loc 1 1239 13 view .LVU6968
 20166              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20167              		.loc 1 1239 41 is_stmt 0 view .LVU6969
 20168 0a1d 488B1424 		mov	rdx, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20169 0a21 488D8560 		lea	rax, 352[rbp]	# ivtmp.746,
 20169      010000
 20170 0a28 4C0122   		add	QWORD PTR [rdx], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20171              		.loc 1 1237 47 is_stmt 1 view .LVU6970
 20172              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20173              		.loc 1 1237 48 is_stmt 0 view .LVU6971
 20174 0a2b 498D7504 		lea	rsi, 4[r13]	# i,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20175              		.loc 1 1237 29 is_stmt 1 view .LVU6972
 20176              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20177              		.loc 1 1238 13 is_stmt 0 view .LVU6973
 20178 0a2f 4C89F7   		mov	rdi, r14	#, tuning_result
 20179 0a32 48890424 		mov	QWORD PTR [rsp], rax	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20180              		.loc 1 1238 13 is_stmt 1 view .LVU6974
 20181 0a36 E8000000 		call	tune_benchmark	#
 20181      00
 20182              	.LVL1386:
1239:sieve_extend.c ****         }
GAS LISTING /tmp/ccW0oq2B.s 			page 538


 20183              		.loc 1 1239 13 view .LVU6975
 20184              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20185              		.loc 1 1239 41 is_stmt 0 view .LVU6976
 20186 0a3b 4C8B0424 		mov	r8, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20187 0a3f 4C8D95B8 		lea	r10, 440[rbp]	# ivtmp.746,
 20187      010000
 20188 0a46 4D0120   		add	QWORD PTR [r8], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20189              		.loc 1 1237 47 is_stmt 1 view .LVU6977
 20190              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20191              		.loc 1 1237 48 is_stmt 0 view .LVU6978
 20192 0a49 498D7505 		lea	rsi, 5[r13]	# i,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20193              		.loc 1 1237 29 is_stmt 1 view .LVU6979
 20194              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20195              		.loc 1 1238 13 is_stmt 0 view .LVU6980
 20196 0a4d 4C89F7   		mov	rdi, r14	#, tuning_result
 20197 0a50 4C891424 		mov	QWORD PTR [rsp], r10	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20198              		.loc 1 1238 13 is_stmt 1 view .LVU6981
 20199 0a54 E8000000 		call	tune_benchmark	#
 20199      00
 20200              	.LVL1387:
1239:sieve_extend.c ****         }
 20201              		.loc 1 1239 13 view .LVU6982
 20202              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20203              		.loc 1 1239 41 is_stmt 0 view .LVU6983
 20204 0a59 4C8B1C24 		mov	r11, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20205 0a5d 488DBD10 		lea	rdi, 528[rbp]	# ivtmp.746,
 20205      020000
 20206 0a64 4D0123   		add	QWORD PTR [r11], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20207              		.loc 1 1237 47 is_stmt 1 view .LVU6984
 20208              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20209              		.loc 1 1237 48 is_stmt 0 view .LVU6985
 20210 0a67 498D7506 		lea	rsi, 6[r13]	# i,
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20211              		.loc 1 1237 29 is_stmt 1 view .LVU6986
 20212 0a6b 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20213              		.loc 1 1238 13 view .LVU6987
 20214 0a6f 4C89F7   		mov	rdi, r14	#, tuning_result
 20215 0a72 E8000000 		call	tune_benchmark	#
 20215      00
 20216              	.LVL1388:
1239:sieve_extend.c ****         }
 20217              		.loc 1 1239 13 view .LVU6988
 20218              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20219              		.loc 1 1239 41 is_stmt 0 view .LVU6989
 20220 0a77 488B0C24 		mov	rcx, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20221              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccW0oq2B.s 			page 539


1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20222              		.loc 1 1237 48 view .LVU6990
 20223 0a7b 498D7507 		lea	rsi, 7[r13]	# i,
 20224              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20225              		.loc 1 1239 41 view .LVU6991
 20226 0a7f 4C0121   		add	QWORD PTR [rcx], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20227              		.loc 1 1237 47 is_stmt 1 view .LVU6992
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20228              		.loc 1 1237 29 view .LVU6993
 20229 0a82 4C8D8D68 		lea	r9, 616[rbp]	# ivtmp.746,
 20229      020000
 20230              	# sieve_extend.c:1238:             tune_benchmark(tuning_result, i);
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20231              		.loc 1 1238 13 is_stmt 0 view .LVU6994
 20232 0a89 4C89F7   		mov	rdi, r14	#, tuning_result
 20233 0a8c 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, ivtmp.746
1238:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20234              		.loc 1 1238 13 is_stmt 1 view .LVU6995
 20235 0a90 E8000000 		call	tune_benchmark	#
 20235      00
 20236              	.LVL1389:
1239:sieve_extend.c ****         }
 20237              		.loc 1 1239 13 view .LVU6996
 20238              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20239              		.loc 1 1239 41 is_stmt 0 view .LVU6997
 20240 0a95 488B3424 		mov	rsi, QWORD PTR [rsp]	# ivtmp.746, %sfp
 20241              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20242              		.loc 1 1237 48 view .LVU6998
 20243 0a99 4983C508 		add	r13, 8	# i,
 20244              	# sieve_extend.c:1239:             tuning_result[i].sample_max += sample_max;
1239:sieve_extend.c ****         }
 20245              		.loc 1 1239 41 view .LVU6999
 20246 0a9d 4C0126   		add	QWORD PTR [rsi], r12	# MEM[base: _77, offset: 0B], sample_max
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20247              		.loc 1 1237 47 is_stmt 1 view .LVU7000
 20248              	.LVL1390:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20249              		.loc 1 1237 29 view .LVU7001
 20250 0aa0 4881C5C0 		add	rbp, 704	# ivtmp.746,
 20250      020000
 20251              	# sieve_extend.c:1237:         for (counter_t i=0; i<tuning_results; i++) {
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20252              		.loc 1 1237 9 is_stmt 0 view .LVU7002
 20253 0aa7 4D39EF   		cmp	r15, r13	# tuning_results, i
 20254 0aaa 0F850EFF 		jne	.L1860	#,
 20254      FFFF
 20255 0ab0 E9EFFDFF 		jmp	.L1863	#
 20255      FF
 20256              	.LVL1391:
 20257              	.L1859:
1237:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20258              		.loc 1 1237 9 view .LVU7003
 20259              	.LBE1041:
GAS LISTING /tmp/ccW0oq2B.s 			page 540


1218:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 20260              		.loc 1 1218 13 is_stmt 1 view .LVU7004
1219:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 20261              		.loc 1 1219 13 view .LVU7005
 20262              	.LBB1042:
 20263              	.LBI1042:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20264              		.loc 3 105 1 view .LVU7006
 20265              	.LBB1043:
 20266              		.loc 3 107 3 view .LVU7007
 20267              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20268              		.loc 3 107 10 is_stmt 0 view .LVU7008
 20269 0ab5 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# tuning_result_229->elapsed_time, tuning_result_229->elapsed_time
 20269      4648
 20270 0abb 498B4E08 		mov	rcx, QWORD PTR 8[r14]	# tuning_result_229->blocksize_bits, tuning_result_229->blocksize_bits
 20271 0abf 41FF7630 		push	QWORD PTR 48[r14]	# tuning_result_229->sample_max
 20272              		.cfi_def_cfa_offset 248
 20273 0ac3 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, tuning_result_229->avg
 20273      5650
 20274 0ac9 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, tuning_result_229->sample_duration
 20274      4E38
 20275 0acf 41FF7640 		push	QWORD PTR 64[r14]	# tuning_result_229->passes
 20276              		.cfi_def_cfa_offset 256
 20277 0ad3 4889DA   		mov	rdx, rbx	#, step
 20278 0ad6 488D3500 		lea	rsi, .LC50[rip]	#,
 20278      000000
 20279 0add 41FF7628 		push	QWORD PTR 40[r14]	# tuning_result_229->mediumstep_faster
 20280              		.cfi_def_cfa_offset 264
 20281 0ae1 BF010000 		mov	edi, 1	#,
 20281      00
 20282 0ae6 B8030000 		mov	eax, 3	#,
 20282      00
 20283 0aeb 41FF7620 		push	QWORD PTR 32[r14]	# tuning_result_229->smallstep_faster
 20284              		.cfi_def_cfa_offset 272
 20285 0aef 4D8B4E18 		mov	r9, QWORD PTR 24[r14]	#, tuning_result_229->free_bits
 20286 0af3 4D8B4610 		mov	r8, QWORD PTR 16[r14]	#, tuning_result_229->blocksize_kb
 20287 0af7 E8000000 		call	__printf_chk@PLT	#
 20287      00
 20288              	.LVL1392:
 20289              		.loc 3 107 10 view .LVU7009
 20290              	.LBE1043:
 20291              	.LBE1042:
1224:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20292              		.loc 1 1224 13 is_stmt 1 view .LVU7010
 20293              	# sieve_extend.c:1224:             if (option_verboselevel >= 3) {
1224:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20294              		.loc 1 1224 16 is_stmt 0 view .LVU7011
 20295 0afc 4883C420 		add	rsp, 32	#,
 20296              		.cfi_def_cfa_offset 240
 20297 0b00 837C2450 		cmp	DWORD PTR 80[rsp], 2	# %sfp,
 20297      02
 20298 0b05 0F84C8FD 		je	.L1861	#,
 20298      FFFF
 20299 0b0b 498D6E08 		lea	rbp, 8[r14]	# ivtmp.752,
 20300              	.LBB1044:
 20301              	# sieve_extend.c:1225:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
GAS LISTING /tmp/ccW0oq2B.s 			page 541


 20302              		.loc 1 1225 32 view .LVU7012
 20303 0b0f 4531ED   		xor	r13d, r13d	# tuning_result_index
 20304              	.L1862:
 20305              	.LVL1393:
1226:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 20306              		.loc 1 1226 21 is_stmt 1 view .LVU7013
 20307              	.LBB1036:
 20308              	.LBI1036:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20309              		.loc 3 105 1 view .LVU7014
 20310              	.LBB1037:
 20311              		.loc 3 107 3 view .LVU7015
 20312              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20313              		.loc 3 107 10 is_stmt 0 view .LVU7016
 20314 0b12 C5FB1045 		vmovsd	xmm0, QWORD PTR 64[rbp]	# MEM[base: _60, offset: 64B], MEM[base: _60, offset: 64B]
 20314      40
 20315 0b17 488B4D08 		mov	rcx, QWORD PTR 8[rbp]	# MEM[base: _60, offset: 8B], MEM[base: _60, offset: 8B]
 20316 0b1b 56       		push	rsi	#
 20317              		.cfi_def_cfa_offset 248
 20318 0b1c BF010000 		mov	edi, 1	#,
 20318      00
 20319 0b21 488D3500 		lea	rsi, .LC47[rip]	#,
 20319      000000
 20320 0b28 FF7528   		push	QWORD PTR 40[rbp]	# MEM[base: _60, offset: 40B]
 20321              		.cfi_def_cfa_offset 256
 20322 0b2b C5FB1055 		vmovsd	xmm2, QWORD PTR 72[rbp]	#, MEM[base: _60, offset: 72B]
 20322      48
 20323 0b30 C5FB104D 		vmovsd	xmm1, QWORD PTR 48[rbp]	#, MEM[base: _60, offset: 48B]
 20323      30
 20324 0b35 FF7538   		push	QWORD PTR 56[rbp]	# MEM[base: _60, offset: 56B]
 20325              		.cfi_def_cfa_offset 264
 20326 0b38 B8030000 		mov	eax, 3	#,
 20326      00
 20327              	.LBE1037:
 20328              	.LBE1036:
 20329              	# sieve_extend.c:1225:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20330              		.loc 1 1225 118 view .LVU7017
 20331 0b3d 49FFC5   		inc	r13	# tuning_result_index
 20332              	.LVL1394:
 20333              	.LBB1039:
 20334              	.LBB1038:
 20335              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20336              		.loc 3 107 10 view .LVU7018
 20337 0b40 FF7520   		push	QWORD PTR 32[rbp]	# MEM[base: _60, offset: 32B]
 20338              		.cfi_def_cfa_offset 272
 20339 0b43 4883C558 		add	rbp, 88	# ivtmp.752,
 20340 0b47 4C8B45B8 		mov	r8, QWORD PTR -72[rbp]	#, MEM[base: _60, offset: 16B]
 20341 0b4b 4C8B4DC0 		mov	r9, QWORD PTR -64[rbp]	#, MEM[base: _60, offset: 24B]
 20342 0b4f 488B55A8 		mov	rdx, QWORD PTR -88[rbp]	#, MEM[base: _60, offset: 0B]
 20343 0b53 E8000000 		call	__printf_chk@PLT	#
 20343      00
 20344              	.LVL1395:
 20345              		.loc 3 107 10 view .LVU7019
 20346              	.LBE1038:
 20347              	.LBE1039:
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
GAS LISTING /tmp/ccW0oq2B.s 			page 542


 20348              		.loc 1 1225 99 is_stmt 1 view .LVU7020
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20349              		.loc 1 1225 55 view .LVU7021
 20350              	# sieve_extend.c:1225:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20351              		.loc 1 1225 75 is_stmt 0 view .LVU7022
 20352 0b58 4883C420 		add	rsp, 32	#,
 20353              		.cfi_def_cfa_offset 240
 20354 0b5c 41B80A00 		mov	r8d, 10	# tmp373,
 20354      0000
 20355 0b62 4983FF0A 		cmp	r15, 10	# tuning_results,
 20356 0b66 4D0F46C7 		cmovbe	r8, r15	# tuning_results,, tmp373
 20357              	# sieve_extend.c:1225:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20358              		.loc 1 1225 17 view .LVU7023
 20359 0b6a 4D39C5   		cmp	r13, r8	# tuning_result_index, tmp373
 20360 0b6d 72A3     		jb	.L1862	#,
 20361 0b6f E95FFDFF 		jmp	.L1861	#
 20361      FF
 20362              	.LVL1396:
 20363              	.L1953:
1225:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 20364              		.loc 1 1225 17 view .LVU7024
 20365              	.LBE1044:
 20366              	.LBE1015:
 20367              	.LBE1014:
 20368              	.LBE1013:
1327:sieve_extend.c ****     }
 20369              		.loc 1 1327 39 is_stmt 1 view .LVU7025
 20370              	.LBB1059:
 20371              	.LBI1059:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20372              		.loc 3 105 1 view .LVU7026
 20373              	.LBB1060:
 20374              		.loc 3 107 3 view .LVU7027
 20375              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20376              		.loc 3 107 10 is_stmt 0 view .LVU7028
 20377 0b74 488D3D00 		lea	rdi, .LC44[rip]	#,
 20377      000000
 20378 0b7b E8000000 		call	puts@PLT	#
 20378      00
 20379              	.LVL1397:
 20380              		.loc 3 107 10 view .LVU7029
 20381              	.LBE1060:
 20382              	.LBE1059:
1330:sieve_extend.c ****     if (option_tunelevel) {
 20383              		.loc 1 1330 5 is_stmt 1 view .LVU7030
1331:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20384              		.loc 1 1331 5 view .LVU7031
 20385              	# sieve_extend.c:1331:     if (option_tunelevel) {
1331:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20386              		.loc 1 1331 9 is_stmt 0 view .LVU7032
 20387 0b80 448B4424 		mov	r8d, DWORD PTR 108[rsp]	# option_tunelevel.40_62, option_tunelevel
 20387      6C
 20388              	# sieve_extend.c:1330:     counter_t best_blocksize_bits = default_blocksize;
1330:sieve_extend.c ****     if (option_tunelevel) {
 20389              		.loc 1 1330 15 view .LVU7033
GAS LISTING /tmp/ccW0oq2B.s 			page 543


 20390 0b85 41BF00FC 		mov	r15d, 261120	# best_result$blocksize_bits,
 20390      0300
 20391              	.LVL1398:
 20392              	# sieve_extend.c:1331:     if (option_tunelevel) {
1331:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20393              		.loc 1 1331 8 view .LVU7034
 20394 0b8b 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 20395 0b8e 0F855A01 		jne	.L1960	#,
 20395      0000
 20396              	.LVL1399:
 20397              	.L1842:
 20398              	.LBB1061:
1340:sieve_extend.c ****         counter_t passes = 0;
 20399              		.loc 1 1340 9 is_stmt 1 view .LVU7035
 20400              	# sieve_extend.c:1340:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1340:sieve_extend.c ****         counter_t passes = 0;
 20401              		.loc 1 1340 12 is_stmt 0 view .LVU7036
 20402 0b94 837C2468 		cmp	DWORD PTR 104[rsp], 0	# option_verboselevel,
 20402      00
 20403 0b99 0F8EF1F7 		jle	.L1867	#,
 20403      FFFF
1340:sieve_extend.c ****         counter_t passes = 0;
 20404              		.loc 1 1340 39 is_stmt 1 discriminator 1 view .LVU7037
 20405              	.LVL1400:
 20406              	.LBB999:
 20407              	.LBI999:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20408              		.loc 3 105 1 discriminator 1 view .LVU7038
 20409              	.LBB1000:
 20410              		.loc 3 107 3 discriminator 1 view .LVU7039
 20411              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20412              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7040
 20413 0b9f 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 20413      000000
 20414 0ba6 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 20414      000000
 20415 0bad 4C89FA   		mov	rdx, r15	#, best_result$blocksize_bits
 20416 0bb0 488D3500 		lea	rsi, .LC52[rip]	#,
 20416      000000
 20417 0bb7 BF010000 		mov	edi, 1	#,
 20417      00
 20418 0bbc 31C0     		xor	eax, eax	#
 20419 0bbe E8000000 		call	__printf_chk@PLT	#
 20419      00
 20420              	.LVL1401:
 20421 0bc3 E9C8F7FF 		jmp	.L1867	#
 20421      FF
 20422              	.LVL1402:
 20423              	.L1959:
 20424              		.loc 3 107 10 discriminator 1 view .LVU7041
 20425              	.LBE1000:
 20426              	.LBE999:
 20427              	.LBE1061:
 20428              	.LBB1062:
 20429              	.LBB1056:
 20430              	.LBB1053:
1243:sieve_extend.c ****     if (option_verboselevel >= 1) {
GAS LISTING /tmp/ccW0oq2B.s 			page 544


 20431              		.loc 1 1243 5 is_stmt 1 view .LVU7042
 20432              	# sieve_extend.c:1244:     if (option_verboselevel >= 1) {
1244:sieve_extend.c ****         tuning_result_index = 0;
 20433              		.loc 1 1244 8 is_stmt 0 view .LVU7043
 20434 0bc8 837C2450 		cmp	DWORD PTR 80[rsp], 0	# %sfp,
 20434      00
 20435              	# sieve_extend.c:1243:     tuning_result_type best_result = tuning_result[0];
1243:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20436              		.loc 1 1243 24 view .LVU7044
 20437 0bcd 4D8B7E08 		mov	r15, QWORD PTR 8[r14]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 20438              	.LVL1403:
1243:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20439              		.loc 1 1243 24 view .LVU7045
 20440 0bd1 498B6E20 		mov	rbp, QWORD PTR 32[r14]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 20441 0bd5 4D8B6E28 		mov	r13, QWORD PTR 40[r14]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
1244:sieve_extend.c ****         tuning_result_index = 0;
 20442              		.loc 1 1244 5 is_stmt 1 view .LVU7046
 20443              	# sieve_extend.c:1244:     if (option_verboselevel >= 1) {
1244:sieve_extend.c ****         tuning_result_index = 0;
 20444              		.loc 1 1244 8 is_stmt 0 view .LVU7047
 20445 0bd9 7E40     		jle	.L1865	#,
1245:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 20446              		.loc 1 1245 9 is_stmt 1 view .LVU7048
 20447              	.LVL1404:
1246:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 20448              		.loc 1 1246 9 view .LVU7049
 20449              	.LBB1045:
 20450              	.LBI1045:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20451              		.loc 3 105 1 view .LVU7050
 20452              	.LBB1046:
 20453              		.loc 3 107 3 view .LVU7051
 20454              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20455              		.loc 3 107 10 is_stmt 0 view .LVU7052
 20456 0bdb 498B5610 		mov	rdx, QWORD PTR 16[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 16B], MEM[(struc
 20457 0bdf C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 72B], MEM[(s
 20457      4648
 20458 0be5 498B4E18 		mov	rcx, QWORD PTR 24[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 24B], MEM[(struc
 20459 0be9 41FF7630 		push	QWORD PTR 48[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 48B]
 20460              		.cfi_def_cfa_offset 248
 20461              	.LVL1405:
 20462              		.loc 3 107 10 view .LVU7053
 20463 0bed 4D89E9   		mov	r9, r13	#, best_result$mediumstep_faster
 20464 0bf0 4989E8   		mov	r8, rbp	#, best_result$smallstep_faster
 20465 0bf3 41FF7640 		push	QWORD PTR 64[r14]	# MEM[(struct tuning_result_type *)tuning_result_229 + 64B]
 20466              		.cfi_def_cfa_offset 256
 20467 0bf7 488D3500 		lea	rsi, .LC51[rip]	#,
 20467      000000
 20468 0bfe BF010000 		mov	edi, 1	#,
 20468      00
 20469 0c03 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 80B]
 20469      5650
 20470 0c09 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r14]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 56B]
 20470      4E38
 20471 0c0f B8030000 		mov	eax, 3	#,
 20471      00
 20472 0c14 E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccW0oq2B.s 			page 545


 20472      00
 20473              	.LVL1406:
 20474              		.loc 3 107 10 view .LVU7054
 20475 0c19 58       		pop	rax	#
 20476              		.cfi_def_cfa_offset 248
 20477 0c1a 5A       		pop	rdx	#
 20478              		.cfi_def_cfa_offset 240
 20479              	.LVL1407:
 20480              	.L1865:
 20481              		.loc 3 107 10 view .LVU7055
 20482              	.LBE1046:
 20483              	.LBE1045:
1253:sieve_extend.c ****     return best_result;
 20484              		.loc 1 1253 5 is_stmt 1 view .LVU7056
 20485 0c1b 4C89F7   		mov	rdi, r14	#, tuning_result
 20486 0c1e E8000000 		call	free@PLT	#
 20486      00
 20487              	.LVL1408:
1254:sieve_extend.c **** }
 20488              		.loc 1 1254 5 view .LVU7057
1254:sieve_extend.c **** }
 20489              		.loc 1 1254 5 is_stmt 0 view .LVU7058
 20490              	.LBE1053:
 20491              	.LBE1056:
1333:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20492              		.loc 1 1333 9 is_stmt 1 view .LVU7059
 20493              	# sieve_extend.c:1333:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1333:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20494              		.loc 1 1333 33 is_stmt 0 view .LVU7060
 20495 0c23 48892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rbp	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 20495      000000
1334:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20496              		.loc 1 1334 9 is_stmt 1 view .LVU7061
 20497              	# sieve_extend.c:1334:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1334:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20498              		.loc 1 1334 34 is_stmt 0 view .LVU7062
 20499 0c2a 4C892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], r13	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 20499      000000
1335:sieve_extend.c ****     }
 20500              		.loc 1 1335 9 is_stmt 1 view .LVU7063
 20501              	.LVL1409:
1335:sieve_extend.c ****     }
 20502              		.loc 1 1335 9 is_stmt 0 view .LVU7064
 20503              	.LBE1062:
1338:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 20504              		.loc 1 1338 5 is_stmt 1 view .LVU7065
1339:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20505              		.loc 1 1339 5 view .LVU7066
 20506              	# sieve_extend.c:1339:     if (best_blocksize_bits > 0) {
1339:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20507              		.loc 1 1339 8 is_stmt 0 view .LVU7067
 20508 0c31 4D85FF   		test	r15, r15	# best_result$blocksize_bits
 20509 0c34 0F84A7F8 		je	.L1866	#,
 20509      FFFF
 20510 0c3a E955FFFF 		jmp	.L1842	#
 20510      FF
 20511              	.LVL1410:
GAS LISTING /tmp/ccW0oq2B.s 			page 546


 20512              	.L1875:
1339:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20513              		.loc 1 1339 8 view .LVU7068
 20514 0c3f 488D3D00 		lea	rdi, CSWTCH.111[rip]	# tmp321,
 20514      000000
 20515 0c46 4C8D0D00 		lea	r9, CSWTCH.112[rip]	# tmp323,
 20515      000000
 20516 0c4d 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.111
 20517 0c51 4F8B2CC1 		mov	r13, QWORD PTR [r9+r8*8]	# freebits_steps, CSWTCH.112
 20518 0c55 488D1D00 		lea	rbx, CSWTCH.113[rip]	# tmp325,
 20518      000000
 20519 0c5c C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.113
 20519      3CC3
 20520 0c62 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, smallstep_faster_steps
 20520      58
 20521 0c67 4C896C24 		mov	QWORD PTR 56[rsp], r13	# %sfp, freebits_steps
 20521      38
 20522              	.LBB1063:
 20523              	# sieve_extend.c:1266:     for (int arg=1; arg < argc; arg++) {
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20524              		.loc 1 1266 14 view .LVU7069
 20525 0c6c 48C74424 		mov	QWORD PTR 48[rsp], 4	# %sfp,
 20525      30040000 
 20525      00
 20526 0c75 C5FB117C 		vmovsd	QWORD PTR 64[rsp], xmm7	# %sfp, sample_duration
 20526      2440
 20527              	.L1843:
 20528              	.LVL1411:
1266:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20529              		.loc 1 1266 14 view .LVU7070
 20530              	.LBE1063:
 20531              	.LBB1064:
 20532              	.LBB1057:
 20533              	.LBB1054:
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20534              		.loc 1 1164 5 is_stmt 1 view .LVU7071
 20535              	# sieve_extend.c:1164:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20536              		.loc 1 1164 8 is_stmt 0 view .LVU7072
 20537 0c7b 448B7424 		mov	r14d, DWORD PTR 80[rsp]	# option_verboselevel.41_63, %sfp
 20537      50
 20538              	.LVL1412:
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20539              		.loc 1 1164 8 view .LVU7073
 20540 0c80 4585F6   		test	r14d, r14d	# option_verboselevel.41_63
 20541 0c83 0F8EB2F9 		jle	.L1845	#,
 20541      FFFF
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20542              		.loc 1 1164 35 is_stmt 1 view .LVU7074
 20543              	.LVL1413:
 20544              	.LBB1047:
 20545              	.LBI1047:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20546              		.loc 3 105 1 view .LVU7075
 20547              	.LBB1048:
 20548              		.loc 3 107 3 view .LVU7076
 20549              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccW0oq2B.s 			page 547


 20550              		.loc 3 107 10 is_stmt 0 view .LVU7077
 20551 0c89 31C0     		xor	eax, eax	#
 20552 0c8b 488D3500 		lea	rsi, .LC45[rip]	#,
 20552      000000
 20553 0c92 BF010000 		mov	edi, 1	#,
 20553      00
 20554              	.LBE1048:
 20555              	.LBE1047:
 20556              	# sieve_extend.c:1164:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20557              		.loc 1 1164 59 view .LVU7078
 20558 0c97 4489F3   		mov	ebx, r14d	# option_verboselevel.41_63, option_verboselevel.41_63
 20559              	.LBB1050:
 20560              	.LBB1049:
 20561              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20562              		.loc 3 107 10 view .LVU7079
 20563 0c9a E8000000 		call	__printf_chk@PLT	#
 20563      00
 20564              	.LVL1414:
 20565              		.loc 3 107 10 view .LVU7080
 20566              	.LBE1049:
 20567              	.LBE1050:
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20568              		.loc 1 1164 56 is_stmt 1 view .LVU7081
 20569              	# sieve_extend.c:1164:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20570              		.loc 1 1164 59 is_stmt 0 view .LVU7082
 20571 0c9f FFCB     		dec	ebx	# option_verboselevel.41_63
 20572 0ca1 0F8494F9 		je	.L1845	#,
 20572      FFFF
1164:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20573              		.loc 1 1164 86 is_stmt 1 view .LVU7083
 20574              	.LVL1415:
 20575              	.LBB1051:
 20576              	.LBI1051:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20577              		.loc 3 105 1 view .LVU7084
 20578              	.LBB1052:
 20579              		.loc 3 107 3 view .LVU7085
 20580              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20581              		.loc 3 107 10 is_stmt 0 view .LVU7086
 20582 0ca7 BF0A0000 		mov	edi, 10	#,
 20582      00
 20583 0cac E8000000 		call	putchar@PLT	#
 20583      00
 20584              	.LVL1416:
 20585 0cb1 E985F9FF 		jmp	.L1845	#
 20585      FF
 20586              	.LVL1417:
 20587              	.L1872:
 20588              		.loc 3 107 10 view .LVU7087
 20589              	.LBE1052:
 20590              	.LBE1051:
 20591              	.LBE1054:
 20592              	.LBE1057:
 20593              	.LBE1064:
 20594              	.LBB1065:
GAS LISTING /tmp/ccW0oq2B.s 			page 548


 20595              	# sieve_extend.c:1354:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1354:sieve_extend.c ****     }
 20596              		.loc 1 1354 39 discriminator 1 view .LVU7088
 20597 0cb6 4889D0   		mov	rax, rdx	# tmp400, tmp397
 20598 0cb9 48D1E8   		shr	rax	# tmp400
 20599 0cbc 83E201   		and	edx, 1	# tmp401,
 20600 0cbf 4809D0   		or	rax, rdx	# tmp459, tmp401
 20601 0cc2 C4E1FB2A 		vcvtsi2sd	xmm5, xmm0, rax	# tmp488, tmp480, tmp459
 20601      E8
 20602 0cc7 C55358C5 		vaddsd	xmm8, xmm5, xmm5	# tmp398, tmp399, tmp399
 20603 0ccb E902F9FF 		jmp	.L1873	#
 20603      FF
 20604              	.L1870:
1354:sieve_extend.c ****     }
 20605              		.loc 1 1354 39 discriminator 1 view .LVU7089
 20606 0cd0 4C89F1   		mov	rcx, r14	# tmp394, passes
 20607 0cd3 4D89F1   		mov	r9, r14	# tmp395, passes
 20608 0cd6 48D1E9   		shr	rcx	# tmp394
 20609 0cd9 4183E101 		and	r9d, 1	# tmp395,
 20610 0cdd 4C09C9   		or	rcx, r9	# tmp458, tmp395
 20611 0ce0 C4E1FB2A 		vcvtsi2sd	xmm4, xmm0, rcx	# tmp486, tmp480, tmp458
 20611      E1
 20612 0ce5 C5DB58D4 		vaddsd	xmm2, xmm4, xmm4	# tmp392, tmp393, tmp393
 20613 0ce9 E9CEF8FF 		jmp	.L1871	#
 20613      FF
 20614              	.LVL1418:
 20615              	.L1960:
1354:sieve_extend.c ****     }
 20616              		.loc 1 1354 39 discriminator 1 view .LVU7090
 20617              	.LBE1065:
 20618              	.LBB1066:
1332:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20619              		.loc 1 1332 9 is_stmt 1 view .LVU7091
 20620              	# sieve_extend.c:1332:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1332:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20621              		.loc 1 1332 44 is_stmt 0 view .LVU7092
 20622 0cee 8B542468 		mov	edx, DWORD PTR 104[rsp]	# option_verboselevel.41_63, option_verboselevel
 20623 0cf2 488B7424 		mov	rsi, QWORD PTR 112[rsp]	# option_maxFactor.42_64, option_maxFactor
 20623      70
 20624 0cf7 41FFC8   		dec	r8d	#
 20625 0cfa 89542450 		mov	DWORD PTR 80[rsp], edx	# %sfp, option_verboselevel.41_63
 20626 0cfe 48897424 		mov	QWORD PTR 72[rsp], rsi	# %sfp, option_maxFactor.42_64
 20626      48
 20627              	.LVL1419:
 20628              	.LBB1058:
1126:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20629              		.loc 1 1126 27 is_stmt 1 view .LVU7093
 20630              	.LBB1055:
1127:sieve_extend.c **** 
 20631              		.loc 1 1127 5 view .LVU7094
1129:sieve_extend.c ****     best_blocksize_bits = 0;
 20632              		.loc 1 1129 5 view .LVU7095
1130:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20633              		.loc 1 1130 5 view .LVU7096
1131:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20634              		.loc 1 1131 5 view .LVU7097
1132:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
GAS LISTING /tmp/ccW0oq2B.s 			page 549


 20635              		.loc 1 1132 5 view .LVU7098
1133:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20636              		.loc 1 1133 5 view .LVU7099
1134:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20637              		.loc 1 1134 5 view .LVU7100
1135:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20638              		.loc 1 1135 5 view .LVU7101
1136:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20639              		.loc 1 1136 5 view .LVU7102
1137:sieve_extend.c **** 
 20640              		.loc 1 1137 5 view .LVU7103
1140:sieve_extend.c ****         case 1:
 20641              		.loc 1 1140 5 view .LVU7104
 20642 0d03 4183F802 		cmp	r8d, 2	# _209,
 20643 0d07 0F8632FF 		jbe	.L1875	#,
 20643      FFFF
 20644 0d0d C5FB1005 		vmovsd	xmm0, QWORD PTR .LC22[rip]	# sample_duration,
 20644      00000000 
 20645 0d15 48C74424 		mov	QWORD PTR 48[rsp], 5	# %sfp,
 20645      30050000 
 20645      00
 20646 0d1e 48C74424 		mov	QWORD PTR 56[rsp], 128	# %sfp,
 20646      38800000 
 20646      00
 20647 0d27 48C74424 		mov	QWORD PTR 88[rsp], 4	# %sfp,
 20647      58040000 
 20647      00
 20648 0d30 C5FB1144 		vmovsd	QWORD PTR 64[rsp], xmm0	# %sfp, sample_duration
 20648      2440
 20649 0d36 E940FFFF 		jmp	.L1843	#
 20649      FF
 20650              	.LVL1420:
 20651              	.L1946:
1140:sieve_extend.c ****         case 1:
 20652              		.loc 1 1140 5 is_stmt 0 view .LVU7105
 20653              	.LBE1055:
 20654              	.LBE1058:
 20655              	.LBE1066:
 20656              	.LBB1067:
1269:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20657              		.loc 1 1269 34 is_stmt 1 discriminator 1 view .LVU7106
 20658              	.LBB938:
 20659              	.LBI938:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20660              		.loc 3 98 1 discriminator 1 view .LVU7107
 20661              	.LBB939:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20662              		.loc 3 100 3 discriminator 1 view .LVU7108
 20663              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20664              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7109
 20665 0d3b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20665      000000
 20666 0d42 BA1B0000 		mov	edx, 27	#,
 20666      00
 20667 0d47 BE010000 		mov	esi, 1	#,
 20667      00
GAS LISTING /tmp/ccW0oq2B.s 			page 550


 20668 0d4c 488D3D00 		lea	rdi, .LC26[rip]	#,
 20668      000000
 20669 0d53 E8000000 		call	fwrite@PLT	#
 20669      00
 20670              	.LVL1421:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20671              		.loc 3 100 10 discriminator 1 view .LVU7110
 20672              	.LBE939:
 20673              	.LBE938:
1269:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20674              		.loc 1 1269 83 is_stmt 1 discriminator 1 view .LVU7111
 20675 0d58 E9F3F7FF 		jmp	.L1944	#
 20675      FF
 20676              	.L1826:
1279:sieve_extend.c ****             }
 20677              		.loc 1 1279 17 view .LVU7112
 20678              	.LVL1422:
 20679              	.LBB940:
 20680              	.LBI935:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20681              		.loc 3 98 1 view .LVU7113
 20682              	.LBB937:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20683              		.loc 3 100 3 view .LVU7114
 20684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20685              		.loc 3 100 10 is_stmt 0 view .LVU7115
 20686 0d5d 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 20687 0d60 488D1500 		lea	rdx, .LC33[rip]	#,
 20687      000000
 20688 0d67 E9D1F7FF 		jmp	.L1943	#
 20688      FF
 20689              	.LVL1423:
 20690              	.L1830:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20691              		.loc 3 100 10 view .LVU7116
 20692              	.LBE937:
 20693              	.LBE940:
1286:sieve_extend.c ****             }
 20694              		.loc 1 1286 17 is_stmt 1 view .LVU7117
 20695              	.LBB941:
 20696              	.LBI941:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20697              		.loc 3 98 1 view .LVU7118
 20698              	.LBB942:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20699              		.loc 3 100 3 view .LVU7119
 20700              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20701              		.loc 3 100 10 is_stmt 0 view .LVU7120
 20702 0d6c 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 20703 0d6f 488D1500 		lea	rdx, .LC38[rip]	#,
 20703      000000
 20704 0d76 E9C2F7FF 		jmp	.L1943	#
 20704      FF
 20705              	.LVL1424:
 20706              	.L1949:
GAS LISTING /tmp/ccW0oq2B.s 			page 551


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20707              		.loc 3 100 10 view .LVU7121
 20708              	.LBE942:
 20709              	.LBE941:
1277:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20710              		.loc 1 1277 34 is_stmt 1 discriminator 1 view .LVU7122
 20711              	.LBB943:
 20712              	.LBI943:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20713              		.loc 3 98 1 discriminator 1 view .LVU7123
 20714              	.LBB944:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20715              		.loc 3 100 3 discriminator 1 view .LVU7124
 20716              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20717              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7125
 20718 0d7b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20718      000000
 20719 0d82 488D3D00 		lea	rdi, .LC32[rip]	#,
 20719      000000
 20720 0d89 BA180000 		mov	edx, 24	#,
 20720      00
 20721 0d8e BE010000 		mov	esi, 1	#,
 20721      00
 20722 0d93 E8000000 		call	fwrite@PLT	#
 20722      00
 20723              	.LVL1425:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20724              		.loc 3 100 10 discriminator 1 view .LVU7126
 20725              	.LBE944:
 20726              	.LBE943:
1277:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20727              		.loc 1 1277 80 is_stmt 1 discriminator 1 view .LVU7127
 20728 0d98 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20729 0d9c E8000000 		call	usage	#
 20729      00
 20730              	.LVL1426:
 20731              	.L1957:
1277:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20732              		.loc 1 1277 80 is_stmt 0 discriminator 1 view .LVU7128
 20733              	.LBE1067:
 20734              	# sieve_extend.c:1364: }
 20735              		.loc 1 1364 1 view .LVU7129
 20736 0da1 E8000000 		call	__stack_chk_fail@PLT	#
 20736      00
 20737              	.LVL1427:
 20738              	.L1952:
 20739              	.LBB1068:
1284:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20740              		.loc 1 1284 34 is_stmt 1 discriminator 1 view .LVU7130
 20741              	.LBB945:
 20742              	.LBI945:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20743              		.loc 3 98 1 discriminator 1 view .LVU7131
 20744              	.LBB946:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20745              		.loc 3 100 3 discriminator 1 view .LVU7132
GAS LISTING /tmp/ccW0oq2B.s 			page 552


 20746              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20747              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7133
 20748 0da6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20748      000000
 20749 0dad 488D3D00 		lea	rdi, .LC36[rip]	#,
 20749      000000
 20750 0db4 BA1A0000 		mov	edx, 26	#,
 20750      00
 20751 0db9 BE010000 		mov	esi, 1	#,
 20751      00
 20752 0dbe E8000000 		call	fwrite@PLT	#
 20752      00
 20753              	.LVL1428:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20754              		.loc 3 100 10 discriminator 1 view .LVU7134
 20755              	.LBE946:
 20756              	.LBE945:
1284:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20757              		.loc 1 1284 82 is_stmt 1 discriminator 1 view .LVU7135
 20758 0dc3 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20759 0dc7 E8000000 		call	usage	#
 20759      00
 20760              	.LVL1429:
 20761              	.LBE1068:
 20762              		.cfi_endproc
 20763              	.LFE86:
 20765              		.section	.rodata
 20766              		.align 16
 20769              	CSWTCH.113:
 20770 0000 9A999999 		.long	2576980378
 20771 0004 9999B93F 		.long	1069128089
 20772 0008 9A999999 		.long	2576980378
 20773 000c 9999C93F 		.long	1070176665
 20774 0010 9A999999 		.long	2576980378
 20775 0014 9999D93F 		.long	1071225241
 20776 0018 00000000 		.align 16
 20776      00000000 
 20779              	CSWTCH.112:
 20780 0020 00080000 		.quad	2048
 20780      00000000 
 20781 0028 00040000 		.quad	1024
 20781      00000000 
 20782 0030 40000000 		.quad	64
 20782      00000000 
 20783 0038 00000000 		.align 16
 20783      00000000 
 20786              	CSWTCH.111:
 20787 0040 10000000 		.quad	16
 20787      00000000 
 20788 0048 08000000 		.quad	8
 20788      00000000 
 20789 0050 04000000 		.quad	4
 20789      00000000 
 20790              		.globl	debug_hitpoint
 20791              		.bss
 20792              		.align 32
GAS LISTING /tmp/ccW0oq2B.s 			page 553


 20795              	debug_hitpoint:
 20796 0000 00000000 		.zero	40
 20796      00000000 
 20796      00000000 
 20796      00000000 
 20796      00000000 
 20797              		.globl	global_MEDIUMSTEP_FASTER
 20798              		.data
 20799              		.align 8
 20802              	global_MEDIUMSTEP_FASTER:
 20803 0000 40000000 		.quad	64
 20803      00000000 
 20804              		.globl	global_SMALLSTEP_FASTER
 20805              		.align 8
 20808              	global_SMALLSTEP_FASTER:
 20809 0008 10000000 		.quad	16
 20809      00000000 
 20810              		.section	.rodata.cst8,"aM",@progbits,8
 20811              		.align 8
 20812              	.LC3:
 20813 0000 00000000 		.long	0
 20814 0004 0000F87F 		.long	2146959360
 20815              		.align 8
 20816              	.LC4:
 20817 0008 95D626E8 		.long	3894859413
 20818 000c 0B2E113E 		.long	1041313291
 20819              		.align 8
 20820              	.LC22:
 20821 0010 9A999999 		.long	2576980378
 20822 0014 9999B93F 		.long	1069128089
 20823              		.align 8
 20824              	.LC53:
 20825 0018 00000000 		.long	0
 20826 001c 00001440 		.long	1075052544
 20827              		.text
 20828              	.Letext0:
 20829              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 20830              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 20831              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 20832              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 20833              		.file 8 "/usr/include/stdio.h"
 20834              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 20835              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 20836              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 20837              		.file 12 "/usr/include/stdint.h"
 20838              		.file 13 "/usr/include/time.h"
 20839              		.file 14 "/usr/include/math.h"
 20840              		.file 15 "/usr/include/stdlib.h"
 20841              		.file 16 "<built-in>"
 47216              		.section	.note.gnu.property,"a"
 47217              		.align 8
 47218 0000 04000000 		.long	 1f - 0f
 47219 0004 10000000 		.long	 4f - 1f
 47220 0008 05000000 		.long	 5
 47221              	0:
 47222 000c 474E5500 		.string	 "GNU"
 47223              	1:
GAS LISTING /tmp/ccW0oq2B.s 			page 554


 47224              		.align 8
 47225 0010 020000C0 		.long	 0xc0000002
 47226 0014 04000000 		.long	 3f - 2f
 47227              	2:
 47228 0018 03000000 		.long	 0x3
 47229              	3:
 47230 001c 00000000 		.align 8
 47231              	4:
GAS LISTING /tmp/ccW0oq2B.s 			page 555


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccW0oq2B.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccW0oq2B.s:883    .text:00000000000003c0 extendSieve_shiftright_ivdep
     /tmp/ccW0oq2B.s:2699   .text:0000000000001010 compare_tuning_result
     /tmp/ccW0oq2B.s:2725   .text:0000000000001030 extendSieve_aligned
     /tmp/ccW0oq2B.s:3524   .text:0000000000001530 extendSieve_shiftleft
     /tmp/ccW0oq2B.s:6214   .text:00000000000026e0 show_primes.isra.0
     /tmp/ccW0oq2B.s:6209   .rodata.str1.1:0000000000000006 .LC1
     /tmp/ccW0oq2B.s:6207   .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccW0oq2B.s:6615   .text:0000000000002880 sieve
     /tmp/ccW0oq2B.s:20808  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccW0oq2B.s:20802  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccW0oq2B.s:15461  .text:0000000000005020 tune_benchmark
     /tmp/ccW0oq2B.s:20812  .rodata.cst8:0000000000000000 .LC3
     /tmp/ccW0oq2B.s:20816  .rodata.cst8:0000000000000008 .LC4
     /tmp/ccW0oq2B.s:15676  .text:0000000000005160 shiftvec
     /tmp/ccW0oq2B.s:16843  .text:0000000000005500 validatePrimeCount
     /tmp/ccW0oq2B.s:16824  .rodata.str1.8:0000000000000000 .LC5
     /tmp/ccW0oq2B.s:16830  .rodata.str1.1:0000000000000023 .LC7
     /tmp/ccW0oq2B.s:16834  .rodata.str1.8:00000000000000c0 .LC8
     /tmp/ccW0oq2B.s:16827  .rodata.str1.8:0000000000000058 .LC6
     /tmp/ccW0oq2B.s:16837  .rodata.str1.8:00000000000000f8 .LC9
     /tmp/ccW0oq2B.s:18090  .text:0000000000005c90 usage
     /tmp/ccW0oq2B.s:18050  .rodata.str1.8:0000000000000148 .LC10
     /tmp/ccW0oq2B.s:18053  .rodata.str1.1:0000000000000031 .LC11
     /tmp/ccW0oq2B.s:18057  .rodata.str1.8:0000000000000168 .LC12
     /tmp/ccW0oq2B.s:18060  .rodata.str1.8:00000000000001a8 .LC13
     /tmp/ccW0oq2B.s:18063  .rodata.str1.8:00000000000001d8 .LC14
     /tmp/ccW0oq2B.s:18066  .rodata.str1.8:0000000000000220 .LC15
     /tmp/ccW0oq2B.s:18069  .rodata.str1.8:0000000000000250 .LC16
     /tmp/ccW0oq2B.s:18072  .rodata.str1.8:0000000000000290 .LC17
     /tmp/ccW0oq2B.s:18075  .rodata.str1.8:00000000000002d0 .LC18
     /tmp/ccW0oq2B.s:18078  .rodata.str1.8:0000000000000320 .LC19
     /tmp/ccW0oq2B.s:18081  .rodata.str1.8:0000000000000348 .LC20
     /tmp/ccW0oq2B.s:18084  .rodata.str1.8:0000000000000378 .LC21
     /tmp/ccW0oq2B.s:18420  .text.startup:0000000000000000 main
     /tmp/ccW0oq2B.s:18331  .rodata.str1.1:000000000000004a .LC24
     /tmp/ccW0oq2B.s:18333  .rodata.str1.1:0000000000000051 .LC25
     /tmp/ccW0oq2B.s:18337  .rodata.str1.1:0000000000000077 .LC27
     /tmp/ccW0oq2B.s:18344  .rodata.str1.1:000000000000007a .LC29
     /tmp/ccW0oq2B.s:18346  .rodata.str1.1:0000000000000093 .LC30
     /tmp/ccW0oq2B.s:18348  .rodata.str1.1:000000000000009b .LC31
     /tmp/ccW0oq2B.s:18357  .rodata.str1.1:00000000000000bb .LC34
     /tmp/ccW0oq2B.s:18376  .rodata.str1.1:000000000000013a .LC42
     /tmp/ccW0oq2B.s:18374  .rodata.str1.1:0000000000000121 .LC41
     /tmp/ccW0oq2B.s:18359  .rodata.str1.1:00000000000000d1 .LC35
     /tmp/ccW0oq2B.s:18363  .rodata.str1.1:00000000000000f3 .LC37
     /tmp/ccW0oq2B.s:18370  .rodata.str1.1:00000000000000f7 .LC39
     /tmp/ccW0oq2B.s:18372  .rodata.str1.1:0000000000000110 .LC40
     /tmp/ccW0oq2B.s:18378  .rodata.str1.1:000000000000014a .LC43
     /tmp/ccW0oq2B.s:20824  .rodata.cst8:0000000000000018 .LC53
     /tmp/ccW0oq2B.s:18408  .rodata.str1.8:00000000000006c8 .LC54
     /tmp/ccW0oq2B.s:18329  .rodata.str1.1:000000000000003b .LC23
     /tmp/ccW0oq2B.s:18341  .rodata.str1.8:00000000000003b0 .LC28
     /tmp/ccW0oq2B.s:18414  .rodata.str1.1:000000000000017b .LC56
     /tmp/ccW0oq2B.s:18411  .rodata.str1.8:0000000000000710 .LC55
GAS LISTING /tmp/ccW0oq2B.s 			page 556


     /tmp/ccW0oq2B.s:20820  .rodata.cst8:0000000000000010 .LC22
     /tmp/ccW0oq2B.s:18389  .rodata.str1.8:00000000000004a8 .LC47
     /tmp/ccW0oq2B.s:18386  .rodata.str1.8:0000000000000420 .LC46
     /tmp/ccW0oq2B.s:18392  .rodata.str1.8:0000000000000530 .LC48
     /tmp/ccW0oq2B.s:18395  .rodata.str1.1:000000000000016e .LC49
     /tmp/ccW0oq2B.s:18399  .rodata.str1.8:0000000000000588 .LC50
     /tmp/ccW0oq2B.s:18380  .rodata.str1.1:0000000000000151 .LC44
     /tmp/ccW0oq2B.s:18405  .rodata.str1.8:0000000000000690 .LC52
     /tmp/ccW0oq2B.s:18402  .rodata.str1.8:0000000000000618 .LC51
     /tmp/ccW0oq2B.s:20786  .rodata:0000000000000040 CSWTCH.111
     /tmp/ccW0oq2B.s:20779  .rodata:0000000000000020 CSWTCH.112
     /tmp/ccW0oq2B.s:20769  .rodata:0000000000000000 CSWTCH.113
     /tmp/ccW0oq2B.s:18382  .rodata.str1.1:0000000000000164 .LC45
     /tmp/ccW0oq2B.s:18335  .rodata.str1.1:000000000000005b .LC26
     /tmp/ccW0oq2B.s:18354  .rodata.str1.8:00000000000003d8 .LC33
     /tmp/ccW0oq2B.s:18367  .rodata.str1.8:00000000000003f8 .LC38
     /tmp/ccW0oq2B.s:18350  .rodata.str1.1:00000000000000a2 .LC32
     /tmp/ccW0oq2B.s:18361  .rodata.str1.1:00000000000000d8 .LC36
     /tmp/ccW0oq2B.s:20795  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
memcpy
_GLOBAL_OFFSET_TABLE_
__printf_chk
putchar
aligned_alloc
clock_gettime
free
__stack_chk_fail
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
