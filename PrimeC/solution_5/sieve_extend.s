GAS LISTING /tmp/ccqpmidN.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccqpmidN.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB64:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** 
  12:sieve_extend.c **** #define default_sieve_limit 1000000
  13:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  14:sieve_extend.c **** #define default_sieve_duration 5
  15:sieve_extend.c **** #define default_sample_duration 0.1
  16:sieve_extend.c **** #define default_sample_max 5
  17:sieve_extend.c **** #define default_verbose_level 2
  18:sieve_extend.c **** #define default_tune_level 0
  19:sieve_extend.c **** #define default_check_level 1
  20:sieve_extend.c **** #define default_show_primes_on_error 100
  21:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  22:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  23:sieve_extend.c **** 
  24:sieve_extend.c **** // 64 bit
  25:sieve_extend.c **** #define TYPE uint64_t
  26:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 3


  27:sieve_extend.c **** // calculate the rest dynamically
  28:sieve_extend.c **** #define counter_t TYPE
  29:sieve_extend.c **** #define bitshift_t TYPE
  30:sieve_extend.c **** #define bitword_t uint64_t
  31:sieve_extend.c **** 
  32:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  33:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  34:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  35:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  36:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  37:sieve_extend.c **** 
  38:sieve_extend.c **** #define SHIFT_VECTOR (SHIFT+2)
  39:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  40:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  41:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  42:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  43:sieve_extend.c **** 
  44:sieve_extend.c **** // globals for tuning
  45:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 64;
  46:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  47:sieve_extend.c **** 
  48:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  49:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  50:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  51:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT))
  52:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)0)
  53:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)0)
  54:sieve_extend.c **** #define VECTOR_FASTER ((counter_t)96)
  55:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  56:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  57:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  58:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  59:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  60:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  61:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  62:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  63:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  64:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  65:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  66:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  67:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  68:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  69:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  70:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  71:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  72:sieve_extend.c **** #define real(bit) (bit*2+1)
  73:sieve_extend.c **** 
  74:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  75:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  76:sieve_extend.c **** 
  77:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  78:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  79:sieve_extend.c **** 
  80:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  81:sieve_extend.c **** 
  82:sieve_extend.c **** struct sieve_state {
  83:sieve_extend.c ****     bitword_t* bitarray;
GAS LISTING /tmp/ccqpmidN.s 			page 4


  84:sieve_extend.c ****     counter_t  bits;
  85:sieve_extend.c ****     counter_t  size;
  86:sieve_extend.c **** };
  87:sieve_extend.c **** 
  88:sieve_extend.c **** #include "debugtools.h"
  89:sieve_extend.c **** 
  90:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  91:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  92:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
  93:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  94:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
  95:sieve_extend.c **** 
  96:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  97:sieve_extend.c ****     sieve->bits     = size >> 1;
  98:sieve_extend.c ****     sieve->size     = size;
  99:sieve_extend.c **** 
 100:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 101:sieve_extend.c ****     // it gave weird malloc problems at this point
 102:sieve_extend.c ****     return sieve;
 103:sieve_extend.c **** }
 104:sieve_extend.c **** 
 105:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 106:sieve_extend.c ****     free(sieve->bitarray);
 107:sieve_extend.c ****     free(sieve);
 108:sieve_extend.c **** }
 109:sieve_extend.c **** 
 110:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 111:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 112:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 113:sieve_extend.c ****     return index;
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 117:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 118:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 119:sieve_extend.c **** 
 120:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 121:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 122:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 123:sieve_extend.c ****    index += distance;
 124:sieve_extend.c ****    distance += index_bit;
 125:sieve_extend.c **** 
 126:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 127:sieve_extend.c ****        index_word++;
 128:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 129:sieve_extend.c ****        index += distance;
 130:sieve_extend.c ****    }
 131:sieve_extend.c **** 
 132:sieve_extend.c ****    return index;
 133:sieve_extend.c **** }
 134:sieve_extend.c **** 
 135:sieve_extend.c **** 
 136:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 137:sieve_extend.c **** //#if __APPLE__
 138:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 139:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 140:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
GAS LISTING /tmp/ccqpmidN.s 			page 5


 141:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 142:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 143:sieve_extend.c **** //
 144:sieve_extend.c **** //   #pragma ivdep
 145:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 146:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 147:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 148:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 149:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 150:sieve_extend.c **** //   }
 151:sieve_extend.c **** //
 152:sieve_extend.c **** //   #pragma ivdep
 153:sieve_extend.c **** //   while (index_word < range_stop_word) {
 154:sieve_extend.c **** //       bitarray[index_word] |= mask;
 155:sieve_extend.c **** //       index_word += step;
 156:sieve_extend.c **** //   }
 157:sieve_extend.c **** //
 158:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 159:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 160:sieve_extend.c **** //   }
 161:sieve_extend.c **** //#endif
 162:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 163:sieve_extend.c **** //#if __linux__
 164:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 165:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 166:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 167:sieve_extend.c **** 
 168:sieve_extend.c ****   #pragma unroll
 169:sieve_extend.c ****    #pragma ivdep
 170:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 171:sieve_extend.c ****        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 173:sieve_extend.c ****        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;
 180:sieve_extend.c ****        index_ptr+=step;
 181:sieve_extend.c ****    }
 182:sieve_extend.c **** 
 183:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 184:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 185:sieve_extend.c ****        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 187:sieve_extend.c ****    }
 188:sieve_extend.c **** 
 189:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 190:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 191:sieve_extend.c ****    }
 192:sieve_extend.c **** 
 193:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 194:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 195:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 196:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 197:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
GAS LISTING /tmp/ccqpmidN.s 			page 6


 198:sieve_extend.c **** 
 199:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 200:sieve_extend.c **** 
 201:sieve_extend.c **** //     #pragma unroll 1
 202:sieve_extend.c **** //    #pragma ivdep
 203:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 204:sieve_extend.c **** //        *(index_ptr) |= mask;
 205:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 206:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 207:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 208:sieve_extend.c **** //        index_ptr += 4*step;
 209:sieve_extend.c **** //    }
 210:sieve_extend.c **** 
 211:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 212:sieve_extend.c **** //        *index_ptr |= mask;
 213:sieve_extend.c **** //        index_ptr+=step;
 214:sieve_extend.c **** //    }
 215:sieve_extend.c **** 
 216:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 217:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 218:sieve_extend.c **** //    }
 219:sieve_extend.c **** //#endif
 220:sieve_extend.c **** }
 221:sieve_extend.c **** 
 222:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 223:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 224:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 225:sieve_extend.c **** 
 226:sieve_extend.c ****     // build the pattern in a word
 227:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 228:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 229:sieve_extend.c ****         pattern |= (pattern << patternsize);
 230:sieve_extend.c **** 
 231:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 232:sieve_extend.c ****     
 233:sieve_extend.c ****     // initialize loop variables and stop if this is it
 234:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 235:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 236:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 237:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 238:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 239:sieve_extend.c ****        return;
 240:sieve_extend.c ****     }
 241:sieve_extend.c ****     
 242:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 243:sieve_extend.c **** 
 244:sieve_extend.c ****    // from now on, we are before range_stop_word
 245:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 246:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 247:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 248:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 249:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 250:sieve_extend.c ****    #pragma unroll
 251:sieve_extend.c ****    #pragma ivdep
 252:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 253:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 254:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
GAS LISTING /tmp/ccqpmidN.s 			page 7


 255:sieve_extend.c **** 
 256:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 257:sieve_extend.c ****    }
 258:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 259:sieve_extend.c **** 
 260:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 261:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 262:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 263:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 264:sieve_extend.c **** //             printWord(pattern); printf("\n");
 265:sieve_extend.c **** //             exit(0);
 266:sieve_extend.c **** //         }
 267:sieve_extend.c **** //    }
 268:sieve_extend.c **** 
 269:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 270:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 271:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 272:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 273:sieve_extend.c ****     // #pragma unroll
 274:sieve_extend.c ****     // #pragma ivdep
 275:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 276:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 277:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 278:sieve_extend.c ****     // }
 279:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 280:sieve_extend.c **** }
 281:sieve_extend.c **** 
 282:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 283:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 284:sieve_extend.c **** // This is especially true for small steps over long ranges
 285:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 286:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 287:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 288:sieve_extend.c **** 
 289:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 290:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 291:sieve_extend.c **** 
 292:sieve_extend.c ****         #pragma ivdep
 293:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 294:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 295:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 296:sieve_extend.c ****             #pragma ivdep
 297:sieve_extend.c ****             do {
 298:sieve_extend.c ****                 mask |= markmask(index);
 299:sieve_extend.c ****                 index += step;
 300:sieve_extend.c ****             } while (index_word == wordindex(index));
 301:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 302:sieve_extend.c ****             //     mask |= markmask(index);
 303:sieve_extend.c ****             bitarray[index_word] |= mask;
 304:sieve_extend.c ****         }
 305:sieve_extend.c ****     }
 306:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 307:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 308:sieve_extend.c ****         
 309:sieve_extend.c ****         #pragma ivdep
 310:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 311:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccqpmidN.s 			page 8


 312:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 313:sieve_extend.c ****             #pragma ivdep
 314:sieve_extend.c ****             do {
 315:sieve_extend.c ****                 mask |= markmask(index);
 316:sieve_extend.c ****                 index += step;
 317:sieve_extend.c ****             } while (index_word == wordindex(index));
 318:sieve_extend.c ****             // #pragma ivdep
 319:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 320:sieve_extend.c ****             //     mask |= markmask(index);
 321:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 322:sieve_extend.c ****         }
 323:sieve_extend.c ****     }
 324:sieve_extend.c **** }
 325:sieve_extend.c **** 
 326:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 327:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 328:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 329:sieve_extend.c ****     
 330:sieve_extend.c ****     #pragma unroll
 331:sieve_extend.c ****     #pragma ivdep
 332:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 333:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 334:sieve_extend.c ****     }
 335:sieve_extend.c **** 
 336:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 337:sieve_extend.c **** //    #pragma unroll
 338:sieve_extend.c **** //     #pragma ivdep
 339:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 340:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 341:sieve_extend.c **** //     }
 342:sieve_extend.c **** }
 343:sieve_extend.c **** 
 344:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 345:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 346:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 347:sieve_extend.c **** 
 348:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 349:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 350:sieve_extend.c ****     
 351:sieve_extend.c ****     while (1) {
 352:sieve_extend.c ****         if (index1_word == index2_word) {
 353:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 354:sieve_extend.c ****             counter_t index_word = index1_word;
 355:sieve_extend.c ****             do {
 356:sieve_extend.c ****                 mask |= markmask(index1);
 357:sieve_extend.c ****                 index1 += step1;
 358:sieve_extend.c ****                 index1_word = wordindex(index1);
 359:sieve_extend.c ****             } while (index1_word == index_word);
 360:sieve_extend.c ****             do {
 361:sieve_extend.c ****                 mask |= markmask(index2);
 362:sieve_extend.c ****                 index2 += step2;
 363:sieve_extend.c ****                 index2_word = wordindex(index2);
 364:sieve_extend.c ****             } while (index2_word == index_word);
 365:sieve_extend.c ****             bitarray[index_word] |= mask;
 366:sieve_extend.c ****         }
 367:sieve_extend.c **** 
 368:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
GAS LISTING /tmp/ccqpmidN.s 			page 9


 369:sieve_extend.c ****         if (index2 > range_stop) {
 370:sieve_extend.c ****             while (index1 <= range_stop) {
 371:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 372:sieve_extend.c ****                 index1 += step1;
 373:sieve_extend.c ****             }
 374:sieve_extend.c ****             return;
 375:sieve_extend.c ****         }
 376:sieve_extend.c **** 
 377:sieve_extend.c ****         if (index1 > range_stop) {
 378:sieve_extend.c ****             while (index2 <= range_stop) {
 379:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 380:sieve_extend.c ****                 index2 += step2;
 381:sieve_extend.c ****             }
 382:sieve_extend.c ****             return;
 383:sieve_extend.c ****         }
 384:sieve_extend.c **** 
 385:sieve_extend.c ****         while (index1_word < index2_word) {
 386:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 387:sieve_extend.c ****             index1 += step1;
 388:sieve_extend.c ****             index1_word = wordindex(index1);
 389:sieve_extend.c ****         }
 390:sieve_extend.c ****         
 391:sieve_extend.c ****         while (index2_word < index1_word){
 392:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 393:sieve_extend.c ****             index2 += step2;
 394:sieve_extend.c ****             index2_word = wordindex(index2);
 395:sieve_extend.c ****         }
 396:sieve_extend.c **** 
 397:sieve_extend.c ****     }
 398:sieve_extend.c **** }
 399:sieve_extend.c **** 
 400:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 401:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 402:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 403:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 404:sieve_extend.c **** 
 405:sieve_extend.c **** //    #pragma unroll
 406:sieve_extend.c ****     #pragma ivdep
 407:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 408:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 409:sieve_extend.c ****     }
 410:sieve_extend.c **** }
 411:sieve_extend.c **** 
 412:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, const counter_t rang
 413:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 414:sieve_extend.c **** 
 415:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 416:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 417:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 418:sieve_extend.c ****     // }
 419:sieve_extend.c ****     // return;
 420:sieve_extend.c **** 
 421:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 422:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 423:sieve_extend.c **** 
 424:sieve_extend.c ****     #pragma ivdep
 425:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
GAS LISTING /tmp/ccqpmidN.s 			page 10


 426:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 427:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 428:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 429:sieve_extend.c ****         
 430:sieve_extend.c ****         do {
 431:sieve_extend.c ****             quadmask[word] |= markmask(index);
 432:sieve_extend.c ****             index += step;
 433:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 434:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 435:sieve_extend.c ****         
 436:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word>>2;
 437:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 438:sieve_extend.c ****         
 439:sieve_extend.c ****         #pragma ivdep
 440:sieve_extend.c ****         for(; current_vector <= range_stop_vector; current_vector += step) {
 441:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 442:sieve_extend.c ****         }
 443:sieve_extend.c ****         
 444:sieve_extend.c ****         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 445:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 446:sieve_extend.c ****         if (index_word <= range_stop_word) {
 447:sieve_extend.c ****             #pragma ivdep
 448:sieve_extend.c ****             for (word =0; word < VECTOR_ELEMENTS; word++) {
 449:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 450:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 451:sieve_extend.c ****             }
 452:sieve_extend.c ****         }
 453:sieve_extend.c ****     }
 454:sieve_extend.c **** }
 455:sieve_extend.c **** 
 456:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 456 153 view -0
  91              		.cfi_startproc
 457:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 457 5 view .LVU1
 458:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 459:sieve_extend.c **** 
 460:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 460 5 view .LVU2
 461:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 461 5 view .LVU3
  95              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 456 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:460:     const counter_t source_word = wordindex(source_start);
 460:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 460 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 456 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccqpmidN.s 			page 11


 108              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 461 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 456 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:460:     const counter_t source_word = wordindex(source_start);
 460:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 460 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 461 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 456 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 461 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 461 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 456 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 461 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 461 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 456 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 461 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 456 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
GAS LISTING /tmp/ccqpmidN.s 			page 12


 156              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 461 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 461 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 461 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 461 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:456: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 456:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 456 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:461:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 461 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 462 5 is_stmt 1 view .LVU26
 177              	.LBB260:
 178              		.loc 1 462 10 view .LVU27
 179              		.loc 1 462 54 view .LVU28
 180              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 462 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 463:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 463 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 462 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 192              		.loc 1 463 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 195              		.loc 1 463 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 462 90 is_stmt 1 discriminator 3 view .LVU34
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 462 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 462 5 is_stmt 0 discriminator 3 view .LVU36
GAS LISTING /tmp/ccqpmidN.s 			page 13


 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 463 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 462 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 209              		.loc 1 463 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 212              		.loc 1 463 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 462 90 is_stmt 1 view .LVU41
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 462 54 view .LVU42
 217              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 462 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 463 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 462 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 226              		.loc 1 463 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 229              		.loc 1 463 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 462 90 is_stmt 1 view .LVU48
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 462 54 view .LVU49
 234              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 462 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 463 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 462 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 243              		.loc 1 463 29 view .LVU53
GAS LISTING /tmp/ccqpmidN.s 			page 14


 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 462 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 249              		.loc 1 463 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 462 90 is_stmt 1 view .LVU56
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 462 54 view .LVU57
 254              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 462 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 463 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 462 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 263              		.loc 1 463 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 462 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 269              		.loc 1 463 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 462 90 is_stmt 1 view .LVU64
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 462 54 view .LVU65
 274              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 462 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 463 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 462 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 283              		.loc 1 463 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 462 103 view .LVU70
GAS LISTING /tmp/ccqpmidN.s 			page 15


 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 289              		.loc 1 463 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 462 90 is_stmt 1 view .LVU72
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 462 54 view .LVU73
 294              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 462 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 463 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 462 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 303              		.loc 1 463 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 462 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 309              		.loc 1 463 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 462 90 is_stmt 1 view .LVU80
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 462 54 view .LVU81
 314              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 462 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 463 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 462 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 323              		.loc 1 463 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:463:         pattern |= (pattern << pattern_size);
 326              		.loc 1 463 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 462 90 is_stmt 1 view .LVU87
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 462 54 view .LVU88
GAS LISTING /tmp/ccqpmidN.s 			page 16


 331              	# sieve_extend.c:462:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 462 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 462:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 462 5 view .LVU90
 340              	.LBE260:
 464:sieve_extend.c **** 
 465:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 465 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:465:     const counter_t destination_start = source_start + size;
 343              		.loc 1 465 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 466:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 466 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:467:     counter_t destination_stop_word = wordindex(destination_stop);
 467:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 467 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:466:     counter_t destination_start_word = wordindex(destination_start);
 466:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 466 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 466:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 466 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 467 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:467:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 467 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 468:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 468 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 468 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:468:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 468 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
GAS LISTING /tmp/ccqpmidN.s 			page 17


 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 469:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 470:sieve_extend.c ****         return;
 471:sieve_extend.c ****     }
 472:sieve_extend.c **** 
 473:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 473 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:473:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 473 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:476:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 474:sieve_extend.c **** 
 475:sieve_extend.c ****     // TODO: refactor according to smallstep
 476:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 476 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:473:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 473:sieve_extend.c **** 
 384              		.loc 1 473 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 476 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:476:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 476 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.116,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 477:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 477 5 is_stmt 1 view .LVU108
 478:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 478 5 view .LVU109
 479:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 479 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:479:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 479 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:478:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 478:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 478 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:479:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 479 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 480:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 480 5 is_stmt 1 view .LVU114
GAS LISTING /tmp/ccqpmidN.s 			page 18


 411              	# sieve_extend.c:477:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 477:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 477 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:478:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 478:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 478 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 478:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 478 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.117,
 421              	# sieve_extend.c:480:     destination_start_word++;
 422              		.loc 1 480 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 481:sieve_extend.c ****     
 482:sieve_extend.c ****     #pragma unroll
 483:sieve_extend.c ****     #pragma ivdep
 484:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 484 5 is_stmt 1 view .LVU119
 426              	.LBB261:
 427              		.loc 1 484 10 view .LVU120
 428              		.loc 1 484 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.115,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE261:
 433              	# sieve_extend.c:477:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 477:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 477 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 477:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 477 31 view .LVU123
 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.117
 442 01b3 0F84F404 		je	.L12	#,
 442      0000
 443              	.LBB262:
 485:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 485 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 485 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 485 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 485 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
GAS LISTING /tmp/ccqpmidN.s 			page 19


 454      F8
 455              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 485 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 484 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 484 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.117,
 463              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 484 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 485 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 485 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 485 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 485 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 485 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 485 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 485 55 view .LVU138
 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 485      F8
 486              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 485 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 489      10
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 484 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 484 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.117,
 494              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 484 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 485 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccqpmidN.s 			page 20


 500              		.loc 1 485 81 is_stmt 0 view .LVU144
 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 485 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 485 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 485 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 511              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 485 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 485 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 485 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 484 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 484 25 view .LVU152
 524              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 484 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 529              		.loc 1 484 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.118, prolog_loop_niters.117
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.119, niters.118
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.119,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.137,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.122, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
GAS LISTING /tmp/ccqpmidN.s 			page 21


 543      D4
 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 484 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.122, vect_vec_iv_.122
 553 029e 4883C640 		add	rsi, 64	# ivtmp.137,
 554              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 485 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp496
 557      F0
 558              		.loc 1 485 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 485 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.122, vect_vec_iv_.122,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.122, vect_vec_iv_.122,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.124, vect_cst__146, tmp542
 566      E1
 567              	.LVL32:
 568              		.loc 1 485 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.125, vect__45.124, vect_cst__148
 570              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 485 99 view .LVU160
 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.126, vect__47.125, tmp498
 572      C5
 573              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 485 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.127, vect_cst__152, vect__48.126
 576              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 485 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.126
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.127
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 581      DA
GAS LISTING /tmp/ccqpmidN.s 			page 22


 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.127
 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.126
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.128, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.130, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 588      DB
 589              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 485 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.132
 591      C0
 592              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 485 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 594      CB
 595              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 485 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.132
 597      E0
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 484 40 is_stmt 1 view .LVU166
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 484 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.137, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
 604              	.L9:
 605              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 485 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp496
 608      E0
 609              		.loc 1 485 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 485 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.122, vect_vec_iv_.122,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.122, vect_vec_iv_.122,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.137,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.124, vect_cst__146, tmp400
 618      DB
GAS LISTING /tmp/ccqpmidN.s 			page 23


 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.125, vect__45.124, vect_cst__148
 620              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 485 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.126, vect__47.125, tmp498
 622      FD
 623              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 485 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.127, vect_cst__152, vect__48.126
 625      CF
 626              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 485 116 discriminator 3 view .LVU173
 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.126
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.127
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.127
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.126
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.128, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.130, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 638      C2
 639              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 485 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.132
 641      80
 642              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 643              		.loc 1 485 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.122, vect_vec_iv_.122, tmp497
 645              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 485 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 648              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 485 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.122, vect_vec_iv_.122,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.122, vect_vec_iv_.122, tmp496
 652      F0
 653              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 485 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.132
 655      A0
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 484 40 is_stmt 1 discriminator 3 view .LVU179
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccqpmidN.s 			page 24


 657              		.loc 1 484 25 discriminator 3 view .LVU180
 658              		.loc 1 485 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 485 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.122, vect_vec_iv_.122,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.124, vect_cst__146, tmp517
 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.125, vect__45.124, vect_cst__148
 666              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 485 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.126, vect__47.125, tmp498
 668      CD
 669              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 485 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.127, vect_cst__152, vect__48.126
 671      E1
 672              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 485 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.126
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.127
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.127
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.126
 680      C901
 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.128, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.130, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.129, vect_cst__156, vect_patt_139.128
 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.131, vect_cst__156, vect_patt_137.130
 684      F9
 685              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 485 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.132
 687      C0
 688              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 485 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.132, vect_patt_138.129, vect_patt_136.131
 690      D7
 691              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 485 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.132
 693      E0
GAS LISTING /tmp/ccqpmidN.s 			page 25


 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 484 40 is_stmt 1 discriminator 3 view .LVU189
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 484 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.137, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.120, niters.118
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.120,
 701 0442 4901F6   		add	r14, rsi	# tmp.121, niters_vector_mult_vf.120
 702 0445 4939F5   		cmp	r13, rsi	# niters.118, niters_vector_mult_vf.120
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 485 9 view .LVU191
 708              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 485 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 485 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 485 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.121
 717              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 485 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 485 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 485 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
 726              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 727              		.loc 1 485 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 485 72 view .LVU199
 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 484 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 485 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 485 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 484 40 is_stmt 1 view .LVU203
GAS LISTING /tmp/ccqpmidN.s 			page 26


 743              	.LVL34:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 484 25 view .LVU204
 745              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 484 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 485 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 751              		.loc 1 485 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 485 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 485 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 485 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 485 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 485 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 485 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 485 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
 775              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 776              		.loc 1 485 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 485 116 view .LVU216
 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 484 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 484 25 view .LVU218
 786              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 484 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 485 9 is_stmt 1 view .LVU220
GAS LISTING /tmp/ccqpmidN.s 			page 27


 791              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 792              		.loc 1 485 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 485 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 485 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 485 17 view .LVU224
 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 485 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 485 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 485 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 485 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 485 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 485 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 484 40 is_stmt 1 view .LVU231
 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 825              	.LVL38:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 484 25 view .LVU232
 827              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 828              		.loc 1 484 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 485 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 485 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 485 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 485 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccqpmidN.s 			page 28


 842              		.loc 1 485 17 view .LVU238
 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 485 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 485 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 485 127 view .LVU241
 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 485 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 485 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 485 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 484 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 484 25 view .LVU246
 868              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 484 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
 872              		.loc 1 485 9 is_stmt 1 view .LVU248
 873              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 485 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 485 72 view .LVU250
 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 485 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 485 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 485 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 485 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccqpmidN.s 			page 29


 893              		.loc 1 485 127 view .LVU255
 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 485 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 485 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 902              		.loc 1 485 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 484 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 484 25 view .LVU260
 909              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 484 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 485 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 485 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 485 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 485 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 923              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 924              		.loc 1 485 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 485 81 view .LVU267
 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 485 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 485 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 485 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 485 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
GAS LISTING /tmp/ccqpmidN.s 			page 30


 942              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 943              		.loc 1 485 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 484 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 484 25 view .LVU274
 950              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 484 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 485 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 485 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 485 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 485 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 485 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 485 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 485 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
 974              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 975              		.loc 1 485 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 485 72 view .LVU284
 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 485 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 485 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 484 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 484 25 view .LVU288
GAS LISTING /tmp/ccqpmidN.s 			page 31


 991              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 484 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 485 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 485 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1000              		.loc 1 485 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 485 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 485 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 485 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 485 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 485 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 485 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 485 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1023      E8
 1024              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 485 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1028              		.loc 1 484 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 484 25 view .LVU302
 1032              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 484 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 485 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 485 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
GAS LISTING /tmp/ccqpmidN.s 			page 32


 1040              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1041              		.loc 1 485 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 485 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 485 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 485 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 485 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 485 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 485 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 485 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 485 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 484 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1072              		.loc 1 484 25 view .LVU316
 1073              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 484 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
 1077              		.loc 1 485 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 485 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 485 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 485 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 484 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/ccqpmidN.s 			page 33


 1091              		.loc 1 485 17 view .LVU323
 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 485 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 485 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 485 127 view .LVU326
 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 485 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 485 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 485 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 484 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 485 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 484 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 484 25 view .LVU333
 1121              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 484 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 485 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 485 81 is_stmt 0 view .LVU336
 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 485 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 485 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 485 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 485 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
GAS LISTING /tmp/ccqpmidN.s 			page 34


 1142              	.LVL55:
 1143              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 485 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 485 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:485:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 485 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 484 40 is_stmt 1 view .LVU344
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 484 25 view .LVU345
 1156              	.L10:
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 484 25 is_stmt 0 view .LVU346
 1158              	.LBE262:
 486:sieve_extend.c ****     }
 487:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 487 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:487:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 487 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:488: }
 488:sieve_extend.c **** }
 1164              		.loc 1 488 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 488 1 view .LVU350
 1170 0683 415D     		pop	r13	#
 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 469:sieve_extend.c ****         return;
 1182              		.loc 1 469 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:469:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 469:sieve_extend.c ****         return;
 1184              		.loc 1 469 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:469:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 469:sieve_extend.c ****         return;
GAS LISTING /tmp/ccqpmidN.s 			page 35


 1187              		.loc 1 469 42 view .LVU353
 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 470:sieve_extend.c ****     }
 1190              		.loc 1 470 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:488: }
 1192              		.loc 1 488 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
 1197              		.loc 1 488 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 488 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB263:
 1214              	# sieve_extend.c:484:     for (counter_t i=0; i<=loop_range; ++i ) {
 484:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 484 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.121
 1220              		.p2align 4,,2
 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE263:
 1223              		.cfi_endproc
 1224              	.LFE64:
 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB69:
 489:sieve_extend.c **** 
 490:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 491:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 492:sieve_extend.c **** 
 493:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 494:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 495:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 496:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 497:sieve_extend.c ****     
 498:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 499:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 36


 500:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 501:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 502:sieve_extend.c ****         copy_word += size;
 503:sieve_extend.c ****     }
 504:sieve_extend.c **** 
 505:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 506:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 507:sieve_extend.c ****         source_word++;
 508:sieve_extend.c ****         copy_word++;
 509:sieve_extend.c ****     }
 510:sieve_extend.c **** 
 511:sieve_extend.c **** }
 512:sieve_extend.c **** 
 513:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 514:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 515:sieve_extend.c **** 
 516:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 517:sieve_extend.c **** {
 518:sieve_extend.c ****     int i = 0;
 519:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 520:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 521:sieve_extend.c ****     {
 522:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 523:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 524:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 525:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 526:sieve_extend.c ****     }
 527:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 528:sieve_extend.c ****     {
 529:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 530:sieve_extend.c ****     }    
 531:sieve_extend.c **** }
 532:sieve_extend.c **** 
 533:sieve_extend.c **** #define forward_distance 3
 534:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 535:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 536:sieve_extend.c ****    
 537:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 538:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 539:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 540:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 541:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 542:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 543:sieve_extend.c **** 
 544:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 545:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 546:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 547:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 548:sieve_extend.c ****         return; // rapid exit for one word variant
 549:sieve_extend.c ****     }
 550:sieve_extend.c **** 
 551:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 552:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 553:sieve_extend.c ****                                 & keepmask(copy_start);
 554:sieve_extend.c **** 
 555:sieve_extend.c ****     copy_word++;
 556:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 37


 557:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 558:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 559:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 560:sieve_extend.c ****         
 561:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 562:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 563:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 564:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 565:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 566:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 567:sieve_extend.c **** 
 568:sieve_extend.c ****         #pragma ivdep 
 569:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 570:sieve_extend.c ****             #pragma ivdep
 571:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 572:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 573:sieve_extend.c ****             #pragma ivdep
 574:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 575:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 576:sieve_extend.c ****         }
 577:sieve_extend.c **** 
 578:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 579:sieve_extend.c ****         #pragma ivdep 
 580:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 581:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 582:sieve_extend.c **** 
 583:sieve_extend.c ****         // #pragma GCC ivdep
 584:sieve_extend.c ****         // for (; i <= size_word; i++) 
 585:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 586:sieve_extend.c ****     }
 587:sieve_extend.c ****     else {
 588:sieve_extend.c ****         register counter_t i = 0;
 589:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 590:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 591:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 592:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 593:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 594:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 595:sieve_extend.c ****     }
 596:sieve_extend.c **** 
 597:sieve_extend.c ****     // for (; i <= size_word; i++) 
 598:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 599:sieve_extend.c **** 
 600:sieve_extend.c ****     // for (; i <= size_word; i++) 
 601:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 602:sieve_extend.c **** 
 603:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 604:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 605:sieve_extend.c **** }
 606:sieve_extend.c **** 
 607:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 608:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 609:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 610:sieve_extend.c ****     counter_t distance = 0;
 611:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 612:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 613:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
GAS LISTING /tmp/ccqpmidN.s 			page 38


 614:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 615:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 616:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 617:sieve_extend.c ****         copy_word += 2;
 618:sieve_extend.c ****         source_word += 2;
 619:sieve_extend.c ****         distance += 2;
 620:sieve_extend.c ****     }
 621:sieve_extend.c ****     return distance;
 622:sieve_extend.c **** }
 623:sieve_extend.c **** 
 624:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 625:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 626:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 627:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 628:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 629:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 630:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 631:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 632:sieve_extend.c **** //
 633:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 634:sieve_extend.c **** //    copy_ptr++;
 635:sieve_extend.c **** //    source_ptr++;
 636:sieve_extend.c **** //
 637:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 638:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 639:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 640:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 641:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 642:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 643:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 644:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 645:sieve_extend.c **** //
 646:sieve_extend.c **** //        copy_ptr+=3;
 647:sieve_extend.c **** //        source_ptr+=3;
 648:sieve_extend.c **** //    }
 649:sieve_extend.c **** //
 650:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 651:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 652:sieve_extend.c **** //        source_ptr++;
 653:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 654:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 655:sieve_extend.c **** //        copy_ptr++;
 656:sieve_extend.c **** //    }
 657:sieve_extend.c **** //
 658:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 659:sieve_extend.c **** //
 660:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 661:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 662:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 663:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 664:sieve_extend.c **** //         copy_ptr += size;
 665:sieve_extend.c **** //     }
 666:sieve_extend.c **** //
 667:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 668:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 669:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 670:sieve_extend.c **** //        copy_ptr++;
GAS LISTING /tmp/ccqpmidN.s 			page 39


 671:sieve_extend.c **** //        source_ptr++;
 672:sieve_extend.c **** //    }
 673:sieve_extend.c **** //
 674:sieve_extend.c **** //}
 675:sieve_extend.c **** 
 676:sieve_extend.c **** 
 677:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 677 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 678 5 view .LVU360
 679:sieve_extend.c ****    
 680:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 680 5 view .LVU361
 1235              	# sieve_extend.c:677: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 677 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:681:     const counter_t copy_start = source_start + size;
 681:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 681 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:680:     const counter_t destination_stop_word = wordindex(destination_stop);
 680:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 680 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:677: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 677 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 682 39 view .LVU366
 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
 1253              	# sieve_extend.c:677: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 677 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:685:     register counter_t copy_word = wordindex(copy_start);
 683:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 684:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 685:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 685 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 682 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:677: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 677 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:680:     const counter_t destination_stop_word = wordindex(destination_stop);
 680:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccqpmidN.s 			page 40


 1266              		.loc 1 680 21 view .LVU371
 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 682 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:677: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 677 149 view .LVU373
 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 677 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 681:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 681 5 is_stmt 1 view .LVU375
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 682 5 view .LVU376
 1291              	# sieve_extend.c:680:     const counter_t destination_stop_word = wordindex(destination_stop);
 680:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 680 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
 1294              	.LVL65:
 1295              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 682 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:684:     register counter_t source_word = wordindex(source_start);
 684:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 684 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 682 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 683:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 683 5 is_stmt 1 view .LVU381
 684:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 684 5 view .LVU382
 1308              		.loc 1 685 5 view .LVU383
 686:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 41


 687:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1309              		.loc 1 687 5 view .LVU384
 1310              	# sieve_extend.c:682:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 682 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 682 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
 1316              	# sieve_extend.c:683:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 683:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 683 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 683:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 683 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 683:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 683 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:687:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 687 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
 1337              		.loc 1 687 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 688:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 689:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 690:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 691:sieve_extend.c ****         return; // rapid exit for one word variant
 692:sieve_extend.c ****     }
 693:sieve_extend.c **** 
 694:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 694 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:696:                                 & keepmask(copy_start);
 695:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
GAS LISTING /tmp/ccqpmidN.s 			page 42


 696:sieve_extend.c ****                                 & keepmask(copy_start);
 1342              		.loc 1 696 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:698:     copy_word++;
 697:sieve_extend.c **** 
 698:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 698 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:694:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 694:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 694 25 view .LVU395
 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:702:     if (size >= WORD_SIZE_counter) {
 699:sieve_extend.c **** 
 700:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 701:sieve_extend.c **** 
 702:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 702 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:694:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 694:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 694 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 698:sieve_extend.c **** 
 1356              		.loc 1 698 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 700:sieve_extend.c **** 
 1358              		.loc 1 700 5 view .LVU399
 1359              		.loc 1 702 5 view .LVU400
 1360              	# sieve_extend.c:702:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 702 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 703:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 704:sieve_extend.c **** 
 705:sieve_extend.c ****         #pragma unroll
 706:sieve_extend.c ****         #pragma ivdep
 707:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 708:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 709:sieve_extend.c ****         }
 710:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 711:sieve_extend.c ****     }
 712:sieve_extend.c **** 
 713:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 713 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 713 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 713 5 discriminator 1 view .LVU404
GAS LISTING /tmp/ccqpmidN.s 			page 43


 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.147
 1397 07fa 4801FA   		add	rdx, rdi	# vectp.148, bitarray
 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.149,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
 714:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 714 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 714 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 714 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 714 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 714 54 view .LVU409
GAS LISTING /tmp/ccqpmidN.s 			page 44


 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1414      1CF7
 1415              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 714 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 714 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1422              		.loc 1 713 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 713 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.149,
 1426              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 714 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 714 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 714 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 714 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 714 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 714 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1444              		.loc 1 714 99 view .LVU420
 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 714 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1448      E3
 1449              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 714 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.149,
 1453              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 713 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 714 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 713 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
GAS LISTING /tmp/ccqpmidN.s 			page 45


 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1461              		.loc 1 713 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 714 9 view .LVU427
 1464              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 714 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 714 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 714 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 714 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 714 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 714 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 713 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 713 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1491              	.LVL78:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 713 12 is_stmt 1 view .LVU436
 1493              	.L67:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 713 12 is_stmt 0 view .LVU437
 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.149
 1496 0897 4929D1   		sub	r9, rdx	# niters.150, prolog_loop_niters.149
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.160,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.151, niters.150
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.151,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.149
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.149
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:698:     copy_word++;
 698:sieve_extend.c **** 
 1505              		.loc 1 698 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.198
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.156,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.165,
GAS LISTING /tmp/ccqpmidN.s 			page 46


 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 714 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 714 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.156_10, index: ivtmp.198_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.198,
 1531      00
 1532              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 714 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.160_17, index: ivtmp.198_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 714 54 view .LVU442
 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.158, tmp1085, _184
 1538              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 714 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.162, tmp1086, _182
 1541              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 714 72 view .LVU444
 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.163, vect__62.158, vect__67.162
 1544              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 714 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B], vect
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 713 48 is_stmt 1 view .LVU446
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 713 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 714 9 view .LVU448
 1551              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 714 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.156_10, index: ivtmp.198_467, offse
 1553      16
 1554              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccqpmidN.s 			page 47


 1555              		.loc 1 714 99 view .LVU450
 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.160_17, index: ivtmp.198_467, offset
 1556      0C10
 1557              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 714 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.158, tmp1087, _184
 1560              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 714 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.162, tmp1088, _182
 1563              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 714 72 view .LVU453
 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.163, vect__62.158, vect__67.162
 1565      DA
 1566              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 714 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B],
 1568      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 713 48 is_stmt 1 view .LVU455
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 713 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.198,
 1572              	.L195:
 1573              		.loc 1 714 9 view .LVU457
 1574              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 714 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.156_10, index: ivtmp.198_467, offs
 1576      16
 1577              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 714 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.160_17, index: ivtmp.198_467, offse
 1579      3410
 1580              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 714 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.158, tmp1089, _184
 1583              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 714 99 view .LVU461
 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.162, tmp1090, _182
 1586              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 714 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.163, vect__62.158, vect__67.162
 1588      F7
 1589              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 714 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B], 
 1591      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 713 48 is_stmt 1 view .LVU464
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 713 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.198,
 1595              	.L194:
 1596              		.loc 1 714 9 view .LVU466
 1597              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 714 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.156_10, index: ivtmp.198_467, offse
 1599      16
GAS LISTING /tmp/ccqpmidN.s 			page 48


 1600              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 714 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.160_17, index: ivtmp.198_467, offset
 1602      1C10
 1603              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 714 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.158, tmp1091, _184
 1606              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 714 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.162, tmp1092, _182
 1609              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1610              		.loc 1 714 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.163, vect__62.158, vect__67.162
 1612              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 714 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B], 
 1614      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 713 48 is_stmt 1 view .LVU473
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 713 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.198,
 1618              	.L193:
 1619              		.loc 1 714 9 view .LVU475
 1620              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 714 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.156_10, index: ivtmp.198_467, offse
 1622      16
 1623              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 714 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.160_17, index: ivtmp.198_467, offse
 1625      1410
 1626              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 714 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.158, tmp1093, _184
 1629              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 714 99 view .LVU479
 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.162, tmp1094, _182
 1632              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 714 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.163, vect__62.158, vect__67.162
 1634      E3
 1635              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 714 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B],
 1637      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 713 48 is_stmt 1 view .LVU482
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 713 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.198,
 1641              	.L192:
 1642              		.loc 1 714 9 view .LVU484
 1643              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 714 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.156_10, index: ivtmp.198_467, offs
 1645      16
GAS LISTING /tmp/ccqpmidN.s 			page 49


 1646              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 714 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.160_17, index: ivtmp.198_467, offse
 1648      3C10
 1649              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 714 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.158, tmp1095, _184
 1652              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 714 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.162, tmp1096, _182
 1655              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1656              		.loc 1 714 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.163, vect__62.158, vect__67.162
 1658              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 714 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B], 
 1660      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 713 48 is_stmt 1 view .LVU491
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 713 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.198,
 1664              	.L191:
 1665              		.loc 1 714 9 view .LVU493
 1666              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 714 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.156_10, index: ivtmp.198_467, offse
 1668      16
 1669              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 714 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.160_17, index: ivtmp.198_467, offset
 1671      1C10
 1672              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 714 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.158, tmp1097, _184
 1675              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 714 99 view .LVU497
 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.162, tmp1098, _182
 1678              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 714 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.163, vect__62.158, vect__67.162
 1681              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1682              		.loc 1 714 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B], 
 1683      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 713 48 is_stmt 1 view .LVU500
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 713 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.198,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.198, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 714 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU503
GAS LISTING /tmp/ccqpmidN.s 			page 50


 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.156_10, index: ivtmp.198_467, offse
 1693      16
 1694              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 714 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.160_17, index: ivtmp.198_467, offse
 1696      1C10
 1697              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 714 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.158, tmp1015, _184
 1700              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 714 99 discriminator 2 view .LVU506
 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.162, tmp1016, _182
 1703              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 714 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.163, vect__62.158, vect__67.162
 1705      EC
 1706              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 714 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B],
 1708      11
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU509
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 713 12 discriminator 2 view .LVU510
 1711              		.loc 1 714 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.156_10, index: ivtmp.198_467, of
 1714      1620
 1715              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 714 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.160_17, index: ivtmp.198_467, offs
 1717      741020
 1718              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 714 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.158, tmp1017, _184
 1721              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 714 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.162, tmp1018, _182
 1724              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 714 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.163, vect__62.158, vect__67.162
 1727              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 714 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B]
 1729      1120
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU518
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 713 12 discriminator 2 view .LVU519
 1732              		.loc 1 714 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.156_10, index: ivtmp.198_467, off
 1735      1640
 1736              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 714 99 discriminator 2 view .LVU522
GAS LISTING /tmp/ccqpmidN.s 			page 51


 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.160_17, index: ivtmp.198_467, offs
 1738      5C1040
 1739              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 714 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.158, tmp1019, _184
 1742              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 714 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.162, tmp1020, _182
 1745              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 714 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.163, vect__62.158, vect__67.162
 1747      C8
 1748              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 714 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B]
 1750      1140
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU527
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 713 12 discriminator 2 view .LVU528
 1753              		.loc 1 714 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.156_10, index: ivtmp.198_467, of
 1756      1660
 1757              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 714 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.160_17, index: ivtmp.198_467, off
 1759      641060
 1760              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 714 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.158, tmp1021, _184
 1763              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 714 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.162, tmp1022, _182
 1766              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1767              		.loc 1 714 72 discriminator 2 view .LVU534
 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.163, vect__62.158, vect__67.162
 1768      F5
 1769              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 714 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B
 1771      1160
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU536
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 713 12 discriminator 2 view .LVU537
 1774              		.loc 1 714 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.156_10, index: ivtmp.198_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 714 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.160_17, index: ivtmp.198_467, off
 1780      94108000 
GAS LISTING /tmp/ccqpmidN.s 			page 52


 1780      0000
 1781              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 714 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.158, tmp1023, _184
 1784              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 714 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.162, tmp1024, _182
 1787              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 714 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.163, vect__62.158, vect__67.162
 1790              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 714 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B
 1792      11800000 
 1792      00
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU545
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 713 12 discriminator 2 view .LVU546
 1795              		.loc 1 714 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.156_10, index: ivtmp.198_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 714 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.160_17, index: ivtmp.198_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 714 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.158, tmp1025, _184
 1805              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 714 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.162, tmp1026, _182
 1808              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1809              		.loc 1 714 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.163, vect__62.158, vect__67.162
 1810      D1
 1811              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 714 29 discriminator 2 view .LVU553
 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0
 1813      11A00000 
 1813      00
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU554
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 713 12 discriminator 2 view .LVU555
 1816              		.loc 1 714 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.156_10, index: ivtmp.198_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 714 99 discriminator 2 view .LVU558
GAS LISTING /tmp/ccqpmidN.s 			page 53


 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.160_17, index: ivtmp.198_467, of
 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 714 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.158, tmp1027, _184
 1826              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 714 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.162, tmp1028, _182
 1829              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 714 72 discriminator 2 view .LVU561
 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.163, vect__62.158, vect__67.162
 1831      FE
 1832              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 714 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0
 1834      11C00000 
 1834      00
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU563
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 713 12 discriminator 2 view .LVU564
 1837              		.loc 1 714 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 714 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.156_10, index: ivtmp.198_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 714 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.160_17, index: ivtmp.198_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 714 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.158, tmp1029, _184
 1847              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 714 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.162, tmp1030, _182
 1850              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 714 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.163, vect__62.158, vect__67.162
 1853              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 714 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.165_212, index: ivtmp.198_467, offset: 0B
 1855      11E00000 
 1855      00
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 713 48 is_stmt 1 discriminator 2 view .LVU572
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 713 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.198,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.198, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
GAS LISTING /tmp/ccqpmidN.s 			page 54


 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.152, niters.150
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.152,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.153, niters_vector_mult_vf.152
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.152
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.152, niters.150
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 714 9 view .LVU574
 1871              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 713 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 713 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 714 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 714 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 714 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 714 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1890              		.loc 1 714 72 view .LVU581
 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 713 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 713 12 view .LVU583
 1895              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 713 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 714 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 713 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 714 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
GAS LISTING /tmp/ccqpmidN.s 			page 55


 1905      4CCF08
 1906              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 714 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 714 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 714 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
 1915              	.LVL81:
 1916              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 714 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 713 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 713 12 view .LVU593
 1923              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 713 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 714 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 714 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 714 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1935              	.LVL84:
 1936              		.loc 1 714 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 714 72 view .LVU599
 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 713 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 713 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 713 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
GAS LISTING /tmp/ccqpmidN.s 			page 56


 1950      00
 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 715:sieve_extend.c ****     }
 716:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 716 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:716:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 716 25 is_stmt 0 view .LVU604
 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:718: }
 717:sieve_extend.c **** 
 718:sieve_extend.c **** }
 1960              		.loc 1 718 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB264:
 703:sieve_extend.c **** 
 1977              		.loc 1 703 9 is_stmt 1 view .LVU606
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 707 9 view .LVU607
 1979              	.LBB265:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 707 14 view .LVU608
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 707 40 view .LVU609
 1982              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 707 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 707 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
GAS LISTING /tmp/ccqpmidN.s 			page 57


 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 707 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.168,
 2020 0c56 7468     		je	.L58	#,
 708:sieve_extend.c ****         }
 2021              		.loc 1 708 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2023              		.loc 1 708 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
 2026              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2027              		.loc 1 708 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2031              		.loc 1 708 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.168,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 707 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
GAS LISTING /tmp/ccqpmidN.s 			page 58


 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2037              		.loc 1 707 40 view .LVU618
 2038              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 707 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 708:sieve_extend.c ****         }
 2042              		.loc 1 708 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2044              		.loc 1 708 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2047              		.loc 1 708 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2050              		.loc 1 708 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.168,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 707 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 707 40 view .LVU625
 2057              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 707 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
 2059      0000
 2060 0c9c 7522     		jne	.L58	#,
 708:sieve_extend.c ****         }
 2061              		.loc 1 708 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2063              		.loc 1 708 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2066              		.loc 1 708 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2069              		.loc 1 708 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
GAS LISTING /tmp/ccqpmidN.s 			page 59


 2073              		.loc 1 708 80 view .LVU631
 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 707 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2079              		.loc 1 708 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2080      18
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 707 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 707 40 view .LVU635
 2084              	.L58:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 707 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.169, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.174,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.168
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.178,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.169, prolog_loop_niters.168
 2093              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 707 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.217
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.170, niters.169
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.170,
 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.183,
 2100 0ced 49C1E505 		sal	r13, 5	# bnd.170,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
GAS LISTING /tmp/ccqpmidN.s 			page 60


 2116 0d31 742D     		je	.L183	#,
 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 708:sieve_extend.c ****         }
 2120              		.loc 1 708 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2122              		.loc 1 708 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.174_325, index: ivtmp.217_483, off
 2123      2412
 2124              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2125              		.loc 1 708 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.178_332, index: ivtmp.217_483, off
 2126      3413
 2127              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2128              		.loc 1 708 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.176, tmp1073, _184
 2130              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2131              		.loc 1 708 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.180, tmp1074, _182
 2133              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2134              		.loc 1 708 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.181, vect__49.176, vect__54.180
 2135      F7
 2136              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2137              		.loc 1 708 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], v
 2138      3411
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2139              		.loc 1 707 58 is_stmt 1 view .LVU645
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 707 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.217,
 2142              	.L183:
 708:sieve_extend.c ****         }
 2143              		.loc 1 708 13 view .LVU647
 2144              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2145              		.loc 1 708 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.174_325, index: ivtmp.217_483, offs
 2146      1412
 2147              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2148              		.loc 1 708 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.178_332, index: ivtmp.217_483, offs
 2149      2413
 2150              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2151              		.loc 1 708 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.176, tmp1075, _184
GAS LISTING /tmp/ccqpmidN.s 			page 61


 2153              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2154              		.loc 1 708 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.180, tmp1076, _182
 2156              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2157              		.loc 1 708 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.181, vect__49.176, vect__54.180
 2159              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2160              		.loc 1 708 35 view .LVU653
 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], v
 2161      0411
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 707 58 is_stmt 1 view .LVU654
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 707 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.217,
 2165              	.L182:
 708:sieve_extend.c ****         }
 2166              		.loc 1 708 13 view .LVU656
 2167              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2168              		.loc 1 708 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.174_325, index: ivtmp.217_483, offs
 2169      0C12
 2170              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2171              		.loc 1 708 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.178_332, index: ivtmp.217_483, offs
 2172      1C13
 2173              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2174              		.loc 1 708 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.176, tmp1077, _184
 2176              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2177              		.loc 1 708 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.180, tmp1078, _182
 2179              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2180              		.loc 1 708 80 view .LVU661
 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.181, vect__49.176, vect__54.180
 2181      E3
 2182              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2183              		.loc 1 708 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], 
 2184      2411
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 707 58 is_stmt 1 view .LVU663
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 707 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.217,
 2188              	.L181:
 708:sieve_extend.c ****         }
 2189              		.loc 1 708 13 view .LVU665
GAS LISTING /tmp/ccqpmidN.s 			page 62


 2190              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2191              		.loc 1 708 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.174_325, index: ivtmp.217_483, off
 2192      2C12
 2193              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2194              		.loc 1 708 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.178_332, index: ivtmp.217_483, off
 2195      3C13
 2196              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2197              		.loc 1 708 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.176, tmp1079, _184
 2199              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2200              		.loc 1 708 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.180, tmp1080, _182
 2202              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2203              		.loc 1 708 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.181, vect__49.176, vect__54.180
 2205              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2206              		.loc 1 708 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], v
 2207      1411
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 707 58 is_stmt 1 view .LVU672
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 707 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.217,
 2211              	.L180:
 708:sieve_extend.c ****         }
 2212              		.loc 1 708 13 view .LVU674
 2213              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2214              		.loc 1 708 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.174_325, index: ivtmp.217_483, offs
 2215      3C12
 2216              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2217              		.loc 1 708 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.178_332, index: ivtmp.217_483, offs
 2218      2C13
 2219              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2220              		.loc 1 708 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.176, tmp1081, _184
 2222              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2223              		.loc 1 708 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.180, tmp1082, _182
 2225              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2226              		.loc 1 708 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.181, vect__49.176, vect__54.180
GAS LISTING /tmp/ccqpmidN.s 			page 63


 2227      C8
 2228              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2229              		.loc 1 708 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], v
 2230      0C11
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 707 58 is_stmt 1 view .LVU681
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 707 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.217,
 2234              	.L179:
 708:sieve_extend.c ****         }
 2235              		.loc 1 708 13 view .LVU683
 2236              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2237              		.loc 1 708 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.174_325, index: ivtmp.217_483, off
 2238      1412
 2239              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2240              		.loc 1 708 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.178_332, index: ivtmp.217_483, offs
 2241      1C13
 2242              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2243              		.loc 1 708 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.176, tmp1083, _184
 2245              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2246              		.loc 1 708 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.180, tmp1084, _182
 2248              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2249              		.loc 1 708 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.181, vect__49.176, vect__54.180
 2250      EC
 2251              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2252              		.loc 1 708 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], 
 2253      2C11
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 707 58 is_stmt 1 view .LVU690
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 707 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.217,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.217, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 708:sieve_extend.c ****         }
 2260              		.loc 1 708 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2262              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.174_325, index: ivtmp.217_483, offs
GAS LISTING /tmp/ccqpmidN.s 			page 64


 2263      3412
 2264              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2265              		.loc 1 708 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.178_332, index: ivtmp.217_483, offse
 2266      3413
 2267              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2268              		.loc 1 708 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.176, tmp980, _184
 2270              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2271              		.loc 1 708 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.180, tmp981, _182
 2273              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2274              		.loc 1 708 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.181, vect__49.176, vect__54.180
 2276              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2277              		.loc 1 708 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], v
 2278      3C11
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU699
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 707 40 discriminator 3 view .LVU700
 708:sieve_extend.c ****         }
 2281              		.loc 1 708 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2283              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.174_325, index: ivtmp.217_483, off
 2284      641220
 2285              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2286              		.loc 1 708 109 discriminator 3 view .LVU703
 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.178_332, index: ivtmp.217_483, off
 2287      6C1320
 2288              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2289              		.loc 1 708 62 discriminator 3 view .LVU704
 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.176, tmp982, _184
 2291              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2292              		.loc 1 708 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.180, tmp983, _182
 2294              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2295              		.loc 1 708 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.181, vect__49.176, vect__54.180
 2296      D1
 2297              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2298              		.loc 1 708 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B]
 2299      541120
GAS LISTING /tmp/ccqpmidN.s 			page 65


 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2300              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU708
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 707 40 discriminator 3 view .LVU709
 708:sieve_extend.c ****         }
 2302              		.loc 1 708 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2304              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.174_325, index: ivtmp.217_483, of
 2305      5C1240
 2306              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2307              		.loc 1 708 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.178_332, index: ivtmp.217_483, off
 2308      5C1340
 2309              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2310              		.loc 1 708 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.176, tmp984, _184
 2312              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2313              		.loc 1 708 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.180, tmp985, _182
 2315              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2316              		.loc 1 708 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.181, vect__49.176, vect__54.180
 2317      F5
 2318              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2319              		.loc 1 708 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B]
 2320      741140
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU717
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2322              		.loc 1 707 40 discriminator 3 view .LVU718
 708:sieve_extend.c ****         }
 2323              		.loc 1 708 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2325              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.174_325, index: ivtmp.217_483, of
 2326      7C1260
 2327              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2328              		.loc 1 708 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.178_332, index: ivtmp.217_483, off
 2329      541360
 2330              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2331              		.loc 1 708 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.176, tmp986, _184
 2333              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2334              		.loc 1 708 109 discriminator 3 view .LVU723
GAS LISTING /tmp/ccqpmidN.s 			page 66


 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.180, tmp987, _182
 2336              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2337              		.loc 1 708 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.181, vect__49.176, vect__54.180
 2339              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2340              		.loc 1 708 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B],
 2341      641160
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2342              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU726
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 707 40 discriminator 3 view .LVU727
 708:sieve_extend.c ****         }
 2344              		.loc 1 708 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2346              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.174_325, index: ivtmp.217_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2349              		.loc 1 708 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.178_332, index: ivtmp.217_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2352              		.loc 1 708 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.176, tmp988, _184
 2354              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2355              		.loc 1 708 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.180, tmp989, _182
 2357              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2358              		.loc 1 708 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.181, vect__49.176, vect__54.180
 2359      DA
 2360              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2361              		.loc 1 708 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B
 2362      9C118000 
 2362      0000
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU735
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 707 40 discriminator 3 view .LVU736
 708:sieve_extend.c ****         }
 2365              		.loc 1 708 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2367              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.174_325, index: ivtmp.217_483, o
GAS LISTING /tmp/ccqpmidN.s 			page 67


 2368      A412A000 
 2368      0000
 2369              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2370              		.loc 1 708 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.178_332, index: ivtmp.217_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2373              		.loc 1 708 62 discriminator 3 view .LVU740
 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.176, tmp990, _184
 2375              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2376              		.loc 1 708 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.180, tmp991, _182
 2378              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2379              		.loc 1 708 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.181, vect__49.176, vect__54.180
 2380      FE
 2381              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2382              		.loc 1 708 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B
 2383      BC11A000 
 2383      0000
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU744
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 707 40 discriminator 3 view .LVU745
 708:sieve_extend.c ****         }
 2386              		.loc 1 708 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2388              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU747
 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.174_325, index: ivtmp.217_483, of
 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2391              		.loc 1 708 109 discriminator 3 view .LVU748
 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.178_332, index: ivtmp.217_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2394              		.loc 1 708 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.176, tmp992, _184
 2396              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2397              		.loc 1 708 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.180, tmp993, _182
 2399              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2400              		.loc 1 708 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.181, vect__49.176, vect__54.180
GAS LISTING /tmp/ccqpmidN.s 			page 68


 2402              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2403              		.loc 1 708 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B]
 2404      8411C000 
 2404      0000
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU753
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 707 40 discriminator 3 view .LVU754
 708:sieve_extend.c ****         }
 2407              		.loc 1 708 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2409              		.loc 1 708 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.174_325, index: ivtmp.217_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2412              		.loc 1 708 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.178_332, index: ivtmp.217_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2415              		.loc 1 708 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.176, tmp994, _184
 2417              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2418              		.loc 1 708 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.180, tmp995, _182
 2420              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2421              		.loc 1 708 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.181, vect__49.176, vect__54.180
 2422      E3
 2423              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2424              		.loc 1 708 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B
 2425      A411E000 
 2425      0000
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 707 58 is_stmt 1 discriminator 3 view .LVU762
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 707 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.217,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.217, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.171, niters.169
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.171,
GAS LISTING /tmp/ccqpmidN.s 			page 69


 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.169, niters_vector_mult_vf.171
 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.172,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 708:sieve_extend.c ****         }
 2440              		.loc 1 708 13 view .LVU764
 2441              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2442              		.loc 1 708 58 is_stmt 0 view .LVU765
 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2445              		.loc 1 708 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2448              		.loc 1 708 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2451              		.loc 1 708 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2454              		.loc 1 708 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2457              		.loc 1 708 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2460              		.loc 1 707 58 is_stmt 1 view .LVU771
 2461              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 707 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
 2464              	.LVL93:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 707 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 707 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 708:sieve_extend.c ****         }
 2470              		.loc 1 708 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2472              		.loc 1 708 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
GAS LISTING /tmp/ccqpmidN.s 			page 70


 2474              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 707 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2478              		.loc 1 708 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2481              		.loc 1 708 21 view .LVU779
 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2485              		.loc 1 708 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2488              		.loc 1 708 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2491              		.loc 1 708 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 707 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2497              		.loc 1 708 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2499              		.loc 1 707 58 is_stmt 1 view .LVU785
 2500              	.LVL95:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 707 40 view .LVU786
 2502              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 707 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 708:sieve_extend.c ****         }
 2505              		.loc 1 708 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2507              		.loc 1 708 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2510              		.loc 1 708 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
GAS LISTING /tmp/ccqpmidN.s 			page 71


 2513              		.loc 1 708 109 view .LVU791
 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2517              		.loc 1 708 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
 2521              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2522              		.loc 1 708 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 707 58 is_stmt 1 view .LVU794
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 707 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 707 40 is_stmt 0 view .LVU796
 2530              	.LBE265:
 710:sieve_extend.c ****     }
 2531              		.loc 1 710 9 is_stmt 1 view .LVU797
 710:sieve_extend.c ****     }
 2532              		.loc 1 710 39 view .LVU798
 2533              	.LVL98:
 710:sieve_extend.c ****     }
 2534              		.loc 1 710 39 is_stmt 0 view .LVU799
 2535              	.LBE264:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 713 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2537      F8
 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB267:
 2541              	# sieve_extend.c:710:         source_word += loop_distance; copy_word+= loop_distance;
 710:sieve_extend.c ****     }
 2542              		.loc 1 710 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 710:sieve_extend.c ****     }
 2548              		.loc 1 710 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.190, bitarray
 2551              	.LBE267:
GAS LISTING /tmp/ccqpmidN.s 			page 72


 2552              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2553              		.loc 1 714 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2557              		.loc 1 714 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2558      24F0
 2559              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 713 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2564              		.loc 1 714 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2568              		.loc 1 714 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 714:sieve_extend.c ****     }
 2573              		.loc 1 714 9 is_stmt 1 view .LVU808
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 713 48 view .LVU809
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 713 12 view .LVU810
 2576              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 713 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.190,
 2580 103f 0F8266FB 		jb	.L73	#,
 2580      FFFF
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 713 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
GAS LISTING /tmp/ccqpmidN.s 			page 73


 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 714:sieve_extend.c ****     }
 2596              		.loc 1 714 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2598              		.loc 1 714 54 is_stmt 0 view .LVU814
 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2601              		.loc 1 714 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2605              		.loc 1 714 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2609              		.loc 1 714 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.190,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 713 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2615              		.loc 1 713 57 is_stmt 0 view .LVU819
 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 713 12 is_stmt 1 view .LVU820
 2618              	.L203:
 714:sieve_extend.c ****     }
 2619              		.loc 1 714 9 view .LVU821
 2620              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2621              		.loc 1 714 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2625              		.loc 1 714 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 714:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 74


 2628              		.loc 1 714 54 view .LVU824
 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2631              		.loc 1 714 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.190,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 713 48 is_stmt 1 view .LVU826
 2636              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 713 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 713 12 is_stmt 1 view .LVU828
 2640              	.L202:
 714:sieve_extend.c ****     }
 2641              		.loc 1 714 9 view .LVU829
 2642              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2643              		.loc 1 714 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2647              		.loc 1 714 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2651              		.loc 1 714 72 view .LVU832
 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.190,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 713 48 is_stmt 1 view .LVU833
 2656              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 713 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 713 12 is_stmt 1 view .LVU835
 2660              	.L201:
 714:sieve_extend.c ****     }
 2661              		.loc 1 714 9 view .LVU836
 2662              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2663              		.loc 1 714 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
GAS LISTING /tmp/ccqpmidN.s 			page 75


 2665      5608
 2666              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2667              		.loc 1 714 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2671              		.loc 1 714 72 view .LVU839
 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.190,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 713 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 713 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 713 12 is_stmt 1 view .LVU842
 2680              	.L200:
 714:sieve_extend.c ****     }
 2681              		.loc 1 714 9 view .LVU843
 2682              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2683              		.loc 1 714 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2687              		.loc 1 714 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2688      24F0
 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2691              		.loc 1 714 72 view .LVU846
 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.190,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 713 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 713 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 713 12 is_stmt 1 view .LVU849
 2700              	.L199:
 714:sieve_extend.c ****     }
 2701              		.loc 1 714 9 view .LVU850
 2702              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccqpmidN.s 			page 76


 714:sieve_extend.c ****     }
 2703              		.loc 1 714 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2707              		.loc 1 714 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2711              		.loc 1 714 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.190,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 713 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 713 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 713 12 is_stmt 1 view .LVU856
 2720              	.L198:
 714:sieve_extend.c ****     }
 2721              		.loc 1 714 9 view .LVU857
 2722              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2723              		.loc 1 714 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2725      7608
 2726              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2727              		.loc 1 714 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2731              		.loc 1 714 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.190,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 713 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 713 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccqpmidN.s 			page 77


 2739              		.loc 1 713 12 is_stmt 1 view .LVU863
 2740              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 713 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 713 5 view .LVU865
 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 714:sieve_extend.c ****     }
 2749              		.loc 1 714 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2751              		.loc 1 714 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2754              		.loc 1 714 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2757              		.loc 1 714 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.190,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 713 48 is_stmt 1 view .LVU870
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 713 12 view .LVU871
 714:sieve_extend.c ****     }
 2763              		.loc 1 714 9 view .LVU872
 2764              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2765              		.loc 1 714 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2766      4EC8
 2767              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2768              		.loc 1 714 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2771              		.loc 1 714 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 713 48 is_stmt 1 view .LVU876
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccqpmidN.s 			page 78


 2775              		.loc 1 713 12 view .LVU877
 714:sieve_extend.c ****     }
 2776              		.loc 1 714 9 view .LVU878
 2777              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2778              		.loc 1 714 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2781              		.loc 1 714 99 view .LVU880
 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2784              		.loc 1 714 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 713 48 is_stmt 1 view .LVU882
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 713 12 view .LVU883
 714:sieve_extend.c ****     }
 2789              		.loc 1 714 9 view .LVU884
 2790              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2791              		.loc 1 714 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2794              		.loc 1 714 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2797              		.loc 1 714 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2800              		.loc 1 713 48 is_stmt 1 view .LVU888
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 713 12 view .LVU889
 714:sieve_extend.c ****     }
 2802              		.loc 1 714 9 view .LVU890
 2803              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2804              		.loc 1 714 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2807              		.loc 1 714 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
GAS LISTING /tmp/ccqpmidN.s 			page 79


 2809              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2810              		.loc 1 714 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 713 48 is_stmt 1 view .LVU894
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 713 12 view .LVU895
 714:sieve_extend.c ****     }
 2815              		.loc 1 714 9 view .LVU896
 2816              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2817              		.loc 1 714 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2820              		.loc 1 714 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2823              		.loc 1 714 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 713 48 is_stmt 1 view .LVU900
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 713 12 view .LVU901
 714:sieve_extend.c ****     }
 2828              		.loc 1 714 9 view .LVU902
 2829              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2830              		.loc 1 714 99 is_stmt 0 view .LVU903
 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2833              		.loc 1 714 54 view .LVU904
 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2836              		.loc 1 714 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 713 48 is_stmt 1 view .LVU906
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 713 12 view .LVU907
 714:sieve_extend.c ****     }
 2841              		.loc 1 714 9 view .LVU908
 2842              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccqpmidN.s 			page 80


 714:sieve_extend.c ****     }
 2843              		.loc 1 714 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2846              		.loc 1 714 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:714:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 714:sieve_extend.c ****     }
 2849              		.loc 1 714 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 713 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 713 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 713 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:713:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 713:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 713 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
 2865              	.L260:
 688:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 688 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:688:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 688 29 is_stmt 0 view .LVU917
 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:690:                                 & keepmask(copy_start) & chopmask(destination
 690:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 690 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:688:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 688 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 691:sieve_extend.c ****     }
 2879              		.loc 1 691 9 is_stmt 1 view .LVU920
GAS LISTING /tmp/ccqpmidN.s 			page 81


 2880              	# sieve_extend.c:718: }
 2881              		.loc 1 718 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 718 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 718 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 718 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
 2913              	# sieve_extend.c:684:     register counter_t source_word = wordindex(source_start);
 684:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 684 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:698:     copy_word++;
 698:sieve_extend.c **** 
 2917              		.loc 1 698 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 698:sieve_extend.c **** 
 2923              		.loc 1 698 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB268:
 2926              	.LBB266:
 2927              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccqpmidN.s 			page 82


 708:sieve_extend.c ****         }
 2928              		.loc 1 708 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.208
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 708:sieve_extend.c ****         }
 2952              		.loc 1 708 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2954              		.loc 1 708 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2956      2B
 2957              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2958              		.loc 1 708 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2962              		.loc 1 708 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 707 58 is_stmt 1 view .LVU933
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 707 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.208,
 2968              	.L190:
GAS LISTING /tmp/ccqpmidN.s 			page 83


 708:sieve_extend.c ****         }
 2969              		.loc 1 708 13 view .LVU935
 2970              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2971              		.loc 1 708 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 708:sieve_extend.c ****         }
 2974              		.loc 1 708 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2978              		.loc 1 708 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2982              		.loc 1 708 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 707 58 is_stmt 1 view .LVU940
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 707 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.208,
 2988              	.L189:
 708:sieve_extend.c ****         }
 2989              		.loc 1 708 13 view .LVU942
 2990              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2991              		.loc 1 708 62 is_stmt 0 view .LVU943
 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2995              		.loc 1 708 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 2999              		.loc 1 708 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 707 58 is_stmt 1 view .LVU946
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccqpmidN.s 			page 84


 3003              		.loc 1 707 40 view .LVU947
 3004 1354 4983C308 		add	r11, 8	# ivtmp.208,
 3005              	.L188:
 708:sieve_extend.c ****         }
 3006              		.loc 1 708 13 view .LVU948
 3007              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3008              		.loc 1 708 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3010      33
 3011              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3012              		.loc 1 708 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3016              		.loc 1 708 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 707 58 is_stmt 1 view .LVU952
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 707 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.208,
 3022              	.L187:
 708:sieve_extend.c ****         }
 3023              		.loc 1 708 13 view .LVU954
 3024              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3025              		.loc 1 708 62 is_stmt 0 view .LVU955
 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3029              		.loc 1 708 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3033              		.loc 1 708 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 707 58 is_stmt 1 view .LVU958
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 707 40 view .LVU959
GAS LISTING /tmp/ccqpmidN.s 			page 85


 3038 1397 4983C308 		add	r11, 8	# ivtmp.208,
 3039              	.L186:
 708:sieve_extend.c ****         }
 3040              		.loc 1 708 13 view .LVU960
 3041              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3042              		.loc 1 708 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
 3045              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3046              		.loc 1 708 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3050              		.loc 1 708 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 707 58 is_stmt 1 view .LVU964
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 707 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.208,
 3056              	.L185:
 708:sieve_extend.c ****         }
 3057              		.loc 1 708 13 view .LVU966
 3058              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3059              		.loc 1 708 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3060      24F0
 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3063              		.loc 1 708 109 view .LVU968
 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3067              		.loc 1 708 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 707 58 is_stmt 1 view .LVU970
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 707 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.208,
GAS LISTING /tmp/ccqpmidN.s 			page 86


 3073              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 707 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.208, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 707 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3080      F0
 3081              	.L64:
 708:sieve_extend.c ****         }
 3082              		.loc 1 708 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3084              		.loc 1 708 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3087              		.loc 1 708 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3090              		.loc 1 708 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 707 58 is_stmt 1 view .LVU978
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 707 40 view .LVU979
 708:sieve_extend.c ****         }
 3096              		.loc 1 708 13 view .LVU980
 3097              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3098              		.loc 1 708 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3099      4B08
 3100              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3101              		.loc 1 708 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3104              		.loc 1 708 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.208,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.208,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccqpmidN.s 			page 87


 3109              		.loc 1 707 58 is_stmt 1 view .LVU984
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 707 40 view .LVU985
 708:sieve_extend.c ****         }
 3111              		.loc 1 708 13 view .LVU986
 3112              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3113              		.loc 1 708 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3116              		.loc 1 708 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3119              		.loc 1 708 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 707 58 is_stmt 1 view .LVU990
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 707 40 view .LVU991
 708:sieve_extend.c ****         }
 3124              		.loc 1 708 13 view .LVU992
 3125              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3126              		.loc 1 708 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3129              		.loc 1 708 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3130      5D08
 3131              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3132              		.loc 1 708 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.208,
 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.208,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 707 58 is_stmt 1 view .LVU996
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 707 40 view .LVU997
 708:sieve_extend.c ****         }
 3139              		.loc 1 708 13 view .LVU998
 3140              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3141              		.loc 1 708 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccqpmidN.s 			page 88


 708:sieve_extend.c ****         }
 3144              		.loc 1 708 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3147              		.loc 1 708 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3150              		.loc 1 707 58 is_stmt 1 view .LVU1002
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 707 40 view .LVU1003
 708:sieve_extend.c ****         }
 3152              		.loc 1 708 13 view .LVU1004
 3153              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3154              		.loc 1 708 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3157              		.loc 1 708 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3160              		.loc 1 708 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.208,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.208,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 707 58 is_stmt 1 view .LVU1008
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3166              		.loc 1 707 40 view .LVU1009
 708:sieve_extend.c ****         }
 3167              		.loc 1 708 13 view .LVU1010
 3168              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3169              		.loc 1 708 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3172              		.loc 1 708 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3175              		.loc 1 708 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccqpmidN.s 			page 89


 3178              		.loc 1 707 58 is_stmt 1 view .LVU1014
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 707 40 view .LVU1015
 708:sieve_extend.c ****         }
 3180              		.loc 1 708 13 view .LVU1016
 3181              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3182              		.loc 1 708 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3185              		.loc 1 708 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3188              		.loc 1 708 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 707 58 is_stmt 1 view .LVU1020
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 707 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.208,
 3194              	# sieve_extend.c:707:         for (register counter_t i = 0; i <loop_distance; i++) {
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 707 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.208, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
 708:sieve_extend.c ****         }
 3201              		.loc 1 708 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3203              		.loc 1 708 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.174_325, index: ivtmp.217_483, offset: 
 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.217,
 3205      00
 3206              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3207              		.loc 1 708 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.178_332, index: ivtmp.217_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3210              		.loc 1 708 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.176, tmp1071, _184
 3212              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3213              		.loc 1 708 109 view .LVU1027
GAS LISTING /tmp/ccqpmidN.s 			page 90


 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.180, tmp1072, _182
 3215              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3216              		.loc 1 708 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.181, vect__49.176, vect__54.180
 3217      DA
 3218              	# sieve_extend.c:708:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 708:sieve_extend.c ****         }
 3219              		.loc 1 708 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.183_341, index: ivtmp.217_483, offset: 0B], vect
 3220      19
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 707 58 is_stmt 1 view .LVU1030
 707:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 707 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE266:
 3225              	.LBE268:
 3226              		.cfi_endproc
 3227              	.LFE69:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB81:
 719:sieve_extend.c **** 
 720:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 721:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 722:sieve_extend.c ****    
 723:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 724:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 725:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 726:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 727:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 728:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 729:sieve_extend.c **** 
 730:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 731:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 732:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 733:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 734:sieve_extend.c ****         return; // rapid exit for one word variant
 735:sieve_extend.c ****     }
 736:sieve_extend.c **** 
 737:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 738:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 739:sieve_extend.c ****                                 & keepmask(copy_start);
 740:sieve_extend.c ****     
 741:sieve_extend.c ****     copy_word++;
 742:sieve_extend.c **** 
 743:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 744:sieve_extend.c **** 
 745:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccqpmidN.s 			page 91


 747:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 748:sieve_extend.c **** 
 749:sieve_extend.c **** }
 750:sieve_extend.c **** 
 751:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 752:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 753:sieve_extend.c **** 
 754:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 755:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 756:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 757:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 758:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 759:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 760:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 761:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 762:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 763:sieve_extend.c **** 
 764:sieve_extend.c ****     copy_word++;
 765:sieve_extend.c ****     source_word++;
 766:sieve_extend.c **** 
 767:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 768:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 769:sieve_extend.c ****     source_word += distance;
 770:sieve_extend.c ****     copy_word += distance;
 771:sieve_extend.c **** 
 772:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 773:sieve_extend.c **** 
 774:sieve_extend.c ****     #pragma ivdep
 775:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 776:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 777:sieve_extend.c ****     }
 778:sieve_extend.c **** 
 779:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 780:sieve_extend.c **** 
 781:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 782:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 783:sieve_extend.c **** 
 784:sieve_extend.c ****     #pragma ivdep
 785:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 786:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 787:sieve_extend.c **** 
 788:sieve_extend.c ****     #pragma ivdep
 789:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 790:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 791:sieve_extend.c **** 
 792:sieve_extend.c **** 
 793:sieve_extend.c ****  }
 794:sieve_extend.c **** 
 795:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 796:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 797:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 798:sieve_extend.c ****         return; // rapid exit for small sizes
 799:sieve_extend.c ****     }
 800:sieve_extend.c **** 
 801:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 802:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 803:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
GAS LISTING /tmp/ccqpmidN.s 			page 92


 804:sieve_extend.c **** 
 805:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 806:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 807:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 808:sieve_extend.c **** }
 809:sieve_extend.c **** 
 810:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 811:sieve_extend.c ****     counter_t prime = prime_start;
 812:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 813:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 814:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 815:sieve_extend.c **** 
 816:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 817:sieve_extend.c ****     
 818:sieve_extend.c ****     while (start <= block_stop) {
 819:sieve_extend.c ****         step  = prime * 2 + 1;
 820:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 821:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 822:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 823:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 824:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 825:sieve_extend.c ****     }
 826:sieve_extend.c ****     
 827:sieve_extend.c ****     while (start <= block_stop) {
 828:sieve_extend.c ****         step  = prime * 2 + 1;
 829:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 830:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 831:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 832:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 833:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 834:sieve_extend.c ****     }
 835:sieve_extend.c **** 
 836:sieve_extend.c **** //     counter_t start1 = 0; // save value
 837:sieve_extend.c **** //     counter_t step1 = 0; // save value
 838:sieve_extend.c **** //     while (start <= block_stop) {
 839:sieve_extend.c **** //         step  = prime * 2 + 1;
 840:sieve_extend.c **** //         if (step > 64) break;
 841:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 842:sieve_extend.c **** //         start1 = start; // save value
 843:sieve_extend.c **** //         step1 = step; // save value
 844:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 845:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 846:sieve_extend.c **** //         step  = prime * 2 + 1;
 847:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 848:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 849:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 850:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 851:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 852:sieve_extend.c **** //     }
 853:sieve_extend.c **** 
 854:sieve_extend.c ****     while (start <= block_stop) {
 855:sieve_extend.c ****         step  = prime * 2 + 1;
 856:sieve_extend.c ****         if unlikely(step > VECTOR_FASTER) break;
 857:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 858:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 859:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 860:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/ccqpmidN.s 			page 93


 861:sieve_extend.c ****     }
 862:sieve_extend.c **** 
 863:sieve_extend.c ****     while (start <= block_stop) {
 864:sieve_extend.c ****         step  = prime * 2 + 1;
 865:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 866:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 867:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 868:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 869:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 870:sieve_extend.c ****     }
 871:sieve_extend.c **** 
 872:sieve_extend.c ****     while (start <= block_stop) {
 873:sieve_extend.c ****         step  = prime * 2 + 1;
 874:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 875:sieve_extend.c ****         if likely(start <= block_stop)
 876:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 877:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 878:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 879:sieve_extend.c ****     }
 880:sieve_extend.c **** }
 881:sieve_extend.c **** 
 882:sieve_extend.c **** struct block {
 883:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 884:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 885:sieve_extend.c ****     counter_t prime; // next prime to be striped
 886:sieve_extend.c **** };
 887:sieve_extend.c **** 
 888:sieve_extend.c **** // returns prime that could not be handled:
 889:sieve_extend.c **** // start is too large
 890:sieve_extend.c **** // range is too big
 891:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 892:sieve_extend.c ****     register counter_t prime   = 0;
 893:sieve_extend.c ****     counter_t patternsize_bits = 1;
 894:sieve_extend.c ****     counter_t pattern_start    = 0;
 895:sieve_extend.c ****     counter_t range_stop       = block_start;
 896:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 897:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 898:sieve_extend.c **** 
 899:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 900:sieve_extend.c ****     
 901:sieve_extend.c ****     for (;range_stop < block_stop;) {
 902:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 903:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 904:sieve_extend.c ****         if unlikely(start > block_stop) break;
 905:sieve_extend.c **** 
 906:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 907:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 908:sieve_extend.c **** 
 909:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 910:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 911:sieve_extend.c ****         block.pattern_start = pattern_start;
 912:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 913:sieve_extend.c **** 
 914:sieve_extend.c ****         if (patternsize_bits>1) {
 915:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 916:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 917:sieve_extend.c ****         }
GAS LISTING /tmp/ccqpmidN.s 			page 94


 918:sieve_extend.c ****         patternsize_bits *= step;
 919:sieve_extend.c **** 
 920:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 921:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 922:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 923:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 924:sieve_extend.c ****         block.prime = prime;
 925:sieve_extend.c ****     } 
 926:sieve_extend.c **** 
 927:sieve_extend.c ****     return block;
 928:sieve_extend.c **** }
 929:sieve_extend.c **** 
 930:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 931:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 932:sieve_extend.c ****     counter_t prime     = 0;
 933:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 934:sieve_extend.c **** 
 935:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 936:sieve_extend.c **** 
 937:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 938:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 939:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 940:sieve_extend.c ****     prime = block.prime;
 941:sieve_extend.c **** 
 942:sieve_extend.c ****     // #pragma unroll 8
 943:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 944:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 945:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 946:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 947:sieve_extend.c ****     } 
 948:sieve_extend.c **** 
 949:sieve_extend.c ****     return sieve;
 950:sieve_extend.c **** }
 951:sieve_extend.c **** 
 952:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 953:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 954:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 955:sieve_extend.c ****         primeCount++;
 956:sieve_extend.c ****         if (factor < maxFactor/2) {
 957:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 958:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 959:sieve_extend.c ****         }
 960:sieve_extend.c ****     }
 961:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 962:sieve_extend.c **** }
 963:sieve_extend.c **** 
 964:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
 965:sieve_extend.c ****     counter_t primeCount = 1;
 966:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 967:sieve_extend.c ****     return primeCount;
 968:sieve_extend.c **** }
 969:sieve_extend.c **** 
 970:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
 971:sieve_extend.c ****     printf("DeepAnalyzing\n");
 972:sieve_extend.c ****     counter_t warn_prime = 0;
 973:sieve_extend.c ****     counter_t warn_nonprime = 0;
 974:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
GAS LISTING /tmp/ccqpmidN.s 			page 95


 975:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 976:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 977:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 978:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 979:sieve_extend.c ****                 }
 980:sieve_extend.c ****             }
 981:sieve_extend.c ****         }
 982:sieve_extend.c ****         else {
 983:sieve_extend.c ****             counter_t c_prime = 0;
 984:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 985:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 986:sieve_extend.c ****             }
 987:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 988:sieve_extend.c ****         }
 989:sieve_extend.c ****     }
 990:sieve_extend.c **** }
 991:sieve_extend.c **** 
 992:sieve_extend.c **** 
 993:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 994:sieve_extend.c **** 
 995:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 996:sieve_extend.c ****     counter_t valid_primes = 0;
 997:sieve_extend.c ****     switch(sieve->size) {
 998:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 999:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1000:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1001:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1002:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1003:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1004:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1005:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1006:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1007:sieve_extend.c ****         default:            valid_primes= 0;
1008:sieve_extend.c ****     }
1009:sieve_extend.c **** 
1010:sieve_extend.c ****     int valid = (valid_primes == primecount);
1011:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1012:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1013:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1014:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1015:sieve_extend.c ****     }
1016:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1017:sieve_extend.c ****     return (valid);
1018:sieve_extend.c **** }
1019:sieve_extend.c **** 
1020:sieve_extend.c **** void usage(char *name) {
1021:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1022:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1023:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1024:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1025:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1026:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1027:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1028:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1029:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1030:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1031:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
GAS LISTING /tmp/ccqpmidN.s 			page 96


1032:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1033:sieve_extend.c ****     exit(1);
1034:sieve_extend.c **** }
1035:sieve_extend.c **** 
1036:sieve_extend.c **** typedef struct  {
1037:sieve_extend.c ****     counter_t maxints;
1038:sieve_extend.c ****     counter_t blocksize_bits;
1039:sieve_extend.c ****     counter_t blocksize_kb;
1040:sieve_extend.c ****     counter_t free_bits;
1041:sieve_extend.c ****     counter_t smallstep_faster;
1042:sieve_extend.c ****     counter_t mediumstep_faster;
1043:sieve_extend.c ****     counter_t sample_max;
1044:sieve_extend.c ****     double    sample_duration;
1045:sieve_extend.c ****     counter_t passes;
1046:sieve_extend.c ****     double    elapsed_time;
1047:sieve_extend.c ****     double    avg;
1048:sieve_extend.c **** } tuning_result_type;
1049:sieve_extend.c **** 
1050:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1050 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1050 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1051:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1051 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1052:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1052 5 view .LVU1035
1053:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1053 5 view .LVU1036
 3243              	# sieve_extend.c:1053:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1053 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 80[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      50
 3246 14f9 31C0     		xor	eax, eax	# <retval>
 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 80[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3247      50
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1054: }
1054:sieve_extend.c **** }
 3251              		.loc 1 1054 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE81:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB63:
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 412 159 is_stmt 1 view -0
 3262              		.cfi_startproc
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 412 159 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccqpmidN.s 			page 97


 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:422:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 422:sieve_extend.c **** 
 3268              		.loc 1 422 42 view .LVU1041
 3269 1511 4989D0   		mov	r8, rdx	# tmp181, step
 3270 1514 49C1E008 		sal	r8, 8	# tmp181,
 3271              	# sieve_extend.c:412: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3272              		.loc 1 412 159 view .LVU1042
 3273 1518 4889E5   		mov	rbp, rsp	#,
 3274              		.cfi_def_cfa_register 6
 3275 151b 4154     		push	r12	#
 3276              	# sieve_extend.c:422:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 422:sieve_extend.c **** 
 3277              		.loc 1 422 42 view .LVU1043
 3278 151d 4901F0   		add	r8, rsi	# tmp182, range_start
 3279              	# sieve_extend.c:412: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3280              		.loc 1 412 159 view .LVU1044
 3281 1520 53       		push	rbx	#
 3282 1521 4883E4E0 		and	rsp, -32	#,
 3283 1525 488D6424 		lea	rsp, -64[rsp]	#,
 3283      C0
 3284              		.cfi_offset 12, -24
 3285              		.cfi_offset 3, -32
 3286              	# sieve_extend.c:412: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3287              		.loc 1 412 159 view .LVU1045
 3288 152a 64488B04 		mov	rax, QWORD PTR fs:40	# tmp308, MEM[(<address-space-1> long unsigned int *)40B]
 3288      25280000 
 3288      00
 3289 1533 48894424 		mov	QWORD PTR 56[rsp], rax	# D.6500, tmp308
 3289      38
 3290 1538 31C0     		xor	eax, eax	# tmp308
 413:sieve_extend.c **** 
 3291              		.loc 1 413 5 is_stmt 1 view .LVU1046
 421:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 3292              		.loc 1 421 5 view .LVU1047
 3293              	.LVL117:
 422:sieve_extend.c **** 
 3294              		.loc 1 422 5 view .LVU1048
 3295              	# sieve_extend.c:422:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 422:sieve_extend.c **** 
 3296              		.loc 1 422 21 is_stmt 0 view .LVU1049
 3297 153a 4939C8   		cmp	r8, rcx	# tmp182, range_stop
 3298 153d 4C0F47C1 		cmova	r8, rcx	# tmp182,, range_stop_unique, range_stop
 3299              	.LVL118:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3300              		.loc 1 425 5 is_stmt 1 view .LVU1050
 3301              	.LBB269:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3302              		.loc 1 425 10 view .LVU1051
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3303              		.loc 1 425 41 view .LVU1052
 3304              	# sieve_extend.c:425:     for (counter_t index = range_start; index < range_stop_unique;) {
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3305              		.loc 1 425 5 is_stmt 0 view .LVU1053
GAS LISTING /tmp/ccqpmidN.s 			page 98


 3306 1541 4C39C6   		cmp	rsi, r8	# range_start, range_stop_unique
 3307 1544 0F83EA02 		jnb	.L266	#,
 3307      0000
 3308              	.LBB270:
 3309              	# sieve_extend.c:427:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 427:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3310              		.loc 1 427 30 view .LVU1054
 3311 154a C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp205
 3312              	# sieve_extend.c:437:         const counter_t range_stop_vector = vectorindex(range_stop);
 437:sieve_extend.c ****         
 3313              		.loc 1 437 25 view .LVU1055
 3314 154e 4989C9   		mov	r9, rcx	# range_stop_vector, range_stop
 3315 1551 49C1E908 		shr	r9, 8	# range_stop_vector,
 3316              	# sieve_extend.c:445:         counter_t range_stop_word = wordindex(range_stop);
 445:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3317              		.loc 1 445 19 view .LVU1056
 3318 1555 48C1E906 		shr	rcx, 6	# range_stop,
 3319              	.LVL119:
 445:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3320              		.loc 1 445 19 view .LVU1057
 3321 1559 4883FA01 		cmp	rdx, 1	# step,
 3322 155d 4989CA   		mov	r10, rcx	# range_stop_word, range_stop
 3323              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3324              		.loc 1 431 31 view .LVU1058
 3325 1560 B9010000 		mov	ecx, 1	# tmp209,
 3325      00
 3326 1565 0F853103 		jne	.L383	#,
 3326      0000
 3327              	.LVL120:
 3328 156b 0F1F4400 		.p2align 4
 3328      00
 3329              		.p2align 3
 3330              	.L268:
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3331              		.loc 1 426 9 is_stmt 1 view .LVU1059
 3332              	# sieve_extend.c:426:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3333              		.loc 1 426 54 is_stmt 0 view .LVU1060
 3334 1570 4889F2   		mov	rdx, rsi	# tmp204, range_start
 3335              	# sieve_extend.c:428:         register counter_t word = wordindex(index) - current_vector_start_wor
 428:sieve_extend.c ****         
 3336              		.loc 1 428 35 view .LVU1061
 3337 1573 4889F0   		mov	rax, rsi	# tmp206, range_start
 3338              	# sieve_extend.c:426:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3339              		.loc 1 426 54 view .LVU1062
 3340 1576 48C1EA08 		shr	rdx, 8	# tmp204,
 3341 157a 4D89C3   		mov	r11, r8	# tmp230, range_stop_unique
 3342              	# sieve_extend.c:428:         register counter_t word = wordindex(index) - current_vector_start_wor
 428:sieve_extend.c ****         
 3343              		.loc 1 428 35 view .LVU1063
 3344 157d 48C1E806 		shr	rax, 6	# tmp206,
 3345 1581 4929F3   		sub	r11, rsi	# tmp230, range_start
 3346              	# sieve_extend.c:426:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3347              		.loc 1 426 25 view .LVU1064
GAS LISTING /tmp/ccqpmidN.s 			page 99


 3348 1584 48C1E202 		sal	rdx, 2	# current_vector_start_word,
 3349              	.LVL121:
 427:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3350              		.loc 1 427 9 is_stmt 1 view .LVU1065
 3351              	# sieve_extend.c:427:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 427:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3352              		.loc 1 427 30 is_stmt 0 view .LVU1066
 3353 1588 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp205
 3353      24
 428:sieve_extend.c ****         
 3354              		.loc 1 428 9 is_stmt 1 view .LVU1067
 3355              	# sieve_extend.c:428:         register counter_t word = wordindex(index) - current_vector_start_wor
 428:sieve_extend.c ****         
 3356              		.loc 1 428 28 is_stmt 0 view .LVU1068
 3357 158d 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3358              	.LVL122:
 428:sieve_extend.c ****         
 3359              		.loc 1 428 28 view .LVU1069
 3360 1590 4183E303 		and	r11d, 3	# tmp231,
 3361 1594 747A     		je	.L279	#,
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3362              		.loc 1 430 9 is_stmt 1 view .LVU1070
 431:sieve_extend.c ****             index += step;
 3363              		.loc 1 431 13 view .LVU1071
 3364              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3365              		.loc 1 431 31 is_stmt 0 view .LVU1072
 3366 1596 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp265, tmp209, range_start
 3366      D9
 3367              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3368              		.loc 1 432 19 view .LVU1073
 3369 159b 4883C601 		add	rsi, 1	# range_start,
 3370              	.LVL123:
 3371              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3372              		.loc 1 431 28 view .LVU1074
 3373 159f 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp265
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3374              		.loc 1 432 13 is_stmt 1 view .LVU1075
 3375              	.LVL124:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3376              		.loc 1 433 13 view .LVU1076
 3377              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3378              		.loc 1 433 20 is_stmt 0 view .LVU1077
 3379 15a3 4889F0   		mov	rax, rsi	# tmp266, range_start
 3380              	.LVL125:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3381              		.loc 1 433 20 view .LVU1078
 3382 15a6 48C1E806 		shr	rax, 6	# tmp266,
 3383              	.LVL126:
 3384              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3385              		.loc 1 433 18 view .LVU1079
 3386 15aa 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3387              	.LVL127:
GAS LISTING /tmp/ccqpmidN.s 			page 100


 434:sieve_extend.c ****         
 3388              		.loc 1 434 17 is_stmt 1 view .LVU1080
 3389              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3390              		.loc 1 434 9 is_stmt 0 view .LVU1081
 3391 15ad 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3392 15b0 0F82DA00 		jb	.L290	#,
 3392      0000
 3393 15b6 4883F803 		cmp	rax, 3	# word,
 3394 15ba 0F87D000 		ja	.L290	#,
 3394      0000
 3395 15c0 4983FB01 		cmp	r11, 1	# tmp231,
 3396 15c4 744A     		je	.L279	#,
 3397 15c6 4983FB02 		cmp	r11, 2	# tmp231,
 3398 15ca 7421     		je	.L356	#,
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3399              		.loc 1 430 9 is_stmt 1 view .LVU1082
 431:sieve_extend.c ****             index += step;
 3400              		.loc 1 431 13 view .LVU1083
 3401              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3402              		.loc 1 431 31 is_stmt 0 view .LVU1084
 3403 15cc C462C9F7 		shlx	r12, rcx, rsi	# tmp269, tmp209, range_start
 3403      E1
 3404              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3405              		.loc 1 432 19 view .LVU1085
 3406 15d1 4883C601 		add	rsi, 1	# range_start,
 3407              	.LVL128:
 3408              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3409              		.loc 1 431 28 view .LVU1086
 3410 15d5 4C0924C4 		or	QWORD PTR [rsp+rax*8], r12	# quadmask, tmp269
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3411              		.loc 1 432 13 is_stmt 1 view .LVU1087
 3412              	.LVL129:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3413              		.loc 1 433 13 view .LVU1088
 3414              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3415              		.loc 1 433 20 is_stmt 0 view .LVU1089
 3416 15d9 4889F0   		mov	rax, rsi	# tmp270, range_start
 3417              	.LVL130:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3418              		.loc 1 433 20 view .LVU1090
 3419 15dc 48C1E806 		shr	rax, 6	# tmp270,
 3420              	.LVL131:
 3421              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3422              		.loc 1 433 18 view .LVU1091
 3423 15e0 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3424              	.LVL132:
 434:sieve_extend.c ****         
 3425              		.loc 1 434 17 is_stmt 1 view .LVU1092
 3426              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3427              		.loc 1 434 9 is_stmt 0 view .LVU1093
GAS LISTING /tmp/ccqpmidN.s 			page 101


 3428 15e3 4883F803 		cmp	rax, 3	# word,
 3429 15e7 0F87A300 		ja	.L290	#,
 3429      0000
 3430              	.L356:
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3431              		.loc 1 430 9 is_stmt 1 view .LVU1094
 431:sieve_extend.c ****             index += step;
 3432              		.loc 1 431 13 view .LVU1095
 3433              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3434              		.loc 1 431 31 is_stmt 0 view .LVU1096
 3435 15ed C462C9F7 		shlx	r11, rcx, rsi	# tmp273, tmp209, range_start
 3435      D9
 3436              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3437              		.loc 1 432 19 view .LVU1097
 3438 15f2 4883C601 		add	rsi, 1	# range_start,
 3439              	.LVL133:
 3440              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3441              		.loc 1 431 28 view .LVU1098
 3442 15f6 4C091CC4 		or	QWORD PTR [rsp+rax*8], r11	# quadmask, tmp273
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3443              		.loc 1 432 13 is_stmt 1 view .LVU1099
 3444              	.LVL134:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3445              		.loc 1 433 13 view .LVU1100
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3446              		.loc 1 433 13 view .LVU1101
 3447              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3448              		.loc 1 433 20 is_stmt 0 view .LVU1102
 3449 15fa 4889F0   		mov	rax, rsi	# tmp288, range_start
 3450              	.LVL135:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3451              		.loc 1 433 20 view .LVU1103
 3452 15fd 48C1E806 		shr	rax, 6	# tmp288,
 3453              	.LVL136:
 3454              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3455              		.loc 1 433 18 view .LVU1104
 3456 1601 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3457              	.LVL137:
 434:sieve_extend.c ****         
 3458              		.loc 1 434 17 is_stmt 1 view .LVU1105
 3459              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3460              		.loc 1 434 9 is_stmt 0 view .LVU1106
 3461 1604 4883F803 		cmp	rax, 3	# word,
 3462 1608 0F878200 		ja	.L290	#,
 3462      0000
 3463 160e 6690     		.p2align 4
 3464              		.p2align 3
 3465              	.L279:
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3466              		.loc 1 430 9 is_stmt 1 view .LVU1107
 431:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccqpmidN.s 			page 102


 3467              		.loc 1 431 13 view .LVU1108
 3468              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3469              		.loc 1 432 19 is_stmt 0 view .LVU1109
 3470 1610 4C8D6601 		lea	r12, 1[rsi]	# tmp232,
 3471              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3472              		.loc 1 431 31 view .LVU1110
 3473 1614 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp208, tmp209, range_start
 3473      D9
 3474              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3475              		.loc 1 433 20 view .LVU1111
 3476 1619 4D89E3   		mov	r11, r12	# tmp210, range_start
 3477              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3478              		.loc 1 431 28 view .LVU1112
 3479 161c 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp208
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3480              		.loc 1 432 13 is_stmt 1 view .LVU1113
 3481              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3482              		.loc 1 433 20 is_stmt 0 view .LVU1114
 3483 1620 49C1EB06 		shr	r11, 6	# tmp210,
 3484              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3485              		.loc 1 432 19 view .LVU1115
 3486 1624 4C89E6   		mov	rsi, r12	# range_start, tmp232
 3487              	.LVL138:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3488              		.loc 1 433 13 is_stmt 1 view .LVU1116
 3489              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3490              		.loc 1 433 18 is_stmt 0 view .LVU1117
 3491 1627 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 434:sieve_extend.c ****         
 3492              		.loc 1 434 17 is_stmt 1 view .LVU1118
 3493              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3494              		.loc 1 434 9 is_stmt 0 view .LVU1119
 3495 162a 4D39E0   		cmp	r8, r12	# range_stop_unique, range_start
 3496 162d 7261     		jb	.L290	#,
 434:sieve_extend.c ****         
 3497              		.loc 1 434 9 view .LVU1120
 3498 162f 4983FB03 		cmp	r11, 3	# word,
 3499 1633 775B     		ja	.L290	#,
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3500              		.loc 1 430 9 is_stmt 1 view .LVU1121
 431:sieve_extend.c ****             index += step;
 3501              		.loc 1 431 13 view .LVU1122
 3502              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3503              		.loc 1 432 19 is_stmt 0 view .LVU1123
 3504 1635 4883C601 		add	rsi, 1	# range_start,
 3505              	.LVL139:
 3506              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccqpmidN.s 			page 103


 3507              		.loc 1 431 31 view .LVU1124
 3508 1639 C4E299F7 		shlx	rax, rcx, r12	# tmp277, tmp209, range_start
 3508      C1
 3509              	.LVL140:
 3510              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3511              		.loc 1 433 20 view .LVU1125
 3512 163e 4889F3   		mov	rbx, rsi	# tmp278, range_start
 3513              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3514              		.loc 1 431 28 view .LVU1126
 3515 1641 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp277
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3516              		.loc 1 432 13 is_stmt 1 view .LVU1127
 3517              	.LVL141:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3518              		.loc 1 433 13 view .LVU1128
 3519              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3520              		.loc 1 433 20 is_stmt 0 view .LVU1129
 3521 1645 48C1EB06 		shr	rbx, 6	# tmp278,
 3522              	.LVL142:
 3523              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3524              		.loc 1 433 18 view .LVU1130
 3525 1649 4829D3   		sub	rbx, rdx	# word, current_vector_start_word
 434:sieve_extend.c ****         
 3526              		.loc 1 434 17 is_stmt 1 view .LVU1131
 3527              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3528              		.loc 1 434 9 is_stmt 0 view .LVU1132
 3529 164c 4883FB03 		cmp	rbx, 3	# word,
 3530 1650 773E     		ja	.L290	#,
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3531              		.loc 1 430 9 is_stmt 1 view .LVU1133
 431:sieve_extend.c ****             index += step;
 3532              		.loc 1 431 13 view .LVU1134
 3533              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3534              		.loc 1 431 31 is_stmt 0 view .LVU1135
 3535 1652 C4E2C9F7 		shlx	rsi, rcx, rsi	# tmp282, tmp209, range_start
 3535      F1
 3536              	.LVL143:
 3537              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3538              		.loc 1 431 28 view .LVU1136
 3539 1657 480934DC 		or	QWORD PTR [rsp+rbx*8], rsi	# quadmask, tmp282
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3540              		.loc 1 432 13 is_stmt 1 view .LVU1137
 3541              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3542              		.loc 1 432 19 is_stmt 0 view .LVU1138
 3543 165b 498D7424 		lea	rsi, 2[r12]	# range_start,
 3543      02
 3544              	.LVL144:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3545              		.loc 1 433 13 is_stmt 1 view .LVU1139
GAS LISTING /tmp/ccqpmidN.s 			page 104


 3546              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3547              		.loc 1 433 20 is_stmt 0 view .LVU1140
 3548 1660 4989F3   		mov	r11, rsi	# tmp283, range_start
 3549 1663 49C1EB06 		shr	r11, 6	# tmp283,
 3550              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3551              		.loc 1 433 18 view .LVU1141
 3552 1667 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 434:sieve_extend.c ****         
 3553              		.loc 1 434 17 is_stmt 1 view .LVU1142
 3554              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3555              		.loc 1 434 9 is_stmt 0 view .LVU1143
 3556 166a 4983FB03 		cmp	r11, 3	# word,
 3557 166e 7720     		ja	.L290	#,
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3558              		.loc 1 430 9 is_stmt 1 view .LVU1144
 431:sieve_extend.c ****             index += step;
 3559              		.loc 1 431 13 view .LVU1145
 3560              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3561              		.loc 1 431 31 is_stmt 0 view .LVU1146
 3562 1670 C4E2C9F7 		shlx	rax, rcx, rsi	# tmp287, tmp209, range_start
 3562      C1
 3563              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3564              		.loc 1 432 19 view .LVU1147
 3565 1675 498D7424 		lea	rsi, 3[r12]	# range_start,
 3565      03
 3566              	.LVL145:
 3567              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3568              		.loc 1 431 28 view .LVU1148
 3569 167a 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp287
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3570              		.loc 1 432 13 is_stmt 1 view .LVU1149
 3571              	.LVL146:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3572              		.loc 1 433 13 view .LVU1150
 3573              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3574              		.loc 1 433 20 is_stmt 0 view .LVU1151
 3575 167e 4889F0   		mov	rax, rsi	# tmp288, range_start
 3576 1681 48C1E806 		shr	rax, 6	# tmp288,
 3577              	.LVL147:
 3578              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3579              		.loc 1 433 18 view .LVU1152
 3580 1685 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3581              	.LVL148:
 434:sieve_extend.c ****         
 3582              		.loc 1 434 17 is_stmt 1 view .LVU1153
 3583              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3584              		.loc 1 434 9 is_stmt 0 view .LVU1154
 3585 1688 4883F803 		cmp	rax, 3	# word,
GAS LISTING /tmp/ccqpmidN.s 			page 105


 3586 168c 7682     		jbe	.L279	#,
 3587              	.LVL149:
 3588 168e 6690     		.p2align 4
 3589              		.p2align 3
 3590              	.L290:
 436:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3591              		.loc 1 436 9 is_stmt 1 view .LVU1155
 3592              	# sieve_extend.c:436:         register counter_t current_vector = current_vector_start_word>>2;
 436:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3593              		.loc 1 436 28 is_stmt 0 view .LVU1156
 3594 1690 48C1EA02 		shr	rdx, 2	# current_vector,
 3595              	.LVL150:
 437:sieve_extend.c ****         
 3596              		.loc 1 437 9 is_stmt 1 view .LVU1157
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3597              		.loc 1 440 9 view .LVU1158
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3598              		.loc 1 440 15 view .LVU1159
 3599              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3600              		.loc 1 440 9 is_stmt 0 view .LVU1160
 3601 1694 4939D1   		cmp	r9, rdx	# range_stop_vector, current_vector
 3602 1697 0F827E01 		jb	.L281	#,
 3602      0000
 3603 169d 4989D4   		mov	r12, rdx	# tmp215, current_vector
 3604 16a0 4C89CB   		mov	rbx, r9	# tmp226, range_stop_vector
 3605 16a3 49C1E405 		sal	r12, 5	# tmp215,
 3606 16a7 4829D3   		sub	rbx, rdx	# tmp226, current_vector
 3607              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3608              		.loc 1 441 45 view .LVU1161
 3609 16aa C57D6F14 		vmovdqa	ymm10, YMMWORD PTR [rsp]	# quadmask.53_105, quadmask
 3609      24
 3610 16af 4901FC   		add	r12, rdi	# ivtmp.240, bitarray_word
 3611              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3612              		.loc 1 440 67 view .LVU1162
 3613 16b2 4883C201 		add	rdx, 1	# current_vector,
 3614              	.LVL151:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3615              		.loc 1 440 67 view .LVU1163
 3616 16b6 83E307   		and	ebx, 7	# tmp227,
 441:sieve_extend.c ****         }
 3617              		.loc 1 441 13 is_stmt 1 view .LVU1164
 3618              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3619              		.loc 1 441 45 is_stmt 0 view .LVU1165
 3620 16b9 C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR [r12]	# tmp216, quadmask.53_105, MEM[base: _153, offset: 0B]
 3620      1C24
 3621              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3622              		.loc 1 440 9 view .LVU1166
 3623 16bf 4939D1   		cmp	r9, rdx	# range_stop_vector, current_vector
 3624              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3625              		.loc 1 441 45 view .LVU1167
 3626 16c2 C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm11	# MEM[base: _153, offset: 0B], tmp216
GAS LISTING /tmp/ccqpmidN.s 			page 106


 3626      1C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3627              		.loc 1 440 52 is_stmt 1 view .LVU1168
 3628              	.LVL152:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3629              		.loc 1 440 15 view .LVU1169
 3630 16c8 4D8D5C24 		lea	r11, 32[r12]	# ivtmp.240,
 3630      20
 3631              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3632              		.loc 1 440 9 is_stmt 0 view .LVU1170
 3633 16cd 0F824801 		jb	.L281	#,
 3633      0000
 3634 16d3 4885DB   		test	rbx, rbx	# tmp227
 3635 16d6 0F84B400 		je	.L282	#,
 3635      0000
 3636 16dc 4883FB01 		cmp	rbx, 1	# tmp227,
 3637 16e0 0F848F00 		je	.L349	#,
 3637      0000
 3638 16e6 4883FB02 		cmp	rbx, 2	# tmp227,
 3639 16ea 7477     		je	.L350	#,
 3640 16ec 4883FB03 		cmp	rbx, 3	# tmp227,
 3641 16f0 745F     		je	.L351	#,
 3642 16f2 4883FB04 		cmp	rbx, 4	# tmp227,
 3643 16f6 7447     		je	.L352	#,
 3644 16f8 4883FB05 		cmp	rbx, 5	# tmp227,
 3645 16fc 742F     		je	.L353	#,
 3646 16fe 4883FB06 		cmp	rbx, 6	# tmp227,
 3647 1702 7417     		je	.L354	#,
 441:sieve_extend.c ****         }
 3648              		.loc 1 441 13 is_stmt 1 view .LVU1171
 3649              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3650              		.loc 1 441 45 is_stmt 0 view .LVU1172
 3651 1704 C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 32[r12]	# tmp258, quadmask.53_105, MEM[base: _153, offset: 0B]
 3651      642420
 3652              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3653              		.loc 1 440 67 view .LVU1173
 3654 170b 4883C201 		add	rdx, 1	# current_vector,
 3655              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3656              		.loc 1 441 45 view .LVU1174
 3657 170f C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm12	# MEM[base: _153, offset: 0B], tmp258
 3657      642420
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3658              		.loc 1 440 52 is_stmt 1 view .LVU1175
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3659              		.loc 1 440 15 view .LVU1176
 3660 1716 4D8D5C24 		lea	r11, 64[r12]	# ivtmp.240,
 3660      40
 3661              	.L354:
 441:sieve_extend.c ****         }
 3662              		.loc 1 441 13 view .LVU1177
 3663              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3664              		.loc 1 441 45 is_stmt 0 view .LVU1178
GAS LISTING /tmp/ccqpmidN.s 			page 107


 3665 171b C4412DEB 		vpor	ymm13, ymm10, YMMWORD PTR [r11]	# tmp259, quadmask.53_105, MEM[base: _153, offset: 0B]
 3665      2B
 3666              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3667              		.loc 1 440 67 view .LVU1179
 3668 1720 4883C201 		add	rdx, 1	# current_vector,
 3669              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3670              		.loc 1 441 45 view .LVU1180
 3671 1724 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm13	# MEM[base: _153, offset: 0B], tmp259
 3671      2B
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3672              		.loc 1 440 52 is_stmt 1 view .LVU1181
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3673              		.loc 1 440 15 view .LVU1182
 3674 1729 4983C320 		add	r11, 32	# ivtmp.240,
 3675              	.L353:
 441:sieve_extend.c ****         }
 3676              		.loc 1 441 13 view .LVU1183
 3677              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3678              		.loc 1 441 45 is_stmt 0 view .LVU1184
 3679 172d C4412DEB 		vpor	ymm14, ymm10, YMMWORD PTR [r11]	# tmp260, quadmask.53_105, MEM[base: _153, offset: 0B]
 3679      33
 3680              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3681              		.loc 1 440 67 view .LVU1185
 3682 1732 4883C201 		add	rdx, 1	# current_vector,
 3683              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3684              		.loc 1 441 45 view .LVU1186
 3685 1736 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm14	# MEM[base: _153, offset: 0B], tmp260
 3685      33
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3686              		.loc 1 440 52 is_stmt 1 view .LVU1187
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3687              		.loc 1 440 15 view .LVU1188
 3688 173b 4983C320 		add	r11, 32	# ivtmp.240,
 3689              	.L352:
 441:sieve_extend.c ****         }
 3690              		.loc 1 441 13 view .LVU1189
 3691              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3692              		.loc 1 441 45 is_stmt 0 view .LVU1190
 3693 173f C4412DEB 		vpor	ymm15, ymm10, YMMWORD PTR [r11]	# tmp261, quadmask.53_105, MEM[base: _153, offset: 0B]
 3693      3B
 3694              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3695              		.loc 1 440 67 view .LVU1191
 3696 1744 4883C201 		add	rdx, 1	# current_vector,
 3697              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3698              		.loc 1 441 45 view .LVU1192
 3699 1748 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm15	# MEM[base: _153, offset: 0B], tmp261
 3699      3B
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3700              		.loc 1 440 52 is_stmt 1 view .LVU1193
GAS LISTING /tmp/ccqpmidN.s 			page 108


 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3701              		.loc 1 440 15 view .LVU1194
 3702 174d 4983C320 		add	r11, 32	# ivtmp.240,
 3703              	.L351:
 441:sieve_extend.c ****         }
 3704              		.loc 1 441 13 view .LVU1195
 3705              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3706              		.loc 1 441 45 is_stmt 0 view .LVU1196
 3707 1751 C4C12DEB 		vpor	ymm0, ymm10, YMMWORD PTR [r11]	# tmp262, quadmask.53_105, MEM[base: _153, offset: 0B]
 3707      03
 3708              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3709              		.loc 1 440 67 view .LVU1197
 3710 1756 4883C201 		add	rdx, 1	# current_vector,
 3711              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3712              		.loc 1 441 45 view .LVU1198
 3713 175a C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm0	# MEM[base: _153, offset: 0B], tmp262
 3713      03
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3714              		.loc 1 440 52 is_stmt 1 view .LVU1199
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3715              		.loc 1 440 15 view .LVU1200
 3716 175f 4983C320 		add	r11, 32	# ivtmp.240,
 3717              	.L350:
 441:sieve_extend.c ****         }
 3718              		.loc 1 441 13 view .LVU1201
 3719              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3720              		.loc 1 441 45 is_stmt 0 view .LVU1202
 3721 1763 C4C12DEB 		vpor	ymm1, ymm10, YMMWORD PTR [r11]	# tmp263, quadmask.53_105, MEM[base: _153, offset: 0B]
 3721      0B
 3722              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3723              		.loc 1 440 67 view .LVU1203
 3724 1768 4883C201 		add	rdx, 1	# current_vector,
 3725              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3726              		.loc 1 441 45 view .LVU1204
 3727 176c C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm1	# MEM[base: _153, offset: 0B], tmp263
 3727      0B
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3728              		.loc 1 440 52 is_stmt 1 view .LVU1205
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3729              		.loc 1 440 15 view .LVU1206
 3730 1771 4983C320 		add	r11, 32	# ivtmp.240,
 3731              	.L349:
 441:sieve_extend.c ****         }
 3732              		.loc 1 441 13 view .LVU1207
 3733              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3734              		.loc 1 441 45 is_stmt 0 view .LVU1208
 3735 1775 C4C12DEB 		vpor	ymm3, ymm10, YMMWORD PTR [r11]	# tmp264, quadmask.53_105, MEM[base: _153, offset: 0B]
 3735      1B
 3736              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccqpmidN.s 			page 109


 3737              		.loc 1 440 67 view .LVU1209
 3738 177a 4883C201 		add	rdx, 1	# current_vector,
 3739              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3740              		.loc 1 441 45 view .LVU1210
 3741 177e C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm3	# MEM[base: _153, offset: 0B], tmp264
 3741      1B
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3742              		.loc 1 440 52 is_stmt 1 view .LVU1211
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3743              		.loc 1 440 15 view .LVU1212
 3744 1783 4983C320 		add	r11, 32	# ivtmp.240,
 3745              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3746              		.loc 1 440 9 is_stmt 0 view .LVU1213
 3747 1787 4939D1   		cmp	r9, rdx	# range_stop_vector, current_vector
 3748 178a 0F828B00 		jb	.L281	#,
 3748      0000
 3749              	.L282:
 441:sieve_extend.c ****         }
 3750              		.loc 1 441 13 is_stmt 1 view .LVU1214
 3751              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3752              		.loc 1 441 45 is_stmt 0 view .LVU1215
 3753 1790 C4C12DEB 		vpor	ymm4, ymm10, YMMWORD PTR [r11]	# tmp236, quadmask.53_105, MEM[base: _153, offset: 0B]
 3753      23
 3754 1795 C4C12DEB 		vpor	ymm5, ymm10, YMMWORD PTR 32[r11]	# tmp239, quadmask.53_105, MEM[base: _153, offset: 0B]
 3754      6B20
 3755 179b C4C12DEB 		vpor	ymm6, ymm10, YMMWORD PTR 64[r11]	# tmp242, quadmask.53_105, MEM[base: _153, offset: 0B]
 3755      7340
 3756 17a1 C4C12DEB 		vpor	ymm7, ymm10, YMMWORD PTR 96[r11]	# tmp245, quadmask.53_105, MEM[base: _153, offset: 0B]
 3756      7B60
 3757 17a7 C4412DEB 		vpor	ymm8, ymm10, YMMWORD PTR 128[r11]	# tmp248, quadmask.53_105, MEM[base: _153, offset: 0B]
 3757      83800000 
 3757      00
 3758 17b0 C4412DEB 		vpor	ymm9, ymm10, YMMWORD PTR 160[r11]	# tmp251, quadmask.53_105, MEM[base: _153, offset: 0B]
 3758      8BA00000 
 3758      00
 3759 17b9 C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR 192[r11]	# tmp254, quadmask.53_105, MEM[base: _153, offset: 0B]
 3759      9BC00000 
 3759      00
 3760 17c2 C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 224[r11]	# tmp257, quadmask.53_105, MEM[base: _153, offset: 0B]
 3760      A3E00000 
 3760      00
 3761              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3762              		.loc 1 440 67 view .LVU1216
 3763 17cb 4883C208 		add	rdx, 8	# current_vector,
 3764 17cf 4981C300 		add	r11, 256	# ivtmp.240,
 3764      010000
 3765              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3766              		.loc 1 441 45 view .LVU1217
 3767 17d6 C4C17D7F 		vmovdqa	YMMWORD PTR -256[r11], ymm4	# MEM[base: _153, offset: 0B], tmp236
 3767      A300FFFF 
 3767      FF
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccqpmidN.s 			page 110


 3768              		.loc 1 440 52 is_stmt 1 view .LVU1218
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3769              		.loc 1 440 15 view .LVU1219
 441:sieve_extend.c ****         }
 3770              		.loc 1 441 13 view .LVU1220
 3771              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3772              		.loc 1 441 45 is_stmt 0 view .LVU1221
 3773 17df C4C17D7F 		vmovdqa	YMMWORD PTR -224[r11], ymm5	# MEM[base: _153, offset: 0B], tmp239
 3773      AB20FFFF 
 3773      FF
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3774              		.loc 1 440 52 is_stmt 1 view .LVU1222
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3775              		.loc 1 440 15 view .LVU1223
 441:sieve_extend.c ****         }
 3776              		.loc 1 441 13 view .LVU1224
 3777              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3778              		.loc 1 441 45 is_stmt 0 view .LVU1225
 3779 17e8 C4C17D7F 		vmovdqa	YMMWORD PTR -192[r11], ymm6	# MEM[base: _153, offset: 0B], tmp242
 3779      B340FFFF 
 3779      FF
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3780              		.loc 1 440 52 is_stmt 1 view .LVU1226
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3781              		.loc 1 440 15 view .LVU1227
 441:sieve_extend.c ****         }
 3782              		.loc 1 441 13 view .LVU1228
 3783              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3784              		.loc 1 441 45 is_stmt 0 view .LVU1229
 3785 17f1 C4C17D7F 		vmovdqa	YMMWORD PTR -160[r11], ymm7	# MEM[base: _153, offset: 0B], tmp245
 3785      BB60FFFF 
 3785      FF
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3786              		.loc 1 440 52 is_stmt 1 view .LVU1230
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3787              		.loc 1 440 15 view .LVU1231
 441:sieve_extend.c ****         }
 3788              		.loc 1 441 13 view .LVU1232
 3789              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3790              		.loc 1 441 45 is_stmt 0 view .LVU1233
 3791 17fa C4417D7F 		vmovdqa	YMMWORD PTR -128[r11], ymm8	# MEM[base: _153, offset: 0B], tmp248
 3791      4380
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3792              		.loc 1 440 52 is_stmt 1 view .LVU1234
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3793              		.loc 1 440 15 view .LVU1235
 441:sieve_extend.c ****         }
 3794              		.loc 1 441 13 view .LVU1236
 3795              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3796              		.loc 1 441 45 is_stmt 0 view .LVU1237
 3797 1800 C4417D7F 		vmovdqa	YMMWORD PTR -96[r11], ymm9	# MEM[base: _153, offset: 0B], tmp251
 3797      4BA0
GAS LISTING /tmp/ccqpmidN.s 			page 111


 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3798              		.loc 1 440 52 is_stmt 1 view .LVU1238
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3799              		.loc 1 440 15 view .LVU1239
 441:sieve_extend.c ****         }
 3800              		.loc 1 441 13 view .LVU1240
 3801              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3802              		.loc 1 441 45 is_stmt 0 view .LVU1241
 3803 1806 C4417D7F 		vmovdqa	YMMWORD PTR -64[r11], ymm11	# MEM[base: _153, offset: 0B], tmp254
 3803      5BC0
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3804              		.loc 1 440 52 is_stmt 1 view .LVU1242
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3805              		.loc 1 440 15 view .LVU1243
 441:sieve_extend.c ****         }
 3806              		.loc 1 441 13 view .LVU1244
 3807              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 3808              		.loc 1 441 45 is_stmt 0 view .LVU1245
 3809 180c C4417D7F 		vmovdqa	YMMWORD PTR -32[r11], ymm12	# MEM[base: _153, offset: 0B], tmp257
 3809      63E0
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3810              		.loc 1 440 52 is_stmt 1 view .LVU1246
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3811              		.loc 1 440 15 view .LVU1247
 3812              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3813              		.loc 1 440 9 is_stmt 0 view .LVU1248
 3814 1812 4939D1   		cmp	r9, rdx	# range_stop_vector, current_vector
 3815 1815 0F8375FF 		jnb	.L282	#,
 3815      FFFF
 3816              	.L281:
 444:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3817              		.loc 1 444 9 is_stmt 1 view .LVU1249
 3818              	# sieve_extend.c:444:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 444:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3819              		.loc 1 444 19 is_stmt 0 view .LVU1250
 3820 181b 488D0495 		lea	rax, 0[0+rdx*4]	# index_word,
 3820      00000000 
 3821              	.LVL153:
 445:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3822              		.loc 1 445 9 is_stmt 1 view .LVU1251
 446:sieve_extend.c ****             #pragma ivdep
 3823              		.loc 1 446 9 view .LVU1252
 3824              	# sieve_extend.c:446:         if (index_word <= range_stop_word) {
 446:sieve_extend.c ****             #pragma ivdep
 3825              		.loc 1 446 12 is_stmt 0 view .LVU1253
 3826 1823 4939C2   		cmp	r10, rax	# range_stop_word, index_word
 3827 1826 7330     		jnb	.L384	#,
 3828              	.LVL154:
 3829              	.L284:
 446:sieve_extend.c ****             #pragma ivdep
 3830              		.loc 1 446 12 view .LVU1254
 3831              	.LBE270:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3832              		.loc 1 425 41 is_stmt 1 view .LVU1255
GAS LISTING /tmp/ccqpmidN.s 			page 112


 3833              	# sieve_extend.c:425:     for (counter_t index = range_start; index < range_stop_unique;) {
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3834              		.loc 1 425 5 is_stmt 0 view .LVU1256
 3835 1828 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3836 182b 0F873FFD 		ja	.L268	#,
 3836      FFFF
 3837              	.LVL155:
 3838              	.L382:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3839              		.loc 1 425 5 view .LVU1257
 3840 1831 C5F877   		vzeroupper
 3841              	.L266:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3842              		.loc 1 425 5 view .LVU1258
 3843              	.LBE269:
 3844              	# sieve_extend.c:454: }
 454:sieve_extend.c **** 
 3845              		.loc 1 454 1 view .LVU1259
 3846 1834 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp309, D.6500
 3846      38
 3847 1839 64483304 		xor	rax, QWORD PTR fs:40	# tmp309, MEM[(<address-space-1> long unsigned int *)40B]
 3847      25280000 
 3847      00
 3848 1842 0F85F701 		jne	.L385	#,
 3848      0000
 3849 1848 488D65F0 		lea	rsp, -16[rbp]	#,
 3850 184c 5B       		pop	rbx	#
 3851 184d 415C     		pop	r12	#
 3852 184f 5D       		pop	rbp	#
 3853              		.cfi_remember_state
 3854              		.cfi_def_cfa 7, 8
 3855 1850 C3       		ret	
 3856              	.LVL156:
 3857              		.p2align 4,,7
 3858 1851 0F1F8000 		.p2align 3
 3858      000000
 3859              	.L384:
 3860              		.cfi_restore_state
 3861              	.LBB273:
 3862              	.LBB271:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3863              		.loc 1 448 27 is_stmt 1 view .LVU1260
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3864              		.loc 1 449 17 view .LVU1261
 450:sieve_extend.c ****             }
 3865              		.loc 1 450 21 view .LVU1262
 3866              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 3867              		.loc 1 450 52 is_stmt 0 view .LVU1263
 3868 1858 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 3869              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3870              		.loc 1 449 31 view .LVU1264
 3871 185c 488D5801 		lea	rbx, 1[rax]	# _33,
 3872              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 3873              		.loc 1 450 52 view .LVU1265
GAS LISTING /tmp/ccqpmidN.s 			page 113


 3874 1860 48C1E205 		sal	rdx, 5	# tmp217,
 3875 1864 4C092417 		or	QWORD PTR [rdi+rdx], r12	# *_67, quadmask
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3876              		.loc 1 448 51 is_stmt 1 view .LVU1266
 3877              	.LVL157:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3878              		.loc 1 448 27 view .LVU1267
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3879              		.loc 1 449 17 view .LVU1268
 3880              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3881              		.loc 1 449 20 is_stmt 0 view .LVU1269
 3882 1868 4C39D3   		cmp	rbx, r10	# _33, range_stop_word
 3883 186b 7709     		ja	.L285	#,
 450:sieve_extend.c ****             }
 3884              		.loc 1 450 21 is_stmt 1 view .LVU1270
 3885              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 3886              		.loc 1 450 52 is_stmt 0 view .LVU1271
 3887 186d 4C8B5C24 		mov	r11, QWORD PTR 8[rsp]	# quadmask, quadmask
 3887      08
 3888 1872 4C091CDF 		or	QWORD PTR [rdi+rbx*8], r11	# *_139, quadmask
 3889              	.L285:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3890              		.loc 1 448 51 is_stmt 1 view .LVU1272
 3891              	.LVL158:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3892              		.loc 1 448 27 view .LVU1273
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3893              		.loc 1 449 17 view .LVU1274
 3894              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3895              		.loc 1 449 31 is_stmt 0 view .LVU1275
 3896 1876 488D5002 		lea	rdx, 2[rax]	# _30,
 3897              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3898              		.loc 1 449 20 view .LVU1276
 3899 187a 4C39D2   		cmp	rdx, r10	# _30, range_stop_word
 3900 187d 7709     		ja	.L286	#,
 450:sieve_extend.c ****             }
 3901              		.loc 1 450 21 is_stmt 1 view .LVU1277
 3902              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 3903              		.loc 1 450 52 is_stmt 0 view .LVU1278
 3904 187f 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 3904      10
 3905 1884 4C0924D7 		or	QWORD PTR [rdi+rdx*8], r12	# *_133, quadmask
 3906              	.L286:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3907              		.loc 1 448 51 is_stmt 1 view .LVU1279
 3908              	.LVL159:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3909              		.loc 1 448 27 view .LVU1280
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3910              		.loc 1 449 17 view .LVU1281
 3911              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
GAS LISTING /tmp/ccqpmidN.s 			page 114


 3912              		.loc 1 449 31 is_stmt 0 view .LVU1282
 3913 1888 4883C003 		add	rax, 3	# _26,
 3914              	.LVL160:
 3915              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3916              		.loc 1 449 20 view .LVU1283
 3917 188c 4C39D0   		cmp	rax, r10	# _26, range_stop_word
 3918 188f 7797     		ja	.L284	#,
 450:sieve_extend.c ****             }
 3919              		.loc 1 450 21 is_stmt 1 view .LVU1284
 3920              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 3921              		.loc 1 450 52 is_stmt 0 view .LVU1285
 3922 1891 488B5C24 		mov	rbx, QWORD PTR 24[rsp]	# quadmask, quadmask
 3922      18
 3923              	.LVL161:
 450:sieve_extend.c ****             }
 3924              		.loc 1 450 52 view .LVU1286
 3925 1896 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_24, quadmask
 3926 189a EB8C     		jmp	.L284	#
 3927              	.LVL162:
 3928              	.L383:
 450:sieve_extend.c ****             }
 3929              		.loc 1 450 52 view .LVU1287
 3930 189c 4889D3   		mov	rbx, rdx	# _157, step
 3931              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3932              		.loc 1 431 31 view .LVU1288
 3933 189f 41BB0100 		mov	r11d, 1	# tmp188,
 3933      0000
 3934 18a5 48C1E305 		sal	rbx, 5	# _157,
 3935              	.LVL163:
 3936 18a9 0F1F8000 		.p2align 4
 3936      000000
 3937              		.p2align 3
 3938              	.L278:
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3939              		.loc 1 426 9 is_stmt 1 view .LVU1289
 3940              	# sieve_extend.c:427:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 427:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3941              		.loc 1 427 30 is_stmt 0 view .LVU1290
 3942 18b0 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp184
 3942      24
 3943              	# sieve_extend.c:426:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3944              		.loc 1 426 54 view .LVU1291
 3945 18b5 4889F0   		mov	rax, rsi	# tmp183, range_start
 3946 18b8 48C1E808 		shr	rax, 8	# tmp183,
 3947              	# sieve_extend.c:426:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 426:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3948              		.loc 1 426 25 view .LVU1292
 3949 18bc 4C8D2485 		lea	r12, 0[0+rax*4]	# current_vector_start_word,
 3949      00000000 
 3950              	.LVL164:
 427:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3951              		.loc 1 427 9 is_stmt 1 view .LVU1293
 428:sieve_extend.c ****         
GAS LISTING /tmp/ccqpmidN.s 			page 115


 3952              		.loc 1 428 9 view .LVU1294
 3953              	# sieve_extend.c:428:         register counter_t word = wordindex(index) - current_vector_start_wor
 428:sieve_extend.c ****         
 3954              		.loc 1 428 35 is_stmt 0 view .LVU1295
 3955 18c4 4889F0   		mov	rax, rsi	# tmp185, range_start
 3956 18c7 48C1E806 		shr	rax, 6	# tmp185,
 3957              	# sieve_extend.c:428:         register counter_t word = wordindex(index) - current_vector_start_wor
 428:sieve_extend.c ****         
 3958              		.loc 1 428 28 view .LVU1296
 3959 18cb 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 3960              	.LVL165:
 428:sieve_extend.c ****         
 3961              		.loc 1 428 28 view .LVU1297
 3962 18ce EB05     		jmp	.L269	#
 3963              		.p2align 4,,7
 3964              		.p2align 3
 3965              	.L386:
 3966              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3967              		.loc 1 434 9 discriminator 1 view .LVU1298
 3968 18d0 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3969 18d3 721C     		jb	.L289	#,
 3970              	.L269:
 430:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3971              		.loc 1 430 9 is_stmt 1 discriminator 1 view .LVU1299
 431:sieve_extend.c ****             index += step;
 3972              		.loc 1 431 13 discriminator 1 view .LVU1300
 3973              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3974              		.loc 1 431 31 is_stmt 0 discriminator 1 view .LVU1301
 3975 18d5 C4C2C9F7 		shlx	rcx, r11, rsi	# tmp187, tmp188, range_start
 3975      CB
 3976              	# sieve_extend.c:432:             index += step;
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3977              		.loc 1 432 19 discriminator 1 view .LVU1302
 3978 18da 4801D6   		add	rsi, rdx	# range_start, step
 3979              	.LVL166:
 3980              	# sieve_extend.c:431:             quadmask[word] |= markmask(index);
 431:sieve_extend.c ****             index += step;
 3981              		.loc 1 431 28 discriminator 1 view .LVU1303
 3982 18dd 48090CC4 		or	QWORD PTR [rsp+rax*8], rcx	# quadmask, tmp187
 432:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3983              		.loc 1 432 13 is_stmt 1 discriminator 1 view .LVU1304
 3984              	.LVL167:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3985              		.loc 1 433 13 discriminator 1 view .LVU1305
 3986              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3987              		.loc 1 433 20 is_stmt 0 discriminator 1 view .LVU1306
 3988 18e1 4889F0   		mov	rax, rsi	# tmp189, range_start
 3989              	.LVL168:
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3990              		.loc 1 433 20 discriminator 1 view .LVU1307
 3991 18e4 48C1E806 		shr	rax, 6	# tmp189,
 3992              	# sieve_extend.c:433:             word = wordindex(index) - current_vector_start_word;
 433:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3993              		.loc 1 433 18 discriminator 1 view .LVU1308
GAS LISTING /tmp/ccqpmidN.s 			page 116


 3994 18e8 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 3995              	.LVL169:
 434:sieve_extend.c ****         
 3996              		.loc 1 434 17 is_stmt 1 discriminator 1 view .LVU1309
 3997              	# sieve_extend.c:434:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 434:sieve_extend.c ****         
 3998              		.loc 1 434 9 is_stmt 0 discriminator 1 view .LVU1310
 3999 18eb 4883F803 		cmp	rax, 3	# word,
 4000 18ef 76DF     		jbe	.L386	#,
 4001              	.L289:
 436:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4002              		.loc 1 436 9 is_stmt 1 view .LVU1311
 4003              	# sieve_extend.c:436:         register counter_t current_vector = current_vector_start_word>>2;
 436:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4004              		.loc 1 436 28 is_stmt 0 view .LVU1312
 4005 18f1 4C89E0   		mov	rax, r12	# current_vector_start_word, current_vector_start_word
 4006              	.LVL170:
 436:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4007              		.loc 1 436 28 view .LVU1313
 4008 18f4 48C1E802 		shr	rax, 2	# current_vector_start_word,
 4009              	.LVL171:
 437:sieve_extend.c ****         
 4010              		.loc 1 437 9 is_stmt 1 view .LVU1314
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4011              		.loc 1 440 9 view .LVU1315
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4012              		.loc 1 440 15 view .LVU1316
 4013              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4014              		.loc 1 440 9 is_stmt 0 view .LVU1317
 4015 18f8 4C39C8   		cmp	rax, r9	# current_vector, range_stop_vector
 4016 18fb 0F87DF00 		ja	.L271	#,
 4016      0000
 4017              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4018              		.loc 1 441 45 view .LVU1318
 4019 1901 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.53_19, quadmask
 4019      24
 4020 1906 4989C4   		mov	r12, rax	# tmp194, current_vector
 4021              	.LVL172:
 441:sieve_extend.c ****         }
 4022              		.loc 1 441 45 view .LVU1319
 4023 1909 49C1E405 		sal	r12, 5	# tmp194,
 4024 190d 4901FC   		add	r12, rdi	# ivtmp.246, bitarray_word
 4025              	.L272:
 441:sieve_extend.c ****         }
 4026              		.loc 1 441 13 is_stmt 1 discriminator 2 view .LVU1320
 4027              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4028              		.loc 1 441 45 is_stmt 0 discriminator 2 view .LVU1321
 4029 1910 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r12]	# tmp195, quadmask.53_19, MEM[base: _161, offset: 0B]
 4029      0C24
 4030              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4031              		.loc 1 440 67 discriminator 2 view .LVU1322
 4032 1916 4801D0   		add	rax, rdx	# current_vector, step
 4033              	.LVL173:
GAS LISTING /tmp/ccqpmidN.s 			page 117


 4034              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4035              		.loc 1 441 45 discriminator 2 view .LVU1323
 4036 1919 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm1	# MEM[base: _161, offset: 0B], tmp195
 4036      0C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4037              		.loc 1 440 52 is_stmt 1 discriminator 2 view .LVU1324
 4038              	.LVL174:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4039              		.loc 1 440 15 discriminator 2 view .LVU1325
 4040 191f 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4041              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4042              		.loc 1 440 9 is_stmt 0 discriminator 2 view .LVU1326
 4043 1922 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4044 1925 0F82B500 		jb	.L271	#,
 4044      0000
 441:sieve_extend.c ****         }
 4045              		.loc 1 441 13 is_stmt 1 view .LVU1327
 4046              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4047              		.loc 1 441 45 is_stmt 0 view .LVU1328
 4048 192b C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r12]	# tmp291, quadmask.53_19, MEM[base: _161, offset: 0B]
 4048      1C24
 4049              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4050              		.loc 1 440 67 view .LVU1329
 4051 1931 4801D0   		add	rax, rdx	# current_vector, step
 4052              	.LVL175:
 4053              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4054              		.loc 1 441 45 view .LVU1330
 4055 1934 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm3	# MEM[base: _161, offset: 0B], tmp291
 4055      1C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4056              		.loc 1 440 52 is_stmt 1 view .LVU1331
 4057              	.LVL176:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4058              		.loc 1 440 15 view .LVU1332
 4059 193a 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4060              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4061              		.loc 1 440 9 is_stmt 0 view .LVU1333
 4062 193d 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4063 1940 0F829A00 		jb	.L271	#,
 4063      0000
 441:sieve_extend.c ****         }
 4064              		.loc 1 441 13 is_stmt 1 view .LVU1334
 4065              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4066              		.loc 1 441 45 is_stmt 0 view .LVU1335
 4067 1946 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r12]	# tmp293, quadmask.53_19, MEM[base: _161, offset: 0B]
 4067      2424
 4068              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4069              		.loc 1 440 67 view .LVU1336
 4070 194c 4801D0   		add	rax, rdx	# current_vector, step
GAS LISTING /tmp/ccqpmidN.s 			page 118


 4071              	.LVL177:
 4072              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4073              		.loc 1 441 45 view .LVU1337
 4074 194f C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm4	# MEM[base: _161, offset: 0B], tmp293
 4074      2424
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4075              		.loc 1 440 52 is_stmt 1 view .LVU1338
 4076              	.LVL178:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4077              		.loc 1 440 15 view .LVU1339
 4078 1955 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4079              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4080              		.loc 1 440 9 is_stmt 0 view .LVU1340
 4081 1958 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4082 195b 0F827F00 		jb	.L271	#,
 4082      0000
 441:sieve_extend.c ****         }
 4083              		.loc 1 441 13 is_stmt 1 view .LVU1341
 4084              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4085              		.loc 1 441 45 is_stmt 0 view .LVU1342
 4086 1961 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r12]	# tmp295, quadmask.53_19, MEM[base: _161, offset: 0B]
 4086      2C24
 4087              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4088              		.loc 1 440 67 view .LVU1343
 4089 1967 4801D0   		add	rax, rdx	# current_vector, step
 4090              	.LVL179:
 4091              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4092              		.loc 1 441 45 view .LVU1344
 4093 196a C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm5	# MEM[base: _161, offset: 0B], tmp295
 4093      2C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4094              		.loc 1 440 52 is_stmt 1 view .LVU1345
 4095              	.LVL180:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4096              		.loc 1 440 15 view .LVU1346
 4097 1970 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4098              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4099              		.loc 1 440 9 is_stmt 0 view .LVU1347
 4100 1973 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4101 1976 7268     		jb	.L271	#,
 441:sieve_extend.c ****         }
 4102              		.loc 1 441 13 is_stmt 1 view .LVU1348
 4103              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4104              		.loc 1 441 45 is_stmt 0 view .LVU1349
 4105 1978 C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r12]	# tmp297, quadmask.53_19, MEM[base: _161, offset: 0B]
 4105      3424
 4106              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4107              		.loc 1 440 67 view .LVU1350
 4108 197e 4801D0   		add	rax, rdx	# current_vector, step
GAS LISTING /tmp/ccqpmidN.s 			page 119


 4109              	.LVL181:
 4110              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4111              		.loc 1 441 45 view .LVU1351
 4112 1981 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm6	# MEM[base: _161, offset: 0B], tmp297
 4112      3424
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4113              		.loc 1 440 52 is_stmt 1 view .LVU1352
 4114              	.LVL182:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4115              		.loc 1 440 15 view .LVU1353
 4116 1987 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4117              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4118              		.loc 1 440 9 is_stmt 0 view .LVU1354
 4119 198a 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4120 198d 7251     		jb	.L271	#,
 441:sieve_extend.c ****         }
 4121              		.loc 1 441 13 is_stmt 1 view .LVU1355
 4122              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4123              		.loc 1 441 45 is_stmt 0 view .LVU1356
 4124 198f C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r12]	# tmp299, quadmask.53_19, MEM[base: _161, offset: 0B]
 4124      3C24
 4125              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4126              		.loc 1 440 67 view .LVU1357
 4127 1995 4801D0   		add	rax, rdx	# current_vector, step
 4128              	.LVL183:
 4129              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4130              		.loc 1 441 45 view .LVU1358
 4131 1998 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm7	# MEM[base: _161, offset: 0B], tmp299
 4131      3C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4132              		.loc 1 440 52 is_stmt 1 view .LVU1359
 4133              	.LVL184:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4134              		.loc 1 440 15 view .LVU1360
 4135 199e 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4136              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4137              		.loc 1 440 9 is_stmt 0 view .LVU1361
 4138 19a1 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4139 19a4 723A     		jb	.L271	#,
 441:sieve_extend.c ****         }
 4140              		.loc 1 441 13 is_stmt 1 view .LVU1362
 4141              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4142              		.loc 1 441 45 is_stmt 0 view .LVU1363
 4143 19a6 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r12]	# tmp301, quadmask.53_19, MEM[base: _161, offset: 0B]
 4143      0424
 4144              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4145              		.loc 1 440 67 view .LVU1364
 4146 19ac 4801D0   		add	rax, rdx	# current_vector, step
 4147              	.LVL185:
GAS LISTING /tmp/ccqpmidN.s 			page 120


 4148              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4149              		.loc 1 441 45 view .LVU1365
 4150 19af C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm8	# MEM[base: _161, offset: 0B], tmp301
 4150      0424
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4151              		.loc 1 440 52 is_stmt 1 view .LVU1366
 4152              	.LVL186:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4153              		.loc 1 440 15 view .LVU1367
 4154 19b5 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4155              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4156              		.loc 1 440 9 is_stmt 0 view .LVU1368
 4157 19b8 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4158 19bb 7223     		jb	.L271	#,
 441:sieve_extend.c ****         }
 4159              		.loc 1 441 13 is_stmt 1 view .LVU1369
 4160              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4161              		.loc 1 441 45 is_stmt 0 view .LVU1370
 4162 19bd C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r12]	# tmp303, quadmask.53_19, MEM[base: _161, offset: 0B]
 4162      0C24
 4163              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4164              		.loc 1 440 67 view .LVU1371
 4165 19c3 4801D0   		add	rax, rdx	# current_vector, step
 4166              	.LVL187:
 4167              	# sieve_extend.c:441:             bitarray_vector[current_vector] |= quadmask;
 441:sieve_extend.c ****         }
 4168              		.loc 1 441 45 view .LVU1372
 4169 19c6 C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm9	# MEM[base: _161, offset: 0B], tmp303
 4169      0C24
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4170              		.loc 1 440 52 is_stmt 1 view .LVU1373
 4171              	.LVL188:
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4172              		.loc 1 440 15 view .LVU1374
 4173 19cc 4901DC   		add	r12, rbx	# ivtmp.246, _157
 4174              	# sieve_extend.c:440:         for(; current_vector <= range_stop_vector; current_vector += step) {
 440:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4175              		.loc 1 440 9 is_stmt 0 view .LVU1375
 4176 19cf 4939C1   		cmp	r9, rax	# range_stop_vector, current_vector
 4177 19d2 0F8338FF 		jnb	.L272	#,
 4177      FFFF
 4178 19d8 0F1F8400 		.p2align 4
 4178      00000000 
 4179              		.p2align 3
 4180              	.L271:
 444:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4181              		.loc 1 444 9 is_stmt 1 view .LVU1376
 4182              	# sieve_extend.c:444:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 444:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4183              		.loc 1 444 19 is_stmt 0 view .LVU1377
 4184 19e0 488D0C85 		lea	rcx, 0[0+rax*4]	# index_word,
 4184      00000000 
 4185              	.LVL189:
GAS LISTING /tmp/ccqpmidN.s 			page 121


 445:sieve_extend.c ****         if (index_word <= range_stop_word) {
 4186              		.loc 1 445 9 is_stmt 1 view .LVU1378
 446:sieve_extend.c ****             #pragma ivdep
 4187              		.loc 1 446 9 view .LVU1379
 4188              	# sieve_extend.c:446:         if (index_word <= range_stop_word) {
 446:sieve_extend.c ****             #pragma ivdep
 4189              		.loc 1 446 12 is_stmt 0 view .LVU1380
 4190 19e8 4C39D1   		cmp	rcx, r10	# index_word, range_stop_word
 4191 19eb 760E     		jbe	.L387	#,
 4192              	.LVL190:
 4193              	.L274:
 446:sieve_extend.c ****             #pragma ivdep
 4194              		.loc 1 446 12 view .LVU1381
 4195              	.LBE271:
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4196              		.loc 1 425 41 is_stmt 1 view .LVU1382
 4197              	# sieve_extend.c:425:     for (counter_t index = range_start; index < range_stop_unique;) {
 425:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4198              		.loc 1 425 5 is_stmt 0 view .LVU1383
 4199 19ed 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 4200 19f0 0F87BAFE 		ja	.L278	#,
 4200      FFFF
 4201 19f6 E936FEFF 		jmp	.L382	#
 4201      FF
 4202              	.LVL191:
 4203              	.L387:
 4204              	.LBB272:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4205              		.loc 1 448 27 is_stmt 1 view .LVU1384
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4206              		.loc 1 449 17 view .LVU1385
 450:sieve_extend.c ****             }
 4207              		.loc 1 450 21 view .LVU1386
 4208              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 4209              		.loc 1 450 52 is_stmt 0 view .LVU1387
 4210 19fb 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 4211 19ff 48C1E005 		sal	rax, 5	# tmp196,
 4212              	.LVL192:
 450:sieve_extend.c ****             }
 4213              		.loc 1 450 52 view .LVU1388
 4214 1a03 4C092407 		or	QWORD PTR [rdi+rax], r12	# *_62, quadmask
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4215              		.loc 1 448 51 is_stmt 1 view .LVU1389
 4216              	.LVL193:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4217              		.loc 1 448 27 view .LVU1390
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4218              		.loc 1 449 17 view .LVU1391
 4219              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4220              		.loc 1 449 31 is_stmt 0 view .LVU1392
 4221 1a07 488D4101 		lea	rax, 1[rcx]	# _71,
 4222              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4223              		.loc 1 449 20 view .LVU1393
 4224 1a0b 4939C2   		cmp	r10, rax	# range_stop_word, _71
GAS LISTING /tmp/ccqpmidN.s 			page 122


 4225 1a0e 7209     		jb	.L275	#,
 450:sieve_extend.c ****             }
 4226              		.loc 1 450 21 is_stmt 1 view .LVU1394
 4227              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 4228              		.loc 1 450 52 is_stmt 0 view .LVU1395
 4229 1a10 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# quadmask, quadmask
 4229      08
 4230 1a15 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_73, quadmask
 4231              	.L275:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4232              		.loc 1 448 51 is_stmt 1 view .LVU1396
 4233              	.LVL194:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4234              		.loc 1 448 27 view .LVU1397
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4235              		.loc 1 449 17 view .LVU1398
 4236              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4237              		.loc 1 449 31 is_stmt 0 view .LVU1399
 4238 1a19 488D4102 		lea	rax, 2[rcx]	# _82,
 4239              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4240              		.loc 1 449 20 view .LVU1400
 4241 1a1d 4939C2   		cmp	r10, rax	# range_stop_word, _82
 4242 1a20 7209     		jb	.L276	#,
 450:sieve_extend.c ****             }
 4243              		.loc 1 450 21 is_stmt 1 view .LVU1401
 4244              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 4245              		.loc 1 450 52 is_stmt 0 view .LVU1402
 4246 1a22 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 4246      10
 4247 1a27 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_84, quadmask
 4248              	.L276:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4249              		.loc 1 448 51 is_stmt 1 view .LVU1403
 4250              	.LVL195:
 448:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4251              		.loc 1 448 27 view .LVU1404
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4252              		.loc 1 449 17 view .LVU1405
 4253              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4254              		.loc 1 449 31 is_stmt 0 view .LVU1406
 4255 1a2b 4883C103 		add	rcx, 3	# _93,
 4256              	.LVL196:
 4257              	# sieve_extend.c:449:                 if (index_word+word <= range_stop_word)
 449:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4258              		.loc 1 449 20 view .LVU1407
 4259 1a2f 4939CA   		cmp	r10, rcx	# range_stop_word, _93
 4260 1a32 72B9     		jb	.L274	#,
 450:sieve_extend.c ****             }
 4261              		.loc 1 450 21 is_stmt 1 view .LVU1408
 4262              	# sieve_extend.c:450:                     bitarray_word[index_word+word] |= quadmask[word];
 450:sieve_extend.c ****             }
 4263              		.loc 1 450 52 is_stmt 0 view .LVU1409
GAS LISTING /tmp/ccqpmidN.s 			page 123


 4264 1a34 488B4424 		mov	rax, QWORD PTR 24[rsp]	# quadmask, quadmask
 4264      18
 4265              	.LVL197:
 450:sieve_extend.c ****             }
 4266              		.loc 1 450 52 view .LVU1410
 4267 1a39 480904CF 		or	QWORD PTR [rdi+rcx*8], rax	# *_95, quadmask
 4268 1a3d EBAE     		jmp	.L274	#
 4269              	.LVL198:
 4270              	.L385:
 450:sieve_extend.c ****             }
 4271              		.loc 1 450 52 view .LVU1411
 4272              	.LBE272:
 4273              	.LBE273:
 4274              	# sieve_extend.c:454: }
 454:sieve_extend.c **** 
 4275              		.loc 1 454 1 view .LVU1412
 4276 1a3f E8000000 		call	__stack_chk_fail@PLT	#
 4276      00
 4277              	.LVL199:
 454:sieve_extend.c **** 
 4278              		.loc 1 454 1 view .LVU1413
 4279              		.cfi_endproc
 4280              	.LFE63:
 4282 1a44 66662E0F 		.p2align 4
 4282      1F840000 
 4282      00000090 
 4284              	extendSieve_aligned:
 4285              	.LVL200:
 4286              	.LFB65:
 490:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4287              		.loc 1 490 140 is_stmt 1 view -0
 4288              		.cfi_startproc
 491:sieve_extend.c **** 
 4289              		.loc 1 491 5 view .LVU1415
 493:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4290              		.loc 1 493 5 view .LVU1416
 4291              	# sieve_extend.c:490: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 490:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4292              		.loc 1 490 140 is_stmt 0 view .LVU1417
 4293 1a50 55       		push	rbp	#
 4294              		.cfi_def_cfa_offset 16
 4295              		.cfi_offset 6, -16
 4296 1a51 4889E5   		mov	rbp, rsp	#,
 4297              		.cfi_def_cfa_register 6
 4298 1a54 4157     		push	r15	#
 4299 1a56 4156     		push	r14	#
 4300 1a58 4155     		push	r13	#
 4301              		.cfi_offset 15, -24
 4302              		.cfi_offset 14, -32
 4303              		.cfi_offset 13, -40
 4304 1a5a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 4305 1a5d 4154     		push	r12	#
 4306              		.cfi_offset 12, -48
 4307 1a5f 4989D4   		mov	r12, rdx	# size, tmp297
 4308 1a62 53       		push	rbx	#
 4309              		.cfi_offset 3, -56
 4310              	# sieve_extend.c:493:     const counter_t destination_stop_word = wordindex(destination_stop);
GAS LISTING /tmp/ccqpmidN.s 			page 124


 493:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4311              		.loc 1 493 21 view .LVU1418
 4312 1a63 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 4313              	# sieve_extend.c:494:     const counter_t copy_start = source_start + size;
 494:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4314              		.loc 1 494 21 view .LVU1419
 4315 1a66 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 4316              	.LVL201:
 4317              	# sieve_extend.c:490: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 490:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4318              		.loc 1 490 140 view .LVU1420
 4319 1a6a 4883E4E0 		and	rsp, -32	#,
 4320              	# sieve_extend.c:496:     counter_t copy_word = wordindex(copy_start);
 496:sieve_extend.c ****     
 4321              		.loc 1 496 15 view .LVU1421
 4322 1a6e 4889C8   		mov	rax, rcx	# ivtmp.291, copy_start
 4323              	# sieve_extend.c:495:     counter_t source_word = wordindex(source_start);
 495:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4324              		.loc 1 495 15 view .LVU1422
 4325 1a71 48C1EE06 		shr	rsi, 6	# source_start,
 4326              	.LVL202:
 4327              	# sieve_extend.c:490: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 490:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4328              		.loc 1 490 140 view .LVU1423
 4329 1a75 488D6424 		lea	rsp, -32[rsp]	#,
 4329      E0
 4330              	# sieve_extend.c:496:     counter_t copy_word = wordindex(copy_start);
 496:sieve_extend.c ****     
 4331              		.loc 1 496 15 view .LVU1424
 4332 1a7a 48C1E806 		shr	rax, 6	# ivtmp.291,
 4333              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4334              		.loc 1 498 35 view .LVU1425
 4335 1a7e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 4335      00000000 
 4336              	.LVL203:
 4337              	# sieve_extend.c:493:     const counter_t destination_stop_word = wordindex(destination_stop);
 493:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4338              		.loc 1 493 21 view .LVU1426
 4339 1a86 48C1EB06 		shr	rbx, 6	# tmp298,
 4340              	.LVL204:
 494:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4341              		.loc 1 494 5 is_stmt 1 view .LVU1427
 495:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4342              		.loc 1 495 5 view .LVU1428
 4343              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4344              		.loc 1 498 35 is_stmt 0 view .LVU1429
 4345 1a8a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 4345      00
 4346              	# sieve_extend.c:495:     counter_t source_word = wordindex(source_start);
 495:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4347              		.loc 1 495 15 view .LVU1430
 4348 1a8f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 4348      08
 4349              	.LVL205:
 496:sieve_extend.c ****     
GAS LISTING /tmp/ccqpmidN.s 			page 125


 4350              		.loc 1 496 5 is_stmt 1 view .LVU1431
 498:sieve_extend.c **** 
 4351              		.loc 1 498 5 view .LVU1432
 4352              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4353              		.loc 1 498 52 is_stmt 0 view .LVU1433
 4354 1a94 89CE     		mov	esi, ecx	# tmp183, copy_start
 4355              	.LVL206:
 4356              	# sieve_extend.c:500:     while (copy_word + size <= destination_stop_word) {
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4357              		.loc 1 500 22 view .LVU1434
 4358 1a96 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.291,
 4359              	.LVL207:
 4360              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4361              		.loc 1 498 52 view .LVU1435
 4362 1a9a F7D6     		not	esi	# tmp183
 4363              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4364              		.loc 1 498 35 view .LVU1436
 4365 1a9c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 4366              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4367              		.loc 1 498 52 view .LVU1437
 4368 1aa0 48C7C2FF 		mov	rdx, -1	# tmp186,
 4368      FFFFFF
 4369              	.LVL208:
 498:sieve_extend.c **** 
 4370              		.loc 1 498 52 view .LVU1438
 4371 1aa7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 4371      C2
 4372              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4373              		.loc 1 498 49 view .LVU1439
 4374 1aac C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 4374      0E
 4375              	# sieve_extend.c:498:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 498:sieve_extend.c **** 
 4376              		.loc 1 498 25 view .LVU1440
 4377 1ab1 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 4377      00
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4378              		.loc 1 500 5 is_stmt 1 view .LVU1441
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4379              		.loc 1 500 11 view .LVU1442
 4380 1ab6 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.291
 4381 1ab9 0F827101 		jb	.L389	#,
 4381      0000
 4382 1abf 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 4382      00000000 
 4383 1ac7 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 4383      00000000 
 4384              	.LVL209:
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4385              		.loc 1 500 11 is_stmt 0 view .LVU1443
 4386 1acf 4D01EA   		add	r10, r13	# tmp190, bitarray
 4387              	# sieve_extend.c:501:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
GAS LISTING /tmp/ccqpmidN.s 			page 126


 501:sieve_extend.c ****         copy_word += size;
 4388              		.loc 1 501 9 view .LVU1444
 4389 1ad2 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 4389      00000000 
 4390 1ada 4929C2   		sub	r10, rax	# tmp190, tmp191
 4391 1add 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 4391      18
 4392              	.LVL210:
 4393              	.L390:
 501:sieve_extend.c ****         copy_word += size;
 4394              		.loc 1 501 9 is_stmt 1 view .LVU1445
 4395              	.LBB274:
 4396              	.LBI274:
 4397              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 4398              		.loc 2 31 1 view .LVU1446
 4399              	.LBB275:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 4400              		.loc 2 34 3 view .LVU1447
 4401              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4402              		.loc 2 34 10 is_stmt 0 view .LVU1448
 4403 1ae2 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 4403      18
 4404 1ae7 4C89FA   		mov	rdx, r15	#, _15
 4405 1aea 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.291
GAS LISTING /tmp/ccqpmidN.s 			page 127


 4405      10
 4406 1aef 4C89F6   		mov	rsi, r14	#, _5
 4407 1af2 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 4408 1af6 E8000000 		call	memcpy@PLT	#
 4408      00
 4409              	.LVL211:
 4410              		.loc 2 34 10 view .LVU1449
 4411              	.LBE275:
 4412              	.LBE274:
 502:sieve_extend.c ****     }
 4413              		.loc 1 502 9 is_stmt 1 view .LVU1450
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4414              		.loc 1 500 11 view .LVU1451
 4415 1afb 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4415      10
 4416 1b00 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.291,
 4417 1b04 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.291
 4418 1b07 0F822301 		jb	.L389	#,
 4418      0000
 501:sieve_extend.c ****         copy_word += size;
 4419              		.loc 1 501 9 view .LVU1452
 4420              	.LVL212:
 4421              	.LBB283:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4422              		.loc 2 31 1 view .LVU1453
 4423              	.LBB276:
 4424              		.loc 2 34 3 view .LVU1454
 4425              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4426              		.loc 2 34 10 is_stmt 0 view .LVU1455
 4427 1b0d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 4427      18
 4428 1b12 4C89F6   		mov	rsi, r14	#, _5
 4429 1b15 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.291
 4429      10
 4430              	.LVL213:
 4431              		.loc 2 34 10 view .LVU1456
 4432 1b1a 4C89FA   		mov	rdx, r15	#, _15
 4433 1b1d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 4434 1b21 E8000000 		call	memcpy@PLT	#
 4434      00
 4435              	.LVL214:
 4436              		.loc 2 34 10 view .LVU1457
 4437              	.LBE276:
 4438              	.LBE283:
 502:sieve_extend.c ****     }
 4439              		.loc 1 502 9 is_stmt 1 view .LVU1458
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4440              		.loc 1 500 11 view .LVU1459
 4441 1b26 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4441      10
 4442 1b2b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.291,
 4443 1b2f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.291
 4444 1b32 0F82F800 		jb	.L389	#,
 4444      0000
 501:sieve_extend.c ****         copy_word += size;
 4445              		.loc 1 501 9 view .LVU1460
 4446              	.LVL215:
GAS LISTING /tmp/ccqpmidN.s 			page 128


 4447              	.LBB284:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4448              		.loc 2 31 1 view .LVU1461
 4449              	.LBB277:
 4450              		.loc 2 34 3 view .LVU1462
 4451              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4452              		.loc 2 34 10 is_stmt 0 view .LVU1463
 4453 1b38 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 4453      18
 4454 1b3d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.291
 4454      10
 4455 1b42 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 4456 1b46 4C89FA   		mov	rdx, r15	#, _15
 4457 1b49 4C89F6   		mov	rsi, r14	#, _5
 4458 1b4c E8000000 		call	memcpy@PLT	#
 4458      00
 4459              	.LVL216:
 4460              		.loc 2 34 10 view .LVU1464
 4461              	.LBE277:
 4462              	.LBE284:
 502:sieve_extend.c ****     }
 4463              		.loc 1 502 9 is_stmt 1 view .LVU1465
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4464              		.loc 1 500 11 view .LVU1466
 4465 1b51 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4465      10
 4466 1b56 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.291,
 4467 1b5a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.291
 4468 1b5d 0F82CD00 		jb	.L389	#,
 4468      0000
 501:sieve_extend.c ****         copy_word += size;
 4469              		.loc 1 501 9 view .LVU1467
 4470              	.LVL217:
 4471              	.LBB285:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4472              		.loc 2 31 1 view .LVU1468
 4473              	.LBB278:
 4474              		.loc 2 34 3 view .LVU1469
 4475              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4476              		.loc 2 34 10 is_stmt 0 view .LVU1470
 4477 1b63 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 4477      18
 4478 1b68 4C89FA   		mov	rdx, r15	#, _15
 4479 1b6b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.291
 4479      10
 4480 1b70 4C89F6   		mov	rsi, r14	#, _5
 4481 1b73 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 4482 1b77 E8000000 		call	memcpy@PLT	#
 4482      00
 4483              	.LVL218:
 4484              		.loc 2 34 10 view .LVU1471
 4485              	.LBE278:
 4486              	.LBE285:
 502:sieve_extend.c ****     }
 4487              		.loc 1 502 9 is_stmt 1 view .LVU1472
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4488              		.loc 1 500 11 view .LVU1473
GAS LISTING /tmp/ccqpmidN.s 			page 129


 4489 1b7c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4489      10
 4490 1b81 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.291,
 4491 1b85 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.291
 4492 1b88 0F82A200 		jb	.L389	#,
 4492      0000
 501:sieve_extend.c ****         copy_word += size;
 4493              		.loc 1 501 9 view .LVU1474
 4494              	.LVL219:
 4495              	.LBB286:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4496              		.loc 2 31 1 view .LVU1475
 4497              	.LBB279:
 4498              		.loc 2 34 3 view .LVU1476
 4499              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4500              		.loc 2 34 10 is_stmt 0 view .LVU1477
 4501 1b8e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 4501      18
 4502 1b93 4C89FA   		mov	rdx, r15	#, _15
 4503 1b96 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.291
 4503      10
 4504 1b9b 4C89F6   		mov	rsi, r14	#, _5
 4505 1b9e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 4506 1ba2 E8000000 		call	memcpy@PLT	#
 4506      00
 4507              	.LVL220:
 4508              		.loc 2 34 10 view .LVU1478
 4509              	.LBE279:
 4510              	.LBE286:
 502:sieve_extend.c ****     }
 4511              		.loc 1 502 9 is_stmt 1 view .LVU1479
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4512              		.loc 1 500 11 view .LVU1480
 4513 1ba7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4513      10
 4514 1bac 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.291,
 4515 1bb0 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.291
 4516 1bb3 727B     		jb	.L389	#,
 501:sieve_extend.c ****         copy_word += size;
 4517              		.loc 1 501 9 view .LVU1481
 4518              	.LVL221:
 4519              	.LBB287:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4520              		.loc 2 31 1 view .LVU1482
 4521              	.LBB280:
 4522              		.loc 2 34 3 view .LVU1483
 4523              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4524              		.loc 2 34 10 is_stmt 0 view .LVU1484
 4525 1bb5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 4525      18
 4526 1bba 4C89F6   		mov	rsi, r14	#, _5
 4527 1bbd 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.291
 4527      10
 4528 1bc2 4C89FA   		mov	rdx, r15	#, _15
 4529 1bc5 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 4530 1bc9 E8000000 		call	memcpy@PLT	#
 4530      00
GAS LISTING /tmp/ccqpmidN.s 			page 130


 4531              	.LVL222:
 4532              		.loc 2 34 10 view .LVU1485
 4533              	.LBE280:
 4534              	.LBE287:
 502:sieve_extend.c ****     }
 4535              		.loc 1 502 9 is_stmt 1 view .LVU1486
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4536              		.loc 1 500 11 view .LVU1487
 4537 1bce 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4537      10
 4538 1bd3 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.291,
 4539 1bd7 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.291
 4540 1bda 7254     		jb	.L389	#,
 501:sieve_extend.c ****         copy_word += size;
 4541              		.loc 1 501 9 view .LVU1488
 4542              	.LVL223:
 4543              	.LBB288:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4544              		.loc 2 31 1 view .LVU1489
 4545              	.LBB281:
 4546              		.loc 2 34 3 view .LVU1490
 4547              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4548              		.loc 2 34 10 is_stmt 0 view .LVU1491
 4549 1bdc 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 4549      18
 4550 1be1 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.291
 4550      10
 4551 1be6 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 4552 1bea 4C89FA   		mov	rdx, r15	#, _15
 4553 1bed 4C89F6   		mov	rsi, r14	#, _5
 4554 1bf0 E8000000 		call	memcpy@PLT	#
 4554      00
 4555              	.LVL224:
 4556              		.loc 2 34 10 view .LVU1492
 4557              	.LBE281:
 4558              	.LBE288:
 502:sieve_extend.c ****     }
 4559              		.loc 1 502 9 is_stmt 1 view .LVU1493
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4560              		.loc 1 500 11 view .LVU1494
 4561 1bf5 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4561      10
 4562 1bfa 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.291,
 4563 1bfe 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.291
 4564 1c01 722D     		jb	.L389	#,
 501:sieve_extend.c ****         copy_word += size;
 4565              		.loc 1 501 9 view .LVU1495
 4566              	.LVL225:
 4567              	.LBB289:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4568              		.loc 2 31 1 view .LVU1496
 4569              	.LBB282:
 4570              		.loc 2 34 3 view .LVU1497
 4571              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4572              		.loc 2 34 10 is_stmt 0 view .LVU1498
 4573 1c03 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 4573      18
GAS LISTING /tmp/ccqpmidN.s 			page 131


 4574 1c08 4C89FA   		mov	rdx, r15	#, _15
 4575 1c0b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.291
 4575      10
 4576 1c10 4C89F6   		mov	rsi, r14	#, _5
 4577 1c13 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 4578 1c17 E8000000 		call	memcpy@PLT	#
 4578      00
 4579              	.LVL226:
 4580              		.loc 2 34 10 view .LVU1499
 4581              	.LBE282:
 4582              	.LBE289:
 502:sieve_extend.c ****     }
 4583              		.loc 1 502 9 is_stmt 1 view .LVU1500
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4584              		.loc 1 500 11 view .LVU1501
 4585 1c1c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.291, %sfp
 4585      10
 4586              	.LVL227:
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4587              		.loc 1 500 11 is_stmt 0 view .LVU1502
 4588 1c21 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.291,
 4589              	.LVL228:
 500:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4590              		.loc 1 500 11 view .LVU1503
 4591 1c25 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.291
 4592 1c28 0F83B4FE 		jnb	.L390	#,
 4592      FFFF
 4593              	.LVL229:
 4594 1c2e 6690     		.p2align 4
 4595              		.p2align 3
 4596              	.L389:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4597              		.loc 1 505 10 is_stmt 1 view .LVU1504
 4598 1c30 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.291
 4599 1c33 0F864902 		jbe	.L500	#,
 4599      0000
 4600 1c39 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 4601 1c3d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 4601      00000000 
 4602              	.LVL230:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4603              		.loc 1 505 10 is_stmt 0 view .LVU1505
 4604 1c45 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 4604      20
 4605 1c4a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 4606 1c4e 4D39FA   		cmp	r10, r15	# _4, tmp199
 4607 1c51 410F9DC3 		setge	r11b	#, tmp201
 4608 1c55 4939FC   		cmp	r12, rdi	# _41, tmp202
 4609 1c58 400F9DC6 		setge	sil	#, tmp204
 4610 1c5c 4108F3   		or	r11b, sil	# tmp201, tmp204
 4611 1c5f 0F844B02 		je	.L392	#,
 4611      0000
 4612 1c65 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 4613 1c69 4829C2   		sub	rdx, rax	# tmp207, ivtmp.291
 4614 1c6c 4883FA05 		cmp	rdx, 5	# tmp207,
 4615 1c70 0F863A02 		jbe	.L392	#,
 4615      0000
GAS LISTING /tmp/ccqpmidN.s 			page 132


 4616 1c76 4D89F7   		mov	r15, r14	# tmp210, _5
 4617 1c79 49C1EF03 		shr	r15, 3	# tmp210,
 4618 1c7d 49F7DF   		neg	r15	# tmp211
 4619 1c80 4183E703 		and	r15d, 3	# prolog_loop_niters.259,
 4620 1c84 0F842E03 		je	.L399	#,
 4620      0000
 506:sieve_extend.c ****         source_word++;
 4621              		.loc 1 506 9 is_stmt 1 view .LVU1506
 4622              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4623              		.loc 1 506 39 is_stmt 0 view .LVU1507
 4624 1c8a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 4625 1c8d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.259,
 4626              	# sieve_extend.c:507:         source_word++;
 507:sieve_extend.c ****         copy_word++;
 4627              		.loc 1 507 20 view .LVU1508
 4628 1c91 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 4628      08
 4629              	# sieve_extend.c:508:         copy_word++;
 508:sieve_extend.c ****     }
 4630              		.loc 1 508 18 view .LVU1509
 4631 1c96 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 4632              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4633              		.loc 1 506 29 view .LVU1510
 4634 1c9a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 4634      00
 507:sieve_extend.c ****         copy_word++;
 4635              		.loc 1 507 9 is_stmt 1 view .LVU1511
 4636              	# sieve_extend.c:507:         source_word++;
 507:sieve_extend.c ****         copy_word++;
 4637              		.loc 1 507 20 is_stmt 0 view .LVU1512
 4638 1c9f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 4639              	.LVL231:
 508:sieve_extend.c ****     }
 4640              		.loc 1 508 9 is_stmt 1 view .LVU1513
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4641              		.loc 1 505 10 view .LVU1514
 4642 1ca3 742A     		je	.L393	#,
 506:sieve_extend.c ****         source_word++;
 4643              		.loc 1 506 9 view .LVU1515
 4644              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4645              		.loc 1 506 39 is_stmt 0 view .LVU1516
 4646 1ca5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 4646      00
 4647 1caa 4983FF03 		cmp	r15, 3	# prolog_loop_niters.259,
 4648              	# sieve_extend.c:507:         source_word++;
 507:sieve_extend.c ****         copy_word++;
 4649              		.loc 1 507 20 view .LVU1517
 4650 1cae 4D8D6102 		lea	r12, 2[r9]	# source_word,
 4651              	.LVL232:
 4652              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4653              		.loc 1 506 29 view .LVU1518
 4654 1cb2 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 4654      00
GAS LISTING /tmp/ccqpmidN.s 			page 133


 507:sieve_extend.c ****         copy_word++;
 4655              		.loc 1 507 9 is_stmt 1 view .LVU1519
 4656              	.LVL233:
 508:sieve_extend.c ****     }
 4657              		.loc 1 508 9 view .LVU1520
 4658              	# sieve_extend.c:508:         copy_word++;
 508:sieve_extend.c ****     }
 4659              		.loc 1 508 18 is_stmt 0 view .LVU1521
 4660 1cb7 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 4661              	.LVL234:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4662              		.loc 1 505 10 is_stmt 1 view .LVU1522
 4663 1cbb 7512     		jne	.L393	#,
 506:sieve_extend.c ****         source_word++;
 4664              		.loc 1 506 9 view .LVU1523
 4665              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4666              		.loc 1 506 39 is_stmt 0 view .LVU1524
 4667 1cbd 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 4667      00
 4668              	# sieve_extend.c:507:         source_word++;
 507:sieve_extend.c ****         copy_word++;
 4669              		.loc 1 507 20 view .LVU1525
 4670 1cc2 4D8D6103 		lea	r12, 3[r9]	# source_word,
 4671              	.LVL235:
 4672              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4673              		.loc 1 506 29 view .LVU1526
 4674 1cc6 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 4674      00
 507:sieve_extend.c ****         copy_word++;
 4675              		.loc 1 507 9 is_stmt 1 view .LVU1527
 4676              	.LVL236:
 508:sieve_extend.c ****     }
 4677              		.loc 1 508 9 view .LVU1528
 4678              	# sieve_extend.c:508:         copy_word++;
 508:sieve_extend.c ****     }
 4679              		.loc 1 508 18 is_stmt 0 view .LVU1529
 4680 1ccb 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 4681              	.LVL237:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4682              		.loc 1 505 10 is_stmt 1 view .LVU1530
 4683              	.L393:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4684              		.loc 1 505 10 is_stmt 0 view .LVU1531
 4685 1ccf 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 4685      08
 4686 1cd4 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 4687 1cd7 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.259
 4688 1cda 4929C3   		sub	r11, rax	# niters.260, ivtmp.291
 4689 1cdd 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.259
 4690 1ce0 4D89D8   		mov	r8, r11	# bnd.261, niters.260
 4691 1ce3 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.259
 4692 1ce6 49C1E802 		shr	r8, 2	# bnd.261,
 4693 1cea 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.269,
 4693      00
 4694 1cef 49C1E005 		sal	r8, 5	# _182,
GAS LISTING /tmp/ccqpmidN.s 			page 134


 4695              	# sieve_extend.c:495:     counter_t source_word = wordindex(source_start);
 495:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4696              		.loc 1 495 15 view .LVU1532
 4697 1cf3 31C0     		xor	eax, eax	# ivtmp.282
 4698 1cf5 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 4699 1cf9 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.266,
 4699      00
 4700 1cfe 48C1EA05 		shr	rdx, 5	# tmp226,
 4701 1d02 4883C201 		add	rdx, 1	# tmp229,
 4702 1d06 83E207   		and	edx, 7	# tmp230,
 4703 1d09 0F849500 		je	.L395	#,
 4703      0000
 4704 1d0f 4883FA01 		cmp	rdx, 1	# tmp230,
 4705 1d13 7477     		je	.L459	#,
 4706 1d15 4883FA02 		cmp	rdx, 2	# tmp230,
 4707 1d19 7462     		je	.L460	#,
 4708 1d1b 4883FA03 		cmp	rdx, 3	# tmp230,
 4709 1d1f 744D     		je	.L461	#,
 4710 1d21 4883FA04 		cmp	rdx, 4	# tmp230,
 4711 1d25 7438     		je	.L462	#,
 4712 1d27 4883FA05 		cmp	rdx, 5	# tmp230,
 4713 1d2b 7423     		je	.L463	#,
 4714 1d2d 4883FA06 		cmp	rdx, 6	# tmp230,
 4715 1d31 740E     		je	.L464	#,
 506:sieve_extend.c ****         source_word++;
 4716              		.loc 1 506 9 is_stmt 1 view .LVU1533
 4717              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4718              		.loc 1 506 29 is_stmt 0 view .LVU1534
 4719 1d33 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.266_119, index: ivtmp.282_180, offset: 0
 4720 1d37 B8200000 		mov	eax, 32	# ivtmp.282,
 4720      00
 4721 1d3c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], tmp3
 4721      0F
 507:sieve_extend.c ****         copy_word++;
 4722              		.loc 1 507 9 is_stmt 1 view .LVU1535
 508:sieve_extend.c ****     }
 4723              		.loc 1 508 9 view .LVU1536
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4724              		.loc 1 505 10 view .LVU1537
 4725              	.L464:
 506:sieve_extend.c ****         source_word++;
 4726              		.loc 1 506 9 view .LVU1538
 4727              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4728              		.loc 1 506 29 is_stmt 0 view .LVU1539
 4729 1d41 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4729      06
 4730 1d46 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4730      3C07
 507:sieve_extend.c ****         copy_word++;
 4731              		.loc 1 507 9 is_stmt 1 view .LVU1540
 508:sieve_extend.c ****     }
 4732              		.loc 1 508 9 view .LVU1541
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4733              		.loc 1 505 10 view .LVU1542
 4734 1d4c 4883C020 		add	rax, 32	# ivtmp.282,
GAS LISTING /tmp/ccqpmidN.s 			page 135


 4735              	.L463:
 506:sieve_extend.c ****         source_word++;
 4736              		.loc 1 506 9 view .LVU1543
 4737              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4738              		.loc 1 506 29 is_stmt 0 view .LVU1544
 4739 1d50 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4739      06
 4740 1d55 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4740      3407
 507:sieve_extend.c ****         copy_word++;
 4741              		.loc 1 507 9 is_stmt 1 view .LVU1545
 508:sieve_extend.c ****     }
 4742              		.loc 1 508 9 view .LVU1546
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4743              		.loc 1 505 10 view .LVU1547
 4744 1d5b 4883C020 		add	rax, 32	# ivtmp.282,
 4745              	.L462:
 506:sieve_extend.c ****         source_word++;
 4746              		.loc 1 506 9 view .LVU1548
 4747              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4748              		.loc 1 506 29 is_stmt 0 view .LVU1549
 4749 1d5f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4749      06
 4750 1d64 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4750      2C07
 507:sieve_extend.c ****         copy_word++;
 4751              		.loc 1 507 9 is_stmt 1 view .LVU1550
 508:sieve_extend.c ****     }
 4752              		.loc 1 508 9 view .LVU1551
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4753              		.loc 1 505 10 view .LVU1552
 4754 1d6a 4883C020 		add	rax, 32	# ivtmp.282,
 4755              	.L461:
 506:sieve_extend.c ****         source_word++;
 4756              		.loc 1 506 9 view .LVU1553
 4757              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4758              		.loc 1 506 29 is_stmt 0 view .LVU1554
 4759 1d6e C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4759      06
 4760 1d73 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4760      2407
 507:sieve_extend.c ****         copy_word++;
 4761              		.loc 1 507 9 is_stmt 1 view .LVU1555
 508:sieve_extend.c ****     }
 4762              		.loc 1 508 9 view .LVU1556
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4763              		.loc 1 505 10 view .LVU1557
 4764 1d79 4883C020 		add	rax, 32	# ivtmp.282,
 4765              	.L460:
 506:sieve_extend.c ****         source_word++;
 4766              		.loc 1 506 9 view .LVU1558
 4767              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4768              		.loc 1 506 29 is_stmt 0 view .LVU1559
GAS LISTING /tmp/ccqpmidN.s 			page 136


 4769 1d7d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4769      06
 4770 1d82 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4770      0407
 507:sieve_extend.c ****         copy_word++;
 4771              		.loc 1 507 9 is_stmt 1 view .LVU1560
 508:sieve_extend.c ****     }
 4772              		.loc 1 508 9 view .LVU1561
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4773              		.loc 1 505 10 view .LVU1562
 4774 1d88 4883C020 		add	rax, 32	# ivtmp.282,
 4775              	.L459:
 506:sieve_extend.c ****         source_word++;
 4776              		.loc 1 506 9 view .LVU1563
 4777              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4778              		.loc 1 506 29 is_stmt 0 view .LVU1564
 4779 1d8c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4779      06
 4780 1d91 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4780      1407
 507:sieve_extend.c ****         copy_word++;
 4781              		.loc 1 507 9 is_stmt 1 view .LVU1565
 508:sieve_extend.c ****     }
 4782              		.loc 1 508 9 view .LVU1566
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4783              		.loc 1 505 10 view .LVU1567
 4784 1d97 4883C020 		add	rax, 32	# ivtmp.282,
 4785 1d9b 4C39C0   		cmp	rax, r8	# ivtmp.282, _182
 4786 1d9e 0F848D00 		je	.L496	#,
 4786      0000
 4787              	.L395:
 506:sieve_extend.c ****         source_word++;
 4788              		.loc 1 506 9 view .LVU1568
 4789              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4790              		.loc 1 506 29 is_stmt 0 view .LVU1569
 4791 1da4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.266_119, index: ivtmp.282_180, offse
 4791      06
 4792 1da9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B], 
 4792      1C07
 507:sieve_extend.c ****         copy_word++;
 4793              		.loc 1 507 9 is_stmt 1 view .LVU1570
 508:sieve_extend.c ****     }
 4794              		.loc 1 508 9 view .LVU1571
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4795              		.loc 1 505 10 view .LVU1572
 506:sieve_extend.c ****         source_word++;
 4796              		.loc 1 506 9 view .LVU1573
 4797              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4798              		.loc 1 506 29 is_stmt 0 view .LVU1574
 4799 1daf C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.266_119, index: ivtmp.282_180, off
 4799      0620
 4800 1db5 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B]
 4800      440720
 507:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccqpmidN.s 			page 137


 4801              		.loc 1 507 9 is_stmt 1 view .LVU1575
 508:sieve_extend.c ****     }
 4802              		.loc 1 508 9 view .LVU1576
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4803              		.loc 1 505 10 view .LVU1577
 506:sieve_extend.c ****         source_word++;
 4804              		.loc 1 506 9 view .LVU1578
 4805              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4806              		.loc 1 506 29 is_stmt 0 view .LVU1579
 4807 1dbc C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.266_119, index: ivtmp.282_180, off
 4807      0640
 4808 1dc2 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B]
 4808      4C0740
 507:sieve_extend.c ****         copy_word++;
 4809              		.loc 1 507 9 is_stmt 1 view .LVU1580
 508:sieve_extend.c ****     }
 4810              		.loc 1 508 9 view .LVU1581
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4811              		.loc 1 505 10 view .LVU1582
 506:sieve_extend.c ****         source_word++;
 4812              		.loc 1 506 9 view .LVU1583
 4813              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4814              		.loc 1 506 29 is_stmt 0 view .LVU1584
 4815 1dc9 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.266_119, index: ivtmp.282_180, of
 4815      0660
 4816 1dcf C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0B
 4816      540760
 507:sieve_extend.c ****         copy_word++;
 4817              		.loc 1 507 9 is_stmt 1 view .LVU1585
 508:sieve_extend.c ****     }
 4818              		.loc 1 508 9 view .LVU1586
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4819              		.loc 1 505 10 view .LVU1587
 506:sieve_extend.c ****         source_word++;
 4820              		.loc 1 506 9 view .LVU1588
 4821              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4822              		.loc 1 506 29 is_stmt 0 view .LVU1589
 4823 1dd6 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.266_119, index: ivtmp.282_180, o
 4823      06800000 
 4823      00
 4824 1ddf C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0
 4824      9C078000 
 4824      0000
 507:sieve_extend.c ****         copy_word++;
 4825              		.loc 1 507 9 is_stmt 1 view .LVU1590
 508:sieve_extend.c ****     }
 4826              		.loc 1 508 9 view .LVU1591
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4827              		.loc 1 505 10 view .LVU1592
 506:sieve_extend.c ****         source_word++;
 4828              		.loc 1 506 9 view .LVU1593
 4829              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4830              		.loc 1 506 29 is_stmt 0 view .LVU1594
GAS LISTING /tmp/ccqpmidN.s 			page 138


 4831 1de9 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.266_119, index: ivtmp.282_180, o
 4831      06A00000 
 4831      00
 4832 1df2 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0
 4832      A407A000 
 4832      0000
 507:sieve_extend.c ****         copy_word++;
 4833              		.loc 1 507 9 is_stmt 1 view .LVU1595
 508:sieve_extend.c ****     }
 4834              		.loc 1 508 9 view .LVU1596
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4835              		.loc 1 505 10 view .LVU1597
 506:sieve_extend.c ****         source_word++;
 4836              		.loc 1 506 9 view .LVU1598
 4837              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4838              		.loc 1 506 29 is_stmt 0 view .LVU1599
 4839 1dfc C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.266_119, index: ivtmp.282_180, o
 4839      06C00000 
 4839      00
 4840 1e05 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0
 4840      AC07C000 
 4840      0000
 507:sieve_extend.c ****         copy_word++;
 4841              		.loc 1 507 9 is_stmt 1 view .LVU1600
 508:sieve_extend.c ****     }
 4842              		.loc 1 508 9 view .LVU1601
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4843              		.loc 1 505 10 view .LVU1602
 506:sieve_extend.c ****         source_word++;
 4844              		.loc 1 506 9 view .LVU1603
 4845              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4846              		.loc 1 506 29 is_stmt 0 view .LVU1604
 4847 1e0f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.266_119, index: ivtmp.282_180, o
 4847      06E00000 
 4847      00
 4848 1e18 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.269_125, index: ivtmp.282_180, offset: 0
 4848      B407E000 
 4848      0000
 507:sieve_extend.c ****         copy_word++;
 4849              		.loc 1 507 9 is_stmt 1 view .LVU1605
 508:sieve_extend.c ****     }
 4850              		.loc 1 508 9 view .LVU1606
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4851              		.loc 1 505 10 view .LVU1607
 4852 1e22 48050001 		add	rax, 256	# ivtmp.282,
 4852      0000
 4853 1e28 4C39C0   		cmp	rax, r8	# ivtmp.282, _182
 4854 1e2b 0F8573FF 		jne	.L395	#,
 4854      FFFF
 4855              	.L496:
 4856 1e31 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.262, niters.260
 4857 1e34 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.262,
 4858 1e38 4D01CC   		add	r12, r9	# tmp.263, niters_vector_mult_vf.262
 4859 1e3b 4D01CE   		add	r14, r9	# tmp.264, niters_vector_mult_vf.262
 4860 1e3e 4D39CB   		cmp	r11, r9	# niters.260, niters_vector_mult_vf.262
GAS LISTING /tmp/ccqpmidN.s 			page 139


 4861 1e41 7455     		je	.L499	#,
 4862              	.LVL238:
 506:sieve_extend.c ****         source_word++;
 4863              		.loc 1 506 9 view .LVU1608
 4864              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4865              		.loc 1 506 39 is_stmt 0 view .LVU1609
 4866 1e43 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 4866      00
 4867              	# sieve_extend.c:508:         copy_word++;
 508:sieve_extend.c ****     }
 4868              		.loc 1 508 18 view .LVU1610
 4869 1e48 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 4870              	# sieve_extend.c:507:         source_word++;
 507:sieve_extend.c ****         copy_word++;
 4871              		.loc 1 507 20 view .LVU1611
 4872 1e4c 4983C401 		add	r12, 1	# source_word,
 4873              	.LVL239:
 4874              	# sieve_extend.c:505:    while (copy_word < destination_stop_word) {
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4875              		.loc 1 505 10 view .LVU1612
 4876 1e50 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 4877              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4878              		.loc 1 506 29 view .LVU1613
 4879 1e53 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 4879      00
 507:sieve_extend.c ****         copy_word++;
 4880              		.loc 1 507 9 is_stmt 1 view .LVU1614
 4881              	.LVL240:
 508:sieve_extend.c ****     }
 4882              		.loc 1 508 9 view .LVU1615
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4883              		.loc 1 505 10 view .LVU1616
 4884 1e58 763E     		jbe	.L499	#,
 506:sieve_extend.c ****         source_word++;
 4885              		.loc 1 506 9 view .LVU1617
 4886              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4887              		.loc 1 506 39 is_stmt 0 view .LVU1618
 4888 1e5a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 4888      00000000 
 4889              	# sieve_extend.c:508:         copy_word++;
 508:sieve_extend.c ****     }
 4890              		.loc 1 508 18 view .LVU1619
 4891 1e62 4983C602 		add	r14, 2	# copy_word,
 4892              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4893              		.loc 1 506 39 view .LVU1620
 4894 1e66 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 4894      00
 4895              	# sieve_extend.c:505:    while (copy_word < destination_stop_word) {
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4896              		.loc 1 505 10 view .LVU1621
 4897 1e6b 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 4898              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccqpmidN.s 			page 140


 4899              		.loc 1 506 29 view .LVU1622
 4900 1e6e 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 4900      00
 507:sieve_extend.c ****         copy_word++;
 4901              		.loc 1 507 9 is_stmt 1 view .LVU1623
 508:sieve_extend.c ****     }
 4902              		.loc 1 508 9 view .LVU1624
 4903              	.LVL241:
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4904              		.loc 1 505 10 view .LVU1625
 4905 1e73 7623     		jbe	.L499	#,
 506:sieve_extend.c ****         source_word++;
 4906              		.loc 1 506 9 view .LVU1626
 4907              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4908              		.loc 1 506 39 is_stmt 0 view .LVU1627
 4909 1e75 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 4909      08
 4910              	.LVL242:
 4911              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4912              		.loc 1 506 29 view .LVU1628
 4913 1e7a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 4913      00
 507:sieve_extend.c ****         copy_word++;
 4914              		.loc 1 507 9 is_stmt 1 view .LVU1629
 508:sieve_extend.c ****     }
 4915              		.loc 1 508 9 view .LVU1630
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4916              		.loc 1 505 10 view .LVU1631
 4917 1e7f C5F877   		vzeroupper
 4918              	.LVL243:
 4919              	.L500:
 4920              	# sieve_extend.c:511: }
 511:sieve_extend.c **** 
 4921              		.loc 1 511 1 is_stmt 0 view .LVU1632
 4922 1e82 488D65D8 		lea	rsp, -40[rbp]	#,
 4923 1e86 5B       		pop	rbx	#
 4924 1e87 415C     		pop	r12	#
 4925 1e89 415D     		pop	r13	#
 4926 1e8b 415E     		pop	r14	#
 4927 1e8d 415F     		pop	r15	#
 4928 1e8f 5D       		pop	rbp	#
 4929              		.cfi_remember_state
 4930              		.cfi_def_cfa 7, 8
 4931 1e90 C3       		ret	
 4932              	.LVL244:
 4933              		.p2align 4,,7
 4934 1e91 0F1F8000 		.p2align 3
 4934      000000
 4935              	.L499:
 4936              		.cfi_restore_state
 511:sieve_extend.c **** 
 4937              		.loc 1 511 1 view .LVU1633
 4938 1e98 C5F877   		vzeroupper
 4939 1e9b 488D65D8 		lea	rsp, -40[rbp]	#,
 4940 1e9f 5B       		pop	rbx	#
GAS LISTING /tmp/ccqpmidN.s 			page 141


 4941              	.LVL245:
 511:sieve_extend.c **** 
 4942              		.loc 1 511 1 view .LVU1634
 4943 1ea0 415C     		pop	r12	#
 4944 1ea2 415D     		pop	r13	#
 4945              	.LVL246:
 511:sieve_extend.c **** 
 4946              		.loc 1 511 1 view .LVU1635
 4947 1ea4 415E     		pop	r14	#
 4948 1ea6 415F     		pop	r15	#
 4949 1ea8 5D       		pop	rbp	#
 4950              		.cfi_remember_state
 4951              		.cfi_def_cfa 7, 8
 4952 1ea9 C3       		ret	
 4953              	.LVL247:
 4954 1eaa 660F1F44 		.p2align 4,,7
 4954      0000
 4955              		.p2align 3
 4956              	.L392:
 4957              		.cfi_restore_state
 4958              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4959              		.loc 1 506 39 view .LVU1636
 4960 1eb0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 4960      08
 4961 1eb5 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.277,
 4961      00
 4962 1eba 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 4962      00
 4963              	.LVL248:
 506:sieve_extend.c ****         source_word++;
 4964              		.loc 1 506 39 view .LVU1637
 4965 1ebf 4C89EE   		mov	rsi, r13	# tmp221, _179
 4966 1ec2 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.277
 4967 1ec5 4829C7   		sub	rdi, rax	# source_word, ivtmp.291
 4968 1ec8 4883EE08 		sub	rsi, 8	# tmp222,
 4969 1ecc 48C1EE03 		shr	rsi, 3	# tmp220,
 4970 1ed0 4883C601 		add	rsi, 1	# tmp223,
 4971 1ed4 83E607   		and	esi, 7	# tmp224,
 4972 1ed7 0F848100 		je	.L397	#,
 4972      0000
 4973 1edd 4883FE01 		cmp	rsi, 1	# tmp224,
 4974 1ee1 7466     		je	.L465	#,
 4975 1ee3 4883FE02 		cmp	rsi, 2	# tmp224,
 4976 1ee7 7454     		je	.L466	#,
 4977 1ee9 4883FE03 		cmp	rsi, 3	# tmp224,
 4978 1eed 7442     		je	.L467	#,
 4979 1eef 4883FE04 		cmp	rsi, 4	# tmp224,
 4980 1ef3 7430     		je	.L468	#,
 4981 1ef5 4883FE05 		cmp	rsi, 5	# tmp224,
 4982 1ef9 741E     		je	.L469	#,
 4983 1efb 4883FE06 		cmp	rsi, 6	# tmp224,
 4984 1eff 740C     		je	.L470	#,
 4985              	.LVL249:
 506:sieve_extend.c ****         source_word++;
 4986              		.loc 1 506 9 is_stmt 1 view .LVU1638
 4987              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccqpmidN.s 			page 142


 506:sieve_extend.c ****         source_word++;
 4988              		.loc 1 506 39 is_stmt 0 view .LVU1639
 4989 1f01 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 4990 1f05 4983C608 		add	r14, 8	# ivtmp.277,
 4991              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 4992              		.loc 1 506 29 view .LVU1640
 4993 1f09 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 4994              		.loc 1 507 9 is_stmt 1 view .LVU1641
 508:sieve_extend.c ****     }
 4995              		.loc 1 508 9 view .LVU1642
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4996              		.loc 1 505 10 view .LVU1643
 4997              	.L470:
 506:sieve_extend.c ****         source_word++;
 4998              		.loc 1 506 9 view .LVU1644
 4999              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5000              		.loc 1 506 39 is_stmt 0 view .LVU1645
 5001 1f0d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5002 1f11 4983C608 		add	r14, 8	# ivtmp.277,
 5003              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5004              		.loc 1 506 29 view .LVU1646
 5005 1f15 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5006              		.loc 1 507 9 is_stmt 1 view .LVU1647
 508:sieve_extend.c ****     }
 5007              		.loc 1 508 9 view .LVU1648
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5008              		.loc 1 505 10 view .LVU1649
 5009              	.L469:
 506:sieve_extend.c ****         source_word++;
 5010              		.loc 1 506 9 view .LVU1650
 5011              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5012              		.loc 1 506 39 is_stmt 0 view .LVU1651
 5013 1f19 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5014 1f1d 4983C608 		add	r14, 8	# ivtmp.277,
 5015              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5016              		.loc 1 506 29 view .LVU1652
 5017 1f21 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5018              		.loc 1 507 9 is_stmt 1 view .LVU1653
 508:sieve_extend.c ****     }
 5019              		.loc 1 508 9 view .LVU1654
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5020              		.loc 1 505 10 view .LVU1655
 5021              	.L468:
 506:sieve_extend.c ****         source_word++;
 5022              		.loc 1 506 9 view .LVU1656
 5023              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5024              		.loc 1 506 39 is_stmt 0 view .LVU1657
 5025 1f25 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/ccqpmidN.s 			page 143


 5026 1f29 4983C608 		add	r14, 8	# ivtmp.277,
 5027              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5028              		.loc 1 506 29 view .LVU1658
 5029 1f2d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5030              		.loc 1 507 9 is_stmt 1 view .LVU1659
 508:sieve_extend.c ****     }
 5031              		.loc 1 508 9 view .LVU1660
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5032              		.loc 1 505 10 view .LVU1661
 5033              	.L467:
 506:sieve_extend.c ****         source_word++;
 5034              		.loc 1 506 9 view .LVU1662
 5035              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5036              		.loc 1 506 39 is_stmt 0 view .LVU1663
 5037 1f31 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5038 1f35 4983C608 		add	r14, 8	# ivtmp.277,
 5039              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5040              		.loc 1 506 29 view .LVU1664
 5041 1f39 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5042              		.loc 1 507 9 is_stmt 1 view .LVU1665
 508:sieve_extend.c ****     }
 5043              		.loc 1 508 9 view .LVU1666
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5044              		.loc 1 505 10 view .LVU1667
 5045              	.L466:
 506:sieve_extend.c ****         source_word++;
 5046              		.loc 1 506 9 view .LVU1668
 5047              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5048              		.loc 1 506 39 is_stmt 0 view .LVU1669
 5049 1f3d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5050 1f41 4983C608 		add	r14, 8	# ivtmp.277,
 5051              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5052              		.loc 1 506 29 view .LVU1670
 5053 1f45 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5054              		.loc 1 507 9 is_stmt 1 view .LVU1671
 508:sieve_extend.c ****     }
 5055              		.loc 1 508 9 view .LVU1672
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5056              		.loc 1 505 10 view .LVU1673
 5057              	.L465:
 506:sieve_extend.c ****         source_word++;
 5058              		.loc 1 506 9 view .LVU1674
 5059              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5060              		.loc 1 506 39 is_stmt 0 view .LVU1675
 5061 1f49 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5062 1f4d 4983C608 		add	r14, 8	# ivtmp.277,
 5063              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccqpmidN.s 			page 144


 5064              		.loc 1 506 29 view .LVU1676
 5065 1f51 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5066              		.loc 1 507 9 is_stmt 1 view .LVU1677
 508:sieve_extend.c ****     }
 5067              		.loc 1 508 9 view .LVU1678
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5068              		.loc 1 505 10 view .LVU1679
 5069 1f55 4D39EE   		cmp	r14, r13	# ivtmp.277, _179
 5070 1f58 0F8424FF 		je	.L500	#,
 5070      FFFF
 5071              	.LVL250:
 5072              	.L397:
 506:sieve_extend.c ****         source_word++;
 5073              		.loc 1 506 9 view .LVU1680
 5074              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5075              		.loc 1 506 39 is_stmt 0 view .LVU1681
 5076 1f5e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5077              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5078              		.loc 1 506 29 view .LVU1682
 5079 1f62 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5080              		.loc 1 507 9 is_stmt 1 view .LVU1683
 508:sieve_extend.c ****     }
 5081              		.loc 1 508 9 view .LVU1684
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5082              		.loc 1 505 10 view .LVU1685
 506:sieve_extend.c ****         source_word++;
 5083              		.loc 1 506 9 view .LVU1686
 5084              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5085              		.loc 1 506 39 is_stmt 0 view .LVU1687
 5086 1f65 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5086      08
 5087              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5088              		.loc 1 506 29 view .LVU1688
 5089 1f6a 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5090              		.loc 1 507 9 is_stmt 1 view .LVU1689
 508:sieve_extend.c ****     }
 5091              		.loc 1 508 9 view .LVU1690
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5092              		.loc 1 505 10 view .LVU1691
 506:sieve_extend.c ****         source_word++;
 5093              		.loc 1 506 9 view .LVU1692
 5094              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5095              		.loc 1 506 39 is_stmt 0 view .LVU1693
 5096 1f6e 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5096      10
 5097              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5098              		.loc 1 506 29 view .LVU1694
 5099 1f73 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
GAS LISTING /tmp/ccqpmidN.s 			page 145


 507:sieve_extend.c ****         copy_word++;
 5100              		.loc 1 507 9 is_stmt 1 view .LVU1695
 508:sieve_extend.c ****     }
 5101              		.loc 1 508 9 view .LVU1696
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5102              		.loc 1 505 10 view .LVU1697
 506:sieve_extend.c ****         source_word++;
 5103              		.loc 1 506 9 view .LVU1698
 5104              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5105              		.loc 1 506 39 is_stmt 0 view .LVU1699
 5106 1f77 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5106      18
 5107              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5108              		.loc 1 506 29 view .LVU1700
 5109 1f7c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5110              		.loc 1 507 9 is_stmt 1 view .LVU1701
 508:sieve_extend.c ****     }
 5111              		.loc 1 508 9 view .LVU1702
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5112              		.loc 1 505 10 view .LVU1703
 506:sieve_extend.c ****         source_word++;
 5113              		.loc 1 506 9 view .LVU1704
 5114              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5115              		.loc 1 506 39 is_stmt 0 view .LVU1705
 5116 1f80 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5116      20
 5117              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5118              		.loc 1 506 29 view .LVU1706
 5119 1f85 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5120              		.loc 1 507 9 is_stmt 1 view .LVU1707
 508:sieve_extend.c ****     }
 5121              		.loc 1 508 9 view .LVU1708
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5122              		.loc 1 505 10 view .LVU1709
 506:sieve_extend.c ****         source_word++;
 5123              		.loc 1 506 9 view .LVU1710
 5124              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5125              		.loc 1 506 39 is_stmt 0 view .LVU1711
 5126 1f89 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5126      28
 5127              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5128              		.loc 1 506 29 view .LVU1712
 5129 1f8e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5130              		.loc 1 507 9 is_stmt 1 view .LVU1713
 508:sieve_extend.c ****     }
 5131              		.loc 1 508 9 view .LVU1714
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5132              		.loc 1 505 10 view .LVU1715
GAS LISTING /tmp/ccqpmidN.s 			page 146


 506:sieve_extend.c ****         source_word++;
 5133              		.loc 1 506 9 view .LVU1716
 5134              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5135              		.loc 1 506 39 is_stmt 0 view .LVU1717
 5136 1f92 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5136      30
 5137              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5138              		.loc 1 506 29 view .LVU1718
 5139 1f97 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5140              		.loc 1 507 9 is_stmt 1 view .LVU1719
 508:sieve_extend.c ****     }
 5141              		.loc 1 508 9 view .LVU1720
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5142              		.loc 1 505 10 view .LVU1721
 506:sieve_extend.c ****         source_word++;
 5143              		.loc 1 506 9 view .LVU1722
 5144              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5145              		.loc 1 506 39 is_stmt 0 view .LVU1723
 5146 1f9b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5146      38
 5147 1fa0 4983C640 		add	r14, 64	# ivtmp.277,
 5148              	# sieve_extend.c:506:         bitarray[copy_word] = bitarray[source_word];
 506:sieve_extend.c ****         source_word++;
 5149              		.loc 1 506 29 view .LVU1724
 5150 1fa4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 507:sieve_extend.c ****         copy_word++;
 5151              		.loc 1 507 9 is_stmt 1 view .LVU1725
 508:sieve_extend.c ****     }
 5152              		.loc 1 508 9 view .LVU1726
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5153              		.loc 1 505 10 view .LVU1727
 5154 1fa8 4D39EE   		cmp	r14, r13	# ivtmp.277, _179
 5155 1fab 75B1     		jne	.L397	#,
 5156 1fad E9D0FEFF 		jmp	.L500	#
 5156      FF
 5157              	.LVL251:
 5158              		.p2align 4,,7
 5159 1fb2 660F1F44 		.p2align 3
 5159      0000
 5160              	.L399:
 5161              	# sieve_extend.c:495:     counter_t source_word = wordindex(source_start);
 495:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5162              		.loc 1 495 15 is_stmt 0 view .LVU1728
 5163 1fb8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5163      08
 5164              	# sieve_extend.c:505:    while (copy_word < destination_stop_word) {
 505:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5165              		.loc 1 505 10 view .LVU1729
 5166 1fbd 4989C6   		mov	r14, rax	# copy_word, ivtmp.291
 5167 1fc0 E90AFDFF 		jmp	.L393	#
 5167      FF
 5168              		.cfi_endproc
 5169              	.LFE65:
GAS LISTING /tmp/ccqpmidN.s 			page 147


 5171 1fc5 66662E0F 		.p2align 4
 5171      1F840000 
 5171      000000
 5173              	extendSieve_shiftleft:
 5174              	.LVL252:
 5175              	.LFB71:
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5176              		.loc 1 751 142 is_stmt 1 view -0
 5177              		.cfi_startproc
 752:sieve_extend.c **** 
 5178              		.loc 1 752 5 view .LVU1731
 754:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5179              		.loc 1 754 5 view .LVU1732
 5180              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5181              		.loc 1 751 142 is_stmt 0 view .LVU1733
 5182 1fd0 55       		push	rbp	#
 5183              		.cfi_def_cfa_offset 16
 5184              		.cfi_offset 6, -16
 5185              	# sieve_extend.c:754:     const counter_t destination_stop_word = wordindex(destination_stop);
 754:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5186              		.loc 1 754 21 view .LVU1734
 5187 1fd1 48C1E906 		shr	rcx, 6	# tmp1219,
 5188              	.LVL253:
 5189              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5190              		.loc 1 751 142 view .LVU1735
 5191 1fd5 4989D2   		mov	r10, rdx	# size, tmp1218
 5192 1fd8 4889E5   		mov	rbp, rsp	#,
 5193              		.cfi_def_cfa_register 6
 5194 1fdb 4157     		push	r15	#
 5195 1fdd 4156     		push	r14	#
 5196              		.cfi_offset 15, -24
 5197              		.cfi_offset 14, -32
 5198              	# sieve_extend.c:754:     const counter_t destination_stop_word = wordindex(destination_stop);
 754:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5199              		.loc 1 754 21 view .LVU1736
 5200 1fdf 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 5201              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5202              		.loc 1 751 142 view .LVU1737
 5203 1fe2 4155     		push	r13	#
 5204 1fe4 4154     		push	r12	#
 5205 1fe6 53       		push	rbx	#
 5206              		.cfi_offset 13, -40
 5207              		.cfi_offset 12, -48
 5208              		.cfi_offset 3, -56
 5209 1fe7 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 5210              	# sieve_extend.c:755:     const counter_t copy_start = source_start + size;
 755:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5211              		.loc 1 755 21 view .LVU1738
 5212 1fea 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 5213              	.LVL254:
 5214              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5215              		.loc 1 751 142 view .LVU1739
 5216 1fee 4883E4E0 		and	rsp, -32	#,
GAS LISTING /tmp/ccqpmidN.s 			page 148


 5217              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5218              		.loc 1 756 69 view .LVU1740
 5219 1ff2 4889F8   		mov	rax, rdi	# _5, copy_start
 5220              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5221              		.loc 1 751 142 view .LVU1741
 5222 1ff5 488D6424 		lea	rsp, -96[rsp]	#,
 5222      A0
 5223              	# sieve_extend.c:759:     register counter_t copy_word = wordindex(copy_start);
 759:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5224              		.loc 1 759 24 view .LVU1742
 5225 1ffa 4989FB   		mov	r11, rdi	# copy_word, copy_start
 5226              	# sieve_extend.c:754:     const counter_t destination_stop_word = wordindex(destination_stop);
 754:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5227              		.loc 1 754 21 view .LVU1743
 5228 1ffd 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 5228      50
 5229              	.LVL255:
 755:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5230              		.loc 1 755 5 is_stmt 1 view .LVU1744
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5231              		.loc 1 756 5 view .LVU1745
 5232              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5233              		.loc 1 756 39 is_stmt 0 view .LVU1746
 5234 2002 4889F1   		mov	rcx, rsi	# _4, source_start
 5235              	.LVL256:
 5236              	# sieve_extend.c:758:     register counter_t source_word = wordindex(source_start);
 758:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5237              		.loc 1 758 24 view .LVU1747
 5238 2005 48C1EE06 		shr	rsi, 6	# source_start,
 5239              	.LVL257:
 5240              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5241              		.loc 1 756 39 view .LVU1748
 5242 2009 83E13F   		and	ecx, 63	# _4,
 5243              	.LVL258:
 5244              	# sieve_extend.c:758:     register counter_t source_word = wordindex(source_start);
 758:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5245              		.loc 1 758 24 view .LVU1749
 5246 200c 4989F0   		mov	r8, rsi	# source_word, source_start
 5247              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5248              		.loc 1 756 69 view .LVU1750
 5249 200f 83E03F   		and	eax, 63	# _5,
 5250              	.LVL259:
 757:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5251              		.loc 1 757 5 is_stmt 1 view .LVU1751
 758:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5252              		.loc 1 758 5 view .LVU1752
 759:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5253              		.loc 1 759 5 view .LVU1753
 5254              	# sieve_extend.c:759:     register counter_t copy_word = wordindex(copy_start);
 759:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5255              		.loc 1 759 24 is_stmt 0 view .LVU1754
 5256 2012 49C1EB06 		shr	r11, 6	# copy_word,
GAS LISTING /tmp/ccqpmidN.s 			page 149


 5257              	.LVL260:
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5258              		.loc 1 760 5 is_stmt 1 view .LVU1755
 5259              	# sieve_extend.c:761:                              | (bitarray[source_word+1] << shift_flipped))
 761:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5260              		.loc 1 761 41 is_stmt 0 view .LVU1756
 5261 2016 4D8D4801 		lea	r9, 1[r8]	# _183,
 5262              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5263              		.loc 1 756 31 view .LVU1757
 5264 201a 4989CD   		mov	r13, rcx	# shift, _4
 5265              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5266              		.loc 1 760 25 view .LVU1758
 5267 201d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5267      00000000 
 5268              	# sieve_extend.c:761:                              | (bitarray[source_word+1] << shift_flipped))
 761:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5269              		.loc 1 761 41 view .LVU1759
 5270 2025 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 5270      58
 5271              	# sieve_extend.c:756:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 756:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5272              		.loc 1 756 31 view .LVU1760
 5273 202a 4929C5   		sub	r13, rax	# shift, _5
 5274              	.LVL261:
 5275              	# sieve_extend.c:767:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 767:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5276              		.loc 1 767 41 view .LVU1761
 5277 202d 4D01D1   		add	r9, r10	# tmp555, size
 5278              	# sieve_extend.c:757:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 757:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5279              		.loc 1 757 31 view .LVU1762
 5280 2030 4829C8   		sub	rax, rcx	# tmp542, _4
 5281              	.LVL262:
 5282              	# sieve_extend.c:751: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 751:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5283              		.loc 1 751 142 view .LVU1763
 5284 2033 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5284      18
 5285              	# sieve_extend.c:757:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 757:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5286              		.loc 1 757 31 view .LVU1764
 5287 2038 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 5288              	.LVL263:
 5289              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5290              		.loc 1 760 52 view .LVU1765
 5291 203c 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 5292              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5293              		.loc 1 760 38 view .LVU1766
 5294 2040 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 5294      00000000 
 5295              	.LVL264:
 5296              	# sieve_extend.c:762:                              & ~chopmask(copy_start); // because this is the 
 762:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 150


 5297              		.loc 1 762 33 view .LVU1767
 5298 2048 F7D7     		not	edi	# tmp549
 5299              	.LVL265:
 5300              	# sieve_extend.c:761:                              | (bitarray[source_word+1] << shift_flipped))
 761:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5301              		.loc 1 761 57 view .LVU1768
 5302 204a C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 5302      441308
 5303              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5304              		.loc 1 760 52 view .LVU1769
 5305 2051 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 5305      C1
 5306              	# sieve_extend.c:761:                              | (bitarray[source_word+1] << shift_flipped))
 761:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5307              		.loc 1 761 30 view .LVU1770
 5308 2056 4909C0   		or	r8, rax	# tmp548, tmp544
 5309              	# sieve_extend.c:762:                              & ~chopmask(copy_start); // because this is the 
 762:sieve_extend.c **** 
 5310              		.loc 1 762 33 view .LVU1771
 5311 2059 48C7C0FF 		mov	rax, -1	# tmp552,
 5311      FFFFFF
 5312 2060 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 5312      F8
 5313              	# sieve_extend.c:762:                              & ~chopmask(copy_start); // because this is the 
 762:sieve_extend.c **** 
 5314              		.loc 1 762 30 view .LVU1772
 5315 2065 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 5315      C8
 5316              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5317              		.loc 1 760 25 view .LVU1773
 5318 206a 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 764:sieve_extend.c ****     source_word++;
 5319              		.loc 1 764 5 is_stmt 1 view .LVU1774
 5320              	# sieve_extend.c:767:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 767:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5321              		.loc 1 767 21 is_stmt 0 view .LVU1775
 5322 206e 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 5323              	# sieve_extend.c:764:     copy_word++;
 764:sieve_extend.c ****     source_word++;
 5324              		.loc 1 764 14 view .LVU1776
 5325 2071 498D4301 		lea	rax, 1[r11]	# ivtmp.375,
 5326              	.LVL266:
 765:sieve_extend.c **** 
 5327              		.loc 1 765 5 is_stmt 1 view .LVU1777
 767:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5328              		.loc 1 767 5 view .LVU1778
 5329              	# sieve_extend.c:761:                              | (bitarray[source_word+1] << shift_flipped))
 761:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5330              		.loc 1 761 57 is_stmt 0 view .LVU1779
 5331 2075 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 5331      48
 5332              	# sieve_extend.c:760:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 760:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5333              		.loc 1 760 52 view .LVU1780
 5334 207a 4589EC   		mov	r12d, r13d	# _12, shift
GAS LISTING /tmp/ccqpmidN.s 			page 151


 5335              	# sieve_extend.c:767:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 767:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5336              		.loc 1 767 21 view .LVU1781
 5337 207d 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 5338              	.LBB295:
 5339              	.LBB296:
 5340              	# sieve_extend.c:608:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 608:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5341              		.loc 1 608 91 view .LVU1782
 5342 2081 41BE0200 		mov	r14d, 2	# tmp556,
 5342      0000
 5343              	.LVL267:
 608:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5344              		.loc 1 608 91 view .LVU1783
 5345              	.LBE296:
 5346              	.LBE295:
 5347              	# sieve_extend.c:767:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 767:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5348              		.loc 1 767 21 view .LVU1784
 5349 2087 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 5349      40
 5350              	.LVL268:
 768:sieve_extend.c ****     source_word += distance;
 5351              		.loc 1 768 5 is_stmt 1 view .LVU1785
 5352              	.LBB321:
 5353              	.LBI295:
 607:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 5354              		.loc 1 607 25 view .LVU1786
 5355              	.LBB318:
 608:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5356              		.loc 1 608 5 view .LVU1787
 5357              	# sieve_extend.c:608:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 608:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5358              		.loc 1 608 91 is_stmt 0 view .LVU1788
 5359 208c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 5360 2090 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 5361              	# sieve_extend.c:608:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 608:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5362              		.loc 1 608 21 view .LVU1789
 5363 2094 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 5364 2098 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 5364      30
 5365              	.LVL269:
 609:sieve_extend.c ****     counter_t distance = 0;
 5366              		.loc 1 609 5 is_stmt 1 view .LVU1790
 610:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 5367              		.loc 1 610 5 view .LVU1791
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5368              		.loc 1 611 5 view .LVU1792
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5369              		.loc 1 611 11 view .LVU1793
 5370 209d 4C39C0   		cmp	rax, r8	# ivtmp.375, fast_loop_stop_word
 5371 20a0 0F83A404 		jnb	.L503	#,
 5371      0000
 5372 20a6 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 5373              	.LVL270:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/ccqpmidN.s 			page 152


 5374              		.loc 1 611 11 is_stmt 0 view .LVU1794
 5375 20aa 4D29DE   		sub	r14, r11	# tmp557, copy_word
 5376 20ad 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 5377              	.LVL271:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5378              		.loc 1 611 11 view .LVU1795
 5379 20b1 498D7EFC 		lea	rdi, -4[r14]	# _332,
 5380 20b5 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 5381 20b9 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 5382 20bc 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 5383 20c0 410F9EC1 		setle	r9b	#, tmp562
 5384              	.LVL272:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5385              		.loc 1 611 11 view .LVU1796
 5386 20c4 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 5386      38
 5387 20c9 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 5388 20cc 400F9EC7 		setle	dil	#, tmp566
 5389 20d0 4109F9   		or	r9d, edi	# tmp567, tmp566
 5390 20d3 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 5391 20d7 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 5391      28
 5392 20dc 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 5393 20df 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5393      27
 5394 20e4 4883C210 		add	rdx, 16	# tmp573,
 5395 20e8 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 5396 20eb 400F9EC7 		setle	dil	#, tmp575
 5397 20ef 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 5397      27
 5398 20f4 4421CF   		and	edi, r9d	# tmp577, tmp567
 5399 20f7 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 5399      380B
 5400 20fd 410F97C1 		seta	r9b	#, tmp579
 5401 2101 4421CF   		and	edi, r9d	# tmp580, tmp579
 5402 2104 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 5403 2108 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 5404 210b 410F9EC2 		setle	r10b	#, tmp584
 5405 210f 4883C640 		add	rsi, 64	# tmp585,
 5406 2113 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 5407 2116 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5407      27
 5408 211b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 5408      27
 5409 2120 4421D7   		and	edi, r10d	# tmp590, tmp589
 5410 2123 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 5410      28
 5411 2128 410F9EC2 		setle	r10b	#, tmp594
 5412 212c 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 5413 212f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 5413      28
 5414 2134 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 5414      28
 5415 2139 4484D7   		test	dil, r10b	# tmp590, tmp599
 5416 213c 0F845E0D 		je	.L504	#,
 5416      0000
 5417 2142 4D39CE   		cmp	r14, r9	# tmp563, tmp582
GAS LISTING /tmp/ccqpmidN.s 			page 153


 5418 2145 410F9EC6 		setle	r14b	#, tmp604
 5419 2149 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 5420 214c 400F9EC6 		setle	sil	#, tmp608
 5421 2150 4108F6   		or	r14b, sil	# tmp604, tmp608
 5422 2153 0F84470D 		je	.L504	#,
 5422      0000
 5423 2159 4801D9   		add	rcx, rbx	# vectp.340, bitarray
 5424 215c 4801DA   		add	rdx, rbx	# vectp.344, bitarray
 5425              	.LBB297:
 5426              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5427              		.loc 1 613 19 view .LVU1797
 5428 215f C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B], MEM[
 5429 2163 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 5429      DD
 5430 2168 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 32B], M
 5430      20
 5431 216d C4C1796E 		vmovd	xmm4, r15d	# _18,
 5431      E7
 5432              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5433              		.loc 1 612 19 view .LVU1798
 5434 2172 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.340_490, index: ivtmp.415_748, offset: 
 5435              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5436              		.loc 1 613 19 view .LVU1799
 5437 2176 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B],
 5438 217a C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B]
 5439              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5440              		.loc 1 612 19 view .LVU1800
 5441 217e C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.340_490, index: ivt
 5441      20
 5442 2183 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 5442      38
 5443              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5444              		.loc 1 613 19 view .LVU1801
 5445 2188 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 5445      C5D8
 5446              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5447              		.loc 1 612 19 view .LVU1802
 5448 218e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 5448      F2D8
 5449              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5450              		.loc 1 613 19 view .LVU1803
 5451 2194 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 5451      FED8
 5452              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5453              		.loc 1 614 63 view .LVU1804
 5454 219a C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.348, vect_perm_even_507, _18
 5455              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5456              		.loc 1 614 42 view .LVU1805
GAS LISTING /tmp/ccqpmidN.s 			page 154


 5457 219e C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.347, tmp619, _12
 5458              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5459              		.loc 1 616 42 view .LVU1806
 5460 21a2 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.350, vect_perm_even_507, _12
 5461              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5462              		.loc 1 616 63 view .LVU1807
 5463 21a6 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.351, tmp633, _18
 5464 21aa 49C1EE03 		shr	r14, 3	# _332,
 5465              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5466              		.loc 1 614 52 view .LVU1808
 5467 21ae C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.349, vect__98.347, vect__100.348
 5467      DA
 5468              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5469              		.loc 1 616 52 view .LVU1809
 5470 21b3 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.352, vect__110.351, vect__109.350
 5471 21b7 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 5472              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5473              		.loc 1 614 31 view .LVU1810
 5474 21bb C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.349
 5474      DD01
 5475 21c1 4183E201 		and	r10d, 1	# tmp830,
 5476              	.LVL273:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5477              		.loc 1 612 9 is_stmt 1 view .LVU1811
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5478              		.loc 1 613 9 view .LVU1812
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5479              		.loc 1 614 9 view .LVU1813
 5480              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5481              		.loc 1 616 31 is_stmt 0 view .LVU1814
 5482 21c5 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.352
 5482      EF01
 5483 21cb 4983FE01 		cmp	r14, 1	# bnd.333,
 5484              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5485              		.loc 1 614 31 view .LVU1815
 5486 21cf C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.415_748, offset: 0B], tmp626
 5486      1C0B
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5487              		.loc 1 614 31 view .LVU1816
 5488 21d5 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 5489              	.LVL274:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5490              		.loc 1 614 31 view .LVU1817
 5491 21d9 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 16B], tmp62
 5491      5C0B1001 
 5492 21e1 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 5493 21e5 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.415_748, offset: 32B], tmp630
 5493      6C0B20
 5494 21ec C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 48B], tmp63
 5494      6C0B3001 
GAS LISTING /tmp/ccqpmidN.s 			page 155


 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5495              		.loc 1 615 9 is_stmt 1 view .LVU1818
 5496              	.LVL275:
 616:sieve_extend.c ****         copy_word += 2;
 5497              		.loc 1 616 9 view .LVU1819
 5498 21f4 41B90100 		mov	r9d, 1	# ivtmp.413,
 5498      0000
 5499              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5500              		.loc 1 616 31 is_stmt 0 view .LVU1820
 5501 21fa C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.415_748, offset: 0B], tmp640
 5501      2C03
 616:sieve_extend.c ****         copy_word += 2;
 5502              		.loc 1 616 31 view .LVU1821
 5503 2200 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 16B], tmp640
 5503      6C031001 
 5504 2208 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.415_748, offset: 32B], tmp644
 5504      7C0320
 5505 220f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 48B], tmp644
 5505      7C033001 
 617:sieve_extend.c ****         source_word += 2;
 5506              		.loc 1 617 9 is_stmt 1 view .LVU1822
 618:sieve_extend.c ****         distance += 2;
 5507              		.loc 1 618 9 view .LVU1823
 619:sieve_extend.c ****     }
 5508              		.loc 1 619 9 view .LVU1824
 619:sieve_extend.c ****     }
 5509              		.loc 1 619 9 is_stmt 0 view .LVU1825
 5510              	.LBE297:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5511              		.loc 1 611 11 is_stmt 1 view .LVU1826
 5512 2217 41B84000 		mov	r8d, 64	# ivtmp.415,
 5512      0000
 5513 221d 0F86E901 		jbe	.L734	#,
 5513      0000
 5514 2223 4D85D2   		test	r10, r10	# tmp830
 5515 2226 0F84A400 		je	.L505	#,
 5515      0000
 5516              	.LBB298:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5517              		.loc 1 612 9 view .LVU1827
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5518              		.loc 1 613 9 view .LVU1828
 5519              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5520              		.loc 1 613 19 is_stmt 0 view .LVU1829
 5521 222c C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B], ME
 5521      40
 5522 2231 4983FE02 		cmp	r14, 2	# bnd.333,
 5523 2235 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 32B], 
 5523      60
 5524 223a 41B90200 		mov	r9d, 2	# ivtmp.413,
 5524      0000
 5525              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5526              		.loc 1 612 19 view .LVU1830
 5527 2240 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.340_490, index: ivtmp.415_748, offset
GAS LISTING /tmp/ccqpmidN.s 			page 156


 5527      40
 5528              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5529              		.loc 1 613 19 view .LVU1831
 5530 2245 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B
 5530      D2
 5531 224a C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B
 5531      C2
 5532              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5533              		.loc 1 612 19 view .LVU1832
 5534 224f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.340_490, index: i
 5534      60
 5535              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5536              		.loc 1 613 19 view .LVU1833
 5537 2254 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 5537      DAD8
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5538              		.loc 1 614 9 is_stmt 1 view .LVU1834
 5539              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5540              		.loc 1 612 19 is_stmt 0 view .LVU1835
 5541 225a C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 5541      ECD8
 5542              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5543              		.loc 1 613 19 view .LVU1836
 5544 2260 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 5544      F8D8
 5545 2266 41B88000 		mov	r8d, 128	# ivtmp.415,
 5545      0000
 5546              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5547              		.loc 1 614 42 view .LVU1837
 5548 226c C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.347, tmp1195, _12
 5549              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5550              		.loc 1 614 63 view .LVU1838
 5551 2270 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.348, vect_perm_even_507, _18
 5552              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5553              		.loc 1 616 42 view .LVU1839
 5554 2274 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.350, vect_perm_even_507, _12
 5555              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5556              		.loc 1 616 63 view .LVU1840
 5557 2278 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.351, tmp1206, _18
 5558              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5559              		.loc 1 614 52 view .LVU1841
 5560 227c C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.349, vect__98.347, vect__100.348
 5560      CF
 5561              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5562              		.loc 1 616 52 view .LVU1842
 5563 2281 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.352, vect__110.351, vect__109.350
GAS LISTING /tmp/ccqpmidN.s 			page 157


 5563      D2
 5564              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5565              		.loc 1 614 31 view .LVU1843
 5566 2286 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.349
 5566      CD01
 5567              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5568              		.loc 1 616 31 view .LVU1844
 5569 228c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.352
 5569      D601
 5570              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5571              		.loc 1 614 31 view .LVU1845
 5572 2292 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.415_748, offset: 0B], tmp1199
 5572      4B40
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5573              		.loc 1 614 31 view .LVU1846
 5574 2298 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 16B], tmp1199
 5574      4B5001
 5575 229f C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.415_748, offset: 32B], tmp1202
 5575      6B60
 5576 22a5 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 48B], tmp1202
 5576      6B7001
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5577              		.loc 1 615 9 is_stmt 1 view .LVU1847
 616:sieve_extend.c ****         copy_word += 2;
 5578              		.loc 1 616 9 view .LVU1848
 5579              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5580              		.loc 1 616 31 is_stmt 0 view .LVU1849
 5581 22ac C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.415_748, offset: 0B], tmp1210
 5581      40
 616:sieve_extend.c ****         copy_word += 2;
 5582              		.loc 1 616 31 view .LVU1850
 5583 22b1 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 16B], tmp1210
 5583      575001
 5584 22b8 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.415_748, offset: 32B], tmp1213
 5584      60
 5585 22bd C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 48B], tmp1213
 5585      777001
 617:sieve_extend.c ****         source_word += 2;
 5586              		.loc 1 617 9 is_stmt 1 view .LVU1851
 618:sieve_extend.c ****         distance += 2;
 5587              		.loc 1 618 9 view .LVU1852
 619:sieve_extend.c ****     }
 5588              		.loc 1 619 9 view .LVU1853
 619:sieve_extend.c ****     }
 5589              		.loc 1 619 9 is_stmt 0 view .LVU1854
 5590              	.LBE298:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5591              		.loc 1 611 11 is_stmt 1 view .LVU1855
 5592 22c4 0F864201 		jbe	.L734	#,
 5592      0000
 5593 22ca 660F1F44 		.p2align 4
 5593      0000
 5594              		.p2align 3
GAS LISTING /tmp/ccqpmidN.s 			page 158


 5595              	.L505:
 5596              	.LBB299:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5597              		.loc 1 612 9 view .LVU1856
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5598              		.loc 1 613 9 view .LVU1857
 5599              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5600              		.loc 1 613 19 is_stmt 0 view .LVU1858
 5601 22d0 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B], 
 5601      2402
 5602 22d6 4983C102 		add	r9, 2	# ivtmp.413,
 5603 22da C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 32B
 5603      6C0220
 5604              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5605              		.loc 1 612 19 view .LVU1859
 5606 22e1 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.340_490, index: ivtmp.415_748, offse
 5606      0C01
 5607              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5608              		.loc 1 613 19 view .LVU1860
 5609 22e7 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0
 5609      F5
 5610 22ec C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0
 5610      DD
 5611              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5612              		.loc 1 612 19 view .LVU1861
 5613 22f1 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.340_490, index: 
 5613      440120
 5614              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5615              		.loc 1 613 19 view .LVU1862
 5616 22f8 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 5616      FED8
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5617              		.loc 1 614 9 is_stmt 1 view .LVU1863
 5618              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5619              		.loc 1 612 19 is_stmt 0 view .LVU1864
 5620 22fe C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 5620      E8D8
 5621              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5622              		.loc 1 613 19 view .LVU1865
 5623 2304 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 5623      F3D8
 5624              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5625              		.loc 1 614 42 view .LVU1866
 5626 230a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.347, tmp842, _12
 5627              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5628              		.loc 1 614 63 view .LVU1867
 5629 230e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.348, vect_perm_even_507, _18
 5630              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccqpmidN.s 			page 159


 616:sieve_extend.c ****         copy_word += 2;
 5631              		.loc 1 616 42 view .LVU1868
 5632 2312 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.350, vect_perm_even_507, _12
 5633              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5634              		.loc 1 616 63 view .LVU1869
 5635 2316 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.351, tmp853, _18
 5636              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5637              		.loc 1 614 52 view .LVU1870
 5638 231a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.349, vect__98.347, vect__100.348
 5639              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5640              		.loc 1 616 52 view .LVU1871
 5641 231e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.352, vect__110.351, vect__109.350
 5641      F5
 5642              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5643              		.loc 1 614 31 view .LVU1872
 5644 2323 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.349
 5644      CA01
 5645              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5646              		.loc 1 616 31 view .LVU1873
 5647 2329 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.352
 5647      F101
 5648              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5649              		.loc 1 614 31 view .LVU1874
 5650 232f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.415_748, offset: 0B], tmp846
 5650      0C03
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5651              		.loc 1 614 31 view .LVU1875
 5652 2335 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 16B], tmp846
 5652      4C031001 
 5653 233d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.415_748, offset: 32B], tmp849
 5653      540320
 5654 2344 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 48B], tmp849
 5654      54033001 
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5655              		.loc 1 615 9 is_stmt 1 view .LVU1876
 616:sieve_extend.c ****         copy_word += 2;
 5656              		.loc 1 616 9 view .LVU1877
 5657              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5658              		.loc 1 616 31 is_stmt 0 view .LVU1878
 5659 234c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.415_748, offset: 0B], tmp857
 5659      3407
 616:sieve_extend.c ****         copy_word += 2;
 5660              		.loc 1 616 31 view .LVU1879
 5661 2352 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 16B], tmp85
 5661      74071001 
 5662 235a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.415_748, offset: 32B], tmp860
 5662      4C0720
 5663 2361 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 48B], tmp860
 5663      4C073001 
 617:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccqpmidN.s 			page 160


 5664              		.loc 1 617 9 is_stmt 1 view .LVU1880
 618:sieve_extend.c ****         distance += 2;
 5665              		.loc 1 618 9 view .LVU1881
 619:sieve_extend.c ****     }
 5666              		.loc 1 619 9 view .LVU1882
 619:sieve_extend.c ****     }
 5667              		.loc 1 619 9 is_stmt 0 view .LVU1883
 5668              	.LBE299:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5669              		.loc 1 611 11 is_stmt 1 view .LVU1884
 5670              	.LBB300:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5671              		.loc 1 612 9 view .LVU1885
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5672              		.loc 1 613 9 view .LVU1886
 5673              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5674              		.loc 1 613 19 is_stmt 0 view .LVU1887
 5675 2369 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B],
 5675      440240
 5676 2370 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 32B]
 5676      440260
 5677              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5678              		.loc 1 612 19 view .LVU1888
 5679 2377 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.340_490, index: ivtmp.415_748, off
 5679      7C0140
 5680              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5681              		.loc 1 613 19 view .LVU1889
 5682 237e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B],
 5683 2382 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.344_499, index: ivtmp.415_748, offset: 0B]
 5684              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5685              		.loc 1 612 19 view .LVU1890
 5686 2386 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.340_490, index:
 5686      540160
 5687              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5688              		.loc 1 613 19 view .LVU1891
 5689 238d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 5689      CDD8
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5690              		.loc 1 614 9 is_stmt 1 view .LVU1892
 5691              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5692              		.loc 1 612 19 is_stmt 0 view .LVU1893
 5693 2393 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 5693      D2D8
 5694              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5695              		.loc 1 613 19 view .LVU1894
 5696 2399 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 5696      CFD8
 5697              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5698              		.loc 1 614 42 view .LVU1895
GAS LISTING /tmp/ccqpmidN.s 			page 161


 5699 239f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.347, tmp872, _12
 5700              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5701              		.loc 1 614 63 view .LVU1896
 5702 23a3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.348, vect_perm_even_507, _18
 5703              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5704              		.loc 1 616 42 view .LVU1897
 5705 23a7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.350, vect_perm_even_507, _12
 5706              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5707              		.loc 1 616 63 view .LVU1898
 5708 23ab C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.351, tmp883, _18
 5709              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5710              		.loc 1 614 52 view .LVU1899
 5711 23af C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.349, vect__98.347, vect__100.348
 5712              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5713              		.loc 1 616 52 view .LVU1900
 5714 23b3 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.352, vect__110.351, vect__109.350
 5715              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5716              		.loc 1 614 31 view .LVU1901
 5717 23b7 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.349
 5717      E601
 5718              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5719              		.loc 1 616 31 view .LVU1902
 5720 23bd C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.352
 5720      EF01
 5721              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5722              		.loc 1 614 31 view .LVU1903
 5723 23c3 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.415_748, offset: 0B], tmp876
 5723      640340
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5724              		.loc 1 614 31 view .LVU1904
 5725 23ca C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 16B], tmp87
 5725      64035001 
 5726 23d2 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.415_748, offset: 32B], tmp879
 5726      740360
 5727 23d9 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.415_748, offset: 48B], tmp8
 5727      74037001 
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5728              		.loc 1 615 9 is_stmt 1 view .LVU1905
 616:sieve_extend.c ****         copy_word += 2;
 5729              		.loc 1 616 9 view .LVU1906
 5730              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5731              		.loc 1 616 31 is_stmt 0 view .LVU1907
 5732 23e1 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.415_748, offset: 0B], tmp887
 5732      6C0740
 616:sieve_extend.c ****         copy_word += 2;
 5733              		.loc 1 616 31 view .LVU1908
 5734 23e8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 16B], tmp887
 5734      6C075001 
GAS LISTING /tmp/ccqpmidN.s 			page 162


 5735 23f0 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.415_748, offset: 32B], tmp890
 5735      7C0760
 5736 23f7 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.415_748, offset: 48B], tmp89
 5736      7C077001 
 617:sieve_extend.c ****         source_word += 2;
 5737              		.loc 1 617 9 is_stmt 1 view .LVU1909
 618:sieve_extend.c ****         distance += 2;
 5738              		.loc 1 618 9 view .LVU1910
 619:sieve_extend.c ****     }
 5739              		.loc 1 619 9 view .LVU1911
 619:sieve_extend.c ****     }
 5740              		.loc 1 619 9 is_stmt 0 view .LVU1912
 5741              	.LBE300:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5742              		.loc 1 611 11 is_stmt 1 view .LVU1913
 5743 23ff 4983E880 		sub	r8, -128	# ivtmp.415,
 5744 2403 4D39CE   		cmp	r14, r9	# bnd.333, ivtmp.413
 5745 2406 0F87C4FE 		ja	.L505	#,
 5745      FFFF
 5746              	.L734:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5747              		.loc 1 611 11 is_stmt 0 view .LVU1914
 5748 240c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 5748      58
 5749 2411 49C1E603 		sal	r14, 3	# _483,
 5750 2415 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.335,
 5751 2419 4A8D1430 		lea	rdx, [rax+r14]	# tmp.336,
 5752              	.LVL276:
 5753              	.LBB301:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5754              		.loc 1 612 9 is_stmt 1 view .LVU1915
 5755              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5756              		.loc 1 612 37 is_stmt 0 view .LVU1916
 5757 241d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 5757      00000000 
 5758              	.LVL277:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5759              		.loc 1 613 9 is_stmt 1 view .LVU1917
 5760              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5761              		.loc 1 614 42 is_stmt 0 view .LVU1918
 5762 2425 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 5762      34CB
 5763              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5764              		.loc 1 613 19 view .LVU1919
 5765 242b 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 5765      08
 5766              	.LVL278:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5767              		.loc 1 614 9 is_stmt 1 view .LVU1920
 5768              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5769              		.loc 1 614 63 is_stmt 0 view .LVU1921
 5770 2430 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 5770      D7
GAS LISTING /tmp/ccqpmidN.s 			page 163


 5771              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5772              		.loc 1 614 52 view .LVU1922
 5773 2435 4C09D6   		or	rsi, r10	# tmp651, tmp650
 5774              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5775              		.loc 1 616 42 view .LVU1923
 5776 2438 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 5776      FF
 5777              	.LVL279:
 5778              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5779              		.loc 1 614 52 view .LVU1924
 5780 243d 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 5781              	.LVL280:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5782              		.loc 1 615 9 is_stmt 1 view .LVU1925
 5783              	# sieve_extend.c:615:         bitword_t source2 = bitarray[source_word+2];
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5784              		.loc 1 615 37 is_stmt 0 view .LVU1926
 5785 2441 4C8D4902 		lea	r9, 2[rcx]	# _618,
 5786              	.LVL281:
 616:sieve_extend.c ****         copy_word += 2;
 5787              		.loc 1 616 9 is_stmt 1 view .LVU1927
 5788              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5789              		.loc 1 616 63 is_stmt 0 view .LVU1928
 5790 2445 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 5790      10
 5791 244a C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 5791      D8
 5792              	.LVL282:
 5793              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5794              		.loc 1 616 52 view .LVU1929
 5795 244f 4C09DF   		or	rdi, r11	# tmp655, tmp652
 5796              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 5797              		.loc 1 617 19 view .LVU1930
 5798 2452 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 5799              	.LVL283:
 617:sieve_extend.c ****         source_word += 2;
 5800              		.loc 1 617 19 view .LVU1931
 5801              	.LBE301:
 5802              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5803              		.loc 1 611 11 view .LVU1932
 5804 2456 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 5804      30
 5805              	.LBB302:
 5806              	# sieve_extend.c:619:         distance += 2;
 619:sieve_extend.c ****     }
 5807              		.loc 1 619 18 view .LVU1933
 5808 245b 4D8D5602 		lea	r10, 2[r14]	# distance,
 5809              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5810              		.loc 1 616 52 view .LVU1934
GAS LISTING /tmp/ccqpmidN.s 			page 164


 5811 245f 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 5811      08
 5812              	.LVL284:
 617:sieve_extend.c ****         source_word += 2;
 5813              		.loc 1 617 9 is_stmt 1 view .LVU1935
 618:sieve_extend.c ****         distance += 2;
 5814              		.loc 1 618 9 view .LVU1936
 619:sieve_extend.c ****     }
 5815              		.loc 1 619 9 view .LVU1937
 619:sieve_extend.c ****     }
 5816              		.loc 1 619 9 is_stmt 0 view .LVU1938
 5817              	.LBE302:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5818              		.loc 1 611 11 is_stmt 1 view .LVU1939
 5819 2464 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 5820 2467 0F86D500 		jbe	.L508	#,
 5820      0000
 5821              	.LBB303:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5822              		.loc 1 612 9 view .LVU1940
 5823              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5824              		.loc 1 614 42 is_stmt 0 view .LVU1941
 5825 246d 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 5826              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5827              		.loc 1 612 37 view .LVU1942
 5828 2471 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 5828      00000000 
 5829              	.LVL285:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5830              		.loc 1 613 9 is_stmt 1 view .LVU1943
 5831              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5832              		.loc 1 613 19 is_stmt 0 view .LVU1944
 5833 2479 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 5833      08
 5834              	.LVL286:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5835              		.loc 1 614 9 is_stmt 1 view .LVU1945
 5836              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5837              		.loc 1 614 42 is_stmt 0 view .LVU1946
 5838 247e C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 5838      F6
 5839              	.LVL287:
 5840              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5841              		.loc 1 614 63 view .LVU1947
 5842 2483 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 5842      CF
 5843              	.LVL288:
 5844              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5845              		.loc 1 614 52 view .LVU1948
 5846 2488 4C09CE   		or	rsi, r9	# tmp659, tmp658
 5847 248b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
GAS LISTING /tmp/ccqpmidN.s 			page 165


 5848              	.LVL289:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5849              		.loc 1 615 9 is_stmt 1 view .LVU1949
 5850              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5851              		.loc 1 616 42 is_stmt 0 view .LVU1950
 5852 248f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 5852      FF
 5853              	.LVL290:
 5854              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5855              		.loc 1 616 63 view .LVU1951
 5856 2494 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 5856      10
 5857 2499 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 5857      F2
 5858              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5859              		.loc 1 616 52 view .LVU1952
 5860 249e 4809F7   		or	rdi, rsi	# tmp663, tmp660
 5861              	# sieve_extend.c:615:         bitword_t source2 = bitarray[source_word+2];
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5862              		.loc 1 615 37 view .LVU1953
 5863 24a1 4C8D4904 		lea	r9, 4[rcx]	# _648,
 616:sieve_extend.c ****         copy_word += 2;
 5864              		.loc 1 616 9 is_stmt 1 view .LVU1954
 5865              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5866              		.loc 1 616 52 is_stmt 0 view .LVU1955
 5867 24a5 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 5867      08
 617:sieve_extend.c ****         source_word += 2;
 5868              		.loc 1 617 9 is_stmt 1 view .LVU1956
 5869              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 5870              		.loc 1 617 19 is_stmt 0 view .LVU1957
 5871 24aa 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 5872              	.LVL291:
 618:sieve_extend.c ****         distance += 2;
 5873              		.loc 1 618 9 is_stmt 1 view .LVU1958
 619:sieve_extend.c ****     }
 5874              		.loc 1 619 9 view .LVU1959
 619:sieve_extend.c ****     }
 5875              		.loc 1 619 9 is_stmt 0 view .LVU1960
 5876              	.LBE303:
 5877              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5878              		.loc 1 611 11 view .LVU1961
 5879 24ae 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 5880              	.LBB304:
 5881              	# sieve_extend.c:619:         distance += 2;
 619:sieve_extend.c ****     }
 5882              		.loc 1 619 18 view .LVU1962
 5883 24b1 4D8D5604 		lea	r10, 4[r14]	# distance,
 5884              	.LVL292:
 619:sieve_extend.c ****     }
 5885              		.loc 1 619 18 view .LVU1963
GAS LISTING /tmp/ccqpmidN.s 			page 166


 5886              	.LBE304:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5887              		.loc 1 611 11 is_stmt 1 view .LVU1964
 5888 24b5 0F868700 		jbe	.L508	#,
 5888      0000
 5889              	.LBB305:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5890              		.loc 1 612 9 view .LVU1965
 5891              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5892              		.loc 1 612 37 is_stmt 0 view .LVU1966
 5893 24bb 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 5893      00000000 
 5894              	.LVL293:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5895              		.loc 1 613 9 is_stmt 1 view .LVU1967
 5896              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 5897              		.loc 1 617 19 is_stmt 0 view .LVU1968
 5898 24c3 4883C206 		add	rdx, 6	# copy_word,
 5899              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5900              		.loc 1 613 19 view .LVU1969
 5901 24c7 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 5901      08
 5902              	.LVL294:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5903              		.loc 1 614 9 is_stmt 1 view .LVU1970
 5904              	# sieve_extend.c:615:         bitword_t source2 = bitarray[source_word+2];
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5905              		.loc 1 615 37 is_stmt 0 view .LVU1971
 5906 24cc 4883C106 		add	rcx, 6	# _678,
 5907              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5908              		.loc 1 614 42 view .LVU1972
 5909 24d0 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 5910              	.LVL295:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5911              		.loc 1 614 42 view .LVU1973
 5912 24d4 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 5912      F1
 5913              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5914              		.loc 1 614 63 view .LVU1974
 5915 24d9 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 5915      CF
 5916              	.LVL296:
 5917              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5918              		.loc 1 614 52 view .LVU1975
 5919 24de 4C09CE   		or	rsi, r9	# tmp667, tmp666
 5920 24e1 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 5921              	.LVL297:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5922              		.loc 1 615 9 is_stmt 1 view .LVU1976
 616:sieve_extend.c ****         copy_word += 2;
 5923              		.loc 1 616 9 view .LVU1977
GAS LISTING /tmp/ccqpmidN.s 			page 167


 5924              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5925              		.loc 1 616 42 is_stmt 0 view .LVU1978
 5926 24e5 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 5926      FF
 5927              	.LVL298:
 5928              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5929              		.loc 1 616 63 view .LVU1979
 5930 24ea 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 5930      10
 5931              	.LVL299:
 616:sieve_extend.c ****         copy_word += 2;
 5932              		.loc 1 616 63 view .LVU1980
 5933 24ef C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 5933      F2
 5934              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5935              		.loc 1 616 52 view .LVU1981
 5936 24f4 4809F7   		or	rdi, rsi	# tmp671, tmp668
 5937              	.LBE305:
 5938              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5939              		.loc 1 611 11 view .LVU1982
 5940 24f7 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 5941              	.LBB306:
 5942              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5943              		.loc 1 616 52 view .LVU1983
 5944 24fa 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 5944      08
 617:sieve_extend.c ****         source_word += 2;
 5945              		.loc 1 617 9 is_stmt 1 view .LVU1984
 5946              	.LVL300:
 618:sieve_extend.c ****         distance += 2;
 5947              		.loc 1 618 9 view .LVU1985
 619:sieve_extend.c ****     }
 5948              		.loc 1 619 9 view .LVU1986
 5949              	# sieve_extend.c:619:         distance += 2;
 619:sieve_extend.c ****     }
 5950              		.loc 1 619 18 is_stmt 0 view .LVU1987
 5951 24ff 4D8D5606 		lea	r10, 6[r14]	# distance,
 5952              	.LVL301:
 619:sieve_extend.c ****     }
 5953              		.loc 1 619 18 view .LVU1988
 5954              	.LBE306:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5955              		.loc 1 611 11 is_stmt 1 view .LVU1989
 5956 2503 763D     		jbe	.L508	#,
 5957              	.LBB307:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5958              		.loc 1 612 9 view .LVU1990
 5959              	# sieve_extend.c:612:         bitword_t source0 = bitarray[source_word  ];
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5960              		.loc 1 612 37 is_stmt 0 view .LVU1991
 5961 2505 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 5961      00000000 
GAS LISTING /tmp/ccqpmidN.s 			page 168


 5962              	.LVL302:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5963              		.loc 1 613 9 is_stmt 1 view .LVU1992
 5964              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5965              		.loc 1 613 19 is_stmt 0 view .LVU1993
 5966 250d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 5966      08
 5967              	.LVL303:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5968              		.loc 1 614 9 is_stmt 1 view .LVU1994
 5969              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5970              		.loc 1 614 63 is_stmt 0 view .LVU1995
 5971 2512 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 5971      C1
 5972              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5973              		.loc 1 614 42 view .LVU1996
 5974 2517 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 5975              	.LVL304:
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5976              		.loc 1 614 42 view .LVU1997
 5977 251b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 5977      D1
 5978              	.LVL305:
 5979              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5980              		.loc 1 614 52 view .LVU1998
 5981 2520 4D09C2   		or	r10, r8	# tmp675, tmp674
 5982 2523 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5983              		.loc 1 615 9 is_stmt 1 view .LVU1999
 5984              	.LVL306:
 616:sieve_extend.c ****         copy_word += 2;
 5985              		.loc 1 616 9 view .LVU2000
 5986              	# sieve_extend.c:619:         distance += 2;
 619:sieve_extend.c ****     }
 5987              		.loc 1 619 18 is_stmt 0 view .LVU2001
 5988 2527 4D8D5608 		lea	r10, 8[r14]	# distance,
 5989              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5990              		.loc 1 616 63 view .LVU2002
 5991 252b 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 5991      10
 5992              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5993              		.loc 1 616 42 view .LVU2003
 5994 2530 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 5994      D9
 5995              	.LVL307:
 5996              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 5997              		.loc 1 616 63 view .LVU2004
 5998 2535 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 5998      FE
 5999              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccqpmidN.s 			page 169


 616:sieve_extend.c ****         copy_word += 2;
 6000              		.loc 1 616 52 view .LVU2005
 6001 253a 4909FB   		or	r11, rdi	# tmp679, tmp676
 6002 253d 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 6002      08
 617:sieve_extend.c ****         source_word += 2;
 6003              		.loc 1 617 9 is_stmt 1 view .LVU2006
 618:sieve_extend.c ****         distance += 2;
 6004              		.loc 1 618 9 view .LVU2007
 619:sieve_extend.c ****     }
 6005              		.loc 1 619 9 view .LVU2008
 6006              	.LVL308:
 619:sieve_extend.c ****     }
 6007              		.loc 1 619 9 is_stmt 0 view .LVU2009
 6008              	.LBE307:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6009              		.loc 1 611 11 is_stmt 1 view .LVU2010
 6010              	.L508:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6011              		.loc 1 611 11 is_stmt 0 view .LVU2011
 6012 2542 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 6012      58
 6013 2547 4C01D0   		add	rax, r10	# ivtmp.375, distance
 6014              	.L503:
 621:sieve_extend.c **** }
 6015              		.loc 1 621 5 is_stmt 1 view .LVU2012
 6016              	.LVL309:
 621:sieve_extend.c **** }
 6017              		.loc 1 621 5 is_stmt 0 view .LVU2013
 6018              	.LBE318:
 6019              	.LBE321:
 769:sieve_extend.c ****     copy_word += distance;
 6020              		.loc 1 769 5 is_stmt 1 view .LVU2014
 770:sieve_extend.c **** 
 6021              		.loc 1 770 5 view .LVU2015
 772:sieve_extend.c **** 
 6022              		.loc 1 772 6 view .LVU2016
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6023              		.loc 1 775 11 view .LVU2017
 6024              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6025              		.loc 1 775 5 is_stmt 0 view .LVU2018
 6026 254a 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6026      40
 6027 254f 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.375
 6028 2552 0F821004 		jb	.L509	#,
 6028      0000
 6029 2558 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 6029      58
 6030 255d 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 6030      00000000 
 6031 2565 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 6032 2569 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 6032      00000000 
 6033 2571 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 6033      28000000 
 6034 2579 4839D7   		cmp	rdi, rdx	# tmp691, _226
GAS LISTING /tmp/ccqpmidN.s 			page 170


 6035 257c 4D89DE   		mov	r14, r11	# _183, _183
 6036 257f 410F9EC1 		setle	r9b	#, tmp693
 6037 2583 4839F1   		cmp	rcx, rsi	# _218, _220
 6038 2586 410F9EC0 		setle	r8b	#, tmp695
 6039 258a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 6040 258d 0F84E50A 		je	.L510	#,
 6040      0000
 6041 2593 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 6042 2596 4829C1   		sub	rcx, rax	# tmp697, ivtmp.375
 6043 2599 4883F905 		cmp	rcx, 5	# tmp697,
 6044 259d 0F86D50A 		jbe	.L510	#,
 6044      0000
 6045 25a3 4801DA   		add	rdx, rbx	# vectp.313, bitarray
 6046 25a6 4983C201 		add	r10, 1	# ivtmp.375,
 6047 25aa 48C1EA03 		shr	rdx, 3	# tmp702,
 6048 25ae 4C89D7   		mov	rdi, r10	# niters.312, ivtmp.375
 6049 25b1 48F7DA   		neg	rdx	# tmp703
 6050 25b4 4829C7   		sub	rdi, rax	# niters.312, ivtmp.375
 6051 25b7 83E203   		and	edx, 3	# prolog_loop_niters.314,
 6052 25ba 0F84A80A 		je	.L529	#,
 6052      0000
 6053              	.LVL310:
 776:sieve_extend.c ****     }
 6054              		.loc 1 776 9 is_stmt 1 view .LVU2019
 6055              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6056              		.loc 1 776 77 is_stmt 0 view .LVU2020
 6057 25c0 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 6058              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6059              		.loc 1 776 94 view .LVU2021
 6060 25c4 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 6060      08
 6061              	.LVL311:
 776:sieve_extend.c ****     }
 6062              		.loc 1 776 94 view .LVU2022
 6063 25c9 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 6063      CB
 6064              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6065              		.loc 1 776 56 view .LVU2023
 6066 25ce 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 6067              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6068              		.loc 1 776 77 view .LVU2024
 6069 25d2 4C89C1   		mov	rcx, r8	# source_word, tmp793
 6070              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6071              		.loc 1 776 56 view .LVU2025
 6072 25d5 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 6072      38
 6073 25da C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 6073      DB
 6074              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6075              		.loc 1 776 66 view .LVU2026
 6076 25df 4D09D9   		or	r9, r11	# tmp708, tmp706
GAS LISTING /tmp/ccqpmidN.s 			page 171


 6077 25e2 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.314,
 6078 25e6 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6079              		.loc 1 775 43 is_stmt 1 view .LVU2027
 6080              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6081              		.loc 1 775 52 is_stmt 0 view .LVU2028
 6082 25ea 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6083              	.LVL312:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6084              		.loc 1 775 11 is_stmt 1 view .LVU2029
 6085 25ee 7454     		je	.L511	#,
 776:sieve_extend.c ****     }
 6086              		.loc 1 776 9 view .LVU2030
 6087              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6088              		.loc 1 776 40 is_stmt 0 view .LVU2031
 6089 25f0 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 6089      00000000 
 6090              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6091              		.loc 1 776 94 view .LVU2032
 6092 25f8 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 6092      4C1B08
 6093              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6094              		.loc 1 776 56 view .LVU2033
 6095 25ff 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 6096 2603 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 6096      DB
 6097              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6098              		.loc 1 776 66 view .LVU2034
 6099 2608 4D09D9   		or	r9, r11	# tmp713, tmp711
 6100 260b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.314,
 6101 260f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6102              		.loc 1 775 43 is_stmt 1 view .LVU2035
 6103              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6104              		.loc 1 776 77 is_stmt 0 view .LVU2036
 6105 2613 498D4E02 		lea	rcx, 2[r14]	# source_word,
 6106              	.LVL313:
 6107              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6108              		.loc 1 775 52 view .LVU2037
 6109 2617 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6110              	.LVL314:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6111              		.loc 1 775 11 is_stmt 1 view .LVU2038
 6112 261b 7527     		jne	.L511	#,
 776:sieve_extend.c ****     }
 6113              		.loc 1 776 9 view .LVU2039
 6114              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6115              		.loc 1 776 40 is_stmt 0 view .LVU2040
 6116 261d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
GAS LISTING /tmp/ccqpmidN.s 			page 172


 6116      00000000 
 6117              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6118              		.loc 1 776 77 view .LVU2041
 6119 2625 498D4E03 		lea	rcx, 3[r14]	# source_word,
 6120              	.LVL315:
 6121              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6122              		.loc 1 776 56 view .LVU2042
 6123 2629 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 6124              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6125              		.loc 1 776 94 view .LVU2043
 6126 262d C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 6126      741B08
 6127              	.LVL316:
 6128              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6129              		.loc 1 776 56 view .LVU2044
 6130 2634 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 6130      D9
 6131              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6132              		.loc 1 776 66 view .LVU2045
 6133 2639 4D09DE   		or	r14, r11	# tmp718, tmp716
 6134 263c 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6135              		.loc 1 775 43 is_stmt 1 view .LVU2046
 6136              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6137              		.loc 1 775 52 is_stmt 0 view .LVU2047
 6138 2640 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6139              	.LVL317:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6140              		.loc 1 775 11 is_stmt 1 view .LVU2048
 6141              	.L511:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6142              		.loc 1 775 11 is_stmt 0 view .LVU2049
 6143 2644 4829D7   		sub	rdi, rdx	# niters.315, prolog_loop_niters.314
 6144 2647 C441796E 		vmovd	xmm10, r12d	# _12, _12
 6144      D4
 6145 264c 4989FB   		mov	r11, rdi	# bnd.316, niters.315
 6146 264f 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.314
 6147 2652 49C1EB02 		shr	r11, 2	# bnd.316,
 6148 2656 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.314
 6149 2659 49C1E305 		sal	r11, 5	# _733,
 6150 265d 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.325,
 6151 2661 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 6151      58
 6152 2666 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 6153 266a C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 6153      2448
 6154 2670 49C1EC05 		shr	r12, 5	# tmp816,
 6155 2674 4983C401 		add	r12, 1	# tmp819,
 6156 2678 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.314
 6157 267b 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.330,
 6158              	# sieve_extend.c:769:     source_word += distance;
GAS LISTING /tmp/ccqpmidN.s 			page 173


 769:sieve_extend.c ****     copy_word += distance;
 6159              		.loc 1 769 17 view .LVU2050
 6160 267f 31C0     		xor	eax, eax	# ivtmp.391
 6161 2681 4183E407 		and	r12d, 7	# tmp820,
 6162 2685 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.321,
 6163 2689 0F842801 		je	.L513	#,
 6163      0000
 6164 268f 4983FC01 		cmp	r12, 1	# tmp820,
 6165 2693 0F84F200 		je	.L661	#,
 6165      0000
 6166 2699 4983FC02 		cmp	r12, 2	# tmp820,
 6167 269d 0F84C600 		je	.L662	#,
 6167      0000
 6168 26a3 4983FC03 		cmp	r12, 3	# tmp820,
 6169 26a7 0F849900 		je	.L663	#,
 6169      0000
 6170 26ad 4983FC04 		cmp	r12, 4	# tmp820,
 6171 26b1 7470     		je	.L664	#,
 6172 26b3 4983FC05 		cmp	r12, 5	# tmp820,
 6173 26b7 7448     		je	.L665	#,
 6174 26b9 4983FC06 		cmp	r12, 6	# tmp820,
 6175 26bd 7420     		je	.L666	#,
 776:sieve_extend.c ****     }
 6176              		.loc 1 776 9 is_stmt 1 view .LVU2051
 6177              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6178              		.loc 1 776 56 is_stmt 0 view .LVU2052
 6179 26bf C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.321_307, index: ivtmp.391_731, offset: 0
 6179      19
 6180 26c4 B8200000 		mov	eax, 32	# ivtmp.391,
 6180      00
 6181              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6182              		.loc 1 776 94 view .LVU2053
 6183 26c9 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.325_314, index: ivtmp.391_731, offset: 0
 6183      20
 6184              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6185              		.loc 1 776 56 view .LVU2054
 6186 26ce C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.323, tmp1411, _12
 6186      DA
 6187              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6188              		.loc 1 776 94 view .LVU2055
 6189 26d3 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.327, tmp1412, _18
 6190              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6191              		.loc 1 776 66 view .LVU2056
 6192 26d7 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.328, vect__38.323, vect__43.327
 6193              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6194              		.loc 1 776 29 view .LVU2057
 6195 26db C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B], vec
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6196              		.loc 1 775 43 is_stmt 1 view .LVU2058
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6197              		.loc 1 775 11 view .LVU2059
GAS LISTING /tmp/ccqpmidN.s 			page 174


 6198              	.L666:
 776:sieve_extend.c ****     }
 6199              		.loc 1 776 9 view .LVU2060
 6200              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6201              		.loc 1 776 56 is_stmt 0 view .LVU2061
 6202 26df C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.321_307, index: ivtmp.391_731, offs
 6202      2C01
 6203              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6204              		.loc 1 776 94 view .LVU2062
 6205 26e5 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.325_314, index: ivtmp.391_731, offs
 6205      3C00
 6206              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6207              		.loc 1 776 56 view .LVU2063
 6208 26eb C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.323, tmp1413, _12
 6208      F2
 6209              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6210              		.loc 1 776 94 view .LVU2064
 6211 26f0 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.327, tmp1414, _18
 6212              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6213              		.loc 1 776 66 view .LVU2065
 6214 26f4 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.328, vect__38.323, vect__43.327
 6215              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6216              		.loc 1 776 29 view .LVU2066
 6217 26f8 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B], 
 6217      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6218              		.loc 1 775 43 is_stmt 1 view .LVU2067
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6219              		.loc 1 775 11 view .LVU2068
 6220 26fd 4883C020 		add	rax, 32	# ivtmp.391,
 6221              	.L665:
 776:sieve_extend.c ****     }
 6222              		.loc 1 776 9 view .LVU2069
 6223              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6224              		.loc 1 776 56 is_stmt 0 view .LVU2070
 6225 2701 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.321_307, index: ivtmp.391_731, offse
 6225      0401
 6226              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6227              		.loc 1 776 94 view .LVU2071
 6228 2707 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.325_314, index: ivtmp.391_731, offse
 6228      0C00
 6229              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6230              		.loc 1 776 56 view .LVU2072
 6231 270d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.323, tmp1415, _12
 6231      EA
 6232              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6233              		.loc 1 776 94 view .LVU2073
GAS LISTING /tmp/ccqpmidN.s 			page 175


 6234 2712 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.327, tmp1416, _18
 6235              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6236              		.loc 1 776 66 view .LVU2074
 6237 2716 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.328, vect__38.323, vect__43.327
 6238              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6239              		.loc 1 776 29 view .LVU2075
 6240 271a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B], 
 6240      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6241              		.loc 1 775 43 is_stmt 1 view .LVU2076
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6242              		.loc 1 775 11 view .LVU2077
 6243 271f 4883C020 		add	rax, 32	# ivtmp.391,
 6244              	.L664:
 776:sieve_extend.c ****     }
 6245              		.loc 1 776 9 view .LVU2078
 6246              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6247              		.loc 1 776 56 is_stmt 0 view .LVU2079
 6248 2723 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.321_307, index: ivtmp.391_731, offs
 6248      1C01
 6249              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6250              		.loc 1 776 94 view .LVU2080
 6251 2729 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.325_314, index: ivtmp.391_731, offse
 6251      3400
 6252              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6253              		.loc 1 776 56 view .LVU2081
 6254 272f C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.323, tmp1417, _12
 6254      E2
 6255              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6256              		.loc 1 776 94 view .LVU2082
 6257 2734 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.327, tmp1418, _18
 6258              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6259              		.loc 1 776 66 view .LVU2083
 6260 2738 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.328, vect__38.323, vect__43.327
 6260      EC
 6261              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6262              		.loc 1 776 29 view .LVU2084
 6263 273d C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B],
 6263      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6264              		.loc 1 775 43 is_stmt 1 view .LVU2085
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6265              		.loc 1 775 11 view .LVU2086
 6266 2742 4883C020 		add	rax, 32	# ivtmp.391,
 6267              	.L663:
 776:sieve_extend.c ****     }
 6268              		.loc 1 776 9 view .LVU2087
 6269              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 176


 6270              		.loc 1 776 56 is_stmt 0 view .LVU2088
 6271 2746 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.321_307, index: ivtmp.391_731, offs
 6271      3401
 6272              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6273              		.loc 1 776 94 view .LVU2089
 6274 274c C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.325_314, index: ivtmp.391_731, offse
 6274      0C00
 6275              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6276              		.loc 1 776 56 view .LVU2090
 6277 2752 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.323, tmp1419, _12
 6277      FA
 6278              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6279              		.loc 1 776 94 view .LVU2091
 6280 2757 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.327, tmp1420, _18
 6281              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6282              		.loc 1 776 66 view .LVU2092
 6283 275b C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.328, vect__38.323, vect__43.327
 6283      C0
 6284              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6285              		.loc 1 776 29 view .LVU2093
 6286 2760 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B], 
 6286      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6287              		.loc 1 775 43 is_stmt 1 view .LVU2094
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6288              		.loc 1 775 11 view .LVU2095
 6289 2765 4883C020 		add	rax, 32	# ivtmp.391,
 6290              	.L662:
 776:sieve_extend.c ****     }
 6291              		.loc 1 776 9 view .LVU2096
 6292              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6293              		.loc 1 776 56 is_stmt 0 view .LVU2097
 6294 2769 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.321_307, index: ivtmp.391_731, offse
 6294      2C01
 6295              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6296              		.loc 1 776 94 view .LVU2098
 6297 276f C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.325_314, index: ivtmp.391_731, offse
 6297      3C00
 6298              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6299              		.loc 1 776 56 view .LVU2099
 6300 2775 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.323, tmp1421, _12
 6300      CA
 6301              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6302              		.loc 1 776 94 view .LVU2100
 6303 277a C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.327, tmp1422, _18
 6304              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6305              		.loc 1 776 66 view .LVU2101
GAS LISTING /tmp/ccqpmidN.s 			page 177


 6306 277e C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.328, vect__38.323, vect__43.327
 6307              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6308              		.loc 1 776 29 view .LVU2102
 6309 2782 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B],
 6309      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6310              		.loc 1 775 43 is_stmt 1 view .LVU2103
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6311              		.loc 1 775 11 view .LVU2104
 6312 2787 4883C020 		add	rax, 32	# ivtmp.391,
 6313              	.L661:
 776:sieve_extend.c ****     }
 6314              		.loc 1 776 9 view .LVU2105
 6315              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6316              		.loc 1 776 56 is_stmt 0 view .LVU2106
 6317 278b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.321_307, index: ivtmp.391_731, offse
 6317      2401
 6318              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6319              		.loc 1 776 94 view .LVU2107
 6320 2791 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.325_314, index: ivtmp.391_731, offs
 6320      2400
 6321              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6322              		.loc 1 776 56 view .LVU2108
 6323 2797 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.323, tmp1423, _12
 6323      F2
 6324              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6325              		.loc 1 776 94 view .LVU2109
 6326 279c C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.327, tmp1424, _18
 6327              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6328              		.loc 1 776 66 view .LVU2110
 6329 27a0 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.328, vect__38.323, vect__43.327
 6329      F5
 6330              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6331              		.loc 1 776 29 view .LVU2111
 6332 27a5 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B],
 6332      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6333              		.loc 1 775 43 is_stmt 1 view .LVU2112
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6334              		.loc 1 775 11 view .LVU2113
 6335 27aa 4883C020 		add	rax, 32	# ivtmp.391,
 6336 27ae 4C39D8   		cmp	rax, r11	# ivtmp.391, _733
 6337 27b1 0F843B01 		je	.L742	#,
 6337      0000
 6338              	.L513:
 776:sieve_extend.c ****     }
 6339              		.loc 1 776 9 discriminator 2 view .LVU2114
 6340              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6341              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2115
GAS LISTING /tmp/ccqpmidN.s 			page 178


 6342 27b7 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.321_307, index: ivtmp.391_731, offs
 6342      3C01
 6343              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6344              		.loc 1 776 94 discriminator 2 view .LVU2116
 6345 27bd C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.325_314, index: ivtmp.391_731, offse
 6345      0400
 6346              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6347              		.loc 1 776 56 discriminator 2 view .LVU2117
 6348 27c3 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.323, tmp1348, _12
 6348      CA
 6349              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6350              		.loc 1 776 94 discriminator 2 view .LVU2118
 6351 27c8 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.327, tmp1349, _18
 6352              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6353              		.loc 1 776 66 discriminator 2 view .LVU2119
 6354 27cc C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.328, vect__38.323, vect__43.327
 6355              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6356              		.loc 1 776 29 discriminator 2 view .LVU2120
 6357 27d0 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B], 
 6357      02
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6358              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2121
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6359              		.loc 1 775 11 discriminator 2 view .LVU2122
 776:sieve_extend.c ****     }
 6360              		.loc 1 776 9 discriminator 2 view .LVU2123
 6361              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6362              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2124
 6363 27d5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.321_307, index: ivtmp.391_731, off
 6363      4C0120
 6364              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6365              		.loc 1 776 94 discriminator 2 view .LVU2125
 6366 27dc C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.325_314, index: ivtmp.391_731, off
 6366      7C0020
 6367              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6368              		.loc 1 776 56 discriminator 2 view .LVU2126
 6369 27e3 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.323, tmp1350, _12
 6369      DA
 6370              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6371              		.loc 1 776 94 discriminator 2 view .LVU2127
 6372 27e8 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.327, tmp1351, _18
 6373              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6374              		.loc 1 776 66 discriminator 2 view .LVU2128
 6375 27ec C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.328, vect__38.323, vect__43.327
 6376              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6377              		.loc 1 776 29 discriminator 2 view .LVU2129
GAS LISTING /tmp/ccqpmidN.s 			page 179


 6378 27f0 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B]
 6378      0220
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6379              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2130
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6380              		.loc 1 775 11 discriminator 2 view .LVU2131
 776:sieve_extend.c ****     }
 6381              		.loc 1 776 9 discriminator 2 view .LVU2132
 6382              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6383              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2133
 6384 27f6 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.321_307, index: ivtmp.391_731, off
 6384      740140
 6385              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6386              		.loc 1 776 94 discriminator 2 view .LVU2134
 6387 27fd C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.325_314, index: ivtmp.391_731, of
 6387      6C0040
 6388              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6389              		.loc 1 776 56 discriminator 2 view .LVU2135
 6390 2804 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.323, tmp1352, _12
 6390      E2
 6391              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6392              		.loc 1 776 94 discriminator 2 view .LVU2136
 6393 2809 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.327, tmp1353, _18
 6394              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6395              		.loc 1 776 66 discriminator 2 view .LVU2137
 6396 280d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.328, vect__38.323, vect__43.327
 6396      FE
 6397              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6398              		.loc 1 776 29 discriminator 2 view .LVU2138
 6399 2812 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B
 6399      0240
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6400              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2139
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6401              		.loc 1 775 11 discriminator 2 view .LVU2140
 776:sieve_extend.c ****     }
 6402              		.loc 1 776 9 discriminator 2 view .LVU2141
 6403              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6404              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2142
 6405 2818 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.321_307, index: ivtmp.391_731, off
 6405      4C0160
 6406              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6407              		.loc 1 776 94 discriminator 2 view .LVU2143
 6408 281f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.325_314, index: ivtmp.391_731, off
 6408      440060
 6409              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6410              		.loc 1 776 56 discriminator 2 view .LVU2144
 6411 2826 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.323, tmp1354, _12
GAS LISTING /tmp/ccqpmidN.s 			page 180


 6411      C2
 6412              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6413              		.loc 1 776 94 discriminator 2 view .LVU2145
 6414 282b C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.327, tmp1355, _18
 6415              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6416              		.loc 1 776 66 discriminator 2 view .LVU2146
 6417 282f C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.328, vect__38.323, vect__43.327
 6418              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6419              		.loc 1 776 29 discriminator 2 view .LVU2147
 6420 2833 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B]
 6420      0260
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6421              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2148
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6422              		.loc 1 775 11 discriminator 2 view .LVU2149
 776:sieve_extend.c ****     }
 6423              		.loc 1 776 9 discriminator 2 view .LVU2150
 6424              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6425              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2151
 6426 2839 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.321_307, index: ivtmp.391_731, o
 6426      9C018000 
 6426      0000
 6427              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6428              		.loc 1 776 94 discriminator 2 view .LVU2152
 6429 2843 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.325_314, index: ivtmp.391_731, of
 6429      BC008000 
 6429      0000
 6430              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6431              		.loc 1 776 56 discriminator 2 view .LVU2153
 6432 284d C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.323, tmp1356, _12
 6432      E2
 6433              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6434              		.loc 1 776 94 discriminator 2 view .LVU2154
 6435 2852 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.327, tmp1357, _18
 6436              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6437              		.loc 1 776 66 discriminator 2 view .LVU2155
 6438 2856 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.328, vect__38.323, vect__43.327
 6439              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6440              		.loc 1 776 29 discriminator 2 view .LVU2156
 6441 285a C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B
 6441      02800000 
 6441      00
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6442              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2157
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6443              		.loc 1 775 11 discriminator 2 view .LVU2158
 776:sieve_extend.c ****     }
 6444              		.loc 1 776 9 discriminator 2 view .LVU2159
GAS LISTING /tmp/ccqpmidN.s 			page 181


 6445              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6446              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2160
 6447 2863 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.321_307, index: ivtmp.391_731, o
 6447      A401A000 
 6447      0000
 6448              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6449              		.loc 1 776 94 discriminator 2 view .LVU2161
 6450 286d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.325_314, index: ivtmp.391_731, o
 6450      B400A000 
 6450      0000
 6451              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6452              		.loc 1 776 56 discriminator 2 view .LVU2162
 6453 2877 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.323, tmp1358, _12
 6453      EA
 6454              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6455              		.loc 1 776 94 discriminator 2 view .LVU2163
 6456 287c C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.327, tmp1359, _18
 6457              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6458              		.loc 1 776 66 discriminator 2 view .LVU2164
 6459 2880 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.328, vect__38.323, vect__43.327
 6459      CF
 6460              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6461              		.loc 1 776 29 discriminator 2 view .LVU2165
 6462 2885 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0B
 6462      02A00000 
 6462      00
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6463              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2166
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6464              		.loc 1 775 11 discriminator 2 view .LVU2167
 776:sieve_extend.c ****     }
 6465              		.loc 1 776 9 discriminator 2 view .LVU2168
 6466              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6467              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2169
 6468 288e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.321_307, index: ivtmp.391_731, of
 6468      8401C000 
 6468      0000
 6469              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6470              		.loc 1 776 94 discriminator 2 view .LVU2170
 6471 2898 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.325_314, index: ivtmp.391_731, of
 6471      AC00C000 
 6471      0000
 6472              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6473              		.loc 1 776 56 discriminator 2 view .LVU2171
 6474 28a2 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.323, tmp1360, _12
 6474      C2
 6475              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 182


 6476              		.loc 1 776 94 discriminator 2 view .LVU2172
 6477 28a7 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.327, tmp1361, _18
 6478              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6479              		.loc 1 776 66 discriminator 2 view .LVU2173
 6480 28ab C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.328, vect__38.323, vect__43.327
 6480      D9
 6481              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6482              		.loc 1 776 29 discriminator 2 view .LVU2174
 6483 28b0 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0
 6483      02C00000 
 6483      00
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6484              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2175
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6485              		.loc 1 775 11 discriminator 2 view .LVU2176
 776:sieve_extend.c ****     }
 6486              		.loc 1 776 9 discriminator 2 view .LVU2177
 6487              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6488              		.loc 1 776 56 is_stmt 0 discriminator 2 view .LVU2178
 6489 28b9 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.321_307, index: ivtmp.391_731, of
 6489      A401E000 
 6489      0000
 6490              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6491              		.loc 1 776 94 discriminator 2 view .LVU2179
 6492 28c3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.325_314, index: ivtmp.391_731, of
 6492      BC00E000 
 6492      0000
 6493              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6494              		.loc 1 776 56 discriminator 2 view .LVU2180
 6495 28cd C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.323, tmp1362, _12
 6495      F2
 6496              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6497              		.loc 1 776 94 discriminator 2 view .LVU2181
 6498 28d2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.327, tmp1363, _18
 6499              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6500              		.loc 1 776 66 discriminator 2 view .LVU2182
 6501 28d6 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.328, vect__38.323, vect__43.327
 6502              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6503              		.loc 1 776 29 discriminator 2 view .LVU2183
 6504 28da C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.330_323, index: ivtmp.391_731, offset: 0
 6504      02E00000 
 6504      00
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6505              		.loc 1 775 43 is_stmt 1 discriminator 2 view .LVU2184
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6506              		.loc 1 775 11 discriminator 2 view .LVU2185
 6507 28e3 48050001 		add	rax, 256	# ivtmp.391,
 6507      0000
 6508 28e9 4C39D8   		cmp	rax, r11	# ivtmp.391, _733
GAS LISTING /tmp/ccqpmidN.s 			page 183


 6509 28ec 0F85C5FE 		jne	.L513	#,
 6509      FFFF
 6510              	.L742:
 6511 28f2 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.317, niters.315
 6512 28f5 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.317,
 6513 28f9 4C01F1   		add	rcx, r14	# tmp.318, niters_vector_mult_vf.317
 6514 28fc 4C01F6   		add	rsi, r14	# tmp.319, niters_vector_mult_vf.317
 6515 28ff 4C39F7   		cmp	rdi, r14	# niters.315, niters_vector_mult_vf.317
 6516 2902 7461     		je	.L516	#,
 6517              	.LVL318:
 776:sieve_extend.c ****     }
 6518              		.loc 1 776 9 view .LVU2186
 6519              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6520              		.loc 1 775 5 is_stmt 0 view .LVU2187
 6521 2904 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6521      40
 6522              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6523              		.loc 1 775 52 view .LVU2188
 6524 2909 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 6525              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6526              		.loc 1 776 94 view .LVU2189
 6527 290d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 6527      4CCB08
 6528              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6529              		.loc 1 776 56 view .LVU2190
 6530 2914 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 6530      04CB
 6531              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6532              		.loc 1 776 66 view .LVU2191
 6533 291a 4D09C1   		or	r9, r8	# tmp738, tmp736
 6534              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6535              		.loc 1 776 77 view .LVU2192
 6536 291d 488D7901 		lea	rdi, 1[rcx]	# _301,
 6537              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6538              		.loc 1 776 66 view .LVU2193
 6539 2921 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6540              		.loc 1 775 43 is_stmt 1 view .LVU2194
 6541              	.LVL319:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6542              		.loc 1 775 11 view .LVU2195
 6543              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6544              		.loc 1 775 5 is_stmt 0 view .LVU2196
 6545 2925 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 6546 2928 723B     		jb	.L516	#,
 776:sieve_extend.c ****     }
 6547              		.loc 1 776 9 is_stmt 1 view .LVU2197
 6548              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccqpmidN.s 			page 184


 6549              		.loc 1 775 52 is_stmt 0 view .LVU2198
 6550 292a 4883C602 		add	rsi, 2	# copy_word,
 6551              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6552              		.loc 1 776 94 view .LVU2199
 6553 292e C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 6553      64FB08
 6554              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6555              		.loc 1 776 56 view .LVU2200
 6556 2935 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 6557              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6558              		.loc 1 776 77 view .LVU2201
 6559 2939 4883C102 		add	rcx, 2	# _78,
 6560              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6561              		.loc 1 776 56 view .LVU2202
 6562 293d C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 6562      F0
 6563              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6564              		.loc 1 776 66 view .LVU2203
 6565 2942 4D09F4   		or	r12, r14	# tmp743, tmp741
 6566 2945 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6567              		.loc 1 775 43 is_stmt 1 view .LVU2204
 6568              	.LVL320:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6569              		.loc 1 775 11 view .LVU2205
 6570              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6571              		.loc 1 775 5 is_stmt 0 view .LVU2206
 6572 2949 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 6573 294c 7217     		jb	.L516	#,
 776:sieve_extend.c ****     }
 6574              		.loc 1 776 9 is_stmt 1 view .LVU2207
 6575              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6576              		.loc 1 776 94 is_stmt 0 view .LVU2208
 6577 294e C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 6577      7CCB08
 6578              	.LVL321:
 6579              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6580              		.loc 1 776 56 view .LVU2209
 6581 2955 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 6582              	.LVL322:
 776:sieve_extend.c ****     }
 6583              		.loc 1 776 56 view .LVU2210
 6584 2959 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 6584      E9
 6585              	.LVL323:
 6586              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 6587              		.loc 1 776 66 view .LVU2211
 6588 295e 4D09EF   		or	r15, r13	# tmp748, tmp746
GAS LISTING /tmp/ccqpmidN.s 			page 185


 6589 2961 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6590              		.loc 1 775 43 is_stmt 1 view .LVU2212
 6591              	.LVL324:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6592              		.loc 1 775 11 view .LVU2213
 6593              	.L516:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6594              		.loc 1 775 11 is_stmt 0 view .LVU2214
 6595 2965 4C89D0   		mov	rax, r10	# ivtmp.375, ivtmp.375
 6596              	.L509:
 779:sieve_extend.c **** 
 6597              		.loc 1 779 5 is_stmt 1 view .LVU2215
 6598              	# sieve_extend.c:779:     if (copy_word >= destination_stop_word) return;
 779:sieve_extend.c **** 
 6599              		.loc 1 779 8 is_stmt 0 view .LVU2216
 6600 2968 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6600      50
 6601 296d 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.375
 6602 2970 0F86B304 		jbe	.L764	#,
 6602      0000
 781:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6603              		.loc 1 781 5 is_stmt 1 view .LVU2217
 6604              	# sieve_extend.c:781:     source_word = copy_word - size; // recalibrate
 781:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6605              		.loc 1 781 17 is_stmt 0 view .LVU2218
 6606 2976 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 6606      18
 6607 297b 4989C5   		mov	r13, rax	# source_word, ivtmp.375
 6608              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6609              		.loc 1 785 21 view .LVU2219
 6610 297e 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.375,
 6611              	# sieve_extend.c:781:     source_word = copy_word - size; // recalibrate
 781:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6612              		.loc 1 781 17 view .LVU2220
 6613 2982 4929F5   		sub	r13, rsi	# source_word, size
 6614              	.LVL325:
 782:sieve_extend.c **** 
 6615              		.loc 1 782 5 is_stmt 1 view .LVU2221
 6616              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6617              		.loc 1 785 5 is_stmt 0 view .LVU2222
 6618 2985 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.375
 6619              	# sieve_extend.c:782:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 782:sieve_extend.c **** 
 6620              		.loc 1 782 18 view .LVU2223
 6621 2988 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 6621      00000000 
 6622              	.LVL326:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6623              		.loc 1 785 5 is_stmt 1 view .LVU2224
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6624              		.loc 1 785 11 view .LVU2225
 6625              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6626              		.loc 1 785 5 is_stmt 0 view .LVU2226
GAS LISTING /tmp/ccqpmidN.s 			page 186


 6627 2990 0F825F01 		jb	.L518	#,
 6627      0000
 6628 2996 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 6629 299a 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 6629      00000000 
 6630              	# sieve_extend.c:786:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 786:sieve_extend.c **** 
 6631              		.loc 1 786 38 view .LVU2227
 6632 29a2 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 6633 29a6 4929C4   		sub	r12, rax	# _711, tmp762
 6634 29a9 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 6634      48
 6635 29ae 4989F5   		mov	r13, rsi	# size, size
 6636              	.LVL327:
 786:sieve_extend.c **** 
 6637              		.loc 1 786 38 view .LVU2228
 6638 29b1 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 6638      40
 6639              	.LVL328:
 786:sieve_extend.c **** 
 6640              		.loc 1 786 38 view .LVU2229
 6641 29b6 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 6642              	.LVL329:
 786:sieve_extend.c **** 
 6643              		.loc 1 786 38 view .LVU2230
 6644 29b9 C5F877   		vzeroupper
 6645              	.L519:
 786:sieve_extend.c **** 
 6646              		.loc 1 786 9 is_stmt 1 discriminator 2 view .LVU2231
 6647              	.LVL330:
 6648              	.LBB322:
 6649              	.LBI322:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6650              		.loc 2 31 1 discriminator 2 view .LVU2232
 6651              	.LBB323:
 6652              		.loc 2 34 3 discriminator 2 view .LVU2233
 6653              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6654              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2234
 6655 29bc 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 6656 29c0 4C89F2   		mov	rdx, r14	#, memsize
 6657 29c3 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.375
 6657      58
 6658 29c8 4C89FE   		mov	rsi, r15	#, _48
 6659 29cb E8000000 		call	memcpy@PLT	#
 6659      00
 6660              	.LVL331:
 6661              		.loc 2 34 10 discriminator 2 view .LVU2235
 6662              	.LBE323:
 6663              	.LBE322:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6664              		.loc 1 785 54 is_stmt 1 discriminator 2 view .LVU2236
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6665              		.loc 1 785 11 discriminator 2 view .LVU2237
 6666 29d0 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6666      58
 6667 29d5 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.375,
 6668              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
GAS LISTING /tmp/ccqpmidN.s 			page 187


 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6669              		.loc 1 785 5 is_stmt 0 discriminator 2 view .LVU2238
 6670 29d9 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.375
 6671 29dc 0F82FE00 		jb	.L754	#,
 6671      0000
 786:sieve_extend.c **** 
 6672              		.loc 1 786 9 is_stmt 1 view .LVU2239
 6673              	.LVL332:
 6674              	.LBB331:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6675              		.loc 2 31 1 view .LVU2240
 6676              	.LBB324:
 6677              		.loc 2 34 3 view .LVU2241
 6678              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6679              		.loc 2 34 10 is_stmt 0 view .LVU2242
 6680 29e2 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 6681 29e6 4C89F2   		mov	rdx, r14	#, memsize
 6682 29e9 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.375
 6682      58
 6683              	.LVL333:
 6684              		.loc 2 34 10 view .LVU2243
 6685 29ee 4C89FE   		mov	rsi, r15	#, _48
 6686 29f1 E8000000 		call	memcpy@PLT	#
 6686      00
 6687              	.LVL334:
 6688              		.loc 2 34 10 view .LVU2244
 6689              	.LBE324:
 6690              	.LBE331:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6691              		.loc 1 785 54 is_stmt 1 view .LVU2245
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6692              		.loc 1 785 11 view .LVU2246
 6693 29f6 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6693      58
 6694 29fb 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.375,
 6695              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6696              		.loc 1 785 5 is_stmt 0 view .LVU2247
 6697 29ff 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.375
 6698 2a02 0F82D800 		jb	.L754	#,
 6698      0000
 786:sieve_extend.c **** 
 6699              		.loc 1 786 9 is_stmt 1 view .LVU2248
 6700              	.LVL335:
 6701              	.LBB332:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6702              		.loc 2 31 1 view .LVU2249
 6703              	.LBB325:
 6704              		.loc 2 34 3 view .LVU2250
 6705              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6706              		.loc 2 34 10 is_stmt 0 view .LVU2251
 6707 2a08 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 6708 2a0c 4C89F2   		mov	rdx, r14	#, memsize
 6709 2a0f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.375
 6709      58
 6710 2a14 4C89FE   		mov	rsi, r15	#, _48
 6711 2a17 E8000000 		call	memcpy@PLT	#
GAS LISTING /tmp/ccqpmidN.s 			page 188


 6711      00
 6712              	.LVL336:
 6713              		.loc 2 34 10 view .LVU2252
 6714              	.LBE325:
 6715              	.LBE332:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6716              		.loc 1 785 54 is_stmt 1 view .LVU2253
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6717              		.loc 1 785 11 view .LVU2254
 6718 2a1c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6718      58
 6719 2a21 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.375,
 6720              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6721              		.loc 1 785 5 is_stmt 0 view .LVU2255
 6722 2a25 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.375
 6723 2a28 0F82B200 		jb	.L754	#,
 6723      0000
 786:sieve_extend.c **** 
 6724              		.loc 1 786 9 is_stmt 1 view .LVU2256
 6725              	.LVL337:
 6726              	.LBB333:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6727              		.loc 2 31 1 view .LVU2257
 6728              	.LBB326:
 6729              		.loc 2 34 3 view .LVU2258
 6730              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6731              		.loc 2 34 10 is_stmt 0 view .LVU2259
 6732 2a2e 4C89F2   		mov	rdx, r14	#, memsize
 6733 2a31 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 6734 2a35 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.375
 6734      58
 6735 2a3a 4C89FE   		mov	rsi, r15	#, _48
 6736 2a3d E8000000 		call	memcpy@PLT	#
 6736      00
 6737              	.LVL338:
 6738              		.loc 2 34 10 view .LVU2260
 6739              	.LBE326:
 6740              	.LBE333:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6741              		.loc 1 785 54 is_stmt 1 view .LVU2261
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6742              		.loc 1 785 11 view .LVU2262
 6743 2a42 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6743      58
 6744 2a47 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.375,
 6745              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6746              		.loc 1 785 5 is_stmt 0 view .LVU2263
 6747 2a4b 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.375
 6748 2a4e 0F828C00 		jb	.L754	#,
 6748      0000
 786:sieve_extend.c **** 
 6749              		.loc 1 786 9 is_stmt 1 view .LVU2264
 6750              	.LVL339:
 6751              	.LBB334:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccqpmidN.s 			page 189


 6752              		.loc 2 31 1 view .LVU2265
 6753              	.LBB327:
 6754              		.loc 2 34 3 view .LVU2266
 6755              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6756              		.loc 2 34 10 is_stmt 0 view .LVU2267
 6757 2a54 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 6758 2a58 4C89FE   		mov	rsi, r15	#, _48
 6759 2a5b 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.375
 6759      58
 6760 2a60 4C89F2   		mov	rdx, r14	#, memsize
 6761 2a63 E8000000 		call	memcpy@PLT	#
 6761      00
 6762              	.LVL340:
 6763              		.loc 2 34 10 view .LVU2268
 6764              	.LBE327:
 6765              	.LBE334:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6766              		.loc 1 785 54 is_stmt 1 view .LVU2269
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6767              		.loc 1 785 11 view .LVU2270
 6768 2a68 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6768      58
 6769 2a6d 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.375,
 6770              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6771              		.loc 1 785 5 is_stmt 0 view .LVU2271
 6772 2a71 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.375
 6773 2a74 726A     		jb	.L754	#,
 786:sieve_extend.c **** 
 6774              		.loc 1 786 9 is_stmt 1 view .LVU2272
 6775              	.LVL341:
 6776              	.LBB335:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6777              		.loc 2 31 1 view .LVU2273
 6778              	.LBB328:
 6779              		.loc 2 34 3 view .LVU2274
 6780              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6781              		.loc 2 34 10 is_stmt 0 view .LVU2275
 6782 2a76 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 6783 2a7a 4C89F2   		mov	rdx, r14	#, memsize
 6784 2a7d 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.375
 6784      58
 6785 2a82 4C89FE   		mov	rsi, r15	#, _48
 6786 2a85 E8000000 		call	memcpy@PLT	#
 6786      00
 6787              	.LVL342:
 6788              		.loc 2 34 10 view .LVU2276
 6789              	.LBE328:
 6790              	.LBE335:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6791              		.loc 1 785 54 is_stmt 1 view .LVU2277
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6792              		.loc 1 785 11 view .LVU2278
 6793 2a8a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6793      58
 6794 2a8f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.375,
 6795              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
GAS LISTING /tmp/ccqpmidN.s 			page 190


 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6796              		.loc 1 785 5 is_stmt 0 view .LVU2279
 6797 2a93 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.375
 6798 2a96 7248     		jb	.L754	#,
 786:sieve_extend.c **** 
 6799              		.loc 1 786 9 is_stmt 1 view .LVU2280
 6800              	.LVL343:
 6801              	.LBB336:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6802              		.loc 2 31 1 view .LVU2281
 6803              	.LBB329:
 6804              		.loc 2 34 3 view .LVU2282
 6805              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6806              		.loc 2 34 10 is_stmt 0 view .LVU2283
 6807 2a98 4C89FE   		mov	rsi, r15	#, _48
 6808 2a9b 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 6809 2a9f 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.375
 6809      58
 6810 2aa4 4C89F2   		mov	rdx, r14	#, memsize
 6811 2aa7 E8000000 		call	memcpy@PLT	#
 6811      00
 6812              	.LVL344:
 6813              		.loc 2 34 10 view .LVU2284
 6814              	.LBE329:
 6815              	.LBE336:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6816              		.loc 1 785 54 is_stmt 1 view .LVU2285
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6817              		.loc 1 785 11 view .LVU2286
 6818 2aac 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6818      58
 6819 2ab1 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.375,
 6820              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6821              		.loc 1 785 5 is_stmt 0 view .LVU2287
 6822 2ab5 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.375
 6823 2ab8 7226     		jb	.L754	#,
 786:sieve_extend.c **** 
 6824              		.loc 1 786 9 is_stmt 1 view .LVU2288
 6825              	.LVL345:
 6826              	.LBB337:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6827              		.loc 2 31 1 view .LVU2289
 6828              	.LBB330:
 6829              		.loc 2 34 3 view .LVU2290
 6830              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6831              		.loc 2 34 10 is_stmt 0 view .LVU2291
 6832 2aba 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 6833 2abe 4C89F2   		mov	rdx, r14	#, memsize
 6834 2ac1 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.375
 6834      58
 6835 2ac6 4C89FE   		mov	rsi, r15	#, _48
 6836 2ac9 E8000000 		call	memcpy@PLT	#
 6836      00
 6837              	.LVL346:
 6838              		.loc 2 34 10 view .LVU2292
 6839              	.LBE330:
GAS LISTING /tmp/ccqpmidN.s 			page 191


 6840              	.LBE337:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6841              		.loc 1 785 54 is_stmt 1 view .LVU2293
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6842              		.loc 1 785 11 view .LVU2294
 6843 2ace 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.375, %sfp
 6843      58
 6844              	.LVL347:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6845              		.loc 1 785 11 is_stmt 0 view .LVU2295
 6846 2ad3 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.375,
 6847              	.LVL348:
 6848              	# sieve_extend.c:785:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6849              		.loc 1 785 5 view .LVU2296
 6850 2ad7 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.375
 6851 2ada 0F83DCFE 		jnb	.L519	#,
 6851      FFFF
 6852              	.LVL349:
 6853              		.p2align 4
 6854              		.p2align 3
 6855              	.L754:
 785:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6856              		.loc 1 785 5 view .LVU2297
 6857 2ae0 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 6857      48
 6858              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6859              		.loc 1 789 5 view .LVU2298
 6860 2ae5 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.375
 6860      50
 6861 2aea 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 6861      40
 6862              	.LVL350:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6863              		.loc 1 789 11 is_stmt 1 view .LVU2299
 6864              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6865              		.loc 1 789 5 is_stmt 0 view .LVU2300
 6866 2aef 0F826E02 		jb	.L765	#,
 6866      0000
 6867              	.LVL351:
 6868              	.L518:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6869              		.loc 1 789 5 view .LVU2301
 6870 2af5 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 6870      00000000 
 6871 2afd 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 6871      00000000 
 6872 2b05 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 6873 2b09 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 6873      20000000 
 6874              	.LVL352:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6875              		.loc 1 789 5 view .LVU2302
 6876 2b11 4939FC   		cmp	r12, rdi	# _187, tmp771
 6877 2b14 410F9DC1 		setge	r9b	#, tmp773
GAS LISTING /tmp/ccqpmidN.s 			page 192


 6878 2b18 4D39F7   		cmp	r15, r14	# _195, _197
 6879 2b1b 410F9DC3 		setge	r11b	#, tmp775
 6880 2b1f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 6881 2b22 0F845002 		je	.L521	#,
 6881      0000
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6882              		.loc 1 789 5 view .LVU2303
 6883 2b28 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6883      50
 6884 2b2d 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 6885 2b30 4929C2   		sub	r10, rax	# tmp777, ivtmp.375
 6886 2b33 4983FA05 		cmp	r10, 5	# tmp777,
 6887 2b37 0F863B02 		jbe	.L521	#,
 6887      0000
 6888 2b3d 4901DC   		add	r12, rbx	# vectp.300, bitarray
 6889 2b40 4C8D4201 		lea	r8, 1[rdx]	# _75,
 6890 2b44 49C1EC03 		shr	r12, 3	# tmp781,
 6891 2b48 49F7DC   		neg	r12	# tmp782
 6892 2b4b 4183E403 		and	r12d, 3	# prolog_loop_niters.301,
 6893 2b4f 0F842B07 		je	.L530	#,
 6893      0000
 790:sieve_extend.c **** 
 6894              		.loc 1 790 9 is_stmt 1 view .LVU2304
 6895              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6896              		.loc 1 790 39 is_stmt 0 view .LVU2305
 6897 2b55 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 6898 2b59 4983FC01 		cmp	r12, 1	# prolog_loop_niters.301,
 6899              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6900              		.loc 1 789 57 view .LVU2306
 6901 2b5d 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6902              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6903              		.loc 1 789 71 view .LVU2307
 6904 2b61 4D8D7501 		lea	r14, 1[r13]	# source_word,
 6905              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6906              		.loc 1 790 29 view .LVU2308
 6907 2b65 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6908              		.loc 1 789 48 is_stmt 1 view .LVU2309
 6909              	.LVL353:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6910              		.loc 1 789 11 view .LVU2310
 6911 2b69 7426     		je	.L522	#,
 790:sieve_extend.c **** 
 6912              		.loc 1 790 9 view .LVU2311
 6913              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6914              		.loc 1 790 39 is_stmt 0 view .LVU2312
 6915 2b6b 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 6916 2b6f 4983FC03 		cmp	r12, 3	# prolog_loop_niters.301,
 6917              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6918              		.loc 1 789 71 view .LVU2313
 6919 2b73 4D8D7502 		lea	r14, 2[r13]	# source_word,
GAS LISTING /tmp/ccqpmidN.s 			page 193


 6920              	.LVL354:
 6921              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6922              		.loc 1 790 29 view .LVU2314
 6923 2b77 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6924              		.loc 1 789 48 is_stmt 1 view .LVU2315
 6925              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6926              		.loc 1 789 57 is_stmt 0 view .LVU2316
 6927 2b7b 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6928              	.LVL355:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6929              		.loc 1 789 11 is_stmt 1 view .LVU2317
 6930 2b7f 7510     		jne	.L522	#,
 790:sieve_extend.c **** 
 6931              		.loc 1 790 9 view .LVU2318
 6932              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6933              		.loc 1 790 39 is_stmt 0 view .LVU2319
 6934 2b81 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 6935              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6936              		.loc 1 789 71 view .LVU2320
 6937 2b85 4D8D7503 		lea	r14, 3[r13]	# source_word,
 6938              	.LVL356:
 6939              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6940              		.loc 1 790 29 view .LVU2321
 6941 2b89 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6942              		.loc 1 789 48 is_stmt 1 view .LVU2322
 6943              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6944              		.loc 1 789 57 is_stmt 0 view .LVU2323
 6945 2b8d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6946              	.LVL357:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6947              		.loc 1 789 11 is_stmt 1 view .LVU2324
 6948              	.L522:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6949              		.loc 1 789 11 is_stmt 0 view .LVU2325
 6950 2b91 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.301
 6951 2b94 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.301
 6952 2b97 4929C0   		sub	r8, rax	# niters.302, ivtmp.375
 6953 2b9a 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.301
 6954 2b9d 4D89C1   		mov	r9, r8	# bnd.303, niters.302
 6955 2ba0 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.311,
 6956 2ba4 49C1E902 		shr	r9, 2	# bnd.303,
 6957              	# sieve_extend.c:781:     source_word = copy_word - size; // recalibrate
 781:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6958              		.loc 1 781 17 view .LVU2326
 6959 2ba8 31C0     		xor	eax, eax	# ivtmp.366
 6960 2baa 49C1E105 		sal	r9, 5	# _704,
 6961 2bae 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.308,
 6962 2bb2 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 6963 2bb6 49C1EB05 		shr	r11, 5	# tmp804,
GAS LISTING /tmp/ccqpmidN.s 			page 194


 6964 2bba 4983C301 		add	r11, 1	# tmp807,
 6965 2bbe 4183E307 		and	r11d, 7	# tmp808,
 6966 2bc2 0F84A800 		je	.L524	#,
 6966      0000
 6967 2bc8 4983FB01 		cmp	r11, 1	# tmp808,
 6968 2bcc 0F848400 		je	.L674	#,
 6968      0000
 6969 2bd2 4983FB02 		cmp	r11, 2	# tmp808,
 6970 2bd6 746D     		je	.L675	#,
 6971 2bd8 4983FB03 		cmp	r11, 3	# tmp808,
 6972 2bdc 7456     		je	.L676	#,
 6973 2bde 4983FB04 		cmp	r11, 4	# tmp808,
 6974 2be2 743F     		je	.L677	#,
 6975 2be4 4983FB05 		cmp	r11, 5	# tmp808,
 6976 2be8 7428     		je	.L678	#,
 6977 2bea 4983FB06 		cmp	r11, 6	# tmp808,
 6978 2bee 7411     		je	.L679	#,
 6979              	.LVL358:
 790:sieve_extend.c **** 
 6980              		.loc 1 790 9 is_stmt 1 view .LVU2327
 6981              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6982              		.loc 1 790 29 is_stmt 0 view .LVU2328
 6983 2bf0 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.308_189, index: ivtmp.366_702, offset
 6983      5500
 6984 2bf6 B8200000 		mov	eax, 32	# ivtmp.366,
 6984      00
 6985 2bfb C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B], tmp
 6985      1424
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6986              		.loc 1 789 48 is_stmt 1 view .LVU2329
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6987              		.loc 1 789 11 view .LVU2330
 6988              	.L679:
 790:sieve_extend.c **** 
 6989              		.loc 1 790 9 view .LVU2331
 6990              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 6991              		.loc 1 790 29 is_stmt 0 view .LVU2332
 6992 2c01 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.308_189, index: ivtmp.366_702, off
 6992      540500
 6993 2c08 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B], 
 6993      1404
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6994              		.loc 1 789 48 is_stmt 1 view .LVU2333
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6995              		.loc 1 789 11 view .LVU2334
 6996 2c0e 4883C020 		add	rax, 32	# ivtmp.366,
 6997              	.L678:
 790:sieve_extend.c **** 
 6998              		.loc 1 790 9 view .LVU2335
 6999              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7000              		.loc 1 790 29 is_stmt 0 view .LVU2336
 7001 2c12 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.308_189, index: ivtmp.366_702, of
 7001      6C0500
 7002 2c19 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B],
GAS LISTING /tmp/ccqpmidN.s 			page 195


 7002      2C04
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7003              		.loc 1 789 48 is_stmt 1 view .LVU2337
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7004              		.loc 1 789 11 view .LVU2338
 7005 2c1f 4883C020 		add	rax, 32	# ivtmp.366,
 7006              	.L677:
 790:sieve_extend.c **** 
 7007              		.loc 1 790 9 view .LVU2339
 7008              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7009              		.loc 1 790 29 is_stmt 0 view .LVU2340
 7010 2c23 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.308_189, index: ivtmp.366_702, of
 7010      740500
 7011 2c2a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B],
 7011      3404
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7012              		.loc 1 789 48 is_stmt 1 view .LVU2341
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7013              		.loc 1 789 11 view .LVU2342
 7014 2c30 4883C020 		add	rax, 32	# ivtmp.366,
 7015              	.L676:
 790:sieve_extend.c **** 
 7016              		.loc 1 790 9 view .LVU2343
 7017              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7018              		.loc 1 790 29 is_stmt 0 view .LVU2344
 7019 2c34 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.308_189, index: ivtmp.366_702, of
 7019      7C0500
 7020 2c3b C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B],
 7020      3C04
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7021              		.loc 1 789 48 is_stmt 1 view .LVU2345
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7022              		.loc 1 789 11 view .LVU2346
 7023 2c41 4883C020 		add	rax, 32	# ivtmp.366,
 7024              	.L675:
 790:sieve_extend.c **** 
 7025              		.loc 1 790 9 view .LVU2347
 7026              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7027              		.loc 1 790 29 is_stmt 0 view .LVU2348
 7028 2c45 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.308_189, index: ivtmp.366_702, off
 7028      4C0500
 7029 2c4c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B], 
 7029      0C04
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7030              		.loc 1 789 48 is_stmt 1 view .LVU2349
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7031              		.loc 1 789 11 view .LVU2350
 7032 2c52 4883C020 		add	rax, 32	# ivtmp.366,
 7033              	.L674:
 790:sieve_extend.c **** 
 7034              		.loc 1 790 9 view .LVU2351
 7035              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7036              		.loc 1 790 29 is_stmt 0 view .LVU2352
GAS LISTING /tmp/ccqpmidN.s 			page 196


 7037 2c56 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.308_189, index: ivtmp.366_702, off
 7037      440500
 7038 2c5d C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B], 
 7038      0404
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7039              		.loc 1 789 48 is_stmt 1 view .LVU2353
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7040              		.loc 1 789 11 view .LVU2354
 7041 2c63 4883C020 		add	rax, 32	# ivtmp.366,
 7042 2c67 4C39C8   		cmp	rax, r9	# ivtmp.366, _704
 7043 2c6a 0F849600 		je	.L739	#,
 7043      0000
 7044              	.L524:
 790:sieve_extend.c **** 
 7045              		.loc 1 790 9 discriminator 2 view .LVU2355
 7046              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7047              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2356
 7048 2c70 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.308_189, index: ivtmp.366_702, off
 7048      440500
 7049 2c77 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B], 
 7049      0404
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7050              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2357
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7051              		.loc 1 789 11 discriminator 2 view .LVU2358
 790:sieve_extend.c **** 
 7052              		.loc 1 790 9 discriminator 2 view .LVU2359
 7053              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7054              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2360
 7055 2c7d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.308_189, index: ivtmp.366_702, of
 7055      6C0520
 7056 2c84 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B]
 7056      6C0420
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7057              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2361
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7058              		.loc 1 789 11 discriminator 2 view .LVU2362
 790:sieve_extend.c **** 
 7059              		.loc 1 790 9 discriminator 2 view .LVU2363
 7060              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7061              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2364
 7062 2c8b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.308_189, index: ivtmp.366_702, of
 7062      4C0540
 7063 2c92 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B]
 7063      4C0440
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7064              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2365
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7065              		.loc 1 789 11 discriminator 2 view .LVU2366
 790:sieve_extend.c **** 
 7066              		.loc 1 790 9 discriminator 2 view .LVU2367
 7067              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7068              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2368
GAS LISTING /tmp/ccqpmidN.s 			page 197


 7069 2c99 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.308_189, index: ivtmp.366_702, o
 7069      5C0560
 7070 2ca0 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B
 7070      5C0460
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7071              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2369
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7072              		.loc 1 789 11 discriminator 2 view .LVU2370
 790:sieve_extend.c **** 
 7073              		.loc 1 790 9 discriminator 2 view .LVU2371
 7074              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7075              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2372
 7076 2ca7 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.308_189, index: ivtmp.366_702, o
 7076      A4058000 
 7076      0000
 7077 2cb1 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B
 7077      A4048000 
 7077      0000
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7078              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2373
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7079              		.loc 1 789 11 discriminator 2 view .LVU2374
 790:sieve_extend.c **** 
 7080              		.loc 1 790 9 discriminator 2 view .LVU2375
 7081              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7082              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2376
 7083 2cbb C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.308_189, index: ivtmp.366_702, o
 7083      B405A000 
 7083      0000
 7084 2cc5 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B
 7084      B404A000 
 7084      0000
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7085              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2377
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7086              		.loc 1 789 11 discriminator 2 view .LVU2378
 790:sieve_extend.c **** 
 7087              		.loc 1 790 9 discriminator 2 view .LVU2379
 7088              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7089              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2380
 7090 2ccf C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.308_189, index: ivtmp.366_702, o
 7090      BC05C000 
 7090      0000
 7091 2cd9 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B
 7091      BC04C000 
 7091      0000
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7092              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2381
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7093              		.loc 1 789 11 discriminator 2 view .LVU2382
 790:sieve_extend.c **** 
 7094              		.loc 1 790 9 discriminator 2 view .LVU2383
 7095              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 198


 7096              		.loc 1 790 29 is_stmt 0 discriminator 2 view .LVU2384
 7097 2ce3 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.308_189, index: ivtmp.366_702, o
 7097      9C05E000 
 7097      0000
 7098 2ced C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.311_207, index: ivtmp.366_702, offset: 0B
 7098      9C04E000 
 7098      0000
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7099              		.loc 1 789 48 is_stmt 1 discriminator 2 view .LVU2385
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7100              		.loc 1 789 11 discriminator 2 view .LVU2386
 7101 2cf7 48050001 		add	rax, 256	# ivtmp.366,
 7101      0000
 7102 2cfd 4C39C8   		cmp	rax, r9	# ivtmp.366, _704
 7103 2d00 0F856AFF 		jne	.L524	#,
 7103      FFFF
 7104              	.L739:
 7105 2d06 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.304, niters.302
 7106 2d09 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.304,
 7107 2d0d 4901D6   		add	r14, rdx	# tmp.305, niters_vector_mult_vf.304
 7108 2d10 4801D6   		add	rsi, rdx	# tmp.306, niters_vector_mult_vf.304
 7109 2d13 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.304, niters.302
 7110 2d16 0F840D01 		je	.L764	#,
 7110      0000
 7111              	.LVL359:
 790:sieve_extend.c **** 
 7112              		.loc 1 790 9 view .LVU2387
 7113              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7114              		.loc 1 789 5 is_stmt 0 view .LVU2388
 7115 2d1c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7115      50
 7116              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7117              		.loc 1 789 57 view .LVU2389
 7118 2d21 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 7119              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7120              		.loc 1 790 39 view .LVU2390
 7121 2d25 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 7122              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7123              		.loc 1 789 71 view .LVU2391
 7124 2d29 4983C601 		add	r14, 1	# source_word,
 7125              	.LVL360:
 7126              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7127              		.loc 1 789 5 view .LVU2392
 7128 2d2d 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 7129              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7130              		.loc 1 790 29 view .LVU2393
 7131 2d30 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7132              		.loc 1 789 48 is_stmt 1 view .LVU2394
 7133              	.LVL361:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccqpmidN.s 			page 199


 7134              		.loc 1 789 11 view .LVU2395
 7135              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7136              		.loc 1 789 5 is_stmt 0 view .LVU2396
 7137 2d34 0F82EF00 		jb	.L764	#,
 7137      0000
 790:sieve_extend.c **** 
 7138              		.loc 1 790 9 is_stmt 1 view .LVU2397
 7139              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7140              		.loc 1 790 39 is_stmt 0 view .LVU2398
 7141 2d3a 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 7141      00000000 
 7142              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7143              		.loc 1 789 57 view .LVU2399
 7144 2d42 4883C602 		add	rsi, 2	# copy_word,
 7145              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7146              		.loc 1 790 39 view .LVU2400
 7147 2d46 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 7148              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7149              		.loc 1 789 5 view .LVU2401
 7150 2d4a 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 7151              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7152              		.loc 1 790 29 view .LVU2402
 7153 2d4d 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7154              		.loc 1 789 48 is_stmt 1 view .LVU2403
 7155              	.LVL362:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7156              		.loc 1 789 11 view .LVU2404
 7157              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7158              		.loc 1 789 5 is_stmt 0 view .LVU2405
 7159 2d51 0F82D200 		jb	.L764	#,
 7159      0000
 790:sieve_extend.c **** 
 7160              		.loc 1 790 9 is_stmt 1 view .LVU2406
 7161              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7162              		.loc 1 790 39 is_stmt 0 view .LVU2407
 7163 2d57 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 7163      08
 7164              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7165              		.loc 1 790 29 view .LVU2408
 7166 2d5c 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7167              		.loc 1 789 48 is_stmt 1 view .LVU2409
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7168              		.loc 1 789 11 view .LVU2410
 7169 2d60 C5F877   		vzeroupper
 7170              	.L765:
 7171              	# sieve_extend.c:793:  }
GAS LISTING /tmp/ccqpmidN.s 			page 200


 793:sieve_extend.c **** 
 7172              		.loc 1 793 2 is_stmt 0 view .LVU2411
 7173 2d63 488D65D8 		lea	rsp, -40[rbp]	#,
 7174              	.LVL363:
 793:sieve_extend.c **** 
 7175              		.loc 1 793 2 view .LVU2412
 7176 2d67 5B       		pop	rbx	#
 7177 2d68 415C     		pop	r12	#
 7178 2d6a 415D     		pop	r13	#
 7179 2d6c 415E     		pop	r14	#
 7180 2d6e 415F     		pop	r15	#
 7181 2d70 5D       		pop	rbp	#
 7182              		.cfi_remember_state
 7183              		.cfi_def_cfa 7, 8
 7184              	.LVL364:
 793:sieve_extend.c **** 
 7185              		.loc 1 793 2 view .LVU2413
 7186 2d71 C3       		ret	
 7187              	.LVL365:
 7188              		.p2align 4,,7
 7189 2d72 660F1F44 		.p2align 3
 7189      0000
 7190              	.L521:
 7191              		.cfi_restore_state
 793:sieve_extend.c **** 
 7192              		.loc 1 793 2 view .LVU2414
 7193 2d78 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7193      50
 7194 2d7d 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.361,
 7195              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7196              		.loc 1 790 39 view .LVU2415
 7197 2d81 4929C5   		sub	r13, rax	# tmp791, ivtmp.375
 7198              	.LVL366:
 790:sieve_extend.c **** 
 7199              		.loc 1 790 39 view .LVU2416
 7200 2d84 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 7200      08
 7201 2d89 4989D9   		mov	r9, rbx	# tmp799, _701
 7202 2d8c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.361
 7203 2d8f 4983E908 		sub	r9, 8	# tmp800,
 7204 2d93 49C1E903 		shr	r9, 3	# tmp798,
 7205 2d97 4983C101 		add	r9, 1	# tmp801,
 7206 2d9b 4183E107 		and	r9d, 7	# tmp802,
 7207 2d9f 0F849B00 		je	.L527	#,
 7207      0000
 7208 2da5 4983F901 		cmp	r9, 1	# tmp802,
 7209 2da9 746C     		je	.L680	#,
 7210 2dab 4983F902 		cmp	r9, 2	# tmp802,
 7211 2daf 7459     		je	.L681	#,
 7212 2db1 4983F903 		cmp	r9, 3	# tmp802,
 7213 2db5 7446     		je	.L682	#,
 7214 2db7 4983F904 		cmp	r9, 4	# tmp802,
 7215 2dbb 7433     		je	.L683	#,
 7216 2dbd 4983F905 		cmp	r9, 5	# tmp802,
 7217 2dc1 7420     		je	.L684	#,
 7218 2dc3 4983F906 		cmp	r9, 6	# tmp802,
GAS LISTING /tmp/ccqpmidN.s 			page 201


 7219 2dc7 740D     		je	.L685	#,
 790:sieve_extend.c **** 
 7220              		.loc 1 790 9 is_stmt 1 view .LVU2417
 7221              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7222              		.loc 1 790 39 is_stmt 0 view .LVU2418
 7223 2dc9 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7224 2dcd 4983C408 		add	r12, 8	# ivtmp.361,
 7225              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7226              		.loc 1 790 29 view .LVU2419
 7227 2dd1 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 7227      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7228              		.loc 1 789 48 is_stmt 1 view .LVU2420
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7229              		.loc 1 789 11 view .LVU2421
 7230              	.L685:
 790:sieve_extend.c **** 
 7231              		.loc 1 790 9 view .LVU2422
 7232              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7233              		.loc 1 790 39 is_stmt 0 view .LVU2423
 7234 2dd6 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7235 2dda 4983C408 		add	r12, 8	# ivtmp.361,
 7236              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7237              		.loc 1 790 29 view .LVU2424
 7238 2dde 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 7238      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7239              		.loc 1 789 48 is_stmt 1 view .LVU2425
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7240              		.loc 1 789 11 view .LVU2426
 7241              	.L684:
 790:sieve_extend.c **** 
 7242              		.loc 1 790 9 view .LVU2427
 7243              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7244              		.loc 1 790 39 is_stmt 0 view .LVU2428
 7245 2de3 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7246 2de7 4983C408 		add	r12, 8	# ivtmp.361,
 7247              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7248              		.loc 1 790 29 view .LVU2429
 7249 2deb 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 7249      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7250              		.loc 1 789 48 is_stmt 1 view .LVU2430
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7251              		.loc 1 789 11 view .LVU2431
 7252              	.L683:
 790:sieve_extend.c **** 
 7253              		.loc 1 790 9 view .LVU2432
 7254              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7255              		.loc 1 790 39 is_stmt 0 view .LVU2433
GAS LISTING /tmp/ccqpmidN.s 			page 202


 7256 2df0 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7257 2df4 4983C408 		add	r12, 8	# ivtmp.361,
 7258              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7259              		.loc 1 790 29 view .LVU2434
 7260 2df8 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 7260      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7261              		.loc 1 789 48 is_stmt 1 view .LVU2435
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7262              		.loc 1 789 11 view .LVU2436
 7263              	.L682:
 790:sieve_extend.c **** 
 7264              		.loc 1 790 9 view .LVU2437
 7265              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7266              		.loc 1 790 39 is_stmt 0 view .LVU2438
 7267 2dfd 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7268 2e01 4983C408 		add	r12, 8	# ivtmp.361,
 7269              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7270              		.loc 1 790 29 view .LVU2439
 7271 2e05 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 7271      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7272              		.loc 1 789 48 is_stmt 1 view .LVU2440
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7273              		.loc 1 789 11 view .LVU2441
 7274              	.L681:
 790:sieve_extend.c **** 
 7275              		.loc 1 790 9 view .LVU2442
 7276              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7277              		.loc 1 790 39 is_stmt 0 view .LVU2443
 7278 2e0a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7279 2e0e 4983C408 		add	r12, 8	# ivtmp.361,
 7280              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7281              		.loc 1 790 29 view .LVU2444
 7282 2e12 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 7282      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7283              		.loc 1 789 48 is_stmt 1 view .LVU2445
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7284              		.loc 1 789 11 view .LVU2446
 7285              	.L680:
 790:sieve_extend.c **** 
 7286              		.loc 1 790 9 view .LVU2447
 7287              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7288              		.loc 1 790 39 is_stmt 0 view .LVU2448
 7289 2e17 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7290 2e1b 4983C408 		add	r12, 8	# ivtmp.361,
 7291              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7292              		.loc 1 790 29 view .LVU2449
 7293 2e1f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
GAS LISTING /tmp/ccqpmidN.s 			page 203


 7293      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7294              		.loc 1 789 48 is_stmt 1 view .LVU2450
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7295              		.loc 1 789 11 view .LVU2451
 7296              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7297              		.loc 1 789 5 is_stmt 0 view .LVU2452
 7298 2e24 4939DC   		cmp	r12, rbx	# ivtmp.361, _701
 7299 2e27 7517     		jne	.L527	#,
 7300              	.LVL367:
 7301              	.L764:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7302              		.loc 1 789 5 view .LVU2453
 7303 2e29 C5F877   		vzeroupper
 7304              	# sieve_extend.c:793:  }
 793:sieve_extend.c **** 
 7305              		.loc 1 793 2 view .LVU2454
 7306 2e2c 488D65D8 		lea	rsp, -40[rbp]	#,
 7307              	.LVL368:
 793:sieve_extend.c **** 
 7308              		.loc 1 793 2 view .LVU2455
 7309 2e30 5B       		pop	rbx	#
 7310 2e31 415C     		pop	r12	#
 7311 2e33 415D     		pop	r13	#
 7312 2e35 415E     		pop	r14	#
 7313 2e37 415F     		pop	r15	#
 7314 2e39 5D       		pop	rbp	#
 7315              		.cfi_remember_state
 7316              		.cfi_def_cfa 7, 8
 7317              	.LVL369:
 793:sieve_extend.c **** 
 7318              		.loc 1 793 2 view .LVU2456
 7319 2e3a C3       		ret	
 7320              	.LVL370:
 7321 2e3b 0F1F4400 		.p2align 4,,7
 7321      00
 7322              		.p2align 3
 7323              	.L527:
 7324              		.cfi_restore_state
 790:sieve_extend.c **** 
 7325              		.loc 1 790 9 is_stmt 1 view .LVU2457
 7326              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7327              		.loc 1 790 39 is_stmt 0 view .LVU2458
 7328 2e40 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7329              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7330              		.loc 1 790 29 view .LVU2459
 7331 2e44 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7332              		.loc 1 789 48 is_stmt 1 view .LVU2460
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7333              		.loc 1 789 11 view .LVU2461
 790:sieve_extend.c **** 
 7334              		.loc 1 790 9 view .LVU2462
 7335              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccqpmidN.s 			page 204


 790:sieve_extend.c **** 
 7336              		.loc 1 790 39 is_stmt 0 view .LVU2463
 7337 2e48 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7337      08
 7338              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7339              		.loc 1 790 29 view .LVU2464
 7340 2e4d 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 7340      08
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7341              		.loc 1 789 48 is_stmt 1 view .LVU2465
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7342              		.loc 1 789 11 view .LVU2466
 790:sieve_extend.c **** 
 7343              		.loc 1 790 9 view .LVU2467
 7344              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7345              		.loc 1 790 39 is_stmt 0 view .LVU2468
 7346 2e52 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7346      10
 7347              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7348              		.loc 1 790 29 view .LVU2469
 7349 2e57 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 7349      10
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7350              		.loc 1 789 48 is_stmt 1 view .LVU2470
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7351              		.loc 1 789 11 view .LVU2471
 790:sieve_extend.c **** 
 7352              		.loc 1 790 9 view .LVU2472
 7353              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7354              		.loc 1 790 39 is_stmt 0 view .LVU2473
 7355 2e5c 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7355      18
 7356              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7357              		.loc 1 790 29 view .LVU2474
 7358 2e61 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 7358      18
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7359              		.loc 1 789 48 is_stmt 1 view .LVU2475
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7360              		.loc 1 789 11 view .LVU2476
 790:sieve_extend.c **** 
 7361              		.loc 1 790 9 view .LVU2477
 7362              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7363              		.loc 1 790 39 is_stmt 0 view .LVU2478
 7364 2e66 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7364      20
 7365              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7366              		.loc 1 790 29 view .LVU2479
 7367 2e6b 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 7367      20
GAS LISTING /tmp/ccqpmidN.s 			page 205


 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7368              		.loc 1 789 48 is_stmt 1 view .LVU2480
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7369              		.loc 1 789 11 view .LVU2481
 790:sieve_extend.c **** 
 7370              		.loc 1 790 9 view .LVU2482
 7371              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7372              		.loc 1 790 39 is_stmt 0 view .LVU2483
 7373 2e70 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7373      28
 7374              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7375              		.loc 1 790 29 view .LVU2484
 7376 2e75 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 7376      28
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7377              		.loc 1 789 48 is_stmt 1 view .LVU2485
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7378              		.loc 1 789 11 view .LVU2486
 790:sieve_extend.c **** 
 7379              		.loc 1 790 9 view .LVU2487
 7380              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7381              		.loc 1 790 39 is_stmt 0 view .LVU2488
 7382 2e7a 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7382      30
 7383              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7384              		.loc 1 790 29 view .LVU2489
 7385 2e7f 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 7385      30
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7386              		.loc 1 789 48 is_stmt 1 view .LVU2490
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7387              		.loc 1 789 11 view .LVU2491
 790:sieve_extend.c **** 
 7388              		.loc 1 790 9 view .LVU2492
 7389              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7390              		.loc 1 790 39 is_stmt 0 view .LVU2493
 7391 2e84 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7391      38
 7392 2e89 4983C440 		add	r12, 64	# ivtmp.361,
 7393              	# sieve_extend.c:790:         bitarray[copy_word] = bitarray[source_word];
 790:sieve_extend.c **** 
 7394              		.loc 1 790 29 view .LVU2494
 7395 2e8d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 7395      F8
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7396              		.loc 1 789 48 is_stmt 1 view .LVU2495
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7397              		.loc 1 789 11 view .LVU2496
 7398              	# sieve_extend.c:789:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7399              		.loc 1 789 5 is_stmt 0 view .LVU2497
 7400 2e92 4939DC   		cmp	r12, rbx	# ivtmp.361, _701
GAS LISTING /tmp/ccqpmidN.s 			page 206


 7401 2e95 75A9     		jne	.L527	#,
 7402 2e97 EB90     		jmp	.L764	#
 7403              	.LVL371:
 7404 2e99 0F1F8000 		.p2align 4,,7
 7404      000000
 7405              		.p2align 3
 7406              	.L504:
 789:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7407              		.loc 1 789 5 view .LVU2498
 7408 2ea0 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 7408      30
 7409 2ea5 4989C1   		mov	r9, rax	# tmp823, ivtmp.375
 7410 2ea8 49F7D1   		not	r9	# tmp823
 7411 2eab 4801D9   		add	rcx, rbx	# ivtmp.406, bitarray
 7412              	.LBB338:
 7413              	.LBB319:
 7414              	.LBB308:
 7415              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7416              		.loc 1 614 63 view .LVU2499
 7417 2eae 4489FE   		mov	esi, r15d	# tmp1324, _18
 7418              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7419              		.loc 1 614 42 view .LVU2500
 7420 2eb1 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 7420      11
 7421 2eb6 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 7422              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7423              		.loc 1 614 63 view .LVU2501
 7424 2eb9 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 7425              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7426              		.loc 1 613 19 view .LVU2502
 7427 2ebc 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 7428              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7429              		.loc 1 614 63 view .LVU2503
 7430 2ec0 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 7430      F8
 7431 2ec5 49D1E9   		shr	r9	# tmp822
 7432              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7433              		.loc 1 614 52 view .LVU2504
 7434 2ec8 4809FA   		or	rdx, rdi	# tmp684, tmp683
 7435              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7436              		.loc 1 617 19 view .LVU2505
 7437 2ecb 488D7802 		lea	rdi, 2[rax]	# copy_word,
 7438 2ecf 49F7D3   		not	r11	# tmp794
 7439              	.LVL372:
 7440              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7441              		.loc 1 614 52 view .LVU2506
 7442 2ed2 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7443 2ed6 4183E103 		and	r9d, 3	# tmp825,
 7444              	.LVL373:
GAS LISTING /tmp/ccqpmidN.s 			page 207


 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7445              		.loc 1 612 9 is_stmt 1 view .LVU2507
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7446              		.loc 1 613 9 view .LVU2508
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7447              		.loc 1 614 9 view .LVU2509
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7448              		.loc 1 615 9 view .LVU2510
 616:sieve_extend.c ****         copy_word += 2;
 7449              		.loc 1 616 9 view .LVU2511
 7450              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7451              		.loc 1 616 42 is_stmt 0 view .LVU2512
 7452 2eda C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 7452      C0
 7453              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7454              		.loc 1 616 63 view .LVU2513
 7455 2edf C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 7455      5110
 7456              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7457              		.loc 1 616 52 view .LVU2514
 7458 2ee5 4909D0   		or	r8, rdx	# tmp688, tmp685
 7459              	.LBE308:
 7460              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7461              		.loc 1 611 11 view .LVU2515
 7462 2ee8 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 7463 2eeb 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 7464 2eef 488D5110 		lea	rdx, 16[rcx]	# ivtmp.406,
 7465              	.LBB309:
 7466              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7467              		.loc 1 616 52 view .LVU2516
 7468 2ef3 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7468      08
 7469              	.LVL374:
 617:sieve_extend.c ****         source_word += 2;
 7470              		.loc 1 617 9 is_stmt 1 view .LVU2517
 618:sieve_extend.c ****         distance += 2;
 7471              		.loc 1 618 9 view .LVU2518
 619:sieve_extend.c ****     }
 7472              		.loc 1 619 9 view .LVU2519
 619:sieve_extend.c ****     }
 7473              		.loc 1 619 9 is_stmt 0 view .LVU2520
 7474              	.LBE309:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7475              		.loc 1 611 11 is_stmt 1 view .LVU2521
 7476 2ef8 0F8644F6 		jbe	.L508	#,
 7476      FFFF
 7477 2efe 4D85C9   		test	r9, r9	# tmp825
 7478 2f01 0F848B00 		je	.L758	#,
 7478      0000
 7479 2f07 4983F901 		cmp	r9, 1	# tmp825,
 7480 2f0b 7440     		je	.L692	#,
 7481 2f0d 4983F902 		cmp	r9, 2	# tmp825,
GAS LISTING /tmp/ccqpmidN.s 			page 208


 7482 2f11 0F857403 		jne	.L767	#,
 7482      0000
 7483              	.LVL375:
 7484              	.L693:
 7485              	.LBB310:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7486              		.loc 1 612 9 view .LVU2522
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7487              		.loc 1 613 9 view .LVU2523
 7488              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7489              		.loc 1 613 19 is_stmt 0 view .LVU2524
 7490 2f17 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7491              		.loc 1 614 9 is_stmt 1 view .LVU2525
 7492              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7493              		.loc 1 614 42 is_stmt 0 view .LVU2526
 7494 2f1b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 7494      0A
 7495              	.LVL376:
 7496              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7497              		.loc 1 614 63 view .LVU2527
 7498 2f20 4589F8   		mov	r8d, r15d	# tmp1427, _18
 7499 2f23 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 7499      D6
 7500              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7501              		.loc 1 614 52 view .LVU2528
 7502 2f28 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 7503              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7504              		.loc 1 614 63 view .LVU2529
 7505 2f2b 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 7506              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7507              		.loc 1 616 42 view .LVU2530
 7508 2f2e C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 7508      F6
 7509              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7510              		.loc 1 614 52 view .LVU2531
 7511 2f33 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7512              	.LVL377:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7513              		.loc 1 615 9 is_stmt 1 view .LVU2532
 616:sieve_extend.c ****         copy_word += 2;
 7514              		.loc 1 616 9 view .LVU2533
 7515              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7516              		.loc 1 616 63 is_stmt 0 view .LVU2534
 7517 2f37 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 7517      4A10
 7518              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7519              		.loc 1 616 52 view .LVU2535
GAS LISTING /tmp/ccqpmidN.s 			page 209


 7520 2f3d 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 7521 2f40 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7521      08
 7522              	.LVL378:
 617:sieve_extend.c ****         source_word += 2;
 7523              		.loc 1 617 9 is_stmt 1 view .LVU2536
 7524 2f45 4883C210 		add	rdx, 16	# ivtmp.406,
 7525              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7526              		.loc 1 617 19 is_stmt 0 view .LVU2537
 7527 2f49 4883C702 		add	rdi, 2	# copy_word,
 618:sieve_extend.c ****         distance += 2;
 7528              		.loc 1 618 9 is_stmt 1 view .LVU2538
 619:sieve_extend.c ****     }
 7529              		.loc 1 619 9 view .LVU2539
 619:sieve_extend.c ****     }
 7530              		.loc 1 619 9 is_stmt 0 view .LVU2540
 7531              	.LBE310:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7532              		.loc 1 611 11 is_stmt 1 view .LVU2541
 7533              	.LVL379:
 7534              	.L692:
 7535              	.LBB311:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7536              		.loc 1 612 9 view .LVU2542
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7537              		.loc 1 613 9 view .LVU2543
 7538              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7539              		.loc 1 613 19 is_stmt 0 view .LVU2544
 7540 2f4d 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7541              		.loc 1 614 9 is_stmt 1 view .LVU2545
 7542              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7543              		.loc 1 614 42 is_stmt 0 view .LVU2546
 7544 2f51 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 7544      0A
 7545              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7546              		.loc 1 614 63 view .LVU2547
 7547 2f56 4589F8   		mov	r8d, r15d	# tmp1429, _18
 7548 2f59 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 7548      D1
 7549              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7550              		.loc 1 614 52 view .LVU2548
 7551 2f5e 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 7552              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7553              		.loc 1 614 63 view .LVU2549
 7554 2f61 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 7555              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7556              		.loc 1 616 42 view .LVU2550
 7557 2f64 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 7557      F1
GAS LISTING /tmp/ccqpmidN.s 			page 210


 7558              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7559              		.loc 1 614 52 view .LVU2551
 7560 2f69 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7561              	.LVL380:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7562              		.loc 1 615 9 is_stmt 1 view .LVU2552
 616:sieve_extend.c ****         copy_word += 2;
 7563              		.loc 1 616 9 view .LVU2553
 7564              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7565              		.loc 1 616 63 is_stmt 0 view .LVU2554
 7566 2f6d C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 7566      4A10
 7567              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7568              		.loc 1 616 52 view .LVU2555
 7569 2f73 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 7570 2f76 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7570      08
 7571              	.LVL381:
 617:sieve_extend.c ****         source_word += 2;
 7572              		.loc 1 617 9 is_stmt 1 view .LVU2556
 7573              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7574              		.loc 1 617 19 is_stmt 0 view .LVU2557
 7575 2f7b 4883C702 		add	rdi, 2	# copy_word,
 618:sieve_extend.c ****         distance += 2;
 7576              		.loc 1 618 9 is_stmt 1 view .LVU2558
 619:sieve_extend.c ****     }
 7577              		.loc 1 619 9 view .LVU2559
 7578 2f7f 4883C210 		add	rdx, 16	# ivtmp.406,
 7579              	.LBE311:
 7580              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7581              		.loc 1 611 11 is_stmt 0 view .LVU2560
 7582 2f83 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 7582      30
 7583 2f88 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7584              		.loc 1 611 11 is_stmt 1 view .LVU2561
 7585 2f8c 0F86B0F5 		jbe	.L508	#,
 7585      FFFF
 7586              	.LVL382:
 7587              	.L758:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7588              		.loc 1 611 11 is_stmt 0 view .LVU2562
 7589 2f92 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 7590              	.L507:
 7591              	.LVL383:
 7592              	.LBB312:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7593              		.loc 1 612 9 is_stmt 1 view .LVU2563
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7594              		.loc 1 613 9 view .LVU2564
 7595              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccqpmidN.s 			page 211


 7596              		.loc 1 613 19 is_stmt 0 view .LVU2565
 7597 2f95 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7598              		.loc 1 614 9 is_stmt 1 view .LVU2566
 7599              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7600              		.loc 1 614 42 is_stmt 0 view .LVU2567
 7601 2f99 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 7601      02
 7602              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7603              		.loc 1 614 63 view .LVU2568
 7604 2f9e C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 7604      F1
 7605              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7606              		.loc 1 614 52 view .LVU2569
 7607 2fa3 4D09F0   		or	r8, r14	# tmp899, tmp898
 7608              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7609              		.loc 1 616 42 view .LVU2570
 7610 2fa6 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 7610      D1
 7611              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7612              		.loc 1 614 52 view .LVU2571
 7613 2fab 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7614              	.LVL384:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7615              		.loc 1 615 9 is_stmt 1 view .LVU2572
 616:sieve_extend.c ****         copy_word += 2;
 7616              		.loc 1 616 9 view .LVU2573
 7617              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7618              		.loc 1 616 63 is_stmt 0 view .LVU2574
 7619 2faf C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 7619      7210
 7620              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7621              		.loc 1 616 52 view .LVU2575
 7622 2fb5 4C09D6   		or	rsi, r10	# tmp903, tmp902
 7623 2fb8 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7623      08
 7624              	.LVL385:
 617:sieve_extend.c ****         source_word += 2;
 7625              		.loc 1 617 9 is_stmt 1 view .LVU2576
 7626              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7627              		.loc 1 617 19 is_stmt 0 view .LVU2577
 7628 2fbd 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 618:sieve_extend.c ****         distance += 2;
 7629              		.loc 1 618 9 is_stmt 1 view .LVU2578
 619:sieve_extend.c ****     }
 7630              		.loc 1 619 9 view .LVU2579
 619:sieve_extend.c ****     }
 7631              		.loc 1 619 9 is_stmt 0 view .LVU2580
 7632              	.LBE312:
GAS LISTING /tmp/ccqpmidN.s 			page 212


 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7633              		.loc 1 611 11 is_stmt 1 view .LVU2581
 7634              	.LBB313:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7635              		.loc 1 612 9 view .LVU2582
 7636              	.LVL386:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7637              		.loc 1 613 9 view .LVU2583
 7638              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7639              		.loc 1 613 19 is_stmt 0 view .LVU2584
 7640 2fc1 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7641              		.loc 1 614 9 is_stmt 1 view .LVU2585
 7642              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7643              		.loc 1 614 42 is_stmt 0 view .LVU2586
 7644 2fc5 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 7644      7210
 7645              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7646              		.loc 1 614 63 view .LVU2587
 7647 2fcb C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 7647      F0
 7648              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7649              		.loc 1 614 52 view .LVU2588
 7650 2fd0 4C09F6   		or	rsi, r14	# tmp911, tmp910
 7651 2fd3 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7652              	.LVL387:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7653              		.loc 1 615 9 is_stmt 1 view .LVU2589
 616:sieve_extend.c ****         copy_word += 2;
 7654              		.loc 1 616 9 view .LVU2590
 7655              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7656              		.loc 1 616 42 is_stmt 0 view .LVU2591
 7657 2fd7 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 7657      C0
 7658              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7659              		.loc 1 616 63 view .LVU2592
 7660 2fdc 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7661 2fe0 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 7661      F2
 7662              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7663              		.loc 1 616 52 view .LVU2593
 7664 2fe5 4909F0   		or	r8, rsi	# tmp915, tmp913
 7665 2fe8 4883C240 		add	rdx, 64	# ivtmp.406,
 7666 2fec 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 7666      08
 7667              	.LVL388:
 617:sieve_extend.c ****         source_word += 2;
 7668              		.loc 1 617 9 is_stmt 1 view .LVU2594
 7669              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccqpmidN.s 			page 213


 7670              		.loc 1 617 19 is_stmt 0 view .LVU2595
 7671 2ff1 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 618:sieve_extend.c ****         distance += 2;
 7672              		.loc 1 618 9 is_stmt 1 view .LVU2596
 619:sieve_extend.c ****     }
 7673              		.loc 1 619 9 view .LVU2597
 619:sieve_extend.c ****     }
 7674              		.loc 1 619 9 is_stmt 0 view .LVU2598
 7675              	.LBE313:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7676              		.loc 1 611 11 is_stmt 1 view .LVU2599
 7677              	.LBB314:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7678              		.loc 1 612 9 view .LVU2600
 7679              	.LVL389:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7680              		.loc 1 613 9 view .LVU2601
 7681              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7682              		.loc 1 613 19 is_stmt 0 view .LVU2602
 7683 2ff5 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7684              		.loc 1 614 9 is_stmt 1 view .LVU2603
 7685              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7686              		.loc 1 614 42 is_stmt 0 view .LVU2604
 7687 2ff9 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 7687      72E0
 7688              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7689              		.loc 1 614 63 view .LVU2605
 7690 2fff C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 7690      F2
 7691              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7692              		.loc 1 614 52 view .LVU2606
 7693 3004 4C09F6   		or	rsi, r14	# tmp923, tmp922
 7694 3007 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7695              	.LVL390:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7696              		.loc 1 615 9 is_stmt 1 view .LVU2607
 616:sieve_extend.c ****         copy_word += 2;
 7697              		.loc 1 616 9 view .LVU2608
 7698              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7699              		.loc 1 616 42 is_stmt 0 view .LVU2609
 7700 300b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 7700      D2
 7701              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7702              		.loc 1 616 63 view .LVU2610
 7703 3010 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7704 3014 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 7704      F0
 7705              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7706              		.loc 1 616 52 view .LVU2611
GAS LISTING /tmp/ccqpmidN.s 			page 214


 7707 3019 4909F2   		or	r10, rsi	# tmp927, tmp925
 7708 301c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7708      08
 7709              	.LVL391:
 617:sieve_extend.c ****         source_word += 2;
 7710              		.loc 1 617 9 is_stmt 1 view .LVU2612
 7711              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7712              		.loc 1 617 19 is_stmt 0 view .LVU2613
 7713 3021 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 618:sieve_extend.c ****         distance += 2;
 7714              		.loc 1 618 9 is_stmt 1 view .LVU2614
 619:sieve_extend.c ****     }
 7715              		.loc 1 619 9 view .LVU2615
 619:sieve_extend.c ****     }
 7716              		.loc 1 619 9 is_stmt 0 view .LVU2616
 7717              	.LBE314:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7718              		.loc 1 611 11 is_stmt 1 view .LVU2617
 7719              	.LBB315:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7720              		.loc 1 612 9 view .LVU2618
 7721              	.LVL392:
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7722              		.loc 1 613 9 view .LVU2619
 7723              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7724              		.loc 1 613 19 is_stmt 0 view .LVU2620
 7725 3025 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7726              		.loc 1 614 9 is_stmt 1 view .LVU2621
 7727              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7728              		.loc 1 614 42 is_stmt 0 view .LVU2622
 7729 3029 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 7729      72F0
 7730              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7731              		.loc 1 614 63 view .LVU2623
 7732 302f C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 7732      F0
 7733              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7734              		.loc 1 614 52 view .LVU2624
 7735 3034 4C09F6   		or	rsi, r14	# tmp935, tmp934
 7736 3037 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7737              	.LVL393:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7738              		.loc 1 615 9 is_stmt 1 view .LVU2625
 616:sieve_extend.c ****         copy_word += 2;
 7739              		.loc 1 616 9 view .LVU2626
 7740              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 7741              		.loc 1 617 19 is_stmt 0 view .LVU2627
 7742 303b 4883C708 		add	rdi, 8	# copy_word,
 7743              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccqpmidN.s 			page 215


 7744              		.loc 1 616 42 view .LVU2628
 7745 303f C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 7745      C0
 7746              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7747              		.loc 1 616 63 view .LVU2629
 7748 3044 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7749 3047 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 7749      F2
 7750              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7751              		.loc 1 616 52 view .LVU2630
 7752 304c 4909F0   		or	r8, rsi	# tmp939, tmp937
 7753              	.LBE315:
 7754              	# sieve_extend.c:611:     while (copy_word < fast_loop_stop_word) {
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7755              		.loc 1 611 11 view .LVU2631
 7756 304f 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 7756      30
 7757 3054 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 7758              	.LBB316:
 7759              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 7760              		.loc 1 616 52 view .LVU2632
 7761 3058 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 7761      08
 7762              	.LVL394:
 617:sieve_extend.c ****         source_word += 2;
 7763              		.loc 1 617 9 is_stmt 1 view .LVU2633
 618:sieve_extend.c ****         distance += 2;
 7764              		.loc 1 618 9 view .LVU2634
 619:sieve_extend.c ****     }
 7765              		.loc 1 619 9 view .LVU2635
 619:sieve_extend.c ****     }
 7766              		.loc 1 619 9 is_stmt 0 view .LVU2636
 7767              	.LBE316:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7768              		.loc 1 611 11 is_stmt 1 view .LVU2637
 7769 305d 0F8732FF 		ja	.L507	#,
 7769      FFFF
 7770 3063 E9DAF4FF 		jmp	.L508	#
 7770      FF
 7771              	.LVL395:
 7772              		.p2align 4,,7
 7773              		.p2align 3
 7774              	.L529:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7775              		.loc 1 611 11 is_stmt 0 view .LVU2638
 7776              	.LBE319:
 7777              	.LBE338:
 7778              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7779              		.loc 1 775 5 view .LVU2639
 7780 3068 4889C6   		mov	rsi, rax	# copy_word, ivtmp.375
 7781              	# sieve_extend.c:769:     source_word += distance;
 769:sieve_extend.c ****     copy_word += distance;
 7782              		.loc 1 769 17 view .LVU2640
GAS LISTING /tmp/ccqpmidN.s 			page 216


 7783 306b 4C89D9   		mov	rcx, r11	# source_word, _183
 7784 306e 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 7785 3072 E9CDF5FF 		jmp	.L511	#
 7785      FF
 7786              		.p2align 4,,7
 7787 3077 90       		.p2align 3
 7788              	.L510:
 769:sieve_extend.c ****     copy_word += distance;
 7789              		.loc 1 769 17 view .LVU2641
 7790 3078 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 7790      58
 7791 307d 4801DA   		add	rdx, rbx	# ivtmp.383, bitarray
 7792 3080 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 7792      40
 7793              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7794              		.loc 1 776 29 view .LVU2642
 7795 3085 4829F8   		sub	rax, rdi	# tmp753, _183
 7796 3088 4901FA   		add	r10, rdi	# tmp749, _183
 7797 308b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 7797      08
 7798 3090 4929F1   		sub	r9, rsi	# tmp752, _220
 7799 3093 4C89CE   		mov	rsi, r9	# _729, tmp752
 7800 3096 4929D1   		sub	r9, rdx	# tmp811, ivtmp.383
 7801 3099 4983E908 		sub	r9, 8	# tmp812,
 7802 309d 49C1E903 		shr	r9, 3	# tmp810,
 7803 30a1 4983C101 		add	r9, 1	# tmp813,
 7804 30a5 4183E107 		and	r9d, 7	# tmp814,
 7805 30a9 0F84F900 		je	.L755	#,
 7805      0000
 7806 30af 4983F901 		cmp	r9, 1	# tmp814,
 7807 30b3 0F84CA00 		je	.L667	#,
 7807      0000
 7808 30b9 4983F902 		cmp	r9, 2	# tmp814,
 7809 30bd 0F84A500 		je	.L668	#,
 7809      0000
 7810 30c3 4983F903 		cmp	r9, 3	# tmp814,
 7811 30c7 0F848000 		je	.L669	#,
 7811      0000
 7812 30cd 4983F904 		cmp	r9, 4	# tmp814,
 7813 30d1 745E     		je	.L670	#,
 7814 30d3 4983F905 		cmp	r9, 5	# tmp814,
 7815 30d7 743D     		je	.L671	#,
 7816 30d9 4983F906 		cmp	r9, 6	# tmp814,
 7817 30dd 741C     		je	.L672	#,
 776:sieve_extend.c ****     }
 7818              		.loc 1 776 9 is_stmt 1 view .LVU2643
 7819              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7820              		.loc 1 776 56 is_stmt 0 view .LVU2644
 7821 30df C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 7821      02
 7822              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7823              		.loc 1 776 94 view .LVU2645
 7824 30e4 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 7824      2448
GAS LISTING /tmp/ccqpmidN.s 			page 217


 7825 30ea C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 7825      7208
 7826              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7827              		.loc 1 776 66 view .LVU2646
 7828 30f0 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 7829 30f3 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7830              		.loc 1 775 43 is_stmt 1 view .LVU2647
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7831              		.loc 1 775 11 view .LVU2648
 7832 30f7 4883C208 		add	rdx, 8	# ivtmp.383,
 7833              	.L672:
 776:sieve_extend.c ****     }
 7834              		.loc 1 776 9 view .LVU2649
 7835              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7836              		.loc 1 776 56 is_stmt 0 view .LVU2650
 7837 30fb C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 7837      3A
 7838              	.LVL396:
 7839              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7840              		.loc 1 776 94 view .LVU2651
 7841 3100 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 7841      48
 7842 3105 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 7842      6A08
 7843              	.LVL397:
 7844              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7845              		.loc 1 776 66 view .LVU2652
 7846 310b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 7847 310e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7848              		.loc 1 775 43 is_stmt 1 view .LVU2653
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7849              		.loc 1 775 11 view .LVU2654
 7850 3112 4883C208 		add	rdx, 8	# ivtmp.383,
 7851              	.L671:
 776:sieve_extend.c ****     }
 7852              		.loc 1 776 9 view .LVU2655
 7853              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7854              		.loc 1 776 56 is_stmt 0 view .LVU2656
 7855 3116 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 7855      12
 7856              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7857              		.loc 1 776 94 view .LVU2657
 7858 311b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 7858      48
 7859 3120 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 7859      4A08
 7860              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7861              		.loc 1 776 66 view .LVU2658
GAS LISTING /tmp/ccqpmidN.s 			page 218


 7862 3126 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 7863 3129 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7864              		.loc 1 775 43 is_stmt 1 view .LVU2659
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7865              		.loc 1 775 11 view .LVU2660
 7866 312d 4883C208 		add	rdx, 8	# ivtmp.383,
 7867              	.L670:
 776:sieve_extend.c ****     }
 7868              		.loc 1 776 9 view .LVU2661
 7869              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7870              		.loc 1 776 56 is_stmt 0 view .LVU2662
 7871 3131 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 7871      02
 7872              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7873              		.loc 1 776 94 view .LVU2663
 7874 3136 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 7874      2448
 7875 313c C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 7875      7208
 7876              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7877              		.loc 1 776 66 view .LVU2664
 7878 3142 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 7879 3145 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7880              		.loc 1 775 43 is_stmt 1 view .LVU2665
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7881              		.loc 1 775 11 view .LVU2666
 7882 3149 4883C208 		add	rdx, 8	# ivtmp.383,
 7883              	.L669:
 776:sieve_extend.c ****     }
 7884              		.loc 1 776 9 view .LVU2667
 7885              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7886              		.loc 1 776 56 is_stmt 0 view .LVU2668
 7887 314d C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 7887      3A
 7888              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7889              		.loc 1 776 94 view .LVU2669
 7890 3152 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 7890      48
 7891 3157 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 7891      6A08
 7892              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7893              		.loc 1 776 66 view .LVU2670
 7894 315d 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 7895 3160 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7896              		.loc 1 775 43 is_stmt 1 view .LVU2671
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7897              		.loc 1 775 11 view .LVU2672
 7898 3164 4883C208 		add	rdx, 8	# ivtmp.383,
GAS LISTING /tmp/ccqpmidN.s 			page 219


 7899              	.L668:
 776:sieve_extend.c ****     }
 7900              		.loc 1 776 9 view .LVU2673
 7901              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7902              		.loc 1 776 56 is_stmt 0 view .LVU2674
 7903 3168 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 7903      12
 7904              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7905              		.loc 1 776 94 view .LVU2675
 7906 316d 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 7906      48
 7907 3172 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 7907      4A08
 7908              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7909              		.loc 1 776 66 view .LVU2676
 7910 3178 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 7911 317b 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7912              		.loc 1 775 43 is_stmt 1 view .LVU2677
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7913              		.loc 1 775 11 view .LVU2678
 7914 317f 4883C208 		add	rdx, 8	# ivtmp.383,
 7915              	.L667:
 776:sieve_extend.c ****     }
 7916              		.loc 1 776 9 view .LVU2679
 7917              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7918              		.loc 1 776 56 is_stmt 0 view .LVU2680
 7919 3183 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 7919      02
 7920              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7921              		.loc 1 776 94 view .LVU2681
 7922 3188 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 7922      2448
 7923 318e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 7923      7208
 7924              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7925              		.loc 1 776 66 view .LVU2682
 7926 3194 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 7927 3197 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7928              		.loc 1 775 43 is_stmt 1 view .LVU2683
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7929              		.loc 1 775 11 view .LVU2684
 7930 319b 4883C208 		add	rdx, 8	# ivtmp.383,
 7931              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7932              		.loc 1 775 5 is_stmt 0 view .LVU2685
 7933 319f 4839F2   		cmp	rdx, rsi	# ivtmp.383, _729
 7934 31a2 0F84C600 		je	.L741	#,
 7934      0000
 7935              	.L755:
GAS LISTING /tmp/ccqpmidN.s 			page 220


 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7936              		.loc 1 775 5 view .LVU2686
 7937 31a8 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 7937      48
 7938              	.L515:
 776:sieve_extend.c ****     }
 7939              		.loc 1 776 9 is_stmt 1 view .LVU2687
 7940              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7941              		.loc 1 776 94 is_stmt 0 view .LVU2688
 7942 31ad C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 7942      6A08
 7943              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7944              		.loc 1 776 56 view .LVU2689
 7945 31b3 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 7945      0A
 7946              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7947              		.loc 1 776 66 view .LVU2690
 7948 31b8 4C09E9   		or	rcx, r13	# tmp758, tmp756
 7949 31bb 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 7950 31bf 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7951              		.loc 1 775 43 is_stmt 1 view .LVU2691
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7952              		.loc 1 775 11 view .LVU2692
 776:sieve_extend.c ****     }
 7953              		.loc 1 776 9 view .LVU2693
 7954              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7955              		.loc 1 776 94 is_stmt 0 view .LVU2694
 7956 31c3 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 7956      4A08
 7957              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7958              		.loc 1 776 56 view .LVU2695
 7959 31c9 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 7959      7A08
 7960              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7961              		.loc 1 776 66 view .LVU2696
 7962 31cf 4C09CF   		or	rdi, r9	# tmp989, tmp988
 7963 31d2 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.383,
 7964 31d6 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.383,
 7965 31da 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7966              		.loc 1 775 43 is_stmt 1 view .LVU2697
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7967              		.loc 1 775 11 view .LVU2698
 776:sieve_extend.c ****     }
 7968              		.loc 1 776 9 view .LVU2699
 7969              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7970              		.loc 1 776 56 is_stmt 0 view .LVU2700
 7971 31de C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 7971      7210
GAS LISTING /tmp/ccqpmidN.s 			page 221


 7972              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7973              		.loc 1 776 94 view .LVU2701
 7974 31e4 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 7974      4308
 7975              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7976              		.loc 1 776 66 view .LVU2702
 7977 31ea 4D09C6   		or	r14, r8	# tmp995, tmp994
 7978 31ed 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7979              		.loc 1 775 43 is_stmt 1 view .LVU2703
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7980              		.loc 1 775 11 view .LVU2704
 776:sieve_extend.c ****     }
 7981              		.loc 1 776 9 view .LVU2705
 7982              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7983              		.loc 1 776 56 is_stmt 0 view .LVU2706
 7984 31f1 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 7984      6A18
 7985              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7986              		.loc 1 776 94 view .LVU2707
 7987 31f7 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 7987      5108
 7988              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7989              		.loc 1 776 66 view .LVU2708
 7990 31fd 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 7991 3200 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.383,
 7992 3204 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.383,
 7993 3208 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7994              		.loc 1 775 43 is_stmt 1 view .LVU2709
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7995              		.loc 1 775 11 view .LVU2710
 776:sieve_extend.c ****     }
 7996              		.loc 1 776 9 view .LVU2711
 7997              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 7998              		.loc 1 776 94 is_stmt 0 view .LVU2712
 7999 320c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 7999      5908
 8000              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8001              		.loc 1 776 56 view .LVU2713
 8002 3212 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 8002      7A20
 8003              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8004              		.loc 1 776 66 view .LVU2714
 8005 3218 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 8006 321b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8007              		.loc 1 775 43 is_stmt 1 view .LVU2715
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccqpmidN.s 			page 222


 8008              		.loc 1 775 11 view .LVU2716
 776:sieve_extend.c ****     }
 8009              		.loc 1 776 9 view .LVU2717
 8010              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8011              		.loc 1 776 56 is_stmt 0 view .LVU2718
 8012 321f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 8012      4A28
 8013              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8014              		.loc 1 776 94 view .LVU2719
 8015 3225 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 8015      4608
 8016              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8017              		.loc 1 776 66 view .LVU2720
 8018 322b 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 8019 322e 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.383,
 8020 3232 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.383,
 8021 3236 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8022              		.loc 1 775 43 is_stmt 1 view .LVU2721
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8023              		.loc 1 775 11 view .LVU2722
 776:sieve_extend.c ****     }
 8024              		.loc 1 776 9 view .LVU2723
 8025              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8026              		.loc 1 776 56 is_stmt 0 view .LVU2724
 8027 323a C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 8027      5230
 8028              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8029              		.loc 1 776 94 view .LVU2725
 8030 3240 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 8030      4D08
 8031              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8032              		.loc 1 776 66 view .LVU2726
 8033 3246 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 8034 3249 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 8034      00
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8035              		.loc 1 775 43 is_stmt 1 view .LVU2727
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8036              		.loc 1 775 11 view .LVU2728
 776:sieve_extend.c ****     }
 8037              		.loc 1 776 9 view .LVU2729
 8038 324e 4883C240 		add	rdx, 64	# ivtmp.383,
 8039              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8040              		.loc 1 776 56 is_stmt 0 view .LVU2730
 8041 3252 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 8041      7AF8
 8042              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8043              		.loc 1 776 94 view .LVU2731
GAS LISTING /tmp/ccqpmidN.s 			page 223


 8044 3258 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 8044      7308
 8045              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8046              		.loc 1 776 66 view .LVU2732
 8047 325e 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 8048              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8049              		.loc 1 775 5 view .LVU2733
 8050 3261 4839F2   		cmp	rdx, rsi	# ivtmp.383, _729
 8051              	# sieve_extend.c:776:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 776:sieve_extend.c ****     }
 8052              		.loc 1 776 66 view .LVU2734
 8053 3264 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8054              		.loc 1 775 43 is_stmt 1 view .LVU2735
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8055              		.loc 1 775 11 view .LVU2736
 8056              	# sieve_extend.c:775:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8057              		.loc 1 775 5 is_stmt 0 view .LVU2737
 8058 3268 0F853FFF 		jne	.L515	#,
 8058      FFFF
 8059              	.L741:
 775:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8060              		.loc 1 775 5 view .LVU2738
 8061 326e 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 8061      40
 8062 3273 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.375,
 8063 3277 E9E9F6FF 		jmp	.L516	#
 8063      FF
 8064              	.LVL398:
 8065 327c 0F1F4000 		.p2align 4,,7
 8066              		.p2align 3
 8067              	.L530:
 8068              	# sieve_extend.c:769:     source_word += distance;
 769:sieve_extend.c ****     copy_word += distance;
 8069              		.loc 1 769 17 view .LVU2739
 8070 3280 4889C6   		mov	rsi, rax	# copy_word, ivtmp.375
 8071              	# sieve_extend.c:781:     source_word = copy_word - size; // recalibrate
 781:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8072              		.loc 1 781 17 view .LVU2740
 8073 3283 4D89EE   		mov	r14, r13	# source_word, source_word
 8074 3286 E906F9FF 		jmp	.L522	#
 8074      FF
 8075              	.LVL399:
 8076              	.L767:
 8077              	.LBB339:
 8078              	.LBB320:
 8079              	.LBB317:
 612:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8080              		.loc 1 612 9 is_stmt 1 view .LVU2741
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8081              		.loc 1 613 9 view .LVU2742
 8082              	# sieve_extend.c:613:         bitword_t source1 = bitarray[source_word+1];
 613:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8083              		.loc 1 613 19 is_stmt 0 view .LVU2743
GAS LISTING /tmp/ccqpmidN.s 			page 224


 8084 328b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8085              		.loc 1 614 9 is_stmt 1 view .LVU2744
 8086              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8087              		.loc 1 614 42 is_stmt 0 view .LVU2745
 8088 328f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 8088      32
 8089              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8090              		.loc 1 614 63 view .LVU2746
 8091 3294 4589FA   		mov	r10d, r15d	# tmp1425, _18
 8092 3297 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 8092      C1
 8093              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8094              		.loc 1 614 52 view .LVU2747
 8095 329c 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 8096              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8097              		.loc 1 614 63 view .LVU2748
 8098 329f 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8099              	# sieve_extend.c:614:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 614:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8100              		.loc 1 614 52 view .LVU2749
 8101 32a2 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8102              	.LVL400:
 615:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8103              		.loc 1 615 9 is_stmt 1 view .LVU2750
 616:sieve_extend.c ****         copy_word += 2;
 8104              		.loc 1 616 9 view .LVU2751
 8105              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 8106              		.loc 1 616 42 is_stmt 0 view .LVU2752
 8107 32a6 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 8107      C9
 8108              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 8109              		.loc 1 616 63 view .LVU2753
 8110 32ab 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8111 32af C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 8111      D2
 8112              	# sieve_extend.c:616:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 616:sieve_extend.c ****         copy_word += 2;
 8113              		.loc 1 616 52 view .LVU2754
 8114 32b4 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 8115 32b7 488D5120 		lea	rdx, 32[rcx]	# ivtmp.406,
 8116 32bb 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8116      08
 8117              	.LVL401:
 617:sieve_extend.c ****         source_word += 2;
 8118              		.loc 1 617 9 is_stmt 1 view .LVU2755
 8119              	# sieve_extend.c:617:         copy_word += 2;
 617:sieve_extend.c ****         source_word += 2;
 8120              		.loc 1 617 19 is_stmt 0 view .LVU2756
 8121 32c0 488D7804 		lea	rdi, 4[rax]	# copy_word,
 618:sieve_extend.c ****         distance += 2;
GAS LISTING /tmp/ccqpmidN.s 			page 225


 8122              		.loc 1 618 9 is_stmt 1 view .LVU2757
 619:sieve_extend.c ****     }
 8123              		.loc 1 619 9 view .LVU2758
 619:sieve_extend.c ****     }
 8124              		.loc 1 619 9 is_stmt 0 view .LVU2759
 8125              	.LBE317:
 611:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8126              		.loc 1 611 11 is_stmt 1 view .LVU2760
 8127 32c4 E94EFCFF 		jmp	.L693	#
 8127      FF
 8128              	.LBE320:
 8129              	.LBE339:
 8130              		.cfi_endproc
 8131              	.LFE71:
 8133              		.section	.rodata.str1.1,"aMS",@progbits,1
 8134              	.LC4:
 8135 0000 25336A75 		.string	"%3ju "
 8135      2000
 8136              	.LC5:
 8137 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8137      6E642025 
 8137      6A752070 
 8137      72696D65 
 8137      7320756E 
 8138              		.text
 8139 32c9 0F1F8000 		.p2align 4
 8139      000000
 8141              	show_primes.isra.0:
 8142              	.LVL402:
 8143              	.LFB85:
 952:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8144              		.loc 1 952 13 view -0
 8145              		.cfi_startproc
 8146              	.LBB340:
 954:sieve_extend.c ****         primeCount++;
 8147              		.loc 1 954 30 view .LVU2762
 8148              	.LBE340:
 8149              	# sieve_extend.c:952: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 952:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8150              		.loc 1 952 13 is_stmt 0 view .LVU2763
 8151 32d0 4157     		push	r15	#
 8152              		.cfi_def_cfa_offset 16
 8153              		.cfi_offset 15, -16
 8154 32d2 4156     		push	r14	#
 8155              		.cfi_def_cfa_offset 24
 8156              		.cfi_offset 14, -24
 8157 32d4 4155     		push	r13	#
 8158              		.cfi_def_cfa_offset 32
 8159              		.cfi_offset 13, -32
 8160 32d6 4154     		push	r12	#
 8161              		.cfi_def_cfa_offset 40
 8162              		.cfi_offset 12, -40
 8163 32d8 4989F4   		mov	r12, rsi	# ISRA.69, tmp168
 8164 32db 55       		push	rbp	#
 8165              		.cfi_def_cfa_offset 48
 8166              		.cfi_offset 6, -48
 8167 32dc 53       		push	rbx	#
GAS LISTING /tmp/ccqpmidN.s 			page 226


 8168              		.cfi_def_cfa_offset 56
 8169              		.cfi_offset 3, -56
 8170 32dd 488D6424 		lea	rsp, -8[rsp]	#,
 8170      F8
 8171              		.cfi_def_cfa_offset 64
 8172              	.LBB357:
 8173              	# sieve_extend.c:954:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 954:sieve_extend.c ****         primeCount++;
 8174              		.loc 1 954 44 view .LVU2764
 8175 32e2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.69_32(D)
 8176              	# sieve_extend.c:954:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 954:sieve_extend.c ****         primeCount++;
 8177              		.loc 1 954 5 view .LVU2765
 8178 32e5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8179 32e9 0F867501 		jbe	.L775	#,
 8179      0000
 8180              	# sieve_extend.c:956:         if (factor < maxFactor/2) {
 956:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8181              		.loc 1 956 31 view .LVU2766
 8182 32ef 48D1EA   		shr	rdx	# maxFactor
 8183              	.LVL403:
 956:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8184              		.loc 1 956 31 view .LVU2767
 8185 32f2 4989FD   		mov	r13, rdi	# ISRA.68, tmp167
 8186              	# sieve_extend.c:954:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 954:sieve_extend.c ****         primeCount++;
 8187              		.loc 1 954 20 view .LVU2768
 8188 32f5 BB010000 		mov	ebx, 1	# factor,
 8188      00
 8189              	# sieve_extend.c:956:         if (factor < maxFactor/2) {
 956:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8190              		.loc 1 956 31 view .LVU2769
 8191 32fa 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8192              	.LBE357:
 8193              	# sieve_extend.c:953:     counter_t primeCount = 1;    // We already have 2
 953:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8194              		.loc 1 953 15 view .LVU2770
 8195 32fd 41BF0100 		mov	r15d, 1	# primeCount,
 8195      0000
 8196              	.LBB358:
 8197              	.LBB341:
 8198              	.LBB342:
 8199              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8200              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
GAS LISTING /tmp/ccqpmidN.s 			page 227


  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
GAS LISTING /tmp/ccqpmidN.s 			page 228


  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8201              		.loc 3 107 10 view .LVU2771
 8202 3303 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8202      CCCCCCCC 
 8202      CCCC
 8203              	.LVL404:
 8204 330d 0F1F00   		.p2align 4
 8205              		.p2align 3
 8206              	.L774:
 8207              		.loc 3 107 10 view .LVU2772
 8208              	.LBE342:
 8209              	.LBE341:
 955:sieve_extend.c ****         if (factor < maxFactor/2) {
 8210              		.loc 1 955 9 is_stmt 1 view .LVU2773
 8211              	# sieve_extend.c:955:         primeCount++;
 955:sieve_extend.c ****         if (factor < maxFactor/2) {
 8212              		.loc 1 955 19 is_stmt 0 view .LVU2774
 8213 3310 4983C701 		add	r15, 1	# primeCount,
 8214              	.LVL405:
 956:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8215              		.loc 1 956 9 is_stmt 1 view .LVU2775
GAS LISTING /tmp/ccqpmidN.s 			page 229


 8216              	# sieve_extend.c:956:         if (factor < maxFactor/2) {
 956:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8217              		.loc 1 956 12 is_stmt 0 view .LVU2776
 8218 3314 4839DD   		cmp	rbp, rbx	# _4, factor
 8219 3317 0F87FB00 		ja	.L798	#,
 8219      0000
 8220              	.L770:
 954:sieve_extend.c ****         primeCount++;
 8221              		.loc 1 954 52 is_stmt 1 view .LVU2777
 8222              	.LVL406:
 8223              	# sieve_extend.c:954:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 954:sieve_extend.c ****         primeCount++;
 8224              		.loc 1 954 61 is_stmt 0 view .LVU2778
 8225 331d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.68_33(D)
 8226 3321 4883C301 		add	rbx, 1	# factor,
 8227              	.LVL407:
 8228              	.L797:
 8229              	.LBB347:
 8230              	.LBI347:
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8231              		.loc 1 111 25 is_stmt 1 view .LVU2779
 8232              	.LBB348:
 112:sieve_extend.c ****     return index;
 8233              		.loc 1 112 5 view .LVU2780
 112:sieve_extend.c ****     return index;
 8234              		.loc 1 112 11 view .LVU2781
 8235              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8236              		.loc 1 112 21 is_stmt 0 view .LVU2782
 8237 3325 4889D9   		mov	rcx, rbx	# tmp124, factor
 8238 3328 48C1E906 		shr	rcx, 6	# tmp124,
 8239              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8240              		.loc 1 112 12 view .LVU2783
 8241 332c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8242              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8243              		.loc 1 112 11 view .LVU2784
 8244 3330 490FA3D9 		bt	r9, rbx	# *_39, factor
 8245 3334 0F83A600 		jnc	.L772	#,
 8245      0000
 112:sieve_extend.c ****     return index;
 8246              		.loc 1 112 58 is_stmt 1 view .LVU2785
 8247              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8248              		.loc 1 112 63 is_stmt 0 view .LVU2786
 8249 333a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8250              	.LVL408:
 8251              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8252              		.loc 1 112 21 view .LVU2787
 8253 333e 4D89D3   		mov	r11, r10	# tmp129, factor
 8254              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8255              		.loc 1 112 63 view .LVU2788
 8256 3341 4C89D3   		mov	rbx, r10	# factor, tmp138
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 230


 8257              		.loc 1 112 11 is_stmt 1 view .LVU2789
 8258              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8259              		.loc 1 112 21 is_stmt 0 view .LVU2790
 8260 3344 49C1EB06 		shr	r11, 6	# tmp129,
 8261              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8262              		.loc 1 112 12 view .LVU2791
 8263 3348 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8264              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8265              		.loc 1 112 11 view .LVU2792
 8266 334c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8267 3350 0F838A00 		jnc	.L772	#,
 8267      0000
 112:sieve_extend.c ****     return index;
 8268              		.loc 1 112 58 is_stmt 1 view .LVU2793
 8269              	.LVL409:
 8270              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8271              		.loc 1 112 63 is_stmt 0 view .LVU2794
 8272 3356 4883C301 		add	rbx, 1	# factor,
 8273              	.LVL410:
 112:sieve_extend.c ****     return index;
 8274              		.loc 1 112 11 is_stmt 1 view .LVU2795
 8275              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8276              		.loc 1 112 21 is_stmt 0 view .LVU2796
 8277 335a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8278 335d 48C1EA06 		shr	rdx, 6	# tmp139,
 8279              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8280              		.loc 1 112 12 view .LVU2797
 8281 3361 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8282              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8283              		.loc 1 112 11 view .LVU2798
 8284 3365 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8285 3369 7375     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8286              		.loc 1 112 58 is_stmt 1 view .LVU2799
 8287              	.LVL411:
 8288              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8289              		.loc 1 112 63 is_stmt 0 view .LVU2800
 8290 336b 498D5A02 		lea	rbx, 2[r10]	# factor,
 8291              	.LVL412:
 112:sieve_extend.c ****     return index;
 8292              		.loc 1 112 11 is_stmt 1 view .LVU2801
 8293              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8294              		.loc 1 112 21 is_stmt 0 view .LVU2802
 8295 336f 4889D9   		mov	rcx, rbx	# tmp143, factor
 8296 3372 48C1E906 		shr	rcx, 6	# tmp143,
 8297              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8298              		.loc 1 112 12 view .LVU2803
GAS LISTING /tmp/ccqpmidN.s 			page 231


 8299 3376 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8300              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8301              		.loc 1 112 11 view .LVU2804
 8302 337a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8303 337e 7360     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8304              		.loc 1 112 58 is_stmt 1 view .LVU2805
 8305              	.LVL413:
 8306              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8307              		.loc 1 112 63 is_stmt 0 view .LVU2806
 8308 3380 498D5A03 		lea	rbx, 3[r10]	# factor,
 8309              	.LVL414:
 112:sieve_extend.c ****     return index;
 8310              		.loc 1 112 11 is_stmt 1 view .LVU2807
 8311              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8312              		.loc 1 112 21 is_stmt 0 view .LVU2808
 8313 3384 4989DB   		mov	r11, rbx	# tmp147, factor
 8314 3387 49C1EB06 		shr	r11, 6	# tmp147,
 8315              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8316              		.loc 1 112 12 view .LVU2809
 8317 338b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8318              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8319              		.loc 1 112 11 view .LVU2810
 8320 338f 480FA3D8 		bt	rax, rbx	# *_16, factor
 8321 3393 734B     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8322              		.loc 1 112 58 is_stmt 1 view .LVU2811
 8323              	.LVL415:
 8324              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8325              		.loc 1 112 63 is_stmt 0 view .LVU2812
 8326 3395 498D5A04 		lea	rbx, 4[r10]	# factor,
 8327              	.LVL416:
 112:sieve_extend.c ****     return index;
 8328              		.loc 1 112 11 is_stmt 1 view .LVU2813
 8329              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8330              		.loc 1 112 21 is_stmt 0 view .LVU2814
 8331 3399 4889DA   		mov	rdx, rbx	# tmp151, factor
 8332 339c 48C1EA06 		shr	rdx, 6	# tmp151,
 8333              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8334              		.loc 1 112 12 view .LVU2815
 8335 33a0 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8336              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8337              		.loc 1 112 11 view .LVU2816
 8338 33a4 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8339 33a8 7336     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8340              		.loc 1 112 58 is_stmt 1 view .LVU2817
 8341              	.LVL417:
GAS LISTING /tmp/ccqpmidN.s 			page 232


 8342              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8343              		.loc 1 112 63 is_stmt 0 view .LVU2818
 8344 33aa 498D5A05 		lea	rbx, 5[r10]	# factor,
 8345              	.LVL418:
 112:sieve_extend.c ****     return index;
 8346              		.loc 1 112 11 is_stmt 1 view .LVU2819
 8347              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8348              		.loc 1 112 21 is_stmt 0 view .LVU2820
 8349 33ae 4889D9   		mov	rcx, rbx	# tmp155, factor
 8350 33b1 48C1E906 		shr	rcx, 6	# tmp155,
 8351              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8352              		.loc 1 112 12 view .LVU2821
 8353 33b5 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8354              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8355              		.loc 1 112 11 view .LVU2822
 8356 33b9 490FA3D9 		bt	r9, rbx	# *_16, factor
 8357 33bd 7321     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8358              		.loc 1 112 58 is_stmt 1 view .LVU2823
 8359              	.LVL419:
 8360              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8361              		.loc 1 112 63 is_stmt 0 view .LVU2824
 8362 33bf 498D5A06 		lea	rbx, 6[r10]	# factor,
 8363              	.LVL420:
 112:sieve_extend.c ****     return index;
 8364              		.loc 1 112 11 is_stmt 1 view .LVU2825
 8365              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8366              		.loc 1 112 21 is_stmt 0 view .LVU2826
 8367 33c3 4989DB   		mov	r11, rbx	# tmp159, factor
 8368 33c6 49C1EB06 		shr	r11, 6	# tmp159,
 8369              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8370              		.loc 1 112 12 view .LVU2827
 8371 33ca 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8372              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8373              		.loc 1 112 11 view .LVU2828
 8374 33ce 480FA3D8 		bt	rax, rbx	# *_16, factor
 8375 33d2 730C     		jnc	.L772	#,
 112:sieve_extend.c ****     return index;
 8376              		.loc 1 112 58 is_stmt 1 view .LVU2829
 8377              	.LVL421:
 8378              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8379              		.loc 1 112 63 is_stmt 0 view .LVU2830
 8380 33d4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8381              	.LVL422:
 112:sieve_extend.c ****     return index;
 8382              		.loc 1 112 11 is_stmt 1 view .LVU2831
 8383 33d8 E948FFFF 		jmp	.L797	#
 8383      FF
GAS LISTING /tmp/ccqpmidN.s 			page 233


 8384 33dd 0F1F00   		.p2align 4,,7
 8385              		.p2align 3
 8386              	.L772:
 8387              	.LVL423:
 112:sieve_extend.c ****     return index;
 8388              		.loc 1 112 11 is_stmt 0 view .LVU2832
 8389              	.LBE348:
 8390              	.LBE347:
 954:sieve_extend.c ****         primeCount++;
 8391              		.loc 1 954 30 is_stmt 1 view .LVU2833
 8392              	# sieve_extend.c:954:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 954:sieve_extend.c ****         primeCount++;
 8393              		.loc 1 954 5 is_stmt 0 view .LVU2834
 8394 33e0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8395 33e3 0F8227FF 		jb	.L774	#,
 8395      FFFF
 8396              	.LVL424:
 8397              	.L769:
 954:sieve_extend.c ****         primeCount++;
 8398              		.loc 1 954 5 view .LVU2835
 8399              	.LBE358:
 961:sieve_extend.c **** }
 8400              		.loc 1 961 5 is_stmt 1 view .LVU2836
 8401              	.LBB359:
 8402              	.LBI359:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8403              		.loc 3 105 1 view .LVU2837
 8404              	.LBB360:
 8405              		.loc 3 107 3 view .LVU2838
 8406              	.LBE360:
 8407              	.LBE359:
 8408              	# sieve_extend.c:962: }
 962:sieve_extend.c **** 
 8409              		.loc 1 962 1 is_stmt 0 view .LVU2839
 8410 33e9 488D6424 		lea	rsp, 8[rsp]	#,
 8410      08
 8411              		.cfi_remember_state
 8412              		.cfi_def_cfa_offset 56
 8413              	.LBB364:
 8414              	.LBB361:
 8415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8416              		.loc 3 107 10 view .LVU2840
 8417 33ee 4C89FA   		mov	rdx, r15	#, primeCount
 8418              	.LBE361:
 8419              	.LBE364:
 8420              	# sieve_extend.c:962: }
 962:sieve_extend.c **** 
 8421              		.loc 1 962 1 view .LVU2841
 8422 33f1 5B       		pop	rbx	#
 8423              		.cfi_def_cfa_offset 48
 8424              	# sieve_extend.c:961:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 961:sieve_extend.c **** }
 8425              		.loc 1 961 5 view .LVU2842
 8426 33f2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8426      01
 8427              	.LBB365:
 8428              	.LBB362:
GAS LISTING /tmp/ccqpmidN.s 			page 234


 8429              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8430              		.loc 3 107 10 view .LVU2843
 8431 33f7 BF010000 		mov	edi, 1	#,
 8431      00
 8432 33fc 31C0     		xor	eax, eax	#
 8433 33fe 488D3500 		lea	rsi, .LC5[rip]	#,
 8433      000000
 8434              	.LBE362:
 8435              	.LBE365:
 8436              	# sieve_extend.c:962: }
 962:sieve_extend.c **** 
 8437              		.loc 1 962 1 view .LVU2844
 8438 3405 5D       		pop	rbp	#
 8439              		.cfi_def_cfa_offset 40
 8440 3406 415C     		pop	r12	#
 8441              		.cfi_def_cfa_offset 32
 8442 3408 415D     		pop	r13	#
 8443              		.cfi_def_cfa_offset 24
 8444 340a 415E     		pop	r14	#
 8445              		.cfi_def_cfa_offset 16
 8446 340c 415F     		pop	r15	#
 8447              		.cfi_def_cfa_offset 8
 8448              	.LBB366:
 8449              	.LBB363:
 8450              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8451              		.loc 3 107 10 view .LVU2845
 8452 340e E9000000 		jmp	__printf_chk@PLT	#
 8452      00
 8453              	.LVL425:
 8454              		.p2align 4,,7
 8455 3413 0F1F4400 		.p2align 3
 8455      00
 8456              	.L798:
 8457              		.cfi_restore_state
 8458              		.loc 3 107 10 view .LVU2846
 8459              	.LBE363:
 8460              	.LBE366:
 8461              	.LBB367:
 957:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8462              		.loc 1 957 13 is_stmt 1 view .LVU2847
 8463              	.LBB349:
 8464              	.LBI341:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8465              		.loc 3 105 1 view .LVU2848
 8466              	.LBB343:
 8467              		.loc 3 107 3 view .LVU2849
 8468              	.LBE343:
 8469              	.LBE349:
 8470              	# sieve_extend.c:957:             printf("%3ju ",(uintmax_t)factor*2+1);
 957:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8471              		.loc 1 957 13 is_stmt 0 view .LVU2850
 8472 3418 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8472      01
 8473              	.LBB350:
 8474              	.LBB344:
 8475              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8476              		.loc 3 107 10 view .LVU2851
GAS LISTING /tmp/ccqpmidN.s 			page 235


 8477 341d BF010000 		mov	edi, 1	#,
 8477      00
 8478 3422 31C0     		xor	eax, eax	#
 8479 3424 488D3500 		lea	rsi, .LC4[rip]	#,
 8479      000000
 8480 342b E8000000 		call	__printf_chk@PLT	#
 8480      00
 8481              	.LVL426:
 8482              		.loc 3 107 10 view .LVU2852
 8483              	.LBE344:
 8484              	.LBE350:
 958:sieve_extend.c ****         }
 8485              		.loc 1 958 13 is_stmt 1 view .LVU2853
 8486              	.LBB351:
 8487              	.LBB345:
 8488              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8489              		.loc 3 107 10 is_stmt 0 view .LVU2854
 8490 3430 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8491              	.LBE345:
 8492              	.LBE351:
 8493              	# sieve_extend.c:958:             if (primeCount % 10 == 0) printf("\n");
 958:sieve_extend.c ****         }
 8494              		.loc 1 958 16 view .LVU2855
 8495 3433 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8495      99999999 
 8495      9919
 8496              	.LBB352:
 8497              	.LBB346:
 8498              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8499              		.loc 3 107 10 view .LVU2856
 8500 343d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8501 3441 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8501      D001
 8502              	.LBE346:
 8503              	.LBE352:
 8504              	# sieve_extend.c:958:             if (primeCount % 10 == 0) printf("\n");
 958:sieve_extend.c ****         }
 8505              		.loc 1 958 16 view .LVU2857
 8506 3447 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8507 344a 760C     		jbe	.L771	#,
 8508              	.L796:
 8509 344c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.69_32(D)
 8510              	.LBB353:
 8511              	.LBB354:
 8512              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8513              		.loc 3 107 10 view .LVU2858
 8514 3450 E9C8FEFF 		jmp	.L770	#
 8514      FF
 8515              		.p2align 4,,7
 8516 3455 0F1F00   		.p2align 3
 8517              	.L771:
 8518              	.LBE354:
 8519              	.LBE353:
 958:sieve_extend.c ****         }
 8520              		.loc 1 958 39 is_stmt 1 view .LVU2859
 8521              	.LVL427:
 8522              	.LBB356:
GAS LISTING /tmp/ccqpmidN.s 			page 236


 8523              	.LBI353:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8524              		.loc 3 105 1 view .LVU2860
 8525              	.LBB355:
 8526              		.loc 3 107 3 view .LVU2861
 8527              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8528              		.loc 3 107 10 is_stmt 0 view .LVU2862
 8529 3458 BF0A0000 		mov	edi, 10	#,
 8529      00
 8530 345d E8000000 		call	putchar@PLT	#
 8530      00
 8531              	.LVL428:
 8532 3462 EBE8     		jmp	.L796	#
 8533              	.LVL429:
 8534              	.L775:
 8535              		.loc 3 107 10 view .LVU2863
 8536              	.LBE355:
 8537              	.LBE356:
 8538              	.LBE367:
 8539              	# sieve_extend.c:953:     counter_t primeCount = 1;    // We already have 2
 953:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8540              		.loc 1 953 15 view .LVU2864
 8541 3464 41BF0100 		mov	r15d, 1	# primeCount,
 8541      0000
 8542 346a E97AFFFF 		jmp	.L769	#
 8542      FF
 8543              		.cfi_endproc
 8544              	.LFE85:
 8546 346f 90       		.p2align 4
 8548              	sieve:
 8549              	.LVL430:
 8550              	.LFB75:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8551              		.loc 1 930 86 is_stmt 1 view -0
 8552              		.cfi_startproc
 931:sieve_extend.c ****     counter_t prime     = 0;
 8553              		.loc 1 931 5 view .LVU2866
 8554              	# sieve_extend.c:930: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8555              		.loc 1 930 86 is_stmt 0 view .LVU2867
 8556 3470 4157     		push	r15	#
 8557              		.cfi_def_cfa_offset 16
 8558              		.cfi_offset 15, -16
 8559 3472 4156     		push	r14	#
 8560              		.cfi_def_cfa_offset 24
 8561              		.cfi_offset 14, -24
 8562 3474 4155     		push	r13	#
 8563              		.cfi_def_cfa_offset 32
 8564              		.cfi_offset 13, -32
 8565 3476 4154     		push	r12	#
 8566              		.cfi_def_cfa_offset 40
 8567              		.cfi_offset 12, -40
 8568 3478 55       		push	rbp	#
 8569              		.cfi_def_cfa_offset 48
 8570              		.cfi_offset 6, -48
 8571 3479 53       		push	rbx	#
 8572              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccqpmidN.s 			page 237


 8573              		.cfi_offset 3, -56
 8574 347a 4889FB   		mov	rbx, rdi	# maxints, tmp594
 8575              	.LVL431:
 8576              	.LBB402:
 8577              	.LBI402:
  92:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 8578              		.loc 1 92 28 is_stmt 1 view .LVU2868
 8579              	.LBB403:
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8580              		.loc 1 93 5 view .LVU2869
 8581              	# sieve_extend.c:93:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8582              		.loc 1 93 33 is_stmt 0 view .LVU2870
 8583 347d BF080000 		mov	edi, 8	#,
 8583      00
 8584              	.LVL432:
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8585              		.loc 1 93 33 view .LVU2871
 8586              	.LBE403:
 8587              	.LBE402:
 8588              	# sieve_extend.c:930: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8589              		.loc 1 930 86 view .LVU2872
 8590 3482 488D6424 		lea	rsp, -88[rsp]	#,
 8590      A8
 8591              		.cfi_def_cfa_offset 144
 8592              	.LBB407:
 8593              	.LBB404:
 8594              	# sieve_extend.c:94:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  94:sieve_extend.c **** 
 8595              		.loc 1 94 22 view .LVU2873
 8596 3487 4989DE   		mov	r14, rbx	# prephitmp_757, maxints
 8597 348a 49D1EE   		shr	r14	# prephitmp_757
 8598              	.LBE404:
 8599              	.LBE407:
 8600              	# sieve_extend.c:930: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8601              		.loc 1 930 86 view .LVU2874
 8602 348d 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp595
 8602      40
 8603              	.LBB408:
 8604              	.LBB405:
 8605              	# sieve_extend.c:93:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8606              		.loc 1 93 33 view .LVU2875
 8607 3492 BE180000 		mov	esi, 24	#,
 8607      00
 8608              	.LVL433:
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8609              		.loc 1 93 33 view .LVU2876
 8610 3497 E8000000 		call	aligned_alloc@PLT	#
 8610      00
 8611              	.LVL434:
 8612              	# sieve_extend.c:94:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  94:sieve_extend.c **** 
 8613              		.loc 1 94 22 view .LVU2877
 8614 349c 498DB600 		lea	rsi, 1024[r14]	# tmp314,
GAS LISTING /tmp/ccqpmidN.s 			page 238


 8614      040000
 8615              	# sieve_extend.c:96:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
 8616              		.loc 1 96 23 view .LVU2878
 8617 34a3 BF800000 		mov	edi, 128	#,
 8617      00
 8618              	# sieve_extend.c:93:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8619              		.loc 1 93 33 view .LVU2879
 8620 34a8 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 8620      30
 8621 34ad 4989C7   		mov	r15, rax	# <retval>, tmp596
 8622              	.LVL435:
  94:sieve_extend.c **** 
 8623              		.loc 1 94 5 is_stmt 1 view .LVU2880
 8624              	# sieve_extend.c:94:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  94:sieve_extend.c **** 
 8625              		.loc 1 94 22 is_stmt 0 view .LVU2881
 8626 34b0 48C1EE0A 		shr	rsi, 10	# tmp315,
 8627              	# sieve_extend.c:94:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  94:sieve_extend.c **** 
 8628              		.loc 1 94 12 view .LVU2882
 8629 34b4 48C1E607 		sal	rsi, 7	# memSize,
 8630              	# sieve_extend.c:94:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  94:sieve_extend.c **** 
 8631              		.loc 1 94 22 view .LVU2883
 8632 34b8 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_757
 8632      08
 8633              	.LVL436:
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
 8634              		.loc 1 96 5 is_stmt 1 view .LVU2884
 8635              	# sieve_extend.c:96:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
 8636              		.loc 1 96 23 is_stmt 0 view .LVU2885
 8637 34bd E8000000 		call	aligned_alloc@PLT	#
 8637      00
 8638              	.LVL437:
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
 8639              		.loc 1 96 23 view .LVU2886
 8640 34c2 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _95
 8640      38
 8641              	.LBE405:
 8642              	.LBE408:
 8643              	.LBB409:
 8644              	.LBB410:
 8645              	# sieve_extend.c:901:     for (;range_stop < block_stop;) {
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8646              		.loc 1 901 5 view .LVU2887
 8647 34c7 4D85F6   		test	r14, r14	# prephitmp_757
 8648              	.LBE410:
 8649              	.LBE409:
 8650              	.LBB448:
 8651              	.LBB406:
 8652              	# sieve_extend.c:96:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
 8653              		.loc 1 96 21 view .LVU2888
 8654 34ca 498907   		mov	QWORD PTR [r15], rax	# sieve_90->bitarray, _95
GAS LISTING /tmp/ccqpmidN.s 			page 239


  97:sieve_extend.c ****     sieve->size     = size;
 8655              		.loc 1 97 5 is_stmt 1 view .LVU2889
 8656              	# sieve_extend.c:97:     sieve->bits     = size >> 1;
  97:sieve_extend.c ****     sieve->size     = size;
 8657              		.loc 1 97 21 is_stmt 0 view .LVU2890
 8658 34cd 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_90->bits, prephitmp_757
  98:sieve_extend.c **** 
 8659              		.loc 1 98 5 is_stmt 1 view .LVU2891
 8660              	# sieve_extend.c:98:     sieve->size     = size;
  98:sieve_extend.c **** 
 8661              		.loc 1 98 21 is_stmt 0 view .LVU2892
 8662 34d1 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_90->size, maxints
 102:sieve_extend.c **** }
 8663              		.loc 1 102 5 is_stmt 1 view .LVU2893
 8664              	.LVL438:
 102:sieve_extend.c **** }
 8665              		.loc 1 102 5 is_stmt 0 view .LVU2894
 8666              	.LBE406:
 8667              	.LBE448:
 932:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 8668              		.loc 1 932 5 is_stmt 1 view .LVU2895
 933:sieve_extend.c **** 
 8669              		.loc 1 933 5 view .LVU2896
 935:sieve_extend.c **** 
 8670              		.loc 1 935 5 view .LVU2897
 938:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 8671              		.loc 1 938 5 view .LVU2898
 8672              	.LBB449:
 8673              	.LBI409:
 891:sieve_extend.c ****     register counter_t prime   = 0;
 8674              		.loc 1 891 21 view .LVU2899
 8675              	.LBB441:
 892:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8676              		.loc 1 892 5 view .LVU2900
 893:sieve_extend.c ****     counter_t pattern_start    = 0;
 8677              		.loc 1 893 5 view .LVU2901
 894:sieve_extend.c ****     counter_t range_stop       = block_start;
 8678              		.loc 1 894 5 view .LVU2902
 895:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 8679              		.loc 1 895 5 view .LVU2903
 896:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 8680              		.loc 1 896 5 view .LVU2904
 897:sieve_extend.c **** 
 8681              		.loc 1 897 5 view .LVU2905
 899:sieve_extend.c ****     
 8682              		.loc 1 899 5 view .LVU2906
 8683              	# sieve_extend.c:899:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 899:sieve_extend.c ****     
 8684              		.loc 1 899 24 is_stmt 0 view .LVU2907
 8685 34d5 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_95],
 8685      000000
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8686              		.loc 1 901 5 is_stmt 1 view .LVU2908
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8687              		.loc 1 901 11 view .LVU2909
 8688              	# sieve_extend.c:901:     for (;range_stop < block_stop;) {
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
GAS LISTING /tmp/ccqpmidN.s 			page 240


 8689              		.loc 1 901 5 is_stmt 0 view .LVU2910
 8690 34dc 0F844B0C 		je	.L1039	#,
 8690      0000
 8691 34e2 4989C6   		mov	r14, rax	# _95, _95
 8692              	.LVL439:
 8693              	# sieve_extend.c:897:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 897:sieve_extend.c **** 
 8694              		.loc 1 897 18 view .LVU2911
 8695 34e5 31F6     		xor	esi, esi	# block$pattern_start
 8696 34e7 31D2     		xor	edx, edx	# block$pattern_size
 8697              	# sieve_extend.c:892:     register counter_t prime   = 0;
 892:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8698              		.loc 1 892 24 view .LVU2912
 8699 34e9 31C9     		xor	ecx, ecx	# prime
 8700              	# sieve_extend.c:893:     counter_t patternsize_bits = 1;
 893:sieve_extend.c ****     counter_t pattern_start    = 0;
 8701              		.loc 1 893 15 view .LVU2913
 8702 34eb 41BF0100 		mov	r15d, 1	# patternsize_bits,
 8702      0000
 8703              	.LBB411:
 8704              	# sieve_extend.c:902:         prime = searchBitFalse(bitarray, prime+1);
 902:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8705              		.loc 1 902 17 view .LVU2914
 8706 34f1 41BD0100 		mov	r13d, 1	# index,
 8706      0000
 8707              	.LBE411:
 8708              	# sieve_extend.c:894:     counter_t pattern_start    = 0;
 894:sieve_extend.c ****     counter_t range_stop       = block_start;
 8709              		.loc 1 894 15 view .LVU2915
 8710 34f7 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 8710      18000000 
 8710      00
 8711              	.LVL440:
 8712              		.p2align 4
 8713              		.p2align 3
 8714              	.L800:
 8715              	.LBB434:
 8716              	.LBB412:
 8717              	.LBB413:
 113:sieve_extend.c **** }
 8718              		.loc 1 113 5 is_stmt 1 view .LVU2916
 113:sieve_extend.c **** }
 8719              		.loc 1 113 5 is_stmt 0 view .LVU2917
 8720              	.LBE413:
 8721              	.LBE412:
 903:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8722              		.loc 1 903 9 is_stmt 1 view .LVU2918
 8723              	# sieve_extend.c:903:         counter_t start = prime * prime * 2 + prime * 2;
 903:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8724              		.loc 1 903 45 is_stmt 0 view .LVU2919
 8725 3500 498D5D01 		lea	rbx, 1[r13]	# index,
 8726 3504 4F8D642D 		lea	r12, [r13+r13]	# _359,
 8726      00
 8727              	# sieve_extend.c:903:         counter_t start = prime * prime * 2 + prime * 2;
 903:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8728              		.loc 1 903 19 view .LVU2920
 8729 3509 4889DD   		mov	rbp, rbx	# index, index
GAS LISTING /tmp/ccqpmidN.s 			page 241


 8730 350c 490FAFEC 		imul	rbp, r12	# index, _359
 8731              	.LVL441:
 904:sieve_extend.c **** 
 8732              		.loc 1 904 9 is_stmt 1 view .LVU2921
 8733              	# sieve_extend.c:904:         if unlikely(start > block_stop) break;
 904:sieve_extend.c **** 
 8734              		.loc 1 904 12 is_stmt 0 view .LVU2922
 8735 3510 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 8735      08
 8736 3515 0F870A04 		ja	.L1040	#,
 8736      0000
 906:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8737              		.loc 1 906 9 is_stmt 1 view .LVU2923
 8738              	# sieve_extend.c:906:         const counter_t step  = prime * 2 + 1;
 906:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8739              		.loc 1 906 25 is_stmt 0 view .LVU2924
 8740 351b 4983C401 		add	r12, 1	# step,
 8741              	.LVL442:
 907:sieve_extend.c **** 
 8742              		.loc 1 907 9 is_stmt 1 view .LVU2925
 8743              	# sieve_extend.c:907:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 907:sieve_extend.c **** 
 8744              		.loc 1 907 12 is_stmt 0 view .LVU2926
 8745 351f 4885DB   		test	rbx, rbx	# index
 8746 3522 7516     		jne	.L806	#,
 907:sieve_extend.c **** 
 8747              		.loc 1 907 41 is_stmt 1 view .LVU2927
 8748              	# sieve_extend.c:907:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 907:sieve_extend.c **** 
 8749              		.loc 1 907 102 is_stmt 0 view .LVU2928
 8750 3524 48C7C0FF 		mov	rax, -1	# tmp331,
 8750      FFFFFF
 8751 352b 31D2     		xor	edx, edx	# tmp330
 8752 352d 49F7F4   		div	r12	# step
 8753              	# sieve_extend.c:907:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 907:sieve_extend.c **** 
 8754              		.loc 1 907 47 view .LVU2929
 8755 3530 48C7C5FE 		mov	rbp, -2	# tmp332,
 8755      FFFFFF
 8756              	.LVL443:
 907:sieve_extend.c **** 
 8757              		.loc 1 907 47 view .LVU2930
 8758 3537 4829D5   		sub	rbp, rdx	# index, tmp330
 8759              	.LVL444:
 8760              	.L806:
 909:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8761              		.loc 1 909 9 is_stmt 1 view .LVU2931
 8762              	# sieve_extend.c:909:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 909:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8763              		.loc 1 909 53 is_stmt 0 view .LVU2932
 8764 353a 4C89FE   		mov	rsi, r15	# _68, patternsize_bits
 8765 353d 490FAFF4 		imul	rsi, r12	# _68, step
 8766 3541 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, _68
 8766      28
 8767              	# sieve_extend.c:909:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 909:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8768              		.loc 1 909 60 view .LVU2933
GAS LISTING /tmp/ccqpmidN.s 			page 242


 8769 3546 4801F6   		add	rsi, rsi	# _69
 8770 3549 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, _69
 8770      10
 8771              	.LVL445:
 910:sieve_extend.c ****         block.pattern_start = pattern_start;
 8772              		.loc 1 910 9 is_stmt 1 view .LVU2934
 911:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 8773              		.loc 1 911 9 view .LVU2935
 912:sieve_extend.c **** 
 8774              		.loc 1 912 9 view .LVU2936
 8775              	# sieve_extend.c:912:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 912:sieve_extend.c **** 
 8776              		.loc 1 912 12 is_stmt 0 view .LVU2937
 8777 354e 483B7424 		cmp	rsi, QWORD PTR 8[rsp]	# _69, %sfp
 8777      08
 8778 3553 0F87B40B 		ja	.L1041	#,
 8778      0000
 914:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 8779              		.loc 1 914 9 is_stmt 1 view .LVU2938
 8780 3559 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# pattern_start, %sfp
 8780      18
 8781              	# sieve_extend.c:914:         if (patternsize_bits>1) {
 914:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 8782              		.loc 1 914 12 is_stmt 0 view .LVU2939
 8783 355e 4983FF01 		cmp	r15, 1	# patternsize_bits,
 8784 3562 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, pattern_start
 8784      20
 8785 3567 0F877303 		ja	.L1042	#,
 8785      0000
 8786              	.LVL446:
 8787              	.L809:
 918:sieve_extend.c **** 
 8788              		.loc 1 918 9 is_stmt 1 view .LVU2940
 920:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8789              		.loc 1 920 9 view .LVU2941
 921:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 8790              		.loc 1 921 14 view .LVU2942
 922:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8791              		.loc 1 922 14 view .LVU2943
 8792              	# sieve_extend.c:922:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 922:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8793              		.loc 1 922 17 is_stmt 0 view .LVU2944
 8794 356d 4981FCFF 		cmp	r12, 255	# step,
 8794      000000
 8795 3574 0F870601 		ja	.L813	#,
 8795      0000
 922:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8796              		.loc 1 922 48 is_stmt 1 view .LVU2945
 8797 357a 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 8797      10
 8798 357f 4C89E2   		mov	rdx, r12	#, step
 8799 3582 4889EE   		mov	rsi, rbp	#, index
 8800 3585 4C89F7   		mov	rdi, r14	#, _95
 8801 3588 E883DFFF 		call	setBitsTrue_largeRange_vector	#
 8801      FF
 8802              	.LVL447:
 8803              	.L814:
GAS LISTING /tmp/ccqpmidN.s 			page 243


 922:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8804              		.loc 1 922 48 is_stmt 0 view .LVU2946
 8805              	.LBE434:
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8806              		.loc 1 901 11 is_stmt 1 view .LVU2947
 8807              	# sieve_extend.c:901:     for (;range_stop < block_stop;) {
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8808              		.loc 1 901 5 is_stmt 0 view .LVU2948
 8809 358d 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# prephitmp_757, %sfp
 8809      08
 8810              	.LVL448:
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8811              		.loc 1 901 5 view .LVU2949
 8812 3592 4C396424 		cmp	QWORD PTR 16[rsp], r12	# %sfp, prephitmp_757
 8812      10
 8813 3597 0F83F402 		jnb	.L1043	#,
 8813      0000
 8814              	.LVL449:
 8815              	.L823:
 8816              	.LBB435:
 902:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8817              		.loc 1 902 9 is_stmt 1 view .LVU2950
 8818              	.LBB415:
 8819              	.LBI412:
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8820              		.loc 1 111 25 view .LVU2951
 8821              	.LBB414:
 112:sieve_extend.c ****     return index;
 8822              		.loc 1 112 5 view .LVU2952
 112:sieve_extend.c ****     return index;
 8823              		.loc 1 112 11 view .LVU2953
 8824              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8825              		.loc 1 112 21 is_stmt 0 view .LVU2954
 8826 359d 4889DD   		mov	rbp, rbx	# tmp318, index
 8827 35a0 48C1ED06 		shr	rbp, 6	# tmp318,
 8828              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8829              		.loc 1 112 12 view .LVU2955
 8830 35a4 4D8B04EE 		mov	r8, QWORD PTR [r14+rbp*8]	# *_477,* _95
 8831              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8832              		.loc 1 112 11 view .LVU2956
 8833 35a8 490FA3D8 		bt	r8, rbx	# *_477, index
 8834 35ac 0F83A600 		jnc	.L802	#,
 8834      0000
 112:sieve_extend.c ****     return index;
 8835              		.loc 1 112 58 is_stmt 1 view .LVU2957
 8836              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8837              		.loc 1 112 63 is_stmt 0 view .LVU2958
 8838 35b2 488D7B01 		lea	rdi, 1[rbx]	# tmp460,
 8839              	.LVL450:
 8840              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8841              		.loc 1 112 21 view .LVU2959
 8842 35b6 4889FA   		mov	rdx, rdi	# tmp323, index
GAS LISTING /tmp/ccqpmidN.s 			page 244


 8843              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8844              		.loc 1 112 63 view .LVU2960
 8845 35b9 4889FB   		mov	rbx, rdi	# index, tmp460
 112:sieve_extend.c ****     return index;
 8846              		.loc 1 112 11 is_stmt 1 view .LVU2961
 8847              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8848              		.loc 1 112 21 is_stmt 0 view .LVU2962
 8849 35bc 48C1EA06 		shr	rdx, 6	# tmp323,
 8850              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8851              		.loc 1 112 12 view .LVU2963
 8852 35c0 4D8B0CD6 		mov	r9, QWORD PTR [r14+rdx*8]	# *_49, *_49
 8853              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8854              		.loc 1 112 11 view .LVU2964
 8855 35c4 490FA3F9 		bt	r9, rdi	# *_49, index
 8856 35c8 0F838A00 		jnc	.L802	#,
 8856      0000
 112:sieve_extend.c ****     return index;
 8857              		.loc 1 112 58 is_stmt 1 view .LVU2965
 8858              	.LVL451:
 8859              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8860              		.loc 1 112 63 is_stmt 0 view .LVU2966
 8861 35ce 4883C301 		add	rbx, 1	# index,
 8862              	.LVL452:
 112:sieve_extend.c ****     return index;
 8863              		.loc 1 112 11 is_stmt 1 view .LVU2967
 8864              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8865              		.loc 1 112 21 is_stmt 0 view .LVU2968
 8866 35d2 4989DA   		mov	r10, rbx	# tmp560, index
 8867 35d5 49C1EA06 		shr	r10, 6	# tmp560,
 8868              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8869              		.loc 1 112 12 view .LVU2969
 8870 35d9 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_49, *_49
 8871              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8872              		.loc 1 112 11 view .LVU2970
 8873 35dd 490FA3DB 		bt	r11, rbx	# *_49, index
 8874 35e1 7375     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8875              		.loc 1 112 58 is_stmt 1 view .LVU2971
 8876              	.LVL453:
 8877              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8878              		.loc 1 112 63 is_stmt 0 view .LVU2972
 8879 35e3 488D5F02 		lea	rbx, 2[rdi]	# index,
 8880              	.LVL454:
 112:sieve_extend.c ****     return index;
 8881              		.loc 1 112 11 is_stmt 1 view .LVU2973
 8882              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8883              		.loc 1 112 21 is_stmt 0 view .LVU2974
GAS LISTING /tmp/ccqpmidN.s 			page 245


 8884 35e7 4889D9   		mov	rcx, rbx	# tmp564, index
 8885 35ea 48C1E906 		shr	rcx, 6	# tmp564,
 8886              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8887              		.loc 1 112 12 view .LVU2975
 8888 35ee 498B04CE 		mov	rax, QWORD PTR [r14+rcx*8]	# *_49, *_49
 8889              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8890              		.loc 1 112 11 view .LVU2976
 8891 35f2 480FA3D8 		bt	rax, rbx	# *_49, index
 8892 35f6 7360     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8893              		.loc 1 112 58 is_stmt 1 view .LVU2977
 8894              	.LVL455:
 8895              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8896              		.loc 1 112 63 is_stmt 0 view .LVU2978
 8897 35f8 488D5F03 		lea	rbx, 3[rdi]	# index,
 8898              	.LVL456:
 112:sieve_extend.c ****     return index;
 8899              		.loc 1 112 11 is_stmt 1 view .LVU2979
 8900              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8901              		.loc 1 112 21 is_stmt 0 view .LVU2980
 8902 35fc 4889DE   		mov	rsi, rbx	# tmp568, index
 8903 35ff 48C1EE06 		shr	rsi, 6	# tmp568,
 8904              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8905              		.loc 1 112 12 view .LVU2981
 8906 3603 4D8B24F6 		mov	r12, QWORD PTR [r14+rsi*8]	# *_49, *_49
 8907              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8908              		.loc 1 112 11 view .LVU2982
 8909 3607 490FA3DC 		bt	r12, rbx	# *_49, index
 8910 360b 734B     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8911              		.loc 1 112 58 is_stmt 1 view .LVU2983
 8912              	.LVL457:
 8913              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8914              		.loc 1 112 63 is_stmt 0 view .LVU2984
 8915 360d 488D5F04 		lea	rbx, 4[rdi]	# index,
 8916              	.LVL458:
 112:sieve_extend.c ****     return index;
 8917              		.loc 1 112 11 is_stmt 1 view .LVU2985
 8918              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8919              		.loc 1 112 21 is_stmt 0 view .LVU2986
 8920 3611 4889DD   		mov	rbp, rbx	# tmp572, index
 8921 3614 48C1ED06 		shr	rbp, 6	# tmp572,
 8922              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8923              		.loc 1 112 12 view .LVU2987
 8924 3618 4D8B04EE 		mov	r8, QWORD PTR [r14+rbp*8]	# *_49, *_49
 8925              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8926              		.loc 1 112 11 view .LVU2988
GAS LISTING /tmp/ccqpmidN.s 			page 246


 8927 361c 490FA3D8 		bt	r8, rbx	# *_49, index
 8928 3620 7336     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8929              		.loc 1 112 58 is_stmt 1 view .LVU2989
 8930              	.LVL459:
 8931              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8932              		.loc 1 112 63 is_stmt 0 view .LVU2990
 8933 3622 488D5F05 		lea	rbx, 5[rdi]	# index,
 8934              	.LVL460:
 112:sieve_extend.c ****     return index;
 8935              		.loc 1 112 11 is_stmt 1 view .LVU2991
 8936              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8937              		.loc 1 112 21 is_stmt 0 view .LVU2992
 8938 3626 4889DA   		mov	rdx, rbx	# tmp576, index
 8939 3629 48C1EA06 		shr	rdx, 6	# tmp576,
 8940              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8941              		.loc 1 112 12 view .LVU2993
 8942 362d 4D8B0CD6 		mov	r9, QWORD PTR [r14+rdx*8]	# *_49, *_49
 8943              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8944              		.loc 1 112 11 view .LVU2994
 8945 3631 490FA3D9 		bt	r9, rbx	# *_49, index
 8946 3635 7321     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8947              		.loc 1 112 58 is_stmt 1 view .LVU2995
 8948              	.LVL461:
 8949              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8950              		.loc 1 112 63 is_stmt 0 view .LVU2996
 8951 3637 488D5F06 		lea	rbx, 6[rdi]	# index,
 8952              	.LVL462:
 112:sieve_extend.c ****     return index;
 8953              		.loc 1 112 11 is_stmt 1 view .LVU2997
 8954              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8955              		.loc 1 112 21 is_stmt 0 view .LVU2998
 8956 363b 4989DA   		mov	r10, rbx	# tmp580, index
 8957 363e 49C1EA06 		shr	r10, 6	# tmp580,
 8958              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8959              		.loc 1 112 12 view .LVU2999
 8960 3642 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_49, *_49
 8961              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8962              		.loc 1 112 11 view .LVU3000
 8963 3646 490FA3DB 		bt	r11, rbx	# *_49, index
 8964 364a 730C     		jnc	.L802	#,
 112:sieve_extend.c ****     return index;
 8965              		.loc 1 112 58 is_stmt 1 view .LVU3001
 8966              	.LVL463:
 8967              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 8968              		.loc 1 112 63 is_stmt 0 view .LVU3002
 8969 364c 488D5F07 		lea	rbx, 7[rdi]	# index,
GAS LISTING /tmp/ccqpmidN.s 			page 247


 8970              	.LVL464:
 112:sieve_extend.c ****     return index;
 8971              		.loc 1 112 11 is_stmt 1 view .LVU3003
 8972 3650 E948FFFF 		jmp	.L823	#
 8972      FF
 8973              		.p2align 4,,7
 8974 3655 0F1F00   		.p2align 3
 8975              	.L802:
 112:sieve_extend.c ****     return index;
 8976              		.loc 1 112 11 is_stmt 0 view .LVU3004
 8977              	.LBE414:
 8978              	.LBE415:
 8979              	.LBE435:
 8980              	.LBE441:
 8981              	.LBE449:
 8982              	# sieve_extend.c:930: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8983              		.loc 1 930 86 view .LVU3005
 8984 3658 4C89E9   		mov	rcx, r13	# prime, index
 8985 365b 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 8986              	.LVL465:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8987              		.loc 1 930 86 view .LVU3006
 8988 365e 4C8B6C24 		mov	r13, QWORD PTR 32[rsp]	# pattern_start, %sfp
 8988      20
 8989              	.LVL466:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8990              		.loc 1 930 86 view .LVU3007
 8991 3663 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 8991      18
 8992 3668 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# patternsize_bits, %sfp
 8992      28
 8993              	.LVL467:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8994              		.loc 1 930 86 view .LVU3008
 8995 366d 4C896C24 		mov	QWORD PTR 24[rsp], r13	# %sfp, pattern_start
 8995      18
 8996              	.LVL468:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8997              		.loc 1 930 86 view .LVU3009
 8998 3672 4989DD   		mov	r13, rbx	# index, index
 8999              	.LVL469:
 930:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9000              		.loc 1 930 86 view .LVU3010
 9001 3675 E986FEFF 		jmp	.L800	#
 9001      FF
 9002              	.LVL470:
 9003 367a 660F1F44 		.p2align 4,,7
 9003      0000
 9004              		.p2align 3
 9005              	.L813:
 9006              	.LBB450:
 9007              	.LBB442:
 9008              	.LBB436:
 923:sieve_extend.c ****         block.prime = prime;
 9009              		.loc 1 923 48 is_stmt 1 view .LVU3011
 9010              	.LBB416:
GAS LISTING /tmp/ccqpmidN.s 			page 248


 9011              	.LBI416:
 401:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9012              		.loc 1 401 20 view .LVU3012
 9013              	.LBB417:
 402:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9014              		.loc 1 402 5 view .LVU3013
 403:sieve_extend.c **** 
 9015              		.loc 1 403 5 view .LVU3014
 9016              	# sieve_extend.c:403:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 403:sieve_extend.c **** 
 9017              		.loc 1 403 74 is_stmt 0 view .LVU3015
 9018 3680 4D89E2   		mov	r10, r12	# tmp334, step
 9019 3683 49C1E206 		sal	r10, 6	# tmp334,
 9020              	# sieve_extend.c:403:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 403:sieve_extend.c **** 
 9021              		.loc 1 403 21 view .LVU3016
 9022 3687 4D8D042A 		lea	r8, [r10+rbp]	# range_stop_unique,
 9023              	.LVL471:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9024              		.loc 1 407 5 is_stmt 1 view .LVU3017
 9025              	.LBB418:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9026              		.loc 1 407 10 view .LVU3018
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9027              		.loc 1 407 50 view .LVU3019
 9028              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9029              		.loc 1 407 5 is_stmt 0 view .LVU3020
 9030 368b 4C39C5   		cmp	rbp, r8	# index, range_stop_unique
 9031 368e 0F83F9FE 		jnb	.L814	#,
 9031      FFFF
 9032              	.LBB419:
 9033              	.LBB420:
 9034              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9035              		.loc 1 164 20 view .LVU3021
 9036 3694 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# _69, %sfp
 9036      10
 9037              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 9038              		.loc 1 166 110 view .LVU3022
 9039 3699 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp337,
 9040              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9041              		.loc 1 190 29 view .LVU3023
 9042 369d 48C7C6FF 		mov	rsi, -1	# tmp746,
 9042      FFFFFF
 9043              	# sieve_extend.c:172:        index_ptr+=step;
 172:sieve_extend.c ****        *index_ptr |= mask;
 9044              		.loc 1 172 17 view .LVU3024
 9045 36a4 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _120,
 9045      00000000 
 9046              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9047              		.loc 1 164 20 view .LVU3025
 9048 36ac 4989CB   		mov	r11, rcx	# range_stop_word, _69
 9049              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccqpmidN.s 			page 249


 190:sieve_extend.c ****    }
 9050              		.loc 1 190 29 view .LVU3026
 9051 36af 89C8     		mov	eax, ecx	# tmp339, _69
 9052              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9053              		.loc 1 164 20 view .LVU3027
 9054 36b1 49C1EB06 		shr	r11, 6	# range_stop_word,
 9055              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9056              		.loc 1 190 29 view .LVU3028
 9057 36b5 F7D0     		not	eax	# tmp339
 9058              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 9059              		.loc 1 166 133 view .LVU3029
 9060 36b7 4C89D9   		mov	rcx, r11	# tmp343, range_stop_word
 9061              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9062              		.loc 1 190 29 view .LVU3030
 9063 36ba C462FBF7 		shrx	r10, rsi, rax	# _152, tmp746, tmp339
 9063      D6
 9064              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 9065              		.loc 1 166 133 view .LVU3031
 9066 36bf 4829F9   		sub	rcx, rdi	# tmp343, tmp337
 9067              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 9068              		.loc 1 166 53 view .LVU3032
 9069 36c2 4939FB   		cmp	r11, rdi	# range_stop_word, tmp337
 9070              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9071              		.loc 1 190 29 view .LVU3033
 9072 36c5 4C895424 		mov	QWORD PTR 72[rsp], r10	# %sfp, _152
 9072      48
 9073              	# sieve_extend.c:183:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9074              		.loc 1 183 41 view .LVU3034
 9075 36ca 4F8D0CDE 		lea	r9, [r14+r11*8]	# range_stop_ptr,
 9076              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 9077              		.loc 1 166 53 view .LVU3035
 9078 36ce 4D8D14CE 		lea	r10, [r14+rcx*8]	# tmp345,
 9079 36d2 4D89E3   		mov	r11, r12	# _722, step
 9080 36d5 4D0F46D6 		cmovbe	r10, r14	# _95,, fast_loop_ptr
 9081 36d9 48C1E703 		sal	rdi, 3	# tmp349,
 9082 36dd 49C1E304 		sal	r11, 4	# _722,
 9083              	.LVL472:
 9084 36e1 66662E0F 		.p2align 4
 9084      1F840000 
 9084      0000000F 
 9084      1F4000
 9085              		.p2align 3
 9086              	.L821:
 166:sieve_extend.c **** 
 9087              		.loc 1 166 53 view .LVU3036
 9088              	.LBE420:
 9089              	.LBE419:
 408:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 250


 9090              		.loc 1 408 9 is_stmt 1 view .LVU3037
 9091 36f0 4889EE   		mov	rsi, rbp	# tmp352, index
 9092 36f3 B8010000 		mov	eax, 1	# tmp749,
 9092      00
 9093 36f8 48C1EE06 		shr	rsi, 6	# tmp352,
 9094 36fc C4E2D1F7 		shlx	rcx, rax, rbp	# _105, tmp749, index
 9094      C8
 9095              	.LVL473:
 9096              	.LBB423:
 9097              	.LBI419:
 136:sieve_extend.c **** //#if __APPLE__
 9098              		.loc 1 136 20 view .LVU3038
 9099              	.LBB421:
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9100              		.loc 1 164 4 view .LVU3039
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9101              		.loc 1 165 4 view .LVU3040
 9102              	# sieve_extend.c:165:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9103              		.loc 1 165 78 is_stmt 0 view .LVU3041
 9104 3701 498D04F6 		lea	rax, [r14+rsi*8]	# index_ptr,
 9105              	.LVL474:
 166:sieve_extend.c **** 
 9106              		.loc 1 166 4 is_stmt 1 view .LVU3042
 170:sieve_extend.c ****        *index_ptr |= mask;
 9107              		.loc 1 170 4 view .LVU3043
 170:sieve_extend.c ****        *index_ptr |= mask;
 9108              		.loc 1 170 10 view .LVU3044
 9109 3705 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 9110 3708 0F830201 		jnb	.L816	#,
 9110      0000
 170:sieve_extend.c ****        *index_ptr |= mask;
 9111              		.loc 1 170 10 is_stmt 0 view .LVU3045
 9112 370e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.521,
 9113              	.LVL475:
 9114              	.L817:
 171:sieve_extend.c ****        index_ptr+=step;
 9115              		.loc 1 171 8 is_stmt 1 view .LVU3046
 9116              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9117              		.loc 1 171 19 is_stmt 0 view .LVU3047
 9118 3712 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9119              		.loc 1 172 8 is_stmt 1 view .LVU3048
 9120              	.LVL476:
 173:sieve_extend.c ****        index_ptr+=step;
 9121              		.loc 1 173 8 view .LVU3049
 9122              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9123              		.loc 1 173 19 is_stmt 0 view .LVU3050
 9124 3715 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9125              		.loc 1 174 8 is_stmt 1 view .LVU3051
 9126              	.LVL477:
 175:sieve_extend.c ****        index_ptr+=step;
 9127              		.loc 1 175 8 view .LVU3052
 9128              	# sieve_extend.c:175:        *index_ptr |= mask;
GAS LISTING /tmp/ccqpmidN.s 			page 251


 175:sieve_extend.c ****        index_ptr+=step;
 9129              		.loc 1 175 19 is_stmt 0 view .LVU3053
 9130 3719 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9131              		.loc 1 176 8 is_stmt 1 view .LVU3054
 9132              	.LVL478:
 177:sieve_extend.c ****        index_ptr+=step;
 9133              		.loc 1 177 8 view .LVU3055
 9134              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9135              		.loc 1 177 19 is_stmt 0 view .LVU3056
 9136 371c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9137              		.loc 1 178 8 is_stmt 1 view .LVU3057
 9138              	.LVL479:
 179:sieve_extend.c ****        index_ptr+=step;
 9139              		.loc 1 179 8 view .LVU3058
 9140 3720 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9141              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9142              		.loc 1 179 19 is_stmt 0 view .LVU3059
 9143 3723 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9144              		.loc 1 180 8 is_stmt 1 view .LVU3060
 9145 3727 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9146              	.LVL480:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9147              		.loc 1 170 10 view .LVU3061
 9148 372a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9149 372d 0F86DD00 		jbe	.L816	#,
 9149      0000
 171:sieve_extend.c ****        index_ptr+=step;
 9150              		.loc 1 171 8 view .LVU3062
 9151              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9152              		.loc 1 171 19 is_stmt 0 view .LVU3063
 9153 3733 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9154              		.loc 1 172 8 is_stmt 1 view .LVU3064
 9155              	.LVL481:
 173:sieve_extend.c ****        index_ptr+=step;
 9156              		.loc 1 173 8 view .LVU3065
 9157              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9158              		.loc 1 173 19 is_stmt 0 view .LVU3066
 9159 3736 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9160              		.loc 1 174 8 is_stmt 1 view .LVU3067
 9161              	.LVL482:
 175:sieve_extend.c ****        index_ptr+=step;
 9162              		.loc 1 175 8 view .LVU3068
 9163              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9164              		.loc 1 175 19 is_stmt 0 view .LVU3069
 9165 373a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9166              		.loc 1 176 8 is_stmt 1 view .LVU3070
GAS LISTING /tmp/ccqpmidN.s 			page 252


 9167              	.LVL483:
 177:sieve_extend.c ****        index_ptr+=step;
 9168              		.loc 1 177 8 view .LVU3071
 9169              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9170              		.loc 1 177 19 is_stmt 0 view .LVU3072
 9171 373d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9172              		.loc 1 178 8 is_stmt 1 view .LVU3073
 9173              	.LVL484:
 179:sieve_extend.c ****        index_ptr+=step;
 9174              		.loc 1 179 8 view .LVU3074
 9175 3741 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9176              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9177              		.loc 1 179 19 is_stmt 0 view .LVU3075
 9178 3744 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9179              		.loc 1 180 8 is_stmt 1 view .LVU3076
 9180 3748 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9181              	.LVL485:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9182              		.loc 1 170 10 view .LVU3077
 9183 374b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9184 374e 0F86BC00 		jbe	.L816	#,
 9184      0000
 171:sieve_extend.c ****        index_ptr+=step;
 9185              		.loc 1 171 8 view .LVU3078
 9186              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9187              		.loc 1 171 19 is_stmt 0 view .LVU3079
 9188 3754 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9189              		.loc 1 172 8 is_stmt 1 view .LVU3080
 9190              	.LVL486:
 173:sieve_extend.c ****        index_ptr+=step;
 9191              		.loc 1 173 8 view .LVU3081
 9192              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9193              		.loc 1 173 19 is_stmt 0 view .LVU3082
 9194 3757 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9195              		.loc 1 174 8 is_stmt 1 view .LVU3083
 9196              	.LVL487:
 175:sieve_extend.c ****        index_ptr+=step;
 9197              		.loc 1 175 8 view .LVU3084
 9198              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9199              		.loc 1 175 19 is_stmt 0 view .LVU3085
 9200 375b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9201              		.loc 1 176 8 is_stmt 1 view .LVU3086
 9202              	.LVL488:
 177:sieve_extend.c ****        index_ptr+=step;
 9203              		.loc 1 177 8 view .LVU3087
 9204              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccqpmidN.s 			page 253


 9205              		.loc 1 177 19 is_stmt 0 view .LVU3088
 9206 375e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9207              		.loc 1 178 8 is_stmt 1 view .LVU3089
 9208              	.LVL489:
 179:sieve_extend.c ****        index_ptr+=step;
 9209              		.loc 1 179 8 view .LVU3090
 9210 3762 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9211              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9212              		.loc 1 179 19 is_stmt 0 view .LVU3091
 9213 3765 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9214              		.loc 1 180 8 is_stmt 1 view .LVU3092
 9215 3769 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9216              	.LVL490:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9217              		.loc 1 170 10 view .LVU3093
 9218 376c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9219 376f 0F869B00 		jbe	.L816	#,
 9219      0000
 171:sieve_extend.c ****        index_ptr+=step;
 9220              		.loc 1 171 8 view .LVU3094
 9221              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9222              		.loc 1 171 19 is_stmt 0 view .LVU3095
 9223 3775 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9224              		.loc 1 172 8 is_stmt 1 view .LVU3096
 9225              	.LVL491:
 173:sieve_extend.c ****        index_ptr+=step;
 9226              		.loc 1 173 8 view .LVU3097
 9227              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9228              		.loc 1 173 19 is_stmt 0 view .LVU3098
 9229 3778 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9230              		.loc 1 174 8 is_stmt 1 view .LVU3099
 9231              	.LVL492:
 175:sieve_extend.c ****        index_ptr+=step;
 9232              		.loc 1 175 8 view .LVU3100
 9233              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9234              		.loc 1 175 19 is_stmt 0 view .LVU3101
 9235 377c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9236              		.loc 1 176 8 is_stmt 1 view .LVU3102
 9237              	.LVL493:
 177:sieve_extend.c ****        index_ptr+=step;
 9238              		.loc 1 177 8 view .LVU3103
 9239              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9240              		.loc 1 177 19 is_stmt 0 view .LVU3104
 9241 377f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9242              		.loc 1 178 8 is_stmt 1 view .LVU3105
 9243              	.LVL494:
GAS LISTING /tmp/ccqpmidN.s 			page 254


 179:sieve_extend.c ****        index_ptr+=step;
 9244              		.loc 1 179 8 view .LVU3106
 9245 3783 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9246              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9247              		.loc 1 179 19 is_stmt 0 view .LVU3107
 9248 3786 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9249              		.loc 1 180 8 is_stmt 1 view .LVU3108
 9250 378a 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9251              	.LVL495:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9252              		.loc 1 170 10 view .LVU3109
 9253 378d 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9254 3790 767E     		jbe	.L816	#,
 171:sieve_extend.c ****        index_ptr+=step;
 9255              		.loc 1 171 8 view .LVU3110
 9256              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9257              		.loc 1 171 19 is_stmt 0 view .LVU3111
 9258 3792 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9259              		.loc 1 172 8 is_stmt 1 view .LVU3112
 9260              	.LVL496:
 173:sieve_extend.c ****        index_ptr+=step;
 9261              		.loc 1 173 8 view .LVU3113
 9262              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9263              		.loc 1 173 19 is_stmt 0 view .LVU3114
 9264 3795 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9265              		.loc 1 174 8 is_stmt 1 view .LVU3115
 9266              	.LVL497:
 175:sieve_extend.c ****        index_ptr+=step;
 9267              		.loc 1 175 8 view .LVU3116
 9268              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9269              		.loc 1 175 19 is_stmt 0 view .LVU3117
 9270 3799 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9271              		.loc 1 176 8 is_stmt 1 view .LVU3118
 9272              	.LVL498:
 177:sieve_extend.c ****        index_ptr+=step;
 9273              		.loc 1 177 8 view .LVU3119
 9274              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9275              		.loc 1 177 19 is_stmt 0 view .LVU3120
 9276 379c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9277              		.loc 1 178 8 is_stmt 1 view .LVU3121
 9278              	.LVL499:
 179:sieve_extend.c ****        index_ptr+=step;
 9279              		.loc 1 179 8 view .LVU3122
 9280 37a0 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9281              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9282              		.loc 1 179 19 is_stmt 0 view .LVU3123
GAS LISTING /tmp/ccqpmidN.s 			page 255


 9283 37a3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9284              		.loc 1 180 8 is_stmt 1 view .LVU3124
 9285 37a7 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9286              	.LVL500:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9287              		.loc 1 170 10 view .LVU3125
 9288 37aa 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9289 37ad 7661     		jbe	.L816	#,
 171:sieve_extend.c ****        index_ptr+=step;
 9290              		.loc 1 171 8 view .LVU3126
 9291              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9292              		.loc 1 171 19 is_stmt 0 view .LVU3127
 9293 37af 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9294              		.loc 1 172 8 is_stmt 1 view .LVU3128
 9295              	.LVL501:
 173:sieve_extend.c ****        index_ptr+=step;
 9296              		.loc 1 173 8 view .LVU3129
 9297              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9298              		.loc 1 173 19 is_stmt 0 view .LVU3130
 9299 37b2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9300              		.loc 1 174 8 is_stmt 1 view .LVU3131
 9301              	.LVL502:
 175:sieve_extend.c ****        index_ptr+=step;
 9302              		.loc 1 175 8 view .LVU3132
 9303              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9304              		.loc 1 175 19 is_stmt 0 view .LVU3133
 9305 37b6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9306              		.loc 1 176 8 is_stmt 1 view .LVU3134
 9307              	.LVL503:
 177:sieve_extend.c ****        index_ptr+=step;
 9308              		.loc 1 177 8 view .LVU3135
 9309              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9310              		.loc 1 177 19 is_stmt 0 view .LVU3136
 9311 37b9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9312              		.loc 1 178 8 is_stmt 1 view .LVU3137
 9313              	.LVL504:
 179:sieve_extend.c ****        index_ptr+=step;
 9314              		.loc 1 179 8 view .LVU3138
 9315 37bd 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9316              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9317              		.loc 1 179 19 is_stmt 0 view .LVU3139
 9318 37c0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9319              		.loc 1 180 8 is_stmt 1 view .LVU3140
 9320 37c4 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9321              	.LVL505:
 170:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccqpmidN.s 			page 256


 9322              		.loc 1 170 10 view .LVU3141
 9323 37c7 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9324 37ca 7644     		jbe	.L816	#,
 171:sieve_extend.c ****        index_ptr+=step;
 9325              		.loc 1 171 8 view .LVU3142
 9326              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 9327              		.loc 1 171 19 is_stmt 0 view .LVU3143
 9328 37cc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9329              		.loc 1 172 8 is_stmt 1 view .LVU3144
 9330              	.LVL506:
 173:sieve_extend.c ****        index_ptr+=step;
 9331              		.loc 1 173 8 view .LVU3145
 9332              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9333              		.loc 1 173 19 is_stmt 0 view .LVU3146
 9334 37cf 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9335              		.loc 1 174 8 is_stmt 1 view .LVU3147
 9336              	.LVL507:
 175:sieve_extend.c ****        index_ptr+=step;
 9337              		.loc 1 175 8 view .LVU3148
 9338              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9339              		.loc 1 175 19 is_stmt 0 view .LVU3149
 9340 37d3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9341              		.loc 1 176 8 is_stmt 1 view .LVU3150
 9342              	.LVL508:
 177:sieve_extend.c ****        index_ptr+=step;
 9343              		.loc 1 177 8 view .LVU3151
 9344              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9345              		.loc 1 177 19 is_stmt 0 view .LVU3152
 9346 37d6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9347              		.loc 1 178 8 is_stmt 1 view .LVU3153
 9348              	.LVL509:
 179:sieve_extend.c ****        index_ptr+=step;
 9349              		.loc 1 179 8 view .LVU3154
 9350 37da 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9351              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9352              		.loc 1 179 19 is_stmt 0 view .LVU3155
 9353 37dd 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9354              		.loc 1 180 8 is_stmt 1 view .LVU3156
 9355 37e1 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9356              	.LVL510:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9357              		.loc 1 170 10 view .LVU3157
 9358 37e4 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9359 37e7 7627     		jbe	.L816	#,
 171:sieve_extend.c ****        index_ptr+=step;
 9360              		.loc 1 171 8 view .LVU3158
 9361              	# sieve_extend.c:171:        *index_ptr |= mask;
GAS LISTING /tmp/ccqpmidN.s 			page 257


 171:sieve_extend.c ****        index_ptr+=step;
 9362              		.loc 1 171 19 is_stmt 0 view .LVU3159
 9363 37e9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_463, offset: 0B], _105
 172:sieve_extend.c ****        *index_ptr |= mask;
 9364              		.loc 1 172 8 is_stmt 1 view .LVU3160
 9365              	.LVL511:
 173:sieve_extend.c ****        index_ptr+=step;
 9366              		.loc 1 173 8 view .LVU3161
 9367              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 9368              		.loc 1 173 19 is_stmt 0 view .LVU3162
 9369 37ec 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_463, index: _120, offset: 0B], _105
 174:sieve_extend.c ****        *index_ptr |= mask;
 9370              		.loc 1 174 8 is_stmt 1 view .LVU3163
 9371              	.LVL512:
 175:sieve_extend.c ****        index_ptr+=step;
 9372              		.loc 1 175 8 view .LVU3164
 9373              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 9374              		.loc 1 175 19 is_stmt 0 view .LVU3165
 9375 37f0 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _716, offset: 0B], _105
 176:sieve_extend.c ****        *index_ptr |= mask;
 9376              		.loc 1 176 8 is_stmt 1 view .LVU3166
 9377              	.LVL513:
 177:sieve_extend.c ****        index_ptr+=step;
 9378              		.loc 1 177 8 view .LVU3167
 9379              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 9380              		.loc 1 177 19 is_stmt 0 view .LVU3168
 9381 37f3 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _716, index: _120, offset: 0B], _105
 178:sieve_extend.c ****        *index_ptr |= mask;
 9382              		.loc 1 178 8 is_stmt 1 view .LVU3169
 9383              	.LVL514:
 179:sieve_extend.c ****        index_ptr+=step;
 9384              		.loc 1 179 8 view .LVU3170
 9385 37f7 4801FE   		add	rsi, rdi	# ivtmp.521, tmp349
 9386              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 9387              		.loc 1 179 19 is_stmt 0 view .LVU3171
 9388 37fa 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_463, index: _120, step: 4, offset: 0B], _105
 180:sieve_extend.c ****    }
 9389              		.loc 1 180 8 is_stmt 1 view .LVU3172
 9390 37fe 4801F8   		add	rax, rdi	# index_ptr, tmp349
 9391              	.LVL515:
 170:sieve_extend.c ****        *index_ptr |= mask;
 9392              		.loc 1 170 10 view .LVU3173
 9393 3801 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9394 3804 0F8708FF 		ja	.L817	#,
 9394      FFFF
 9395 380a 660F1F44 		.p2align 4
 9395      0000
 9396              		.p2align 3
 9397              	.L816:
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9398              		.loc 1 183 4 view .LVU3174
 184:sieve_extend.c ****        *index_ptr |= mask;
 9399              		.loc 1 184 4 view .LVU3175
GAS LISTING /tmp/ccqpmidN.s 			page 258


 184:sieve_extend.c ****        *index_ptr |= mask;
 9400              		.loc 1 184 10 view .LVU3176
 9401 3810 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9402 3813 765B     		jbe	.L818	#,
 9403              	.L819:
 185:sieve_extend.c ****        index_ptr+=step;
 9404              		.loc 1 185 8 view .LVU3177
 9405              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9406              		.loc 1 185 19 is_stmt 0 view .LVU3178
 9407 3815 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9408              		.loc 1 186 8 is_stmt 1 view .LVU3179
 9409              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9410              		.loc 1 186 17 is_stmt 0 view .LVU3180
 9411 3818 4801D0   		add	rax, rdx	# index_ptr, _120
 9412              	.LVL516:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9413              		.loc 1 184 10 is_stmt 1 view .LVU3181
 9414 381b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9415 381e 7650     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9416              		.loc 1 185 8 view .LVU3182
 9417              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9418              		.loc 1 185 19 is_stmt 0 view .LVU3183
 9419 3820 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9420              		.loc 1 186 8 is_stmt 1 view .LVU3184
 9421              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9422              		.loc 1 186 17 is_stmt 0 view .LVU3185
 9423 3823 4801D0   		add	rax, rdx	# index_ptr, _120
 9424              	.LVL517:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9425              		.loc 1 184 10 is_stmt 1 view .LVU3186
 9426 3826 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9427 3829 7645     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9428              		.loc 1 185 8 view .LVU3187
 9429              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9430              		.loc 1 185 19 is_stmt 0 view .LVU3188
 9431 382b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9432              		.loc 1 186 8 is_stmt 1 view .LVU3189
 9433              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9434              		.loc 1 186 17 is_stmt 0 view .LVU3190
 9435 382e 4801D0   		add	rax, rdx	# index_ptr, _120
 9436              	.LVL518:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9437              		.loc 1 184 10 is_stmt 1 view .LVU3191
 9438 3831 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9439 3834 763A     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccqpmidN.s 			page 259


 9440              		.loc 1 185 8 view .LVU3192
 9441              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9442              		.loc 1 185 19 is_stmt 0 view .LVU3193
 9443 3836 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9444              		.loc 1 186 8 is_stmt 1 view .LVU3194
 9445              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9446              		.loc 1 186 17 is_stmt 0 view .LVU3195
 9447 3839 4801D0   		add	rax, rdx	# index_ptr, _120
 9448              	.LVL519:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9449              		.loc 1 184 10 is_stmt 1 view .LVU3196
 9450 383c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9451 383f 762F     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9452              		.loc 1 185 8 view .LVU3197
 9453              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9454              		.loc 1 185 19 is_stmt 0 view .LVU3198
 9455 3841 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9456              		.loc 1 186 8 is_stmt 1 view .LVU3199
 9457              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9458              		.loc 1 186 17 is_stmt 0 view .LVU3200
 9459 3844 4801D0   		add	rax, rdx	# index_ptr, _120
 9460              	.LVL520:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9461              		.loc 1 184 10 is_stmt 1 view .LVU3201
 9462 3847 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9463 384a 7624     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9464              		.loc 1 185 8 view .LVU3202
 9465              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9466              		.loc 1 185 19 is_stmt 0 view .LVU3203
 9467 384c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9468              		.loc 1 186 8 is_stmt 1 view .LVU3204
 9469              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9470              		.loc 1 186 17 is_stmt 0 view .LVU3205
 9471 384f 4801D0   		add	rax, rdx	# index_ptr, _120
 9472              	.LVL521:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9473              		.loc 1 184 10 is_stmt 1 view .LVU3206
 9474 3852 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9475 3855 7619     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9476              		.loc 1 185 8 view .LVU3207
 9477              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9478              		.loc 1 185 19 is_stmt 0 view .LVU3208
 9479 3857 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
GAS LISTING /tmp/ccqpmidN.s 			page 260


 9480              		.loc 1 186 8 is_stmt 1 view .LVU3209
 9481              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9482              		.loc 1 186 17 is_stmt 0 view .LVU3210
 9483 385a 4801D0   		add	rax, rdx	# index_ptr, _120
 9484              	.LVL522:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9485              		.loc 1 184 10 is_stmt 1 view .LVU3211
 9486 385d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9487 3860 760E     		jbe	.L818	#,
 185:sieve_extend.c ****        index_ptr+=step;
 9488              		.loc 1 185 8 view .LVU3212
 9489              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 9490              		.loc 1 185 19 is_stmt 0 view .LVU3213
 9491 3862 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_461, offset: 0B], _105
 186:sieve_extend.c ****    }
 9492              		.loc 1 186 8 is_stmt 1 view .LVU3214
 9493              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 9494              		.loc 1 186 17 is_stmt 0 view .LVU3215
 9495 3865 4801D0   		add	rax, rdx	# index_ptr, _120
 9496              	.LVL523:
 184:sieve_extend.c ****        *index_ptr |= mask;
 9497              		.loc 1 184 10 is_stmt 1 view .LVU3216
 9498 3868 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9499 386b 77A8     		ja	.L819	#,
 9500 386d 0F1F00   		.p2align 4
 9501              		.p2align 3
 9502              	.L818:
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9503              		.loc 1 189 4 view .LVU3217
 9504              	# sieve_extend.c:189:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9505              		.loc 1 189 7 is_stmt 0 view .LVU3218
 9506 3870 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9507 3873 745B     		je	.L1044	#,
 9508              	.LVL524:
 9509              	.L820:
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9510              		.loc 1 189 7 view .LVU3219
 9511              	.LBE421:
 9512              	.LBE423:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9513              		.loc 1 407 77 is_stmt 1 view .LVU3220
 9514              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9515              		.loc 1 407 83 is_stmt 0 view .LVU3221
 9516 3875 4C01E5   		add	rbp, r12	# index, step
 9517              	.LVL525:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9518              		.loc 1 407 50 is_stmt 1 view .LVU3222
 9519              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9520              		.loc 1 407 5 is_stmt 0 view .LVU3223
 9521 3878 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 9522 387b 0F876FFE 		ja	.L821	#,
GAS LISTING /tmp/ccqpmidN.s 			page 261


 9522      FFFF
 9523              	.LVL526:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9524              		.loc 1 407 5 view .LVU3224
 9525              	.LBE418:
 9526              	.LBE417:
 9527              	.LBE416:
 9528              	.LBE436:
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9529              		.loc 1 901 11 is_stmt 1 view .LVU3225
 9530              	# sieve_extend.c:901:     for (;range_stop < block_stop;) {
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9531              		.loc 1 901 5 is_stmt 0 view .LVU3226
 9532 3881 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# prephitmp_757, %sfp
 9532      08
 9533              	.LVL527:
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9534              		.loc 1 901 5 view .LVU3227
 9535 3886 4C396424 		cmp	QWORD PTR 16[rsp], r12	# %sfp, prephitmp_757
 9535      10
 9536 388b 0F820CFD 		jb	.L823	#,
 9536      FFFF
 9537              	.L1043:
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9538              		.loc 1 901 5 view .LVU3228
 9539 3891 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 9539      30
 9540 3896 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 9541 3899 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9541      18
 9542              	.LBE442:
 9543              	.LBE450:
 9544              	.LBB451:
 9545              	.LBB452:
 9546              	# sieve_extend.c:796:     if (size < WORD_SIZE_counter)   {
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9547              		.loc 1 796 8 view .LVU3229
 9548 389e 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9549              	.LBE452:
 9550              	.LBE451:
 9551              	.LBB457:
 9552              	.LBB443:
 9553              	# sieve_extend.c:901:     for (;range_stop < block_stop;) {
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9554              		.loc 1 901 5 view .LVU3230
 9555 38a2 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 9555      28
 9556              	.LVL528:
 927:sieve_extend.c **** }
 9557              		.loc 1 927 5 is_stmt 1 view .LVU3231
 927:sieve_extend.c **** }
 9558              		.loc 1 927 5 is_stmt 0 view .LVU3232
 9559              	.LBE443:
 9560              	.LBE457:
 939:sieve_extend.c ****     prime = block.prime;
 9561              		.loc 1 939 5 is_stmt 1 view .LVU3233
 9562              	.LBB458:
GAS LISTING /tmp/ccqpmidN.s 			page 262


 9563              	.LBI451:
 795:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9564              		.loc 1 795 20 view .LVU3234
 9565              	.LBB453:
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9566              		.loc 1 796 5 view .LVU3235
 9567 38a7 4C8B7308 		mov	r14, QWORD PTR 8[rbx]	# prephitmp_757, sieve_90->bits
 9568              	.LVL529:
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9569              		.loc 1 796 5 is_stmt 0 view .LVU3236
 9570 38ab 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_757
 9570      08
 9571              	# sieve_extend.c:796:     if (size < WORD_SIZE_counter)   {
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9572              		.loc 1 796 8 view .LVU3237
 9573 38b0 0F878C00 		ja	.L824	#,
 9573      0000
 9574              	.LVL530:
 9575              	.L801:
 797:sieve_extend.c ****         return; // rapid exit for small sizes
 9576              		.loc 1 797 9 is_stmt 1 view .LVU3238
 9577 38b6 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 9577      08
 9578 38bb 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 9578      38
 9579 38c0 E83BC7FF 		call	extendSieve_smallSize	#
 9579      FF
 9580              	.LVL531:
 798:sieve_extend.c ****     }
 9581              		.loc 1 798 9 view .LVU3239
 9582 38c5 E9A40000 		jmp	.L825	#
 9582      00
 9583              	.LVL532:
 9584 38ca 660F1F44 		.p2align 4,,7
 9584      0000
 9585              		.p2align 3
 9586              	.L1044:
 798:sieve_extend.c ****     }
 9587              		.loc 1 798 9 is_stmt 0 view .LVU3240
 9588              	.LBE453:
 9589              	.LBE458:
 9590              	.LBB459:
 9591              	.LBB444:
 9592              	.LBB437:
 9593              	.LBB427:
 9594              	.LBB426:
 9595              	.LBB425:
 9596              	.LBB424:
 9597              	.LBB422:
 190:sieve_extend.c ****    }
 9598              		.loc 1 190 7 is_stmt 1 view .LVU3241
 9599              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9600              		.loc 1 190 27 is_stmt 0 view .LVU3242
 9601 38d0 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp354, %sfp
 9601      48
 9602              	.LVL533:
GAS LISTING /tmp/ccqpmidN.s 			page 263


 9603              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 9604              		.loc 1 190 18 view .LVU3243
 9605 38d5 490909   		or	QWORD PTR [r9], rcx	# *index_ptr_460, tmp354
 9606 38d8 EB9B     		jmp	.L820	#
 9607              	.LVL534:
 9608 38da 660F1F44 		.p2align 4,,7
 9608      0000
 9609              		.p2align 3
 9610              	.L1042:
 190:sieve_extend.c ****    }
 9611              		.loc 1 190 18 view .LVU3244
 9612              	.LBE422:
 9613              	.LBE424:
 9614              	.LBE425:
 9615              	.LBE426:
 9616              	.LBE427:
 915:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9617              		.loc 1 915 13 is_stmt 1 view .LVU3245
 916:sieve_extend.c ****         }
 9618              		.loc 1 916 13 view .LVU3246
 9619              	.LBB428:
 9620              	.LBI428:
 795:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9621              		.loc 1 795 20 view .LVU3247
 9622              	.LBB429:
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9623              		.loc 1 796 5 view .LVU3248
 9624              	# sieve_extend.c:796:     if (size < WORD_SIZE_counter)   {
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9625              		.loc 1 796 8 is_stmt 0 view .LVU3249
 9626 38e0 4983FF3F 		cmp	r15, 63	# patternsize_bits,
 9627 38e4 0F86FC07 		jbe	.L1045	#,
 9627      0000
 801:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9628              		.loc 1 801 5 is_stmt 1 view .LVU3250
 9629              	.LVL535:
 802:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9630              		.loc 1 802 5 view .LVU3251
 9631              	# sieve_extend.c:801:     const counter_t copy_start  = source_start + size;
 801:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9632              		.loc 1 801 21 is_stmt 0 view .LVU3252
 9633 38ea 4F8D043F 		lea	r8, [r15+r15]	# copy_start,
 9634              	# sieve_extend.c:803:     const bitshift_t source_bit = bitindex_calc(source_start);
 803:sieve_extend.c **** 
 9635              		.loc 1 803 22 view .LVU3253
 9636 38ee 4D89F9   		mov	r9, r15	# source_bit, patternsize_bits
 9637              	# sieve_extend.c:802:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 802:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9638              		.loc 1 802 22 view .LVU3254
 9639 38f1 4183E03F 		and	r8d, 63	# copy_bit,
 9640              	.LVL536:
 803:sieve_extend.c **** 
 9641              		.loc 1 803 5 is_stmt 1 view .LVU3255
 9642              	# sieve_extend.c:803:     const bitshift_t source_bit = bitindex_calc(source_start);
 803:sieve_extend.c **** 
 9643              		.loc 1 803 22 is_stmt 0 view .LVU3256
GAS LISTING /tmp/ccqpmidN.s 			page 264


 9644 38f5 4183E13F 		and	r9d, 63	# source_bit,
 9645              	.LVL537:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9646              		.loc 1 805 5 is_stmt 1 view .LVU3257
 9647              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9648              		.loc 1 805 13 is_stmt 0 view .LVU3258
 9649 38f9 4D39C8   		cmp	r8, r9	# copy_bit, source_bit
 9650              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9651              		.loc 1 805 37 view .LVU3259
 9652 38fc 4C89FA   		mov	rdx, r15	#, patternsize_bits
 9653 38ff 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 9653      10
 9654 3904 4C89FE   		mov	rsi, r15	#, patternsize_bits
 9655              	.LVL538:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9656              		.loc 1 805 37 view .LVU3260
 9657 3907 4C89F7   		mov	rdi, r14	#, _95
 9658              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9659              		.loc 1 805 13 view .LVU3261
 9660 390a 0F82AD01 		jb	.L1046	#,
 9660      0000
 9661              	.LVL539:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9662              		.loc 1 806 10 is_stmt 1 view .LVU3262
 9663              	# sieve_extend.c:806:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9664              		.loc 1 806 13 is_stmt 0 view .LVU3263
 9665 3910 0F869801 		jbe	.L812	#,
 9665      0000
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9666              		.loc 1 806 37 is_stmt 1 view .LVU3264
 9667 3916 E8A5CDFF 		call	extendSieve_shiftright_ivdep	#
 9667      FF
 9668              	.LVL540:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9669              		.loc 1 806 37 is_stmt 0 view .LVU3265
 9670 391b 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 9670      20
 9671              		.p2align 4,,3
 9672 3920 E948FCFF 		jmp	.L809	#
 9672      FF
 9673              	.LVL541:
 9674              	.L1040:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9675              		.loc 1 806 37 view .LVU3266
 9676 3925 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 9676      30
 9677 392a 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 9677      28
 9678 392f 498B4F08 		mov	rcx, QWORD PTR 8[r15]	# prephitmp_757, sieve_90->bits
 9679 3933 48894C24 		mov	QWORD PTR 8[rsp], rcx	# %sfp, prephitmp_757
 9679      08
 9680              	.LVL542:
 9681              	.L808:
GAS LISTING /tmp/ccqpmidN.s 			page 265


 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9682              		.loc 1 806 37 view .LVU3267
 9683              	.LBE429:
 9684              	.LBE428:
 9685              	.LBE437:
 9686              	.LBE444:
 9687              	.LBE459:
 939:sieve_extend.c ****     prime = block.prime;
 9688              		.loc 1 939 5 is_stmt 1 view .LVU3268
 9689              	.LBB460:
 795:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9690              		.loc 1 795 20 view .LVU3269
 9691              	.LBB454:
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9692              		.loc 1 796 5 view .LVU3270
 9693              	# sieve_extend.c:796:     if (size < WORD_SIZE_counter)   {
 796:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9694              		.loc 1 796 8 is_stmt 0 view .LVU3271
 9695 3938 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9696 393c 0F8674FF 		jbe	.L801	#,
 9696      FFFF
 9697              	.LVL543:
 9698              	.L824:
 801:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9699              		.loc 1 801 5 is_stmt 1 view .LVU3272
 802:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9700              		.loc 1 802 5 view .LVU3273
 9701              	# sieve_extend.c:801:     const counter_t copy_start  = source_start + size;
 801:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9702              		.loc 1 801 21 is_stmt 0 view .LVU3274
 9703 3942 488D0416 		lea	rax, [rsi+rdx]	# copy_start,
 9704              	.LVL544:
 9705              	# sieve_extend.c:803:     const bitshift_t source_bit = bitindex_calc(source_start);
 803:sieve_extend.c **** 
 9706              		.loc 1 803 22 view .LVU3275
 9707 3946 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 9708              	# sieve_extend.c:802:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 802:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9709              		.loc 1 802 22 view .LVU3276
 9710 3949 83E03F   		and	eax, 63	# copy_bit,
 9711              	.LVL545:
 803:sieve_extend.c **** 
 9712              		.loc 1 803 5 is_stmt 1 view .LVU3277
 9713              	# sieve_extend.c:803:     const bitshift_t source_bit = bitindex_calc(source_start);
 803:sieve_extend.c **** 
 9714              		.loc 1 803 22 is_stmt 0 view .LVU3278
 9715 394c 4183E43F 		and	r12d, 63	# source_bit,
 9716              	.LVL546:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9717              		.loc 1 805 5 is_stmt 1 view .LVU3279
 9718              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9719              		.loc 1 805 37 is_stmt 0 view .LVU3280
 9720 3950 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 9720      08
 9721              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
GAS LISTING /tmp/ccqpmidN.s 			page 266


 9722              		.loc 1 805 13 view .LVU3281
 9723 3955 4C39E0   		cmp	rax, r12	# copy_bit, source_bit
 9724              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9725              		.loc 1 805 37 view .LVU3282
 9726 3958 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 9726      38
 9727              	# sieve_extend.c:805:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9728              		.loc 1 805 13 view .LVU3283
 9729 395d 0F82A007 		jb	.L1047	#,
 9729      0000
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9730              		.loc 1 806 10 is_stmt 1 view .LVU3284
 9731              	# sieve_extend.c:806:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9732              		.loc 1 806 13 is_stmt 0 view .LVU3285
 9733 3963 0F876301 		ja	.L1048	#,
 9733      0000
 807:sieve_extend.c **** }
 9734              		.loc 1 807 37 is_stmt 1 view .LVU3286
 9735 3969 E8E2E0FF 		call	extendSieve_aligned	#
 9735      FF
 9736              	.LVL547:
 9737              	.L825:
 807:sieve_extend.c **** }
 9738              		.loc 1 807 37 is_stmt 0 view .LVU3287
 9739              	.LBE454:
 9740              	.LBE460:
 940:sieve_extend.c **** 
 9741              		.loc 1 940 5 is_stmt 1 view .LVU3288
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9742              		.loc 1 943 5 view .LVU3289
 9743              	.LBB461:
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9744              		.loc 1 943 10 view .LVU3290
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9745              		.loc 1 943 10 is_stmt 0 view .LVU3291
 9746 396e 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# prime, %sfp
 9746      28
 9747              	.LBB462:
 9748              	.LBB463:
 9749              	.LBB464:
 9750              	.LBB465:
 9751              	.LBB466:
 9752              	# sieve_extend.c:408:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 408:sieve_extend.c ****     }
 9753              		.loc 1 408 9 view .LVU3292
 9754 3973 41BD0100 		mov	r13d, 1	# tmp455,
 9754      0000
 9755              	.LBE466:
 9756              	.LBE465:
 9757              	.LBE464:
 9758              	.LBE463:
 9759              	.LBE462:
 9760              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccqpmidN.s 			page 267


 9761              		.loc 1 943 38 view .LVU3293
 9762 3979 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# blocksize, %sfp
 9762      40
 9763              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9764              		.loc 1 943 83 view .LVU3294
 9765 397e 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# <retval>, %sfp
 9765      30
 9766              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9767              		.loc 1 943 20 view .LVU3295
 9768 3983 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 9768      08000000 
 9768      00
 9769 398c 4D8D5101 		lea	r10, 1[r9]	# tmp451,
 9770 3990 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp451
 9770      20
 9771              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9772              		.loc 1 943 38 view .LVU3296
 9773 3995 488D6EFF 		lea	rbp, -1[rsi]	# block_stop,
 9774              	.LVL548:
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9775              		.loc 1 943 63 is_stmt 1 view .LVU3297
 9776              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9777              		.loc 1 943 83 is_stmt 0 view .LVU3298
 9778 3999 498B5008 		mov	rdx, QWORD PTR 8[r8]	# _8, sieve_90->bits
 9779              	.LVL549:
 9780 399d 0F1F00   		.p2align 4
 9781              		.p2align 3
 9782              	.L831:
 944:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 9783              		.loc 1 944 9 is_stmt 1 view .LVU3299
 9784              	.LBB504:
 9785              	.LBB505:
 9786              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9787              		.loc 1 112 21 is_stmt 0 view .LVU3300
 9788 39a0 4C8B5C24 		mov	r11, QWORD PTR 40[rsp]	# prime, %sfp
 9788      28
 9789 39a5 4839EA   		cmp	rdx, rbp	# _8, block_stop
 9790              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9791              		.loc 1 112 12 view .LVU3301
 9792 39a8 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _95, %sfp
 9792      38
 9793 39ad 480F46EA 		cmovbe	rbp, rdx	# _8,, block_stop
 9794              	.LVL550:
 112:sieve_extend.c ****     return index;
 9795              		.loc 1 112 12 view .LVU3302
 9796              	.LBE505:
 9797              	.LBE504:
 945:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 9798              		.loc 1 945 9 is_stmt 1 view .LVU3303
 9799              	.LBB508:
 9800              	.LBI504:
GAS LISTING /tmp/ccqpmidN.s 			page 268


 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9801              		.loc 1 111 25 view .LVU3304
 9802              	.LBB506:
 112:sieve_extend.c ****     return index;
 9803              		.loc 1 112 5 view .LVU3305
 112:sieve_extend.c ****     return index;
 9804              		.loc 1 112 11 view .LVU3306
 9805              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9806              		.loc 1 112 21 is_stmt 0 view .LVU3307
 9807 39b1 4C89DB   		mov	rbx, r11	# tmp356, prime
 9808 39b4 48C1EB06 		shr	rbx, 6	# tmp356,
 9809              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9810              		.loc 1 112 12 view .LVU3308
 9811 39b8 498B3CDE 		mov	rdi, QWORD PTR [r14+rbx*8]	# *_144, *_144
 9812              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9813              		.loc 1 112 11 view .LVU3309
 9814 39bc 4C0FA3DF 		bt	rdi, r11	# *_144, tmp763
 9815 39c0 0F832501 		jnc	.L828	#,
 9815      0000
 9816 39c6 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp451, %sfp
 9816      20
 9817              	.L829:
 112:sieve_extend.c ****     return index;
 9818              		.loc 1 112 58 is_stmt 1 view .LVU3310
 9819              	.LVL551:
 9820              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9821              		.loc 1 112 21 is_stmt 0 view .LVU3311
 9822 39cb 4989C7   		mov	r15, rax	# tmp361, tmp451
 9823              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9824              		.loc 1 112 63 view .LVU3312
 9825 39ce 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9826              		.loc 1 112 11 is_stmt 1 view .LVU3313
 9827              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9828              		.loc 1 112 21 is_stmt 0 view .LVU3314
 9829 39d1 49C1EF06 		shr	r15, 6	# tmp361,
 9830              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9831              		.loc 1 112 12 view .LVU3315
 9832 39d5 4B8B0CFE 		mov	rcx, QWORD PTR [r14+r15*8]	# *_34, *_34
 9833              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9834              		.loc 1 112 11 view .LVU3316
 9835 39d9 480FA3C1 		bt	rcx, rax	# *_34, tmp451
 9836 39dd 0F83F500 		jnc	.L1015	#,
 9836      0000
 9837 39e3 4C8D6001 		lea	r12, 1[rax]	# tmp459,
 9838              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9839              		.loc 1 112 21 view .LVU3317
 9840 39e7 4D89E0   		mov	r8, r12	# tmp462, tmp451
GAS LISTING /tmp/ccqpmidN.s 			page 269


 9841 39ea 4C89E0   		mov	rax, r12	# tmp451, tmp459
 9842              	.LVL552:
 112:sieve_extend.c ****     return index;
 9843              		.loc 1 112 58 is_stmt 1 view .LVU3318
 9844              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9845              		.loc 1 112 21 is_stmt 0 view .LVU3319
 9846 39ed 49C1E806 		shr	r8, 6	# tmp462,
 9847              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9848              		.loc 1 112 63 view .LVU3320
 9849 39f1 4C89E6   		mov	rsi, r12	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9850              		.loc 1 112 11 is_stmt 1 view .LVU3321
 9851              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9852              		.loc 1 112 12 is_stmt 0 view .LVU3322
 9853 39f4 4F8B0CC6 		mov	r9, QWORD PTR [r14+r8*8]	# *_34, *_34
 9854              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9855              		.loc 1 112 11 view .LVU3323
 9856 39f8 4D0FA3E1 		bt	r9, r12	# *_34, tmp451
 9857 39fc 0F83D600 		jnc	.L1015	#,
 9857      0000
 9858 3a02 498D4424 		lea	rax, 1[r12]	# tmp451,
 9858      01
 9859              	.LVL553:
 112:sieve_extend.c ****     return index;
 9860              		.loc 1 112 58 is_stmt 1 view .LVU3324
 9861              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9862              		.loc 1 112 21 is_stmt 0 view .LVU3325
 9863 3a07 4989C2   		mov	r10, rax	# tmp536, tmp451
 9864              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9865              		.loc 1 112 63 view .LVU3326
 9866 3a0a 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9867              		.loc 1 112 11 is_stmt 1 view .LVU3327
 9868              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9869              		.loc 1 112 21 is_stmt 0 view .LVU3328
 9870 3a0d 49C1EA06 		shr	r10, 6	# tmp536,
 9871              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9872              		.loc 1 112 12 view .LVU3329
 9873 3a11 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_34, *_34
 9874              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9875              		.loc 1 112 11 view .LVU3330
 9876 3a15 490FA3C3 		bt	r11, rax	# *_34, tmp451
 9877 3a19 0F83B900 		jnc	.L1015	#,
 9877      0000
 9878 3a1f 498D4424 		lea	rax, 2[r12]	# tmp451,
 9878      02
 9879              	.LVL554:
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 270


 9880              		.loc 1 112 58 is_stmt 1 view .LVU3331
 9881              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9882              		.loc 1 112 21 is_stmt 0 view .LVU3332
 9883 3a24 4889C3   		mov	rbx, rax	# tmp540, tmp451
 9884              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9885              		.loc 1 112 63 view .LVU3333
 9886 3a27 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9887              		.loc 1 112 11 is_stmt 1 view .LVU3334
 9888              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9889              		.loc 1 112 21 is_stmt 0 view .LVU3335
 9890 3a2a 48C1EB06 		shr	rbx, 6	# tmp540,
 9891              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9892              		.loc 1 112 12 view .LVU3336
 9893 3a2e 498B3CDE 		mov	rdi, QWORD PTR [r14+rbx*8]	# *_34, *_34
 9894              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9895              		.loc 1 112 11 view .LVU3337
 9896 3a32 480FA3C7 		bt	rdi, rax	# *_34, tmp451
 9897 3a36 0F839C00 		jnc	.L1015	#,
 9897      0000
 9898 3a3c 498D4424 		lea	rax, 3[r12]	# tmp451,
 9898      03
 9899              	.LVL555:
 112:sieve_extend.c ****     return index;
 9900              		.loc 1 112 58 is_stmt 1 view .LVU3338
 9901              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9902              		.loc 1 112 21 is_stmt 0 view .LVU3339
 9903 3a41 4989C7   		mov	r15, rax	# tmp544, tmp451
 9904              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9905              		.loc 1 112 63 view .LVU3340
 9906 3a44 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9907              		.loc 1 112 11 is_stmt 1 view .LVU3341
 9908              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9909              		.loc 1 112 21 is_stmt 0 view .LVU3342
 9910 3a47 49C1EF06 		shr	r15, 6	# tmp544,
 9911              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9912              		.loc 1 112 12 view .LVU3343
 9913 3a4b 4B8B0CFE 		mov	rcx, QWORD PTR [r14+r15*8]	# *_34, *_34
 9914              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9915              		.loc 1 112 11 view .LVU3344
 9916 3a4f 480FA3C1 		bt	rcx, rax	# *_34, tmp451
 9917 3a53 0F837F00 		jnc	.L1015	#,
 9917      0000
 9918 3a59 498D4424 		lea	rax, 4[r12]	# tmp451,
 9918      04
 9919              	.LVL556:
GAS LISTING /tmp/ccqpmidN.s 			page 271


 112:sieve_extend.c ****     return index;
 9920              		.loc 1 112 58 is_stmt 1 view .LVU3345
 9921              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9922              		.loc 1 112 21 is_stmt 0 view .LVU3346
 9923 3a5e 4989C0   		mov	r8, rax	# tmp548, tmp451
 9924              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9925              		.loc 1 112 63 view .LVU3347
 9926 3a61 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9927              		.loc 1 112 11 is_stmt 1 view .LVU3348
 9928              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9929              		.loc 1 112 21 is_stmt 0 view .LVU3349
 9930 3a64 49C1E806 		shr	r8, 6	# tmp548,
 9931              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9932              		.loc 1 112 12 view .LVU3350
 9933 3a68 4F8B0CC6 		mov	r9, QWORD PTR [r14+r8*8]	# *_34, *_34
 9934              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9935              		.loc 1 112 11 view .LVU3351
 9936 3a6c 490FA3C1 		bt	r9, rax	# *_34, tmp451
 9937 3a70 7366     		jnc	.L1015	#,
 9938 3a72 498D4424 		lea	rax, 5[r12]	# tmp451,
 9938      05
 9939              	.LVL557:
 112:sieve_extend.c ****     return index;
 9940              		.loc 1 112 58 is_stmt 1 view .LVU3352
 9941              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9942              		.loc 1 112 21 is_stmt 0 view .LVU3353
 9943 3a77 4989C2   		mov	r10, rax	# tmp552, tmp451
 9944              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9945              		.loc 1 112 63 view .LVU3354
 9946 3a7a 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9947              		.loc 1 112 11 is_stmt 1 view .LVU3355
 9948              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9949              		.loc 1 112 21 is_stmt 0 view .LVU3356
 9950 3a7d 49C1EA06 		shr	r10, 6	# tmp552,
 9951              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9952              		.loc 1 112 12 view .LVU3357
 9953 3a81 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_34, *_34
 9954              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9955              		.loc 1 112 11 view .LVU3358
 9956 3a85 490FA3C3 		bt	r11, rax	# *_34, tmp451
 9957 3a89 734D     		jnc	.L1015	#,
 9958 3a8b 498D4424 		lea	rax, 6[r12]	# tmp451,
 9958      06
 9959              	.LVL558:
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 272


 9960              		.loc 1 112 58 is_stmt 1 view .LVU3359
 9961              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9962              		.loc 1 112 21 is_stmt 0 view .LVU3360
 9963 3a90 4889C3   		mov	rbx, rax	# tmp556, tmp451
 9964              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9965              		.loc 1 112 63 view .LVU3361
 9966 3a93 4889C6   		mov	rsi, rax	# prime, tmp451
 112:sieve_extend.c ****     return index;
 9967              		.loc 1 112 11 is_stmt 1 view .LVU3362
 9968              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9969              		.loc 1 112 21 is_stmt 0 view .LVU3363
 9970 3a96 48C1EB06 		shr	rbx, 6	# tmp556,
 9971              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9972              		.loc 1 112 12 view .LVU3364
 9973 3a9a 498B3CDE 		mov	rdi, QWORD PTR [r14+rbx*8]	# *_34, *_34
 9974              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 9975              		.loc 1 112 11 view .LVU3365
 9976 3a9e 480FA3C7 		bt	rdi, rax	# *_34, tmp451
 9977 3aa2 7334     		jnc	.L1015	#,
 9978 3aa4 498D4424 		lea	rax, 7[r12]	# tmp451,
 9978      07
 9979              	.LVL559:
 112:sieve_extend.c ****     return index;
 9980              		.loc 1 112 11 view .LVU3366
 9981 3aa9 E91DFFFF 		jmp	.L829	#
 9981      FF
 9982              	.LVL560:
 9983              	.L812:
 112:sieve_extend.c ****     return index;
 9984              		.loc 1 112 11 view .LVU3367
 9985              	.LBE506:
 9986              	.LBE508:
 9987              	.LBE461:
 9988              	.LBB514:
 9989              	.LBB445:
 9990              	.LBB438:
 9991              	.LBB432:
 9992              	.LBB430:
 807:sieve_extend.c **** }
 9993              		.loc 1 807 37 is_stmt 1 view .LVU3368
 9994 3aae E89DDFFF 		call	extendSieve_aligned	#
 9994      FF
 9995              	.LVL561:
 807:sieve_extend.c **** }
 9996              		.loc 1 807 37 is_stmt 0 view .LVU3369
 9997 3ab3 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 9997      20
 9998 3ab8 E9B0FAFF 		jmp	.L809	#
 9998      FF
 9999              	.LVL562:
 10000              	.L1046:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
GAS LISTING /tmp/ccqpmidN.s 			page 273


 10001              		.loc 1 805 37 is_stmt 1 view .LVU3370
 10002 3abd E80EE5FF 		call	extendSieve_shiftleft	#
 10002      FF
 10003              	.LVL563:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10004              		.loc 1 805 37 is_stmt 0 view .LVU3371
 10005 3ac2 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 10005      20
 10006 3ac7 E9A1FAFF 		jmp	.L809	#
 10006      FF
 10007              	.LVL564:
 10008              	.L1048:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10009              		.loc 1 805 37 view .LVU3372
 10010              	.LBE430:
 10011              	.LBE432:
 10012              	.LBE438:
 10013              	.LBE445:
 10014              	.LBE514:
 10015              	.LBB515:
 10016              	.LBB455:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10017              		.loc 1 806 37 is_stmt 1 view .LVU3373
 10018 3acc E8EFCBFF 		call	extendSieve_shiftright_ivdep	#
 10018      FF
 10019              	.LVL565:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10020              		.loc 1 806 37 is_stmt 0 view .LVU3374
 10021              		.p2align 4,,3
 10022 3ad1 E998FEFF 		jmp	.L825	#
 10022      FF
 10023              	.LVL566:
 10024              		.p2align 4,,7
 10025 3ad6 6690     		.p2align 3
 10026              	.L1015:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10027              		.loc 1 806 37 view .LVU3375
 10028 3ad8 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp451
 10028      20
 10029 3add 488D4001 		lea	rax, 1[rax]	# tmp451,
 10030              	.LVL567:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10031              		.loc 1 806 37 view .LVU3376
 10032 3ae1 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 10032      28
 10033 3ae6 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp451
 10033      20
 10034              	.LVL568:
 10035              	.L828:
 806:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10036              		.loc 1 806 37 view .LVU3377
 10037              	.LBE455:
 10038              	.LBE515:
 10039              	.LBB516:
 10040              	.LBB509:
 10041              	.LBB507:
 113:sieve_extend.c **** }
GAS LISTING /tmp/ccqpmidN.s 			page 274


 10042              		.loc 1 113 5 is_stmt 1 view .LVU3378
 113:sieve_extend.c **** }
 10043              		.loc 1 113 5 is_stmt 0 view .LVU3379
 10044              	.LBE507:
 10045              	.LBE509:
 946:sieve_extend.c ****     } 
 10046              		.loc 1 946 9 is_stmt 1 view .LVU3380
 10047 3aeb 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# prime, %sfp
 10047      28
 10048              	.LBB510:
 10049              	.LBB500:
 10050              	# sieve_extend.c:812:     counter_t start = prime * prime * 2 + prime * 2;
 812:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10051              		.loc 1 812 15 is_stmt 0 view .LVU3381
 10052 3af0 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# index, %sfp
 10052      20
 10053              	.LBE500:
 10054              	.LBE510:
 10055              	# sieve_extend.c:946:         sieve_block_stripe(sieve, block_start, block_stop, prime);
 946:sieve_extend.c ****     } 
 10056              		.loc 1 946 9 view .LVU3382
 10057 3af5 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 10057      30
 10058 3afa 4F8D0C24 		lea	r9, [r12+r12]	# _86,
 10059              	.LBB511:
 10060              	.LBB501:
 10061              	# sieve_extend.c:812:     counter_t start = prime * prime * 2 + prime * 2;
 812:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10062              		.loc 1 812 15 view .LVU3383
 10063 3afe 490FAFF1 		imul	rsi, r9	# index, _86
 10064              	.LBE501:
 10065              	.LBE511:
 10066              	# sieve_extend.c:946:         sieve_block_stripe(sieve, block_start, block_stop, prime);
 946:sieve_extend.c ****     } 
 10067              		.loc 1 946 9 view .LVU3384
 10068 3b02 498B1E   		mov	rbx, QWORD PTR [r14]	# _30, MEM[(uint64_t * *)sieve_90]
 10069              	.LVL569:
 10070              	.LBB512:
 10071              	.LBI462:
 810:sieve_extend.c ****     counter_t prime = prime_start;
 10072              		.loc 1 810 13 is_stmt 1 view .LVU3385
 10073              	.LBB502:
 811:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 10074              		.loc 1 811 5 view .LVU3386
 812:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10075              		.loc 1 812 5 view .LVU3387
 813:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 10076              		.loc 1 813 5 view .LVU3388
 814:sieve_extend.c **** 
 10077              		.loc 1 814 5 view .LVU3389
 816:sieve_extend.c ****     
 10078              		.loc 1 816 5 view .LVU3390
 818:sieve_extend.c ****         step  = prime * 2 + 1;
 10079              		.loc 1 818 5 view .LVU3391
 818:sieve_extend.c ****         step  = prime * 2 + 1;
 10080              		.loc 1 818 11 view .LVU3392
 827:sieve_extend.c ****         step  = prime * 2 + 1;
GAS LISTING /tmp/ccqpmidN.s 			page 275


 10081              		.loc 1 827 11 view .LVU3393
 854:sieve_extend.c ****         step  = prime * 2 + 1;
 10082              		.loc 1 854 11 view .LVU3394
 10083 3b05 4839F5   		cmp	rbp, rsi	# block_stop, index
 10084 3b08 0F829901 		jb	.L839	#,
 10084      0000
 855:sieve_extend.c ****         if unlikely(step > VECTOR_FASTER) break;
 10085              		.loc 1 855 9 view .LVU3395
 10086              	# sieve_extend.c:855:         step  = prime * 2 + 1;
 855:sieve_extend.c ****         if unlikely(step > VECTOR_FASTER) break;
 10087              		.loc 1 855 15 is_stmt 0 view .LVU3396
 10088 3b0e 4983C101 		add	r9, 1	# step,
 10089              	.LVL570:
 856:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10090              		.loc 1 856 9 is_stmt 1 view .LVU3397
 10091              	# sieve_extend.c:856:         if unlikely(step > VECTOR_FASTER) break;
 856:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10092              		.loc 1 856 12 is_stmt 0 view .LVU3398
 10093 3b12 4983F960 		cmp	r9, 96	# step,
 10094 3b16 0F87BC01 		ja	.L864	#,
 10094      0000
 10095 3b1c 4C89E2   		mov	rdx, r12	# prime, prime
 10096 3b1f 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# block_start, %sfp
 10096      08
 10097              	.LVL571:
 10098 3b24 66662E0F 		.p2align 4
 10098      1F840000 
 10098      00000090 
 10099              		.p2align 3
 10100              	.L834:
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10101              		.loc 1 857 9 is_stmt 1 view .LVU3399
 10102              	# sieve_extend.c:857:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10103              		.loc 1 857 12 is_stmt 0 view .LVU3400
 10104 3b30 4C8D7A01 		lea	r15, 1[rdx]	# index,
 10105 3b34 4D39E7   		cmp	r15, r12	# index, block_start
 10106 3b37 7710     		ja	.L835	#,
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10107              		.loc 1 857 47 is_stmt 1 view .LVU3401
 10108              	# sieve_extend.c:857:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10109              		.loc 1 857 67 is_stmt 0 view .LVU3402
 10110 3b39 498D0414 		lea	rax, [r12+rdx]	# _170,
 10111              	# sieve_extend.c:857:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10112              		.loc 1 857 75 view .LVU3403
 10113 3b3d 488D3410 		lea	rsi, [rax+rdx]	# tmp367,
 10114              	.LVL572:
 10115              	# sieve_extend.c:857:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10116              		.loc 1 857 108 view .LVU3404
 10117 3b41 31D2     		xor	edx, edx	# tmp369
 10118              	.LVL573:
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10119              		.loc 1 857 108 view .LVU3405
 10120 3b43 49F7F1   		div	r9	# step
GAS LISTING /tmp/ccqpmidN.s 			page 276


 10121              	.LVL574:
 10122              	# sieve_extend.c:857:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 857:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10123              		.loc 1 857 53 view .LVU3406
 10124 3b46 4829D6   		sub	rsi, rdx	# index, tmp369
 10125              	.LVL575:
 10126              	.L835:
 858:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 10127              		.loc 1 858 9 is_stmt 1 view .LVU3407
 10128 3b49 4889E9   		mov	rcx, rbp	#, block_stop
 10129 3b4c 4C89CA   		mov	rdx, r9	#, step
 10130 3b4f 4889DF   		mov	rdi, rbx	#, _30
 10131 3b52 E8B9D9FF 		call	setBitsTrue_largeRange_vector	#
 10131      FF
 10132              	.LVL576:
 10133              	.L1037:
 859:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 10134              		.loc 1 859 9 view .LVU3408
 10135              	.LBB483:
 10136              	.LBI483:
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10137              		.loc 1 111 25 view .LVU3409
 10138              	.LBB484:
 112:sieve_extend.c ****     return index;
 10139              		.loc 1 112 5 view .LVU3410
 112:sieve_extend.c ****     return index;
 10140              		.loc 1 112 11 view .LVU3411
 10141              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10142              		.loc 1 112 21 is_stmt 0 view .LVU3412
 10143 3b57 4C89F9   		mov	rcx, r15	# tmp371, index
 10144 3b5a 48C1E906 		shr	rcx, 6	# tmp371,
 10145              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10146              		.loc 1 112 12 view .LVU3413
 10147 3b5e 4C8B04CB 		mov	r8, QWORD PTR [rbx+rcx*8]	# *_168,* _30
 10148              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10149              		.loc 1 112 11 view .LVU3414
 10150 3b62 4D0FA3F8 		bt	r8, r15	# *_168, index
 10151 3b66 0F83A400 		jnc	.L836	#,
 10151      0000
 112:sieve_extend.c ****     return index;
 10152              		.loc 1 112 58 is_stmt 1 view .LVU3415
 10153              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10154              		.loc 1 112 63 is_stmt 0 view .LVU3416
 10155 3b6c 4D8D4F01 		lea	r9, 1[r15]	# tmp458,
 10156              	.LVL577:
 10157              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10158              		.loc 1 112 21 view .LVU3417
 10159 3b70 4D89CA   		mov	r10, r9	# tmp376, index
 10160              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10161              		.loc 1 112 63 view .LVU3418
 10162 3b73 4D89CF   		mov	r15, r9	# index, tmp458
GAS LISTING /tmp/ccqpmidN.s 			page 277


 112:sieve_extend.c ****     return index;
 10163              		.loc 1 112 11 is_stmt 1 view .LVU3419
 10164              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10165              		.loc 1 112 21 is_stmt 0 view .LVU3420
 10166 3b76 49C1EA06 		shr	r10, 6	# tmp376,
 10167              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10168              		.loc 1 112 12 view .LVU3421
 10169 3b7a 4E8B1CD3 		mov	r11, QWORD PTR [rbx+r10*8]	# *_179, *_179
 10170              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10171              		.loc 1 112 11 view .LVU3422
 10172 3b7e 4D0FA3CB 		bt	r11, r9	# *_179, index
 10173 3b82 0F838800 		jnc	.L836	#,
 10173      0000
 112:sieve_extend.c ****     return index;
 10174              		.loc 1 112 58 is_stmt 1 view .LVU3423
 10175              	.LVL578:
 10176              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10177              		.loc 1 112 63 is_stmt 0 view .LVU3424
 10178 3b88 4983C701 		add	r15, 1	# index,
 10179              	.LVL579:
 112:sieve_extend.c ****     return index;
 10180              		.loc 1 112 11 is_stmt 1 view .LVU3425
 10181              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10182              		.loc 1 112 21 is_stmt 0 view .LVU3426
 10183 3b8c 4C89FE   		mov	rsi, r15	# tmp508, index
 10184 3b8f 48C1EE06 		shr	rsi, 6	# tmp508,
 10185              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10186              		.loc 1 112 12 view .LVU3427
 10187 3b93 488B3CF3 		mov	rdi, QWORD PTR [rbx+rsi*8]	# *_179, *_179
 10188              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10189              		.loc 1 112 11 view .LVU3428
 10190 3b97 4C0FA3FF 		bt	rdi, r15	# *_179, index
 10191 3b9b 7373     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10192              		.loc 1 112 58 is_stmt 1 view .LVU3429
 10193              	.LVL580:
 10194              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10195              		.loc 1 112 63 is_stmt 0 view .LVU3430
 10196 3b9d 4D8D7902 		lea	r15, 2[r9]	# index,
 10197              	.LVL581:
 112:sieve_extend.c ****     return index;
 10198              		.loc 1 112 11 is_stmt 1 view .LVU3431
 10199              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10200              		.loc 1 112 21 is_stmt 0 view .LVU3432
 10201 3ba1 4D89FE   		mov	r14, r15	# tmp512, index
 10202 3ba4 49C1EE06 		shr	r14, 6	# tmp512,
 10203              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 278


 10204              		.loc 1 112 12 view .LVU3433
 10205 3ba8 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# *_179, *_179
 10206              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10207              		.loc 1 112 11 view .LVU3434
 10208 3bac 4C0FA3F8 		bt	rax, r15	# *_179, index
 10209 3bb0 735E     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10210              		.loc 1 112 58 is_stmt 1 view .LVU3435
 10211              	.LVL582:
 10212              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10213              		.loc 1 112 63 is_stmt 0 view .LVU3436
 10214 3bb2 4D8D7903 		lea	r15, 3[r9]	# index,
 10215              	.LVL583:
 112:sieve_extend.c ****     return index;
 10216              		.loc 1 112 11 is_stmt 1 view .LVU3437
 10217              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10218              		.loc 1 112 21 is_stmt 0 view .LVU3438
 10219 3bb6 4C89FA   		mov	rdx, r15	# tmp516, index
 10220 3bb9 48C1EA06 		shr	rdx, 6	# tmp516,
 10221              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10222              		.loc 1 112 12 view .LVU3439
 10223 3bbd 488B0CD3 		mov	rcx, QWORD PTR [rbx+rdx*8]	# *_179, *_179
 10224              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10225              		.loc 1 112 11 view .LVU3440
 10226 3bc1 4C0FA3F9 		bt	rcx, r15	# *_179, index
 10227 3bc5 7349     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10228              		.loc 1 112 58 is_stmt 1 view .LVU3441
 10229              	.LVL584:
 10230              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10231              		.loc 1 112 63 is_stmt 0 view .LVU3442
 10232 3bc7 4D8D7904 		lea	r15, 4[r9]	# index,
 10233              	.LVL585:
 112:sieve_extend.c ****     return index;
 10234              		.loc 1 112 11 is_stmt 1 view .LVU3443
 10235              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10236              		.loc 1 112 21 is_stmt 0 view .LVU3444
 10237 3bcb 4D89F8   		mov	r8, r15	# tmp520, index
 10238 3bce 49C1E806 		shr	r8, 6	# tmp520,
 10239              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10240              		.loc 1 112 12 view .LVU3445
 10241 3bd2 4E8B14C3 		mov	r10, QWORD PTR [rbx+r8*8]	# *_179, *_179
 10242              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10243              		.loc 1 112 11 view .LVU3446
 10244 3bd6 4D0FA3FA 		bt	r10, r15	# *_179, index
 10245 3bda 7334     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10246              		.loc 1 112 58 is_stmt 1 view .LVU3447
GAS LISTING /tmp/ccqpmidN.s 			page 279


 10247              	.LVL586:
 10248              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10249              		.loc 1 112 63 is_stmt 0 view .LVU3448
 10250 3bdc 4D8D7905 		lea	r15, 5[r9]	# index,
 10251              	.LVL587:
 112:sieve_extend.c ****     return index;
 10252              		.loc 1 112 11 is_stmt 1 view .LVU3449
 10253              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10254              		.loc 1 112 21 is_stmt 0 view .LVU3450
 10255 3be0 4D89FB   		mov	r11, r15	# tmp524, index
 10256 3be3 49C1EB06 		shr	r11, 6	# tmp524,
 10257              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10258              		.loc 1 112 12 view .LVU3451
 10259 3be7 4A8B34DB 		mov	rsi, QWORD PTR [rbx+r11*8]	# *_179, *_179
 10260              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10261              		.loc 1 112 11 view .LVU3452
 10262 3beb 4C0FA3FE 		bt	rsi, r15	# *_179, index
 10263 3bef 731F     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10264              		.loc 1 112 58 is_stmt 1 view .LVU3453
 10265              	.LVL588:
 10266              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10267              		.loc 1 112 63 is_stmt 0 view .LVU3454
 10268 3bf1 4D8D7906 		lea	r15, 6[r9]	# index,
 10269              	.LVL589:
 112:sieve_extend.c ****     return index;
 10270              		.loc 1 112 11 is_stmt 1 view .LVU3455
 10271              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10272              		.loc 1 112 21 is_stmt 0 view .LVU3456
 10273 3bf5 4C89FF   		mov	rdi, r15	# tmp528, index
 10274 3bf8 48C1EF06 		shr	rdi, 6	# tmp528,
 10275              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10276              		.loc 1 112 12 view .LVU3457
 10277 3bfc 4C8B34FB 		mov	r14, QWORD PTR [rbx+rdi*8]	# *_179, *_179
 10278              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10279              		.loc 1 112 11 view .LVU3458
 10280 3c00 4D0FA3FE 		bt	r14, r15	# *_179, index
 10281 3c04 730A     		jnc	.L836	#,
 112:sieve_extend.c ****     return index;
 10282              		.loc 1 112 58 is_stmt 1 view .LVU3459
 10283              	.LVL590:
 10284              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 10285              		.loc 1 112 63 is_stmt 0 view .LVU3460
 10286 3c06 4D8D7907 		lea	r15, 7[r9]	# index,
 10287              	.LVL591:
 112:sieve_extend.c ****     return index;
 10288              		.loc 1 112 11 is_stmt 1 view .LVU3461
 10289 3c0a E948FFFF 		jmp	.L1037	#
GAS LISTING /tmp/ccqpmidN.s 			page 280


 10289      FF
 10290 3c0f 90       		.p2align 4,,7
 10291              		.p2align 3
 10292              	.L836:
 113:sieve_extend.c **** }
 10293              		.loc 1 113 5 view .LVU3462
 10294              	.LVL592:
 113:sieve_extend.c **** }
 10295              		.loc 1 113 5 is_stmt 0 view .LVU3463
 10296              	.LBE484:
 10297              	.LBE483:
 860:sieve_extend.c ****     }
 10298              		.loc 1 860 9 is_stmt 1 view .LVU3464
 10299              	# sieve_extend.c:860:         start = prime * prime * 2 + prime * 2;
 860:sieve_extend.c ****     }
 10300              		.loc 1 860 35 is_stmt 0 view .LVU3465
 10301 3c10 4D8D5F01 		lea	r11, 1[r15]	# _214,
 10302 3c14 4F8D0C3F 		lea	r9, [r15+r15]	# _85,
 10303              	.LVL593:
 10304              	# sieve_extend.c:860:         start = prime * prime * 2 + prime * 2;
 860:sieve_extend.c ****     }
 10305              		.loc 1 860 15 view .LVU3466
 10306 3c18 4C89DE   		mov	rsi, r11	# index, _214
 10307 3c1b 490FAFF1 		imul	rsi, r9	# index, _85
 10308              	.LVL594:
 854:sieve_extend.c ****         step  = prime * 2 + 1;
 10309              		.loc 1 854 11 is_stmt 1 view .LVU3467
 10310 3c1f 4839F5   		cmp	rbp, rsi	# block_stop, index
 10311 3c22 727A     		jb	.L1036	#,
 855:sieve_extend.c ****         if unlikely(step > VECTOR_FASTER) break;
 10312              		.loc 1 855 9 view .LVU3468
 10313              	# sieve_extend.c:855:         step  = prime * 2 + 1;
 855:sieve_extend.c ****         if unlikely(step > VECTOR_FASTER) break;
 10314              		.loc 1 855 15 is_stmt 0 view .LVU3469
 10315 3c24 4983C101 		add	r9, 1	# step,
 10316              	.LVL595:
 856:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10317              		.loc 1 856 9 is_stmt 1 view .LVU3470
 10318              	# sieve_extend.c:856:         if unlikely(step > VECTOR_FASTER) break;
 856:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10319              		.loc 1 856 12 is_stmt 0 view .LVU3471
 10320 3c28 4983F960 		cmp	r9, 96	# step,
 10321 3c2c 0F87AE00 		ja	.L833	#,
 10321      0000
 10322 3c32 4C89FA   		mov	rdx, r15	# prime, index
 10323 3c35 E9F6FEFF 		jmp	.L834	#
 10323      FF
 10324              	.LVL596:
 10325 3c3a 660F1F44 		.p2align 4,,7
 10325      0000
 10326              		.p2align 3
 10327              	.L854:
 10328              	.LBB485:
 10329              	.LBB486:
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 10330              		.loc 1 332 41 is_stmt 1 view .LVU3472
 10331              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
GAS LISTING /tmp/ccqpmidN.s 			page 281


 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 10332              		.loc 1 332 5 is_stmt 0 view .LVU3473
 10333 3c40 4839F5   		cmp	rbp, rsi	# block_stop, index
 10334 3c43 0F837E03 		jnb	.L858	#,
 10334      0000
 10335 3c49 0F1F8000 		.p2align 4
 10335      000000
 10336              		.p2align 3
 10337              	.L859:
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 10338              		.loc 1 332 5 view .LVU3474
 10339              	.LBE486:
 10340              	.LBE485:
 877:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 10341              		.loc 1 877 9 is_stmt 1 view .LVU3475
 10342              	.LVL597:
 10343              	.LBB488:
 10344              	.LBI488:
 117:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 10345              		.loc 1 117 25 view .LVU3476
 10346              	.LBB489:
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 10347              		.loc 1 120 4 view .LVU3477
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10348              		.loc 1 121 4 view .LVU3478
 10349              	# sieve_extend.c:120:    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 10350              		.loc 1 120 23 is_stmt 0 view .LVU3479
 10351 3c50 4C89DF   		mov	rdi, r11	# index_word, _214
 10352              	.LVL598:
 10353              	# sieve_extend.c:121:    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10354              		.loc 1 121 15 view .LVU3480
 10355 3c53 4C89DE   		mov	rsi, r11	# index_bit, _214
 10356              	# sieve_extend.c:120:    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 10357              		.loc 1 120 23 view .LVU3481
 10358 3c56 48C1EF06 		shr	rdi, 6	# index_word,
 10359              	.LVL599:
 10360              	# sieve_extend.c:121:    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 10361              		.loc 1 121 15 view .LVU3482
 10362 3c5a 83E63F   		and	esi, 63	# index_bit,
 10363              	.LVL600:
 122:sieve_extend.c ****    index += distance;
 10364              		.loc 1 122 4 is_stmt 1 view .LVU3483
 10365              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 10366              		.loc 1 122 89 is_stmt 0 view .LVU3484
 10367 3c5d 4C8B3CFB 		mov	r15, QWORD PTR [rbx+rdi*8]	# *_330, *_330
 10368 3c61 C442CBF7 		shrx	r14, r15, rsi	# tmp426, *_330, index_bit
 10368      F7
 10369              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 10370              		.loc 1 122 66 view .LVU3485
 10371 3c66 49F7D6   		not	r14	# tmp428
 10372              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
GAS LISTING /tmp/ccqpmidN.s 			page 282


 122:sieve_extend.c ****    index += distance;
 10373              		.loc 1 122 76 view .LVU3486
 10374 3c69 4C8D24FD 		lea	r12, 0[0+rdi*8]	# _329,
 10374      00000000 
 10375              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 10376              		.loc 1 122 25 view .LVU3487
 10377 3c71 F34D0FBC 		tzcnt	r8, r14	# distance, tmp428
 10377      C6
 10378              	.LVL601:
 123:sieve_extend.c ****    distance += index_bit;
 10379              		.loc 1 123 4 is_stmt 1 view .LVU3488
 10380              	# sieve_extend.c:123:    index += distance;
 123:sieve_extend.c ****    distance += index_bit;
 10381              		.loc 1 123 10 is_stmt 0 view .LVU3489
 10382 3c76 4F8D3C03 		lea	r15, [r11+r8]	# index,
 10383              	.LVL602:
 124:sieve_extend.c **** 
 10384              		.loc 1 124 4 is_stmt 1 view .LVU3490
 126:sieve_extend.c ****        index_word++;
 10385              		.loc 1 126 4 view .LVU3491
 126:sieve_extend.c ****        index_word++;
 10386              		.loc 1 126 10 view .LVU3492
 10387              	# sieve_extend.c:124:    distance += index_bit;
 124:sieve_extend.c **** 
 10388              		.loc 1 124 13 is_stmt 0 view .LVU3493
 10389 3c7a 4901F0   		add	r8, rsi	# distance, index_bit
 10390              	.LVL603:
 10391              	# sieve_extend.c:126:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 126:sieve_extend.c ****        index_word++;
 10392              		.loc 1 126 10 view .LVU3494
 10393 3c7d 4983F840 		cmp	r8, 64	# distance,
 10394 3c81 0F842904 		je	.L1049	#,
 10394      0000
 132:sieve_extend.c **** }
 10395              		.loc 1 132 4 is_stmt 1 view .LVU3495
 10396              	.LVL604:
 132:sieve_extend.c **** }
 10397              		.loc 1 132 4 is_stmt 0 view .LVU3496
 10398              	.LBE489:
 10399              	.LBE488:
 878:sieve_extend.c ****     }
 10400              		.loc 1 878 9 is_stmt 1 view .LVU3497
 10401              	# sieve_extend.c:878:         start = prime * prime * 2 + prime * 2;
 878:sieve_extend.c ****     }
 10402              		.loc 1 878 35 is_stmt 0 view .LVU3498
 10403 3c87 4D8D5F01 		lea	r11, 1[r15]	# _214,
 10404              	# sieve_extend.c:878:         start = prime * prime * 2 + prime * 2;
 878:sieve_extend.c ****     }
 10405              		.loc 1 878 15 view .LVU3499
 10406 3c8b 4C89DE   		mov	rsi, r11	# tmp443, _214
 10407 3c8e 490FAFF7 		imul	rsi, r15	# tmp443, index
 10408 3c92 4801F6   		add	rsi, rsi	# index
 10409              	.LVL605:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 10410              		.loc 1 872 11 is_stmt 1 view .LVU3500
 10411 3c95 4839F5   		cmp	rbp, rsi	# block_stop, index
GAS LISTING /tmp/ccqpmidN.s 			page 283


 10412 3c98 0F830203 		jnb	.L845	#,
 10412      0000
 10413              	.LVL606:
 10414              	.L1036:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 10415              		.loc 1 872 11 is_stmt 0 view .LVU3501
 10416 3c9e 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 10416      30
 10417              	.LVL607:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 10418              		.loc 1 872 11 view .LVU3502
 10419 3ca3 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_90->bits
 10420              	.LVL608:
 10421              	.L839:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 10422              		.loc 1 872 11 view .LVU3503
 10423              	.LBE502:
 10424              	.LBE512:
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10425              		.loc 1 943 91 is_stmt 1 view .LVU3504
 10426              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10427              		.loc 1 943 103 is_stmt 0 view .LVU3505
 10428 3ca7 4C8B4C24 		mov	r9, QWORD PTR 64[rsp]	# blocksize, %sfp
 10428      40
 10429 3cac 4C014C24 		add	QWORD PTR 8[rsp], r9	# %sfp, blocksize
 10429      08
 10430              	.LVL609:
 10431              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10432              		.loc 1 943 128 view .LVU3506
 10433 3cb1 4C01CD   		add	rbp, r9	# block_stop, blocksize
 10434              	.LVL610:
 10435              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10436              		.loc 1 943 103 view .LVU3507
 10437 3cb4 488B4424 		mov	rax, QWORD PTR 8[rsp]	# block_start, %sfp
 10437      08
 10438              	.LVL611:
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10439              		.loc 1 943 63 is_stmt 1 view .LVU3508
 10440              	# sieve_extend.c:943:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 943:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10441              		.loc 1 943 5 is_stmt 0 view .LVU3509
 10442 3cb9 4839C2   		cmp	rdx, rax	# _8, block_start
 10443 3cbc 0F83DEFC 		jnb	.L831	#,
 10443      FFFF
 10444              	.LBE516:
 10445              	# sieve_extend.c:950: }
 950:sieve_extend.c **** 
 10446              		.loc 1 950 1 view .LVU3510
 10447 3cc2 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 10447      30
 10448              	.LVL612:
 950:sieve_extend.c **** 
 10449              		.loc 1 950 1 view .LVU3511
 10450 3cc7 488D6424 		lea	rsp, 88[rsp]	#,
GAS LISTING /tmp/ccqpmidN.s 			page 284


 10450      58
 10451              		.cfi_remember_state
 10452              		.cfi_def_cfa_offset 56
 10453 3ccc 5B       		pop	rbx	#
 10454              		.cfi_def_cfa_offset 48
 10455 3ccd 5D       		pop	rbp	#
 10456              		.cfi_def_cfa_offset 40
 10457              	.LVL613:
 950:sieve_extend.c **** 
 10458              		.loc 1 950 1 view .LVU3512
 10459 3cce 415C     		pop	r12	#
 10460              		.cfi_def_cfa_offset 32
 10461 3cd0 415D     		pop	r13	#
 10462              		.cfi_def_cfa_offset 24
 10463 3cd2 415E     		pop	r14	#
 10464              		.cfi_def_cfa_offset 16
 10465 3cd4 415F     		pop	r15	#
 10466              		.cfi_def_cfa_offset 8
 10467 3cd6 C3       		ret	
 10468              	.LVL614:
 10469              		.p2align 4,,7
 10470 3cd7 90       		.p2align 3
 10471              	.L864:
 10472              		.cfi_restore_state
 10473              	.LBB517:
 10474              	.LBB513:
 10475              	.LBB503:
 10476              	# sieve_extend.c:856:         if unlikely(step > VECTOR_FASTER) break;
 856:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10477              		.loc 1 856 12 view .LVU3513
 10478 3cd8 4D89E7   		mov	r15, r12	# index, prime
 10479 3cdb 4D8D5C24 		lea	r11, 1[r12]	# _214,
 10479      01
 10480              	.LVL615:
 10481              		.p2align 4
 10482              		.p2align 3
 10483              	.L833:
 863:sieve_extend.c ****         step  = prime * 2 + 1;
 10484              		.loc 1 863 11 is_stmt 1 view .LVU3514
 10485              	.LBB491:
 10486              	.LBB480:
 10487              	.LBB477:
 10488              	.LBB467:
 10489              	.LBB468:
 10490              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10491              		.loc 1 164 20 is_stmt 0 view .LVU3515
 10492 3ce0 4889E8   		mov	rax, rbp	# range_stop_word, block_stop
 10493              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 10494              		.loc 1 190 29 view .LVU3516
 10495 3ce3 89E9     		mov	ecx, ebp	# tmp446, block_stop
 10496              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10497              		.loc 1 164 20 view .LVU3517
 10498 3ce5 48C1E806 		shr	rax, 6	# range_stop_word,
 10499              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccqpmidN.s 			page 285


 190:sieve_extend.c ****    }
 10500              		.loc 1 190 29 view .LVU3518
 10501 3ce9 F7D1     		not	ecx	# tmp446
 10502 3ceb 49C7C0FF 		mov	r8, -1	# tmp806,
 10502      FFFFFF
 10503              	# sieve_extend.c:183:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10504              		.loc 1 183 41 view .LVU3519
 10505 3cf2 4C8D0CC3 		lea	r9, [rbx+rax*8]	# range_stop_ptr,
 10506              	.LVL616:
 10507              	# sieve_extend.c:164:    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10508              		.loc 1 164 20 view .LVU3520
 10509 3cf6 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, range_stop_word
 10509      18
 10510              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 10511              		.loc 1 190 29 view .LVU3521
 10512 3cfb C442F3F7 		shrx	r10, r8, rcx	# _323, tmp806, tmp446
 10512      D0
 10513 3d00 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, _323
 10513      10
 10514 3d05 66662E0F 		.p2align 4
 10514      1F840000 
 10514      000000
 10515              		.p2align 3
 10516              	.L861:
 190:sieve_extend.c ****    }
 10517              		.loc 1 190 29 view .LVU3522
 10518              	.LBE468:
 10519              	.LBE467:
 10520              	.LBE477:
 10521              	.LBE480:
 10522              	.LBE491:
 864:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10523              		.loc 1 864 9 is_stmt 1 view .LVU3523
 10524              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10525              		.loc 1 865 12 is_stmt 0 view .LVU3524
 10526 3d10 488B4424 		mov	rax, QWORD PTR 8[rsp]	# block_start, %sfp
 10526      08
 10527              	# sieve_extend.c:864:         step  = prime * 2 + 1;
 864:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10528              		.loc 1 864 15 view .LVU3525
 10529 3d15 4F8D643F 		lea	r12, 1[r15+r15]	# step,
 10529      01
 10530              	.LVL617:
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10531              		.loc 1 865 9 is_stmt 1 view .LVU3526
 10532              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10533              		.loc 1 865 12 is_stmt 0 view .LVU3527
 10534 3d1a 4939C3   		cmp	r11, rax	# _214, block_start
 10535 3d1d 770F     		ja	.L840	#,
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10536              		.loc 1 865 47 is_stmt 1 view .LVU3528
 10537              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
GAS LISTING /tmp/ccqpmidN.s 			page 286


 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10538              		.loc 1 865 67 is_stmt 0 view .LVU3529
 10539 3d1f 4C01F8   		add	rax, r15	# _196, index
 10540              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10541              		.loc 1 865 108 view .LVU3530
 10542 3d22 31D2     		xor	edx, edx	# tmp385
 10543              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10544              		.loc 1 865 75 view .LVU3531
 10545 3d24 4A8D3438 		lea	rsi, [rax+r15]	# tmp383,
 10546              	.LVL618:
 10547              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10548              		.loc 1 865 108 view .LVU3532
 10549 3d28 49F7F4   		div	r12	# step
 10550              	.LVL619:
 10551              	# sieve_extend.c:865:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 865:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10552              		.loc 1 865 53 view .LVU3533
 10553 3d2b 4829D6   		sub	rsi, rdx	# index, tmp385
 10554              	.LVL620:
 10555              	.L840:
 866:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 10556              		.loc 1 866 9 is_stmt 1 view .LVU3534
 10557              	# sieve_extend.c:866:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 866:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 10558              		.loc 1 866 12 is_stmt 0 view .LVU3535
 10559 3d2e 4D89E6   		mov	r14, r12	# tmp387, step
 10560 3d31 49C1E606 		sal	r14, 6	# tmp387,
 10561 3d35 4901F6   		add	r14, rsi	# _202, index
 10562 3d38 4C39F5   		cmp	rbp, r14	# block_stop, _202
 10563 3d3b 0F824702 		jb	.L841	#,
 10563      0000
 10564              	.LVL621:
 10565              	.LBB492:
 10566              	.LBB481:
 10567              	.LBB478:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10568              		.loc 1 407 50 is_stmt 1 view .LVU3536
 10569              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10570              		.loc 1 407 5 is_stmt 0 view .LVU3537
 10571 3d41 4C39F6   		cmp	rsi, r14	# index, _202
 10572 3d44 0F83C701 		jnb	.L852	#,
 10572      0000
 10573              	.LBB473:
 10574              	.LBB469:
 10575              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 10576              		.loc 1 166 133 view .LVU3538
 10577 3d4a 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# range_stop_word, %sfp
 10577      18
 10578              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 10579              		.loc 1 166 110 view .LVU3539
 10580 3d4f 4F8D04A4 		lea	r8, [r12+r12*4]	# tmp397,
GAS LISTING /tmp/ccqpmidN.s 			page 287


 10581              	# sieve_extend.c:172:        index_ptr+=step;
 172:sieve_extend.c ****        *index_ptr |= mask;
 10582              		.loc 1 172 17 view .LVU3540
 10583 3d53 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _291,
 10583      00000000 
 10584              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 10585              		.loc 1 166 133 view .LVU3541
 10586 3d5b 4989FF   		mov	r15, rdi	# tmp399, range_stop_word
 10587 3d5e 4D29C7   		sub	r15, r8	# tmp399, tmp397
 10588              	# sieve_extend.c:166:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 166:sieve_extend.c **** 
 10589              		.loc 1 166 53 view .LVU3542
 10590 3d61 4C39C7   		cmp	rdi, r8	# range_stop_word, tmp397
 10591 3d64 4E8D14FB 		lea	r10, [rbx+r15*8]	# tmp401,
 10592 3d68 4D89E7   		mov	r15, r12	# _743, step
 10593 3d6b 4C0F46D3 		cmovbe	r10, rbx	# _30,, fast_loop_ptr
 10594 3d6f 49C1E003 		sal	r8, 3	# tmp405,
 10595 3d73 49C1E704 		sal	r15, 4	# _743,
 10596 3d77 660F1F84 		.p2align 4
 10596      00000000 
 10596      00
 10597              		.p2align 3
 10598              	.L851:
 166:sieve_extend.c **** 
 10599              		.loc 1 166 53 view .LVU3543
 10600              	.LBE469:
 10601              	.LBE473:
 408:sieve_extend.c ****     }
 10602              		.loc 1 408 9 is_stmt 1 view .LVU3544
 10603 3d80 4889F0   		mov	rax, rsi	# tmp408, index
 10604 3d83 C4C2C9F7 		shlx	rcx, r13, rsi	# _276, tmp455, index
 10604      CD
 10605              	.LVL622:
 10606              	.LBB474:
 10607              	.LBI467:
 136:sieve_extend.c **** //#if __APPLE__
 10608              		.loc 1 136 20 view .LVU3545
 10609              	.LBB470:
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10610              		.loc 1 164 4 view .LVU3546
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10611              		.loc 1 165 4 view .LVU3547
 10612              	.LBE470:
 10613              	.LBE474:
 10614              	# sieve_extend.c:408:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 408:sieve_extend.c ****     }
 10615              		.loc 1 408 9 is_stmt 0 view .LVU3548
 10616 3d88 48C1E806 		shr	rax, 6	# tmp408,
 10617              	.LBB475:
 10618              	.LBB471:
 10619              	# sieve_extend.c:165:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10620              		.loc 1 165 78 view .LVU3549
 10621 3d8c 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 10622              	.LVL623:
 166:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 288


 10623              		.loc 1 166 4 is_stmt 1 view .LVU3550
 170:sieve_extend.c ****        *index_ptr |= mask;
 10624              		.loc 1 170 4 view .LVU3551
 170:sieve_extend.c ****        *index_ptr |= mask;
 10625              		.loc 1 170 10 view .LVU3552
 10626 3d90 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 10627 3d93 0F830701 		jnb	.L846	#,
 10627      0000
 170:sieve_extend.c ****        *index_ptr |= mask;
 10628              		.loc 1 170 10 is_stmt 0 view .LVU3553
 10629 3d99 4A8D3C38 		lea	rdi, [rax+r15]	# ivtmp.478,
 10630              	.L847:
 171:sieve_extend.c ****        index_ptr+=step;
 10631              		.loc 1 171 8 is_stmt 1 view .LVU3554
 10632              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10633              		.loc 1 171 19 is_stmt 0 view .LVU3555
 10634 3d9d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10635              		.loc 1 172 8 is_stmt 1 view .LVU3556
 10636              	.LVL624:
 173:sieve_extend.c ****        index_ptr+=step;
 10637              		.loc 1 173 8 view .LVU3557
 10638              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10639              		.loc 1 173 19 is_stmt 0 view .LVU3558
 10640 3da0 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10641              		.loc 1 174 8 is_stmt 1 view .LVU3559
 10642              	.LVL625:
 175:sieve_extend.c ****        index_ptr+=step;
 10643              		.loc 1 175 8 view .LVU3560
 10644              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10645              		.loc 1 175 19 is_stmt 0 view .LVU3561
 10646 3da4 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10647              		.loc 1 176 8 is_stmt 1 view .LVU3562
 10648              	.LVL626:
 177:sieve_extend.c ****        index_ptr+=step;
 10649              		.loc 1 177 8 view .LVU3563
 10650              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10651              		.loc 1 177 19 is_stmt 0 view .LVU3564
 10652 3da7 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10653              		.loc 1 178 8 is_stmt 1 view .LVU3565
 10654              	.LVL627:
 179:sieve_extend.c ****        index_ptr+=step;
 10655              		.loc 1 179 8 view .LVU3566
 10656 3dab 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10657              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10658              		.loc 1 179 19 is_stmt 0 view .LVU3567
 10659 3dae 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10660              		.loc 1 180 8 is_stmt 1 view .LVU3568
GAS LISTING /tmp/ccqpmidN.s 			page 289


 10661 3db2 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10662              	.LVL628:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10663              		.loc 1 170 10 view .LVU3569
 10664 3db5 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10665 3db8 0F86E200 		jbe	.L846	#,
 10665      0000
 171:sieve_extend.c ****        index_ptr+=step;
 10666              		.loc 1 171 8 view .LVU3570
 10667              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10668              		.loc 1 171 19 is_stmt 0 view .LVU3571
 10669 3dbe 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10670              		.loc 1 172 8 is_stmt 1 view .LVU3572
 10671              	.LVL629:
 173:sieve_extend.c ****        index_ptr+=step;
 10672              		.loc 1 173 8 view .LVU3573
 10673              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10674              		.loc 1 173 19 is_stmt 0 view .LVU3574
 10675 3dc1 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10676              		.loc 1 174 8 is_stmt 1 view .LVU3575
 10677              	.LVL630:
 175:sieve_extend.c ****        index_ptr+=step;
 10678              		.loc 1 175 8 view .LVU3576
 10679              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10680              		.loc 1 175 19 is_stmt 0 view .LVU3577
 10681 3dc5 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10682              		.loc 1 176 8 is_stmt 1 view .LVU3578
 10683              	.LVL631:
 177:sieve_extend.c ****        index_ptr+=step;
 10684              		.loc 1 177 8 view .LVU3579
 10685              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10686              		.loc 1 177 19 is_stmt 0 view .LVU3580
 10687 3dc8 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10688              		.loc 1 178 8 is_stmt 1 view .LVU3581
 10689              	.LVL632:
 179:sieve_extend.c ****        index_ptr+=step;
 10690              		.loc 1 179 8 view .LVU3582
 10691 3dcc 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10692              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10693              		.loc 1 179 19 is_stmt 0 view .LVU3583
 10694 3dcf 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10695              		.loc 1 180 8 is_stmt 1 view .LVU3584
 10696 3dd3 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10697              	.LVL633:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10698              		.loc 1 170 10 view .LVU3585
 10699 3dd6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccqpmidN.s 			page 290


 10700 3dd9 0F86C100 		jbe	.L846	#,
 10700      0000
 171:sieve_extend.c ****        index_ptr+=step;
 10701              		.loc 1 171 8 view .LVU3586
 10702              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10703              		.loc 1 171 19 is_stmt 0 view .LVU3587
 10704 3ddf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10705              		.loc 1 172 8 is_stmt 1 view .LVU3588
 10706              	.LVL634:
 173:sieve_extend.c ****        index_ptr+=step;
 10707              		.loc 1 173 8 view .LVU3589
 10708              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10709              		.loc 1 173 19 is_stmt 0 view .LVU3590
 10710 3de2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10711              		.loc 1 174 8 is_stmt 1 view .LVU3591
 10712              	.LVL635:
 175:sieve_extend.c ****        index_ptr+=step;
 10713              		.loc 1 175 8 view .LVU3592
 10714              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10715              		.loc 1 175 19 is_stmt 0 view .LVU3593
 10716 3de6 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10717              		.loc 1 176 8 is_stmt 1 view .LVU3594
 10718              	.LVL636:
 177:sieve_extend.c ****        index_ptr+=step;
 10719              		.loc 1 177 8 view .LVU3595
 10720              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10721              		.loc 1 177 19 is_stmt 0 view .LVU3596
 10722 3de9 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10723              		.loc 1 178 8 is_stmt 1 view .LVU3597
 10724              	.LVL637:
 179:sieve_extend.c ****        index_ptr+=step;
 10725              		.loc 1 179 8 view .LVU3598
 10726 3ded 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10727              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10728              		.loc 1 179 19 is_stmt 0 view .LVU3599
 10729 3df0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10730              		.loc 1 180 8 is_stmt 1 view .LVU3600
 10731 3df4 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10732              	.LVL638:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10733              		.loc 1 170 10 view .LVU3601
 10734 3df7 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10735 3dfa 0F86A000 		jbe	.L846	#,
 10735      0000
 171:sieve_extend.c ****        index_ptr+=step;
 10736              		.loc 1 171 8 view .LVU3602
 10737              	# sieve_extend.c:171:        *index_ptr |= mask;
GAS LISTING /tmp/ccqpmidN.s 			page 291


 171:sieve_extend.c ****        index_ptr+=step;
 10738              		.loc 1 171 19 is_stmt 0 view .LVU3603
 10739 3e00 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10740              		.loc 1 172 8 is_stmt 1 view .LVU3604
 10741              	.LVL639:
 173:sieve_extend.c ****        index_ptr+=step;
 10742              		.loc 1 173 8 view .LVU3605
 10743              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10744              		.loc 1 173 19 is_stmt 0 view .LVU3606
 10745 3e03 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10746              		.loc 1 174 8 is_stmt 1 view .LVU3607
 10747              	.LVL640:
 175:sieve_extend.c ****        index_ptr+=step;
 10748              		.loc 1 175 8 view .LVU3608
 10749              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10750              		.loc 1 175 19 is_stmt 0 view .LVU3609
 10751 3e07 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10752              		.loc 1 176 8 is_stmt 1 view .LVU3610
 10753              	.LVL641:
 177:sieve_extend.c ****        index_ptr+=step;
 10754              		.loc 1 177 8 view .LVU3611
 10755              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10756              		.loc 1 177 19 is_stmt 0 view .LVU3612
 10757 3e0a 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10758              		.loc 1 178 8 is_stmt 1 view .LVU3613
 10759              	.LVL642:
 179:sieve_extend.c ****        index_ptr+=step;
 10760              		.loc 1 179 8 view .LVU3614
 10761 3e0e 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10762              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10763              		.loc 1 179 19 is_stmt 0 view .LVU3615
 10764 3e11 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10765              		.loc 1 180 8 is_stmt 1 view .LVU3616
 10766 3e15 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10767              	.LVL643:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10768              		.loc 1 170 10 view .LVU3617
 10769 3e18 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10770 3e1b 0F867F00 		jbe	.L846	#,
 10770      0000
 171:sieve_extend.c ****        index_ptr+=step;
 10771              		.loc 1 171 8 view .LVU3618
 10772              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10773              		.loc 1 171 19 is_stmt 0 view .LVU3619
 10774 3e21 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10775              		.loc 1 172 8 is_stmt 1 view .LVU3620
GAS LISTING /tmp/ccqpmidN.s 			page 292


 10776              	.LVL644:
 173:sieve_extend.c ****        index_ptr+=step;
 10777              		.loc 1 173 8 view .LVU3621
 10778              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10779              		.loc 1 173 19 is_stmt 0 view .LVU3622
 10780 3e24 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10781              		.loc 1 174 8 is_stmt 1 view .LVU3623
 10782              	.LVL645:
 175:sieve_extend.c ****        index_ptr+=step;
 10783              		.loc 1 175 8 view .LVU3624
 10784              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10785              		.loc 1 175 19 is_stmt 0 view .LVU3625
 10786 3e28 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10787              		.loc 1 176 8 is_stmt 1 view .LVU3626
 10788              	.LVL646:
 177:sieve_extend.c ****        index_ptr+=step;
 10789              		.loc 1 177 8 view .LVU3627
 10790              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10791              		.loc 1 177 19 is_stmt 0 view .LVU3628
 10792 3e2b 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10793              		.loc 1 178 8 is_stmt 1 view .LVU3629
 10794              	.LVL647:
 179:sieve_extend.c ****        index_ptr+=step;
 10795              		.loc 1 179 8 view .LVU3630
 10796 3e2f 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10797              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10798              		.loc 1 179 19 is_stmt 0 view .LVU3631
 10799 3e32 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10800              		.loc 1 180 8 is_stmt 1 view .LVU3632
 10801 3e36 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10802              	.LVL648:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10803              		.loc 1 170 10 view .LVU3633
 10804 3e39 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10805 3e3c 7662     		jbe	.L846	#,
 171:sieve_extend.c ****        index_ptr+=step;
 10806              		.loc 1 171 8 view .LVU3634
 10807              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10808              		.loc 1 171 19 is_stmt 0 view .LVU3635
 10809 3e3e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10810              		.loc 1 172 8 is_stmt 1 view .LVU3636
 10811              	.LVL649:
 173:sieve_extend.c ****        index_ptr+=step;
 10812              		.loc 1 173 8 view .LVU3637
 10813              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10814              		.loc 1 173 19 is_stmt 0 view .LVU3638
GAS LISTING /tmp/ccqpmidN.s 			page 293


 10815 3e41 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10816              		.loc 1 174 8 is_stmt 1 view .LVU3639
 10817              	.LVL650:
 175:sieve_extend.c ****        index_ptr+=step;
 10818              		.loc 1 175 8 view .LVU3640
 10819              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10820              		.loc 1 175 19 is_stmt 0 view .LVU3641
 10821 3e45 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10822              		.loc 1 176 8 is_stmt 1 view .LVU3642
 10823              	.LVL651:
 177:sieve_extend.c ****        index_ptr+=step;
 10824              		.loc 1 177 8 view .LVU3643
 10825              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10826              		.loc 1 177 19 is_stmt 0 view .LVU3644
 10827 3e48 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10828              		.loc 1 178 8 is_stmt 1 view .LVU3645
 10829              	.LVL652:
 179:sieve_extend.c ****        index_ptr+=step;
 10830              		.loc 1 179 8 view .LVU3646
 10831 3e4c 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10832              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10833              		.loc 1 179 19 is_stmt 0 view .LVU3647
 10834 3e4f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10835              		.loc 1 180 8 is_stmt 1 view .LVU3648
 10836 3e53 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10837              	.LVL653:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10838              		.loc 1 170 10 view .LVU3649
 10839 3e56 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10840 3e59 7645     		jbe	.L846	#,
 171:sieve_extend.c ****        index_ptr+=step;
 10841              		.loc 1 171 8 view .LVU3650
 10842              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10843              		.loc 1 171 19 is_stmt 0 view .LVU3651
 10844 3e5b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10845              		.loc 1 172 8 is_stmt 1 view .LVU3652
 10846              	.LVL654:
 173:sieve_extend.c ****        index_ptr+=step;
 10847              		.loc 1 173 8 view .LVU3653
 10848              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10849              		.loc 1 173 19 is_stmt 0 view .LVU3654
 10850 3e5e 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10851              		.loc 1 174 8 is_stmt 1 view .LVU3655
 10852              	.LVL655:
 175:sieve_extend.c ****        index_ptr+=step;
 10853              		.loc 1 175 8 view .LVU3656
GAS LISTING /tmp/ccqpmidN.s 			page 294


 10854              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10855              		.loc 1 175 19 is_stmt 0 view .LVU3657
 10856 3e62 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10857              		.loc 1 176 8 is_stmt 1 view .LVU3658
 10858              	.LVL656:
 177:sieve_extend.c ****        index_ptr+=step;
 10859              		.loc 1 177 8 view .LVU3659
 10860              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10861              		.loc 1 177 19 is_stmt 0 view .LVU3660
 10862 3e65 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10863              		.loc 1 178 8 is_stmt 1 view .LVU3661
 10864              	.LVL657:
 179:sieve_extend.c ****        index_ptr+=step;
 10865              		.loc 1 179 8 view .LVU3662
 10866 3e69 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10867              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10868              		.loc 1 179 19 is_stmt 0 view .LVU3663
 10869 3e6c 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10870              		.loc 1 180 8 is_stmt 1 view .LVU3664
 10871 3e70 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10872              	.LVL658:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10873              		.loc 1 170 10 view .LVU3665
 10874 3e73 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10875 3e76 7628     		jbe	.L846	#,
 171:sieve_extend.c ****        index_ptr+=step;
 10876              		.loc 1 171 8 view .LVU3666
 10877              	# sieve_extend.c:171:        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 10878              		.loc 1 171 19 is_stmt 0 view .LVU3667
 10879 3e78 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_272, offset: 0B], _276
 172:sieve_extend.c ****        *index_ptr |= mask;
 10880              		.loc 1 172 8 is_stmt 1 view .LVU3668
 10881              	.LVL659:
 173:sieve_extend.c ****        index_ptr+=step;
 10882              		.loc 1 173 8 view .LVU3669
 10883              	# sieve_extend.c:173:        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 10884              		.loc 1 173 19 is_stmt 0 view .LVU3670
 10885 3e7b 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_272, index: _291, offset: 0B], _276
 174:sieve_extend.c ****        *index_ptr |= mask;
 10886              		.loc 1 174 8 is_stmt 1 view .LVU3671
 10887              	.LVL660:
 175:sieve_extend.c ****        index_ptr+=step;
 10888              		.loc 1 175 8 view .LVU3672
 10889              	# sieve_extend.c:175:        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 10890              		.loc 1 175 19 is_stmt 0 view .LVU3673
 10891 3e7f 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _737, offset: 0B], _276
 176:sieve_extend.c ****        *index_ptr |= mask;
 10892              		.loc 1 176 8 is_stmt 1 view .LVU3674
GAS LISTING /tmp/ccqpmidN.s 			page 295


 10893              	.LVL661:
 177:sieve_extend.c ****        index_ptr+=step;
 10894              		.loc 1 177 8 view .LVU3675
 10895              	# sieve_extend.c:177:        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 10896              		.loc 1 177 19 is_stmt 0 view .LVU3676
 10897 3e82 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _737, index: _291, offset: 0B], _276
 178:sieve_extend.c ****        *index_ptr |= mask;
 10898              		.loc 1 178 8 is_stmt 1 view .LVU3677
 10899              	.LVL662:
 179:sieve_extend.c ****        index_ptr+=step;
 10900              		.loc 1 179 8 view .LVU3678
 10901 3e86 4C01C7   		add	rdi, r8	# ivtmp.478, tmp405
 10902              	# sieve_extend.c:179:        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 10903              		.loc 1 179 19 is_stmt 0 view .LVU3679
 10904 3e89 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_272, index: _291, step: 4, offset: 0B], _276
 180:sieve_extend.c ****    }
 10905              		.loc 1 180 8 is_stmt 1 view .LVU3680
 10906 3e8d 4C01C0   		add	rax, r8	# index_ptr, tmp405
 10907              	.LVL663:
 170:sieve_extend.c ****        *index_ptr |= mask;
 10908              		.loc 1 170 10 view .LVU3681
 10909 3e90 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10910 3e93 0F8704FF 		ja	.L847	#,
 10910      FFFF
 10911 3e99 0F1F8000 		.p2align 4
 10911      000000
 10912              		.p2align 3
 10913              	.L846:
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10914              		.loc 1 183 4 view .LVU3682
 184:sieve_extend.c ****        *index_ptr |= mask;
 10915              		.loc 1 184 4 view .LVU3683
 184:sieve_extend.c ****        *index_ptr |= mask;
 10916              		.loc 1 184 10 view .LVU3684
 10917 3ea0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10918 3ea3 765B     		jbe	.L848	#,
 10919              	.L849:
 185:sieve_extend.c ****        index_ptr+=step;
 10920              		.loc 1 185 8 view .LVU3685
 10921              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10922              		.loc 1 185 19 is_stmt 0 view .LVU3686
 10923 3ea5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10924              		.loc 1 186 8 is_stmt 1 view .LVU3687
 10925              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10926              		.loc 1 186 17 is_stmt 0 view .LVU3688
 10927 3ea8 4801D0   		add	rax, rdx	# index_ptr, _291
 10928              	.LVL664:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10929              		.loc 1 184 10 is_stmt 1 view .LVU3689
 10930 3eab 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10931 3eae 7650     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccqpmidN.s 			page 296


 10932              		.loc 1 185 8 view .LVU3690
 10933              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10934              		.loc 1 185 19 is_stmt 0 view .LVU3691
 10935 3eb0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10936              		.loc 1 186 8 is_stmt 1 view .LVU3692
 10937              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10938              		.loc 1 186 17 is_stmt 0 view .LVU3693
 10939 3eb3 4801D0   		add	rax, rdx	# index_ptr, _291
 10940              	.LVL665:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10941              		.loc 1 184 10 is_stmt 1 view .LVU3694
 10942 3eb6 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10943 3eb9 7645     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 10944              		.loc 1 185 8 view .LVU3695
 10945              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10946              		.loc 1 185 19 is_stmt 0 view .LVU3696
 10947 3ebb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10948              		.loc 1 186 8 is_stmt 1 view .LVU3697
 10949              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10950              		.loc 1 186 17 is_stmt 0 view .LVU3698
 10951 3ebe 4801D0   		add	rax, rdx	# index_ptr, _291
 10952              	.LVL666:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10953              		.loc 1 184 10 is_stmt 1 view .LVU3699
 10954 3ec1 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10955 3ec4 763A     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 10956              		.loc 1 185 8 view .LVU3700
 10957              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10958              		.loc 1 185 19 is_stmt 0 view .LVU3701
 10959 3ec6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10960              		.loc 1 186 8 is_stmt 1 view .LVU3702
 10961              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10962              		.loc 1 186 17 is_stmt 0 view .LVU3703
 10963 3ec9 4801D0   		add	rax, rdx	# index_ptr, _291
 10964              	.LVL667:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10965              		.loc 1 184 10 is_stmt 1 view .LVU3704
 10966 3ecc 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10967 3ecf 762F     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 10968              		.loc 1 185 8 view .LVU3705
 10969              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10970              		.loc 1 185 19 is_stmt 0 view .LVU3706
 10971 3ed1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
GAS LISTING /tmp/ccqpmidN.s 			page 297


 10972              		.loc 1 186 8 is_stmt 1 view .LVU3707
 10973              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10974              		.loc 1 186 17 is_stmt 0 view .LVU3708
 10975 3ed4 4801D0   		add	rax, rdx	# index_ptr, _291
 10976              	.LVL668:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10977              		.loc 1 184 10 is_stmt 1 view .LVU3709
 10978 3ed7 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10979 3eda 7624     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 10980              		.loc 1 185 8 view .LVU3710
 10981              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10982              		.loc 1 185 19 is_stmt 0 view .LVU3711
 10983 3edc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10984              		.loc 1 186 8 is_stmt 1 view .LVU3712
 10985              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10986              		.loc 1 186 17 is_stmt 0 view .LVU3713
 10987 3edf 4801D0   		add	rax, rdx	# index_ptr, _291
 10988              	.LVL669:
 184:sieve_extend.c ****        *index_ptr |= mask;
 10989              		.loc 1 184 10 is_stmt 1 view .LVU3714
 10990 3ee2 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10991 3ee5 7619     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 10992              		.loc 1 185 8 view .LVU3715
 10993              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 10994              		.loc 1 185 19 is_stmt 0 view .LVU3716
 10995 3ee7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 10996              		.loc 1 186 8 is_stmt 1 view .LVU3717
 10997              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 10998              		.loc 1 186 17 is_stmt 0 view .LVU3718
 10999 3eea 4801D0   		add	rax, rdx	# index_ptr, _291
 11000              	.LVL670:
 184:sieve_extend.c ****        *index_ptr |= mask;
 11001              		.loc 1 184 10 is_stmt 1 view .LVU3719
 11002 3eed 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11003 3ef0 760E     		jbe	.L848	#,
 185:sieve_extend.c ****        index_ptr+=step;
 11004              		.loc 1 185 8 view .LVU3720
 11005              	# sieve_extend.c:185:        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 11006              		.loc 1 185 19 is_stmt 0 view .LVU3721
 11007 3ef2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_184, offset: 0B], _276
 186:sieve_extend.c ****    }
 11008              		.loc 1 186 8 is_stmt 1 view .LVU3722
 11009              	# sieve_extend.c:186:        index_ptr+=step;
 186:sieve_extend.c ****    }
 11010              		.loc 1 186 17 is_stmt 0 view .LVU3723
 11011 3ef5 4801D0   		add	rax, rdx	# index_ptr, _291
 11012              	.LVL671:
GAS LISTING /tmp/ccqpmidN.s 			page 298


 184:sieve_extend.c ****        *index_ptr |= mask;
 11013              		.loc 1 184 10 is_stmt 1 view .LVU3724
 11014 3ef8 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11015 3efb 77A8     		ja	.L849	#,
 11016 3efd 0F1F00   		.p2align 4
 11017              		.p2align 3
 11018              	.L848:
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11019              		.loc 1 189 4 view .LVU3725
 11020              	# sieve_extend.c:189:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11021              		.loc 1 189 7 is_stmt 0 view .LVU3726
 11022 3f00 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11023 3f03 745B     		je	.L1050	#,
 11024              	.LVL672:
 11025              	.L850:
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11026              		.loc 1 189 7 view .LVU3727
 11027              	.LBE471:
 11028              	.LBE475:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11029              		.loc 1 407 77 is_stmt 1 view .LVU3728
 11030              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11031              		.loc 1 407 83 is_stmt 0 view .LVU3729
 11032 3f05 4C01E6   		add	rsi, r12	# index, step
 11033              	.LVL673:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11034              		.loc 1 407 50 is_stmt 1 view .LVU3730
 11035              	# sieve_extend.c:407:     for (register counter_t index = range_start; index < range_stop_unique; i
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11036              		.loc 1 407 5 is_stmt 0 view .LVU3731
 11037 3f08 4939F6   		cmp	r14, rsi	# _202, index
 11038 3f0b 0F876FFE 		ja	.L851	#,
 11038      FFFF
 11039              	.L852:
 11040              	.LVL674:
 407:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11041              		.loc 1 407 5 view .LVU3732
 11042              	.LBE478:
 11043              	.LBE481:
 11044              	.LBE492:
 868:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11045              		.loc 1 868 9 is_stmt 1 view .LVU3733
 11046              	.LBB493:
 11047              	.LBI493:
 117:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 11048              		.loc 1 117 25 view .LVU3734
 11049              	.LBB494:
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11050              		.loc 1 120 4 view .LVU3735
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11051              		.loc 1 121 4 view .LVU3736
 11052              	# sieve_extend.c:120:    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11053              		.loc 1 120 23 is_stmt 0 view .LVU3737
 11054 3f11 4D89DC   		mov	r12, r11	# index_word, _214
GAS LISTING /tmp/ccqpmidN.s 			page 299


 11055              	.LVL675:
 11056              	# sieve_extend.c:121:    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11057              		.loc 1 121 15 view .LVU3738
 11058 3f14 4C89DE   		mov	rsi, r11	# index_bit, _214
 11059              	.LVL676:
 11060              	# sieve_extend.c:120:    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11061              		.loc 1 120 23 view .LVU3739
 11062 3f17 49C1EC06 		shr	r12, 6	# index_word,
 11063              	.LVL677:
 11064              	# sieve_extend.c:121:    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11065              		.loc 1 121 15 view .LVU3740
 11066 3f1b 83E63F   		and	esi, 63	# index_bit,
 11067              	.LVL678:
 122:sieve_extend.c ****    index += distance;
 11068              		.loc 1 122 4 is_stmt 1 view .LVU3741
 11069              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 11070              		.loc 1 122 89 is_stmt 0 view .LVU3742
 11071 3f1e 4E8B04E3 		mov	r8, QWORD PTR [rbx+r12*8]	# *_247, *_247
 11072 3f22 C4C2CBF7 		shrx	rdx, r8, rsi	# tmp390, *_247, index_bit
 11072      D0
 11073              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 11074              		.loc 1 122 66 view .LVU3743
 11075 3f27 48F7D2   		not	rdx	# tmp392
 11076              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 11077              		.loc 1 122 76 view .LVU3744
 11078 3f2a 4E8D34E5 		lea	r14, 0[0+r12*8]	# _246,
 11078      00000000 
 11079              	# sieve_extend.c:122:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 122:sieve_extend.c ****    index += distance;
 11080              		.loc 1 122 25 view .LVU3745
 11081 3f32 F34C0FBC 		tzcnt	r10, rdx	# distance, tmp392
 11081      D2
 11082              	.LVL679:
 123:sieve_extend.c ****    distance += index_bit;
 11083              		.loc 1 123 4 is_stmt 1 view .LVU3746
 11084              	# sieve_extend.c:123:    index += distance;
 123:sieve_extend.c ****    distance += index_bit;
 11085              		.loc 1 123 10 is_stmt 0 view .LVU3747
 11086 3f37 4F8D3C13 		lea	r15, [r11+r10]	# index,
 11087              	.LVL680:
 124:sieve_extend.c **** 
 11088              		.loc 1 124 4 is_stmt 1 view .LVU3748
 126:sieve_extend.c ****        index_word++;
 11089              		.loc 1 126 4 view .LVU3749
 126:sieve_extend.c ****        index_word++;
 11090              		.loc 1 126 10 view .LVU3750
 11091              	# sieve_extend.c:124:    distance += index_bit;
 124:sieve_extend.c **** 
 11092              		.loc 1 124 13 is_stmt 0 view .LVU3751
 11093 3f3b 4901F2   		add	r10, rsi	# distance, index_bit
 11094              	.LVL681:
GAS LISTING /tmp/ccqpmidN.s 			page 300


 11095              	# sieve_extend.c:126:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 126:sieve_extend.c ****        index_word++;
 11096              		.loc 1 126 10 view .LVU3752
 11097 3f3e 4983FA40 		cmp	r10, 64	# distance,
 11098 3f42 742C     		je	.L1051	#,
 11099              	.LVL682:
 11100              	.L994:
 132:sieve_extend.c **** }
 11101              		.loc 1 132 4 is_stmt 1 view .LVU3753
 132:sieve_extend.c **** }
 11102              		.loc 1 132 4 is_stmt 0 view .LVU3754
 11103              	.LBE494:
 11104              	.LBE493:
 869:sieve_extend.c ****     }
 11105              		.loc 1 869 9 is_stmt 1 view .LVU3755
 11106              	# sieve_extend.c:869:         start = prime * prime * 2 + prime * 2;
 869:sieve_extend.c ****     }
 11107              		.loc 1 869 35 is_stmt 0 view .LVU3756
 11108 3f44 4D8D5F01 		lea	r11, 1[r15]	# _214,
 11109              	# sieve_extend.c:869:         start = prime * prime * 2 + prime * 2;
 869:sieve_extend.c ****     }
 11110              		.loc 1 869 15 view .LVU3757
 11111 3f48 4C89DE   		mov	rsi, r11	# tmp418, _214
 11112 3f4b 490FAFF7 		imul	rsi, r15	# tmp418, index
 11113              	.LVL683:
 869:sieve_extend.c ****     }
 11114              		.loc 1 869 15 view .LVU3758
 11115 3f4f 4801F6   		add	rsi, rsi	# index
 11116              	.LVL684:
 863:sieve_extend.c ****         step  = prime * 2 + 1;
 11117              		.loc 1 863 11 is_stmt 1 view .LVU3759
 11118 3f52 4839F5   		cmp	rbp, rsi	# block_stop, index
 11119 3f55 0F83B5FD 		jnb	.L861	#,
 11119      FFFF
 863:sieve_extend.c ****         step  = prime * 2 + 1;
 11120              		.loc 1 863 11 is_stmt 0 view .LVU3760
 11121 3f5b E93EFDFF 		jmp	.L1036	#
 11121      FF
 11122              	.LVL685:
 11123              		.p2align 4,,7
 11124              		.p2align 3
 11125              	.L1050:
 11126              	.LBB496:
 11127              	.LBB482:
 11128              	.LBB479:
 11129              	.LBB476:
 11130              	.LBB472:
 190:sieve_extend.c ****    }
 11131              		.loc 1 190 7 is_stmt 1 view .LVU3761
 11132              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 11133              		.loc 1 190 27 is_stmt 0 view .LVU3762
 11134 3f60 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp410, %sfp
 11134      10
 11135              	.LVL686:
 11136              	# sieve_extend.c:190:       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
GAS LISTING /tmp/ccqpmidN.s 			page 301


 11137              		.loc 1 190 18 view .LVU3763
 11138 3f65 490909   		or	QWORD PTR [r9], rcx	# *index_ptr_439, tmp410
 11139 3f68 EB9B     		jmp	.L850	#
 11140              	.LVL687:
 11141 3f6a 660F1F44 		.p2align 4,,7
 11141      0000
 11142              		.p2align 3
 11143              	.L1051:
 190:sieve_extend.c ****    }
 11144              		.loc 1 190 18 view .LVU3764
 11145              	.LBE472:
 11146              	.LBE476:
 11147              	.LBE479:
 11148              	.LBE482:
 11149              	.LBE496:
 11150              	.LBB497:
 11151              	.LBB495:
 127:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11152              		.loc 1 127 8 is_stmt 1 view .LVU3765
 128:sieve_extend.c ****        index += distance;
 11153              		.loc 1 128 8 view .LVU3766
 11154              	# sieve_extend.c:128:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 11155              		.loc 1 128 48 is_stmt 0 view .LVU3767
 11156 3f70 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_259, *_259
 11156      08
 11157 3f75 49F7D3   		not	r11	# tmp411
 11158              	.LVL688:
 129:sieve_extend.c ****    }
 11159              		.loc 1 129 8 is_stmt 1 view .LVU3768
 11160              	# sieve_extend.c:128:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 11161              		.loc 1 128 17 is_stmt 0 view .LVU3769
 11162 3f78 F3490FBC 		tzcnt	rcx, r11	# distance, tmp411
 11162      CB
 11163              	.LVL689:
 11164              	# sieve_extend.c:129:        index += distance;
 129:sieve_extend.c ****    }
 11165              		.loc 1 129 14 view .LVU3770
 11166 3f7d 4901CF   		add	r15, rcx	# index, distance
 11167              	.LVL690:
 126:sieve_extend.c ****        index_word++;
 11168              		.loc 1 126 10 is_stmt 1 view .LVU3771
 132:sieve_extend.c **** }
 11169              		.loc 1 132 4 view .LVU3772
 132:sieve_extend.c **** }
 11170              		.loc 1 132 4 is_stmt 0 view .LVU3773
 11171              	.LBE495:
 11172              	.LBE497:
 869:sieve_extend.c ****     }
 11173              		.loc 1 869 9 is_stmt 1 view .LVU3774
 11174 3f80 EBC2     		jmp	.L994	#
 11175              	.LVL691:
 11176              		.p2align 4,,7
 11177 3f82 660F1F44 		.p2align 3
 11177      0000
 11178              	.L841:
GAS LISTING /tmp/ccqpmidN.s 			page 302


 872:sieve_extend.c ****         step  = prime * 2 + 1;
 11179              		.loc 1 872 11 view .LVU3775
 11180 3f88 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# block_start, %sfp
 11180      08
 11181 3f8d 4839F5   		cmp	rbp, rsi	# block_stop, index
 11182 3f90 0F8208FD 		jb	.L1036	#,
 11182      FFFF
 11183              	.LVL692:
 11184 3f96 662E0F1F 		.p2align 4
 11184      84000000 
 11184      0000
 11185              		.p2align 3
 11186              	.L845:
 873:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11187              		.loc 1 873 9 view .LVU3776
 11188              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11189              		.loc 1 874 12 is_stmt 0 view .LVU3777
 11190 3fa0 4D39CB   		cmp	r11, r9	# _214, block_start
 11191              	# sieve_extend.c:873:         step  = prime * 2 + 1;
 873:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11192              		.loc 1 873 15 view .LVU3778
 11193 3fa3 4B8D7C3F 		lea	rdi, 1[r15+r15]	# step,
 11193      01
 11194              	.LVL693:
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11195              		.loc 1 874 9 is_stmt 1 view .LVU3779
 11196              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11197              		.loc 1 874 12 is_stmt 0 view .LVU3780
 11198 3fa8 0F8792FC 		ja	.L854	#,
 11198      FFFF
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11199              		.loc 1 874 47 is_stmt 1 view .LVU3781
 11200              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11201              		.loc 1 874 67 is_stmt 0 view .LVU3782
 11202 3fae 4B8D040F 		lea	rax, [r15+r9]	# _218,
 11203              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11204              		.loc 1 874 108 view .LVU3783
 11205 3fb2 31D2     		xor	edx, edx	# tmp422
 11206              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11207              		.loc 1 874 75 view .LVU3784
 11208 3fb4 4A8D3438 		lea	rsi, [rax+r15]	# tmp420,
 11209              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11210              		.loc 1 874 108 view .LVU3785
 11211 3fb8 48F7F7   		div	rdi	# step
 11212              	.LVL694:
 11213              	# sieve_extend.c:874:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 874:sieve_extend.c ****         if likely(start <= block_stop)
 11214              		.loc 1 874 53 view .LVU3786
 11215 3fbb 4829D6   		sub	rsi, rdx	# index, tmp422
 11216              	.LVL695:
 875:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
GAS LISTING /tmp/ccqpmidN.s 			page 303


 11217              		.loc 1 875 9 is_stmt 1 view .LVU3787
 11218              	# sieve_extend.c:875:         if likely(start <= block_stop)
 875:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 11219              		.loc 1 875 12 is_stmt 0 view .LVU3788
 11220 3fbe 4839F5   		cmp	rbp, rsi	# block_stop, index
 11221 3fc1 0F8289FC 		jb	.L859	#,
 11221      FFFF
 11222              	.LVL696:
 11223              	.L858:
 11224              	.LBB498:
 11225              	.LBB487:
 333:sieve_extend.c ****     }
 11226              		.loc 1 333 9 is_stmt 1 view .LVU3789
 11227              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11228              		.loc 1 333 36 is_stmt 0 view .LVU3790
 11229 3fc7 4989F7   		mov	r15, rsi	# tmp431, index
 11230              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11231              		.loc 1 333 39 view .LVU3791
 11232 3fca C442C9F7 		shlx	r12, r13, rsi	# tmp434, tmp455, index
 11232      E5
 11233              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11234              		.loc 1 333 36 view .LVU3792
 11235 3fcf 49C1EF06 		shr	r15, 6	# tmp431,
 11236              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11237              		.loc 1 332 68 view .LVU3793
 11238 3fd3 4801FE   		add	rsi, rdi	# index, step
 11239              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11240              		.loc 1 333 36 view .LVU3794
 11241 3fd6 4E0924FB 		or	QWORD PTR [rbx+r15*8], r12	# *_229, tmp434
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11242              		.loc 1 332 62 is_stmt 1 view .LVU3795
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11243              		.loc 1 332 41 view .LVU3796
 11244              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11245              		.loc 1 332 5 is_stmt 0 view .LVU3797
 11246 3fda 4839F5   		cmp	rbp, rsi	# block_stop, index
 11247 3fdd 0F826DFC 		jb	.L859	#,
 11247      FFFF
 333:sieve_extend.c ****     }
 11248              		.loc 1 333 9 is_stmt 1 view .LVU3798
 11249              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11250              		.loc 1 333 36 is_stmt 0 view .LVU3799
 11251 3fe3 4989F6   		mov	r14, rsi	# tmp468, index
 11252              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11253              		.loc 1 333 39 view .LVU3800
 11254 3fe6 C442C9F7 		shlx	r8, r13, rsi	# tmp471, tmp455, index
 11254      C5
 11255              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 304


 11256              		.loc 1 333 36 view .LVU3801
 11257 3feb 49C1EE06 		shr	r14, 6	# tmp468,
 11258              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11259              		.loc 1 332 68 view .LVU3802
 11260 3fef 4801FE   		add	rsi, rdi	# index, step
 11261              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11262              		.loc 1 333 36 view .LVU3803
 11263 3ff2 4E0904F3 		or	QWORD PTR [rbx+r14*8], r8	# *_229, tmp471
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11264              		.loc 1 332 62 is_stmt 1 view .LVU3804
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11265              		.loc 1 332 41 view .LVU3805
 11266              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11267              		.loc 1 332 5 is_stmt 0 view .LVU3806
 11268 3ff6 4839F5   		cmp	rbp, rsi	# block_stop, index
 11269 3ff9 0F8251FC 		jb	.L859	#,
 11269      FFFF
 333:sieve_extend.c ****     }
 11270              		.loc 1 333 9 is_stmt 1 view .LVU3807
 11271              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11272              		.loc 1 333 36 is_stmt 0 view .LVU3808
 11273 3fff 4989F2   		mov	r10, rsi	# tmp473, index
 11274              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11275              		.loc 1 333 39 view .LVU3809
 11276 4002 C4C2C9F7 		shlx	rcx, r13, rsi	# tmp476, tmp455, index
 11276      CD
 11277              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11278              		.loc 1 333 36 view .LVU3810
 11279 4007 49C1EA06 		shr	r10, 6	# tmp473,
 11280              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11281              		.loc 1 332 68 view .LVU3811
 11282 400b 4801FE   		add	rsi, rdi	# index, step
 11283              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11284              		.loc 1 333 36 view .LVU3812
 11285 400e 4A090CD3 		or	QWORD PTR [rbx+r10*8], rcx	# *_229, tmp476
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11286              		.loc 1 332 62 is_stmt 1 view .LVU3813
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11287              		.loc 1 332 41 view .LVU3814
 11288              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11289              		.loc 1 332 5 is_stmt 0 view .LVU3815
 11290 4012 4839F5   		cmp	rbp, rsi	# block_stop, index
 11291 4015 0F8235FC 		jb	.L859	#,
 11291      FFFF
 333:sieve_extend.c ****     }
 11292              		.loc 1 333 9 is_stmt 1 view .LVU3816
 11293              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 305


 11294              		.loc 1 333 36 is_stmt 0 view .LVU3817
 11295 401b 4889F0   		mov	rax, rsi	# tmp478, index
 11296              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11297              		.loc 1 333 39 view .LVU3818
 11298 401e C4C2C9F7 		shlx	rdx, r13, rsi	# tmp481, tmp455, index
 11298      D5
 11299              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11300              		.loc 1 333 36 view .LVU3819
 11301 4023 48C1E806 		shr	rax, 6	# tmp478,
 11302              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11303              		.loc 1 332 68 view .LVU3820
 11304 4027 4801FE   		add	rsi, rdi	# index, step
 11305              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11306              		.loc 1 333 36 view .LVU3821
 11307 402a 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_229, tmp481
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11308              		.loc 1 332 62 is_stmt 1 view .LVU3822
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11309              		.loc 1 332 41 view .LVU3823
 11310              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11311              		.loc 1 332 5 is_stmt 0 view .LVU3824
 11312 402e 4839F5   		cmp	rbp, rsi	# block_stop, index
 11313 4031 0F8219FC 		jb	.L859	#,
 11313      FFFF
 333:sieve_extend.c ****     }
 11314              		.loc 1 333 9 is_stmt 1 view .LVU3825
 11315              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11316              		.loc 1 333 36 is_stmt 0 view .LVU3826
 11317 4037 4989F7   		mov	r15, rsi	# tmp483, index
 11318              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11319              		.loc 1 333 39 view .LVU3827
 11320 403a C442C9F7 		shlx	r12, r13, rsi	# tmp486, tmp455, index
 11320      E5
 11321              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11322              		.loc 1 333 36 view .LVU3828
 11323 403f 49C1EF06 		shr	r15, 6	# tmp483,
 11324              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11325              		.loc 1 332 68 view .LVU3829
 11326 4043 4801FE   		add	rsi, rdi	# index, step
 11327              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11328              		.loc 1 333 36 view .LVU3830
 11329 4046 4E0924FB 		or	QWORD PTR [rbx+r15*8], r12	# *_229, tmp486
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11330              		.loc 1 332 62 is_stmt 1 view .LVU3831
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11331              		.loc 1 332 41 view .LVU3832
 11332              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
GAS LISTING /tmp/ccqpmidN.s 			page 306


 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11333              		.loc 1 332 5 is_stmt 0 view .LVU3833
 11334 404a 4839F5   		cmp	rbp, rsi	# block_stop, index
 11335 404d 0F82FDFB 		jb	.L859	#,
 11335      FFFF
 333:sieve_extend.c ****     }
 11336              		.loc 1 333 9 is_stmt 1 view .LVU3834
 11337              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11338              		.loc 1 333 36 is_stmt 0 view .LVU3835
 11339 4053 4989F6   		mov	r14, rsi	# tmp488, index
 11340              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11341              		.loc 1 333 39 view .LVU3836
 11342 4056 C442C9F7 		shlx	r8, r13, rsi	# tmp491, tmp455, index
 11342      C5
 11343              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11344              		.loc 1 333 36 view .LVU3837
 11345 405b 49C1EE06 		shr	r14, 6	# tmp488,
 11346              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11347              		.loc 1 332 68 view .LVU3838
 11348 405f 4801FE   		add	rsi, rdi	# index, step
 11349              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11350              		.loc 1 333 36 view .LVU3839
 11351 4062 4E0904F3 		or	QWORD PTR [rbx+r14*8], r8	# *_229, tmp491
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11352              		.loc 1 332 62 is_stmt 1 view .LVU3840
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11353              		.loc 1 332 41 view .LVU3841
 11354              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11355              		.loc 1 332 5 is_stmt 0 view .LVU3842
 11356 4066 4839F5   		cmp	rbp, rsi	# block_stop, index
 11357 4069 0F82E1FB 		jb	.L859	#,
 11357      FFFF
 333:sieve_extend.c ****     }
 11358              		.loc 1 333 9 is_stmt 1 view .LVU3843
 11359              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11360              		.loc 1 333 36 is_stmt 0 view .LVU3844
 11361 406f 4989F2   		mov	r10, rsi	# tmp493, index
 11362              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11363              		.loc 1 333 39 view .LVU3845
 11364 4072 C4C2C9F7 		shlx	rcx, r13, rsi	# tmp496, tmp455, index
 11364      CD
 11365              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11366              		.loc 1 333 36 view .LVU3846
 11367 4077 49C1EA06 		shr	r10, 6	# tmp493,
 11368              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11369              		.loc 1 332 68 view .LVU3847
 11370 407b 4801FE   		add	rsi, rdi	# index, step
GAS LISTING /tmp/ccqpmidN.s 			page 307


 11371              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11372              		.loc 1 333 36 view .LVU3848
 11373 407e 4A090CD3 		or	QWORD PTR [rbx+r10*8], rcx	# *_229, tmp496
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11374              		.loc 1 332 62 is_stmt 1 view .LVU3849
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11375              		.loc 1 332 41 view .LVU3850
 11376              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11377              		.loc 1 332 5 is_stmt 0 view .LVU3851
 11378 4082 4839F5   		cmp	rbp, rsi	# block_stop, index
 11379 4085 0F82C5FB 		jb	.L859	#,
 11379      FFFF
 333:sieve_extend.c ****     }
 11380              		.loc 1 333 9 is_stmt 1 view .LVU3852
 11381              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11382              		.loc 1 333 36 is_stmt 0 view .LVU3853
 11383 408b 4889F0   		mov	rax, rsi	# tmp498, index
 11384              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11385              		.loc 1 333 39 view .LVU3854
 11386 408e C4C2C9F7 		shlx	rdx, r13, rsi	# tmp501, tmp455, index
 11386      D5
 11387              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11388              		.loc 1 333 36 view .LVU3855
 11389 4093 48C1E806 		shr	rax, 6	# tmp498,
 11390              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11391              		.loc 1 332 68 view .LVU3856
 11392 4097 4801FE   		add	rsi, rdi	# index, step
 11393              	# sieve_extend.c:333:         bitarray[wordindex(index)] |= markmask(index);
 333:sieve_extend.c ****     }
 11394              		.loc 1 333 36 view .LVU3857
 11395 409a 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_229, tmp501
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11396              		.loc 1 332 62 is_stmt 1 view .LVU3858
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11397              		.loc 1 332 41 view .LVU3859
 11398              	# sieve_extend.c:332:     for (counter_t index = range_start; index <= range_stop; index += step) {
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11399              		.loc 1 332 5 is_stmt 0 view .LVU3860
 11400 409e 4839F5   		cmp	rbp, rsi	# block_stop, index
 11401 40a1 0F8320FF 		jnb	.L858	#,
 11401      FFFF
 11402 40a7 E9A4FBFF 		jmp	.L859	#
 11402      FF
 11403              	.LVL697:
 11404 40ac 0F1F4000 		.p2align 4,,7
 11405              		.p2align 3
 11406              	.L1049:
 332:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11407              		.loc 1 332 5 view .LVU3861
 11408              	.LBE487:
 11409              	.LBE498:
GAS LISTING /tmp/ccqpmidN.s 			page 308


 11410              	.LBB499:
 11411              	.LBB490:
 127:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11412              		.loc 1 127 8 is_stmt 1 view .LVU3862
 128:sieve_extend.c ****        index += distance;
 11413              		.loc 1 128 8 view .LVU3863
 11414              	# sieve_extend.c:128:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 11415              		.loc 1 128 48 is_stmt 0 view .LVU3864
 11416 40b0 4E8B5C23 		mov	r11, QWORD PTR 8[rbx+r12]	# *_342, *_342
 11416      08
 11417 40b5 49F7D3   		not	r11	# tmp436
 11418              	.LVL698:
 129:sieve_extend.c ****    }
 11419              		.loc 1 129 8 is_stmt 1 view .LVU3865
 11420              	# sieve_extend.c:128:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 11421              		.loc 1 128 17 is_stmt 0 view .LVU3866
 11422 40b8 F34D0FBC 		tzcnt	r10, r11	# distance, tmp436
 11422      D3
 11423              	.LVL699:
 11424              	# sieve_extend.c:129:        index += distance;
 129:sieve_extend.c ****    }
 11425              		.loc 1 129 14 view .LVU3867
 11426 40bd 4D01D7   		add	r15, r10	# index, distance
 11427              	.LVL700:
 126:sieve_extend.c ****        index_word++;
 11428              		.loc 1 126 10 is_stmt 1 view .LVU3868
 132:sieve_extend.c **** }
 11429              		.loc 1 132 4 view .LVU3869
 132:sieve_extend.c **** }
 11430              		.loc 1 132 4 is_stmt 0 view .LVU3870
 11431              	.LBE490:
 11432              	.LBE499:
 878:sieve_extend.c ****     }
 11433              		.loc 1 878 9 is_stmt 1 view .LVU3871
 11434              	# sieve_extend.c:878:         start = prime * prime * 2 + prime * 2;
 878:sieve_extend.c ****     }
 11435              		.loc 1 878 35 is_stmt 0 view .LVU3872
 11436 40c0 4D8D5F01 		lea	r11, 1[r15]	# _214,
 11437              	# sieve_extend.c:878:         start = prime * prime * 2 + prime * 2;
 878:sieve_extend.c ****     }
 11438              		.loc 1 878 15 view .LVU3873
 11439 40c4 4C89D9   		mov	rcx, r11	# tmp441, _214
 11440 40c7 490FAFCF 		imul	rcx, r15	# tmp441, index
 11441 40cb 488D3409 		lea	rsi, [rcx+rcx]	# index,
 11442              	.LVL701:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 11443              		.loc 1 872 11 is_stmt 1 view .LVU3874
 11444 40cf 4839F5   		cmp	rbp, rsi	# block_stop, index
 11445 40d2 0F83C8FE 		jnb	.L845	#,
 11445      FFFF
 11446 40d8 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 11446      30
 11447              	.LVL702:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 11448              		.loc 1 872 11 is_stmt 0 view .LVU3875
GAS LISTING /tmp/ccqpmidN.s 			page 309


 11449 40dd 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_90->bits
 11450 40e1 E9C1FBFF 		jmp	.L839	#
 11450      FF
 11451              	.LVL703:
 11452              	.L1045:
 872:sieve_extend.c ****         step  = prime * 2 + 1;
 11453              		.loc 1 872 11 view .LVU3876
 11454              	.LBE503:
 11455              	.LBE513:
 11456              	.LBE517:
 11457              	.LBB518:
 11458              	.LBB446:
 11459              	.LBB439:
 11460              	.LBB433:
 11461              	.LBB431:
 797:sieve_extend.c ****         return; // rapid exit for small sizes
 11462              		.loc 1 797 9 is_stmt 1 view .LVU3877
 11463 40e6 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 11463      10
 11464 40eb 4C89FA   		mov	rdx, r15	#, patternsize_bits
 11465 40ee 4C89FE   		mov	rsi, r15	#, patternsize_bits
 11466              	.LVL704:
 797:sieve_extend.c ****         return; // rapid exit for small sizes
 11467              		.loc 1 797 9 is_stmt 0 view .LVU3878
 11468 40f1 4C89F7   		mov	rdi, r14	#, _95
 11469 40f4 E807BFFF 		call	extendSieve_smallSize	#
 11469      FF
 11470              	.LVL705:
 798:sieve_extend.c ****     }
 11471              		.loc 1 798 9 is_stmt 1 view .LVU3879
 11472 40f9 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 11472      20
 11473 40fe E96AF4FF 		jmp	.L809	#
 11473      FF
 11474              	.LVL706:
 11475              	.L1047:
 798:sieve_extend.c ****     }
 11476              		.loc 1 798 9 is_stmt 0 view .LVU3880
 11477              	.LBE431:
 11478              	.LBE433:
 11479              	.LBE439:
 11480              	.LBE446:
 11481              	.LBE518:
 11482              	.LBB519:
 11483              	.LBB456:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11484              		.loc 1 805 37 is_stmt 1 view .LVU3881
 11485 4103 E8C8DEFF 		call	extendSieve_shiftleft	#
 11485      FF
 11486              	.LVL707:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11487              		.loc 1 805 37 is_stmt 0 view .LVU3882
 11488              		.p2align 4,,3
 11489 4108 E961F8FF 		jmp	.L825	#
 11489      FF
 11490              	.LVL708:
 11491              	.L1041:
GAS LISTING /tmp/ccqpmidN.s 			page 310


 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11492              		.loc 1 805 37 view .LVU3883
 11493 410d 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 11493      30
 11494              	.LVL709:
 805:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11495              		.loc 1 805 37 view .LVU3884
 11496              	.LBE456:
 11497              	.LBE519:
 11498              	.LBB520:
 11499              	.LBB447:
 11500              	.LBB440:
 11501              	# sieve_extend.c:912:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 912:sieve_extend.c **** 
 11502              		.loc 1 912 12 view .LVU3885
 11503 4112 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 11504 4115 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 11504      18
 11505              	.LVL710:
 912:sieve_extend.c **** 
 11506              		.loc 1 912 12 view .LVU3886
 11507 411a 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11507      28
 11508 411f 498B7E08 		mov	rdi, QWORD PTR 8[r14]	# prephitmp_757, sieve_90->bits
 11509 4123 48897C24 		mov	QWORD PTR 8[rsp], rdi	# %sfp, prephitmp_757
 11509      08
 11510              	.LVL711:
 912:sieve_extend.c **** 
 11511              		.loc 1 912 12 view .LVU3887
 11512 4128 E90BF8FF 		jmp	.L808	#
 11512      FF
 11513              	.LVL712:
 11514              	.L1039:
 912:sieve_extend.c **** 
 11515              		.loc 1 912 12 view .LVU3888
 11516              	.LBE440:
 11517              	# sieve_extend.c:892:     register counter_t prime   = 0;
 892:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11518              		.loc 1 892 24 view .LVU3889
 11519 412d 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 11519      28000000 
 11519      00
 11520              	# sieve_extend.c:897:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 897:sieve_extend.c **** 
 11521              		.loc 1 897 18 view .LVU3890
 11522 4136 31D2     		xor	edx, edx	# block$pattern_size
 11523 4138 31F6     		xor	esi, esi	# block$pattern_start
 11524 413a E977F7FF 		jmp	.L801	#
 11524      FF
 11525              	.LBE447:
 11526              	.LBE520:
 11527              		.cfi_endproc
 11528              	.LFE75:
 11530 413f 90       		.p2align 4
 11532              	tune_benchmark:
 11533              	.LVL713:
 11534              	.LFB82:
GAS LISTING /tmp/ccqpmidN.s 			page 311


1055:sieve_extend.c **** 
1056:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11535              		.loc 1 1056 94 is_stmt 1 view -0
 11536              		.cfi_startproc
 11537              		.loc 1 1056 94 is_stmt 0 view .LVU3892
 11538 4140 4154     		push	r12	#
 11539              		.cfi_def_cfa_offset 16
 11540              		.cfi_offset 12, -16
 11541              	# sieve_extend.c:1057:     counter_t passes = 0;
1057:sieve_extend.c ****     counter_t passes = 0;
 11542              		.loc 1 1057 15 view .LVU3893
 11543 4142 4531E4   		xor	r12d, r12d	# passes
 11544              	# sieve_extend.c:1056: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1056:sieve_extend.c ****     counter_t passes = 0;
 11545              		.loc 1 1056 94 view .LVU3894
 11546 4145 55       		push	rbp	#
 11547              		.cfi_def_cfa_offset 24
 11548              		.cfi_offset 6, -24
 11549 4146 53       		push	rbx	#
 11550              		.cfi_def_cfa_offset 32
 11551              		.cfi_offset 3, -32
 11552 4147 488D6424 		lea	rsp, -48[rsp]	#,
 11552      D0
 11553              		.cfi_def_cfa_offset 80
 11554              	# sieve_extend.c:1056: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1056:sieve_extend.c ****     counter_t passes = 0;
 11555              		.loc 1 1056 94 view .LVU3895
 11556 414c 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 11556      25280000 
 11556      00
 11557 4155 48894424 		mov	QWORD PTR 40[rsp], rax	# D.6906, tmp160
 11557      28
 11558 415a 31C0     		xor	eax, eax	# tmp160
 11559              		.loc 1 1057 5 is_stmt 1 view .LVU3896
 11560              	.LVL714:
1058:sieve_extend.c ****     double elapsed_time = 0;
 11561              		.loc 1 1058 5 view .LVU3897
1059:sieve_extend.c ****     struct timespec start_time,end_time;
 11562              		.loc 1 1059 5 view .LVU3898
1060:sieve_extend.c ****     struct sieve_state *sieve_instance;
 11563              		.loc 1 1060 5 view .LVU3899
1061:sieve_extend.c **** 
1062:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11564              		.loc 1 1062 5 view .LVU3900
 11565              	# sieve_extend.c:1062:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11566              		.loc 1 1062 44 is_stmt 0 view .LVU3901
 11567 415c 488D04B6 		lea	rax, [rsi+rsi*4]	# tmp113,
 11568 4160 488D1446 		lea	rdx, [rsi+rax*2]	# tmp115,
 11569 4164 488D1CD7 		lea	rbx, [rdi+rdx*8]	# _2,
 11570              	# sieve_extend.c:1065:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1063:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1064:sieve_extend.c **** 
1065:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11571              		.loc 1 1065 5 view .LVU3902
 11572 4168 BF010000 		mov	edi, 1	#,
 11572      00
 11573              	.LVL715:
GAS LISTING /tmp/ccqpmidN.s 			page 312


 11574              	# sieve_extend.c:1063:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1063:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11575              		.loc 1 1063 30 view .LVU3903
 11576 416d 488B7328 		mov	rsi, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11577              	.LVL716:
 11578              	# sieve_extend.c:1062:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1062:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11579              		.loc 1 1062 29 view .LVU3904
 11580 4171 488B4B20 		mov	rcx, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11581              	# sieve_extend.c:1063:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1063:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11582              		.loc 1 1063 30 view .LVU3905
 11583 4175 48893500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rsi	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11583      000000
 11584              	# sieve_extend.c:1065:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11585              		.loc 1 1065 5 view .LVU3906
 11586 417c 4889E6   		mov	rsi, rsp	# tmp119,
 11587              	# sieve_extend.c:1062:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1062:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11588              		.loc 1 1062 29 view .LVU3907
 11589 417f 48890D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rcx	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11589      000000
1063:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11590              		.loc 1 1063 5 is_stmt 1 view .LVU3908
 11591              		.loc 1 1065 5 view .LVU3909
 11592 4186 E8000000 		call	clock_gettime@PLT	#
 11592      00
 11593              	.LVL717:
1066:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11594              		.loc 1 1066 5 view .LVU3910
 11595              		.loc 1 1066 11 view .LVU3911
 11596 418b C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 11597 418f C5F92F63 		vcomisd	xmm4, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 11597      38
 11598 4194 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _56,
 11598      00000000 
 11599 419c 7674     		jbe	.L1053	#,
 11600 419e E99C0000 		jmp	.L1054	#
 11600      00
 11601              	.LVL718:
 11602              		.p2align 4,,7
 11603 41a3 0F1F4400 		.p2align 3
 11603      00
 11604              	.L1057:
1067:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11605              		.loc 1 1067 9 view .LVU3912
 11606              	# sieve_extend.c:1067:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 11607              		.loc 1 1067 26 is_stmt 0 view .LVU3913
 11608 41a8 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11609              	# sieve_extend.c:1069:         passes++;
1068:sieve_extend.c ****         delete_sieve(sieve_instance);
1069:sieve_extend.c ****         passes++;
 11610              		.loc 1 1069 15 view .LVU3914
 11611 41ac 4983C401 		add	r12, 1	# passes,
 11612              	.LVL719:
 11613              	# sieve_extend.c:1067:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1067:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
GAS LISTING /tmp/ccqpmidN.s 			page 313


 11614              		.loc 1 1067 26 view .LVU3915
 11615 41b0 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11616 41b3 E8B8F2FF 		call	sieve	#
 11616      FF
 11617              	.LVL720:
 11618              	.LBB521:
 11619              	.LBB522:
 11620              	# sieve_extend.c:106:     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 11621              		.loc 1 106 5 view .LVU3916
 11622 41b8 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_35->bitarray
 11623              	.LBE522:
 11624              	.LBE521:
 11625              	# sieve_extend.c:1067:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1067:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11626              		.loc 1 1067 26 view .LVU3917
 11627 41bb 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 11628              	.LVL721:
1068:sieve_extend.c ****         delete_sieve(sieve_instance);
 11629              		.loc 1 1068 9 is_stmt 1 view .LVU3918
 11630              	.LBB524:
 11631              	.LBI521:
 105:sieve_extend.c ****     free(sieve->bitarray);
 11632              		.loc 1 105 13 view .LVU3919
 11633              	.LBB523:
 106:sieve_extend.c ****     free(sieve);
 11634              		.loc 1 106 5 view .LVU3920
 11635 41be E8000000 		call	free@PLT	#
 11635      00
 11636              	.LVL722:
 107:sieve_extend.c **** }
 11637              		.loc 1 107 5 view .LVU3921
 11638 41c3 4889EF   		mov	rdi, rbp	#, sieve_instance
 11639 41c6 E8000000 		call	free@PLT	#
 11639      00
 11640              	.LVL723:
 107:sieve_extend.c **** }
 11641              		.loc 1 107 5 is_stmt 0 view .LVU3922
 11642              	.LBE523:
 11643              	.LBE524:
 11644              		.loc 1 1069 9 is_stmt 1 view .LVU3923
1070:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11645              		.loc 1 1070 9 view .LVU3924
 11646 41cb 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 11646      10
 11647 41d0 BF010000 		mov	edi, 1	#,
 11647      00
 11648 41d5 E8000000 		call	clock_gettime@PLT	#
 11648      00
 11649              	.LVL724:
1071:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11650              		.loc 1 1071 9 view .LVU3925
 11651              	# sieve_extend.c:1071:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11652              		.loc 1 1071 58 is_stmt 0 view .LVU3926
 11653 41da C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 11653      442418
 11654              	# sieve_extend.c:1071:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
GAS LISTING /tmp/ccqpmidN.s 			page 314


 11655              		.loc 1 1071 64 view .LVU3927
 11656 41e1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 11656      0C24
 11657              	# sieve_extend.c:1071:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11658              		.loc 1 1071 104 view .LVU3928
 11659 41e7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 11659      5C2408
 11660              	# sieve_extend.c:1071:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11661              		.loc 1 1071 40 view .LVU3929
 11662 41ee C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 11662      542410
 11663 41f5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _58, tmp124,
 11663      05000000 
 11663      00
 11664 41fe C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _59, tmp127,
 11664      1D000000 
 11664      00
 11665              	# sieve_extend.c:1071:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11666              		.loc 1 1071 22 view .LVU3930
 11667 4207 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _58, _59
 11668              	.LVL725:
1066:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11669              		.loc 1 1066 11 is_stmt 1 view .LVU3931
 11670 420b C5F92F63 		vcomisd	xmm4, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 11670      38
 11671 4210 7706     		ja	.L1068	#,
 11672              	.LVL726:
 11673              	.L1053:
 11674              	# sieve_extend.c:1066:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1066:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11675              		.loc 1 1066 79 is_stmt 0 discriminator 1 view .LVU3932
 11676 4212 4C396330 		cmp	QWORD PTR 48[rbx], r12	# _2->sample_max, passes
 11677 4216 7790     		ja	.L1057	#,
 11678              	.L1068:
1066:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11679              		.loc 1 1066 79 discriminator 1 view .LVU3933
 11680 4218 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 11680      F4
 11681 421d 4D85E4   		test	r12, r12	# passes
 11682 4220 7919     		jns	.L1059	#,
1066:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11683              		.loc 1 1066 79 discriminator 1 view .LVU3934
 11684 4222 4C89E7   		mov	rdi, r12	# tmp135, passes
 11685 4225 4D89E0   		mov	r8, r12	# tmp136, passes
 11686 4228 48D1EF   		shr	rdi	# tmp135
 11687 422b 4183E001 		and	r8d, 1	# tmp136,
 11688 422f 4C09C7   		or	rdi, r8	# tmp148, tmp136
 11689 4232 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rdi	# tmp134, tmp148
 11689      EF
 11690 4237 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 11691              	.L1059:
1066:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11692              		.loc 1 1066 79 discriminator 1 view .LVU3935
 11693 423b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _56, tmp133, elapsed_time
 11694              	.LVL727:
 11695              	.L1054:
1072:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 315


1073:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 11696              		.loc 1 1073 5 is_stmt 1 view .LVU3936
 11697              	# sieve_extend.c:1073:     tuning_result[tuning_result_index].passes = passes;
 11698              		.loc 1 1073 47 is_stmt 0 view .LVU3937
 11699 423f 4C896340 		mov	QWORD PTR 64[rbx], r12	# _2->passes, passes
1074:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11700              		.loc 1 1074 5 is_stmt 1 view .LVU3938
 11701              	# sieve_extend.c:1074:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 11702              		.loc 1 1074 53 is_stmt 0 view .LVU3939
 11703 4243 C5FB1163 		vmovsd	QWORD PTR 72[rbx], xmm4	# _2->elapsed_time, elapsed_time
 11703      48
1075:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11704              		.loc 1 1075 5 is_stmt 1 view .LVU3940
 11705              	# sieve_extend.c:1075:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 11706              		.loc 1 1075 44 is_stmt 0 view .LVU3941
 11707 4248 C5FB117B 		vmovsd	QWORD PTR 80[rbx], xmm7	# _2->avg, _56
 11707      50
 11708              	# sieve_extend.c:1076: }
1076:sieve_extend.c **** }
 11709              		.loc 1 1076 1 view .LVU3942
 11710 424d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.6906
 11710      28
 11711 4252 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 11711      25280000 
 11711      00
 11712 425b 750A     		jne	.L1069	#,
 11713 425d 488D6424 		lea	rsp, 48[rsp]	#,
 11713      30
 11714              		.cfi_remember_state
 11715              		.cfi_def_cfa_offset 32
 11716 4262 5B       		pop	rbx	#
 11717              		.cfi_def_cfa_offset 24
 11718 4263 5D       		pop	rbp	#
 11719              		.cfi_def_cfa_offset 16
 11720 4264 415C     		pop	r12	#
 11721              		.cfi_def_cfa_offset 8
 11722 4266 C3       		ret	
 11723              	.L1069:
 11724              		.cfi_restore_state
 11725 4267 E8000000 		call	__stack_chk_fail@PLT	#
 11725      00
 11726              	.LVL728:
 11727              		.cfi_endproc
 11728              	.LFE82:
 11730 426c 0F1F4000 		.p2align 4
 11731              		.globl	shiftvec
 11733              	shiftvec:
 11734              	.LVL729:
 11735              	.LFB66:
 517:sieve_extend.c ****     int i = 0;
 11736              		.loc 1 517 1 is_stmt 1 view -0
 11737              		.cfi_startproc
 517:sieve_extend.c ****     int i = 0;
 11738              		.loc 1 517 1 is_stmt 0 view .LVU3944
 11739 4270 F30F1EFA 		endbr64	
 518:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 11740              		.loc 1 518 5 is_stmt 1 view .LVU3945
GAS LISTING /tmp/ccqpmidN.s 			page 316


 11741              	.LVL730:
 520:sieve_extend.c ****     {
 11742              		.loc 1 520 5 view .LVU3946
 520:sieve_extend.c ****     {
 11743              		.loc 1 520 12 view .LVU3947
 11744              	# sieve_extend.c:520:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 520:sieve_extend.c ****     {
 11745              		.loc 1 520 5 is_stmt 0 view .LVU3948
 11746 4274 83FA04   		cmp	edx, 4	# size,
 11747 4277 0F8E9D03 		jle	.L1115	#,
 11747      0000
 11748 427d 41BB4000 		mov	r11d, 64	# tmp130,
 11748      0000
 11749 4283 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 11750 4287 4489D8   		mov	eax, r11d	# _4, tmp130
 11751 428a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 11752 428e 29C8     		sub	eax, ecx	# _4, shift
 11753              	.LBB525:
 11754              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11755              		.loc 1 523 25 view .LVU3949
 11756 4290 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114, off
 11756      1655
 11757              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11758              		.loc 1 523 34 view .LVU3950
 11759 4296 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.560_114, offset: 0B]
 11760 429a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 11760      C0
 11761 429f 41C1E802 		shr	r8d, 2	# _25,
 11762 42a3 41B90100 		mov	r9d, 1	# ivtmp.557,
 11762      0000
 11763              	.LBE525:
 11764              	.LBB526:
 11765              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11766              		.loc 1 525 34 view .LVU3951
 11767 42a9 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.547, vect__102.546, _4
 11768              	.LBE526:
 11769              	.LBB527:
 11770              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11771              		.loc 1 523 34 view .LVU3952
 11772 42ad C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.551, tmp269, shift
 11773 42b1 458D5001 		lea	r10d, 1[r8]	# tmp164,
 11774 42b5 4589C3   		mov	r11d, r8d	# tmp169, _25
 11775              	.LBE527:
 11776              	.LBB528:
 11777              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11778              		.loc 1 525 22 view .LVU3953
 11779 42b8 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.552, vect__57.547, vect__104.551
 11780 42bc 4183E307 		and	r11d, 7	# tmp169,
 11781              	.LVL731:
 525:sieve_extend.c ****     }
 11782              		.loc 1 525 22 view .LVU3954
 11783              	.LBE528:
GAS LISTING /tmp/ccqpmidN.s 			page 317


 11784              	.LBB529:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11785              		.loc 1 522 25 is_stmt 1 view .LVU3955
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11786              		.loc 1 523 13 view .LVU3956
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11787              		.loc 1 522 32 view .LVU3957
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11788              		.loc 1 522 25 view .LVU3958
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11789              		.loc 1 523 13 view .LVU3959
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11790              		.loc 1 522 32 view .LVU3960
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11791              		.loc 1 522 25 view .LVU3961
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11792              		.loc 1 523 13 view .LVU3962
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11793              		.loc 1 522 32 view .LVU3963
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11794              		.loc 1 522 25 view .LVU3964
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11795              		.loc 1 523 13 view .LVU3965
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11796              		.loc 1 522 32 view .LVU3966
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11797              		.loc 1 522 25 view .LVU3967
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11798              		.loc 1 522 25 is_stmt 0 view .LVU3968
 11799              	.LBE529:
 11800              	.LBB530:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11801              		.loc 1 524 25 is_stmt 1 view .LVU3969
 525:sieve_extend.c ****     }
 11802              		.loc 1 525 13 view .LVU3970
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11803              		.loc 1 524 32 view .LVU3971
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11804              		.loc 1 524 25 view .LVU3972
 525:sieve_extend.c ****     }
 11805              		.loc 1 525 13 view .LVU3973
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11806              		.loc 1 524 32 view .LVU3974
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11807              		.loc 1 524 25 view .LVU3975
 525:sieve_extend.c ****     }
 11808              		.loc 1 525 13 view .LVU3976
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11809              		.loc 1 524 32 view .LVU3977
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11810              		.loc 1 524 25 view .LVU3978
 525:sieve_extend.c ****     }
 11811              		.loc 1 525 13 view .LVU3979
 11812 42c0 4183FA01 		cmp	r10d, 1	# tmp164,
 11813 42c4 B8200000 		mov	eax, 32	# ivtmp.560,
 11813      00
 11814              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccqpmidN.s 			page 318


 525:sieve_extend.c ****     }
 11815              		.loc 1 525 22 is_stmt 0 view .LVU3980
 11816 42c9 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect__58
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11817              		.loc 1 524 32 is_stmt 1 view .LVU3981
 11818              	.LVL732:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11819              		.loc 1 524 25 view .LVU3982
 11820              	.LBE530:
 520:sieve_extend.c ****     {
 11821              		.loc 1 520 24 view .LVU3983
 520:sieve_extend.c ****     {
 11822              		.loc 1 520 12 view .LVU3984
 11823 42cd 0F866002 		jbe	.L1113	#,
 11823      0000
 11824 42d3 4585DB   		test	r11d, r11d	# tmp169
 11825 42d6 0F841E01 		je	.L1073	#,
 11825      0000
 11826 42dc 4183FB01 		cmp	r11d, 1	# tmp169,
 11827 42e0 0F84E500 		je	.L1100	#,
 11827      0000
 11828 42e6 4183FB02 		cmp	r11d, 2	# tmp169,
 11829 42ea 0F84B600 		je	.L1101	#,
 11829      0000
 11830 42f0 4183FB03 		cmp	r11d, 3	# tmp169,
 11831 42f4 0F848700 		je	.L1102	#,
 11831      0000
 11832 42fa 4183FB04 		cmp	r11d, 4	# tmp169,
 11833 42fe 745B     		je	.L1103	#,
 11834 4300 4183FB05 		cmp	r11d, 5	# tmp169,
 11835 4304 7430     		je	.L1104	#,
 11836 4306 4183FB06 		cmp	r11d, 6	# tmp169,
 11837 430a 0F85DC02 		jne	.L1116	#,
 11837      0000
 11838              	.L1105:
 11839              	.LVL733:
 11840              	.LBB531:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11841              		.loc 1 522 25 view .LVU3985
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11842              		.loc 1 523 13 view .LVU3986
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11843              		.loc 1 522 32 view .LVU3987
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11844              		.loc 1 522 25 view .LVU3988
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11845              		.loc 1 523 13 view .LVU3989
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11846              		.loc 1 522 32 view .LVU3990
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11847              		.loc 1 522 25 view .LVU3991
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11848              		.loc 1 523 13 view .LVU3992
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11849              		.loc 1 522 32 view .LVU3993
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11850              		.loc 1 522 25 view .LVU3994
GAS LISTING /tmp/ccqpmidN.s 			page 319


 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11851              		.loc 1 523 13 view .LVU3995
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11852              		.loc 1 522 32 view .LVU3996
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11853              		.loc 1 522 25 view .LVU3997
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11854              		.loc 1 522 25 is_stmt 0 view .LVU3998
 11855              	.LBE531:
 11856              	.LBB532:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11857              		.loc 1 524 25 is_stmt 1 view .LVU3999
 525:sieve_extend.c ****     }
 11858              		.loc 1 525 13 view .LVU4000
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11859              		.loc 1 524 32 view .LVU4001
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11860              		.loc 1 524 25 view .LVU4002
 525:sieve_extend.c ****     }
 11861              		.loc 1 525 13 view .LVU4003
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11862              		.loc 1 524 32 view .LVU4004
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11863              		.loc 1 524 25 view .LVU4005
 525:sieve_extend.c ****     }
 11864              		.loc 1 525 13 view .LVU4006
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11865              		.loc 1 524 32 view .LVU4007
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11866              		.loc 1 524 25 view .LVU4008
 525:sieve_extend.c ****     }
 11867              		.loc 1 525 13 view .LVU4009
 11868              	.LBE532:
 11869              	.LBB533:
 11870              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11871              		.loc 1 523 25 is_stmt 0 view .LVU4010
 11872 4310 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114
 11872      240655
 11873 4317 4183C101 		add	r9d, 1	# ivtmp.557,
 11874              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11875              		.loc 1 523 34 view .LVU4011
 11876 431b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.560_114, offset: 
 11876      06
 11877              	.LBE533:
 11878              	.LBB534:
 11879              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11880              		.loc 1 525 34 view .LVU4012
 11881 4320 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.547, vect__102.546, _4
 11882              	.LBE534:
 11883              	.LBB535:
 11884              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11885              		.loc 1 523 34 view .LVU4013
 11886 4324 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.551, tmp279, shift
GAS LISTING /tmp/ccqpmidN.s 			page 320


 11887              	.LBE535:
 11888              	.LBB536:
 11889              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11890              		.loc 1 525 22 view .LVU4014
 11891 4328 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.552, vect__57.547, vect__104.551
 11891      D7
 11892 432d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect
 11892      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11893              		.loc 1 524 32 is_stmt 1 view .LVU4015
 11894              	.LVL734:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11895              		.loc 1 524 25 view .LVU4016
 11896              	.LBE536:
 520:sieve_extend.c ****     {
 11897              		.loc 1 520 24 view .LVU4017
 520:sieve_extend.c ****     {
 11898              		.loc 1 520 12 view .LVU4018
 11899 4332 4883C020 		add	rax, 32	# ivtmp.560,
 11900              	.L1104:
 11901              	.LVL735:
 11902              	.LBB537:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11903              		.loc 1 522 25 view .LVU4019
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11904              		.loc 1 523 13 view .LVU4020
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11905              		.loc 1 522 32 view .LVU4021
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11906              		.loc 1 522 25 view .LVU4022
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11907              		.loc 1 523 13 view .LVU4023
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11908              		.loc 1 522 32 view .LVU4024
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11909              		.loc 1 522 25 view .LVU4025
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11910              		.loc 1 523 13 view .LVU4026
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11911              		.loc 1 522 32 view .LVU4027
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11912              		.loc 1 522 25 view .LVU4028
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11913              		.loc 1 523 13 view .LVU4029
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11914              		.loc 1 522 32 view .LVU4030
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11915              		.loc 1 522 25 view .LVU4031
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11916              		.loc 1 522 25 is_stmt 0 view .LVU4032
 11917              	.LBE537:
 11918              	.LBB538:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11919              		.loc 1 524 25 is_stmt 1 view .LVU4033
 525:sieve_extend.c ****     }
 11920              		.loc 1 525 13 view .LVU4034
GAS LISTING /tmp/ccqpmidN.s 			page 321


 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11921              		.loc 1 524 32 view .LVU4035
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11922              		.loc 1 524 25 view .LVU4036
 525:sieve_extend.c ****     }
 11923              		.loc 1 525 13 view .LVU4037
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11924              		.loc 1 524 32 view .LVU4038
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11925              		.loc 1 524 25 view .LVU4039
 525:sieve_extend.c ****     }
 11926              		.loc 1 525 13 view .LVU4040
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11927              		.loc 1 524 32 view .LVU4041
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11928              		.loc 1 524 25 view .LVU4042
 525:sieve_extend.c ****     }
 11929              		.loc 1 525 13 view .LVU4043
 11930              	.LBE538:
 11931              	.LBB539:
 11932              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11933              		.loc 1 523 25 is_stmt 0 view .LVU4044
 11934 4336 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114,
 11934      2C0655
 11935 433d 4183C101 		add	r9d, 1	# ivtmp.557,
 11936              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11937              		.loc 1 523 34 view .LVU4045
 11938 4341 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.560_114, offset: 0
 11938      06
 11939              	.LBE539:
 11940              	.LBB540:
 11941              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11942              		.loc 1 525 34 view .LVU4046
 11943 4346 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.547, vect__102.546, _4
 11944              	.LBE540:
 11945              	.LBB541:
 11946              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11947              		.loc 1 523 34 view .LVU4047
 11948 434a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.551, tmp280, shift
 11949              	.LBE541:
 11950              	.LBB542:
 11951              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 11952              		.loc 1 525 22 view .LVU4048
 11953 434e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.552, vect__57.547, vect__104.551
 11954 4352 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect
 11954      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11955              		.loc 1 524 32 is_stmt 1 view .LVU4049
 11956              	.LVL736:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11957              		.loc 1 524 25 view .LVU4050
 11958              	.LBE542:
GAS LISTING /tmp/ccqpmidN.s 			page 322


 520:sieve_extend.c ****     {
 11959              		.loc 1 520 24 view .LVU4051
 520:sieve_extend.c ****     {
 11960              		.loc 1 520 12 view .LVU4052
 11961 4357 4883C020 		add	rax, 32	# ivtmp.560,
 11962              	.L1103:
 11963              	.LVL737:
 11964              	.LBB543:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11965              		.loc 1 522 25 view .LVU4053
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11966              		.loc 1 523 13 view .LVU4054
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11967              		.loc 1 522 32 view .LVU4055
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11968              		.loc 1 522 25 view .LVU4056
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11969              		.loc 1 523 13 view .LVU4057
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11970              		.loc 1 522 32 view .LVU4058
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11971              		.loc 1 522 25 view .LVU4059
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11972              		.loc 1 523 13 view .LVU4060
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11973              		.loc 1 522 32 view .LVU4061
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11974              		.loc 1 522 25 view .LVU4062
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11975              		.loc 1 523 13 view .LVU4063
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11976              		.loc 1 522 32 view .LVU4064
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11977              		.loc 1 522 25 view .LVU4065
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 11978              		.loc 1 522 25 is_stmt 0 view .LVU4066
 11979              	.LBE543:
 11980              	.LBB544:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11981              		.loc 1 524 25 is_stmt 1 view .LVU4067
 525:sieve_extend.c ****     }
 11982              		.loc 1 525 13 view .LVU4068
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11983              		.loc 1 524 32 view .LVU4069
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11984              		.loc 1 524 25 view .LVU4070
 525:sieve_extend.c ****     }
 11985              		.loc 1 525 13 view .LVU4071
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11986              		.loc 1 524 32 view .LVU4072
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11987              		.loc 1 524 25 view .LVU4073
 525:sieve_extend.c ****     }
 11988              		.loc 1 525 13 view .LVU4074
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 11989              		.loc 1 524 32 view .LVU4075
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccqpmidN.s 			page 323


 11990              		.loc 1 524 25 view .LVU4076
 525:sieve_extend.c ****     }
 11991              		.loc 1 525 13 view .LVU4077
 11992              	.LBE544:
 11993              	.LBB545:
 11994              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11995              		.loc 1 523 25 is_stmt 0 view .LVU4078
 11996 435b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114,
 11996      040655
 11997 4362 4183C101 		add	r9d, 1	# ivtmp.557,
 11998              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 11999              		.loc 1 523 34 view .LVU4079
 12000 4366 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.560_114, offset: 
 12000      06
 12001              	.LBE545:
 12002              	.LBB546:
 12003              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12004              		.loc 1 525 34 view .LVU4080
 12005 436b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.547, vect__102.546, _4
 12006              	.LBE546:
 12007              	.LBB547:
 12008              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12009              		.loc 1 523 34 view .LVU4081
 12010 436f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.551, tmp281, shift
 12011              	.LBE547:
 12012              	.LBB548:
 12013              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12014              		.loc 1 525 22 view .LVU4082
 12015 4373 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.552, vect__57.547, vect__104.551
 12015      E3
 12016 4378 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vec
 12016      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12017              		.loc 1 524 32 is_stmt 1 view .LVU4083
 12018              	.LVL738:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12019              		.loc 1 524 25 view .LVU4084
 12020              	.LBE548:
 520:sieve_extend.c ****     {
 12021              		.loc 1 520 24 view .LVU4085
 520:sieve_extend.c ****     {
 12022              		.loc 1 520 12 view .LVU4086
 12023 437d 4883C020 		add	rax, 32	# ivtmp.560,
 12024              	.L1102:
 12025              	.LVL739:
 12026              	.LBB549:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12027              		.loc 1 522 25 view .LVU4087
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12028              		.loc 1 523 13 view .LVU4088
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12029              		.loc 1 522 32 view .LVU4089
GAS LISTING /tmp/ccqpmidN.s 			page 324


 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12030              		.loc 1 522 25 view .LVU4090
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12031              		.loc 1 523 13 view .LVU4091
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12032              		.loc 1 522 32 view .LVU4092
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12033              		.loc 1 522 25 view .LVU4093
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12034              		.loc 1 523 13 view .LVU4094
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12035              		.loc 1 522 32 view .LVU4095
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12036              		.loc 1 522 25 view .LVU4096
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12037              		.loc 1 523 13 view .LVU4097
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12038              		.loc 1 522 32 view .LVU4098
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12039              		.loc 1 522 25 view .LVU4099
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12040              		.loc 1 522 25 is_stmt 0 view .LVU4100
 12041              	.LBE549:
 12042              	.LBB550:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12043              		.loc 1 524 25 is_stmt 1 view .LVU4101
 525:sieve_extend.c ****     }
 12044              		.loc 1 525 13 view .LVU4102
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12045              		.loc 1 524 32 view .LVU4103
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12046              		.loc 1 524 25 view .LVU4104
 525:sieve_extend.c ****     }
 12047              		.loc 1 525 13 view .LVU4105
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12048              		.loc 1 524 32 view .LVU4106
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12049              		.loc 1 524 25 view .LVU4107
 525:sieve_extend.c ****     }
 12050              		.loc 1 525 13 view .LVU4108
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12051              		.loc 1 524 32 view .LVU4109
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12052              		.loc 1 524 25 view .LVU4110
 525:sieve_extend.c ****     }
 12053              		.loc 1 525 13 view .LVU4111
 12054              	.LBE550:
 12055              	.LBB551:
 12056              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12057              		.loc 1 523 25 is_stmt 0 view .LVU4112
 12058 4381 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114
 12058      2C0655
 12059 4388 4183C101 		add	r9d, 1	# ivtmp.557,
 12060              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12061              		.loc 1 523 34 view .LVU4113
GAS LISTING /tmp/ccqpmidN.s 			page 325


 12062 438c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.560_114, offset: 
 12062      06
 12063              	.LBE551:
 12064              	.LBB552:
 12065              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12066              		.loc 1 525 34 view .LVU4114
 12067 4391 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.547, vect__102.546, _4
 12068              	.LBE552:
 12069              	.LBB553:
 12070              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12071              		.loc 1 523 34 view .LVU4115
 12072 4395 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.551, tmp282, shift
 12073              	.LBE553:
 12074              	.LBB554:
 12075              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12076              		.loc 1 525 22 view .LVU4116
 12077 4399 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.552, vect__57.547, vect__104.551
 12078 439d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect
 12078      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12079              		.loc 1 524 32 is_stmt 1 view .LVU4117
 12080              	.LVL740:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12081              		.loc 1 524 25 view .LVU4118
 12082              	.LBE554:
 520:sieve_extend.c ****     {
 12083              		.loc 1 520 24 view .LVU4119
 520:sieve_extend.c ****     {
 12084              		.loc 1 520 12 view .LVU4120
 12085 43a2 4883C020 		add	rax, 32	# ivtmp.560,
 12086              	.L1101:
 12087              	.LVL741:
 12088              	.LBB555:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12089              		.loc 1 522 25 view .LVU4121
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12090              		.loc 1 523 13 view .LVU4122
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12091              		.loc 1 522 32 view .LVU4123
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12092              		.loc 1 522 25 view .LVU4124
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12093              		.loc 1 523 13 view .LVU4125
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12094              		.loc 1 522 32 view .LVU4126
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12095              		.loc 1 522 25 view .LVU4127
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12096              		.loc 1 523 13 view .LVU4128
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12097              		.loc 1 522 32 view .LVU4129
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12098              		.loc 1 522 25 view .LVU4130
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccqpmidN.s 			page 326


 12099              		.loc 1 523 13 view .LVU4131
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12100              		.loc 1 522 32 view .LVU4132
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12101              		.loc 1 522 25 view .LVU4133
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12102              		.loc 1 522 25 is_stmt 0 view .LVU4134
 12103              	.LBE555:
 12104              	.LBB556:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12105              		.loc 1 524 25 is_stmt 1 view .LVU4135
 525:sieve_extend.c ****     }
 12106              		.loc 1 525 13 view .LVU4136
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12107              		.loc 1 524 32 view .LVU4137
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12108              		.loc 1 524 25 view .LVU4138
 525:sieve_extend.c ****     }
 12109              		.loc 1 525 13 view .LVU4139
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12110              		.loc 1 524 32 view .LVU4140
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12111              		.loc 1 524 25 view .LVU4141
 525:sieve_extend.c ****     }
 12112              		.loc 1 525 13 view .LVU4142
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12113              		.loc 1 524 32 view .LVU4143
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12114              		.loc 1 524 25 view .LVU4144
 525:sieve_extend.c ****     }
 12115              		.loc 1 525 13 view .LVU4145
 12116              	.LBE556:
 12117              	.LBB557:
 12118              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12119              		.loc 1 523 25 is_stmt 0 view .LVU4146
 12120 43a6 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114,
 12120      240655
 12121 43ad 4183C101 		add	r9d, 1	# ivtmp.557,
 12122              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12123              		.loc 1 523 34 view .LVU4147
 12124 43b1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.560_114, offset: 0
 12124      06
 12125              	.LBE557:
 12126              	.LBB558:
 12127              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12128              		.loc 1 525 34 view .LVU4148
 12129 43b6 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.547, vect__102.546, _4
 12130              	.LBE558:
 12131              	.LBB559:
 12132              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12133              		.loc 1 523 34 view .LVU4149
 12134 43ba C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.551, tmp283, shift
 12135              	.LBE559:
GAS LISTING /tmp/ccqpmidN.s 			page 327


 12136              	.LBB560:
 12137              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12138              		.loc 1 525 22 view .LVU4150
 12139 43be C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.552, vect__57.547, vect__104.551
 12140 43c2 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect
 12140      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12141              		.loc 1 524 32 is_stmt 1 view .LVU4151
 12142              	.LVL742:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12143              		.loc 1 524 25 view .LVU4152
 12144              	.LBE560:
 520:sieve_extend.c ****     {
 12145              		.loc 1 520 24 view .LVU4153
 520:sieve_extend.c ****     {
 12146              		.loc 1 520 12 view .LVU4154
 12147 43c7 4883C020 		add	rax, 32	# ivtmp.560,
 12148              	.L1100:
 12149              	.LVL743:
 12150              	.LBB561:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12151              		.loc 1 522 25 view .LVU4155
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12152              		.loc 1 523 13 view .LVU4156
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12153              		.loc 1 522 32 view .LVU4157
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12154              		.loc 1 522 25 view .LVU4158
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12155              		.loc 1 523 13 view .LVU4159
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12156              		.loc 1 522 32 view .LVU4160
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12157              		.loc 1 522 25 view .LVU4161
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12158              		.loc 1 523 13 view .LVU4162
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12159              		.loc 1 522 32 view .LVU4163
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12160              		.loc 1 522 25 view .LVU4164
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12161              		.loc 1 523 13 view .LVU4165
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12162              		.loc 1 522 32 view .LVU4166
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12163              		.loc 1 522 25 view .LVU4167
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12164              		.loc 1 522 25 is_stmt 0 view .LVU4168
 12165              	.LBE561:
 12166              	.LBB562:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12167              		.loc 1 524 25 is_stmt 1 view .LVU4169
 525:sieve_extend.c ****     }
 12168              		.loc 1 525 13 view .LVU4170
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12169              		.loc 1 524 32 view .LVU4171
GAS LISTING /tmp/ccqpmidN.s 			page 328


 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12170              		.loc 1 524 25 view .LVU4172
 525:sieve_extend.c ****     }
 12171              		.loc 1 525 13 view .LVU4173
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12172              		.loc 1 524 32 view .LVU4174
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12173              		.loc 1 524 25 view .LVU4175
 525:sieve_extend.c ****     }
 12174              		.loc 1 525 13 view .LVU4176
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12175              		.loc 1 524 32 view .LVU4177
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12176              		.loc 1 524 25 view .LVU4178
 525:sieve_extend.c ****     }
 12177              		.loc 1 525 13 view .LVU4179
 12178              	.LBE562:
 12179              	.LBB563:
 12180              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12181              		.loc 1 523 25 is_stmt 0 view .LVU4180
 12182 43cb C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114,
 12182      0C0655
 12183 43d2 4183C101 		add	r9d, 1	# ivtmp.557,
 12184              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12185              		.loc 1 523 34 view .LVU4181
 12186 43d6 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.560_114, offset: 
 12186      06
 12187              	.LBE563:
 12188              	.LBB564:
 12189              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12190              		.loc 1 525 34 view .LVU4182
 12191 43db C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.547, vect__102.546, _4
 12192              	.LBE564:
 12193              	.LBB565:
 12194              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12195              		.loc 1 523 34 view .LVU4183
 12196 43df C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.551, tmp284, shift
 12197              	.LBE565:
 12198              	.LBB566:
 12199              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12200              		.loc 1 525 22 view .LVU4184
 12201 43e3 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.552, vect__57.547, vect__104.551
 12201      EC
 12202 43e8 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vec
 12202      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12203              		.loc 1 524 32 is_stmt 1 view .LVU4185
 12204              	.LVL744:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12205              		.loc 1 524 25 view .LVU4186
 12206              	.LBE566:
 520:sieve_extend.c ****     {
GAS LISTING /tmp/ccqpmidN.s 			page 329


 12207              		.loc 1 520 24 view .LVU4187
 520:sieve_extend.c ****     {
 12208              		.loc 1 520 12 view .LVU4188
 12209 43ed 4883C020 		add	rax, 32	# ivtmp.560,
 12210 43f1 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.557
 12211 43f4 0F863901 		jbe	.L1113	#,
 12211      0000
 12212              	.L1073:
 12213              	.LVL745:
 12214              	.LBB567:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12215              		.loc 1 522 25 view .LVU4189
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12216              		.loc 1 523 13 view .LVU4190
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12217              		.loc 1 522 32 view .LVU4191
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12218              		.loc 1 522 25 view .LVU4192
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12219              		.loc 1 523 13 view .LVU4193
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12220              		.loc 1 522 32 view .LVU4194
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12221              		.loc 1 522 25 view .LVU4195
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12222              		.loc 1 523 13 view .LVU4196
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12223              		.loc 1 522 32 view .LVU4197
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12224              		.loc 1 522 25 view .LVU4198
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12225              		.loc 1 523 13 view .LVU4199
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12226              		.loc 1 522 32 view .LVU4200
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12227              		.loc 1 522 25 view .LVU4201
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12228              		.loc 1 522 25 is_stmt 0 view .LVU4202
 12229              	.LBE567:
 12230              	.LBB568:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12231              		.loc 1 524 25 is_stmt 1 view .LVU4203
 525:sieve_extend.c ****     }
 12232              		.loc 1 525 13 view .LVU4204
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12233              		.loc 1 524 32 view .LVU4205
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12234              		.loc 1 524 25 view .LVU4206
 525:sieve_extend.c ****     }
 12235              		.loc 1 525 13 view .LVU4207
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12236              		.loc 1 524 32 view .LVU4208
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12237              		.loc 1 524 25 view .LVU4209
 525:sieve_extend.c ****     }
 12238              		.loc 1 525 13 view .LVU4210
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccqpmidN.s 			page 330


 12239              		.loc 1 524 32 view .LVU4211
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12240              		.loc 1 524 25 view .LVU4212
 525:sieve_extend.c ****     }
 12241              		.loc 1 525 13 view .LVU4213
 12242              	.LBE568:
 12243              	.LBB569:
 12244              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12245              		.loc 1 523 25 is_stmt 0 view .LVU4214
 12246 43fa C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114
 12246      340655
 12247 4401 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_11
 12247      74062055 
 12248              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12249              		.loc 1 523 34 view .LVU4215
 12250 4409 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.560_114, offset: 0
 12250      06
 12251              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12252              		.loc 1 523 25 view .LVU4216
 12253 440e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_1
 12253      54064055 
 12254              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12255              		.loc 1 523 34 view .LVU4217
 12256 4416 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.560_114, offset:
 12256      0620
 12257 441c 4183C108 		add	r9d, 8	# ivtmp.557,
 12258              	.LBE569:
 12259              	.LBB570:
 12260              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12261              		.loc 1 525 34 view .LVU4218
 12262 4420 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.547, vect__102.546, _4
 12263 4424 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.547, vect__102.546, _4
 12264              	.LBE570:
 12265              	.LBB571:
 12266              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12267              		.loc 1 523 34 view .LVU4219
 12268 4428 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.551, tmp270, shift
 12269 442c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.551, tmp271, shift
 12270 4430 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.560_114, offset
 12270      0640
 12271              	.LBE571:
 12272              	.LBB572:
 12273              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12274              		.loc 1 525 22 view .LVU4220
 12275 4436 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.552, vect__57.547, vect__104.551
 12276              	.LBE572:
 12277              	.LBB573:
 12278              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12279              		.loc 1 523 34 view .LVU4221
GAS LISTING /tmp/ccqpmidN.s 			page 331


 12280 443a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.560_114, offset
 12280      06800000 
 12280      00
 12281              	.LBE573:
 12282              	.LBB574:
 12283              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12284              		.loc 1 525 22 view .LVU4222
 12285 4443 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.552, vect__57.547, vect__104.551
 12285      C8
 12286              	.LBE574:
 12287              	.LBB575:
 12288              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12289              		.loc 1 523 25 view .LVU4223
 12290 4448 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_1
 12290      7C066055 
 12291 4450 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_1
 12291      BC068000 
 12291      000055
 12292              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12293              		.loc 1 523 34 view .LVU4224
 12294 445b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.560_114, offset:
 12294      0660
 12295              	.LBE575:
 12296              	.LBB576:
 12297              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12298              		.loc 1 525 34 view .LVU4225
 12299 4461 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.547, vect__102.546, _4
 12300              	.LBE576:
 12301              	.LBB577:
 12302              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12303              		.loc 1 523 34 view .LVU4226
 12304 4465 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.551, tmp272, shift
 12305              	.LBE577:
 12306              	.LBB578:
 12307              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12308              		.loc 1 525 34 view .LVU4227
 12309 4469 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.547, vect__102.546, _4
 12310              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12311              		.loc 1 525 22 view .LVU4228
 12312 446d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect
 12312      07
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12313              		.loc 1 524 32 is_stmt 1 view .LVU4229
 12314              	.LVL746:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12315              		.loc 1 524 25 view .LVU4230
 12316              	.LBE578:
 520:sieve_extend.c ****     {
 12317              		.loc 1 520 24 view .LVU4231
 520:sieve_extend.c ****     {
GAS LISTING /tmp/ccqpmidN.s 			page 332


 12318              		.loc 1 520 12 view .LVU4232
 12319              	.LBB579:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12320              		.loc 1 522 25 view .LVU4233
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12321              		.loc 1 523 13 view .LVU4234
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12322              		.loc 1 522 32 view .LVU4235
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12323              		.loc 1 522 25 view .LVU4236
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12324              		.loc 1 523 13 view .LVU4237
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12325              		.loc 1 522 32 view .LVU4238
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12326              		.loc 1 522 25 view .LVU4239
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12327              		.loc 1 523 13 view .LVU4240
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12328              		.loc 1 522 32 view .LVU4241
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12329              		.loc 1 522 25 view .LVU4242
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12330              		.loc 1 523 13 view .LVU4243
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12331              		.loc 1 522 32 view .LVU4244
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12332              		.loc 1 522 25 view .LVU4245
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12333              		.loc 1 522 25 is_stmt 0 view .LVU4246
 12334              	.LBE579:
 12335              	.LBB580:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12336              		.loc 1 524 25 is_stmt 1 view .LVU4247
 525:sieve_extend.c ****     }
 12337              		.loc 1 525 13 view .LVU4248
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12338              		.loc 1 524 32 view .LVU4249
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12339              		.loc 1 524 25 view .LVU4250
 525:sieve_extend.c ****     }
 12340              		.loc 1 525 13 view .LVU4251
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12341              		.loc 1 524 32 view .LVU4252
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12342              		.loc 1 524 25 view .LVU4253
 525:sieve_extend.c ****     }
 12343              		.loc 1 525 13 view .LVU4254
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12344              		.loc 1 524 32 view .LVU4255
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12345              		.loc 1 524 25 view .LVU4256
 525:sieve_extend.c ****     }
 12346              		.loc 1 525 13 view .LVU4257
 12347              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12348              		.loc 1 525 22 is_stmt 0 view .LVU4258
GAS LISTING /tmp/ccqpmidN.s 			page 333


 12349 4472 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.552, vect__57.547, vect__104.551
 12349      F5
 12350              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12351              		.loc 1 525 34 view .LVU4259
 12352 4477 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.547, vect__102.546, _4
 12353              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12354              		.loc 1 525 22 view .LVU4260
 12355 447b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], ve
 12355      0720
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12356              		.loc 1 524 32 is_stmt 1 view .LVU4261
 12357              	.LVL747:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12358              		.loc 1 524 25 view .LVU4262
 12359              	.LBE580:
 520:sieve_extend.c ****     {
 12360              		.loc 1 520 24 view .LVU4263
 520:sieve_extend.c ****     {
 12361              		.loc 1 520 12 view .LVU4264
 12362              	.LBB581:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12363              		.loc 1 522 25 view .LVU4265
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12364              		.loc 1 523 13 view .LVU4266
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12365              		.loc 1 522 32 view .LVU4267
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12366              		.loc 1 522 25 view .LVU4268
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12367              		.loc 1 523 13 view .LVU4269
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12368              		.loc 1 522 32 view .LVU4270
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12369              		.loc 1 522 25 view .LVU4271
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12370              		.loc 1 523 13 view .LVU4272
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12371              		.loc 1 522 32 view .LVU4273
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12372              		.loc 1 522 25 view .LVU4274
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12373              		.loc 1 523 13 view .LVU4275
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12374              		.loc 1 522 32 view .LVU4276
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12375              		.loc 1 522 25 view .LVU4277
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12376              		.loc 1 522 25 is_stmt 0 view .LVU4278
 12377              	.LBE581:
 12378              	.LBB582:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12379              		.loc 1 524 25 is_stmt 1 view .LVU4279
 525:sieve_extend.c ****     }
 12380              		.loc 1 525 13 view .LVU4280
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccqpmidN.s 			page 334


 12381              		.loc 1 524 32 view .LVU4281
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12382              		.loc 1 524 25 view .LVU4282
 525:sieve_extend.c ****     }
 12383              		.loc 1 525 13 view .LVU4283
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12384              		.loc 1 524 32 view .LVU4284
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12385              		.loc 1 524 25 view .LVU4285
 525:sieve_extend.c ****     }
 12386              		.loc 1 525 13 view .LVU4286
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12387              		.loc 1 524 32 view .LVU4287
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12388              		.loc 1 524 25 view .LVU4288
 525:sieve_extend.c ****     }
 12389              		.loc 1 525 13 view .LVU4289
 12390              	.LBE582:
 12391              	.LBB583:
 12392              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12393              		.loc 1 523 25 is_stmt 0 view .LVU4290
 12394 4481 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_
 12394      9C06A000 
 12394      000055
 12395              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12396              		.loc 1 523 34 view .LVU4291
 12397 448c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.551, tmp273, shift
 12398 4490 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.551, tmp274, shift
 12399 4494 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.560_114, offse
 12399      06A00000 
 12399      00
 12400              	.LBE583:
 12401              	.LBB584:
 12402              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12403              		.loc 1 525 22 view .LVU4292
 12404 449d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.552, vect__57.547, vect__104.551
 12405              	.LBE584:
 12406              	.LBB585:
 12407              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12408              		.loc 1 523 34 view .LVU4293
 12409 44a1 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.560_114, offset
 12409      06E00000 
 12409      00
 12410              	.LBE585:
 12411              	.LBB586:
 12412              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12413              		.loc 1 525 22 view .LVU4294
 12414 44aa C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.552, vect__57.547, vect__104.551
 12414      D1
 12415              	.LBE586:
 12416              	.LBB587:
 12417              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccqpmidN.s 			page 335


 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12418              		.loc 1 523 25 view .LVU4295
 12419 44af C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_1
 12419      9406C000 
 12419      000055
 12420 44ba C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_1
 12420      8406E000 
 12420      000055
 12421              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12422              		.loc 1 523 34 view .LVU4296
 12423 44c5 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.560_114, offset
 12423      06C00000 
 12423      00
 12424              	.LBE587:
 12425              	.LBB588:
 12426              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12427              		.loc 1 525 22 view .LVU4297
 12428 44ce C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], v
 12428      0740
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12429              		.loc 1 524 32 is_stmt 1 view .LVU4298
 12430              	.LVL748:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12431              		.loc 1 524 25 view .LVU4299
 12432              	.LBE588:
 520:sieve_extend.c ****     {
 12433              		.loc 1 520 24 view .LVU4300
 520:sieve_extend.c ****     {
 12434              		.loc 1 520 12 view .LVU4301
 12435              	.LBB589:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12436              		.loc 1 522 25 view .LVU4302
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12437              		.loc 1 523 13 view .LVU4303
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12438              		.loc 1 522 32 view .LVU4304
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12439              		.loc 1 522 25 view .LVU4305
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12440              		.loc 1 523 13 view .LVU4306
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12441              		.loc 1 522 32 view .LVU4307
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12442              		.loc 1 522 25 view .LVU4308
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12443              		.loc 1 523 13 view .LVU4309
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12444              		.loc 1 522 32 view .LVU4310
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12445              		.loc 1 522 25 view .LVU4311
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12446              		.loc 1 523 13 view .LVU4312
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12447              		.loc 1 522 32 view .LVU4313
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccqpmidN.s 			page 336


 12448              		.loc 1 522 25 view .LVU4314
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12449              		.loc 1 522 25 is_stmt 0 view .LVU4315
 12450              	.LBE589:
 12451              	.LBB590:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12452              		.loc 1 524 25 is_stmt 1 view .LVU4316
 525:sieve_extend.c ****     }
 12453              		.loc 1 525 13 view .LVU4317
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12454              		.loc 1 524 32 view .LVU4318
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12455              		.loc 1 524 25 view .LVU4319
 525:sieve_extend.c ****     }
 12456              		.loc 1 525 13 view .LVU4320
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12457              		.loc 1 524 32 view .LVU4321
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12458              		.loc 1 524 25 view .LVU4322
 525:sieve_extend.c ****     }
 12459              		.loc 1 525 13 view .LVU4323
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12460              		.loc 1 524 32 view .LVU4324
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12461              		.loc 1 524 25 view .LVU4325
 525:sieve_extend.c ****     }
 12462              		.loc 1 525 13 view .LVU4326
 12463              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12464              		.loc 1 525 34 is_stmt 0 view .LVU4327
 12465 44d4 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.547, vect__102.546, _4
 12466              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12467              		.loc 1 525 22 view .LVU4328
 12468 44d8 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], ve
 12468      0760
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12469              		.loc 1 524 32 is_stmt 1 view .LVU4329
 12470              	.LVL749:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12471              		.loc 1 524 25 view .LVU4330
 12472              	.LBE590:
 520:sieve_extend.c ****     {
 12473              		.loc 1 520 24 view .LVU4331
 520:sieve_extend.c ****     {
 12474              		.loc 1 520 12 view .LVU4332
 12475              	.LBB591:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12476              		.loc 1 522 25 view .LVU4333
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12477              		.loc 1 523 13 view .LVU4334
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12478              		.loc 1 522 32 view .LVU4335
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12479              		.loc 1 522 25 view .LVU4336
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12480              		.loc 1 523 13 view .LVU4337
GAS LISTING /tmp/ccqpmidN.s 			page 337


 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12481              		.loc 1 522 32 view .LVU4338
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12482              		.loc 1 522 25 view .LVU4339
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12483              		.loc 1 523 13 view .LVU4340
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12484              		.loc 1 522 32 view .LVU4341
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12485              		.loc 1 522 25 view .LVU4342
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12486              		.loc 1 523 13 view .LVU4343
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12487              		.loc 1 522 32 view .LVU4344
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12488              		.loc 1 522 25 view .LVU4345
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12489              		.loc 1 522 25 is_stmt 0 view .LVU4346
 12490              	.LBE591:
 12491              	.LBB592:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12492              		.loc 1 524 25 is_stmt 1 view .LVU4347
 525:sieve_extend.c ****     }
 12493              		.loc 1 525 13 view .LVU4348
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12494              		.loc 1 524 32 view .LVU4349
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12495              		.loc 1 524 25 view .LVU4350
 525:sieve_extend.c ****     }
 12496              		.loc 1 525 13 view .LVU4351
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12497              		.loc 1 524 32 view .LVU4352
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12498              		.loc 1 524 25 view .LVU4353
 525:sieve_extend.c ****     }
 12499              		.loc 1 525 13 view .LVU4354
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12500              		.loc 1 524 32 view .LVU4355
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12501              		.loc 1 524 25 view .LVU4356
 525:sieve_extend.c ****     }
 12502              		.loc 1 525 13 view .LVU4357
 12503              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12504              		.loc 1 525 22 is_stmt 0 view .LVU4358
 12505 44de C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], 
 12505      07800000 
 12505      00
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12506              		.loc 1 524 32 is_stmt 1 view .LVU4359
 12507              	.LVL750:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12508              		.loc 1 524 25 view .LVU4360
 12509              	.LBE592:
 520:sieve_extend.c ****     {
 12510              		.loc 1 520 24 view .LVU4361
 520:sieve_extend.c ****     {
GAS LISTING /tmp/ccqpmidN.s 			page 338


 12511              		.loc 1 520 12 view .LVU4362
 12512              	.LBB593:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12513              		.loc 1 522 25 view .LVU4363
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12514              		.loc 1 523 13 view .LVU4364
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12515              		.loc 1 522 32 view .LVU4365
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12516              		.loc 1 522 25 view .LVU4366
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12517              		.loc 1 523 13 view .LVU4367
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12518              		.loc 1 522 32 view .LVU4368
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12519              		.loc 1 522 25 view .LVU4369
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12520              		.loc 1 523 13 view .LVU4370
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12521              		.loc 1 522 32 view .LVU4371
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12522              		.loc 1 522 25 view .LVU4372
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12523              		.loc 1 523 13 view .LVU4373
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12524              		.loc 1 522 32 view .LVU4374
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12525              		.loc 1 522 25 view .LVU4375
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12526              		.loc 1 522 25 is_stmt 0 view .LVU4376
 12527              	.LBE593:
 12528              	.LBB594:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12529              		.loc 1 524 25 is_stmt 1 view .LVU4377
 525:sieve_extend.c ****     }
 12530              		.loc 1 525 13 view .LVU4378
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12531              		.loc 1 524 32 view .LVU4379
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12532              		.loc 1 524 25 view .LVU4380
 525:sieve_extend.c ****     }
 12533              		.loc 1 525 13 view .LVU4381
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12534              		.loc 1 524 32 view .LVU4382
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12535              		.loc 1 524 25 view .LVU4383
 525:sieve_extend.c ****     }
 12536              		.loc 1 525 13 view .LVU4384
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12537              		.loc 1 524 32 view .LVU4385
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12538              		.loc 1 524 25 view .LVU4386
 525:sieve_extend.c ****     }
 12539              		.loc 1 525 13 view .LVU4387
 12540              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12541              		.loc 1 525 34 is_stmt 0 view .LVU4388
GAS LISTING /tmp/ccqpmidN.s 			page 339


 12542 44e7 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.547, vect__102.546, _4
 12543              	.LBE594:
 12544              	.LBB595:
 12545              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12546              		.loc 1 523 34 view .LVU4389
 12547 44eb C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.551, tmp275, shift
 12548              	.LBE595:
 12549              	.LBB596:
 12550              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12551              		.loc 1 525 34 view .LVU4390
 12552 44ef C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.547, vect__102.546, _4
 12553              	.LBE596:
 12554              	.LBB597:
 12555              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12556              		.loc 1 523 34 view .LVU4391
 12557 44f3 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.551, tmp276, shift
 12558 44f7 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.551, tmp277, shift
 12559              	.LBE597:
 12560              	.LBB598:
 12561              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12562              		.loc 1 525 22 view .LVU4392
 12563 44fb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.552, vect__57.547, vect__104.551
 12563      FE
 12564 4500 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.552, vect__57.547, vect__104.551
 12565 4504 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], 
 12565      07A00000 
 12565      00
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12566              		.loc 1 524 32 is_stmt 1 view .LVU4393
 12567              	.LVL751:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12568              		.loc 1 524 25 view .LVU4394
 12569              	.LBE598:
 520:sieve_extend.c ****     {
 12570              		.loc 1 520 24 view .LVU4395
 520:sieve_extend.c ****     {
 12571              		.loc 1 520 12 view .LVU4396
 12572              	.LBB599:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12573              		.loc 1 522 25 view .LVU4397
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12574              		.loc 1 523 13 view .LVU4398
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12575              		.loc 1 522 32 view .LVU4399
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12576              		.loc 1 522 25 view .LVU4400
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12577              		.loc 1 523 13 view .LVU4401
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12578              		.loc 1 522 32 view .LVU4402
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12579              		.loc 1 522 25 view .LVU4403
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccqpmidN.s 			page 340


 12580              		.loc 1 523 13 view .LVU4404
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12581              		.loc 1 522 32 view .LVU4405
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12582              		.loc 1 522 25 view .LVU4406
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12583              		.loc 1 523 13 view .LVU4407
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12584              		.loc 1 522 32 view .LVU4408
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12585              		.loc 1 522 25 view .LVU4409
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12586              		.loc 1 522 25 is_stmt 0 view .LVU4410
 12587              	.LBE599:
 12588              	.LBB600:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12589              		.loc 1 524 25 is_stmt 1 view .LVU4411
 525:sieve_extend.c ****     }
 12590              		.loc 1 525 13 view .LVU4412
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12591              		.loc 1 524 32 view .LVU4413
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12592              		.loc 1 524 25 view .LVU4414
 525:sieve_extend.c ****     }
 12593              		.loc 1 525 13 view .LVU4415
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12594              		.loc 1 524 32 view .LVU4416
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12595              		.loc 1 524 25 view .LVU4417
 525:sieve_extend.c ****     }
 12596              		.loc 1 525 13 view .LVU4418
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12597              		.loc 1 524 32 view .LVU4419
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12598              		.loc 1 524 25 view .LVU4420
 525:sieve_extend.c ****     }
 12599              		.loc 1 525 13 view .LVU4421
 12600              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12601              		.loc 1 525 22 is_stmt 0 view .LVU4422
 12602 450d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.552, vect__57.547, vect__104.551
 12602      DA
 12603 4512 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], v
 12603      07C00000 
 12603      00
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12604              		.loc 1 524 32 is_stmt 1 view .LVU4423
 12605              	.LVL752:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12606              		.loc 1 524 25 view .LVU4424
 12607              	.LBE600:
 520:sieve_extend.c ****     {
 12608              		.loc 1 520 24 view .LVU4425
 520:sieve_extend.c ****     {
 12609              		.loc 1 520 12 view .LVU4426
 12610              	.LBB601:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccqpmidN.s 			page 341


 12611              		.loc 1 522 25 view .LVU4427
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12612              		.loc 1 523 13 view .LVU4428
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12613              		.loc 1 522 32 view .LVU4429
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12614              		.loc 1 522 25 view .LVU4430
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12615              		.loc 1 523 13 view .LVU4431
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12616              		.loc 1 522 32 view .LVU4432
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12617              		.loc 1 522 25 view .LVU4433
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12618              		.loc 1 523 13 view .LVU4434
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12619              		.loc 1 522 32 view .LVU4435
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12620              		.loc 1 522 25 view .LVU4436
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12621              		.loc 1 523 13 view .LVU4437
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12622              		.loc 1 522 32 view .LVU4438
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12623              		.loc 1 522 25 view .LVU4439
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12624              		.loc 1 522 25 is_stmt 0 view .LVU4440
 12625              	.LBE601:
 12626              	.LBB602:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12627              		.loc 1 524 25 is_stmt 1 view .LVU4441
 525:sieve_extend.c ****     }
 12628              		.loc 1 525 13 view .LVU4442
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12629              		.loc 1 524 32 view .LVU4443
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12630              		.loc 1 524 25 view .LVU4444
 525:sieve_extend.c ****     }
 12631              		.loc 1 525 13 view .LVU4445
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12632              		.loc 1 524 32 view .LVU4446
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12633              		.loc 1 524 25 view .LVU4447
 525:sieve_extend.c ****     }
 12634              		.loc 1 525 13 view .LVU4448
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12635              		.loc 1 524 32 view .LVU4449
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12636              		.loc 1 524 25 view .LVU4450
 525:sieve_extend.c ****     }
 12637              		.loc 1 525 13 view .LVU4451
 12638              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12639              		.loc 1 525 22 is_stmt 0 view .LVU4452
 12640 451b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], 
 12640      07E00000 
 12640      00
GAS LISTING /tmp/ccqpmidN.s 			page 342


 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12641              		.loc 1 524 32 is_stmt 1 view .LVU4453
 12642              	.LVL753:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12643              		.loc 1 524 25 view .LVU4454
 12644              	.LBE602:
 520:sieve_extend.c ****     {
 12645              		.loc 1 520 24 view .LVU4455
 520:sieve_extend.c ****     {
 12646              		.loc 1 520 12 view .LVU4456
 12647 4524 48050001 		add	rax, 256	# ivtmp.560,
 12647      0000
 12648 452a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.557
 12649 452d 0F87C7FE 		ja	.L1073	#,
 12649      FFFF
 12650              	.L1113:
 12651 4533 4589C3   		mov	r11d, r8d	# _25, _25
 12652 4536 428D0495 		lea	eax, 0[0+r10*4]	# i,
 12652      00000000 
 12653 453e 4983C301 		add	r11, 1	# tmp140,
 12654 4542 49C1E305 		sal	r11, 5	# _105,
 12655 4546 4C01DF   		add	rdi, r11	# dst, _105
 12656 4549 4C01DE   		add	rsi, r11	# src, _105
 12657 454c C5F877   		vzeroupper
 12658              	.LVL754:
 12659              	.L1074:
 527:sieve_extend.c ****     {
 12660              		.loc 1 527 12 view .LVU4457
 12661              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12662              		.loc 1 527 5 is_stmt 0 view .LVU4458
 12663 454f 39C2     		cmp	edx, eax	# size, i
 12664 4551 0F8E9400 		jle	.L1117	#,
 12664      0000
 12665              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12666              		.loc 1 529 35 view .LVU4459
 12667 4557 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 12668 455b 41B84000 		mov	r8d, 64	# tmp142,
 12668      0000
 12669              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12670              		.loc 1 529 23 view .LVU4460
 12671 4561 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 12671      0E
 12672 4566 4129C8   		sub	r8d, ecx	# _97, shift
 529:sieve_extend.c ****     }    
 12673              		.loc 1 529 9 is_stmt 1 view .LVU4461
 12674              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12675              		.loc 1 529 43 is_stmt 0 view .LVU4462
 12676 4569 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 12676      DA
 12677              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12678              		.loc 1 529 32 view .LVU4463
 12679 456e 4D09D9   		or	r9, r11	# tmp146, tmp145
GAS LISTING /tmp/ccqpmidN.s 			page 343


 12680 4571 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 527:sieve_extend.c ****     {
 12681              		.loc 1 527 22 is_stmt 1 view .LVU4464
 12682              	.LVL755:
 527:sieve_extend.c ****     {
 12683              		.loc 1 527 12 view .LVU4465
 12684              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12685              		.loc 1 527 22 is_stmt 0 view .LVU4466
 12686 4574 448D4801 		lea	r9d, 1[rax]	# i,
 12687              	.LVL756:
 12688              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12689              		.loc 1 527 5 view .LVU4467
 12690 4578 4439CA   		cmp	edx, r9d	# size, i
 12691 457b 7E6D     		jle	.L1114	#,
 529:sieve_extend.c ****     }    
 12692              		.loc 1 529 9 is_stmt 1 view .LVU4468
 12693              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12694              		.loc 1 529 35 is_stmt 0 view .LVU4469
 12695 457d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 12696              	.LVL757:
 12697              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12698              		.loc 1 529 23 view .LVU4470
 12699 4581 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 12699      D2
 12700              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12701              		.loc 1 529 43 view .LVU4471
 12702 4586 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 12702      D9
 12703              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12704              		.loc 1 529 32 view .LVU4472
 12705 458b 4D09DA   		or	r10, r11	# tmp150, tmp149
 12706 458e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 527:sieve_extend.c ****     {
 12707              		.loc 1 527 22 is_stmt 1 view .LVU4473
 12708              	.LVL758:
 527:sieve_extend.c ****     {
 12709              		.loc 1 527 12 view .LVU4474
 12710              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12711              		.loc 1 527 22 is_stmt 0 view .LVU4475
 12712 4592 448D5002 		lea	r10d, 2[rax]	# i,
 12713              	.LVL759:
 12714              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12715              		.loc 1 527 5 view .LVU4476
 12716 4596 4439D2   		cmp	edx, r10d	# size, i
 12717 4599 7E4F     		jle	.L1114	#,
 529:sieve_extend.c ****     }    
 12718              		.loc 1 529 9 is_stmt 1 view .LVU4477
 12719              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
GAS LISTING /tmp/ccqpmidN.s 			page 344


 12720              		.loc 1 529 35 is_stmt 0 view .LVU4478
 12721 459b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 12722              	.LVL760:
 12723              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12724              		.loc 1 529 23 view .LVU4479
 12725 459f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 12725      C9
 12726              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12727              		.loc 1 529 43 view .LVU4480
 12728 45a4 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 12728      DA
 12729              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12730              		.loc 1 529 32 view .LVU4481
 12731 45a9 4D09D9   		or	r9, r11	# tmp154, tmp153
 12732 45ac 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 527:sieve_extend.c ****     {
 12733              		.loc 1 527 22 is_stmt 1 view .LVU4482
 12734              	.LVL761:
 527:sieve_extend.c ****     {
 12735              		.loc 1 527 12 view .LVU4483
 12736              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12737              		.loc 1 527 22 is_stmt 0 view .LVU4484
 12738 45b0 448D4803 		lea	r9d, 3[rax]	# i,
 12739              	.LVL762:
 12740              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12741              		.loc 1 527 5 view .LVU4485
 12742 45b4 4439CA   		cmp	edx, r9d	# size, i
 12743 45b7 7E31     		jle	.L1114	#,
 529:sieve_extend.c ****     }    
 12744              		.loc 1 529 9 is_stmt 1 view .LVU4486
 12745              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12746              		.loc 1 529 35 is_stmt 0 view .LVU4487
 12747 45b9 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 12748              	.LVL763:
 12749              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12750              		.loc 1 527 22 view .LVU4488
 12751 45bd 83C004   		add	eax, 4	# i,
 12752              	.LVL764:
 12753              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12754              		.loc 1 529 23 view .LVU4489
 12755 45c0 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 12755      D2
 12756              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12757              		.loc 1 529 43 view .LVU4490
 12758 45c5 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 12758      D9
 12759              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
GAS LISTING /tmp/ccqpmidN.s 			page 345


 12760              		.loc 1 529 32 view .LVU4491
 12761 45ca 4D09DA   		or	r10, r11	# tmp158, tmp157
 12762              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12763              		.loc 1 527 5 view .LVU4492
 12764 45cd 39C2     		cmp	edx, eax	# size, i
 12765              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12766              		.loc 1 529 32 view .LVU4493
 12767 45cf 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 527:sieve_extend.c ****     {
 12768              		.loc 1 527 22 is_stmt 1 view .LVU4494
 12769              	.LVL765:
 527:sieve_extend.c ****     {
 12770              		.loc 1 527 12 view .LVU4495
 12771              	# sieve_extend.c:527:     for (; i < size; ++i,++src,++dst)
 527:sieve_extend.c ****     {
 12772              		.loc 1 527 5 is_stmt 0 view .LVU4496
 12773 45d3 7E15     		jle	.L1114	#,
 529:sieve_extend.c ****     }    
 12774              		.loc 1 529 9 is_stmt 1 discriminator 2 view .LVU4497
 12775              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12776              		.loc 1 529 43 is_stmt 0 discriminator 2 view .LVU4498
 12777 45d5 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 12778              	.LVL766:
 12779              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12780              		.loc 1 529 23 discriminator 2 view .LVU4499
 12781 45d9 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 12781      C9
 12782              	.LVL767:
 12783              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12784              		.loc 1 529 43 discriminator 2 view .LVU4500
 12785 45de C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 12785      F2
 12786              	.LVL768:
 12787              	# sieve_extend.c:529:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 529:sieve_extend.c ****     }    
 12788              		.loc 1 529 32 discriminator 2 view .LVU4501
 12789 45e3 4809F1   		or	rcx, rsi	# tmp163, tmp160
 12790 45e6 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 527:sieve_extend.c ****     {
 12791              		.loc 1 527 22 is_stmt 1 discriminator 2 view .LVU4502
 12792              	.LVL769:
 527:sieve_extend.c ****     {
 12793              		.loc 1 527 12 discriminator 2 view .LVU4503
 12794              	.L1114:
 12795              	# sieve_extend.c:531: }
 531:sieve_extend.c **** 
 12796              		.loc 1 531 1 is_stmt 0 view .LVU4504
 12797 45ea C3       		ret	
 12798              	.LVL770:
 12799              	.L1117:
 531:sieve_extend.c **** 
 12800              		.loc 1 531 1 view .LVU4505
GAS LISTING /tmp/ccqpmidN.s 			page 346


 12801 45eb C3       		ret	
 12802              	.LVL771:
 12803              	.L1116:
 12804              	.LBB603:
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12805              		.loc 1 522 25 is_stmt 1 view .LVU4506
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12806              		.loc 1 523 13 view .LVU4507
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12807              		.loc 1 522 32 view .LVU4508
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12808              		.loc 1 522 25 view .LVU4509
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12809              		.loc 1 523 13 view .LVU4510
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12810              		.loc 1 522 32 view .LVU4511
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12811              		.loc 1 522 25 view .LVU4512
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12812              		.loc 1 523 13 view .LVU4513
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12813              		.loc 1 522 32 view .LVU4514
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12814              		.loc 1 522 25 view .LVU4515
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12815              		.loc 1 523 13 view .LVU4516
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12816              		.loc 1 522 32 view .LVU4517
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12817              		.loc 1 522 25 view .LVU4518
 522:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12818              		.loc 1 522 25 is_stmt 0 view .LVU4519
 12819              	.LBE603:
 12820              	.LBB604:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12821              		.loc 1 524 25 is_stmt 1 view .LVU4520
 525:sieve_extend.c ****     }
 12822              		.loc 1 525 13 view .LVU4521
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12823              		.loc 1 524 32 view .LVU4522
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12824              		.loc 1 524 25 view .LVU4523
 525:sieve_extend.c ****     }
 12825              		.loc 1 525 13 view .LVU4524
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12826              		.loc 1 524 32 view .LVU4525
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12827              		.loc 1 524 25 view .LVU4526
 525:sieve_extend.c ****     }
 12828              		.loc 1 525 13 view .LVU4527
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12829              		.loc 1 524 32 view .LVU4528
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12830              		.loc 1 524 25 view .LVU4529
 525:sieve_extend.c ****     }
 12831              		.loc 1 525 13 view .LVU4530
 12832              	.LBE604:
GAS LISTING /tmp/ccqpmidN.s 			page 347


 12833              	.LBB605:
 12834              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12835              		.loc 1 523 25 is_stmt 0 view .LVU4531
 12836 45ec C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.546, MEM[base: src_35(D), index: ivtmp.560_114, o
 12836      7E2055
 12837 45f3 41B90200 		mov	r9d, 2	# ivtmp.557,
 12837      0000
 12838              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12839              		.loc 1 523 34 view .LVU4532
 12840 45f9 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.560_114, offset: 0B]
 12840      20
 12841 45fe B8400000 		mov	eax, 64	# ivtmp.560,
 12841      00
 12842              	.LBE605:
 12843              	.LBB606:
 12844              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12845              		.loc 1 525 34 view .LVU4533
 12846 4603 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.547, vect__102.546, _4
 12847              	.LBE606:
 12848              	.LBB607:
 12849              	# sieve_extend.c:523:             *(dst+j) = (*(src+j))<<shift;
 523:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12850              		.loc 1 523 34 view .LVU4534
 12851 4607 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.551, tmp278, shift
 12852              	.LBE607:
 12853              	.LBB608:
 12854              	# sieve_extend.c:525:             *(dst+j) |= (*(src+1)>>(64-shift));
 525:sieve_extend.c ****     }
 12855              		.loc 1 525 22 view .LVU4535
 12856 460b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.552, vect__57.547, vect__104.551
 12856      DA
 12857 4610 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.560_114, offset: 0B], vect_
 12857      20
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12858              		.loc 1 524 32 is_stmt 1 view .LVU4536
 12859              	.LVL772:
 524:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12860              		.loc 1 524 25 view .LVU4537
 12861              	.LBE608:
 520:sieve_extend.c ****     {
 12862              		.loc 1 520 24 view .LVU4538
 520:sieve_extend.c ****     {
 12863              		.loc 1 520 12 view .LVU4539
 12864 4615 E9F6FCFF 		jmp	.L1105	#
 12864      FF
 12865              	.LVL773:
 12866              	.L1115:
 12867              	# sieve_extend.c:518:     int i = 0;
 518:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 12868              		.loc 1 518 9 is_stmt 0 view .LVU4540
 12869 461a 31C0     		xor	eax, eax	# i
 12870 461c E92EFFFF 		jmp	.L1074	#
 12870      FF
 12871              		.cfi_endproc
GAS LISTING /tmp/ccqpmidN.s 			page 348


 12872              	.LFE66:
 12874              		.section	.rodata.str1.8,"aMS",@progbits,1
 12875              		.align 8
 12876              	.LC9:
 12877 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 12877      6C743A20 
 12877      53696576 
 12877      6573697A 
 12877      6520256A 
 12878 0055 000000   		.align 8
 12879              	.LC10:
 12880 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 12880      616C6964 
 12880      20726573 
 12880      756C742E 
 12880      20536965 
 12881              		.section	.rodata.str1.1
 12882              	.LC11:
 12883 0023 44656570 		.string	"DeepAnalyzing"
 12883      416E616C 
 12883      797A696E 
 12883      6700
 12884              		.section	.rodata.str1.8
 12885 00bb 00000000 		.align 8
 12885      00
 12886              	.LC12:
 12887 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 12887      65722025 
 12887      6A752028 
 12887      256A7529 
 12887      20776173 
 12888              		.align 8
 12889              	.LC13:
 12890 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 12890      65722025 
 12890      6A752028 
 12890      256A7529 
 12890      20776173 
 12891              		.text
 12892 4621 66662E0F 		.p2align 4
 12892      1F840000 
 12892      0000000F 
 12892      1F4000
 12893              		.globl	validatePrimeCount
 12895              	validatePrimeCount:
 12896              	.LVL774:
 12897              	.LFB79:
 993:sieve_extend.c **** 
 12898              		.loc 1 993 76 is_stmt 1 view -0
 12899              		.cfi_startproc
 993:sieve_extend.c **** 
 12900              		.loc 1 993 76 is_stmt 0 view .LVU4542
 12901 4630 F30F1EFA 		endbr64	
 995:sieve_extend.c ****     counter_t valid_primes = 0;
 12902              		.loc 1 995 5 is_stmt 1 view .LVU4543
 12903              	# sieve_extend.c:993: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 993:sieve_extend.c **** 
GAS LISTING /tmp/ccqpmidN.s 			page 349


 12904              		.loc 1 993 76 is_stmt 0 view .LVU4544
 12905 4634 4157     		push	r15	#
 12906              		.cfi_def_cfa_offset 16
 12907              		.cfi_offset 15, -16
 12908 4636 4156     		push	r14	#
 12909              		.cfi_def_cfa_offset 24
 12910              		.cfi_offset 14, -24
 12911 4638 4155     		push	r13	#
 12912              		.cfi_def_cfa_offset 32
 12913              		.cfi_offset 13, -32
 12914 463a 4154     		push	r12	#
 12915              		.cfi_def_cfa_offset 40
 12916              		.cfi_offset 12, -40
 12917 463c 55       		push	rbp	#
 12918              		.cfi_def_cfa_offset 48
 12919              		.cfi_offset 6, -48
 12920 463d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 12921 4640 53       		push	rbx	#
 12922              		.cfi_def_cfa_offset 56
 12923              		.cfi_offset 3, -56
 12924 4641 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 12925 4643 488D6424 		lea	rsp, -56[rsp]	#,
 12925      C8
 12926              		.cfi_def_cfa_offset 112
 12927              	# sieve_extend.c:995:     counter_t primecount = count_primes(sieve);
 995:sieve_extend.c ****     counter_t valid_primes = 0;
 12928              		.loc 1 995 28 view .LVU4545
 12929 4648 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 12930 464b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 12931              	.LVL775:
 12932              	.LBB630:
 12933              	.LBI630:
 964:sieve_extend.c ****     counter_t primeCount = 1;
 12934              		.loc 1 964 18 is_stmt 1 view .LVU4546
 12935              	.LBB631:
 12936              	.LBB632:
 966:sieve_extend.c ****     return primeCount;
 12937              		.loc 1 966 30 view .LVU4547
 12938 464f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 12939              	# sieve_extend.c:966:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 966:sieve_extend.c ****     return primeCount;
 12940              		.loc 1 966 5 is_stmt 0 view .LVU4548
 12941 4653 4883FF01 		cmp	rdi, 1	# _25,
 12942 4657 0F860B05 		jbe	.L1119	#,
 12942      0000
 12943              	# sieve_extend.c:966:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 966:sieve_extend.c ****     return primeCount;
 12944              		.loc 1 966 20 view .LVU4549
 12945 465d B8010000 		mov	eax, 1	# factor,
 12945      00
 12946              	.LBE632:
 12947              	# sieve_extend.c:965:     counter_t primeCount = 1;
 965:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 12948              		.loc 1 965 15 view .LVU4550
 12949 4662 41B80100 		mov	r8d, 1	# primeCount,
 12949      0000
 12950              	.LVL776:
GAS LISTING /tmp/ccqpmidN.s 			page 350


 12951 4668 0F1F8400 		.p2align 4
 12951      00000000 
 12952              		.p2align 3
 12953              	.L1122:
 12954              	.LBB635:
 966:sieve_extend.c ****     return primeCount;
 12955              		.loc 1 966 104 is_stmt 1 view .LVU4551
 12956              	# sieve_extend.c:966:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 966:sieve_extend.c ****     return primeCount;
 12957              		.loc 1 966 114 is_stmt 0 view .LVU4552
 12958 4670 4983C001 		add	r8, 1	# primeCount,
 12959              	.LVL777:
 966:sieve_extend.c ****     return primeCount;
 12960              		.loc 1 966 52 is_stmt 1 view .LVU4553
 12961              	# sieve_extend.c:966:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 966:sieve_extend.c ****     return primeCount;
 12962              		.loc 1 966 61 is_stmt 0 view .LVU4554
 12963 4674 4883C001 		add	rax, 1	# factor,
 12964              	.LVL778:
 12965              	.L1262:
 12966              	.LBB633:
 12967              	.LBI633:
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12968              		.loc 1 111 25 is_stmt 1 view .LVU4555
 12969              	.LBB634:
 112:sieve_extend.c ****     return index;
 12970              		.loc 1 112 5 view .LVU4556
 112:sieve_extend.c ****     return index;
 12971              		.loc 1 112 11 view .LVU4557
 12972              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12973              		.loc 1 112 21 is_stmt 0 view .LVU4558
 12974 4678 4889C1   		mov	rcx, rax	# tmp162, factor
 12975 467b 48C1E906 		shr	rcx, 6	# tmp162,
 12976              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12977              		.loc 1 112 12 view .LVU4559
 12978 467f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 12979              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12980              		.loc 1 112 11 view .LVU4560
 12981 4683 490FA3C3 		bt	r11, rax	# *_106, factor
 12982 4687 0F83AB00 		jnc	.L1120	#,
 12982      0000
 112:sieve_extend.c ****     return index;
 12983              		.loc 1 112 58 is_stmt 1 view .LVU4561
 12984              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12985              		.loc 1 112 63 is_stmt 0 view .LVU4562
 12986 468d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 12987              	.LVL779:
 12988              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12989              		.loc 1 112 21 view .LVU4563
 12990 4691 4D89E5   		mov	r13, r12	# tmp167, factor
 12991              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 351


 12992              		.loc 1 112 63 view .LVU4564
 12993 4694 4C89E0   		mov	rax, r12	# factor, tmp235
 112:sieve_extend.c ****     return index;
 12994              		.loc 1 112 11 is_stmt 1 view .LVU4565
 12995              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12996              		.loc 1 112 21 is_stmt 0 view .LVU4566
 12997 4697 49C1ED06 		shr	r13, 6	# tmp167,
 12998              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 12999              		.loc 1 112 12 view .LVU4567
 13000 469b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 13001              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13002              		.loc 1 112 11 view .LVU4568
 13003 469f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 13004 46a3 0F838F00 		jnc	.L1120	#,
 13004      0000
 112:sieve_extend.c ****     return index;
 13005              		.loc 1 112 58 is_stmt 1 view .LVU4569
 13006              	.LVL780:
 13007              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13008              		.loc 1 112 63 is_stmt 0 view .LVU4570
 13009 46a9 4883C001 		add	rax, 1	# factor,
 13010              	.LVL781:
 112:sieve_extend.c ****     return index;
 13011              		.loc 1 112 11 is_stmt 1 view .LVU4571
 13012              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13013              		.loc 1 112 21 is_stmt 0 view .LVU4572
 13014 46ad 4989C6   		mov	r14, rax	# tmp279, factor
 13015 46b0 49C1EE06 		shr	r14, 6	# tmp279,
 13016              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13017              		.loc 1 112 12 view .LVU4573
 13018 46b4 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 13019              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13020              		.loc 1 112 11 view .LVU4574
 13021 46b8 480FA3C6 		bt	rsi, rax	# *_35, factor
 13022 46bc 737A     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13023              		.loc 1 112 58 is_stmt 1 view .LVU4575
 13024              	.LVL782:
 13025              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13026              		.loc 1 112 63 is_stmt 0 view .LVU4576
 13027 46be 498D4424 		lea	rax, 2[r12]	# factor,
 13027      02
 13028              	.LVL783:
 112:sieve_extend.c ****     return index;
 13029              		.loc 1 112 11 is_stmt 1 view .LVU4577
 13030              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13031              		.loc 1 112 21 is_stmt 0 view .LVU4578
 13032 46c3 4989C2   		mov	r10, rax	# tmp283, factor
GAS LISTING /tmp/ccqpmidN.s 			page 352


 13033 46c6 49C1EA06 		shr	r10, 6	# tmp283,
 13034              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13035              		.loc 1 112 12 view .LVU4579
 13036 46ca 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 13037              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13038              		.loc 1 112 11 view .LVU4580
 13039 46ce 480FA3C1 		bt	rcx, rax	# *_35, factor
 13040 46d2 7364     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13041              		.loc 1 112 58 is_stmt 1 view .LVU4581
 13042              	.LVL784:
 13043              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13044              		.loc 1 112 63 is_stmt 0 view .LVU4582
 13045 46d4 498D4424 		lea	rax, 3[r12]	# factor,
 13045      03
 13046              	.LVL785:
 112:sieve_extend.c ****     return index;
 13047              		.loc 1 112 11 is_stmt 1 view .LVU4583
 13048              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13049              		.loc 1 112 21 is_stmt 0 view .LVU4584
 13050 46d9 4989C3   		mov	r11, rax	# tmp287, factor
 13051 46dc 49C1EB06 		shr	r11, 6	# tmp287,
 13052              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13053              		.loc 1 112 12 view .LVU4585
 13054 46e0 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 13055              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13056              		.loc 1 112 11 view .LVU4586
 13057 46e4 490FA3C5 		bt	r13, rax	# *_35, factor
 13058 46e8 734E     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13059              		.loc 1 112 58 is_stmt 1 view .LVU4587
 13060              	.LVL786:
 13061              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13062              		.loc 1 112 63 is_stmt 0 view .LVU4588
 13063 46ea 498D4424 		lea	rax, 4[r12]	# factor,
 13063      04
 13064              	.LVL787:
 112:sieve_extend.c ****     return index;
 13065              		.loc 1 112 11 is_stmt 1 view .LVU4589
 13066              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13067              		.loc 1 112 21 is_stmt 0 view .LVU4590
 13068 46ef 4989C7   		mov	r15, rax	# tmp291, factor
 13069 46f2 49C1EF06 		shr	r15, 6	# tmp291,
 13070              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13071              		.loc 1 112 12 view .LVU4591
 13072 46f6 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 13073              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccqpmidN.s 			page 353


 13074              		.loc 1 112 11 view .LVU4592
 13075 46fa 490FA3C6 		bt	r14, rax	# *_35, factor
 13076 46fe 7338     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13077              		.loc 1 112 58 is_stmt 1 view .LVU4593
 13078              	.LVL788:
 13079              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13080              		.loc 1 112 63 is_stmt 0 view .LVU4594
 13081 4700 498D4424 		lea	rax, 5[r12]	# factor,
 13081      05
 13082              	.LVL789:
 112:sieve_extend.c ****     return index;
 13083              		.loc 1 112 11 is_stmt 1 view .LVU4595
 13084              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13085              		.loc 1 112 21 is_stmt 0 view .LVU4596
 13086 4705 4889C6   		mov	rsi, rax	# tmp295, factor
 13087 4708 48C1EE06 		shr	rsi, 6	# tmp295,
 13088              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13089              		.loc 1 112 12 view .LVU4597
 13090 470c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 13091              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13092              		.loc 1 112 11 view .LVU4598
 13093 4710 490FA3C2 		bt	r10, rax	# *_35, factor
 13094 4714 7322     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13095              		.loc 1 112 58 is_stmt 1 view .LVU4599
 13096              	.LVL790:
 13097              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13098              		.loc 1 112 63 is_stmt 0 view .LVU4600
 13099 4716 498D4424 		lea	rax, 6[r12]	# factor,
 13099      06
 13100              	.LVL791:
 112:sieve_extend.c ****     return index;
 13101              		.loc 1 112 11 is_stmt 1 view .LVU4601
 13102              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13103              		.loc 1 112 21 is_stmt 0 view .LVU4602
 13104 471b 4889C1   		mov	rcx, rax	# tmp299, factor
 13105 471e 48C1E906 		shr	rcx, 6	# tmp299,
 13106              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13107              		.loc 1 112 12 view .LVU4603
 13108 4722 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 13109              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 13110              		.loc 1 112 11 view .LVU4604
 13111 4726 490FA3C3 		bt	r11, rax	# *_35, factor
 13112 472a 730C     		jnc	.L1120	#,
 112:sieve_extend.c ****     return index;
 13113              		.loc 1 112 58 is_stmt 1 view .LVU4605
 13114              	.LVL792:
 13115              	# sieve_extend.c:112:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccqpmidN.s 			page 354


 112:sieve_extend.c ****     return index;
 13116              		.loc 1 112 63 is_stmt 0 view .LVU4606
 13117 472c 498D4424 		lea	rax, 7[r12]	# factor,
 13117      07
 13118              	.LVL793:
 112:sieve_extend.c ****     return index;
 13119              		.loc 1 112 11 is_stmt 1 view .LVU4607
 13120 4731 E942FFFF 		jmp	.L1262	#
 13120      FF
 13121              		.p2align 4,,7
 13122 4736 6690     		.p2align 3
 13123              	.L1120:
 13124              	.LVL794:
 112:sieve_extend.c ****     return index;
 13125              		.loc 1 112 11 is_stmt 0 view .LVU4608
 13126              	.LBE634:
 13127              	.LBE633:
 966:sieve_extend.c ****     return primeCount;
 13128              		.loc 1 966 30 is_stmt 1 view .LVU4609
 13129              	# sieve_extend.c:966:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 966:sieve_extend.c ****     return primeCount;
 13130              		.loc 1 966 5 is_stmt 0 view .LVU4610
 13131 4738 4839C7   		cmp	rdi, rax	# _25, factor
 13132 473b 0F872FFF 		ja	.L1122	#,
 13132      FFFF
 966:sieve_extend.c ****     return primeCount;
 13133              		.loc 1 966 5 view .LVU4611
 13134              	.LBE635:
 967:sieve_extend.c **** }
 13135              		.loc 1 967 5 is_stmt 1 view .LVU4612
 13136              	.LVL795:
 967:sieve_extend.c **** }
 13137              		.loc 1 967 5 is_stmt 0 view .LVU4613
 13138              	.LBE631:
 13139              	.LBE630:
 996:sieve_extend.c ****     switch(sieve->size) {
 13140              		.loc 1 996 5 is_stmt 1 view .LVU4614
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13141              		.loc 1 997 5 view .LVU4615
 13142 4741 83FB03   		cmp	ebx, 3	# option_verboselevel,
 13143 4744 0F9FC2   		setg	dl	#, tmp172
 13144 4747 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 13144      860100
 13145 474e 0F842D06 		je	.L1123	#,
 13145      0000
 13146 4754 0F86CC02 		jbe	.L1263	#,
 13146      0000
 13147 475a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 13147      E1F505
 13148 4761 0F84D905 		je	.L1131	#,
 13148      0000
 13149              		.p2align 4,,4
 13150 4767 0F863303 		jbe	.L1264	#,
 13150      0000
 13151 476d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 13151      CA9A3B
 13152 4774 0F85EB05 		jne	.L1129	#,
GAS LISTING /tmp/ccqpmidN.s 			page 355


 13152      0000
 13153 477a 4981F82E 		cmp	r8, 50847534	# primeCount,
 13153      DF0703
 13154              	# sieve_extend.c:1006:         case 1000000000:    valid_primes = 50847534; break;
1006:sieve_extend.c ****         default:            valid_primes= 0;
 13155              		.loc 1 1006 42 is_stmt 0 view .LVU4616
 13156 4781 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 13156      03
 13157 4786 410F94C4 		sete	r12b	#, tmp189
 13158 478a 4421E2   		and	edx, r12d	# _251, tmp189
 13159 478d 4981F82E 		cmp	r8, 50847534	# primeCount,
 13159      DF0703
 13160 4794 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 13161 4798 410F95C6 		setne	r14b	#, _135
1006:sieve_extend.c ****         default:            valid_primes= 0;
 13162              		.loc 1 1006 29 is_stmt 1 view .LVU4617
 13163              	.LVL796:
1006:sieve_extend.c ****         default:            valid_primes= 0;
 13164              		.loc 1 1006 54 view .LVU4618
 13165 479c 0F1F4000 		.p2align 4
 13166              		.p2align 3
 13167              	.L1136:
1010:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13168              		.loc 1 1010 5 view .LVU4619
1011:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13169              		.loc 1 1011 5 view .LVU4620
 13170              	# sieve_extend.c:1011:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1011:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13171              		.loc 1 1011 8 is_stmt 0 view .LVU4621
 13172 47a0 84D2     		test	dl, dl	# _251
 13173 47a2 0F841704 		je	.L1137	#,
 13173      0000
1011:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13174              		.loc 1 1011 45 is_stmt 1 discriminator 1 view .LVU4622
 13175              	.LVL797:
 13176              	.LBB637:
 13177              	.LBI637:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13178              		.loc 3 105 1 discriminator 1 view .LVU4623
 13179              	.LBB638:
 13180              		.loc 3 107 3 discriminator 1 view .LVU4624
 13181              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13182              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4625
 13183 47a8 4C89CA   		mov	rdx, r9	#, pretmp_199
 13184 47ab 488D3500 		lea	rsi, .LC9[rip]	#,
 13184      000000
 13185 47b2 BF010000 		mov	edi, 1	#,
 13185      00
 13186 47b7 31C0     		xor	eax, eax	#
 13187 47b9 E8000000 		call	__printf_chk@PLT	#
 13187      00
 13188              	.LVL798:
 13189              		.loc 3 107 10 discriminator 1 view .LVU4626
 13190              	.LBE638:
 13191              	.LBE637:
1012:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13192              		.loc 1 1012 5 is_stmt 1 discriminator 1 view .LVU4627
GAS LISTING /tmp/ccqpmidN.s 			page 356


 13193              	.L1138:
1016:sieve_extend.c ****     return (valid);
 13194              		.loc 1 1016 5 view .LVU4628
 13195              	# sieve_extend.c:1016:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1016:sieve_extend.c ****     return (valid);
 13196              		.loc 1 1016 8 is_stmt 0 view .LVU4629
 13197 47be 83FB02   		cmp	ebx, 2	# option_verboselevel,
 13198 47c1 0F8E4C02 		jle	.L1118	#,
 13198      0000
 13199 47c7 4584F6   		test	r14b, r14b	# _135
 13200 47ca 0F844302 		je	.L1118	#,
 13200      0000
1016:sieve_extend.c ****     return (valid);
 13201              		.loc 1 1016 45 is_stmt 1 discriminator 1 view .LVU4630
 13202              	.LBB639:
 13203              	.LBI639:
 970:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13204              		.loc 1 970 13 discriminator 1 view .LVU4631
 13205              	.LVL799:
 13206              	.LBB640:
 971:sieve_extend.c ****     counter_t warn_prime = 0;
 13207              		.loc 1 971 5 discriminator 1 view .LVU4632
 13208              	.LBB641:
 13209              	.LBI641:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13210              		.loc 3 105 1 discriminator 1 view .LVU4633
 13211              	.LBB642:
 13212              		.loc 3 107 3 discriminator 1 view .LVU4634
 13213              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13214              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4635
 13215 47d0 488D3D00 		lea	rdi, .LC11[rip]	#,
 13215      000000
 13216 47d7 E8000000 		call	puts@PLT	#
 13216      00
 13217              	.LVL800:
 13218              		.loc 3 107 10 discriminator 1 view .LVU4636
 13219              	.LBE642:
 13220              	.LBE641:
 972:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13221              		.loc 1 972 5 is_stmt 1 discriminator 1 view .LVU4637
 973:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13222              		.loc 1 973 5 discriminator 1 view .LVU4638
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13223              		.loc 1 974 5 discriminator 1 view .LVU4639
 13224              	.LBB643:
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13225              		.loc 1 974 10 discriminator 1 view .LVU4640
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13226              		.loc 1 974 31 discriminator 1 view .LVU4641
 13227              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13228              		.loc 1 974 44 is_stmt 0 discriminator 1 view .LVU4642
 13229 47dc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13230              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13231              		.loc 1 974 5 discriminator 1 view .LVU4643
 13232 47e0 4883FF01 		cmp	rdi, 1	# _137,
GAS LISTING /tmp/ccqpmidN.s 			page 357


 13233 47e4 0F862902 		jbe	.L1118	#,
 13233      0000
 13234              	.LBB644:
 13235              	.LBB645:
 13236              	.LBB646:
 13237              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13238              		.loc 3 107 10 view .LVU4644
 13239 47ea 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 13239      24
 13240              	.LBE646:
 13241              	.LBE645:
 13242              	.LBE644:
 13243              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13244              		.loc 1 974 5 view .LVU4645
 13245 47ef 41BE0200 		mov	r14d, 2	# ivtmp.593,
 13245      0000
 13246 47f5 41BC0300 		mov	r12d, 3	# ivtmp.591,
 13246      0000
 13247              	.LBE643:
 13248              	# sieve_extend.c:972:     counter_t warn_prime = 0;
 972:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13249              		.loc 1 972 15 view .LVU4646
 13250 47fb 4531C0   		xor	r8d, r8d	# warn_prime
 13251              	# sieve_extend.c:973:     counter_t warn_nonprime = 0;
 973:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13252              		.loc 1 973 15 view .LVU4647
 13253 47fe 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 13253      18000000 
 13253      00
 13254              	.LBB665:
 13255              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13256              		.loc 1 974 20 view .LVU4648
 13257 4807 41BF0100 		mov	r15d, 1	# prime,
 13257      0000
 13258              	.LBB653:
 13259              	.LBB650:
 13260              	.LBB647:
 13261              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13262              		.loc 3 107 10 view .LVU4649
 13263 480d 4989ED   		mov	r13, rbp	# sieve, sieve
 13264              	.LVL801:
 13265              		.p2align 4
 13266              		.p2align 3
 13267              	.L1148:
 13268              		.loc 3 107 10 view .LVU4650
 13269              	.LBE647:
 13270              	.LBE650:
 13271              	.LBE653:
 975:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13272              		.loc 1 975 9 is_stmt 1 view .LVU4651
 13273              	# sieve_extend.c:975:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 975:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13274              		.loc 1 975 29 is_stmt 0 view .LVU4652
 13275 4810 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 13276              	# sieve_extend.c:975:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
GAS LISTING /tmp/ccqpmidN.s 			page 358


 975:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13277              		.loc 1 975 30 view .LVU4653
 13278 4814 4C89FB   		mov	rbx, r15	# tmp198, prime
 13279 4817 48C1EB06 		shr	rbx, 6	# tmp198,
 13280              	# sieve_extend.c:975:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 975:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13281              		.loc 1 975 71 view .LVU4654
 13282 481b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 13282      00
 13283 4820 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 13283      C9
 13284              	# sieve_extend.c:975:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 975:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13285              		.loc 1 975 12 view .LVU4655
 13286 4825 83E101   		and	ecx, 1	# c,
 13287 4828 0F84BA02 		je	.L1140	#,
 13287      0000
 13288              	.LVL802:
 13289              	.LBB654:
 13290              	.LBB655:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13291              		.loc 1 984 32 is_stmt 1 view .LVU4656
 13292              	.LBE655:
 13293              	# sieve_extend.c:983:             counter_t c_prime = 0;
 983:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13294              		.loc 1 983 23 is_stmt 0 view .LVU4657
 13295 482e 31ED     		xor	ebp, ebp	# c_prime
 13296              	.LBB656:
 13297              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13298              		.loc 1 984 13 view .LVU4658
 13299 4830 4885FF   		test	rdi, rdi	# _137
 13300 4833 BE030000 		mov	esi, 3	# ivtmp.583,
 13300      00
 13301 4838 0F84E103 		je	.L1252	#,
 13301      0000
 13302 483e 4989FB   		mov	r11, rdi	# tmp231, _137
 13303 4841 4929CB   		sub	r11, rcx	# tmp231, c
 13304 4844 4183E303 		and	r11d, 3	# tmp231,
 13305 4848 4D89DA   		mov	r10, r11	# tmp232, tmp231
 13306 484b 0F84BF00 		je	.L1141	#,
 13306      0000
 13307              	.LVL803:
 985:sieve_extend.c ****             }
 13308              		.loc 1 985 17 is_stmt 1 view .LVU4659
 13309              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13310              		.loc 1 985 48 is_stmt 0 view .LVU4660
 13311 4851 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 13312 4855 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.593
 13313 4858 7411     		je	.L1193	#,
 13314              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13315              		.loc 1 985 33 view .LVU4661
 13316 485a 31D2     		xor	edx, edx	# tmp241
 13317 485c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.591
 13318 485f 48F7F6   		div	rsi	# ivtmp.583
GAS LISTING /tmp/ccqpmidN.s 			page 359


 13319              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13320              		.loc 1 985 82 view .LVU4662
 13321 4862 31ED     		xor	ebp, ebp	# c_prime
 985:sieve_extend.c ****             }
 13322              		.loc 1 985 82 view .LVU4663
 13323 4864 4885D2   		test	rdx, rdx	# tmp241
 13324 4867 400F94C5 		sete	bpl	#, c_prime
 13325              	.LVL804:
 13326              	.L1193:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13327              		.loc 1 984 68 is_stmt 1 view .LVU4664
 13328              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13329              		.loc 1 984 69 is_stmt 0 view .LVU4665
 13330 486b 4883C101 		add	rcx, 1	# c,
 13331              	.LVL805:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13332              		.loc 1 984 32 is_stmt 1 view .LVU4666
 13333              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13334              		.loc 1 984 13 is_stmt 0 view .LVU4667
 13335 486f 4839F9   		cmp	rcx, rdi	# c, _137
 13336 4872 0F877801 		ja	.L1147	#,
 13336      0000
 13337              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13338              		.loc 1 984 51 view .LVU4668
 13339 4878 4989C9   		mov	r9, rcx	# tmp244, c
 13340 487b BE050000 		mov	esi, 5	# ivtmp.583,
 13340      00
 13341 4880 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 13342              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13343              		.loc 1 984 47 view .LVU4669
 13344 4884 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.591
 13345 4887 0F876301 		ja	.L1147	#,
 13345      0000
 13346 488d 4983FA01 		cmp	r10, 1	# tmp232,
 13347 4891 747D     		je	.L1141	#,
 13348 4893 4983FA02 		cmp	r10, 2	# tmp232,
 13349 4897 7438     		je	.L1224	#,
 985:sieve_extend.c ****             }
 13350              		.loc 1 985 17 is_stmt 1 view .LVU4670
 13351              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13352              		.loc 1 985 48 is_stmt 0 view .LVU4671
 13353 4899 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 13354 489d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.593
 13355 48a0 7417     		je	.L1195	#,
 13356              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13357              		.loc 1 985 33 view .LVU4672
 13358 48a2 31D2     		xor	edx, edx	# tmp247
 13359 48a4 4C89E0   		mov	rax, r12	# tmp248, ivtmp.591
 13360 48a7 48F7F6   		div	rsi	# ivtmp.583
 13361              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/ccqpmidN.s 			page 360


 985:sieve_extend.c ****             }
 13362              		.loc 1 985 20 view .LVU4673
 13363 48aa 4885D2   		test	rdx, rdx	# tmp247
 13364 48ad 410F94C3 		sete	r11b	#, tmp249
 13365              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13366              		.loc 1 985 82 view .LVU4674
 13367 48b1 4180FB01 		cmp	r11b, 1	# tmp249,
 13368 48b5 4883DDFF 		sbb	rbp, -1	# c_prime,
 13369              	.LVL806:
 13370              	.L1195:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13371              		.loc 1 984 68 is_stmt 1 view .LVU4675
 13372              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13373              		.loc 1 984 69 is_stmt 0 view .LVU4676
 13374 48b9 4883C101 		add	rcx, 1	# c,
 13375              	.LVL807:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13376              		.loc 1 984 32 is_stmt 1 view .LVU4677
 13377 48bd 4883C602 		add	rsi, 2	# ivtmp.583,
 13378              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13379              		.loc 1 984 51 is_stmt 0 view .LVU4678
 13380 48c1 4989CA   		mov	r10, rcx	# tmp250, c
 13381 48c4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 13382              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13383              		.loc 1 984 47 view .LVU4679
 13384 48c8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.591
 13385 48cb 0F871F01 		ja	.L1147	#,
 13385      0000
 13386              	.L1224:
 985:sieve_extend.c ****             }
 13387              		.loc 1 985 17 is_stmt 1 view .LVU4680
 13388              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13389              		.loc 1 985 48 is_stmt 0 view .LVU4681
 13390 48d1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 13391 48d5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.593
 13392 48d8 7415     		je	.L1198	#,
 13393              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13394              		.loc 1 985 33 view .LVU4682
 13395 48da 31D2     		xor	edx, edx	# tmp253
 13396 48dc 4C89E0   		mov	rax, r12	# tmp254, ivtmp.591
 13397 48df 48F7F6   		div	rsi	# ivtmp.583
 13398              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13399              		.loc 1 985 20 view .LVU4683
 13400 48e2 4885D2   		test	rdx, rdx	# tmp253
 13401 48e5 0F94C3   		sete	bl	#, tmp255
 13402              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13403              		.loc 1 985 82 view .LVU4684
 13404 48e8 80FB01   		cmp	bl, 1	# tmp255,
 13405 48eb 4883DDFF 		sbb	rbp, -1	# c_prime,
GAS LISTING /tmp/ccqpmidN.s 			page 361


 13406              	.LVL808:
 13407              	.L1198:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13408              		.loc 1 984 68 is_stmt 1 view .LVU4685
 13409              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13410              		.loc 1 984 69 is_stmt 0 view .LVU4686
 13411 48ef 4883C101 		add	rcx, 1	# c,
 13412              	.LVL809:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13413              		.loc 1 984 32 is_stmt 1 view .LVU4687
 13414 48f3 4883C602 		add	rsi, 2	# ivtmp.583,
 13415              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13416              		.loc 1 984 51 is_stmt 0 view .LVU4688
 13417 48f7 4989CB   		mov	r11, rcx	# tmp256, c
 13418 48fa 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 13419              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13420              		.loc 1 984 47 view .LVU4689
 13421 48fe 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.591
 13422 4901 0F87E900 		ja	.L1147	#,
 13422      0000
 13423              	.LVL810:
 13424 4907 660F1F84 		.p2align 4
 13424      00000000 
 13424      00
 13425              		.p2align 3
 13426              	.L1141:
 985:sieve_extend.c ****             }
 13427              		.loc 1 985 17 is_stmt 1 view .LVU4690
 13428              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13429              		.loc 1 985 48 is_stmt 0 view .LVU4691
 13430 4910 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 13431 4914 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.593
 13432 4917 7417     		je	.L1146	#,
 13433              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13434              		.loc 1 985 33 view .LVU4692
 13435 4919 31D2     		xor	edx, edx	# tmp214
 13436 491b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.591
 13437 491e 48F7F6   		div	rsi	# ivtmp.583
 13438              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13439              		.loc 1 985 20 view .LVU4693
 13440 4921 4885D2   		test	rdx, rdx	# tmp214
 13441 4924 410F94C1 		sete	r9b	#, tmp217
 13442              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13443              		.loc 1 985 82 view .LVU4694
 13444 4928 4180F901 		cmp	r9b, 1	# tmp217,
 13445 492c 4883DDFF 		sbb	rbp, -1	# c_prime,
 13446              	.LVL811:
 13447              	.L1146:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13448              		.loc 1 984 68 is_stmt 1 view .LVU4695
GAS LISTING /tmp/ccqpmidN.s 			page 362


 13449              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13450              		.loc 1 984 69 is_stmt 0 view .LVU4696
 13451 4930 4883C101 		add	rcx, 1	# tmp234,
 13452              	.LVL812:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13453              		.loc 1 984 32 is_stmt 1 view .LVU4697
 13454              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13455              		.loc 1 984 13 is_stmt 0 view .LVU4698
 13456 4934 4839F9   		cmp	rcx, rdi	# tmp234, _137
 13457 4937 0F87B300 		ja	.L1147	#,
 13457      0000
 13458              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13459              		.loc 1 984 51 view .LVU4699
 13460 493d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 13461 4940 4883C602 		add	rsi, 2	# tmp233,
 13462 4944 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 13463              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13464              		.loc 1 984 47 view .LVU4700
 13465 4948 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.591
 13466 494b 0F879F00 		ja	.L1147	#,
 13466      0000
 985:sieve_extend.c ****             }
 13467              		.loc 1 985 17 is_stmt 1 view .LVU4701
 13468              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13469              		.loc 1 985 48 is_stmt 0 view .LVU4702
 13470 4951 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 13471 4955 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.593
 13472 4958 7417     		je	.L1202	#,
 13473              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13474              		.loc 1 985 33 view .LVU4703
 13475 495a 31D2     		xor	edx, edx	# tmp259
 13476 495c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.591
 13477 495f 48F7F6   		div	rsi	# tmp233
 13478              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13479              		.loc 1 985 20 view .LVU4704
 13480 4962 4885D2   		test	rdx, rdx	# tmp259
 13481 4965 410F94C2 		sete	r10b	#, tmp261
 13482              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13483              		.loc 1 985 82 view .LVU4705
 13484 4969 4180FA01 		cmp	r10b, 1	# tmp261,
 13485 496d 4883DDFF 		sbb	rbp, -1	# c_prime,
 13486              	.LVL813:
 13487              	.L1202:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13488              		.loc 1 984 68 is_stmt 1 view .LVU4706
 13489              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13490              		.loc 1 984 69 is_stmt 0 view .LVU4707
 13491 4971 4C8D4901 		lea	r9, 1[rcx]	# c,
GAS LISTING /tmp/ccqpmidN.s 			page 363


 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13492              		.loc 1 984 32 is_stmt 1 view .LVU4708
 13493 4975 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.583,
 13494              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13495              		.loc 1 984 51 is_stmt 0 view .LVU4709
 13496 4979 4D89CB   		mov	r11, r9	# tmp264, c
 13497 497c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13498              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13499              		.loc 1 984 47 view .LVU4710
 13500 4980 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.591
 13501 4983 776B     		ja	.L1147	#,
 985:sieve_extend.c ****             }
 13502              		.loc 1 985 17 is_stmt 1 view .LVU4711
 13503              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13504              		.loc 1 985 48 is_stmt 0 view .LVU4712
 13505 4985 4D01C9   		add	r9, r9	# tmp265
 13506 4988 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.593
 13507 498b 7417     		je	.L1204	#,
 13508              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13509              		.loc 1 985 33 view .LVU4713
 13510 498d 31D2     		xor	edx, edx	# tmp267
 13511 498f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.591
 13512 4992 48F7F3   		div	rbx	# ivtmp.583
 13513              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13514              		.loc 1 985 20 view .LVU4714
 13515 4995 4885D2   		test	rdx, rdx	# tmp267
 13516 4998 410F94C2 		sete	r10b	#, tmp269
 13517              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13518              		.loc 1 985 82 view .LVU4715
 13519 499c 4180FA01 		cmp	r10b, 1	# tmp269,
 13520 49a0 4883DDFF 		sbb	rbp, -1	# c_prime,
 13521              	.LVL814:
 13522              	.L1204:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13523              		.loc 1 984 68 is_stmt 1 view .LVU4716
 13524              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13525              		.loc 1 984 69 is_stmt 0 view .LVU4717
 13526 49a4 4C8D4902 		lea	r9, 2[rcx]	# c,
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13527              		.loc 1 984 32 is_stmt 1 view .LVU4718
 13528 49a8 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.583,
 13529              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13530              		.loc 1 984 51 is_stmt 0 view .LVU4719
 13531 49ac 4D89CB   		mov	r11, r9	# tmp272, c
 13532 49af 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13533              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13534              		.loc 1 984 47 view .LVU4720
 13535 49b3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.591
GAS LISTING /tmp/ccqpmidN.s 			page 364


 13536 49b6 7738     		ja	.L1147	#,
 985:sieve_extend.c ****             }
 13537              		.loc 1 985 17 is_stmt 1 view .LVU4721
 13538              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13539              		.loc 1 985 48 is_stmt 0 view .LVU4722
 13540 49b8 4D01C9   		add	r9, r9	# tmp273
 13541 49bb 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.593
 13542 49be 7417     		je	.L1206	#,
 13543              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13544              		.loc 1 985 33 view .LVU4723
 13545 49c0 31D2     		xor	edx, edx	# tmp275
 13546 49c2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.591
 13547 49c5 48F7F3   		div	rbx	# ivtmp.583
 13548              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13549              		.loc 1 985 20 view .LVU4724
 13550 49c8 4885D2   		test	rdx, rdx	# tmp275
 13551 49cb 410F94C2 		sete	r10b	#, tmp277
 13552              	# sieve_extend.c:985:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 985:sieve_extend.c ****             }
 13553              		.loc 1 985 82 view .LVU4725
 13554 49cf 4180FA01 		cmp	r10b, 1	# tmp277,
 13555 49d3 4883DDFF 		sbb	rbp, -1	# c_prime,
 13556              	.LVL815:
 13557              	.L1206:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13558              		.loc 1 984 68 is_stmt 1 view .LVU4726
 13559              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13560              		.loc 1 984 69 is_stmt 0 view .LVU4727
 13561 49d7 4883C103 		add	rcx, 3	# c,
 13562              	.LVL816:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13563              		.loc 1 984 32 is_stmt 1 view .LVU4728
 13564 49db 4883C606 		add	rsi, 6	# ivtmp.583,
 13565              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13566              		.loc 1 984 51 is_stmt 0 view .LVU4729
 13567 49df 4989C9   		mov	r9, rcx	# tmp278, c
 13568 49e2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13569              	# sieve_extend.c:984:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13570              		.loc 1 984 47 view .LVU4730
 13571 49e6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.591
 13572 49e9 0F8621FF 		jbe	.L1141	#,
 13572      FFFF
 13573              	.LVL817:
 13574 49ef 90       		.p2align 4
 13575              		.p2align 3
 13576              	.L1147:
 984:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13577              		.loc 1 984 47 view .LVU4731
 13578              	.LBE656:
 987:sieve_extend.c ****         }
 13579              		.loc 1 987 13 is_stmt 1 view .LVU4732
GAS LISTING /tmp/ccqpmidN.s 			page 365


 13580              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13581              		.loc 1 987 16 is_stmt 0 view .LVU4733
 13582 49f0 4885ED   		test	rbp, rbp	# c_prime
 13583 49f3 0F840D02 		je	.L1265	#,
 13583      0000
 13584              	.LVL818:
 13585              	.L1144:
 987:sieve_extend.c ****         }
 13586              		.loc 1 987 16 view .LVU4734
 13587              	.LBE654:
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13588              		.loc 1 974 52 is_stmt 1 view .LVU4735
 13589              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13590              		.loc 1 974 57 is_stmt 0 view .LVU4736
 13591 49f9 4983C701 		add	r15, 1	# prime,
 13592              	.LVL819:
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13593              		.loc 1 974 31 is_stmt 1 view .LVU4737
 13594 49fd 4983C402 		add	r12, 2	# ivtmp.591,
 13595 4a01 4983C602 		add	r14, 2	# ivtmp.593,
 13596              	# sieve_extend.c:974:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13597              		.loc 1 974 5 is_stmt 0 view .LVU4738
 13598 4a05 4939FF   		cmp	r15, rdi	# prime, _137
 13599 4a08 0F8202FE 		jb	.L1148	#,
 13599      FFFF
 13600              	.LVL820:
 13601              	.L1254:
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13602              		.loc 1 974 5 view .LVU4739
 13603 4a0e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 13603      24
 13604              	.LVL821:
 13605              	.L1118:
 974:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13606              		.loc 1 974 5 view .LVU4740
 13607              	.LBE665:
 13608              	.LBE640:
 13609              	.LBE639:
 13610              	# sieve_extend.c:1018: }
1018:sieve_extend.c **** 
 13611              		.loc 1 1018 1 view .LVU4741
 13612 4a13 488D6424 		lea	rsp, 56[rsp]	#,
 13612      38
 13613              		.cfi_remember_state
 13614              		.cfi_def_cfa_offset 56
 13615 4a18 4489E8   		mov	eax, r13d	#, <retval>
 13616 4a1b 5B       		pop	rbx	#
 13617              		.cfi_def_cfa_offset 48
 13618 4a1c 5D       		pop	rbp	#
 13619              		.cfi_def_cfa_offset 40
 13620 4a1d 415C     		pop	r12	#
 13621              		.cfi_def_cfa_offset 32
 13622 4a1f 415D     		pop	r13	#
 13623              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/ccqpmidN.s 			page 366


 13624 4a21 415E     		pop	r14	#
 13625              		.cfi_def_cfa_offset 16
 13626 4a23 415F     		pop	r15	#
 13627              		.cfi_def_cfa_offset 8
 13628 4a25 C3       		ret	
 13629              	.LVL822:
 13630              	.L1263:
 13631              		.cfi_restore_state
 13632              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13633              		.loc 1 997 5 view .LVU4742
 13634 4a26 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 13634      030000
 13635 4a2d 0F84E602 		je	.L1125	#,
 13635      0000
 13636 4a33 7633     		jbe	.L1266	#,
 13637 4a35 4981F910 		cmp	r9, 10000	# pretmp_199,
 13637      270000
 13638 4a3c 0F852303 		jne	.L1129	#,
 13638      0000
 13639 4a42 4981F8CD 		cmp	r8, 1229	# primeCount,
 13639      040000
 13640              	# sieve_extend.c:1001:         case 10000:         valid_primes = 1229;     break;
1001:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13641              		.loc 1 1001 42 view .LVU4743
 13642 4a49 B9CD0400 		mov	ecx, 1229	# valid_primes,
 13642      00
 13643 4a4e 400F94C6 		sete	sil	#, tmp179
 13644 4a52 21F2     		and	edx, esi	# _251, tmp179
 13645 4a54 4981F8CD 		cmp	r8, 1229	# primeCount,
 13645      040000
 13646 4a5b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13647 4a5f 410F95C6 		setne	r14b	#, _135
1001:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13648              		.loc 1 1001 29 is_stmt 1 view .LVU4744
 13649              	.LVL823:
1001:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13650              		.loc 1 1001 54 view .LVU4745
 13651              	# sieve_extend.c:1001:         case 10000:         valid_primes = 1229;     break;
1001:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13652              		.loc 1 1001 9 is_stmt 0 view .LVU4746
 13653 4a63 E938FDFF 		jmp	.L1136	#
 13653      FF
 13654              	.LVL824:
 13655              	.L1266:
 13656              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13657              		.loc 1 997 5 view .LVU4747
 13658 4a68 4983F90A 		cmp	r9, 10	# pretmp_199,
 13659 4a6c 0F841A02 		je	.L1127	#,
 13659      0000
 13660 4a72 4983F964 		cmp	r9, 100	# pretmp_199,
 13661 4a76 0F85E902 		jne	.L1129	#,
 13661      0000
 13662 4a7c 4983F819 		cmp	r8, 25	# primeCount,
 13663 4a80 0F94C1   		sete	cl	#, tmp173
 13664 4a83 21CA     		and	edx, ecx	# _251, tmp173
GAS LISTING /tmp/ccqpmidN.s 			page 367


 13665 4a85 4983F819 		cmp	r8, 25	# primeCount,
 13666 4a89 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13667 4a8d 410F95C6 		setne	r14b	#, _135
 13668              	# sieve_extend.c:999:         case 100:           valid_primes = 25;       break;
 999:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13669              		.loc 1 999 42 view .LVU4748
 13670 4a91 B9190000 		mov	ecx, 25	# valid_primes,
 13670      00
 13671 4a96 E905FDFF 		jmp	.L1136	#
 13671      FF
 13672 4a9b 0F1F4400 		.p2align 4,,7
 13672      00
 13673              		.p2align 3
 13674              	.L1264:
 13675              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13676              		.loc 1 997 5 view .LVU4749
 13677 4aa0 4981F940 		cmp	r9, 1000000	# pretmp_199,
 13677      420F00
 13678 4aa7 0F84B801 		je	.L1133	#,
 13678      0000
 13679 4aad 4981F980 		cmp	r9, 10000000	# pretmp_199,
 13679      969800
 13680 4ab4 0F85AB02 		jne	.L1129	#,
 13680      0000
 13681 4aba 4981F803 		cmp	r8, 664579	# primeCount,
 13681      240A00
 13682              	# sieve_extend.c:1004:         case 10000000:      valid_primes = 664579;   break;
1004:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13683              		.loc 1 1004 42 view .LVU4750
 13684 4ac1 B903240A 		mov	ecx, 664579	# valid_primes,
 13684      00
 13685 4ac6 410F94C7 		sete	r15b	#, tmp185
 13686 4aca 4421FA   		and	edx, r15d	# _251, tmp185
 13687 4acd 4981F803 		cmp	r8, 664579	# primeCount,
 13687      240A00
 13688 4ad4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13689 4ad8 410F95C6 		setne	r14b	#, _135
1004:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13690              		.loc 1 1004 29 is_stmt 1 view .LVU4751
 13691              	.LVL825:
1004:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13692              		.loc 1 1004 54 view .LVU4752
 13693              	# sieve_extend.c:1004:         case 10000000:      valid_primes = 664579;   break;
1004:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13694              		.loc 1 1004 9 is_stmt 0 view .LVU4753
 13695 4adc E9BFFCFF 		jmp	.L1136	#
 13695      FF
 13696              	.LVL826:
 13697              		.p2align 4,,7
 13698 4ae1 0F1F8000 		.p2align 3
 13698      000000
 13699              	.L1140:
 13700              	.LBB670:
 13701              	.LBB668:
 13702              	.LBB666:
 13703              	.LBB663:
GAS LISTING /tmp/ccqpmidN.s 			page 368


 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13704              		.loc 1 976 32 is_stmt 1 view .LVU4754
 13705              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13706              		.loc 1 976 13 is_stmt 0 view .LVU4755
 13707 4ae8 4885FF   		test	rdi, rdi	# _137
 13708 4aeb 0F841DFF 		je	.L1254	#,
 13708      FFFF
 13709              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13710              		.loc 1 976 27 view .LVU4756
 13711 4af1 BB010000 		mov	ebx, 1	# c,
 13711      00
 13712 4af6 EB20     		jmp	.L1145	#
 13713              	.LVL827:
 13714              		.p2align 4,,7
 13715              		.p2align 3
 13716              	.L1154:
 13717              	# sieve_extend.c:978:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 978:sieve_extend.c ****                 }
 13718              		.loc 1 978 35 view .LVU4757
 13719 4af8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13720              	.LVL828:
 13721              	.L1143:
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13722              		.loc 1 976 68 is_stmt 1 view .LVU4758
 13723              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13724              		.loc 1 976 69 is_stmt 0 view .LVU4759
 13725 4afb 4883C301 		add	rbx, 1	# c,
 13726              	.LVL829:
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13727              		.loc 1 976 32 is_stmt 1 view .LVU4760
 13728              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13729              		.loc 1 976 13 is_stmt 0 view .LVU4761
 13730 4aff 4839FB   		cmp	rbx, rdi	# c, _137
 13731 4b02 0F87F1FE 		ja	.L1144	#,
 13731      FFFF
 13732              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13733              		.loc 1 976 51 view .LVU4762
 13734 4b08 4989DB   		mov	r11, rbx	# tmp209, c
 13735 4b0b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 13736              	# sieve_extend.c:976:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 976:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13737              		.loc 1 976 47 view .LVU4763
 13738 4b0f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.591
 13739 4b12 0F87E1FE 		ja	.L1144	#,
 13739      FFFF
 13740              	.LVL830:
 13741              	.L1145:
 977:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13742              		.loc 1 977 17 is_stmt 1 view .LVU4764
 13743 4b18 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 13744 4b1c 31D2     		xor	edx, edx	# tmp204
 13745 4b1e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.591
GAS LISTING /tmp/ccqpmidN.s 			page 369


 13746              	# sieve_extend.c:977:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 977:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13747              		.loc 1 977 39 is_stmt 0 view .LVU4765
 13748 4b21 488D7501 		lea	rsi, 1[rbp]	# _55,
 13749 4b25 48F7F6   		div	rsi	# _55
 13750              	# sieve_extend.c:977:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 977:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13751              		.loc 1 977 48 view .LVU4766
 13752 4b28 4885D2   		test	rdx, rdx	# tmp204
 13753 4b2b 75CE     		jne	.L1143	#,
 977:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13754              		.loc 1 977 48 view .LVU4767
 13755 4b2d 4939EE   		cmp	r14, rbp	# ivtmp.593, _216
 13756 4b30 74C9     		je	.L1143	#,
 978:sieve_extend.c ****                 }
 13757              		.loc 1 978 21 is_stmt 1 view .LVU4768
 13758              	# sieve_extend.c:978:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 978:sieve_extend.c ****                 }
 13759              		.loc 1 978 24 is_stmt 0 view .LVU4769
 13760 4b32 4983F81D 		cmp	r8, 29	# warn_prime,
 13761              	# sieve_extend.c:978:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 978:sieve_extend.c ****                 }
 13762              		.loc 1 978 35 view .LVU4770
 13763 4b36 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 13764              	.LVL831:
 13765              	# sieve_extend.c:978:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 978:sieve_extend.c ****                 }
 13766              		.loc 1 978 24 view .LVU4771
 13767 4b3a 77BC     		ja	.L1154	#,
 978:sieve_extend.c ****                 }
 13768              		.loc 1 978 44 is_stmt 1 view .LVU4772
 13769              	.LVL832:
 13770              	.LBB651:
 13771              	.LBI645:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13772              		.loc 3 105 1 view .LVU4773
 13773              	.LBB648:
 13774              		.loc 3 107 3 view .LVU4774
 13775              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13776              		.loc 3 107 10 is_stmt 0 view .LVU4775
 13777 4b3c 4989F0   		mov	r8, rsi	#, _55
 13778 4b3f 4989C1   		mov	r9, rax	#, tmp203
 13779 4b42 BF010000 		mov	edi, 1	#,
 13779      00
 13780 4b47 4C89F9   		mov	rcx, r15	#, prime
 13781 4b4a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.591
 13782 4b4e 4C89E2   		mov	rdx, r12	#, ivtmp.591
 13783 4b51 488D3500 		lea	rsi, .LC12[rip]	#,
 13783      000000
 13784 4b58 31C0     		xor	eax, eax	#
 13785 4b5a E8000000 		call	__printf_chk@PLT	#
 13785      00
 13786              	.LVL833:
 13787 4b5f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13788              	.LBE648:
 13789              	.LBE651:
 13790              	# sieve_extend.c:978:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
GAS LISTING /tmp/ccqpmidN.s 			page 370


 978:sieve_extend.c ****                 }
 13791              		.loc 1 978 35 view .LVU4776
 13792 4b63 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13793              	.LBB652:
 13794              	.LBB649:
 13795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13796              		.loc 3 107 10 view .LVU4777
 13797 4b66 EB93     		jmp	.L1143	#
 13798              	.LVL834:
 13799              	.L1119:
 13800              		.loc 3 107 10 view .LVU4778
 13801              	.LBE649:
 13802              	.LBE652:
 13803              	.LBE663:
 13804              	.LBE666:
 13805              	.LBE668:
 13806              	.LBE670:
 13807              	.LBB671:
 13808              	.LBB636:
 967:sieve_extend.c **** }
 13809              		.loc 1 967 5 is_stmt 1 view .LVU4779
 967:sieve_extend.c **** }
 13810              		.loc 1 967 5 is_stmt 0 view .LVU4780
 13811              	.LBE636:
 13812              	.LBE671:
 996:sieve_extend.c ****     switch(sieve->size) {
 13813              		.loc 1 996 5 is_stmt 1 view .LVU4781
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13814              		.loc 1 997 5 view .LVU4782
 13815 4b68 4531ED   		xor	r13d, r13d	# <retval>
 13816 4b6b 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 13816      860100
 13817 4b72 41BE0100 		mov	r14d, 1	# _135,
 13817      0000
 13818 4b78 41B80100 		mov	r8d, 1	# primeCount,
 13818      0000
 13819 4b7e 0F842302 		je	.L1157	#,
 13819      0000
 13820 4b84 0F872301 		ja	.L1149	#,
 13820      0000
 13821 4b8a 4983F964 		cmp	r9, 100	# pretmp_199,
 13822 4b8e B9190000 		mov	ecx, 25	# valid_primes,
 13822      00
 13823 4b93 742A     		je	.L1137	#,
 13824              		.p2align 4,,2
 13825 4b95 0F864001 		jbe	.L1267	#,
 13825      0000
 13826 4b9b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 13826      030000
 13827              	# sieve_extend.c:1000:         case 1000:          valid_primes = 168;      break;
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13828              		.loc 1 1000 42 is_stmt 0 view .LVU4783
 13829 4ba2 B9A80000 		mov	ecx, 168	# valid_primes,
 13829      00
 13830              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13831              		.loc 1 997 5 view .LVU4784
GAS LISTING /tmp/ccqpmidN.s 			page 371


 13832 4ba7 7416     		je	.L1137	#,
 13833 4ba9 4981F910 		cmp	r9, 10000	# pretmp_199,
 13833      270000
 13834 4bb0 B9CD0400 		mov	ecx, 1229	# tmp223,
 13834      00
 13835 4bb5 41BA0000 		mov	r10d, 0	# tmp224,
 13835      0000
 13836 4bbb 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 13837              	.LVL835:
 13838              	.L1137:
1012:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13839              		.loc 1 1012 5 is_stmt 1 view .LVU4785
 13840              	# sieve_extend.c:1012:     if (!valid && option_verboselevel >= 1) {
1012:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13841              		.loc 1 1012 39 is_stmt 0 view .LVU4786
 13842 4bbf 85DB     		test	ebx, ebx	# option_verboselevel
 13843 4bc1 410F9FC4 		setg	r12b	#, tmp194
 13844              	# sieve_extend.c:1012:     if (!valid && option_verboselevel >= 1) {
1012:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13845              		.loc 1 1012 8 view .LVU4787
 13846 4bc5 4520F4   		and	r12b, r14b	# _7, _135
 13847 4bc8 0F84F0FB 		je	.L1138	#,
 13847      FFFF
1013:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 13848              		.loc 1 1013 9 is_stmt 1 view .LVU4788
 13849              	.LVL836:
 13850              	.LBB672:
 13851              	.LBI672:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13852              		.loc 3 105 1 view .LVU4789
 13853              	.LBB673:
 13854              		.loc 3 107 3 view .LVU4790
 13855              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13856              		.loc 3 107 10 is_stmt 0 view .LVU4791
 13857 4bce 31C0     		xor	eax, eax	#
 13858 4bd0 4C89CA   		mov	rdx, r9	#, pretmp_199
 13859 4bd3 488D3500 		lea	rsi, .LC10[rip]	#,
 13859      000000
 13860 4bda BF010000 		mov	edi, 1	#,
 13860      00
 13861 4bdf E8000000 		call	__printf_chk@PLT	#
 13861      00
 13862              	.LVL837:
 13863              		.loc 3 107 10 view .LVU4792
 13864              	.LBE673:
 13865              	.LBE672:
1014:sieve_extend.c ****     }
 13866              		.loc 1 1014 9 is_stmt 1 view .LVU4793
 13867              	# sieve_extend.c:1014:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1014:sieve_extend.c ****     }
 13868              		.loc 1 1014 12 is_stmt 0 view .LVU4794
 13869 4be4 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13870 4be7 0F8426FE 		je	.L1118	#,
 13870      FFFF
1014:sieve_extend.c ****     }
 13871              		.loc 1 1014 49 is_stmt 1 discriminator 1 view .LVU4795
 13872 4bed 488D7508 		lea	rsi, 8[rbp]	# tmp195,
GAS LISTING /tmp/ccqpmidN.s 			page 372


 13873 4bf1 BA640000 		mov	edx, 100	#,
 13873      00
 13874 4bf6 4889EF   		mov	rdi, rbp	#, sieve
 13875              	# sieve_extend.c:1012:     if (!valid && option_verboselevel >= 1) {
1012:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13876              		.loc 1 1012 9 is_stmt 0 discriminator 1 view .LVU4796
 13877 4bf9 4589E6   		mov	r14d, r12d	# _135, _7
 13878              	# sieve_extend.c:1014:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1014:sieve_extend.c ****     }
 13879              		.loc 1 1014 49 discriminator 1 view .LVU4797
 13880 4bfc E8CFE6FF 		call	show_primes.isra.0	#
 13880      FF
 13881              	.LVL838:
 13882 4c01 E9B8FBFF 		jmp	.L1138	#
 13882      FF
 13883              	.LVL839:
 13884              	.L1265:
 13885              	.LBB674:
 13886              	.LBB669:
 13887              	.LBB667:
 13888              	.LBB664:
 13889              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13890              		.loc 1 987 44 view .LVU4798
 13891 4c06 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13891      18
 13892              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13893              		.loc 1 987 28 view .LVU4799
 13894 4c0b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 13895              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13896              		.loc 1 987 44 view .LVU4800
 13897 4c0f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 13898              	.LVL840:
 13899              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13900              		.loc 1 987 28 view .LVU4801
 13901 4c13 761D     		jbe	.L1152	#,
 13902              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13903              		.loc 1 987 44 view .LVU4802
 13904 4c15 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13904      18
 13905 4c1a E9DAFDFF 		jmp	.L1144	#
 13905      FF
 13906              	.LVL841:
 13907              	.L1252:
 987:sieve_extend.c ****         }
 13908              		.loc 1 987 44 view .LVU4803
 13909 4c1f 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 13909      18
 13910              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13911              		.loc 1 987 28 view .LVU4804
 13912 4c24 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 13913              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
GAS LISTING /tmp/ccqpmidN.s 			page 373


 987:sieve_extend.c ****         }
 13914              		.loc 1 987 44 view .LVU4805
 13915 4c28 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 13916              	.LVL842:
 13917              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13918              		.loc 1 987 28 view .LVU4806
 13919 4c2c 0F87DCFD 		ja	.L1254	#,
 13919      FFFF
 13920              	.LVL843:
 13921              	.L1152:
 13922              	.LBB657:
 13923              	.LBB658:
 13924              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13925              		.loc 3 107 10 view .LVU4807
 13926 4c32 BF010000 		mov	edi, 1	#,
 13926      00
 13927              	.LBE658:
 13928              	.LBE657:
 13929              	# sieve_extend.c:987:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 987:sieve_extend.c ****         }
 13930              		.loc 1 987 53 view .LVU4808
 13931 4c37 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 13931      01
 13932              	.LBB661:
 13933              	.LBB659:
 13934              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13935              		.loc 3 107 10 view .LVU4809
 13936 4c3c 4C89F9   		mov	rcx, r15	#, prime
 13937 4c3f 488D3500 		lea	rsi, .LC13[rip]	#,
 13937      000000
 13938 4c46 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 13938      28
 13939              	.LBE659:
 13940              	.LBE661:
 987:sieve_extend.c ****         }
 13941              		.loc 1 987 53 is_stmt 1 view .LVU4810
 13942              	.LVL844:
 13943              	.LBB662:
 13944              	.LBI657:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13945              		.loc 3 105 1 view .LVU4811
 13946              	.LBB660:
 13947              		.loc 3 107 3 view .LVU4812
 13948              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13949              		.loc 3 107 10 is_stmt 0 view .LVU4813
 13950 4c4b 31C0     		xor	eax, eax	#
 13951 4c4d E8000000 		call	__printf_chk@PLT	#
 13951      00
 13952              	.LVL845:
 13953              		.loc 3 107 10 view .LVU4814
 13954 4c52 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13955 4c56 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 13955      28
 13956 4c5b 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 13956      18
 13957 4c60 E994FDFF 		jmp	.L1144	#
GAS LISTING /tmp/ccqpmidN.s 			page 374


 13957      FF
 13958              	.LVL846:
 13959              	.L1133:
 13960              		.loc 3 107 10 view .LVU4815
 13961 4c65 4981F8A2 		cmp	r8, 78498	# primeCount,
 13961      320100
 13962              	.LBE660:
 13963              	.LBE662:
 13964              	.LBE664:
 13965              	.LBE667:
 13966              	.LBE669:
 13967              	.LBE674:
 13968              	# sieve_extend.c:1003:         case 1000000:       valid_primes = 78498;    break;
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13969              		.loc 1 1003 42 view .LVU4816
 13970 4c6c B9A23201 		mov	ecx, 78498	# valid_primes,
 13970      00
 13971 4c71 410F94C5 		sete	r13b	#, tmp183
 13972 4c75 4421EA   		and	edx, r13d	# _251, tmp183
 13973 4c78 4981F8A2 		cmp	r8, 78498	# primeCount,
 13973      320100
 13974 4c7f 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 13975 4c83 410F95C6 		setne	r14b	#, _135
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13976              		.loc 1 1003 29 is_stmt 1 view .LVU4817
 13977              	.LVL847:
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13978              		.loc 1 1003 54 view .LVU4818
 13979              	# sieve_extend.c:1003:         case 1000000:       valid_primes = 78498;    break;
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13980              		.loc 1 1003 9 is_stmt 0 view .LVU4819
 13981 4c87 E914FBFF 		jmp	.L1136	#
 13981      FF
 13982              	.LVL848:
 13983              	.L1127:
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13984              		.loc 1 1003 9 view .LVU4820
 13985 4c8c 4983F804 		cmp	r8, 4	# primeCount,
 13986              	# sieve_extend.c:998:         case 10:            valid_primes = 4;        break;
 998:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 13987              		.loc 1 998 42 view .LVU4821
 13988 4c90 B9040000 		mov	ecx, 4	# valid_primes,
 13988      00
 13989 4c95 410F94C2 		sete	r10b	#, tmp175
 13990 4c99 4421D2   		and	edx, r10d	# _251, tmp175
 13991 4c9c 4983F804 		cmp	r8, 4	# primeCount,
 13992 4ca0 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 13993 4ca4 410F95C6 		setne	r14b	#, _135
 13994 4ca8 E9F3FAFF 		jmp	.L1136	#
 13994      FF
 13995              	.LVL849:
 13996              	.L1149:
 13997              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13998              		.loc 1 997 5 view .LVU4822
 13999 4cad 4981F900 		cmp	r9, 100000000	# pretmp_199,
 13999      E1F505
GAS LISTING /tmp/ccqpmidN.s 			page 375


 14000              	# sieve_extend.c:1005:         case 100000000:     valid_primes = 5761455;  break;
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14001              		.loc 1 1005 42 view .LVU4823
 14002 4cb4 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14002      00
 14003              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14004              		.loc 1 997 5 view .LVU4824
 14005 4cb9 0F8400FF 		je	.L1137	#,
 14005      FFFF
 14006 4cbf 762C     		jbe	.L1268	#,
 14007 4cc1 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 14007      CA9A3B
 14008 4cc8 B92EDF07 		mov	ecx, 50847534	# tmp227,
 14008      03
 14009 4ccd B8000000 		mov	eax, 0	# tmp228,
 14009      00
 14010 4cd2 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 14011 4cd6 E9E4FEFF 		jmp	.L1137	#
 14011      FF
 14012              	.L1267:
 14013 4cdb 31C9     		xor	ecx, ecx	# valid_primes
 14014 4cdd 4983F90A 		cmp	r9, 10	# pretmp_199,
 14015 4ce1 0F94C1   		sete	cl	#, valid_primes
 14016 4ce4 48C1E102 		sal	rcx, 2	# valid_primes,
 14017 4ce8 E9D2FEFF 		jmp	.L1137	#
 14017      FF
 14018              	.L1268:
 14019 4ced 4981F940 		cmp	r9, 1000000	# pretmp_199,
 14019      420F00
 14020              	# sieve_extend.c:1003:         case 1000000:       valid_primes = 78498;    break;
1003:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14021              		.loc 1 1003 42 view .LVU4825
 14022 4cf4 B9A23201 		mov	ecx, 78498	# valid_primes,
 14022      00
 14023              	# sieve_extend.c:997:     switch(sieve->size) {
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14024              		.loc 1 997 5 view .LVU4826
 14025 4cf9 0F84C0FE 		je	.L1137	#,
 14025      FFFF
 14026 4cff 4981F980 		cmp	r9, 10000000	# pretmp_199,
 14026      969800
 14027 4d06 B903240A 		mov	ecx, 664579	# tmp225,
 14027      00
 14028 4d0b BE000000 		mov	esi, 0	# tmp226,
 14028      00
 14029 4d10 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 14030 4d14 E9A6FEFF 		jmp	.L1137	#
 14030      FF
 14031              	.LVL850:
 14032              	.L1125:
 997:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14033              		.loc 1 997 5 view .LVU4827
 14034 4d19 4981F8A8 		cmp	r8, 168	# primeCount,
 14034      000000
 14035              	# sieve_extend.c:1000:         case 1000:          valid_primes = 168;      break;
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
GAS LISTING /tmp/ccqpmidN.s 			page 376


 14036              		.loc 1 1000 42 view .LVU4828
 14037 4d20 B9A80000 		mov	ecx, 168	# valid_primes,
 14037      00
 14038 4d25 410F94C6 		sete	r14b	#, tmp177
 14039 4d29 4421F2   		and	edx, r14d	# _251, tmp177
 14040 4d2c 4981F8A8 		cmp	r8, 168	# primeCount,
 14040      000000
 14041 4d33 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 14042 4d37 410F95C6 		setne	r14b	#, _135
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14043              		.loc 1 1000 29 is_stmt 1 view .LVU4829
 14044              	.LVL851:
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14045              		.loc 1 1000 54 view .LVU4830
 14046              	# sieve_extend.c:1000:         case 1000:          valid_primes = 168;      break;
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14047              		.loc 1 1000 9 is_stmt 0 view .LVU4831
 14048 4d3b E960FAFF 		jmp	.L1136	#
 14048      FF
 14049              	.LVL852:
 14050              	.L1131:
1000:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14051              		.loc 1 1000 9 view .LVU4832
 14052 4d40 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14052      E95700
 14053              	# sieve_extend.c:1005:         case 100000000:     valid_primes = 5761455;  break;
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14054              		.loc 1 1005 42 view .LVU4833
 14055 4d47 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14055      00
 14056 4d4c 0F94C0   		sete	al	#, tmp187
 14057 4d4f 21C2     		and	edx, eax	# _251, tmp187
 14058 4d51 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14058      E95700
 14059 4d58 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 14060 4d5c 410F95C6 		setne	r14b	#, _135
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14061              		.loc 1 1005 29 is_stmt 1 view .LVU4834
 14062              	.LVL853:
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14063              		.loc 1 1005 54 view .LVU4835
 14064              	# sieve_extend.c:1005:         case 100000000:     valid_primes = 5761455;  break;
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14065              		.loc 1 1005 9 is_stmt 0 view .LVU4836
 14066 4d60 E93BFAFF 		jmp	.L1136	#
 14066      FF
 14067              	.LVL854:
 14068              	.L1129:
1005:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14069              		.loc 1 1005 9 view .LVU4837
 14070 4d65 4D85C0   		test	r8, r8	# primeCount
 14071 4d68 410F94C3 		sete	r11b	#, tmp191
 14072 4d6c 4421DA   		and	edx, r11d	# _251, tmp191
 14073 4d6f 4D85C0   		test	r8, r8	# primeCount
 14074 4d72 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 14075 4d76 410F95C6 		setne	r14b	#, _135
1007:sieve_extend.c ****     }
GAS LISTING /tmp/ccqpmidN.s 			page 377


 14076              		.loc 1 1007 29 is_stmt 1 view .LVU4838
 14077              	# sieve_extend.c:1007:         default:            valid_primes= 0;
1007:sieve_extend.c ****     }
 14078              		.loc 1 1007 41 is_stmt 0 view .LVU4839
 14079 4d7a 31C9     		xor	ecx, ecx	# valid_primes
 14080 4d7c E91FFAFF 		jmp	.L1136	#
 14080      FF
 14081              	.L1123:
1007:sieve_extend.c ****     }
 14082              		.loc 1 1007 41 view .LVU4840
 14083 4d81 4981F878 		cmp	r8, 9592	# primeCount,
 14083      250000
 14084              	# sieve_extend.c:1002:         case 100000:        valid_primes = 9592;     break;
1002:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14085              		.loc 1 1002 42 view .LVU4841
 14086 4d88 B9782500 		mov	ecx, 9592	# valid_primes,
 14086      00
 14087 4d8d 400F94C7 		sete	dil	#, tmp181
 14088 4d91 21FA     		and	edx, edi	# _251, tmp181
 14089 4d93 4981F878 		cmp	r8, 9592	# primeCount,
 14089      250000
 14090 4d9a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 14091 4d9e 410F95C6 		setne	r14b	#, _135
1002:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14092              		.loc 1 1002 29 is_stmt 1 view .LVU4842
 14093              	.LVL855:
1002:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14094              		.loc 1 1002 54 view .LVU4843
 14095              	# sieve_extend.c:1002:         case 100000:        valid_primes = 9592;     break;
1002:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14096              		.loc 1 1002 9 is_stmt 0 view .LVU4844
 14097 4da2 E9F9F9FF 		jmp	.L1136	#
 14097      FF
 14098              	.LVL856:
 14099              	.L1157:
 14100              	# sieve_extend.c:1002:         case 100000:        valid_primes = 9592;     break;
1002:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14101              		.loc 1 1002 42 view .LVU4845
 14102 4da7 B9782500 		mov	ecx, 9592	# valid_primes,
 14102      00
 14103 4dac E90EFEFF 		jmp	.L1137	#
 14103      FF
 14104              		.cfi_endproc
 14105              	.LFE79:
 14107              		.section	.rodata.str1.8
 14108 0145 000000   		.align 8
 14109              	.LC14:
 14110 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14110      653A2025 
 14110      73205B6F 
 14110      7074696F 
 14110      6E735D20 
 14111              		.section	.rodata.str1.1
 14112              	.LC15:
 14113 0031 4F707469 		.string	"Options:\n"
 14113      6F6E733A 
 14113      0A00
GAS LISTING /tmp/ccqpmidN.s 			page 378


 14114              		.section	.rodata.str1.8
 14115 0167 00       		.align 8
 14116              	.LC16:
 14117 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14117      76657262 
 14117      6F736520 
 14117      3C6C6576 
 14117      656C3E20 
 14118 01a3 00000000 		.align 8
 14118      00
 14119              	.LC17:
 14120 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14120      20202020 
 14120      20202020 
 14120      20202020 
 14120      20202020 
 14121 01d6 0000     		.align 8
 14122              	.LC18:
 14123 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14123      20202020 
 14123      20202020 
 14123      20202020 
 14123      20202020 
 14124 0219 00000000 		.align 8
 14124      000000
 14125              	.LC19:
 14126 0220 20202020 		.string	"                     3 - show actual work\n"
 14126      20202020 
 14126      20202020 
 14126      20202020 
 14126      20202020 
 14127 024b 00000000 		.align 8
 14127      00
 14128              	.LC20:
 14129 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14129      63686563 
 14129      6B202020 
 14129      20202020 
 14129      20202020 
 14130 028d 000000   		.align 8
 14131              	.LC21:
 14132 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14132      73686F77 
 14132      203C6D61 
 14132      78696D75 
 14132      6D3E2020 
 14133 02ce 0000     		.align 8
 14134              	.LC22:
 14135 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14135      74756E65 
 14135      20203C6C 
 14135      6576656C 
 14135      3E202020 
 14136 031d 000000   		.align 8
 14137              	.LC23:
 14138 0320 20202020 		.string	"                     1 - fast tuning\n"
 14138      20202020 
GAS LISTING /tmp/ccqpmidN.s 			page 379


 14138      20202020 
 14138      20202020 
 14138      20202020 
 14139 0346 0000     		.align 8
 14140              	.LC24:
 14141 0348 20202020 		.string	"                     2 - refined tuning\n"
 14141      20202020 
 14141      20202020 
 14141      20202020 
 14141      20202020 
 14142 0371 00000000 		.align 8
 14142      000000
 14143              	.LC25:
 14144 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14144      20202020 
 14144      20202020 
 14144      20202020 
 14144      20202020 
 14145              		.text
 14146 4db1 66662E0F 		.p2align 4
 14146      1F840000 
 14146      0000000F 
 14146      1F4000
 14147              		.globl	usage
 14149              	usage:
 14150              	.LVL857:
 14151              	.LFB80:
1020:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14152              		.loc 1 1020 24 is_stmt 1 view -0
 14153              		.cfi_startproc
1020:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14154              		.loc 1 1020 24 is_stmt 0 view .LVU4847
 14155 4dc0 F30F1EFA 		endbr64	
 14156 4dc4 50       		push	rax	#
 14157              		.cfi_def_cfa_offset 16
 14158 4dc5 58       		pop	rax	#
 14159              		.cfi_def_cfa_offset 8
1021:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14160              		.loc 1 1021 5 is_stmt 1 view .LVU4848
 14161              	.LVL858:
 14162              	.LBB675:
 14163              	.LBI675:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14164              		.loc 3 98 1 view .LVU4849
 14165              	.LBB676:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14166              		.loc 3 100 3 view .LVU4850
 14167              	.LBE676:
 14168              	.LBE675:
 14169              	# sieve_extend.c:1020: void usage(char *name) {
1020:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14170              		.loc 1 1020 24 is_stmt 0 view .LVU4851
 14171 4dc6 488D6424 		lea	rsp, -8[rsp]	#,
 14171      F8
 14172              		.cfi_def_cfa_offset 16
 14173              	# sieve_extend.c:1020: void usage(char *name) {
1020:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
GAS LISTING /tmp/ccqpmidN.s 			page 380


 14174              		.loc 1 1020 24 view .LVU4852
 14175 4dcb 4889F9   		mov	rcx, rdi	# name, tmp107
 14176              	.LBB678:
 14177              	.LBB677:
 14178              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14179              		.loc 3 100 10 view .LVU4853
 14180 4dce 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14180      000000
 14181              	.LVL859:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14182              		.loc 3 100 10 view .LVU4854
 14183 4dd5 488D1500 		lea	rdx, .LC14[rip]	#,
 14183      000000
 14184 4ddc BE010000 		mov	esi, 1	#,
 14184      00
 14185 4de1 31C0     		xor	eax, eax	#
 14186 4de3 E8000000 		call	__fprintf_chk@PLT	#
 14186      00
 14187              	.LVL860:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14188              		.loc 3 100 10 view .LVU4855
 14189              	.LBE677:
 14190              	.LBE678:
1022:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 14191              		.loc 1 1022 5 is_stmt 1 view .LVU4856
 14192              	.LBB679:
 14193              	.LBI679:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14194              		.loc 3 98 1 view .LVU4857
 14195              	.LBB680:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14196              		.loc 3 100 3 view .LVU4858
 14197              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14198              		.loc 3 100 10 is_stmt 0 view .LVU4859
 14199 4de8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14199      000000
 14200 4def BA090000 		mov	edx, 9	#,
 14200      00
 14201 4df4 BE010000 		mov	esi, 1	#,
 14201      00
 14202 4df9 488D3D00 		lea	rdi, .LC15[rip]	#,
 14202      000000
 14203 4e00 E8000000 		call	fwrite@PLT	#
 14203      00
 14204              	.LVL861:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14205              		.loc 3 100 10 view .LVU4860
 14206              	.LBE680:
 14207              	.LBE679:
1023:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14208              		.loc 1 1023 5 is_stmt 1 view .LVU4861
 14209              	.LBB681:
 14210              	.LBI681:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14211              		.loc 3 98 1 view .LVU4862
GAS LISTING /tmp/ccqpmidN.s 			page 381


 14212              	.LBB682:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14213              		.loc 3 100 3 view .LVU4863
 14214              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14215              		.loc 3 100 10 is_stmt 0 view .LVU4864
 14216 4e05 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14216      000000
 14217 4e0c BA3A0000 		mov	edx, 58	#,
 14217      00
 14218 4e11 BE010000 		mov	esi, 1	#,
 14218      00
 14219 4e16 488D3D00 		lea	rdi, .LC16[rip]	#,
 14219      000000
 14220 4e1d E8000000 		call	fwrite@PLT	#
 14220      00
 14221              	.LVL862:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14222              		.loc 3 100 10 view .LVU4865
 14223              	.LBE682:
 14224              	.LBE681:
1024:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14225              		.loc 1 1024 5 is_stmt 1 view .LVU4866
 14226              	.LBB683:
 14227              	.LBI683:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14228              		.loc 3 98 1 view .LVU4867
 14229              	.LBB684:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14230              		.loc 3 100 3 view .LVU4868
 14231              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14232              		.loc 3 100 10 is_stmt 0 view .LVU4869
 14233 4e22 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14233      000000
 14234 4e29 BA2D0000 		mov	edx, 45	#,
 14234      00
 14235 4e2e BE010000 		mov	esi, 1	#,
 14235      00
 14236 4e33 488D3D00 		lea	rdi, .LC17[rip]	#,
 14236      000000
 14237 4e3a E8000000 		call	fwrite@PLT	#
 14237      00
 14238              	.LVL863:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14239              		.loc 3 100 10 view .LVU4870
 14240              	.LBE684:
 14241              	.LBE683:
1025:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14242              		.loc 1 1025 5 is_stmt 1 view .LVU4871
 14243              	.LBB685:
 14244              	.LBI685:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14245              		.loc 3 98 1 view .LVU4872
 14246              	.LBB686:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14247              		.loc 3 100 3 view .LVU4873
GAS LISTING /tmp/ccqpmidN.s 			page 382


 14248              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14249              		.loc 3 100 10 is_stmt 0 view .LVU4874
 14250 4e3f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14250      000000
 14251 4e46 BA400000 		mov	edx, 64	#,
 14251      00
 14252 4e4b BE010000 		mov	esi, 1	#,
 14252      00
 14253 4e50 488D3D00 		lea	rdi, .LC18[rip]	#,
 14253      000000
 14254 4e57 E8000000 		call	fwrite@PLT	#
 14254      00
 14255              	.LVL864:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14256              		.loc 3 100 10 view .LVU4875
 14257              	.LBE686:
 14258              	.LBE685:
1026:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14259              		.loc 1 1026 5 is_stmt 1 view .LVU4876
 14260              	.LBB687:
 14261              	.LBI687:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14262              		.loc 3 98 1 view .LVU4877
 14263              	.LBB688:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14264              		.loc 3 100 3 view .LVU4878
 14265              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14266              		.loc 3 100 10 is_stmt 0 view .LVU4879
 14267 4e5c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14267      000000
 14268 4e63 BA2A0000 		mov	edx, 42	#,
 14268      00
 14269 4e68 BE010000 		mov	esi, 1	#,
 14269      00
 14270 4e6d 488D3D00 		lea	rdi, .LC19[rip]	#,
 14270      000000
 14271 4e74 E8000000 		call	fwrite@PLT	#
 14271      00
 14272              	.LVL865:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14273              		.loc 3 100 10 view .LVU4880
 14274              	.LBE688:
 14275              	.LBE687:
1027:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14276              		.loc 1 1027 5 is_stmt 1 view .LVU4881
 14277              	.LBB689:
 14278              	.LBI689:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14279              		.loc 3 98 1 view .LVU4882
 14280              	.LBB690:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14281              		.loc 3 100 3 view .LVU4883
 14282              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14283              		.loc 3 100 10 is_stmt 0 view .LVU4884
GAS LISTING /tmp/ccqpmidN.s 			page 383


 14284 4e79 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14284      000000
 14285 4e80 BA3C0000 		mov	edx, 60	#,
 14285      00
 14286 4e85 BE010000 		mov	esi, 1	#,
 14286      00
 14287 4e8a 488D3D00 		lea	rdi, .LC20[rip]	#,
 14287      000000
 14288 4e91 E8000000 		call	fwrite@PLT	#
 14288      00
 14289              	.LVL866:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14290              		.loc 3 100 10 view .LVU4885
 14291              	.LBE690:
 14292              	.LBE689:
1028:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14293              		.loc 1 1028 5 is_stmt 1 view .LVU4886
 14294              	.LBB691:
 14295              	.LBI691:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14296              		.loc 3 98 1 view .LVU4887
 14297              	.LBB692:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14298              		.loc 3 100 3 view .LVU4888
 14299              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14300              		.loc 3 100 10 is_stmt 0 view .LVU4889
 14301 4e96 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14301      000000
 14302 4e9d BA3D0000 		mov	edx, 61	#,
 14302      00
 14303 4ea2 BE010000 		mov	esi, 1	#,
 14303      00
 14304 4ea7 488D3D00 		lea	rdi, .LC21[rip]	#,
 14304      000000
 14305 4eae E8000000 		call	fwrite@PLT	#
 14305      00
 14306              	.LVL867:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14307              		.loc 3 100 10 view .LVU4890
 14308              	.LBE692:
 14309              	.LBE691:
1029:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14310              		.loc 1 1029 5 is_stmt 1 view .LVU4891
 14311              	.LBB693:
 14312              	.LBI693:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14313              		.loc 3 98 1 view .LVU4892
 14314              	.LBB694:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14315              		.loc 3 100 3 view .LVU4893
 14316              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14317              		.loc 3 100 10 is_stmt 0 view .LVU4894
 14318 4eb3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14318      000000
 14319 4eba BA4C0000 		mov	edx, 76	#,
GAS LISTING /tmp/ccqpmidN.s 			page 384


 14319      00
 14320 4ebf BE010000 		mov	esi, 1	#,
 14320      00
 14321 4ec4 488D3D00 		lea	rdi, .LC22[rip]	#,
 14321      000000
 14322 4ecb E8000000 		call	fwrite@PLT	#
 14322      00
 14323              	.LVL868:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14324              		.loc 3 100 10 view .LVU4895
 14325              	.LBE694:
 14326              	.LBE693:
1030:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14327              		.loc 1 1030 5 is_stmt 1 view .LVU4896
 14328              	.LBB695:
 14329              	.LBI695:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14330              		.loc 3 98 1 view .LVU4897
 14331              	.LBB696:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14332              		.loc 3 100 3 view .LVU4898
 14333              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14334              		.loc 3 100 10 is_stmt 0 view .LVU4899
 14335 4ed0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14335      000000
 14336 4ed7 BA250000 		mov	edx, 37	#,
 14336      00
 14337 4edc BE010000 		mov	esi, 1	#,
 14337      00
 14338 4ee1 488D3D00 		lea	rdi, .LC23[rip]	#,
 14338      000000
 14339 4ee8 E8000000 		call	fwrite@PLT	#
 14339      00
 14340              	.LVL869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14341              		.loc 3 100 10 view .LVU4900
 14342              	.LBE696:
 14343              	.LBE695:
1031:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14344              		.loc 1 1031 5 is_stmt 1 view .LVU4901
 14345              	.LBB697:
 14346              	.LBI697:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14347              		.loc 3 98 1 view .LVU4902
 14348              	.LBB698:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14349              		.loc 3 100 3 view .LVU4903
 14350              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14351              		.loc 3 100 10 is_stmt 0 view .LVU4904
 14352 4eed 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14352      000000
 14353 4ef4 BA280000 		mov	edx, 40	#,
 14353      00
 14354 4ef9 BE010000 		mov	esi, 1	#,
 14354      00
GAS LISTING /tmp/ccqpmidN.s 			page 385


 14355 4efe 488D3D00 		lea	rdi, .LC24[rip]	#,
 14355      000000
 14356 4f05 E8000000 		call	fwrite@PLT	#
 14356      00
 14357              	.LVL870:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14358              		.loc 3 100 10 view .LVU4905
 14359              	.LBE698:
 14360              	.LBE697:
1032:sieve_extend.c ****     exit(1);
 14361              		.loc 1 1032 5 is_stmt 1 view .LVU4906
 14362              	.LBB699:
 14363              	.LBI699:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14364              		.loc 3 98 1 view .LVU4907
 14365              	.LBB700:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14366              		.loc 3 100 3 view .LVU4908
 14367              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14368              		.loc 3 100 10 is_stmt 0 view .LVU4909
 14369 4f0a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14369      000000
 14370 4f11 488D3D00 		lea	rdi, .LC25[rip]	#,
 14370      000000
 14371 4f18 BA350000 		mov	edx, 53	#,
 14371      00
 14372 4f1d BE010000 		mov	esi, 1	#,
 14372      00
 14373 4f22 E8000000 		call	fwrite@PLT	#
 14373      00
 14374              	.LVL871:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14375              		.loc 3 100 10 view .LVU4910
 14376              	.LBE700:
 14377              	.LBE699:
1033:sieve_extend.c **** }
 14378              		.loc 1 1033 5 is_stmt 1 view .LVU4911
 14379 4f27 BF010000 		mov	edi, 1	#,
 14379      00
 14380 4f2c E8000000 		call	exit@PLT	#
 14380      00
 14381              	.LVL872:
 14382              		.cfi_endproc
 14383              	.LFE80:
 14385              		.section	.rodata.str1.1
 14386              	.LC27:
 14387 003b 56616C69 		.string	"Validating... "
 14387      64617469 
 14387      6E672E2E 
 14387      2E2000
 14388              	.LC28:
 14389 004a 2D2D6865 		.string	"--help"
 14389      6C7000
 14390              	.LC29:
 14391 0051 2D2D7665 		.string	"--verbose"
 14391      72626F73 
GAS LISTING /tmp/ccqpmidN.s 			page 386


 14391      6500
 14392              	.LC30:
 14393 005b 4E6F2076 		.string	"No verbose level specified\n"
 14393      6572626F 
 14393      7365206C 
 14393      6576656C 
 14393      20737065 
 14394              	.LC31:
 14395 0077 256400   		.string	"%d"
 14396              		.section	.rodata.str1.8
 14397 03ae 0000     		.align 8
 14398              	.LC32:
 14399 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 14399      723A2049 
 14399      6E76616C 
 14399      6964206D 
 14399      65617375 
 14400              		.section	.rodata.str1.1
 14401              	.LC33:
 14402 007a 56657262 		.string	"Verbose level set to %d\n"
 14402      6F736520 
 14402      6C657665 
 14402      6C207365 
 14402      7420746F 
 14403              	.LC34:
 14404 0093 2D2D6368 		.string	"--check"
 14404      65636B00 
 14405              	.LC35:
 14406 009b 2D2D7475 		.string	"--tune"
 14406      6E6500
 14407              	.LC36:
 14408 00a2 4E6F2074 		.string	"No tune level specified\n"
 14408      756E6520 
 14408      6C657665 
 14408      6C207370 
 14408      65636966 
 14409              		.section	.rodata.str1.8
 14410 03d5 000000   		.align 8
 14411              	.LC37:
 14412 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 14412      723A2049 
 14412      6E76616C 
 14412      69642074 
 14412      756E6520 
 14413              		.section	.rodata.str1.1
 14414              	.LC38:
 14415 00bb 54756E65 		.string	"Tune level set to %d\n"
 14415      206C6576 
 14415      656C2073 
 14415      65742074 
 14415      6F202564 
 14416              	.LC39:
 14417 00d1 2D2D7368 		.string	"--show"
 14417      6F7700
 14418              	.LC40:
 14419 00d8 4E6F2073 		.string	"No show maximum specified\n"
 14419      686F7720 
GAS LISTING /tmp/ccqpmidN.s 			page 387


 14419      6D617869 
 14419      6D756D20 
 14419      73706563 
 14420              	.LC41:
 14421 00f3 256A7500 		.string	"%ju"
 14422              		.section	.rodata.str1.8
 14423 03f7 00       		.align 8
 14424              	.LC42:
 14425 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 14425      723A2049 
 14425      6E76616C 
 14425      69642073 
 14425      686F7720 
 14426              		.section	.rodata.str1.1
 14427              	.LC43:
 14428 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 14428      206D6178 
 14428      696D756D 
 14428      20736574 
 14428      20746F20 
 14429              	.LC44:
 14430 0110 496E7661 		.string	"Invalid size %s\n"
 14430      6C696420 
 14430      73697A65 
 14430      2025730A 
 14430      00
 14431              	.LC45:
 14432 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 14432      6865636B 
 14432      696E6720 
 14432      73697A65 
 14432      20256A75 
 14433              	.LC46:
 14434 013a 2E626C6F 		.string	".blocksize %ju-"
 14434      636B7369 
 14434      7A652025 
 14434      6A752D00 
 14435              	.LC47:
 14436 014a 76616C69 		.string	"valid;"
 14436      643B00
 14437              	.LC48:
 14438 0151 2E2E2E56 		.string	"...Valid algorithm"
 14438      616C6964 
 14438      20616C67 
 14438      6F726974 
 14438      686D00
 14439              	.LC49:
 14440 0164 54756E69 		.string	"Tuning..."
 14440      6E672E2E 
 14440      2E00
 14441              		.section	.rodata.str1.8
 14442 0419 00000000 		.align 8
 14442      000000
 14443              	.LC50:
 14444 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 14444      626C6F63 
 14444      6B73697A 
GAS LISTING /tmp/ccqpmidN.s 			page 388


 14444      655F6269 
 14444      74732025 
 14445 04a7 00       		.align 8
 14446              	.LC51:
 14447 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 14447      6C6F636B 
 14447      73697A65 
 14447      5F626974 
 14447      73202531 
 14448 052e 0000     		.align 8
 14449              	.LC52:
 14450 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 14450      72657375 
 14450      6C74732E 
 14450      20496E69 
 14450      74616C20 
 14451              		.section	.rodata.str1.1
 14452              	.LC53:
 14453 016e 42657374 		.string	"Best options"
 14453      206F7074 
 14453      696F6E73 
 14453      00
 14454              		.section	.rodata.str1.8
 14455 0582 00000000 		.align 8
 14455      0000
 14456              	.LC54:
 14457 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 14457      2920626C 
 14457      6F636B73 
 14457      697A655F 
 14457      62697473 
 14458 0611 00000000 		.align 8
 14458      000000
 14459              	.LC55:
 14460 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 14460      74207265 
 14460      73756C74 
 14460      3A20626C 
 14460      6F636B73 
 14461              		.align 8
 14462              	.LC56:
 14463 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
 14463      686D6172 
 14463      6B696E67 
 14463      2E2E2E20 
 14463      77697468 
 14464 06c3 00000000 		.align 8
 14464      00
 14465              	.LC58:
 14466 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 14466      65727661 
 14466      6E64616D 
 14466      5F657874 
 14466      656E643B 
 14467 070a 00000000 		.align 8
 14467      0000
 14468              	.LC59:
GAS LISTING /tmp/ccqpmidN.s 			page 389


 14469 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 14469      6573202D 
 14469      20706572 
 14469      20352073 
 14469      65636F6E 
 14470              		.section	.rodata.str1.1
 14471              	.LC60:
 14472 017b 53686F77 		.string	"Show result set:"
 14472      20726573 
 14472      756C7420 
 14472      7365743A 
 14472      00
 14473              		.section	.text.startup,"ax",@progbits
 14474              		.p2align 4
 14475              		.globl	main
 14477              	main:
 14478              	.LVL873:
 14479              	.LFB84:
1077:sieve_extend.c **** 
1078:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1079:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1080:sieve_extend.c **** 
1081:sieve_extend.c ****     double best_avg = 0;
1082:sieve_extend.c ****     best_blocksize_bits = 0;
1083:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1084:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1085:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1086:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1087:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1088:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1089:sieve_extend.c ****     double sample_duration = default_sample_duration;
1090:sieve_extend.c **** 
1091:sieve_extend.c ****     // determines the size of the resultset
1092:sieve_extend.c ****     switch (tune_level) {
1093:sieve_extend.c ****         case 1:
1094:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1095:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1096:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1097:sieve_extend.c ****             sample_max = 4;
1098:sieve_extend.c ****             sample_duration = 0.1;
1099:sieve_extend.c ****             break;
1100:sieve_extend.c ****         case 2:
1101:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1102:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1103:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1104:sieve_extend.c ****             sample_max = 4;
1105:sieve_extend.c ****             sample_duration = 0.2;
1106:sieve_extend.c ****             break;
1107:sieve_extend.c ****         case 3:
1108:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1109:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1110:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1111:sieve_extend.c ****             sample_max = 4;
1112:sieve_extend.c ****             sample_duration = 0.4;
1113:sieve_extend.c ****             break;
1114:sieve_extend.c ****     }
1115:sieve_extend.c ****     
GAS LISTING /tmp/ccqpmidN.s 			page 390


1116:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1117:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1118:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1119:sieve_extend.c ****     counter_t tuning_results=0;
1120:sieve_extend.c ****     counter_t tuning_result_index=0;
1121:sieve_extend.c ****     
1122:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1123:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1124:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1125:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
1126:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1127:sieve_extend.c **** 
1128:sieve_extend.c ****                     // set variables
1129:sieve_extend.c ****                     tuning_results++;
1130:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
1131:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
1132:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
1133:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1134:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
1135:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1136:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1137:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1138:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1139:sieve_extend.c **** 
1140:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1141:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1142:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1143:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1144:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1145:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1146:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1147:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1148:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1149:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1150:sieve_extend.c ****                     }
1151:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1152:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1153:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1154:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1155:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1156:sieve_extend.c ****                     tuning_result_index++;
1157:sieve_extend.c ****                 }
1158:sieve_extend.c ****             }
1159:sieve_extend.c ****         }
1160:sieve_extend.c ****     }
1161:sieve_extend.c ****     if (option_verboselevel >= 2) {
1162:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1163:sieve_extend.c ****         printf("Best options\n");
1164:sieve_extend.c ****     }
1165:sieve_extend.c ****     counter_t step=0;
1166:sieve_extend.c ****     while (tuning_results>4) {
1167:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1168:sieve_extend.c ****         step++;
1169:sieve_extend.c ****         if (option_verboselevel >= 2) {
1170:sieve_extend.c ****             tuning_result_index = 0;
1171:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1172:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
GAS LISTING /tmp/ccqpmidN.s 			page 391


1173:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1174:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1175:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1176:sieve_extend.c ****             if (option_verboselevel >= 3) {
1177:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1178:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1179:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1180:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1181:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1182:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1183:sieve_extend.c ****                 }
1184:sieve_extend.c ****             }
1185:sieve_extend.c ****         }
1186:sieve_extend.c **** 
1187:sieve_extend.c ****         tuning_results = tuning_results / 2;
1188:sieve_extend.c **** 
1189:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1190:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1191:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1192:sieve_extend.c ****         }
1193:sieve_extend.c ****         
1194:sieve_extend.c ****     }
1195:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1196:sieve_extend.c ****     if (option_verboselevel >= 1) {
1197:sieve_extend.c ****         tuning_result_index = 0;
1198:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1199:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1200:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1201:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1202:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1203:sieve_extend.c ****     }
1204:sieve_extend.c **** 
1205:sieve_extend.c ****     free(tuning_result);
1206:sieve_extend.c ****     return best_result;
1207:sieve_extend.c **** }
1208:sieve_extend.c **** 
1209:sieve_extend.c **** int main(int argc, char *argv[]) {
 14480              		.loc 1 1209 34 view -0
 14481              		.cfi_startproc
 14482              		.loc 1 1209 34 is_stmt 0 view .LVU4913
 14483 0000 F30F1EFA 		endbr64	
 14484 0004 4157     		push	r15	#
 14485              		.cfi_def_cfa_offset 16
 14486              		.cfi_offset 15, -16
 14487 0006 4156     		push	r14	#
 14488              		.cfi_def_cfa_offset 24
 14489              		.cfi_offset 14, -24
 14490 0008 4155     		push	r13	#
 14491              		.cfi_def_cfa_offset 32
 14492              		.cfi_offset 13, -32
 14493 000a 4154     		push	r12	#
 14494              		.cfi_def_cfa_offset 40
 14495              		.cfi_offset 12, -40
 14496 000c 55       		push	rbp	#
 14497              		.cfi_def_cfa_offset 48
 14498              		.cfi_offset 6, -48
 14499 000d 53       		push	rbx	#
GAS LISTING /tmp/ccqpmidN.s 			page 392


 14500              		.cfi_def_cfa_offset 56
 14501              		.cfi_offset 3, -56
 14502 000e 488DA424 		lea	rsp, -216[rsp]	#,
 14502      28FFFFFF 
 14503              		.cfi_def_cfa_offset 272
 14504              	# sieve_extend.c:1209: int main(int argc, char *argv[]) {
 14505              		.loc 1 1209 34 view .LVU4914
 14506 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp534, MEM[(<address-space-1> long unsigned int *)40B]
 14506      25280000 
 14506      00
 14507 001f 48898424 		mov	QWORD PTR 200[rsp], rax	# D.7158, tmp534
 14507      C8000000 
 14508 0027 31C0     		xor	eax, eax	# tmp534
1210:sieve_extend.c **** 
1211:sieve_extend.c ****     
1212:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 14509              		.loc 1 1212 5 is_stmt 1 view .LVU4915
 14510              	# sieve_extend.c:1212:     counter_t option_maxFactor  = default_sieve_limit;
 14511              		.loc 1 1212 15 is_stmt 0 view .LVU4916
 14512 0029 48C78424 		mov	QWORD PTR 144[rsp], 1000000	# option_maxFactor,
 14512      90000000 
 14512      40420F00 
1213:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 14513              		.loc 1 1213 5 is_stmt 1 view .LVU4917
 14514              	.LBB786:
 14515              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1214:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1215:sieve_extend.c ****     int option_check = default_check_level;
1216:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1217:sieve_extend.c **** 
1218:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 14516              		.loc 1 1218 5 is_stmt 0 view .LVU4918
 14517 0035 83FF01   		cmp	edi, 1	# argc,
 14518              	.LBE786:
 14519              	# sieve_extend.c:1213:     counter_t option_showMaxFactor = default_showMaxFactor;
1213:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 14520              		.loc 1 1213 15 view .LVU4919
 14521 0038 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 14521      98000000 
 14521      00000000 
1214:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 14522              		.loc 1 1214 5 is_stmt 1 view .LVU4920
 14523              	# sieve_extend.c:1214:     int option_verboselevel = default_verbose_level;
1214:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 14524              		.loc 1 1214 9 is_stmt 0 view .LVU4921
 14525 0044 C7842488 		mov	DWORD PTR 136[rsp], 2	# option_verboselevel,
 14525      00000002 
 14525      000000
1215:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 14526              		.loc 1 1215 5 is_stmt 1 view .LVU4922
 14527              	.LVL874:
1216:sieve_extend.c **** 
 14528              		.loc 1 1216 5 view .LVU4923
 14529              	# sieve_extend.c:1216:     int option_tunelevel = default_tune_level;
1216:sieve_extend.c **** 
 14530              		.loc 1 1216 9 is_stmt 0 view .LVU4924
 14531 004f C784248C 		mov	DWORD PTR 140[rsp], 0	# option_tunelevel,
GAS LISTING /tmp/ccqpmidN.s 			page 393


 14531      00000000 
 14531      000000
 14532              		.loc 1 1218 5 is_stmt 1 view .LVU4925
 14533              	.LBB811:
 14534              		.loc 1 1218 10 view .LVU4926
 14535              	.LVL875:
 14536              		.loc 1 1218 21 view .LVU4927
 14537              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
 14538              		.loc 1 1218 5 is_stmt 0 view .LVU4928
 14539 005a 0F8E1C05 		jle	.L1288	#,
 14539      0000
 14540 0060 89FD     		mov	ebp, edi	# argc, tmp488
 14541 0062 4989F4   		mov	r12, rsi	# argv, tmp489
 14542              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
 14543              		.loc 1 1218 14 view .LVU4929
 14544 0065 BB010000 		mov	ebx, 1	# arg,
 14544      00
 14545 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp428,
 14545      000000
 14546              	# sieve_extend.c:1220:         else if (strcmp(argv[arg], "--verbose")==0) {
1219:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1220:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14547              		.loc 1 1220 18 view .LVU4930
 14548 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp443,
 14548      000000
 14549 0078 EB66     		jmp	.L1272	#
 14550              	.LVL876:
 14551 007a 660F1F44 		.p2align 4,,7
 14551      0000
 14552              		.p2align 3
 14553              	.L1404:
1221:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14554              		.loc 1 1221 13 is_stmt 1 view .LVU4931
 14555              	# sieve_extend.c:1221:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 14556              		.loc 1 1221 16 is_stmt 0 view .LVU4932
 14557 0080 83C301   		add	ebx, 1	# arg,
 14558              	.LVL877:
 14559              		.loc 1 1221 16 view .LVU4933
 14560 0083 39DD     		cmp	ebp, ebx	# argc, arg
 14561 0085 0F8E510D 		jle	.L1402	#,
 14561      0000
1222:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 14562              		.loc 1 1222 13 is_stmt 1 view .LVU4934
 14563              	# sieve_extend.c:1222:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 14564              		.loc 1 1222 28 is_stmt 0 view .LVU4935
 14565 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 14565      08
 14566              	# sieve_extend.c:1222:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 14567              		.loc 1 1222 17 view .LVU4936
 14568 0090 488D9424 		lea	rdx, 136[rsp]	# tmp285,
 14568      88000000 
 14569 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 14570 009b 31C0     		xor	eax, eax	#
 14571 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 14571      000000
 14572 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 14572      00
GAS LISTING /tmp/ccqpmidN.s 			page 394


 14573              	.LVL878:
 14574              	# sieve_extend.c:1222:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 14575              		.loc 1 1222 16 view .LVU4937
 14576 00a9 83F801   		cmp	eax, 1	# tmp490,
 14577 00ac 0F85E204 		jne	.L1277	#,
 14577      0000
 14578              	# sieve_extend.c:1222:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 14579              		.loc 1 1222 91 discriminator 1 view .LVU4938
 14580 00b2 8B942488 		mov	edx, DWORD PTR 136[rsp]	# option_verboselevel.16_19, option_verboselevel
 14580      000000
 14581              	# sieve_extend.c:1222:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 14582              		.loc 1 1222 68 discriminator 1 view .LVU4939
 14583 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 14584 00bc 0F8FD204 		jg	.L1277	#,
 14584      0000
1223:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1224:sieve_extend.c ****             }
1225:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 14585              		.loc 1 1225 13 is_stmt 1 view .LVU4940
 14586              	.LVL879:
 14587              	.LBB787:
 14588              	.LBI787:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14589              		.loc 3 105 1 view .LVU4941
 14590              	.LBB788:
 14591              		.loc 3 107 3 view .LVU4942
 14592              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14593              		.loc 3 107 10 is_stmt 0 view .LVU4943
 14594 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 14594      000000
 14595 00c9 BF010000 		mov	edi, 1	#,
 14595      00
 14596 00ce 31C0     		xor	eax, eax	#
 14597 00d0 E8000000 		call	__printf_chk@PLT	#
 14597      00
 14598              	.LVL880:
 14599              	.L1279:
 14600              		.loc 3 107 10 view .LVU4944
 14601              	.LBE788:
 14602              	.LBE787:
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14603              		.loc 1 1218 33 is_stmt 1 discriminator 2 view .LVU4945
 14604              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14605              		.loc 1 1218 36 is_stmt 0 discriminator 2 view .LVU4946
 14606 00d5 83C301   		add	ebx, 1	# arg,
 14607              	.LVL881:
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14608              		.loc 1 1218 21 is_stmt 1 discriminator 2 view .LVU4947
 14609              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14610              		.loc 1 1218 5 is_stmt 0 discriminator 2 view .LVU4948
 14611 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 14612 00da 0F8E0001 		jle	.L1403	#,
 14612      0000
 14613              	.LVL882:
 14614              	.L1272:
GAS LISTING /tmp/ccqpmidN.s 			page 395


1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14615              		.loc 1 1219 9 is_stmt 1 view .LVU4949
 14616              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14617              		.loc 1 1219 24 is_stmt 0 view .LVU4950
 14618 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 14619              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14620              		.loc 1 1219 13 view .LVU4951
 14621 00e3 41B90700 		mov	r9d, 7	# tmp274,
 14621      0000
 14622              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14623              		.loc 1 1219 24 view .LVU4952
 14624 00e9 48C1E003 		sal	rax, 3	# _2,
 14625              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14626              		.loc 1 1219 13 view .LVU4953
 14627 00ed 4C89EF   		mov	rdi, r13	# tmp273, tmp428
 14628              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14629              		.loc 1 1219 24 view .LVU4954
 14630 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 14631              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14632              		.loc 1 1219 13 view .LVU4955
 14633 00f4 4C89C9   		mov	rcx, r9	# tmp454, tmp274
 14634 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 14635 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 14636 00fd F3A6     		repz cmpsb
 14637 00ff 0F97C2   		seta	dl	#, tmp275
 14638 0102 80DA00   		sbb	dl, 0	# _5
 14639              	# sieve_extend.c:1219:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1219:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 14640              		.loc 1 1219 12 view .LVU4956
 14641 0105 84D2     		test	dl, dl	# _5
 14642 0107 0F84A404 		je	.L1400	#,
 14642      0000
1220:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14643              		.loc 1 1220 14 is_stmt 1 view .LVU4957
 14644              	# sieve_extend.c:1220:         else if (strcmp(argv[arg], "--verbose")==0) {
1220:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14645              		.loc 1 1220 18 is_stmt 0 view .LVU4958
 14646 010d B90A0000 		mov	ecx, 10	# tmp280,
 14646      00
 14647 0112 4C89C6   		mov	rsi, r8	# _4, _4
 14648 0115 4C89F7   		mov	rdi, r14	# tmp279, tmp443
 14649 0118 F3A6     		repz cmpsb
 14650 011a 410F97C2 		seta	r10b	#, tmp281
 14651 011e 4180DA00 		sbb	r10b, 0	# _11
 14652              	# sieve_extend.c:1220:         else if (strcmp(argv[arg], "--verbose")==0) {
1220:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 14653              		.loc 1 1220 17 view .LVU4959
 14654 0122 4584D2   		test	r10b, r10b	# _11
 14655 0125 0F8455FF 		je	.L1404	#,
 14655      FFFF
1226:sieve_extend.c ****         } 
GAS LISTING /tmp/ccqpmidN.s 			page 396


1227:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 14656              		.loc 1 1227 14 is_stmt 1 view .LVU4960
 14657              	# sieve_extend.c:1227:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 14658              		.loc 1 1227 18 is_stmt 0 view .LVU4961
 14659 012b B9080000 		mov	ecx, 8	# tmp290,
 14659      00
 14660 0130 4C89C6   		mov	rsi, r8	# _4, _4
 14661 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp289,
 14661      000000
 14662 013a F3A6     		repz cmpsb
 14663 013c 410F97C3 		seta	r11b	#, tmp291
 14664 0140 4180DB00 		sbb	r11b, 0	# _23
 14665              	# sieve_extend.c:1227:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 14666              		.loc 1 1227 17 view .LVU4962
 14667 0144 4584DB   		test	r11b, r11b	# _23
 14668 0147 748C     		je	.L1279	#,
1228:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14669              		.loc 1 1228 14 is_stmt 1 view .LVU4963
 14670              	# sieve_extend.c:1228:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14671              		.loc 1 1228 18 is_stmt 0 view .LVU4964
 14672 0149 4C89C6   		mov	rsi, r8	# _4, _4
 14673 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp295,
 14673      000000
 14674 0153 4C89C9   		mov	rcx, r9	# tmp460, tmp274
 14675 0156 F3A6     		repz cmpsb
 14676 0158 0F97C2   		seta	dl	#, tmp297
 14677 015b 80DA00   		sbb	dl, 0	# _24
 14678              	# sieve_extend.c:1228:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14679              		.loc 1 1228 17 view .LVU4965
 14680 015e 84D2     		test	dl, dl	# _24
 14681 0160 0F855A01 		jne	.L1280	#,
 14681      0000
 14682              		.loc 1 1228 52 is_stmt 1 discriminator 1 view .LVU4966
 14683              	# sieve_extend.c:1228:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 14684              		.loc 1 1228 68 is_stmt 0 discriminator 1 view .LVU4967
 14685 0166 C784248C 		mov	DWORD PTR 140[rsp], 0	# option_tunelevel,
 14685      00000000 
 14685      000000
1229:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 14686              		.loc 1 1229 13 is_stmt 1 discriminator 1 view .LVU4968
 14687              	# sieve_extend.c:1229:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 14688              		.loc 1 1229 16 is_stmt 0 discriminator 1 view .LVU4969
 14689 0171 83C301   		add	ebx, 1	# arg,
 14690              	.LVL883:
 14691              		.loc 1 1229 16 discriminator 1 view .LVU4970
 14692 0174 39DD     		cmp	ebp, ebx	# argc, arg
 14693 0176 0F8EA00C 		jle	.L1405	#,
 14693      0000
1230:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 14694              		.loc 1 1230 13 is_stmt 1 view .LVU4971
 14695              	# sieve_extend.c:1230:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 14696              		.loc 1 1230 28 is_stmt 0 view .LVU4972
 14697 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 14697      08
 14698              	# sieve_extend.c:1230:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 14699              		.loc 1 1230 17 view .LVU4973
 14700 0181 488D9424 		lea	rdx, 140[rsp]	# tmp301,
GAS LISTING /tmp/ccqpmidN.s 			page 397


 14700      8C000000 
 14701 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 14702 018c 31C0     		xor	eax, eax	#
 14703 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 14703      000000
 14704 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 14704      00
 14705              	.LVL884:
 14706              	# sieve_extend.c:1230:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 14707              		.loc 1 1230 16 view .LVU4974
 14708 019a 83F801   		cmp	eax, 1	# tmp491,
 14709 019d 0F855B0C 		jne	.L1282	#,
 14709      0000
 14710              	# sieve_extend.c:1230:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 14711              		.loc 1 1230 85 discriminator 1 view .LVU4975
 14712 01a3 8B94248C 		mov	edx, DWORD PTR 140[rsp]	# option_tunelevel.20_32, option_tunelevel
 14712      000000
 14713              	# sieve_extend.c:1230:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 14714              		.loc 1 1230 65 discriminator 1 view .LVU4976
 14715 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 14716 01ad 0F8F4B0C 		jg	.L1282	#,
 14716      0000
1231:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1232:sieve_extend.c ****             }
1233:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 14717              		.loc 1 1233 13 is_stmt 1 view .LVU4977
 14718              	.LVL885:
 14719              	.LBB789:
 14720              	.LBI789:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14721              		.loc 3 105 1 view .LVU4978
 14722              	.LBB790:
 14723              		.loc 3 107 3 view .LVU4979
 14724              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14725              		.loc 3 107 10 is_stmt 0 view .LVU4980
 14726 01b3 31C0     		xor	eax, eax	#
 14727 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 14727      000000
 14728 01bc BF010000 		mov	edi, 1	#,
 14728      00
 14729              	.LBE790:
 14730              	.LBE789:
 14731              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14732              		.loc 1 1218 36 view .LVU4981
 14733 01c1 83C301   		add	ebx, 1	# arg,
 14734              	.LVL886:
 14735              	.LBB792:
 14736              	.LBB791:
 14737              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14738              		.loc 3 107 10 view .LVU4982
 14739 01c4 E8000000 		call	__printf_chk@PLT	#
 14739      00
 14740              	.LVL887:
 14741              		.loc 3 107 10 view .LVU4983
 14742              	.LBE791:
 14743              	.LBE792:
GAS LISTING /tmp/ccqpmidN.s 			page 398


1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14744              		.loc 1 1218 33 is_stmt 1 view .LVU4984
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14745              		.loc 1 1218 21 view .LVU4985
 14746              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14747              		.loc 1 1218 5 is_stmt 0 view .LVU4986
 14748 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 14749 01cb 0F8F0FFF 		jg	.L1272	#,
 14749      FFFF
 14750 01d1 66662E0F 		.p2align 4
 14750      1F840000 
 14750      0000000F 
 14750      1F4000
 14751              		.p2align 3
 14752              	.L1403:
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14753              		.loc 1 1218 5 view .LVU4987
 14754              	.LBE811:
1234:sieve_extend.c ****         }
1235:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1236:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1237:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1238:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1239:sieve_extend.c ****             }
1240:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1241:sieve_extend.c ****         }
1242:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1243:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1244:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1245:sieve_extend.c ****         }
1246:sieve_extend.c ****     }
1247:sieve_extend.c **** 
1248:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 14755              		.loc 1 1248 5 is_stmt 1 view .LVU4988
1249:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1250:sieve_extend.c ****         printf("\nResult set:\n");
1251:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1252:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1253:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1254:sieve_extend.c ****         else printf("The sieve is VALID\n");
1255:sieve_extend.c ****         delete_sieve(sieve_instance);
1256:sieve_extend.c ****         exit(0);
1257:sieve_extend.c ****     }
1258:sieve_extend.c **** 
1259:sieve_extend.c ****     struct timespec start_time,end_time;
 14756              		.loc 1 1259 5 view .LVU4989
1260:sieve_extend.c **** 
1261:sieve_extend.c ****     if (option_check) {
 14757              		.loc 1 1261 5 view .LVU4990
1262:sieve_extend.c ****         // Count the number of primes and validate the result
1263:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 14758              		.loc 1 1263 9 view .LVU4991
 14759              	# sieve_extend.c:1263:         if (option_verboselevel >= 1) printf("Validating... ");
 14760              		.loc 1 1263 12 is_stmt 0 view .LVU4992
 14761 01e0 8BAC2488 		mov	ebp, DWORD PTR 136[rsp]	#, option_verboselevel
 14761      000000
GAS LISTING /tmp/ccqpmidN.s 			page 399


 14762              	.LVL888:
 14763              		.loc 1 1263 12 view .LVU4993
 14764 01e7 85ED     		test	ebp, ebp	#
 14765 01e9 0F8F8D03 		jg	.L1288	#,
 14765      0000
 14766              	.LVL889:
 14767              	.L1273:
1264:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 14768              		.loc 1 1264 9 is_stmt 1 view .LVU4994
 14769              	# sieve_extend.c:1264:         if (option_verboselevel >= 2) printf("\n");
 14770              		.loc 1 1264 12 is_stmt 0 view .LVU4995
 14771 01ef 83BC2488 		cmp	DWORD PTR 136[rsp], 1	# option_verboselevel,
 14771      00000001 
 14772 01f7 7E0A     		jle	.L1289	#,
 14773              		.loc 1 1264 39 is_stmt 1 view .LVU4996
 14774              	.LVL890:
 14775              	.LBB812:
 14776              	.LBI812:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14777              		.loc 3 105 1 view .LVU4997
 14778              	.LBB813:
 14779              		.loc 3 107 3 view .LVU4998
 14780              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14781              		.loc 3 107 10 is_stmt 0 view .LVU4999
 14782 01f9 BF0A0000 		mov	edi, 10	#,
 14782      00
 14783 01fe E8000000 		call	putchar@PLT	#
 14783      00
 14784              	.LVL891:
 14785              	.L1289:
 14786              		.loc 3 107 10 view .LVU5000
 14787              	.LBE813:
 14788              	.LBE812:
 14789              	.LBB814:
 14790              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14791              		.loc 1 1218 14 view .LVU5001
 14792 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 14792      07000000 
 14793 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 14793      0000
 14794              	.LBE814:
 14795              	.LBB815:
 14796              	.LBB816:
 14797              	.LBB817:
 14798              	.LBB818:
 14799              	.LBB819:
 14800              	.LBB820:
 14801              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14802              		.loc 3 107 10 view .LVU5002
 14803 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp442,
 14803      000000
 14804              	.L1296:
 14805              	.LVL892:
 14806              		.loc 3 107 10 view .LVU5003
 14807              	.LBE820:
 14808              	.LBE819:
GAS LISTING /tmp/ccqpmidN.s 			page 400


 14809              	.LBE818:
 14810              	.LBE817:
1265:sieve_extend.c **** 
1266:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1267:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1268:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 14811              		.loc 1 1268 13 is_stmt 1 view .LVU5004
 14812              	# sieve_extend.c:1268:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 14813              		.loc 1 1268 37 is_stmt 0 view .LVU5005
 14814 0218 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 14814      000000
 14815              	# sieve_extend.c:1268:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 14816              		.loc 1 1268 16 view .LVU5006
 14817 021f 83F801   		cmp	eax, 1	# prephitmp_382,
 14818 0222 7E1D     		jle	.L1290	#,
 14819              		.loc 1 1268 43 is_stmt 1 view .LVU5007
 14820              	.LVL893:
 14821              	.LBB836:
 14822              	.LBI836:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14823              		.loc 3 105 1 view .LVU5008
 14824              	.LBB837:
 14825              		.loc 3 107 3 view .LVU5009
 14826              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14827              		.loc 3 107 10 is_stmt 0 view .LVU5010
 14828 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 14829 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 14829      000000
 14830 022e BF010000 		mov	edi, 1	#,
 14830      00
 14831 0233 31C0     		xor	eax, eax	#
 14832 0235 E8000000 		call	__printf_chk@PLT	#
 14832      00
 14833              	.LVL894:
 14834 023a 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 14834      000000
 14835              	.LVL895:
 14836              	.L1290:
 14837              		.loc 3 107 10 view .LVU5011
 14838              	.LBE837:
 14839              	.LBE836:
 14840              	.LBE816:
 14841              	.LBE815:
 14842              	.LBB846:
 14843              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14844              		.loc 1 1218 14 view .LVU5012
 14845 0241 41BC0500 		mov	r12d, 5	# ivtmp_213,
 14845      0000
 14846 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 14846      00
 14847 024c EB56     		jmp	.L1294	#
 14848              	.LVL896:
 14849 024e 6690     		.p2align 4,,7
 14850              		.p2align 3
 14851              	.L1291:
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/ccqpmidN.s 			page 401


 14852              		.loc 1 1218 14 view .LVU5013
 14853              	.LBE846:
 14854              	.LBB847:
 14855              	.LBB843:
 14856              	.LBB838:
 14857              	.LBB831:
1269:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1270:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1271:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1272:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 14858              		.loc 1 1272 17 is_stmt 1 view .LVU5014
 14859              	# sieve_extend.c:1272:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 14860              		.loc 1 1272 40 is_stmt 0 view .LVU5015
 14861 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 14862 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 14863 0256 E8000000 		call	sieve	#
 14863      00
 14864              	.LVL897:
 14865              	# sieve_extend.c:1273:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1273:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 14866              		.loc 1 1273 29 view .LVU5016
 14867 025b 8BB42488 		mov	esi, DWORD PTR 136[rsp]	#, option_verboselevel
 14867      000000
 14868              	# sieve_extend.c:1272:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1272:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 14869              		.loc 1 1272 40 view .LVU5017
 14870 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp494
 14871              	.LVL898:
 14872              		.loc 1 1273 17 is_stmt 1 view .LVU5018
 14873              	# sieve_extend.c:1273:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 14874              		.loc 1 1273 29 is_stmt 0 view .LVU5019
 14875 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 14876 0268 E8000000 		call	validatePrimeCount	#
 14876      00
 14877              	.LVL899:
 14878              	.LBB822:
 14879              	.LBB823:
 14880              	# sieve_extend.c:106:     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 14881              		.loc 1 106 5 view .LVU5020
 14882 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_126->bitarray
 14883              	.LBE823:
 14884              	.LBE822:
 14885              	# sieve_extend.c:1273:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 14886              		.loc 1 1273 29 view .LVU5021
 14887 0270 89C3     		mov	ebx, eax	# valid, tmp495
 14888              	.LVL900:
1274:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 14889              		.loc 1 1274 17 is_stmt 1 view .LVU5022
 14890              	.LBB825:
 14891              	.LBI822:
 105:sieve_extend.c ****     free(sieve->bitarray);
 14892              		.loc 1 105 13 view .LVU5023
 14893              	.LBB824:
 106:sieve_extend.c ****     free(sieve);
 14894              		.loc 1 106 5 view .LVU5024
 14895 0272 E8000000 		call	free@PLT	#
GAS LISTING /tmp/ccqpmidN.s 			page 402


 14895      00
 14896              	.LVL901:
 107:sieve_extend.c **** }
 14897              		.loc 1 107 5 view .LVU5025
 14898 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 14899 027a E8000000 		call	free@PLT	#
 14899      00
 14900              	.LVL902:
 107:sieve_extend.c **** }
 14901              		.loc 1 107 5 is_stmt 0 view .LVU5026
 14902              	.LBE824:
 14903              	.LBE825:
1275:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 14904              		.loc 1 1275 17 is_stmt 1 view .LVU5027
 14905              	# sieve_extend.c:1275:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 14906              		.loc 1 1275 20 is_stmt 0 view .LVU5028
 14907 027f 85DB     		test	ebx, ebx	# valid
 14908 0281 0F84C902 		je	.L1330	#,
 14908      0000
 14909              		.loc 1 1275 44 is_stmt 1 discriminator 2 view .LVU5029
 14910              	# sieve_extend.c:1275:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 14911              		.loc 1 1275 68 is_stmt 0 discriminator 2 view .LVU5030
 14912 0287 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 14912      000000
 14913              	# sieve_extend.c:1275:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 14914              		.loc 1 1275 47 discriminator 2 view .LVU5031
 14915 028e 83F802   		cmp	eax, 2	# prephitmp_382,
 14916 0291 0F8FE900 		jg	.L1406	#,
 14916      0000
 14917              	.LBE831:
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14918              		.loc 1 1270 75 is_stmt 1 discriminator 2 view .LVU5032
 14919              	# sieve_extend.c:1270:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14920              		.loc 1 1270 90 is_stmt 0 discriminator 2 view .LVU5033
 14921 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 14922              	.LVL903:
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14923              		.loc 1 1270 49 is_stmt 1 discriminator 2 view .LVU5034
 14924              	# sieve_extend.c:1270:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14925              		.loc 1 1270 13 is_stmt 0 discriminator 2 view .LVU5035
 14926 029a 4183EC01 		sub	r12d, 1	# ivtmp_213,
 14927 029e 0F840301 		je	.L1407	#,
 14927      0000
 14928              	.LVL904:
 14929              	.L1294:
 14930              	.LBB832:
1271:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 14931              		.loc 1 1271 17 is_stmt 1 view .LVU5036
 14932              	# sieve_extend.c:1271:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1271:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 14933              		.loc 1 1271 20 is_stmt 0 view .LVU5037
 14934 02a4 83F802   		cmp	eax, 2	# prephitmp_382,
 14935 02a7 7EA7     		jle	.L1291	#,
1271:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 14936              		.loc 1 1271 47 is_stmt 1 view .LVU5038
GAS LISTING /tmp/ccqpmidN.s 			page 403


 14937              	.LVL905:
 14938              	.LBB826:
 14939              	.LBI819:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14940              		.loc 3 105 1 view .LVU5039
 14941              	.LBB821:
 14942              		.loc 3 107 3 view .LVU5040
 14943              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14944              		.loc 3 107 10 is_stmt 0 view .LVU5041
 14945 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 14946 02ac 4C89F6   		mov	rsi, r14	#, tmp442
 14947 02af BF010000 		mov	edi, 1	#,
 14947      00
 14948 02b4 31C0     		xor	eax, eax	#
 14949 02b6 E8000000 		call	__printf_chk@PLT	#
 14949      00
 14950              	.LVL906:
 14951 02bb EB93     		jmp	.L1291	#
 14952              	.LVL907:
 14953 02bd 0F1F00   		.p2align 4,,7
 14954              		.p2align 3
 14955              	.L1280:
 14956              		.loc 3 107 10 view .LVU5042
 14957              	.LBE821:
 14958              	.LBE826:
 14959              	.LBE832:
 14960              	.LBE838:
 14961              	.LBE843:
 14962              	.LBE847:
 14963              	.LBB848:
1235:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14964              		.loc 1 1235 14 is_stmt 1 view .LVU5043
 14965              	# sieve_extend.c:1235:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1235:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14966              		.loc 1 1235 18 is_stmt 0 view .LVU5044
 14967 02c0 4C89C9   		mov	rcx, r9	# tmp274, tmp274
 14968 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 14969 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp305,
 14969      000000
 14970 02cd F3A6     		repz cmpsb
 14971 02cf 410F97C1 		seta	r9b	#, tmp307
 14972 02d3 4180D900 		sbb	r9b, 0	# _36
 14973              	# sieve_extend.c:1235:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1235:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14974              		.loc 1 1235 17 view .LVU5045
 14975 02d7 4584C9   		test	r9b, r9b	# _36
 14976 02da 756C     		jne	.L1284	#,
1235:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14977              		.loc 1 1235 52 is_stmt 1 discriminator 1 view .LVU5046
 14978              	# sieve_extend.c:1235:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1235:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14979              		.loc 1 1235 72 is_stmt 0 discriminator 1 view .LVU5047
 14980 02dc 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 14980      98000000 
 14980      00000000 
1236:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14981              		.loc 1 1236 13 is_stmt 1 discriminator 1 view .LVU5048
GAS LISTING /tmp/ccqpmidN.s 			page 404


 14982              	# sieve_extend.c:1236:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1236:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14983              		.loc 1 1236 16 is_stmt 0 discriminator 1 view .LVU5049
 14984 02e8 83C301   		add	ebx, 1	# arg,
 14985              	.LVL908:
1236:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14986              		.loc 1 1236 16 discriminator 1 view .LVU5050
 14987 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 14988 02ed 0F8E540B 		jle	.L1408	#,
 14988      0000
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14989              		.loc 1 1237 13 is_stmt 1 view .LVU5051
 14990              	# sieve_extend.c:1237:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14991              		.loc 1 1237 28 is_stmt 0 view .LVU5052
 14992 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 14992      08
 14993              	# sieve_extend.c:1237:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14994              		.loc 1 1237 17 view .LVU5053
 14995 02f8 488D9424 		lea	rdx, 152[rsp]	# tmp311,
 14995      98000000 
 14996 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 14997 0303 31C0     		xor	eax, eax	#
 14998 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 14998      000000
 14999 030c E8000000 		call	__isoc99_sscanf@PLT	#
 14999      00
 15000              	.LVL909:
 15001              	# sieve_extend.c:1237:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15002              		.loc 1 1237 16 view .LVU5054
 15003 0311 83F801   		cmp	eax, 1	# tmp492,
 15004 0314 0F85F30A 		jne	.L1286	#,
 15004      0000
 15005              	# sieve_extend.c:1237:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15006              		.loc 1 1237 106 discriminator 1 view .LVU5055
 15007 031a 488B9424 		mov	rdx, QWORD PTR 152[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 15007      98000000 
 15008              	# sieve_extend.c:1237:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1237:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 15009              		.loc 1 1237 82 discriminator 1 view .LVU5056
 15010 0322 483B9424 		cmp	rdx, QWORD PTR 144[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 15010      90000000 
 15011 032a 0F87DD0A 		ja	.L1286	#,
 15011      0000
1240:sieve_extend.c ****         }
 15012              		.loc 1 1240 13 is_stmt 1 view .LVU5057
 15013              	.LVL910:
 15014              	.LBB793:
 15015              	.LBI793:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15016              		.loc 3 105 1 view .LVU5058
 15017              	.LBB794:
 15018              		.loc 3 107 3 view .LVU5059
 15019              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccqpmidN.s 			page 405


 15020              		.loc 3 107 10 is_stmt 0 view .LVU5060
 15021 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 15021      000000
 15022 0337 BF010000 		mov	edi, 1	#,
 15022      00
 15023 033c 31C0     		xor	eax, eax	#
 15024 033e E8000000 		call	__printf_chk@PLT	#
 15024      00
 15025              	.LVL911:
 15026 0343 E98DFDFF 		jmp	.L1279	#
 15026      FF
 15027              	.LVL912:
 15028              		.p2align 4,,7
 15029              		.p2align 3
 15030              	.L1284:
 15031              		.loc 3 107 10 view .LVU5061
 15032              	.LBE794:
 15033              	.LBE793:
1242:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15034              		.loc 1 1242 14 is_stmt 1 view .LVU5062
 15035              	# sieve_extend.c:1242:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1242:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15036              		.loc 1 1242 18 is_stmt 0 view .LVU5063
 15037 0348 31C0     		xor	eax, eax	#
 15038 034a 488D9424 		lea	rdx, 144[rsp]	# tmp313,
 15038      90000000 
 15039 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 15039      000000
 15040 0359 4C89C7   		mov	rdi, r8	#, _4
 15041 035c E8000000 		call	__isoc99_sscanf@PLT	#
 15041      00
 15042              	.LVL913:
 15043              	# sieve_extend.c:1242:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1242:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 15044              		.loc 1 1242 17 view .LVU5064
 15045 0361 83F801   		cmp	eax, 1	# tmp493,
 15046 0364 0F846BFD 		je	.L1279	#,
 15046      FFFF
1243:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 15047              		.loc 1 1243 13 is_stmt 1 view .LVU5065
 15048              	.LVL914:
 15049              	.LBB795:
 15050              	.LBI795:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15051              		.loc 3 98 1 view .LVU5066
 15052              	.LBB796:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15053              		.loc 3 100 3 view .LVU5067
 15054              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15055              		.loc 3 100 10 is_stmt 0 view .LVU5068
 15056 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 15057 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 15057      000000
 15058 0374 E9250200 		jmp	.L1399	#
 15058      00
 15059              	.LVL915:
GAS LISTING /tmp/ccqpmidN.s 			page 406


 15060 0379 0F1F8000 		.p2align 4,,7
 15060      000000
 15061              		.p2align 3
 15062              	.L1406:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15063              		.loc 3 100 10 view .LVU5069
 15064              	.LBE796:
 15065              	.LBE795:
 15066              	.LBE848:
 15067              	.LBB849:
 15068              	.LBB844:
 15069              	.LBB839:
 15070              	.LBB833:
 15071              		.loc 1 1275 74 is_stmt 1 view .LVU5070
 15072              	.LBB827:
 15073              	.LBI827:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15074              		.loc 3 105 1 view .LVU5071
 15075              	.LBB828:
 15076              		.loc 3 107 3 view .LVU5072
 15077              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15078              		.loc 3 107 10 is_stmt 0 view .LVU5073
 15079 0380 31C0     		xor	eax, eax	#
 15080 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 15080      000000
 15081 0389 BF010000 		mov	edi, 1	#,
 15081      00
 15082              	.LBE828:
 15083              	.LBE827:
 15084              	.LBE833:
 15085              	# sieve_extend.c:1270:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15086              		.loc 1 1270 90 view .LVU5074
 15087 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 15088              	.LVL916:
 15089              	.LBB834:
 15090              	.LBB830:
 15091              	.LBB829:
 15092              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15093              		.loc 3 107 10 view .LVU5075
 15094 0391 E8000000 		call	__printf_chk@PLT	#
 15094      00
 15095              	.LVL917:
 15096 0396 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 15096      000000
 15097              	.LVL918:
 15098              		.loc 3 107 10 view .LVU5076
 15099              	.LBE829:
 15100              	.LBE830:
 15101              	.LBE834:
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15102              		.loc 1 1270 75 is_stmt 1 view .LVU5077
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15103              		.loc 1 1270 49 view .LVU5078
 15104              	# sieve_extend.c:1270:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15105              		.loc 1 1270 13 is_stmt 0 view .LVU5079
GAS LISTING /tmp/ccqpmidN.s 			page 407


 15106 039d 4183EC01 		sub	r12d, 1	# ivtmp_213,
 15107 03a1 0F85FDFE 		jne	.L1294	#,
 15107      FFFF
 15108              	.L1407:
1270:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 15109              		.loc 1 1270 13 view .LVU5080
 15110              	.LBE839:
1276:sieve_extend.c ****             }
1277:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 15111              		.loc 1 1277 13 is_stmt 1 view .LVU5081
 15112              	# sieve_extend.c:1277:             if (option_verboselevel >= 2) printf("\n");
 15113              		.loc 1 1277 16 is_stmt 0 view .LVU5082
 15114 03a7 83F801   		cmp	eax, 1	# prephitmp_382,
 15115 03aa 7E0A     		jle	.L1295	#,
 15116              		.loc 1 1277 43 is_stmt 1 view .LVU5083
 15117              	.LVL919:
 15118              	.LBB840:
 15119              	.LBI840:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15120              		.loc 3 105 1 view .LVU5084
 15121              	.LBB841:
 15122              		.loc 3 107 3 view .LVU5085
 15123              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15124              		.loc 3 107 10 is_stmt 0 view .LVU5086
 15125 03ac BF0A0000 		mov	edi, 10	#,
 15125      00
 15126 03b1 E8000000 		call	putchar@PLT	#
 15126      00
 15127              	.LVL920:
 15128              	.L1295:
 15129              		.loc 3 107 10 view .LVU5087
 15130              	.LBE841:
 15131              	.LBE840:
 15132              	.LBE844:
1267:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15133              		.loc 1 1267 77 is_stmt 1 discriminator 2 view .LVU5088
 15134              	# sieve_extend.c:1267:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1267:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15135              		.loc 1 1267 93 is_stmt 0 discriminator 2 view .LVU5089
 15136 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp319,
 15136      00
 15137              	.LVL921:
1267:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15138              		.loc 1 1267 93 discriminator 2 view .LVU5090
 15139 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 15140              	.LVL922:
1267:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15141              		.loc 1 1267 47 is_stmt 1 discriminator 2 view .LVU5091
 15142              	# sieve_extend.c:1267:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1267:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 15143              		.loc 1 1267 9 is_stmt 0 discriminator 2 view .LVU5092
 15144 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 15144      01
 15145 03c3 0F854FFE 		jne	.L1296	#,
 15145      FFFF
 15146              	.LBE849:
1278:sieve_extend.c ****         }
GAS LISTING /tmp/ccqpmidN.s 			page 408


1279:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 15147              		.loc 1 1279 9 is_stmt 1 view .LVU5093
 15148              	# sieve_extend.c:1279:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 15149              		.loc 1 1279 12 is_stmt 0 view .LVU5094
 15150 03c9 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 15150      00000000 
 15151 03d1 0F8F6008 		jg	.L1409	#,
 15151      0000
1280:sieve_extend.c ****     }
1281:sieve_extend.c ****     
1282:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 15152              		.loc 1 1282 5 is_stmt 1 view .LVU5095
 15153              	.LVL923:
1283:sieve_extend.c ****     if (option_tunelevel) {
 15154              		.loc 1 1283 5 view .LVU5096
 15155              	# sieve_extend.c:1283:     if (option_tunelevel) {
 15156              		.loc 1 1283 9 is_stmt 0 view .LVU5097
 15157 03d7 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# option_tunelevel.40_342, option_tunelevel
 15157      8C000000 
 15158              	# sieve_extend.c:1282:     counter_t best_blocksize_bits = default_blocksize;
1282:sieve_extend.c ****     if (option_tunelevel) {
 15159              		.loc 1 1282 15 view .LVU5098
 15160 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 15160      0300
 15161              	# sieve_extend.c:1283:     if (option_tunelevel) {
 15162              		.loc 1 1283 8 view .LVU5099
 15163 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_342
 15164 03e8 0F858F02 		jne	.L1410	#,
 15164      0000
 15165              	.LVL924:
 15166              	.L1323:
 15167              	.LBB850:
1284:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1285:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1286:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1287:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1288:sieve_extend.c ****     }
1289:sieve_extend.c **** 
1290:sieve_extend.c ****     double max_time = default_sieve_duration;
1291:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1292:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1293:sieve_extend.c ****         counter_t passes = 0;
 15168              		.loc 1 1293 9 is_stmt 1 view .LVU5100
1294:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 15169              		.loc 1 1294 9 view .LVU5101
1295:sieve_extend.c ****         double elapsed_time = 0;
 15170              		.loc 1 1295 9 view .LVU5102
1296:sieve_extend.c ****         struct sieve_state *sieve_instance;
 15171              		.loc 1 1296 9 view .LVU5103
1297:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 15172              		.loc 1 1297 9 view .LVU5104
 15173 03ee 488DB424 		lea	rsi, 160[rsp]	# tmp402,
 15173      A0000000 
 15174 03f6 BF010000 		mov	edi, 1	#,
 15174      00
 15175 03fb E8000000 		call	clock_gettime@PLT	#
 15175      00
GAS LISTING /tmp/ccqpmidN.s 			page 409


 15176              	.LVL925:
1298:sieve_extend.c ****         while (elapsed_time <= max_time) {
 15177              		.loc 1 1298 9 view .LVU5105
 15178              		.loc 1 1298 15 view .LVU5106
 15179              	# sieve_extend.c:1293:         counter_t passes = 0;
1293:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 15180              		.loc 1 1293 19 is_stmt 0 view .LVU5107
 15181 0400 4531FF   		xor	r15d, r15d	# passes
 15182 0403 4C8DAC24 		lea	r13, 176[rsp]	# tmp427,
 15182      B0000000 
 15183              	.LVL926:
 15184              	.L1324:
1299:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15185              		.loc 1 1299 13 is_stmt 1 view .LVU5108
 15186              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 15187              		.loc 1 1299 30 is_stmt 0 view .LVU5109
 15188 040b 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 15188      90000000 
 15189 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 15190              	# sieve_extend.c:1301:             passes++;
1300:sieve_extend.c ****             delete_sieve(sieve_instance);
1301:sieve_extend.c ****             passes++;
 15191              		.loc 1 1301 19 view .LVU5110
 15192 0416 4983C701 		add	r15, 1	# passes,
 15193              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1299:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15194              		.loc 1 1299 30 view .LVU5111
 15195 041a E8000000 		call	sieve	#
 15195      00
 15196              	.LVL927:
 15197              	.LBB851:
 15198              	.LBB852:
 15199              	# sieve_extend.c:106:     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 15200              		.loc 1 106 5 view .LVU5112
 15201 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 15202              	.LBE852:
 15203              	.LBE851:
 15204              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1299:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15205              		.loc 1 1299 30 view .LVU5113
 15206 0422 4889C5   		mov	rbp, rax	# sieve_instance, tmp497
 15207              	.LVL928:
1300:sieve_extend.c ****             delete_sieve(sieve_instance);
 15208              		.loc 1 1300 13 is_stmt 1 view .LVU5114
 15209              	.LBB856:
 15210              	.LBI851:
 105:sieve_extend.c ****     free(sieve->bitarray);
 15211              		.loc 1 105 13 view .LVU5115
 15212              	.LBB853:
 106:sieve_extend.c ****     free(sieve);
 15213              		.loc 1 106 5 view .LVU5116
 15214 0425 E8000000 		call	free@PLT	#
 15214      00
 15215              	.LVL929:
 107:sieve_extend.c **** }
 15216              		.loc 1 107 5 view .LVU5117
GAS LISTING /tmp/ccqpmidN.s 			page 410


 15217 042a 4889EF   		mov	rdi, rbp	#, sieve_instance
 15218 042d E8000000 		call	free@PLT	#
 15218      00
 15219              	.LVL930:
 107:sieve_extend.c **** }
 15220              		.loc 1 107 5 is_stmt 0 view .LVU5118
 15221              	.LBE853:
 15222              	.LBE856:
 15223              		.loc 1 1301 13 is_stmt 1 view .LVU5119
1302:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15224              		.loc 1 1302 13 view .LVU5120
 15225 0432 4C89EE   		mov	rsi, r13	#, tmp427
 15226 0435 BF010000 		mov	edi, 1	#,
 15226      00
 15227 043a E8000000 		call	clock_gettime@PLT	#
 15227      00
 15228              	.LVL931:
1303:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15229              		.loc 1 1303 13 view .LVU5121
 15230              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15231              		.loc 1 1303 62 is_stmt 0 view .LVU5122
 15232 043f C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 184[rsp]	# tmp405, end_time.tv_nsec
 15232      A424B800 
 15232      0000
 15233              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15234              		.loc 1 1303 68 view .LVU5123
 15235 0449 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 160[rsp]	# tmp406, start_time.tv_sec
 15235      AC24A000 
 15235      0000
 15236              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15237              		.loc 1 1303 108 view .LVU5124
 15238 0453 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 168[rsp]	# tmp408, start_time.tv_nsec
 15238      B424A800 
 15238      0000
 15239              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15240              		.loc 1 1303 44 view .LVU5125
 15241 045d C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 176[rsp]	# tmp409, end_time.tv_sec
 15241      8424B000 
 15241      0000
 15242              	# sieve_extend.c:1298:         while (elapsed_time <= max_time) {
1298:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15243              		.loc 1 1298 15 view .LVU5126
 15244 0467 C57B100D 		vmovsd	xmm9, QWORD PTR .LC57[rip]	# tmp582,
 15244      00000000 
 15245 046f C4E2D19B 		vfmsub132sd	xmm4, xmm5, QWORD PTR .LC8[rip]	# _285, tmp406,
 15245      25000000 
 15245      00
 15246 0478 C4E2B99D 		vfnmadd132sd	xmm6, xmm8, QWORD PTR .LC8[rip]	# _286, tmp409,
 15246      35000000 
 15246      00
 15247              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15248              		.loc 1 1303 26 view .LVU5127
 15249 0481 C5DB58C6 		vaddsd	xmm0, xmm4, xmm6	# elapsed_time, _285, _286
 15250              	.LVL932:
1298:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15251              		.loc 1 1298 15 is_stmt 1 view .LVU5128
 15252 0485 C5792FC8 		vcomisd	xmm9, xmm0	# tmp582, elapsed_time
GAS LISTING /tmp/ccqpmidN.s 			page 411


 15253 0489 0F828500 		jb	.L1396	#,
 15253      0000
 15254              	.LVL933:
1299:sieve_extend.c ****             delete_sieve(sieve_instance);
 15255              		.loc 1 1299 13 view .LVU5129
 15256              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1299:sieve_extend.c ****             delete_sieve(sieve_instance);
 15257              		.loc 1 1299 30 is_stmt 0 view .LVU5130
 15258 048f 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 15258      90000000 
 15259 0497 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 15260              	# sieve_extend.c:1301:             passes++;
1301:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15261              		.loc 1 1301 19 view .LVU5131
 15262 049a 4983C701 		add	r15, 1	# passes,
 15263              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1299:sieve_extend.c ****             delete_sieve(sieve_instance);
 15264              		.loc 1 1299 30 view .LVU5132
 15265 049e E8000000 		call	sieve	#
 15265      00
 15266              	.LVL934:
 15267              	.LBB857:
 15268              	.LBB854:
 15269              	# sieve_extend.c:106:     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 15270              		.loc 1 106 5 view .LVU5133
 15271 04a3 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 15272              	.LBE854:
 15273              	.LBE857:
 15274              	# sieve_extend.c:1299:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1299:sieve_extend.c ****             delete_sieve(sieve_instance);
 15275              		.loc 1 1299 30 view .LVU5134
 15276 04a6 4889C3   		mov	rbx, rax	# sieve_instance, tmp499
1300:sieve_extend.c ****             passes++;
 15277              		.loc 1 1300 13 is_stmt 1 view .LVU5135
 15278              	.LVL935:
 15279              	.LBB858:
 105:sieve_extend.c ****     free(sieve->bitarray);
 15280              		.loc 1 105 13 view .LVU5136
 15281              	.LBB855:
 106:sieve_extend.c ****     free(sieve);
 15282              		.loc 1 106 5 view .LVU5137
 15283 04a9 E8000000 		call	free@PLT	#
 15283      00
 15284              	.LVL936:
 107:sieve_extend.c **** }
 15285              		.loc 1 107 5 view .LVU5138
 15286 04ae 4889DF   		mov	rdi, rbx	#, sieve_instance
 15287 04b1 E8000000 		call	free@PLT	#
 15287      00
 15288              	.LVL937:
 107:sieve_extend.c **** }
 15289              		.loc 1 107 5 is_stmt 0 view .LVU5139
 15290              	.LBE855:
 15291              	.LBE858:
1301:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 15292              		.loc 1 1301 13 is_stmt 1 view .LVU5140
GAS LISTING /tmp/ccqpmidN.s 			page 412


1302:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 15293              		.loc 1 1302 13 view .LVU5141
 15294 04b6 4C89EE   		mov	rsi, r13	#, tmp427
 15295 04b9 BF010000 		mov	edi, 1	#,
 15295      00
 15296 04be E8000000 		call	clock_gettime@PLT	#
 15296      00
 15297              	.LVL938:
 15298              		.loc 1 1303 13 view .LVU5142
 15299              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15300              		.loc 1 1303 62 is_stmt 0 view .LVU5143
 15301 04c3 C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 184[rsp]	# tmp482, end_time.tv_nsec
 15301      9424B800 
 15301      0000
 15302              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15303              		.loc 1 1303 68 view .LVU5144
 15304 04cd C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 160[rsp]	# tmp483, start_time.tv_sec
 15304      9C24A000 
 15304      0000
 15305              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15306              		.loc 1 1303 108 view .LVU5145
 15307 04d7 C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 168[rsp]	# tmp485, start_time.tv_nsec
 15307      A424A800 
 15307      0000
 15308              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15309              		.loc 1 1303 44 view .LVU5146
 15310 04e1 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 176[rsp]	# tmp486, end_time.tv_sec
 15310      AC24B000 
 15310      0000
 15311              	# sieve_extend.c:1298:         while (elapsed_time <= max_time) {
1298:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15312              		.loc 1 1298 15 view .LVU5147
 15313 04eb C57B1035 		vmovsd	xmm14, QWORD PTR .LC57[rip]	# tmp589,
 15313      00000000 
 15314 04f3 C462A19B 		vfmsub132sd	xmm10, xmm11, QWORD PTR .LC8[rip]	# _285, tmp483,
 15314      15000000 
 15314      00
 15315 04fc C462919D 		vfnmadd132sd	xmm12, xmm13, QWORD PTR .LC8[rip]	# _286, tmp486,
 15315      25000000 
 15315      00
 15316              	# sieve_extend.c:1303:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 15317              		.loc 1 1303 26 view .LVU5148
 15318 0505 C4C12B58 		vaddsd	xmm0, xmm10, xmm12	# elapsed_time, _285, _286
 15318      C4
 15319              	.LVL939:
1298:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 15320              		.loc 1 1298 15 is_stmt 1 view .LVU5149
 15321 050a C5792FF0 		vcomisd	xmm14, xmm0	# tmp589, elapsed_time
 15322 050e 0F83F7FE 		jnb	.L1324	#,
 15322      FFFF
 15323              	.L1396:
1304:sieve_extend.c ****         }
1305:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 15324              		.loc 1 1305 9 view .LVU5150
 15325              	.LVL940:
 15326              	.LBB859:
 15327              	.LBI859:
GAS LISTING /tmp/ccqpmidN.s 			page 413


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15328              		.loc 3 105 1 view .LVU5151
 15329              	.LBB860:
 15330              		.loc 3 107 3 view .LVU5152
 15331              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15332              		.loc 3 107 10 is_stmt 0 view .LVU5153
 15333 0514 4C89FA   		mov	rdx, r15	#, passes
 15334 0517 488D3500 		lea	rsi, .LC58[rip]	#,
 15334      000000
 15335 051e BF010000 		mov	edi, 1	#,
 15335      00
 15336 0523 B8010000 		mov	eax, 1	#,
 15336      00
 15337 0528 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 15337      2420
 15338 052e E8000000 		call	__printf_chk@PLT	#
 15338      00
 15339              	.LVL941:
 15340              		.loc 3 107 10 view .LVU5154
 15341              	.LBE860:
 15342              	.LBE859:
1306:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 15343              		.loc 1 1306 9 is_stmt 1 view .LVU5155
 15344              	# sieve_extend.c:1306:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 15345              		.loc 1 1306 12 is_stmt 0 view .LVU5156
 15346 0533 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 15346      00000000 
 15347 053b 0F8FCB00 		jg	.L1411	#,
 15347      0000
 15348              	.LVL942:
 15349              	.L1322:
 15350              		.loc 1 1306 12 view .LVU5157
 15351              	.LBE850:
1307:sieve_extend.c ****     }
1308:sieve_extend.c ****     
1309:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 15352              		.loc 1 1309 5 is_stmt 1 view .LVU5158
 15353              	# sieve_extend.c:1309:     if (option_showMaxFactor > 0) {
 15354              		.loc 1 1309 8 is_stmt 0 view .LVU5159
 15355 0541 4883BC24 		cmp	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 15355      98000000 
 15355      00
 15356 054a 756E     		jne	.L1412	#,
 15357 054c 0F1F4000 		.p2align 4
 15358              		.p2align 3
 15359              	.L1330:
 15360              	.LBB867:
 15361              	.LBB845:
 15362              	.LBB842:
 15363              	.LBB835:
1275:sieve_extend.c ****             }
 15364              		.loc 1 1275 29 is_stmt 1 discriminator 1 view .LVU5160
 15365              	.LBE835:
 15366              	.LBE842:
 15367              	.LBE845:
 15368              	.LBE867:
 15369              	# sieve_extend.c:1316: }
GAS LISTING /tmp/ccqpmidN.s 			page 414


1310:sieve_extend.c ****         printf("Show result set:\n");
1311:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1312:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1313:sieve_extend.c ****         delete_sieve(sieve_instance);
1314:sieve_extend.c ****         printf("\n");
1315:sieve_extend.c ****     }
1316:sieve_extend.c **** }
 15370              		.loc 1 1316 1 is_stmt 0 discriminator 1 view .LVU5161
 15371 0550 488B8424 		mov	rax, QWORD PTR 200[rsp]	# tmp535, D.7158
 15371      C8000000 
 15372 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp535, MEM[(<address-space-1> long unsigned int *)40B]
 15372      25280000 
 15372      00
 15373 0561 0F85DB08 		jne	.L1413	#,
 15373      0000
 15374              	# sieve_extend.c:1316: }
 15375              		.loc 1 1316 1 view .LVU5162
 15376 0567 488DA424 		lea	rsp, 216[rsp]	#,
 15376      D8000000 
 15377              		.cfi_remember_state
 15378              		.cfi_def_cfa_offset 56
 15379 056f 31C0     		xor	eax, eax	#
 15380 0571 5B       		pop	rbx	#
 15381              		.cfi_def_cfa_offset 48
 15382 0572 5D       		pop	rbp	#
 15383              		.cfi_def_cfa_offset 40
 15384 0573 415C     		pop	r12	#
 15385              		.cfi_def_cfa_offset 32
 15386 0575 415D     		pop	r13	#
 15387              		.cfi_def_cfa_offset 24
 15388 0577 415E     		pop	r14	#
 15389              		.cfi_def_cfa_offset 16
 15390 0579 415F     		pop	r15	#
 15391              		.cfi_def_cfa_offset 8
 15392 057b C3       		ret	
 15393              	.L1288:
 15394              		.cfi_restore_state
1263:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 15395              		.loc 1 1263 39 is_stmt 1 view .LVU5163
 15396              	.LVL943:
 15397              	.LBB868:
 15398              	.LBI868:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15399              		.loc 3 105 1 view .LVU5164
 15400              	.LBB869:
 15401              		.loc 3 107 3 view .LVU5165
 15402              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15403              		.loc 3 107 10 is_stmt 0 view .LVU5166
 15404 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 15404      000000
 15405 0583 BF010000 		mov	edi, 1	#,
 15405      00
 15406 0588 31C0     		xor	eax, eax	#
 15407 058a E8000000 		call	__printf_chk@PLT	#
 15407      00
 15408              	.LVL944:
 15409 058f E95BFCFF 		jmp	.L1273	#
GAS LISTING /tmp/ccqpmidN.s 			page 415


 15409      FF
 15410              	.LVL945:
 15411              	.L1277:
 15412              		.loc 3 107 10 view .LVU5167
 15413              	.LBE869:
 15414              	.LBE868:
 15415              	.LBB870:
1223:sieve_extend.c ****             }
 15416              		.loc 1 1223 17 is_stmt 1 view .LVU5168
 15417              	.LBB797:
 15418              	.LBI797:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15419              		.loc 3 98 1 view .LVU5169
 15420              	.LBB798:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15421              		.loc 3 100 3 view .LVU5170
 15422              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15423              		.loc 3 100 10 is_stmt 0 view .LVU5171
 15424 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 15425 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 15425      000000
 15426              	.LVL946:
 15427              	.L1399:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15428              		.loc 3 100 10 view .LVU5172
 15429              	.LBE798:
 15430              	.LBE797:
 15431              	.LBB799:
 15432              	.LBB800:
 15433 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 15433      000000
 15434 05a5 BE010000 		mov	esi, 1	#,
 15434      00
 15435 05aa 31C0     		xor	eax, eax	#
 15436 05ac E8000000 		call	__fprintf_chk@PLT	#
 15436      00
 15437              	.LVL947:
 15438              	.L1400:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15439              		.loc 3 100 10 view .LVU5173
 15440              	.LBE800:
 15441              	.LBE799:
1231:sieve_extend.c ****             }
 15442              		.loc 1 1231 80 is_stmt 1 view .LVU5174
 15443 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 15444 05b5 E8000000 		call	usage	#
 15444      00
 15445              	.LVL948:
 15446              	.L1412:
1231:sieve_extend.c ****             }
 15447              		.loc 1 1231 80 is_stmt 0 view .LVU5175
 15448              	.LBE870:
 15449              	.LBB871:
1310:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 15450              		.loc 1 1310 9 is_stmt 1 view .LVU5176
 15451              	.LBB872:
GAS LISTING /tmp/ccqpmidN.s 			page 416


 15452              	.LBI872:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15453              		.loc 3 105 1 view .LVU5177
 15454              	.LBB873:
 15455              		.loc 3 107 3 view .LVU5178
 15456              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15457              		.loc 3 107 10 is_stmt 0 view .LVU5179
 15458 05ba 488D3D00 		lea	rdi, .LC60[rip]	#,
 15458      000000
 15459 05c1 E8000000 		call	puts@PLT	#
 15459      00
 15460              	.LVL949:
 15461              		.loc 3 107 10 view .LVU5180
 15462              	.LBE873:
 15463              	.LBE872:
1311:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15464              		.loc 1 1311 9 is_stmt 1 view .LVU5181
 15465              	# sieve_extend.c:1311:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1311:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15466              		.loc 1 1311 46 is_stmt 0 view .LVU5182
 15467 05c6 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# option_maxFactor.50_91, option_maxFactor
 15467      90000000 
 15468 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.50_91
 15469 05d1 E8000000 		call	sieve	#
 15469      00
 15470              	.LVL950:
 15471              	# sieve_extend.c:1312:         show_primes(sieve_instance, option_showMaxFactor);
1312:sieve_extend.c ****         delete_sieve(sieve_instance);
 15472              		.loc 1 1312 9 view .LVU5183
 15473 05d6 488B9424 		mov	rdx, QWORD PTR 152[rsp]	#, option_showMaxFactor
 15473      98000000 
 15474              	# sieve_extend.c:1311:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1311:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 15475              		.loc 1 1311 46 view .LVU5184
 15476 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp498
 15477              	.LVL951:
1312:sieve_extend.c ****         delete_sieve(sieve_instance);
 15478              		.loc 1 1312 9 is_stmt 1 view .LVU5185
 15479 05e1 488D7008 		lea	rsi, 8[rax]	# tmp424,
 15480 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 15481 05e8 E8000000 		call	show_primes.isra.0	#
 15481      00
 15482              	.LVL952:
1313:sieve_extend.c ****         printf("\n");
 15483              		.loc 1 1313 9 view .LVU5186
 15484              	.LBB874:
 15485              	.LBI874:
 105:sieve_extend.c ****     free(sieve->bitarray);
 15486              		.loc 1 105 13 view .LVU5187
 15487              	.LBB875:
 106:sieve_extend.c ****     free(sieve);
 15488              		.loc 1 106 5 view .LVU5188
 15489 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_148->bitarray
 15490 05f0 E8000000 		call	free@PLT	#
 15490      00
 15491              	.LVL953:
 107:sieve_extend.c **** }
GAS LISTING /tmp/ccqpmidN.s 			page 417


 15492              		.loc 1 107 5 view .LVU5189
 15493 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 15494 05f8 E8000000 		call	free@PLT	#
 15494      00
 15495              	.LVL954:
 107:sieve_extend.c **** }
 15496              		.loc 1 107 5 is_stmt 0 view .LVU5190
 15497              	.LBE875:
 15498              	.LBE874:
1314:sieve_extend.c ****     }
 15499              		.loc 1 1314 9 is_stmt 1 view .LVU5191
 15500              	.LBB876:
 15501              	.LBI876:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15502              		.loc 3 105 1 view .LVU5192
 15503              	.LBB877:
 15504              		.loc 3 107 3 view .LVU5193
 15505              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15506              		.loc 3 107 10 is_stmt 0 view .LVU5194
 15507 05fd BF0A0000 		mov	edi, 10	#,
 15507      00
 15508 0602 E8000000 		call	putchar@PLT	#
 15508      00
 15509              	.LVL955:
 15510 0607 E944FFFF 		jmp	.L1330	#
 15510      FF
 15511              	.LVL956:
 15512              	.L1411:
 15513              		.loc 3 107 10 view .LVU5195
 15514              	.LBE877:
 15515              	.LBE876:
 15516              	.LBE871:
 15517              	.LBB878:
1306:sieve_extend.c ****     }
 15518              		.loc 1 1306 39 is_stmt 1 discriminator 1 view .LVU5196
 15519              	.LBB861:
 15520              	.LBI861:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15521              		.loc 3 105 1 discriminator 1 view .LVU5197
 15522              	.LBB862:
 15523              		.loc 3 107 3 discriminator 1 view .LVU5198
 15524              	.LBE862:
 15525              	.LBE861:
 15526              	# sieve_extend.c:1306:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1306:sieve_extend.c ****     }
 15527              		.loc 1 1306 39 is_stmt 0 discriminator 1 view .LVU5199
 15528 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp412, passes
 15528      C7
 15529 0611 4D85FF   		test	r15, r15	# passes
 15530 0614 C57B107C 		vmovsd	xmm15, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 15530      2420
 15531 061a 7918     		jns	.L1327	#,
 15532 061c 4C89F9   		mov	rcx, r15	# tmp414, passes
 15533 061f 4C89FE   		mov	rsi, r15	# tmp415, passes
 15534 0622 48D1E9   		shr	rcx	# tmp414
 15535 0625 83E601   		and	esi, 1	# tmp415,
 15536 0628 4809F1   		or	rcx, rsi	# tmp478, tmp415
GAS LISTING /tmp/ccqpmidN.s 			page 418


 15537 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp413, tmp478
 15537      F9
 15538 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp412, tmp413, tmp413
 15539              	.L1327:
1306:sieve_extend.c ****     }
 15540              		.loc 1 1306 39 discriminator 1 view .LVU5200
 15541 0634 C4C17B5E 		vdivsd	xmm1, xmm0, xmm15	# tmp416, tmp412, elapsed_time
 15541      CF
 15542              	# sieve_extend.c:1306:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1306:sieve_extend.c ****     }
 15543              		.loc 1 1306 95 discriminator 1 view .LVU5201
 15544 0639 4F8D04BF 		lea	r8, [r15+r15*4]	# tmp417,
 15545              	# sieve_extend.c:1306:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1306:sieve_extend.c ****     }
 15546              		.loc 1 1306 39 discriminator 1 view .LVU5202
 15547 063d 4D85C0   		test	r8, r8	# tmp417
 15548 0640 C4C1E32A 		vcvtsi2sd	xmm3, xmm3, r8	# tmp418, tmp417
 15548      D8
 15549 0645 7916     		jns	.L1329	#,
 15550 0647 4C89C0   		mov	rax, r8	# tmp420, tmp417
 15551 064a 4183E001 		and	r8d, 1	# tmp421,
 15552 064e 48D1E8   		shr	rax	# tmp420
 15553 0651 4C09C0   		or	rax, r8	# tmp479, tmp421
 15554 0654 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, rax	# tmp419, tmp479
 15554      D0
 15555 0659 C5EB58DA 		vaddsd	xmm3, xmm2, xmm2	# tmp418, tmp419, tmp419
 15556              	.L1329:
 15557 065d C4C1635E 		vdivsd	xmm0, xmm3, xmm15	# tmp422, tmp418, elapsed_time
 15557      C7
 15558              	.LBB864:
 15559              	.LBB863:
 15560              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15561              		.loc 3 107 10 discriminator 1 view .LVU5203
 15562 0662 488D3500 		lea	rsi, .LC59[rip]	#,
 15562      000000
 15563 0669 BF010000 		mov	edi, 1	#,
 15563      00
 15564 066e B8020000 		mov	eax, 2	#,
 15564      00
 15565 0673 E8000000 		call	__printf_chk@PLT	#
 15565      00
 15566              	.LVL957:
 15567 0678 E9C4FEFF 		jmp	.L1322	#
 15567      FF
 15568              	.LVL958:
 15569              	.L1410:
 15570              		.loc 3 107 10 discriminator 1 view .LVU5204
 15571              	.LBE863:
 15572              	.LBE864:
 15573              	.LBE878:
 15574              	.LBB879:
1284:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15575              		.loc 1 1284 9 is_stmt 1 view .LVU5205
 15576              	# sieve_extend.c:1284:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1284:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 15577              		.loc 1 1284 44 is_stmt 0 view .LVU5206
 15578 067d 448B9424 		mov	r10d, DWORD PTR 136[rsp]	# option_verboselevel.41_63, option_verboselevel
GAS LISTING /tmp/ccqpmidN.s 			page 419


 15578      88000000 
 15579 0685 4183E801 		sub	r8d, 1	#,
 15580 0689 4C8B9C24 		mov	r11, QWORD PTR 144[rsp]	# option_maxFactor.42_64, option_maxFactor
 15580      90000000 
 15581 0691 4183F802 		cmp	r8d, 2	# _209,
 15582 0695 44895424 		mov	DWORD PTR 112[rsp], r10d	# %sfp, option_verboselevel.41_63
 15582      70
 15583 069a 4C895C24 		mov	QWORD PTR 104[rsp], r11	# %sfp, option_maxFactor.42_64
 15583      68
 15584              	.LVL959:
 15585              	.LBB880:
 15586              	.LBI880:
1078:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 15587              		.loc 1 1078 27 is_stmt 1 view .LVU5207
 15588              	.LBB881:
1079:sieve_extend.c **** 
 15589              		.loc 1 1079 5 view .LVU5208
1081:sieve_extend.c ****     best_blocksize_bits = 0;
 15590              		.loc 1 1081 5 view .LVU5209
1082:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 15591              		.loc 1 1082 5 view .LVU5210
1083:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 15592              		.loc 1 1083 5 view .LVU5211
1084:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 15593              		.loc 1 1084 5 view .LVU5212
1085:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 15594              		.loc 1 1085 5 view .LVU5213
1086:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 15595              		.loc 1 1086 5 view .LVU5214
1087:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 15596              		.loc 1 1087 5 view .LVU5215
1088:sieve_extend.c ****     double sample_duration = default_sample_duration;
 15597              		.loc 1 1088 5 view .LVU5216
1089:sieve_extend.c **** 
 15598              		.loc 1 1089 5 view .LVU5217
1092:sieve_extend.c ****         case 1:
 15599              		.loc 1 1092 5 view .LVU5218
 15600 069f 0F866A06 		jbe	.L1331	#,
 15600      0000
 15601 06a5 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC26[rip]	# sample_duration,
 15601      00000000 
 15602 06ad 48C74424 		mov	QWORD PTR 80[rsp], 5	# %sfp,
 15602      50050000 
 15602      00
 15603 06b6 48C74424 		mov	QWORD PTR 88[rsp], 128	# %sfp,
 15603      58800000 
 15603      00
 15604 06bf 48C74424 		mov	QWORD PTR 120[rsp], 4	# %sfp,
 15604      78040000 
 15604      00
 15605 06c8 C5FB117C 		vmovsd	QWORD PTR 96[rsp], xmm7	# %sfp, sample_duration
 15605      2460
 15606              	.LVL960:
 15607              	.L1301:
1117:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15608              		.loc 1 1117 5 view .LVU5219
 15609              	# sieve_extend.c:1117:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
GAS LISTING /tmp/ccqpmidN.s 			page 420


1117:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15610              		.loc 1 1117 33 is_stmt 0 view .LVU5220
 15611 06ce B8400000 		mov	eax, 64	# tmp330,
 15611      00
 15612 06d3 31D2     		xor	edx, edx	# tmp329
 15613 06d5 48F77424 		div	QWORD PTR 120[rsp]	# %sfp
 15613      78
 15614              	# sieve_extend.c:1117:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1117:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15615              		.loc 1 1117 194 view .LVU5221
 15616 06da 31D2     		xor	edx, edx	# tmp337
 15617              	# sieve_extend.c:1119:     counter_t tuning_results=0;
1119:sieve_extend.c ****     counter_t tuning_result_index=0;
 15618              		.loc 1 1119 15 view .LVU5222
 15619 06dc 4531E4   		xor	r12d, r12d	# tuning_results
 15620              	.LBB882:
 15621              	# sieve_extend.c:1122:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15622              		.loc 1 1122 20 view .LVU5223
 15623 06df 4531FF   		xor	r15d, r15d	# smallstep_faster
 15624              	.LBE882:
 15625              	# sieve_extend.c:1117:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1117:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15626              		.loc 1 1117 83 view .LVU5224
 15627 06e2 488D7801 		lea	rdi, 1[rax]	# _223,
 15628              	.LVL961:
1118:sieve_extend.c ****     counter_t tuning_results=0;
 15629              		.loc 1 1118 5 is_stmt 1 view .LVU5225
 15630              	# sieve_extend.c:1117:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1117:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15631              		.loc 1 1117 194 is_stmt 0 view .LVU5226
 15632 06e6 B8001000 		mov	eax, 4096	# tmp338,
 15632      00
 15633 06eb 48F77424 		div	QWORD PTR 88[rsp]	# %sfp
 15633      58
 15634              	# sieve_extend.c:1118:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1118:sieve_extend.c ****     counter_t tuning_results=0;
 15635              		.loc 1 1118 41 view .LVU5227
 15636 06f0 480FAFC7 		imul	rax, rdi	# tmp343, _223
 15637 06f4 480FAFF8 		imul	rdi, rax	# tmp344, tmp343
 15638              	.LVL962:
1118:sieve_extend.c ****     counter_t tuning_results=0;
 15639              		.loc 1 1118 41 view .LVU5228
 15640 06f8 48C1E708 		sal	rdi, 8	# tmp345,
 15641 06fc E8000000 		call	malloc@PLT	#
 15641      00
 15642              	.LVL963:
1119:sieve_extend.c ****     counter_t tuning_result_index=0;
 15643              		.loc 1 1119 5 is_stmt 1 view .LVU5229
1120:sieve_extend.c ****     
 15644              		.loc 1 1120 5 view .LVU5230
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15645              		.loc 1 1122 5 view .LVU5231
 15646              	.LBB895:
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15647              		.loc 1 1122 10 view .LVU5232
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
GAS LISTING /tmp/ccqpmidN.s 			page 421


 15648              		.loc 1 1122 42 view .LVU5233
 15649              	.LBE895:
 15650              	# sieve_extend.c:1081:     double best_avg = 0;
1081:sieve_extend.c ****     best_blocksize_bits = 0;
 15651              		.loc 1 1081 12 is_stmt 0 view .LVU5234
 15652 0701 C5E957D2 		vxorpd	xmm2, xmm2, xmm2	# best_avg
 15653              	# sieve_extend.c:1084:     counter_t best_mediumstep_faster = 0;
1084:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 15654              		.loc 1 1084 15 view .LVU5235
 15655 0705 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 15655      48000000 
 15655      00
 15656              	# sieve_extend.c:1083:     counter_t best_smallstep_faster = 0;
1083:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 15657              		.loc 1 1083 15 view .LVU5236
 15658 070e 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 15658      40000000 
 15658      00
 15659              	# sieve_extend.c:1082:     best_blocksize_bits = 0;
1082:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 15660              		.loc 1 1082 25 view .LVU5237
 15661 0717 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 15661      38000000 
 15661      00
 15662 0720 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, tuning_result
 15662      30
 15663              	# sieve_extend.c:1081:     double best_avg = 0;
1081:sieve_extend.c ****     best_blocksize_bits = 0;
 15664              		.loc 1 1081 12 view .LVU5238
 15665 0725 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, best_avg
 15665      2420
 15666              	.LVL964:
 15667              	.L1303:
 15668              	.LBB896:
 15669              	.LBB883:
1123:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15670              		.loc 1 1123 62 is_stmt 1 view .LVU5239
 15671              	.LBB884:
 15672              	# sieve_extend.c:1124:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15673              		.loc 1 1124 28 is_stmt 0 view .LVU5240
 15674 072b 4D89FE   		mov	r14, r15	# mediumstep_faster, smallstep_faster
 15675              	.LVL965:
 15676 072e 6690     		.p2align 4
 15677              		.p2align 3
 15678              	.L1313:
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15679              		.loc 1 1124 46 is_stmt 1 view .LVU5241
 15680              	.LBB885:
 15681              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15682              		.loc 1 1125 32 is_stmt 0 view .LVU5242
 15683 0730 C7442474 		mov	DWORD PTR 116[rsp], 6	# %sfp,
 15683      06000000 
 15684              	.LBE885:
 15685              	# sieve_extend.c:1124:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
GAS LISTING /tmp/ccqpmidN.s 			page 422


 15686              		.loc 1 1124 28 view .LVU5243
 15687 0738 48C74424 		mov	QWORD PTR 40[rsp], 256	# %sfp,
 15687      28000100 
 15687      00
 15688              	.LVL966:
 15689 0741 66662E0F 		.p2align 4
 15689      1F840000 
 15689      0000000F 
 15689      1F4000
 15690              		.p2align 3
 15691              	.L1311:
 15692              	.LBB894:
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15693              		.loc 1 1125 45 is_stmt 1 view .LVU5244
 15694              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15695              		.loc 1 1125 130 is_stmt 0 view .LVU5245
 15696 0750 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# ivtmp.634, %sfp
 15696      28
 15697 0755 4F8D04A4 		lea	r8, [r12+r12*4]	# tmp368,
 15698 0759 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# tuning_result, %sfp
 15698      30
 15699 075e 4F8D1444 		lea	r10, [r12+r8*2]	# tmp370,
 15700              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15701              		.loc 1 1125 32 view .LVU5246
 15702 0762 31ED     		xor	ebp, ebp	# free_bits
 15703              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15704              		.loc 1 1125 130 view .LVU5247
 15705 0764 48C1E30D 		sal	rbx, 13	# ivtmp.634,
 15706 0768 4F8D2CD3 		lea	r13, [r11+r10*8]	# ivtmp.633,
 15707 076c EB3E     		jmp	.L1309	#
 15708              	.LVL967:
 15709 076e 6690     		.p2align 4,,7
 15710              		.p2align 3
 15711              	.L1306:
 15712              	.LBB886:
1141:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 15713              		.loc 1 1141 25 is_stmt 1 view .LVU5248
1142:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 15714              		.loc 1 1142 25 view .LVU5249
1143:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 15715              		.loc 1 1143 25 view .LVU5250
1144:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 15716              		.loc 1 1144 25 view .LVU5251
1145:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15717              		.loc 1 1145 25 view .LVU5252
 15718              	# sieve_extend.c:1145:                         if (option_verboselevel >=2) printf(".(>)blocksize_b
1145:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15719              		.loc 1 1145 28 is_stmt 0 view .LVU5253
 15720 0770 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 15720      01
 15721 0775 0F8FED00 		jg	.L1414	#,
 15721      0000
1145:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15722              		.loc 1 1145 28 view .LVU5254
GAS LISTING /tmp/ccqpmidN.s 			page 423


 15723 077b 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 15723      48
 15724 0780 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, smallstep_faster
 15724      40
 15725              	# sieve_extend.c:1141:                         best_avg = tuning_result[tuning_result_index].avg;
1141:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 15726              		.loc 1 1141 34 view .LVU5255
 15727 0785 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 15727      2420
 15728              	# sieve_extend.c:1142:                         best_blocksize_bits = blocksize_bits;
1142:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 15729              		.loc 1 1142 45 view .LVU5256
 15730 078b 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.634
 15730      38
 15731              	.LVL968:
 15732              	.L1304:
1156:sieve_extend.c ****                 }
 15733              		.loc 1 1156 21 is_stmt 1 view .LVU5257
1156:sieve_extend.c ****                 }
 15734              		.loc 1 1156 21 is_stmt 0 view .LVU5258
 15735              	.LBE886:
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15736              		.loc 1 1125 137 is_stmt 1 view .LVU5259
 15737              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15738              		.loc 1 1125 147 is_stmt 0 view .LVU5260
 15739 0790 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# freebits_steps, %sfp
 15739      58
 15740 0795 4983C558 		add	r13, 88	# ivtmp.633,
 15741 0799 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 15742              	.LVL969:
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15743              		.loc 1 1125 45 is_stmt 1 view .LVU5261
 15744 079c 4829D3   		sub	rbx, rdx	# ivtmp.634, freebits_steps
 15745              	.LVL970:
 15746              	# sieve_extend.c:1125:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1125:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15747              		.loc 1 1125 17 is_stmt 0 view .LVU5262
 15748 079f 4881FDFF 		cmp	rbp, 4095	# free_bits,
 15748      0F0000
 15749 07a6 0F872401 		ja	.L1305	#,
 15749      0000
 15750              	.LVL971:
 15751              	.L1309:
 15752              	.LBB893:
1126:sieve_extend.c **** 
 15753              		.loc 1 1126 21 is_stmt 1 view .LVU5263
1129:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 15754              		.loc 1 1129 21 view .LVU5264
 15755              	# sieve_extend.c:1130:                     tuning_result[tuning_result_index].maxints = maxints;
1130:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 15756              		.loc 1 1130 64 is_stmt 0 view .LVU5265
 15757 07ac 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# option_maxFactor.42_64, %sfp
 15757      68
 15758 07b1 4C89E6   		mov	rsi, r12	# tuning_results, tuning_results
 15759              	# sieve_extend.c:1132:                     tuning_result[tuning_result_index].sample_max = sample_m
1132:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
GAS LISTING /tmp/ccqpmidN.s 			page 424


 15760              		.loc 1 1132 67 view .LVU5266
 15761 07b4 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# sample_max, %sfp
 15761      50
 15762              	# sieve_extend.c:1129:                     tuning_results++;
1129:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 15763              		.loc 1 1129 35 view .LVU5267
 15764 07b9 4983C401 		add	r12, 1	# tuning_results,
 15765              	.LVL972:
1130:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 15766              		.loc 1 1130 21 is_stmt 1 view .LVU5268
 15767              	# sieve_extend.c:1133:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1133:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 15768              		.loc 1 1133 69 is_stmt 0 view .LVU5269
 15769 07bd 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# blocksize_kb, %sfp
 15769      28
 15770              	# sieve_extend.c:1130:                     tuning_result[tuning_result_index].maxints = maxints;
1130:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 15771              		.loc 1 1130 64 view .LVU5270
 15772 07c2 49897D00 		mov	QWORD PTR 0[r13], rdi	# MEM[base: _300, offset: 0B], option_maxFactor.42_64
1131:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 15773              		.loc 1 1131 21 is_stmt 1 view .LVU5271
 15774              	# sieve_extend.c:1138:                     tune_benchmark(tuning_result, tuning_result_index);
1138:sieve_extend.c **** 
 15775              		.loc 1 1138 21 is_stmt 0 view .LVU5272
 15776 07c6 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	#, %sfp
 15776      30
 15777              	# sieve_extend.c:1131:                     tuning_result[tuning_result_index].sample_duration = sam
1131:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 15778              		.loc 1 1131 72 view .LVU5273
 15779 07cb C5FB105C 		vmovsd	xmm3, QWORD PTR 96[rsp]	# sample_duration, %sfp
 15779      2460
 15780              	# sieve_extend.c:1132:                     tuning_result[tuning_result_index].sample_max = sample_m
1132:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15781              		.loc 1 1132 67 view .LVU5274
 15782 07d1 49894D30 		mov	QWORD PTR 48[r13], rcx	# MEM[base: _300, offset: 48B], sample_max
 15783              	# sieve_extend.c:1133:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1133:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 15784              		.loc 1 1133 69 view .LVU5275
 15785 07d5 4D894D10 		mov	QWORD PTR 16[r13], r9	# MEM[base: _300, offset: 16B], blocksize_kb
 15786              	# sieve_extend.c:1134:                     tuning_result[tuning_result_index].free_bits = free_bits
1134:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15787              		.loc 1 1134 66 view .LVU5276
 15788 07d9 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _300, offset: 24B], free_bits
 15789              	# sieve_extend.c:1135:                     tuning_result[tuning_result_index].blocksize_bits = bloc
1135:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15790              		.loc 1 1135 71 view .LVU5277
 15791 07dd 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _300, offset: 8B], ivtmp.634
 15792              	# sieve_extend.c:1136:                     tuning_result[tuning_result_index].smallstep_faster = sm
1136:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15793              		.loc 1 1136 73 view .LVU5278
 15794 07e1 4D897D20 		mov	QWORD PTR 32[r13], r15	# MEM[base: _300, offset: 32B], smallstep_faster
 15795              	# sieve_extend.c:1137:                     tuning_result[tuning_result_index].mediumstep_faster = m
1137:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 15796              		.loc 1 1137 74 view .LVU5279
 15797 07e5 4D897528 		mov	QWORD PTR 40[r13], r14	# MEM[base: _300, offset: 40B], mediumstep_faster
 15798              	# sieve_extend.c:1131:                     tuning_result[tuning_result_index].sample_duration = sam
1131:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
GAS LISTING /tmp/ccqpmidN.s 			page 425


 15799              		.loc 1 1131 72 view .LVU5280
 15800 07e9 C4C17B11 		vmovsd	QWORD PTR 56[r13], xmm3	# MEM[base: _300, offset: 56B], sample_duration
 15800      5D38
1132:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15801              		.loc 1 1132 21 is_stmt 1 view .LVU5281
1133:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 15802              		.loc 1 1133 21 view .LVU5282
1134:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15803              		.loc 1 1134 21 view .LVU5283
1135:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15804              		.loc 1 1135 21 view .LVU5284
1136:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15805              		.loc 1 1136 21 view .LVU5285
1137:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 15806              		.loc 1 1137 21 view .LVU5286
1138:sieve_extend.c **** 
 15807              		.loc 1 1138 21 view .LVU5287
 15808 07ef E8000000 		call	tune_benchmark	#
 15808      00
 15809              	.LVL973:
1140:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 15810              		.loc 1 1140 21 view .LVU5288
 15811              	# sieve_extend.c:1140:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1140:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 15812              		.loc 1 1140 60 is_stmt 0 view .LVU5289
 15813 07f4 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r13]	# _242, MEM[base: _300, offset: 80B]
 15813      5550
 15814              	# sieve_extend.c:1140:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1140:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 15815              		.loc 1 1140 24 view .LVU5290
 15816 07fa C5F92F54 		vcomisd	xmm2, QWORD PTR 32[rsp]	# _242, %sfp
 15816      2420
 15817 0800 0F876AFF 		ja	.L1306	#,
 15817      FFFF
 15818              	.L1307:
1151:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15819              		.loc 1 1151 21 is_stmt 1 view .LVU5291
 15820              	# sieve_extend.c:1151:                     if (option_verboselevel >= 3) printf("...blocksize_bits 
1151:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15821              		.loc 1 1151 24 is_stmt 0 view .LVU5292
 15822 0806 837C2470 		cmp	DWORD PTR 112[rsp], 2	# %sfp,
 15822      02
 15823 080b 7E83     		jle	.L1304	#,
1151:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15824              		.loc 1 1151 51 is_stmt 1 view .LVU5293
 15825              	.LVL974:
 15826              	.LBB887:
 15827              	.LBI887:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15828              		.loc 3 105 1 view .LVU5294
 15829              	.LBB888:
 15830              		.loc 3 107 3 view .LVU5295
 15831              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15832              		.loc 3 107 10 is_stmt 0 view .LVU5296
 15833 080d 4D8B5530 		mov	r10, QWORD PTR 48[r13]	# MEM[base: _300, offset: 48B], MEM[base: _300, offset: 48B]
 15834 0811 488D3500 		lea	rsi, .LC51[rip]	#,
 15834      000000
GAS LISTING /tmp/ccqpmidN.s 			page 426


 15835 0818 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r13]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 15835      4548
 15836 081e B8030000 		mov	eax, 3	#,
 15836      00
 15837 0823 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 15838 0827 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 15839 082b 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _300, offset: 48B]
 15839      10
 15840 0830 4D8B5D40 		mov	r11, QWORD PTR 64[r13]	# MEM[base: _300, offset: 64B], MEM[base: _300, offset: 64B]
 15841 0834 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _300, offset: 64B]
 15841      08
 15842 0839 498B7D28 		mov	rdi, QWORD PTR 40[r13]	# MEM[base: _300, offset: 40B], MEM[base: _300, offset: 40B]
 15843 083d 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[base: _300, offset: 40B]
 15844 0841 BF010000 		mov	edi, 1	#,
 15844      00
 15845 0846 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _300, offset: 32B]
 15846 084a 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _300, offset: 24B]
 15847 084e C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r13]	#, MEM[base: _300, offset: 80B]
 15847      5550
 15848 0854 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r13]	#, MEM[base: _300, offset: 56B]
 15848      4D38
 15849 085a E8000000 		call	__printf_chk@PLT	#
 15849      00
 15850              	.LVL975:
 15851 085f E92CFFFF 		jmp	.L1304	#
 15851      FF
 15852              	.LVL976:
 15853              		.p2align 4,,7
 15854 0864 0F1F4000 		.p2align 3
 15855              	.L1414:
 15856              		.loc 3 107 10 view .LVU5297
 15857              	.LBE888:
 15858              	.LBE887:
1145:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 15859              		.loc 1 1145 54 is_stmt 1 view .LVU5298
 15860              	.LBB889:
 15861              	.LBI889:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15862              		.loc 3 105 1 view .LVU5299
 15863              	.LBB890:
 15864              		.loc 3 107 3 view .LVU5300
 15865              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15866              		.loc 3 107 10 is_stmt 0 view .LVU5301
 15867 0868 498B7530 		mov	rsi, QWORD PTR 48[r13]	# MEM[base: _300, offset: 48B], MEM[base: _300, offset: 48B]
 15868 086c BF010000 		mov	edi, 1	#,
 15868      00
 15869 0871 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r13]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 15869      4548
 15870 0877 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 15871 087b 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 15872 087f 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _300, offset: 48B]
 15872      10
 15873 0884 488D3500 		lea	rsi, .LC50[rip]	#,
 15873      000000
 15874 088b 498B4540 		mov	rax, QWORD PTR 64[r13]	# MEM[base: _300, offset: 64B], MEM[base: _300, offset: 64B]
 15875 088f C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 15875      2420
GAS LISTING /tmp/ccqpmidN.s 			page 427


 15876 0895 48894424 		mov	QWORD PTR 8[rsp], rax	#, MEM[base: _300, offset: 64B]
 15876      08
 15877 089a B8030000 		mov	eax, 3	#,
 15877      00
 15878 089f 4D8B4528 		mov	r8, QWORD PTR 40[r13]	# MEM[base: _300, offset: 40B], MEM[base: _300, offset: 40B]
 15879 08a3 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _300, offset: 40B]
 15880 08a7 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _300, offset: 32B]
 15881 08ab 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _300, offset: 24B]
 15882 08af C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r13]	#, MEM[base: _300, offset: 56B]
 15882      4D38
 15883 08b5 E8000000 		call	__printf_chk@PLT	#
 15883      00
 15884              	.LVL977:
 15885              		.loc 3 107 10 view .LVU5302
 15886 08ba 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 15886      48
 15887 08bf 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, smallstep_faster
 15887      40
 15888              	.LBE890:
 15889              	.LBE889:
 15890              	# sieve_extend.c:1142:                         best_blocksize_bits = blocksize_bits;
1142:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 15891              		.loc 1 1142 45 view .LVU5303
 15892 08c4 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.634
 15892      38
 15893              	.LBB892:
 15894              	.LBB891:
 15895              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15896              		.loc 3 107 10 view .LVU5304
 15897 08c9 E938FFFF 		jmp	.L1307	#
 15897      FF
 15898              	.LVL978:
 15899 08ce 6690     		.p2align 4,,7
 15900              		.p2align 3
 15901              	.L1305:
 15902              		.loc 3 107 10 view .LVU5305
 15903              	.LBE891:
 15904              	.LBE892:
 15905              	.LBE893:
 15906              	.LBE894:
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15907              		.loc 1 1124 63 is_stmt 1 view .LVU5306
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15908              		.loc 1 1124 46 view .LVU5307
 15909              	# sieve_extend.c:1124:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15910              		.loc 1 1124 76 is_stmt 0 view .LVU5308
 15911 08d0 48D16C24 		shr	QWORD PTR 40[rsp]	# %sfp
 15911      28
 15912              	.LVL979:
 15913              	# sieve_extend.c:1124:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1124:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 15914              		.loc 1 1124 13 view .LVU5309
 15915 08d5 836C2474 		sub	DWORD PTR 116[rsp], 1	# %sfp,
 15915      01
 15916 08da 0F8570FE 		jne	.L1311	#,
 15916      FFFF
GAS LISTING /tmp/ccqpmidN.s 			page 428


 15917              	.LBE884:
1123:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15918              		.loc 1 1123 94 is_stmt 1 view .LVU5310
 15919              	# sieve_extend.c:1123:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1123:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15920              		.loc 1 1123 112 is_stmt 0 view .LVU5311
 15921 08e0 4C037424 		add	r14, QWORD PTR 120[rsp]	# mediumstep_faster, %sfp
 15921      78
 15922              	.LVL980:
1123:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15923              		.loc 1 1123 62 is_stmt 1 view .LVU5312
 15924              	# sieve_extend.c:1123:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1123:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15925              		.loc 1 1123 9 is_stmt 0 view .LVU5313
 15926 08e5 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 15927 08e9 0F8641FE 		jbe	.L1313	#,
 15927      FFFF
 15928              	.LBE883:
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15929              		.loc 1 1122 75 is_stmt 1 view .LVU5314
 15930              	# sieve_extend.c:1122:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15931              		.loc 1 1122 92 is_stmt 0 view .LVU5315
 15932 08ef 4C037C24 		add	r15, QWORD PTR 120[rsp]	# smallstep_faster, %sfp
 15932      78
 15933              	.LVL981:
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15934              		.loc 1 1122 42 is_stmt 1 view .LVU5316
 15935              	# sieve_extend.c:1122:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15936              		.loc 1 1122 5 is_stmt 0 view .LVU5317
 15937 08f4 4983FF20 		cmp	r15, 32	# smallstep_faster,
 15938 08f8 0F862DFE 		jbe	.L1303	#,
 15938      FFFF
 15939 08fe 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# tuning_result, %sfp
 15939      30
 15940              	.LVL982:
1122:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 15941              		.loc 1 1122 5 view .LVU5318
 15942              	.LBE896:
1161:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 15943              		.loc 1 1161 5 is_stmt 1 view .LVU5319
 15944              	# sieve_extend.c:1161:     if (option_verboselevel >= 2) {
1161:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 15945              		.loc 1 1161 8 is_stmt 0 view .LVU5320
 15946 0903 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 15946      01
 15947 0908 7E31     		jle	.L1314	#,
1162:sieve_extend.c ****         printf("Best options\n");
 15948              		.loc 1 1162 9 is_stmt 1 view .LVU5321
 15949              	.LVL983:
 15950              	.LBB897:
 15951              	.LBI897:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15952              		.loc 3 105 1 view .LVU5322
 15953              	.LBB898:
 15954              		.loc 3 107 3 view .LVU5323
GAS LISTING /tmp/ccqpmidN.s 			page 429


 15955              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15956              		.loc 3 107 10 is_stmt 0 view .LVU5324
 15957 090a 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 15957      48
 15958 090f BF010000 		mov	edi, 1	#,
 15958      00
 15959 0914 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 15959      40
 15960 0919 4C89E2   		mov	rdx, r12	#, tuning_results
 15961 091c 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 15961      38
 15962 0921 488D3500 		lea	rsi, .LC52[rip]	#,
 15962      000000
 15963 0928 31C0     		xor	eax, eax	#
 15964 092a E8000000 		call	__printf_chk@PLT	#
 15964      00
 15965              	.LVL984:
 15966              		.loc 3 107 10 view .LVU5325
 15967              	.LBE898:
 15968              	.LBE897:
1163:sieve_extend.c ****     }
 15969              		.loc 1 1163 9 is_stmt 1 view .LVU5326
 15970              	.LBB899:
 15971              	.LBI899:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15972              		.loc 3 105 1 view .LVU5327
 15973              	.LBB900:
 15974              		.loc 3 107 3 view .LVU5328
 15975              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15976              		.loc 3 107 10 is_stmt 0 view .LVU5329
 15977 092f 488D3D00 		lea	rdi, .LC53[rip]	#,
 15977      000000
 15978 0936 E8000000 		call	puts@PLT	#
 15978      00
 15979              	.LVL985:
 15980              	.L1314:
 15981              		.loc 3 107 10 view .LVU5330
 15982              	.LBE900:
 15983              	.LBE899:
 15984              	.LBB901:
 15985              	# sieve_extend.c:1177:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 15986              		.loc 1 1177 75 view .LVU5331
 15987 093b 4C8B7424 		mov	r14, QWORD PTR 80[rsp]	# sample_max, %sfp
 15987      50
 15988              	.LVL986:
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 15989              		.loc 1 1177 75 view .LVU5332
 15990              	.LBE901:
 15991              	.LBB906:
 15992              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15993              		.loc 1 1189 24 view .LVU5333
 15994 0940 4531ED   		xor	r13d, r13d	# step
 15995              	.LVL987:
 15996              	.L1319:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccqpmidN.s 			page 430


 15997              		.loc 1 1189 24 view .LVU5334
 15998              	.LBE906:
1166:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 15999              		.loc 1 1166 11 is_stmt 1 view .LVU5335
 16000 0943 4983FC04 		cmp	r12, 4	# tuning_results,
 16001 0947 0F864403 		jbe	.L1415	#,
 16001      0000
1167:sieve_extend.c ****         step++;
 16002              		.loc 1 1167 9 view .LVU5336
 16003 094d 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 16003      000000
 16004 0954 BA580000 		mov	edx, 88	#,
 16004      00
 16005 0959 4C89E6   		mov	rsi, r12	#, tuning_results
 16006 095c 4C89FF   		mov	rdi, r15	#, tuning_result
 16007 095f E8000000 		call	qsort@PLT	#
 16007      00
 16008              	.LVL988:
1168:sieve_extend.c ****         if (option_verboselevel >= 2) {
 16009              		.loc 1 1168 9 view .LVU5337
 16010              	# sieve_extend.c:1168:         step++;
1168:sieve_extend.c ****         if (option_verboselevel >= 2) {
 16011              		.loc 1 1168 13 is_stmt 0 view .LVU5338
 16012 0964 4983C501 		add	r13, 1	# step,
 16013              	.LVL989:
1169:sieve_extend.c ****             tuning_result_index = 0;
 16014              		.loc 1 1169 9 is_stmt 1 view .LVU5339
 16015              	# sieve_extend.c:1169:         if (option_verboselevel >= 2) {
1169:sieve_extend.c ****             tuning_result_index = 0;
 16016              		.loc 1 1169 12 is_stmt 0 view .LVU5340
 16017 0968 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 16017      01
 16018 096d 0F8FEB01 		jg	.L1315	#,
 16018      0000
 16019              	.L1317:
1187:sieve_extend.c **** 
 16020              		.loc 1 1187 9 is_stmt 1 view .LVU5341
 16021              	# sieve_extend.c:1187:         tuning_results = tuning_results / 2;
1187:sieve_extend.c **** 
 16022              		.loc 1 1187 24 is_stmt 0 view .LVU5342
 16023 0973 49D1EC   		shr	r12	# tuning_results
 16024              	.LVL990:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16025              		.loc 1 1189 9 is_stmt 1 view .LVU5343
 16026              	.LBB907:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16027              		.loc 1 1189 14 view .LVU5344
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16028              		.loc 1 1189 29 view .LVU5345
 16029              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16030              		.loc 1 1189 24 is_stmt 0 view .LVU5346
 16031 0976 31ED     		xor	ebp, ebp	# i
 16032 0978 4C89E0   		mov	rax, r12	# tmp451, tuning_results
 16033 097b 498D5F30 		lea	rbx, 48[r15]	# ivtmp.615,
 16034 097f 83E007   		and	eax, 7	# tmp451,
 16035 0982 0F84D200 		je	.L1316	#,
GAS LISTING /tmp/ccqpmidN.s 			page 431


 16035      0000
 16036 0988 4883F801 		cmp	rax, 1	# tmp451,
 16037 098c 0F84A900 		je	.L1374	#,
 16037      0000
 16038 0992 4883F802 		cmp	rax, 2	# tmp451,
 16039 0996 0F848900 		je	.L1375	#,
 16039      0000
 16040 099c 4883F803 		cmp	rax, 3	# tmp451,
 16041 09a0 746D     		je	.L1376	#,
 16042 09a2 4883F804 		cmp	rax, 4	# tmp451,
 16043 09a6 7451     		je	.L1377	#,
 16044 09a8 4883F805 		cmp	rax, 5	# tmp451,
 16045 09ac 7435     		je	.L1378	#,
 16046 09ae 4883F806 		cmp	rax, 6	# tmp451,
 16047 09b2 7419     		je	.L1379	#,
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16048              		.loc 1 1190 13 is_stmt 1 view .LVU5347
 16049 09b4 31F6     		xor	esi, esi	#
 16050 09b6 4C89FF   		mov	rdi, r15	#, tuning_result
 16051 09b9 E8000000 		call	tune_benchmark	#
 16051      00
 16052              	.LVL991:
1191:sieve_extend.c ****         }
 16053              		.loc 1 1191 13 view .LVU5348
 16054              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16055              		.loc 1 1189 48 is_stmt 0 view .LVU5349
 16056 09be BD010000 		mov	ebp, 1	# i,
 16056      00
 16057              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16058              		.loc 1 1191 41 view .LVU5350
 16059 09c3 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16060              		.loc 1 1189 47 is_stmt 1 view .LVU5351
 16061              	.LVL992:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16062              		.loc 1 1189 29 view .LVU5352
 16063 09c6 498D9F88 		lea	rbx, 136[r15]	# ivtmp.615,
 16063      000000
 16064              	.L1379:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16065              		.loc 1 1190 13 view .LVU5353
 16066 09cd 4889EE   		mov	rsi, rbp	#, i
 16067 09d0 4C89FF   		mov	rdi, r15	#, tuning_result
 16068 09d3 E8000000 		call	tune_benchmark	#
 16068      00
 16069              	.LVL993:
1191:sieve_extend.c ****         }
 16070              		.loc 1 1191 13 view .LVU5354
 16071              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16072              		.loc 1 1189 48 is_stmt 0 view .LVU5355
 16073 09d8 4883C501 		add	rbp, 1	# i,
 16074              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16075              		.loc 1 1191 41 view .LVU5356
GAS LISTING /tmp/ccqpmidN.s 			page 432


 16076 09dc 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16077              		.loc 1 1189 47 is_stmt 1 view .LVU5357
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16078              		.loc 1 1189 29 view .LVU5358
 16079 09df 4883C358 		add	rbx, 88	# ivtmp.615,
 16080              	.L1378:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16081              		.loc 1 1190 13 view .LVU5359
 16082 09e3 4889EE   		mov	rsi, rbp	#, i
 16083 09e6 4C89FF   		mov	rdi, r15	#, tuning_result
 16084 09e9 E8000000 		call	tune_benchmark	#
 16084      00
 16085              	.LVL994:
1191:sieve_extend.c ****         }
 16086              		.loc 1 1191 13 view .LVU5360
 16087              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16088              		.loc 1 1189 48 is_stmt 0 view .LVU5361
 16089 09ee 4883C501 		add	rbp, 1	# i,
 16090              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16091              		.loc 1 1191 41 view .LVU5362
 16092 09f2 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16093              		.loc 1 1189 47 is_stmt 1 view .LVU5363
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16094              		.loc 1 1189 29 view .LVU5364
 16095 09f5 4883C358 		add	rbx, 88	# ivtmp.615,
 16096              	.L1377:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16097              		.loc 1 1190 13 view .LVU5365
 16098 09f9 4889EE   		mov	rsi, rbp	#, i
 16099 09fc 4C89FF   		mov	rdi, r15	#, tuning_result
 16100 09ff E8000000 		call	tune_benchmark	#
 16100      00
 16101              	.LVL995:
1191:sieve_extend.c ****         }
 16102              		.loc 1 1191 13 view .LVU5366
 16103              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16104              		.loc 1 1189 48 is_stmt 0 view .LVU5367
 16105 0a04 4883C501 		add	rbp, 1	# i,
 16106              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16107              		.loc 1 1191 41 view .LVU5368
 16108 0a08 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16109              		.loc 1 1189 47 is_stmt 1 view .LVU5369
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16110              		.loc 1 1189 29 view .LVU5370
 16111 0a0b 4883C358 		add	rbx, 88	# ivtmp.615,
 16112              	.L1376:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16113              		.loc 1 1190 13 view .LVU5371
 16114 0a0f 4889EE   		mov	rsi, rbp	#, i
 16115 0a12 4C89FF   		mov	rdi, r15	#, tuning_result
GAS LISTING /tmp/ccqpmidN.s 			page 433


 16116 0a15 E8000000 		call	tune_benchmark	#
 16116      00
 16117              	.LVL996:
1191:sieve_extend.c ****         }
 16118              		.loc 1 1191 13 view .LVU5372
 16119              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16120              		.loc 1 1189 48 is_stmt 0 view .LVU5373
 16121 0a1a 4883C501 		add	rbp, 1	# i,
 16122              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16123              		.loc 1 1191 41 view .LVU5374
 16124 0a1e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16125              		.loc 1 1189 47 is_stmt 1 view .LVU5375
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16126              		.loc 1 1189 29 view .LVU5376
 16127 0a21 4883C358 		add	rbx, 88	# ivtmp.615,
 16128              	.L1375:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16129              		.loc 1 1190 13 view .LVU5377
 16130 0a25 4889EE   		mov	rsi, rbp	#, i
 16131 0a28 4C89FF   		mov	rdi, r15	#, tuning_result
 16132 0a2b E8000000 		call	tune_benchmark	#
 16132      00
 16133              	.LVL997:
1191:sieve_extend.c ****         }
 16134              		.loc 1 1191 13 view .LVU5378
 16135              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16136              		.loc 1 1189 48 is_stmt 0 view .LVU5379
 16137 0a30 4883C501 		add	rbp, 1	# i,
 16138              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16139              		.loc 1 1191 41 view .LVU5380
 16140 0a34 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16141              		.loc 1 1189 47 is_stmt 1 view .LVU5381
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16142              		.loc 1 1189 29 view .LVU5382
 16143 0a37 4883C358 		add	rbx, 88	# ivtmp.615,
 16144              	.L1374:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16145              		.loc 1 1190 13 view .LVU5383
 16146 0a3b 4889EE   		mov	rsi, rbp	#, i
 16147 0a3e 4C89FF   		mov	rdi, r15	#, tuning_result
 16148              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16149              		.loc 1 1189 48 is_stmt 0 view .LVU5384
 16150 0a41 4883C501 		add	rbp, 1	# i,
 16151              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16152              		.loc 1 1190 13 view .LVU5385
 16153 0a45 E8000000 		call	tune_benchmark	#
 16153      00
 16154              	.LVL998:
1191:sieve_extend.c ****         }
GAS LISTING /tmp/ccqpmidN.s 			page 434


 16155              		.loc 1 1191 13 is_stmt 1 view .LVU5386
 16156              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16157              		.loc 1 1191 41 is_stmt 0 view .LVU5387
 16158 0a4a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16159              		.loc 1 1189 47 is_stmt 1 view .LVU5388
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16160              		.loc 1 1189 29 view .LVU5389
 16161 0a4d 4883C358 		add	rbx, 88	# ivtmp.615,
 16162              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16163              		.loc 1 1189 9 is_stmt 0 view .LVU5390
 16164 0a51 4939EC   		cmp	r12, rbp	# tuning_results, i
 16165 0a54 0F84E9FE 		je	.L1319	#,
 16165      FFFF
 16166              	.L1316:
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16167              		.loc 1 1190 13 is_stmt 1 view .LVU5391
 16168 0a5a 4889EE   		mov	rsi, rbp	#, i
 16169 0a5d 4C89FF   		mov	rdi, r15	#, tuning_result
 16170 0a60 E8000000 		call	tune_benchmark	#
 16170      00
 16171              	.LVL999:
1191:sieve_extend.c ****         }
 16172              		.loc 1 1191 13 view .LVU5392
 16173 0a65 4C8D5358 		lea	r10, 88[rbx]	# tmp453,
 16174              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16175              		.loc 1 1191 41 is_stmt 0 view .LVU5393
 16176 0a69 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16177              		.loc 1 1189 47 is_stmt 1 view .LVU5394
 16178              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16179              		.loc 1 1189 48 is_stmt 0 view .LVU5395
 16180 0a6c 488D7501 		lea	rsi, 1[rbp]	# tmp452,
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16181              		.loc 1 1189 29 is_stmt 1 view .LVU5396
 16182              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16183              		.loc 1 1190 13 is_stmt 0 view .LVU5397
 16184 0a70 4C89FF   		mov	rdi, r15	#, tuning_result
 16185 0a73 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp453
 16185      20
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16186              		.loc 1 1190 13 is_stmt 1 view .LVU5398
 16187 0a78 E8000000 		call	tune_benchmark	#
 16187      00
 16188              	.LVL1000:
1191:sieve_extend.c ****         }
 16189              		.loc 1 1191 13 view .LVU5399
 16190              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16191              		.loc 1 1191 41 is_stmt 0 view .LVU5400
 16192 0a7d 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp453, %sfp
 16192      20
GAS LISTING /tmp/ccqpmidN.s 			page 435


 16193 0a82 488DBBB0 		lea	rdi, 176[rbx]	# ivtmp.615,
 16193      000000
 16194 0a89 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.615
 16194      20
 16195              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16196              		.loc 1 1189 48 view .LVU5401
 16197 0a8e 488D7502 		lea	rsi, 2[rbp]	# i,
 16198              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16199              		.loc 1 1190 13 view .LVU5402
 16200 0a92 4C89FF   		mov	rdi, r15	#, tuning_result
 16201              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16202              		.loc 1 1191 41 view .LVU5403
 16203 0a95 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16204              		.loc 1 1189 47 is_stmt 1 view .LVU5404
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16205              		.loc 1 1189 29 view .LVU5405
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16206              		.loc 1 1190 13 view .LVU5406
 16207 0a98 E8000000 		call	tune_benchmark	#
 16207      00
 16208              	.LVL1001:
1191:sieve_extend.c ****         }
 16209              		.loc 1 1191 13 view .LVU5407
 16210              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16211              		.loc 1 1191 41 is_stmt 0 view .LVU5408
 16212 0a9d 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16212      20
 16213 0aa2 4C8D8B08 		lea	r9, 264[rbx]	# ivtmp.615,
 16213      010000
 16214              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16215              		.loc 1 1189 48 view .LVU5409
 16216 0aa9 488D7503 		lea	rsi, 3[rbp]	# i,
 16217              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16218              		.loc 1 1190 13 view .LVU5410
 16219 0aad 4C89FF   		mov	rdi, r15	#, tuning_result
 16220 0ab0 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.615
 16220      20
 16221              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16222              		.loc 1 1191 41 view .LVU5411
 16223 0ab5 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16224              		.loc 1 1189 47 is_stmt 1 view .LVU5412
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16225              		.loc 1 1189 29 view .LVU5413
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16226              		.loc 1 1190 13 view .LVU5414
 16227 0ab8 E8000000 		call	tune_benchmark	#
 16227      00
 16228              	.LVL1002:
GAS LISTING /tmp/ccqpmidN.s 			page 436


1191:sieve_extend.c ****         }
 16229              		.loc 1 1191 13 view .LVU5415
 16230              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16231              		.loc 1 1191 41 is_stmt 0 view .LVU5416
 16232 0abd 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16232      20
 16233 0ac2 4C8D8360 		lea	r8, 352[rbx]	# ivtmp.615,
 16233      010000
 16234 0ac9 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.615
 16234      20
 16235              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16236              		.loc 1 1190 13 view .LVU5417
 16237 0ace 4C89FF   		mov	rdi, r15	#, tuning_result
 16238              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16239              		.loc 1 1191 41 view .LVU5418
 16240 0ad1 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16241              		.loc 1 1189 47 is_stmt 1 view .LVU5419
 16242              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16243              		.loc 1 1189 48 is_stmt 0 view .LVU5420
 16244 0ad4 488D7504 		lea	rsi, 4[rbp]	# i,
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16245              		.loc 1 1189 29 is_stmt 1 view .LVU5421
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16246              		.loc 1 1190 13 view .LVU5422
 16247 0ad8 E8000000 		call	tune_benchmark	#
 16247      00
 16248              	.LVL1003:
1191:sieve_extend.c ****         }
 16249              		.loc 1 1191 13 view .LVU5423
 16250              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16251              		.loc 1 1191 41 is_stmt 0 view .LVU5424
 16252 0add 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16252      20
 16253 0ae2 488D83B8 		lea	rax, 440[rbx]	# ivtmp.615,
 16253      010000
 16254              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16255              		.loc 1 1189 48 view .LVU5425
 16256 0ae9 488D7505 		lea	rsi, 5[rbp]	# i,
 16257              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16258              		.loc 1 1190 13 view .LVU5426
 16259 0aed 4C89FF   		mov	rdi, r15	#, tuning_result
 16260 0af0 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.615
 16260      20
 16261              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16262              		.loc 1 1191 41 view .LVU5427
 16263 0af5 4C0131   		add	QWORD PTR [rcx], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16264              		.loc 1 1189 47 is_stmt 1 view .LVU5428
GAS LISTING /tmp/ccqpmidN.s 			page 437


1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16265              		.loc 1 1189 29 view .LVU5429
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16266              		.loc 1 1190 13 view .LVU5430
 16267 0af8 E8000000 		call	tune_benchmark	#
 16267      00
 16268              	.LVL1004:
1191:sieve_extend.c ****         }
 16269              		.loc 1 1191 13 view .LVU5431
 16270              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16271              		.loc 1 1191 41 is_stmt 0 view .LVU5432
 16272 0afd 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16272      20
 16273 0b02 4C8D9B10 		lea	r11, 528[rbx]	# ivtmp.615,
 16273      020000
 16274              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16275              		.loc 1 1189 48 view .LVU5433
 16276 0b09 488D7506 		lea	rsi, 6[rbp]	# i,
 16277              	# sieve_extend.c:1190:             tune_benchmark(tuning_result, i);
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16278              		.loc 1 1190 13 view .LVU5434
 16279 0b0d 4C89FF   		mov	rdi, r15	#, tuning_result
 16280 0b10 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.615
 16280      20
 16281              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16282              		.loc 1 1191 41 view .LVU5435
 16283 0b15 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16284              		.loc 1 1189 47 is_stmt 1 view .LVU5436
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16285              		.loc 1 1189 29 view .LVU5437
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16286              		.loc 1 1190 13 view .LVU5438
 16287 0b18 E8000000 		call	tune_benchmark	#
 16287      00
 16288              	.LVL1005:
1191:sieve_extend.c ****         }
 16289              		.loc 1 1191 13 view .LVU5439
 16290              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16291              		.loc 1 1191 41 is_stmt 0 view .LVU5440
 16292 0b1d 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16292      20
 16293 0b22 488D9368 		lea	rdx, 616[rbx]	# ivtmp.615,
 16293      020000
 16294              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16295              		.loc 1 1189 48 view .LVU5441
 16296 0b29 488D7507 		lea	rsi, 7[rbp]	# i,
 16297 0b2d 4883C508 		add	rbp, 8	# i,
 16298 0b31 48895424 		mov	QWORD PTR 32[rsp], rdx	# %sfp, ivtmp.615
 16298      20
 16299 0b36 4881C3C0 		add	rbx, 704	# ivtmp.615,
 16299      020000
GAS LISTING /tmp/ccqpmidN.s 			page 438


 16300              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16301              		.loc 1 1191 41 view .LVU5442
 16302 0b3d 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16303              		.loc 1 1189 47 is_stmt 1 view .LVU5443
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16304              		.loc 1 1189 29 view .LVU5444
1190:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16305              		.loc 1 1190 13 view .LVU5445
 16306 0b40 4C89FF   		mov	rdi, r15	#, tuning_result
 16307 0b43 E8000000 		call	tune_benchmark	#
 16307      00
 16308              	.LVL1006:
1191:sieve_extend.c ****         }
 16309              		.loc 1 1191 13 view .LVU5446
 16310              	# sieve_extend.c:1191:             tuning_result[i].sample_max += sample_max;
1191:sieve_extend.c ****         }
 16311              		.loc 1 1191 41 is_stmt 0 view .LVU5447
 16312 0b48 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.615, %sfp
 16312      20
 16313 0b4d 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _77, offset: 0B], sample_max
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16314              		.loc 1 1189 47 is_stmt 1 view .LVU5448
 16315              	.LVL1007:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16316              		.loc 1 1189 29 view .LVU5449
 16317              	# sieve_extend.c:1189:         for (counter_t i=0; i<tuning_results; i++) {
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16318              		.loc 1 1189 9 is_stmt 0 view .LVU5450
 16319 0b50 4939EC   		cmp	r12, rbp	# tuning_results, i
 16320 0b53 0F8501FF 		jne	.L1316	#,
 16320      FFFF
 16321 0b59 E9E5FDFF 		jmp	.L1319	#
 16321      FF
 16322              	.LVL1008:
 16323              	.L1315:
1189:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16324              		.loc 1 1189 9 view .LVU5451
 16325              	.LBE907:
1170:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 16326              		.loc 1 1170 13 is_stmt 1 view .LVU5452
1171:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 16327              		.loc 1 1171 13 view .LVU5453
 16328              	.LBB908:
 16329              	.LBI908:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16330              		.loc 3 105 1 view .LVU5454
 16331              	.LBB909:
 16332              		.loc 3 107 3 view .LVU5455
 16333              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16334              		.loc 3 107 10 is_stmt 0 view .LVU5456
 16335 0b5e 4D8B5730 		mov	r10, QWORD PTR 48[r15]	# tuning_result_229->sample_max, tuning_result_229->sample_max
 16336 0b62 488D3500 		lea	rsi, .LC54[rip]	#,
 16336      000000
 16337 0b69 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# tuning_result_229->elapsed_time, tuning_result_229->elapsed_time
 16337      4748
GAS LISTING /tmp/ccqpmidN.s 			page 439


 16338 0b6f B8030000 		mov	eax, 3	#,
 16338      00
 16339 0b74 498B4F08 		mov	rcx, QWORD PTR 8[r15]	# tuning_result_229->blocksize_bits, tuning_result_229->blocksize_bits
 16340 0b78 4C895424 		mov	QWORD PTR 24[rsp], r10	#, tuning_result_229->sample_max
 16340      18
 16341 0b7d 4D8B5F40 		mov	r11, QWORD PTR 64[r15]	# tuning_result_229->passes, tuning_result_229->passes
 16342 0b81 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, tuning_result_229->passes
 16342      10
 16343 0b86 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# tuning_result_229->mediumstep_faster, tuning_result_229->mediumstep_f
 16344 0b8a 48897C24 		mov	QWORD PTR 8[rsp], rdi	#, tuning_result_229->mediumstep_faster
 16344      08
 16345 0b8f BF010000 		mov	edi, 1	#,
 16345      00
 16346 0b94 498B5720 		mov	rdx, QWORD PTR 32[r15]	# tuning_result_229->smallstep_faster, tuning_result_229->smallstep_fas
 16347 0b98 48891424 		mov	QWORD PTR [rsp], rdx	#, tuning_result_229->smallstep_faster
 16348 0b9c 4C89EA   		mov	rdx, r13	#, step
 16349 0b9f 4D8B4F18 		mov	r9, QWORD PTR 24[r15]	#, tuning_result_229->free_bits
 16350 0ba3 4D8B4710 		mov	r8, QWORD PTR 16[r15]	#, tuning_result_229->blocksize_kb
 16351 0ba7 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, tuning_result_229->avg
 16351      5750
 16352 0bad C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, tuning_result_229->sample_duration
 16352      4F38
 16353 0bb3 E8000000 		call	__printf_chk@PLT	#
 16353      00
 16354              	.LVL1009:
 16355              		.loc 3 107 10 view .LVU5457
 16356              	.LBE909:
 16357              	.LBE908:
1176:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 16358              		.loc 1 1176 13 is_stmt 1 view .LVU5458
 16359              	# sieve_extend.c:1176:             if (option_verboselevel >= 3) {
1176:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 16360              		.loc 1 1176 16 is_stmt 0 view .LVU5459
 16361 0bb8 837C2470 		cmp	DWORD PTR 112[rsp], 2	# %sfp,
 16361      02
 16362 0bbd 0F84B0FD 		je	.L1317	#,
 16362      FFFF
 16363 0bc3 498D5F08 		lea	rbx, 8[r15]	# ivtmp.621,
 16364              	.LBB910:
 16365              	# sieve_extend.c:1177:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16366              		.loc 1 1177 32 view .LVU5460
 16367 0bc7 31ED     		xor	ebp, ebp	# tuning_result_index
 16368              	.L1318:
 16369              	.LVL1010:
1178:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 16370              		.loc 1 1178 21 is_stmt 1 view .LVU5461
 16371              	.LBB902:
 16372              	.LBI902:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16373              		.loc 3 105 1 view .LVU5462
 16374              	.LBB903:
 16375              		.loc 3 107 3 view .LVU5463
 16376              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16377              		.loc 3 107 10 is_stmt 0 view .LVU5464
 16378 0bc9 4C8B4B28 		mov	r9, QWORD PTR 40[rbx]	# MEM[base: _60, offset: 40B], MEM[base: _60, offset: 40B]
 16379 0bcd BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccqpmidN.s 			page 440


 16379      00
 16380 0bd2 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _60, offset: 8B], MEM[base: _60, offset: 8B]
 16381 0bd6 B8030000 		mov	eax, 3	#,
 16381      00
 16382 0bdb C5FB1043 		vmovsd	xmm0, QWORD PTR 64[rbx]	# MEM[base: _60, offset: 64B], MEM[base: _60, offset: 64B]
 16382      40
 16383              	.LBE903:
 16384              	.LBE902:
 16385              	# sieve_extend.c:1177:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16386              		.loc 1 1177 118 view .LVU5465
 16387 0be0 4883C501 		add	rbp, 1	# tuning_result_index,
 16388              	.LVL1011:
 16389              	.LBB905:
 16390              	.LBB904:
 16391              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16392              		.loc 3 107 10 view .LVU5466
 16393 0be4 4C894C24 		mov	QWORD PTR 16[rsp], r9	#, MEM[base: _60, offset: 40B]
 16393      10
 16394 0be9 4883C358 		add	rbx, 88	# ivtmp.621,
 16395 0bed 488B73E0 		mov	rsi, QWORD PTR -32[rbx]	# MEM[base: _60, offset: 56B], MEM[base: _60, offset: 56B]
 16396 0bf1 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _60, offset: 56B]
 16396      08
 16397 0bf6 488D3500 		lea	rsi, .LC51[rip]	#,
 16397      000000
 16398 0bfd 4C8B43C8 		mov	r8, QWORD PTR -56[rbx]	# MEM[base: _60, offset: 32B], MEM[base: _60, offset: 32B]
 16399 0c01 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _60, offset: 32B]
 16400 0c05 4C8B4BC0 		mov	r9, QWORD PTR -64[rbx]	#, MEM[base: _60, offset: 24B]
 16401 0c09 4C8B43B8 		mov	r8, QWORD PTR -72[rbx]	#, MEM[base: _60, offset: 16B]
 16402 0c0d 488B53A8 		mov	rdx, QWORD PTR -88[rbx]	#, MEM[base: _60, offset: 0B]
 16403 0c11 C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _60, offset: 72B]
 16403      F0
 16404 0c16 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _60, offset: 48B]
 16404      D8
 16405 0c1b E8000000 		call	__printf_chk@PLT	#
 16405      00
 16406              	.LVL1012:
 16407              		.loc 3 107 10 view .LVU5467
 16408              	.LBE904:
 16409              	.LBE905:
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16410              		.loc 1 1177 99 is_stmt 1 view .LVU5468
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16411              		.loc 1 1177 55 view .LVU5469
 16412              	# sieve_extend.c:1177:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16413              		.loc 1 1177 75 is_stmt 0 view .LVU5470
 16414 0c20 4983FC0A 		cmp	r12, 10	# tuning_results,
 16415 0c24 B90A0000 		mov	ecx, 10	# tmp391,
 16415      00
 16416 0c29 490F46CC 		cmovbe	rcx, r12	# tuning_results,, tmp391
 16417              	# sieve_extend.c:1177:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16418              		.loc 1 1177 17 view .LVU5471
 16419 0c2d 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp391
 16420 0c30 7297     		jb	.L1318	#,
 16421 0c32 E93CFDFF 		jmp	.L1317	#
GAS LISTING /tmp/ccqpmidN.s 			page 441


 16421      FF
 16422              	.LVL1013:
 16423              	.L1409:
1177:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 16424              		.loc 1 1177 17 view .LVU5472
 16425              	.LBE910:
 16426              	.LBE881:
 16427              	.LBE880:
 16428              	.LBE879:
1279:sieve_extend.c ****     }
 16429              		.loc 1 1279 39 is_stmt 1 view .LVU5473
 16430              	.LBB923:
 16431              	.LBI923:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16432              		.loc 3 105 1 view .LVU5474
 16433              	.LBB924:
 16434              		.loc 3 107 3 view .LVU5475
 16435              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16436              		.loc 3 107 10 is_stmt 0 view .LVU5476
 16437 0c37 488D3D00 		lea	rdi, .LC48[rip]	#,
 16437      000000
 16438              	.LBE924:
 16439              	.LBE923:
 16440              	# sieve_extend.c:1282:     counter_t best_blocksize_bits = default_blocksize;
1282:sieve_extend.c ****     if (option_tunelevel) {
 16441              		.loc 1 1282 15 view .LVU5477
 16442 0c3e 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 16442      0300
 16443              	.LBB926:
 16444              	.LBB925:
 16445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16446              		.loc 3 107 10 view .LVU5478
 16447 0c44 E8000000 		call	puts@PLT	#
 16447      00
 16448              	.LVL1014:
 16449              		.loc 3 107 10 view .LVU5479
 16450              	.LBE925:
 16451              	.LBE926:
1282:sieve_extend.c ****     if (option_tunelevel) {
 16452              		.loc 1 1282 5 is_stmt 1 view .LVU5480
1283:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16453              		.loc 1 1283 5 view .LVU5481
 16454              	# sieve_extend.c:1283:     if (option_tunelevel) {
1283:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16455              		.loc 1 1283 9 is_stmt 0 view .LVU5482
 16456 0c49 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# option_tunelevel.40_62, option_tunelevel
 16456      8C000000 
 16457              	# sieve_extend.c:1283:     if (option_tunelevel) {
1283:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 16458              		.loc 1 1283 8 view .LVU5483
 16459 0c51 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 16460 0c54 0F852E01 		jne	.L1416	#,
 16460      0000
 16461              	.LVL1015:
 16462              	.L1298:
 16463              	.LBB927:
1292:sieve_extend.c ****         counter_t passes = 0;
GAS LISTING /tmp/ccqpmidN.s 			page 442


 16464              		.loc 1 1292 9 is_stmt 1 view .LVU5484
 16465              	# sieve_extend.c:1292:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1292:sieve_extend.c ****         counter_t passes = 0;
 16466              		.loc 1 1292 12 is_stmt 0 view .LVU5485
 16467 0c5a 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 16467      00000000 
 16468 0c62 0F8E86F7 		jle	.L1323	#,
 16468      FFFF
1292:sieve_extend.c ****         counter_t passes = 0;
 16469              		.loc 1 1292 39 is_stmt 1 discriminator 1 view .LVU5486
 16470              	.LVL1016:
 16471              	.LBB865:
 16472              	.LBI865:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16473              		.loc 3 105 1 discriminator 1 view .LVU5487
 16474              	.LBB866:
 16475              		.loc 3 107 3 discriminator 1 view .LVU5488
 16476              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16477              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5489
 16478 0c68 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 16478      000000
 16479 0c6f 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 16480 0c72 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 16480      000000
 16481 0c79 488D3500 		lea	rsi, .LC56[rip]	#,
 16481      000000
 16482 0c80 BF010000 		mov	edi, 1	#,
 16482      00
 16483 0c85 31C0     		xor	eax, eax	#
 16484 0c87 E8000000 		call	__printf_chk@PLT	#
 16484      00
 16485              	.LVL1017:
 16486 0c8c E95DF7FF 		jmp	.L1323	#
 16486      FF
 16487              	.LVL1018:
 16488              	.L1415:
 16489              		.loc 3 107 10 discriminator 1 view .LVU5490
 16490              	.LBE866:
 16491              	.LBE865:
 16492              	.LBE927:
 16493              	.LBB928:
 16494              	.LBB920:
 16495              	.LBB917:
1195:sieve_extend.c ****     if (option_verboselevel >= 1) {
 16496              		.loc 1 1195 5 is_stmt 1 view .LVU5491
 16497              	# sieve_extend.c:1195:     tuning_result_type best_result = tuning_result[0];
1195:sieve_extend.c ****     if (option_verboselevel >= 1) {
 16498              		.loc 1 1195 24 is_stmt 0 view .LVU5492
 16499 0c91 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 16500              	.LVL1019:
 16501              	# sieve_extend.c:1196:     if (option_verboselevel >= 1) {
1196:sieve_extend.c ****         tuning_result_index = 0;
 16502              		.loc 1 1196 8 view .LVU5493
 16503 0c95 837C2470 		cmp	DWORD PTR 112[rsp], 0	# %sfp,
 16503      00
 16504              	# sieve_extend.c:1195:     tuning_result_type best_result = tuning_result[0];
1195:sieve_extend.c ****     if (option_verboselevel >= 1) {
GAS LISTING /tmp/ccqpmidN.s 			page 443


 16505              		.loc 1 1195 24 view .LVU5494
 16506 0c9a 498B6F20 		mov	rbp, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 16507 0c9e 498B5F28 		mov	rbx, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
1196:sieve_extend.c ****         tuning_result_index = 0;
 16508              		.loc 1 1196 5 is_stmt 1 view .LVU5495
 16509              	# sieve_extend.c:1196:     if (option_verboselevel >= 1) {
1196:sieve_extend.c ****         tuning_result_index = 0;
 16510              		.loc 1 1196 8 is_stmt 0 view .LVU5496
 16511 0ca2 7E47     		jle	.L1321	#,
1197:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 16512              		.loc 1 1197 9 is_stmt 1 view .LVU5497
 16513              	.LVL1020:
1198:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 16514              		.loc 1 1198 9 view .LVU5498
 16515              	.LBB911:
 16516              	.LBI911:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16517              		.loc 3 105 1 view .LVU5499
 16518              	.LBB912:
 16519              		.loc 3 107 3 view .LVU5500
 16520              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16521              		.loc 3 107 10 is_stmt 0 view .LVU5501
 16522 0ca4 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 48B], MEM[(struct
 16523 0ca8 4989E8   		mov	r8, rbp	#, best_result$smallstep_faster
 16524 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 72B], MEM[(s
 16524      4748
 16525 0cb1 488D3500 		lea	rsi, .LC55[rip]	#,
 16525      000000
 16526 0cb8 498B4F18 		mov	rcx, QWORD PTR 24[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 24B], MEM[(struc
 16527 0cbc BF010000 		mov	edi, 1	#,
 16527      00
 16528 0cc1 498B5710 		mov	rdx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 16B], MEM[(struc
 16529 0cc5 B8030000 		mov	eax, 3	#,
 16529      00
 16530 0cca 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_229 + 48B]
 16530      08
 16531              	.LVL1021:
 16532              		.loc 3 107 10 view .LVU5502
 16533 0ccf 4989D9   		mov	r9, rbx	#, best_result$mediumstep_faster
 16534 0cd2 4D8B6740 		mov	r12, QWORD PTR 64[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 64B], MEM[(struc
 16535              	.LVL1022:
 16536              		.loc 3 107 10 view .LVU5503
 16537 0cd6 4C892424 		mov	QWORD PTR [rsp], r12	#, MEM[(struct tuning_result_type *)tuning_result_229 + 64B]
 16538 0cda C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 80B]
 16538      5750
 16539 0ce0 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 56B]
 16539      4F38
 16540 0ce6 E8000000 		call	__printf_chk@PLT	#
 16540      00
 16541              	.LVL1023:
 16542              	.L1321:
 16543              		.loc 3 107 10 view .LVU5504
 16544              	.LBE912:
 16545              	.LBE911:
1205:sieve_extend.c ****     return best_result;
 16546              		.loc 1 1205 5 is_stmt 1 view .LVU5505
 16547 0ceb 4C89FF   		mov	rdi, r15	#, tuning_result
GAS LISTING /tmp/ccqpmidN.s 			page 444


 16548 0cee E8000000 		call	free@PLT	#
 16548      00
 16549              	.LVL1024:
1206:sieve_extend.c **** }
 16550              		.loc 1 1206 5 view .LVU5506
1206:sieve_extend.c **** }
 16551              		.loc 1 1206 5 is_stmt 0 view .LVU5507
 16552              	.LBE917:
 16553              	.LBE920:
1285:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16554              		.loc 1 1285 9 is_stmt 1 view .LVU5508
 16555              	# sieve_extend.c:1285:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1285:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16556              		.loc 1 1285 33 is_stmt 0 view .LVU5509
 16557 0cf3 48892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rbp	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 16557      000000
1286:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16558              		.loc 1 1286 9 is_stmt 1 view .LVU5510
 16559              	.LBE928:
 16560              	# sieve_extend.c:1291:     if (best_blocksize_bits > 0) {
1291:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16561              		.loc 1 1291 8 is_stmt 0 view .LVU5511
 16562 0cfa 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 16563              	.LBB929:
 16564              	# sieve_extend.c:1286:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1286:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16565              		.loc 1 1286 34 view .LVU5512
 16566 0cfd 48891D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbx	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 16566      000000
1287:sieve_extend.c ****     }
 16567              		.loc 1 1287 9 is_stmt 1 view .LVU5513
 16568              	.LVL1025:
1287:sieve_extend.c ****     }
 16569              		.loc 1 1287 9 is_stmt 0 view .LVU5514
 16570              	.LBE929:
1290:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 16571              		.loc 1 1290 5 is_stmt 1 view .LVU5515
1291:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16572              		.loc 1 1291 5 view .LVU5516
 16573              	# sieve_extend.c:1291:     if (best_blocksize_bits > 0) {
1291:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16574              		.loc 1 1291 8 is_stmt 0 view .LVU5517
 16575 0d04 0F8437F8 		je	.L1322	#,
 16575      FFFF
 16576 0d0a E94BFFFF 		jmp	.L1298	#
 16576      FF
 16577              	.LVL1026:
 16578              	.L1331:
1291:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16579              		.loc 1 1291 8 view .LVU5518
 16580 0d0f 488D3D00 		lea	rdi, CSWTCH.105[rip]	# tmp321,
 16580      000000
 16581 0d16 4C8D0D00 		lea	r9, CSWTCH.106[rip]	# tmp323,
 16581      000000
 16582 0d1d 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.105
 16583 0d21 488D2D00 		lea	rbp, CSWTCH.107[rip]	# tmp325,
 16583      000000
GAS LISTING /tmp/ccqpmidN.s 			page 445


 16584              	.LVL1027:
1291:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 16585              		.loc 1 1291 8 view .LVU5519
 16586 0d28 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# freebits_steps, CSWTCH.106
 16587 0d2c C4A17B10 		vmovsd	xmm0, QWORD PTR 0[rbp+r8*8]	# sample_duration, CSWTCH.107
 16587      44C500
 16588 0d33 48894C24 		mov	QWORD PTR 120[rsp], rcx	# %sfp, smallstep_faster_steps
 16588      78
 16589 0d38 4C896424 		mov	QWORD PTR 88[rsp], r12	# %sfp, freebits_steps
 16589      58
 16590              	.LBB930:
 16591              	# sieve_extend.c:1218:     for (int arg=1; arg < argc; arg++) {
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16592              		.loc 1 1218 14 view .LVU5520
 16593 0d3d 48C74424 		mov	QWORD PTR 80[rsp], 4	# %sfp,
 16593      50040000 
 16593      00
 16594 0d46 C5FB1144 		vmovsd	QWORD PTR 96[rsp], xmm0	# %sfp, sample_duration
 16594      2460
 16595              	.L1299:
 16596              	.LVL1028:
1218:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16597              		.loc 1 1218 14 view .LVU5521
 16598              	.LBE930:
 16599              	.LBB931:
 16600              	.LBB921:
 16601              	.LBB918:
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16602              		.loc 1 1116 5 is_stmt 1 view .LVU5522
 16603              	# sieve_extend.c:1116:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16604              		.loc 1 1116 8 is_stmt 0 view .LVU5523
 16605 0d4c 448B7C24 		mov	r15d, DWORD PTR 112[rsp]	# option_verboselevel.41_63, %sfp
 16605      70
 16606              	.LVL1029:
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16607              		.loc 1 1116 8 view .LVU5524
 16608 0d51 4585FF   		test	r15d, r15d	# option_verboselevel.41_63
 16609 0d54 4489FB   		mov	ebx, r15d	# option_verboselevel.41_63, option_verboselevel.41_63
 16610              	.LVL1030:
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16611              		.loc 1 1116 8 view .LVU5525
 16612 0d57 0F8E71F9 		jle	.L1301	#,
 16612      FFFF
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16613              		.loc 1 1116 35 is_stmt 1 view .LVU5526
 16614              	.LVL1031:
 16615              	.LBB913:
 16616              	.LBI913:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16617              		.loc 3 105 1 view .LVU5527
 16618              	.LBB914:
 16619              		.loc 3 107 3 view .LVU5528
 16620              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16621              		.loc 3 107 10 is_stmt 0 view .LVU5529
 16622 0d5d 31C0     		xor	eax, eax	#
 16623 0d5f 488D3500 		lea	rsi, .LC49[rip]	#,
GAS LISTING /tmp/ccqpmidN.s 			page 446


 16623      000000
 16624 0d66 BF010000 		mov	edi, 1	#,
 16624      00
 16625 0d6b E8000000 		call	__printf_chk@PLT	#
 16625      00
 16626              	.LVL1032:
 16627              		.loc 3 107 10 view .LVU5530
 16628              	.LBE914:
 16629              	.LBE913:
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16630              		.loc 1 1116 56 is_stmt 1 view .LVU5531
 16631              	# sieve_extend.c:1116:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16632              		.loc 1 1116 59 is_stmt 0 view .LVU5532
 16633 0d70 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 16634 0d73 0F8455F9 		je	.L1301	#,
 16634      FFFF
1116:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16635              		.loc 1 1116 86 is_stmt 1 view .LVU5533
 16636              	.LVL1033:
 16637              	.LBB915:
 16638              	.LBI915:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16639              		.loc 3 105 1 view .LVU5534
 16640              	.LBB916:
 16641              		.loc 3 107 3 view .LVU5535
 16642              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16643              		.loc 3 107 10 is_stmt 0 view .LVU5536
 16644 0d79 BF0A0000 		mov	edi, 10	#,
 16644      00
 16645 0d7e E8000000 		call	putchar@PLT	#
 16645      00
 16646              	.LVL1034:
 16647 0d83 E946F9FF 		jmp	.L1301	#
 16647      FF
 16648              	.LVL1035:
 16649              	.L1416:
 16650              		.loc 3 107 10 view .LVU5537
 16651              	.LBE916:
 16652              	.LBE915:
 16653              	.LBE918:
 16654              	.LBE921:
1284:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 16655              		.loc 1 1284 9 is_stmt 1 view .LVU5538
 16656              	# sieve_extend.c:1284:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1284:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 16657              		.loc 1 1284 44 is_stmt 0 view .LVU5539
 16658 0d88 8B942488 		mov	edx, DWORD PTR 136[rsp]	# option_verboselevel.41_63, option_verboselevel
 16658      000000
 16659 0d8f 4183E801 		sub	r8d, 1	#,
 16660 0d93 488BB424 		mov	rsi, QWORD PTR 144[rsp]	# option_maxFactor.42_64, option_maxFactor
 16660      90000000 
 16661 0d9b 4183F802 		cmp	r8d, 2	# _209,
 16662 0d9f 89542470 		mov	DWORD PTR 112[rsp], edx	# %sfp, option_verboselevel.41_63
 16663 0da3 48897424 		mov	QWORD PTR 104[rsp], rsi	# %sfp, option_maxFactor.42_64
 16663      68
 16664              	.LVL1036:
GAS LISTING /tmp/ccqpmidN.s 			page 447


 16665              	.LBB922:
1078:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 16666              		.loc 1 1078 27 is_stmt 1 view .LVU5540
 16667              	.LBB919:
1079:sieve_extend.c **** 
 16668              		.loc 1 1079 5 view .LVU5541
1081:sieve_extend.c ****     best_blocksize_bits = 0;
 16669              		.loc 1 1081 5 view .LVU5542
1082:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 16670              		.loc 1 1082 5 view .LVU5543
1083:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 16671              		.loc 1 1083 5 view .LVU5544
1084:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 16672              		.loc 1 1084 5 view .LVU5545
1085:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 16673              		.loc 1 1085 5 view .LVU5546
1086:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 16674              		.loc 1 1086 5 view .LVU5547
1087:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 16675              		.loc 1 1087 5 view .LVU5548
1088:sieve_extend.c ****     double sample_duration = default_sample_duration;
 16676              		.loc 1 1088 5 view .LVU5549
1089:sieve_extend.c **** 
 16677              		.loc 1 1089 5 view .LVU5550
1092:sieve_extend.c ****         case 1:
 16678              		.loc 1 1092 5 view .LVU5551
 16679 0da8 0F8661FF 		jbe	.L1331	#,
 16679      FFFF
 16680 0dae C5FB100D 		vmovsd	xmm1, QWORD PTR .LC26[rip]	# sample_duration,
 16680      00000000 
 16681 0db6 48C74424 		mov	QWORD PTR 80[rsp], 5	# %sfp,
 16681      50050000 
 16681      00
 16682 0dbf 48C74424 		mov	QWORD PTR 88[rsp], 128	# %sfp,
 16682      58800000 
 16682      00
 16683 0dc8 48C74424 		mov	QWORD PTR 120[rsp], 4	# %sfp,
 16683      78040000 
 16683      00
 16684 0dd1 C5FB114C 		vmovsd	QWORD PTR 96[rsp], xmm1	# %sfp, sample_duration
 16684      2460
 16685 0dd7 E970FFFF 		jmp	.L1299	#
 16685      FF
 16686              	.LVL1037:
 16687              	.L1402:
1092:sieve_extend.c ****         case 1:
 16688              		.loc 1 1092 5 is_stmt 0 view .LVU5552
 16689              	.LBE919:
 16690              	.LBE922:
 16691              	.LBE931:
 16692              	.LBB932:
1221:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 16693              		.loc 1 1221 34 is_stmt 1 discriminator 1 view .LVU5553
 16694              	.LBB802:
 16695              	.LBI802:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16696              		.loc 3 98 1 discriminator 1 view .LVU5554
GAS LISTING /tmp/ccqpmidN.s 			page 448


 16697              	.LBB803:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16698              		.loc 3 100 3 discriminator 1 view .LVU5555
 16699              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16700              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5556
 16701 0ddc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16701      000000
 16702 0de3 BA1B0000 		mov	edx, 27	#,
 16702      00
 16703 0de8 BE010000 		mov	esi, 1	#,
 16703      00
 16704 0ded 488D3D00 		lea	rdi, .LC30[rip]	#,
 16704      000000
 16705 0df4 E8000000 		call	fwrite@PLT	#
 16705      00
 16706              	.LVL1038:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16707              		.loc 3 100 10 discriminator 1 view .LVU5557
 16708              	.LBE803:
 16709              	.LBE802:
1221:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 16710              		.loc 1 1221 83 is_stmt 1 discriminator 1 view .LVU5558
 16711 0df9 E9B3F7FF 		jmp	.L1400	#
 16711      FF
 16712              	.L1282:
1231:sieve_extend.c ****             }
 16713              		.loc 1 1231 17 view .LVU5559
 16714              	.LVL1039:
 16715              	.LBB804:
 16716              	.LBI799:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16717              		.loc 3 98 1 view .LVU5560
 16718              	.LBB801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16719              		.loc 3 100 3 view .LVU5561
 16720              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16721              		.loc 3 100 10 is_stmt 0 view .LVU5562
 16722 0dfe 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 16723 0e01 488D1500 		lea	rdx, .LC37[rip]	#,
 16723      000000
 16724 0e08 E991F7FF 		jmp	.L1399	#
 16724      FF
 16725              	.LVL1040:
 16726              	.L1286:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16727              		.loc 3 100 10 view .LVU5563
 16728              	.LBE801:
 16729              	.LBE804:
1238:sieve_extend.c ****             }
 16730              		.loc 1 1238 17 is_stmt 1 view .LVU5564
 16731              	.LBB805:
 16732              	.LBI805:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16733              		.loc 3 98 1 view .LVU5565
 16734              	.LBB806:
GAS LISTING /tmp/ccqpmidN.s 			page 449


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16735              		.loc 3 100 3 view .LVU5566
 16736              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16737              		.loc 3 100 10 is_stmt 0 view .LVU5567
 16738 0e0d 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 16739 0e10 488D1500 		lea	rdx, .LC42[rip]	#,
 16739      000000
 16740 0e17 E982F7FF 		jmp	.L1399	#
 16740      FF
 16741              	.LVL1041:
 16742              	.L1405:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16743              		.loc 3 100 10 view .LVU5568
 16744              	.LBE806:
 16745              	.LBE805:
1229:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16746              		.loc 1 1229 34 is_stmt 1 discriminator 1 view .LVU5569
 16747              	.LBB807:
 16748              	.LBI807:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16749              		.loc 3 98 1 discriminator 1 view .LVU5570
 16750              	.LBB808:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16751              		.loc 3 100 3 discriminator 1 view .LVU5571
 16752              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16753              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5572
 16754 0e1c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16754      000000
 16755 0e23 488D3D00 		lea	rdi, .LC36[rip]	#,
 16755      000000
 16756 0e2a BA180000 		mov	edx, 24	#,
 16756      00
 16757 0e2f BE010000 		mov	esi, 1	#,
 16757      00
 16758 0e34 E8000000 		call	fwrite@PLT	#
 16758      00
 16759              	.LVL1042:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16760              		.loc 3 100 10 discriminator 1 view .LVU5573
 16761              	.LBE808:
 16762              	.LBE807:
1229:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16763              		.loc 1 1229 80 is_stmt 1 discriminator 1 view .LVU5574
 16764 0e39 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 16765 0e3d E8000000 		call	usage	#
 16765      00
 16766              	.LVL1043:
 16767              	.L1413:
1229:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16768              		.loc 1 1229 80 is_stmt 0 discriminator 1 view .LVU5575
 16769              	.LBE932:
 16770              	# sieve_extend.c:1316: }
 16771              		.loc 1 1316 1 view .LVU5576
 16772 0e42 E8000000 		call	__stack_chk_fail@PLT	#
 16772      00
GAS LISTING /tmp/ccqpmidN.s 			page 450


 16773              	.LVL1044:
 16774              	.L1408:
 16775              	.LBB933:
1236:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16776              		.loc 1 1236 34 is_stmt 1 discriminator 1 view .LVU5577
 16777              	.LBB809:
 16778              	.LBI809:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16779              		.loc 3 98 1 discriminator 1 view .LVU5578
 16780              	.LBB810:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16781              		.loc 3 100 3 discriminator 1 view .LVU5579
 16782              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16783              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5580
 16784 0e47 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16784      000000
 16785 0e4e 488D3D00 		lea	rdi, .LC40[rip]	#,
 16785      000000
 16786 0e55 BA1A0000 		mov	edx, 26	#,
 16786      00
 16787 0e5a BE010000 		mov	esi, 1	#,
 16787      00
 16788 0e5f E8000000 		call	fwrite@PLT	#
 16788      00
 16789              	.LVL1045:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16790              		.loc 3 100 10 discriminator 1 view .LVU5581
 16791              	.LBE810:
 16792              	.LBE809:
1236:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16793              		.loc 1 1236 82 is_stmt 1 discriminator 1 view .LVU5582
 16794 0e64 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 16795 0e68 E8000000 		call	usage	#
 16795      00
 16796              	.LVL1046:
 16797              	.LBE933:
 16798              		.cfi_endproc
 16799              	.LFE84:
 16801              		.section	.rodata
 16802              		.align 16
 16805              	CSWTCH.107:
 16806 0000 9A999999 		.long	2576980378
 16807 0004 9999B93F 		.long	1069128089
 16808 0008 9A999999 		.long	2576980378
 16809 000c 9999C93F 		.long	1070176665
 16810 0010 9A999999 		.long	2576980378
 16811 0014 9999D93F 		.long	1071225241
 16812 0018 00000000 		.align 16
 16812      00000000 
 16815              	CSWTCH.106:
 16816 0020 00080000 		.quad	2048
 16816      00000000 
 16817 0028 00040000 		.quad	1024
 16817      00000000 
 16818 0030 40000000 		.quad	64
 16818      00000000 
GAS LISTING /tmp/ccqpmidN.s 			page 451


 16819 0038 00000000 		.align 16
 16819      00000000 
 16822              	CSWTCH.105:
 16823 0040 10000000 		.quad	16
 16823      00000000 
 16824 0048 08000000 		.quad	8
 16824      00000000 
 16825 0050 04000000 		.quad	4
 16825      00000000 
 16826              		.globl	debug_hitpoint
 16827              		.bss
 16828              		.align 32
 16831              	debug_hitpoint:
 16832 0000 00000000 		.zero	40
 16832      00000000 
 16832      00000000 
 16832      00000000 
 16832      00000000 
 16833              		.globl	global_MEDIUMSTEP_FASTER
 16834              		.data
 16835              		.align 8
 16838              	global_MEDIUMSTEP_FASTER:
 16839 0000 40000000 		.quad	64
 16839      00000000 
 16840              		.globl	global_SMALLSTEP_FASTER
 16841              		.align 8
 16844              	global_SMALLSTEP_FASTER:
 16845 0008 40000000 		.quad	64
 16845      00000000 
 16846              		.section	.rodata.cst32,"aM",@progbits,32
 16847              		.align 32
 16848              	.LC0:
 16849 0000 00000000 		.quad	0
 16849      00000000 
 16850 0008 01000000 		.quad	1
 16850      00000000 
 16851 0010 02000000 		.quad	2
 16851      00000000 
 16852 0018 03000000 		.quad	3
 16852      00000000 
 16853              		.align 32
 16854              	.LC1:
 16855 0020 08000000 		.quad	8
 16855      00000000 
 16856 0028 08000000 		.quad	8
 16856      00000000 
 16857 0030 08000000 		.quad	8
 16857      00000000 
 16858 0038 08000000 		.quad	8
 16858      00000000 
 16859              		.align 32
 16860              	.LC2:
 16861 0040 04000000 		.quad	4
 16861      00000000 
 16862 0048 04000000 		.quad	4
 16862      00000000 
 16863 0050 04000000 		.quad	4
GAS LISTING /tmp/ccqpmidN.s 			page 452


 16863      00000000 
 16864 0058 04000000 		.quad	4
 16864      00000000 
 16865              		.align 32
 16866              	.LC3:
 16867 0060 3F000000 		.long	63
 16868 0064 3F000000 		.long	63
 16869 0068 3F000000 		.long	63
 16870 006c 3F000000 		.long	63
 16871 0070 3F000000 		.long	63
 16872 0074 3F000000 		.long	63
 16873 0078 3F000000 		.long	63
 16874 007c 3F000000 		.long	63
 16875              		.section	.rodata.cst8,"aM",@progbits,8
 16876              		.align 8
 16877              	.LC7:
 16878 0000 00000000 		.long	0
 16879 0004 0000F87F 		.long	2146959360
 16880              		.align 8
 16881              	.LC8:
 16882 0008 95D626E8 		.long	3894859413
 16883 000c 0B2E113E 		.long	1041313291
 16884              		.align 8
 16885              	.LC26:
 16886 0010 9A999999 		.long	2576980378
 16887 0014 9999B93F 		.long	1069128089
 16888              		.align 8
 16889              	.LC57:
 16890 0018 00000000 		.long	0
 16891 001c 00001440 		.long	1075052544
 16892              		.text
 16893              	.Letext0:
 16894              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 16895              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 16896              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 16897              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 16898              		.file 8 "/usr/include/stdio.h"
 16899              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 16900              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 16901              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 16902              		.file 12 "/usr/include/stdint.h"
 16903              		.file 13 "/usr/include/time.h"
 16904              		.file 14 "/usr/include/math.h"
 16905              		.file 15 "/usr/include/stdlib.h"
 16906              		.file 16 "<built-in>"
 40731              		.section	.note.gnu.property,"a"
 40732              		.align 8
 40733 0000 04000000 		.long	 1f - 0f
 40734 0004 10000000 		.long	 4f - 1f
 40735 0008 05000000 		.long	 5
 40736              	0:
 40737 000c 474E5500 		.string	 "GNU"
 40738              	1:
 40739              		.align 8
 40740 0010 020000C0 		.long	 0xc0000002
 40741 0014 04000000 		.long	 3f - 2f
 40742              	2:
GAS LISTING /tmp/ccqpmidN.s 			page 453


 40743 0018 03000000 		.long	 0x3
 40744              	3:
 40745 001c 00000000 		.align 8
 40746              	4:
GAS LISTING /tmp/ccqpmidN.s 			page 454


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccqpmidN.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccqpmidN.s:16848  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccqpmidN.s:16854  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccqpmidN.s:16860  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccqpmidN.s:16866  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccqpmidN.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccqpmidN.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/ccqpmidN.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/ccqpmidN.s:4284   .text:0000000000001a50 extendSieve_aligned
     /tmp/ccqpmidN.s:5173   .text:0000000000001fd0 extendSieve_shiftleft
     /tmp/ccqpmidN.s:8141   .text:00000000000032d0 show_primes.isra.0
     /tmp/ccqpmidN.s:8136   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccqpmidN.s:8134   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccqpmidN.s:8548   .text:0000000000003470 sieve
     /tmp/ccqpmidN.s:11532  .text:0000000000004140 tune_benchmark
     /tmp/ccqpmidN.s:16838  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccqpmidN.s:16844  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccqpmidN.s:16877  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccqpmidN.s:16881  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccqpmidN.s:11733  .text:0000000000004270 shiftvec
     /tmp/ccqpmidN.s:12895  .text:0000000000004630 validatePrimeCount
     /tmp/ccqpmidN.s:12876  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccqpmidN.s:12882  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccqpmidN.s:12886  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccqpmidN.s:12879  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccqpmidN.s:12889  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccqpmidN.s:14149  .text:0000000000004dc0 usage
     /tmp/ccqpmidN.s:14109  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccqpmidN.s:14112  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccqpmidN.s:14116  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccqpmidN.s:14119  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccqpmidN.s:14122  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccqpmidN.s:14125  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccqpmidN.s:14128  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccqpmidN.s:14131  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccqpmidN.s:14134  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccqpmidN.s:14137  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccqpmidN.s:14140  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccqpmidN.s:14143  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccqpmidN.s:14477  .text.startup:0000000000000000 main
     /tmp/ccqpmidN.s:14388  .rodata.str1.1:000000000000004a .LC28
     /tmp/ccqpmidN.s:14390  .rodata.str1.1:0000000000000051 .LC29
     /tmp/ccqpmidN.s:14394  .rodata.str1.1:0000000000000077 .LC31
     /tmp/ccqpmidN.s:14401  .rodata.str1.1:000000000000007a .LC33
     /tmp/ccqpmidN.s:14403  .rodata.str1.1:0000000000000093 .LC34
     /tmp/ccqpmidN.s:14405  .rodata.str1.1:000000000000009b .LC35
     /tmp/ccqpmidN.s:14414  .rodata.str1.1:00000000000000bb .LC38
     /tmp/ccqpmidN.s:14433  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccqpmidN.s:14431  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccqpmidN.s:14416  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/ccqpmidN.s:14420  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/ccqpmidN.s:14427  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/ccqpmidN.s:14429  .rodata.str1.1:0000000000000110 .LC44
     /tmp/ccqpmidN.s:14435  .rodata.str1.1:000000000000014a .LC47
     /tmp/ccqpmidN.s:16889  .rodata.cst8:0000000000000018 .LC57
GAS LISTING /tmp/ccqpmidN.s 			page 455


     /tmp/ccqpmidN.s:14465  .rodata.str1.8:00000000000006c8 .LC58
     /tmp/ccqpmidN.s:14386  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccqpmidN.s:14398  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/ccqpmidN.s:14471  .rodata.str1.1:000000000000017b .LC60
     /tmp/ccqpmidN.s:14468  .rodata.str1.8:0000000000000710 .LC59
     /tmp/ccqpmidN.s:16885  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccqpmidN.s:14446  .rodata.str1.8:00000000000004a8 .LC51
     /tmp/ccqpmidN.s:14443  .rodata.str1.8:0000000000000420 .LC50
     /tmp/ccqpmidN.s:14449  .rodata.str1.8:0000000000000530 .LC52
     /tmp/ccqpmidN.s:14452  .rodata.str1.1:000000000000016e .LC53
     /tmp/ccqpmidN.s:14456  .rodata.str1.8:0000000000000588 .LC54
     /tmp/ccqpmidN.s:14437  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccqpmidN.s:14462  .rodata.str1.8:0000000000000690 .LC56
     /tmp/ccqpmidN.s:14459  .rodata.str1.8:0000000000000618 .LC55
     /tmp/ccqpmidN.s:16822  .rodata:0000000000000040 CSWTCH.105
     /tmp/ccqpmidN.s:16815  .rodata:0000000000000020 CSWTCH.106
     /tmp/ccqpmidN.s:16805  .rodata:0000000000000000 CSWTCH.107
     /tmp/ccqpmidN.s:14439  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccqpmidN.s:14392  .rodata.str1.1:000000000000005b .LC30
     /tmp/ccqpmidN.s:14411  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/ccqpmidN.s:14424  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/ccqpmidN.s:14407  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/ccqpmidN.s:14418  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/ccqpmidN.s:16831  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
