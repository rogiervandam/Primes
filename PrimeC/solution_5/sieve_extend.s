GAS LISTING /tmp/ccRwwoRx.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccRwwoRx.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB68:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // SIeve alogithm by Rogier van Dam
   2:sieve_extend.c **** 
   3:sieve_extend.c **** // TODO; Check why vector is not working with range > 1000000
   4:sieve_extend.c **** 
   5:sieve_extend.c **** #include <stdio.h>
   6:sieve_extend.c **** #include <stdlib.h>
   7:sieve_extend.c **** #include <stdint.h>
   8:sieve_extend.c **** #include <time.h>
   9:sieve_extend.c **** #include <math.h>
  10:sieve_extend.c **** #include <string.h>
  11:sieve_extend.c **** 
  12:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  13:sieve_extend.c **** #define option_runonce 0
  14:sieve_extend.c **** #define debug if (option_runonce)
  15:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  16:sieve_extend.c **** 
  17:sieve_extend.c **** // defaults
  18:sieve_extend.c **** #define default_sieve_limit 1000000
  19:sieve_extend.c **** #define default_blocksize (32*1024*8)
  20:sieve_extend.c **** #define default_sieve_duration 5
  21:sieve_extend.c **** #define default_sample_duration 0.1
  22:sieve_extend.c **** #define default_sample_max 5
  23:sieve_extend.c **** #define default_verbose_level 2
  24:sieve_extend.c **** #define default_tune_level 0
  25:sieve_extend.c **** #define default_check_level 1
  26:sieve_extend.c **** #define default_show_primes_on_error 100
GAS LISTING /tmp/ccRwwoRx.s 			page 3


  27:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  28:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  29:sieve_extend.c **** 
  30:sieve_extend.c **** // helper functions
  31:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  32:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  33:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  34:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  35:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  36:sieve_extend.c **** 
  37:sieve_extend.c **** // types
  38:sieve_extend.c **** #define bitword_t uint64_t
  39:sieve_extend.c **** #define TYPE uint64_t
  40:sieve_extend.c **** #define counter_t TYPE
  41:sieve_extend.c **** #define bitshift_t TYPE
  42:sieve_extend.c **** 
  43:sieve_extend.c **** // masks and mask helpers
  44:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  45:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  46:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  47:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  48:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  49:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  50:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  51:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  52:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  53:sieve_extend.c **** 
  54:sieve_extend.c **** // types (II) - calculated
  55:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  56:sieve_extend.c **** 
  57:sieve_extend.c **** // globals for tuning
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  61:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  62:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  63:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  64:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  65:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  66:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  67:sieve_extend.c **** 
  68:sieve_extend.c **** // Patterns based on types
  69:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  70:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  71:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  72:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  73:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  74:sieve_extend.c **** 
  75:sieve_extend.c **** // helpder functions for word/vector indexing
  76:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  77:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  78:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  79:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  80:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  81:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  82:sieve_extend.c **** 
  83:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
GAS LISTING /tmp/ccRwwoRx.s 			page 4


  84:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  85:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  86:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  87:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  88:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  89:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  90:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  91:sieve_extend.c **** 
  92:sieve_extend.c **** struct sieve_t {
  93:sieve_extend.c ****     bitword_t* bitstorage;
  94:sieve_extend.c ****     counter_t  bits;
  95:sieve_extend.c ****     counter_t  size;
  96:sieve_extend.c **** };
  97:sieve_extend.c **** 
  98:sieve_extend.c **** #include "debugtools.h"
  99:sieve_extend.c **** 
 100:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 101:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 102:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 103:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 104:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 107:sieve_extend.c ****     sieve->size     = size;
 108:sieve_extend.c ****     return sieve;
 109:sieve_extend.c **** }
 110:sieve_extend.c **** 
 111:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 112:sieve_extend.c ****     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 117:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitstorage, register counter_t index) {
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 123:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitstorage, register counter_t index) {
 124:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 125:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 126:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 127:sieve_extend.c ****    index += distance;
 128:sieve_extend.c ****    distance += index_bit;
 129:sieve_extend.c **** 
 130:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 131:sieve_extend.c ****        index_word++;
 132:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 133:sieve_extend.c ****        index += distance;
 134:sieve_extend.c ****    }
 135:sieve_extend.c **** 
 136:sieve_extend.c ****    return index;
 137:sieve_extend.c **** }
 138:sieve_extend.c **** 
 139:sieve_extend.c **** 
 140:sieve_extend.c **** static inline void applyMask_array(bitword_t* __restrict bitstorage, const counter_t step, const co
GAS LISTING /tmp/ccRwwoRx.s 			page 5


 141:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 142:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 143:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 144:sieve_extend.c ****     register const counter_t range_stop_word = wordindex(range_stop);
 145:sieve_extend.c ****     const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (cou
 146:sieve_extend.c **** 
 147:sieve_extend.c ****     #pragma GCC ivdep
 148:sieve_extend.c ****     for (;index_word < loop_stop_word;  index_word += step_4) {
 149:sieve_extend.c ****         bitstorage[index_word         ] |= mask;
 150:sieve_extend.c ****         bitstorage[index_word + step  ] |= mask;
 151:sieve_extend.c ****         bitstorage[index_word + step_2] |= mask;
 152:sieve_extend.c ****         bitstorage[index_word + step_3] |= mask;
 153:sieve_extend.c ****     }
 154:sieve_extend.c **** 
 155:sieve_extend.c ****     #pragma GCC ivdep
 156:sieve_extend.c ****     while (index_word < range_stop_word) {
 157:sieve_extend.c ****         bitstorage[index_word] |= mask;
 158:sieve_extend.c ****         index_word += step;
 159:sieve_extend.c ****     }
 160:sieve_extend.c **** 
 161:sieve_extend.c ****     if (index_word == wordindex(range_stop)) {
 162:sieve_extend.c ****         bitstorage[wordindex(range_stop)] |= (mask & chopmask(range_stop)); //only needed if blocks
 163:sieve_extend.c ****         
 164:sieve_extend.c ****     }
 165:sieve_extend.c **** }
 166:sieve_extend.c **** 
 167:sieve_extend.c **** static inline void applyMask_ptr(bitword_t* __restrict bitstorage, const counter_t step, const coun
 168:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 171:sieve_extend.c **** 
 172:sieve_extend.c ****    //#pragma GCC unroll 10
 173:sieve_extend.c ****    #pragma GCC ivdep
 174:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 181:sieve_extend.c **** 
 182:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_stop_word)];
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 186:sieve_extend.c **** 
 187:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 190:sieve_extend.c **** }
 191:sieve_extend.c **** 
 192:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 193:sieve_extend.c **** static inline void setBitsTrue_smallStep(bitword_t* __restrict bitstorage, const counter_t range_st
 194:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 195:sieve_extend.c **** 
 196:sieve_extend.c ****     // build the pattern in a word
 197:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
GAS LISTING /tmp/ccRwwoRx.s 			page 6


 198:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 201:sieve_extend.c ****     // initialize loop variables and stop if this is it
 202:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 203:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 204:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 205:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 206:sieve_extend.c ****        return;
 207:sieve_extend.c ****     }
 208:sieve_extend.c ****   
 209:sieve_extend.c ****     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 210:sieve_extend.c **** 
 211:sieve_extend.c ****    // from now on, we are before range_stop_word
 212:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 213:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 214:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 215:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 216:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 217:sieve_extend.c ****    #pragma GCC ivdep
 218:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 221:sieve_extend.c ****    }
 222:sieve_extend.c ****    bitstorage[range_stop_word] &= chopmask(range_stop);
 223:sieve_extend.c **** }
 224:sieve_extend.c **** 
 225:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 226:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 227:sieve_extend.c **** // This is especially true for small steps over long ranges
 228:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 229:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitstorage, const counter_t range_start, 
 230:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 231:sieve_extend.c **** 
 232:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 233:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 234:sieve_extend.c **** 
 235:sieve_extend.c ****         #pragma GCC ivdep
 236:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 238:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 239:sieve_extend.c ****             #pragma GCC ivdep
 240:sieve_extend.c ****             do {
 241:sieve_extend.c ****                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 245:sieve_extend.c ****             //     mask |= markmask(index);
 246:sieve_extend.c ****             bitstorage[index_word] |= mask;
 247:sieve_extend.c ****         }
 248:sieve_extend.c ****     }
 249:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 250:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 251:sieve_extend.c ****         
 252:sieve_extend.c ****         #pragma GCC ivdep
 253:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccRwwoRx.s 			page 7


 255:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 256:sieve_extend.c ****             #pragma GCC ivdep
 257:sieve_extend.c ****             do {
 258:sieve_extend.c ****                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 262:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 263:sieve_extend.c ****             //     mask |= markmask(index);
 264:sieve_extend.c ****             #if __APPLE__
 265:sieve_extend.c ****                applyMask_array(bitstorage, step, range_stop, mask, index_word);
 266:sieve_extend.c ****             #else
 267:sieve_extend.c ****                applyMask_ptr(bitstorage, step, range_stop, mask, index_word);
 268:sieve_extend.c ****             #endif
 269:sieve_extend.c ****         }
 270:sieve_extend.c ****     }
 271:sieve_extend.c **** }
 272:sieve_extend.c **** 
 273:sieve_extend.c **** // large steps in small ranges (< WORD_SIZE * step) mean the mask is unique
 274:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitstorage, const counter_t range_s
 275:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 276:sieve_extend.c ****     
 277:sieve_extend.c ****     //#pragma GCC unroll 16
 278:sieve_extend.c ****     #pragma GCC ivdep
 279:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 280:sieve_extend.c ****         bitstorage[wordindex(index)] |= markmask(index);
 281:sieve_extend.c ****     }
 282:sieve_extend.c **** }
 283:sieve_extend.c **** 
 284:sieve_extend.c **** static inline void setBitsTrue_largeSteps_unroll(bitword_t* __restrict bitstorage, const counter_t 
 285:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 286:sieve_extend.c ****     
 287:sieve_extend.c ****     counter_t loop_iterations = (range_stop - range_start) / step;
 288:sieve_extend.c ****     //#pragma GCC unroll 16
 289:sieve_extend.c ****     #pragma GCC ivdep 
 290:sieve_extend.c ****     for (register counter_t i = 0; i <= loop_iterations; i++) {
 291:sieve_extend.c ****          bitstorage[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 292:sieve_extend.c ****     }
 293:sieve_extend.c **** }
 294:sieve_extend.c **** 
 295:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 296:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitstorage, counter_t index1, counter_t index2, const count
 297:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 298:sieve_extend.c **** 
 299:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 300:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 301:sieve_extend.c ****     
 302:sieve_extend.c ****     while (1) {
 303:sieve_extend.c ****         if (index1_word == index2_word) {
 304:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 305:sieve_extend.c ****             counter_t index_word = index1_word;
 306:sieve_extend.c ****             do {
 307:sieve_extend.c ****                 mask |= markmask(index1);
 308:sieve_extend.c ****                 index1 += step1;
 309:sieve_extend.c ****                 index1_word = wordindex(index1);
 310:sieve_extend.c ****             } while (index1_word == index_word);
 311:sieve_extend.c ****             do {
GAS LISTING /tmp/ccRwwoRx.s 			page 8


 312:sieve_extend.c ****                 mask |= markmask(index2);
 313:sieve_extend.c ****                 index2 += step2;
 314:sieve_extend.c ****                 index2_word = wordindex(index2);
 315:sieve_extend.c ****             } while (index2_word == index_word);
 316:sieve_extend.c ****             bitstorage[index_word] |= mask;
 317:sieve_extend.c ****         }
 318:sieve_extend.c **** 
 319:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 320:sieve_extend.c ****         if (index2 > range_stop) {
 321:sieve_extend.c ****             while (index1 <= range_stop) {
 322:sieve_extend.c ****                 bitstorage[wordindex(index1)] |= markmask(index1);
 323:sieve_extend.c ****                 index1 += step1;
 324:sieve_extend.c ****             }
 325:sieve_extend.c ****             return;
 326:sieve_extend.c ****         }
 327:sieve_extend.c **** 
 328:sieve_extend.c ****         if (index1 > range_stop) {
 329:sieve_extend.c ****             while (index2 <= range_stop) {
 330:sieve_extend.c ****                 bitstorage[wordindex(index2)] |= markmask(index2);
 331:sieve_extend.c ****                 index2 += step2;
 332:sieve_extend.c ****             }
 333:sieve_extend.c ****             return;
 334:sieve_extend.c ****         }
 335:sieve_extend.c **** 
 336:sieve_extend.c ****         while (index1_word < index2_word) {
 337:sieve_extend.c ****             bitstorage[index1_word] |= markmask(index1);
 338:sieve_extend.c ****             index1 += step1;
 339:sieve_extend.c ****             index1_word = wordindex(index1);
 340:sieve_extend.c ****         }
 341:sieve_extend.c ****         
 342:sieve_extend.c ****         while (index2_word < index1_word){
 343:sieve_extend.c ****             bitstorage[index2_word] |= markmask(index2);
 344:sieve_extend.c ****             index2 += step2;
 345:sieve_extend.c ****             index2_word = wordindex(index2);
 346:sieve_extend.c ****         }
 347:sieve_extend.c **** 
 348:sieve_extend.c ****     }
 349:sieve_extend.c **** }
 350:sieve_extend.c **** 
 351:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 352:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitstorage, const counter_t range_s
 353:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 354:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 355:sieve_extend.c **** 
 356:sieve_extend.c ****     //#pragma GCC unroll 16
 357:sieve_extend.c ****     #pragma GCC ivdep
 358:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 359:sieve_extend.c ****         #if __APPLE__
 360:sieve_extend.c ****             applyMask_array(bitstorage, step, range_stop, markmask(index), wordindex(index));
 361:sieve_extend.c ****         #else
 362:sieve_extend.c ****             applyMask_ptr(bitstorage, step, range_stop, markmask(index), wordindex(index));
 363:sieve_extend.c ****         #endif
 364:sieve_extend.c ****     }
 365:sieve_extend.c **** }
 366:sieve_extend.c **** 
 367:sieve_extend.c **** 
 368:sieve_extend.c **** static inline void applyMask_vector_ptr(bitvector_t* __restrict bitstorage, const counter_t step, c
GAS LISTING /tmp/ccRwwoRx.s 			page 9


 369:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 370:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 371:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 372:sieve_extend.c ****     
 373:sieve_extend.c ****     //#pragma GCC unroll 16
 374:sieve_extend.c ****     #pragma GCC ivdep
 375:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 376:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 377:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 378:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 379:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 380:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 381:sieve_extend.c ****     }
 382:sieve_extend.c ****     
 383:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(r
 384:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 385:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 386:sieve_extend.c ****     }
 387:sieve_extend.c **** }
 388:sieve_extend.c **** 
 389:sieve_extend.c **** static inline void applyMask_vector_array(bitvector_t* __restrict bitstorage_vector, const counter_
 390:sieve_extend.c **** 
 391:sieve_extend.c **** //    bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitstora
 392:sieve_extend.c ****     register counter_t current_vector = index_vector;
 393:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 394:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 395:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 396:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     if (current_vector+step_4 <= range_stop_vector) {
 399:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 400:sieve_extend.c ****         //#pragma GCC unroll 16
 401:sieve_extend.c ****         #pragma GCC ivdep
 402:sieve_extend.c ****         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 403:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 406:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 407:sieve_extend.c ****         }
 408:sieve_extend.c ****     }
 409:sieve_extend.c ****     
 410:sieve_extend.c ****     //#pragma GCC unroll 16
 411:sieve_extend.c ****     #pragma GCC ivdep 
 412:sieve_extend.c ****     for(; current_vector <= range_stop_vector; current_vector += step) {
 413:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 414:sieve_extend.c ****     }
 415:sieve_extend.c ****     
 416:sieve_extend.c **** }
 417:sieve_extend.c **** 
 418:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_word, counter_t range_st
 419:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 420:sieve_extend.c **** 
 421:sieve_extend.c ****     bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitstorage
 422:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 423:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 424:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 425:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 10


 426:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 427:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 428:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 429:sieve_extend.c **** 
 430:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 431:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 432:sieve_extend.c ****             return;                 
 433:sieve_extend.c ****         }
 434:sieve_extend.c **** 
 435:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",(uintmax_t)range_start_atvector);
 436:sieve_extend.c ****         // register counter_t index = range_start; // outside to later adjust range_start
 437:sieve_extend.c ****         //#pragma GCC unroll 16
 438:sieve_extend.c ****         #pragma GCC ivdep 
 439:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 440:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 441:sieve_extend.c ****     }
 442:sieve_extend.c ****     
 443:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 444:sieve_extend.c **** 
 445:sieve_extend.c ****     //#pragma GCC unroll 16
 446:sieve_extend.c ****     #pragma GCC ivdep 
 447:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 448:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 449:sieve_extend.c ****         register bitvector_t quadmask = { };
 450:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 451:sieve_extend.c ****         
 452:sieve_extend.c ****         // build a quadmask
 453:sieve_extend.c ****         //#pragma GCC unroll 16
 454:sieve_extend.c ****         #pragma GCC ivdep 
 455:sieve_extend.c ****         do {
 456:sieve_extend.c ****             quadmask[word] |= markmask(index);
 457:sieve_extend.c ****             index += step;
 458:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 459:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 460:sieve_extend.c ****         
 461:sieve_extend.c ****         // use mask on all n*step multiples
 462:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 463:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 464:sieve_extend.c **** 
 465:sieve_extend.c ****         applyMask_vector_array(bitstorage_vector, step, range_stop, quadmask, current_vector);
 466:sieve_extend.c ****     }
 467:sieve_extend.c **** }
 468:sieve_extend.c **** 
 469:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const counter_t source_start, c
  90              		.loc 1 469 155 view -0
  91              		.cfi_startproc
 470:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 470 5 view .LVU1
 471:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitstorage(bitstorage, 4); }
 472:sieve_extend.c **** 
 473:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 473 5 view .LVU2
 474:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
  94              		.loc 1 474 5 view .LVU3
  95              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 469 155 is_stmt 0 view .LVU4
GAS LISTING /tmp/ccRwwoRx.s 			page 11


  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:473:     const counter_t source_word = wordindex(source_start);
 473:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 102              		.loc 1 473 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 469 155 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 109              		.loc 1 474 138 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 469 155 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:473:     const counter_t source_word = wordindex(source_start);
 473:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 116              		.loc 1 473 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 120              		.loc 1 474 138 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 469 155 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 126              		.loc 1 474 137 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 129              		.loc 1 474 171 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 469 155 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 135              		.loc 1 474 137 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 138              		.loc 1 474 171 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 469 155 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
GAS LISTING /tmp/ccRwwoRx.s 			page 12


 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 148              		.loc 1 474 171 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 469 155 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 157              		.loc 1 474 60 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 161              		.loc 1 474 116 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 164              		.loc 1 474 60 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 167              		.loc 1 474 87 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:469: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 469:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 469 155 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:474:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 173              		.loc 1 474 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 475 5 is_stmt 1 view .LVU26
 177              	.LBB311:
 178              		.loc 1 475 10 view .LVU27
 179              		.loc 1 475 54 view .LVU28
 180              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 475 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 476:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 476 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 475 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 192              		.loc 1 476 29 discriminator 3 view .LVU32
GAS LISTING /tmp/ccRwwoRx.s 			page 13


 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 195              		.loc 1 476 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 475 90 is_stmt 1 discriminator 3 view .LVU34
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 475 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 475 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 476 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 475 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 209              		.loc 1 476 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 212              		.loc 1 476 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 475 90 is_stmt 1 view .LVU41
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 475 54 view .LVU42
 217              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 475 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 476 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 475 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 226              		.loc 1 476 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 229              		.loc 1 476 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 475 90 is_stmt 1 view .LVU48
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/ccRwwoRx.s 			page 14


 233              		.loc 1 475 54 view .LVU49
 234              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 475 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 476 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 475 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 243              		.loc 1 476 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 475 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 249              		.loc 1 476 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 475 90 is_stmt 1 view .LVU56
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 475 54 view .LVU57
 254              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 475 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 476 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 475 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 263              		.loc 1 476 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 475 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 269              		.loc 1 476 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 475 90 is_stmt 1 view .LVU64
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 475 54 view .LVU65
 274              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 475 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
GAS LISTING /tmp/ccRwwoRx.s 			page 15


 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 476 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 475 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 283              		.loc 1 476 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 475 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 289              		.loc 1 476 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 475 90 is_stmt 1 view .LVU72
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 475 54 view .LVU73
 294              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 475 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 476 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 475 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 303              		.loc 1 476 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 475 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 309              		.loc 1 476 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 475 90 is_stmt 1 view .LVU80
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 475 54 view .LVU81
 314              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 475 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 476 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 475 103 is_stmt 0 view .LVU84
GAS LISTING /tmp/ccRwwoRx.s 			page 16


 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 323              		.loc 1 476 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:476:         pattern |= (pattern << pattern_size);
 326              		.loc 1 476 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 475 90 is_stmt 1 view .LVU87
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 475 54 view .LVU88
 331              	# sieve_extend.c:475:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 475 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 475:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 475 5 view .LVU90
 340              	.LBE311:
 477:sieve_extend.c **** 
 478:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 478 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:478:     const counter_t destination_start = source_start + size;
 343              		.loc 1 478 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 479:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 479 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:480:     counter_t destination_stop_word = wordindex(destination_stop);
 480:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 480 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:479:     counter_t destination_start_word = wordindex(destination_start);
 479:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 479 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 479:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 479 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 480 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:480:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 480 15 is_stmt 0 view .LVU98
GAS LISTING /tmp/ccRwwoRx.s 			page 17


 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 481:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 481 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 481 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:481:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 481 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 482:sieve_extend.c ****         bitstorage[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(d
 483:sieve_extend.c ****         return;
 484:sieve_extend.c ****     }
 485:sieve_extend.c **** 
 486:sieve_extend.c ****     bitstorage[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 486 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:486:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 378              		.loc 1 486 40 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:489:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 487:sieve_extend.c **** 
 488:sieve_extend.c ****     // TODO: refactor according to smallstep
 489:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 489 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:486:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 486:sieve_extend.c **** 
 384              		.loc 1 486 40 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 489 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:489:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 489 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.145,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 490:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 490 5 is_stmt 1 view .LVU108
 491:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 491 5 view .LVU109
 492:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 492 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:492:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 492 24 is_stmt 0 view .LVU111
GAS LISTING /tmp/ccRwwoRx.s 			page 18


 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:491:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 491:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 491 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:492:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 492 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 493:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 493 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:490:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 490:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 490 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:491:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 491:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 491 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 491:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 491 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.146,
 421              	# sieve_extend.c:493:     destination_start_word++;
 422              		.loc 1 493 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB312:
 494:sieve_extend.c ****     
 495:sieve_extend.c ****     //#pragma GCC unroll 16
 496:sieve_extend.c ****     #pragma GCC ivdep
 497:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 497 10 is_stmt 1 view .LVU119
 427              		.loc 1 497 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.144,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE312:
 432              	# sieve_extend.c:490:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 490:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 490 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 490:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 490 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.146
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB313:
 498:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccRwwoRx.s 			page 19


 443              		.loc 1 498 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 445              		.loc 1 498 74 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 449              		.loc 1 498 57 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 452              		.loc 1 498 129 view .LVU126
 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 455              		.loc 1 498 118 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 458              		.loc 1 497 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 460              		.loc 1 497 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.146,
 462              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 463              		.loc 1 497 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
 465 01da 7452     		je	.L7	#,
 466              		.loc 1 498 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 468              		.loc 1 498 83 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 471              		.loc 1 498 74 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 474              		.loc 1 498 101 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 477              		.loc 1 498 74 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 479              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 480              		.loc 1 498 129 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 483              		.loc 1 498 57 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 486              		.loc 1 498 118 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 489              		.loc 1 497 40 is_stmt 1 view .LVU139
GAS LISTING /tmp/ccRwwoRx.s 			page 20


 490              	.LVL28:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 491              		.loc 1 497 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.146,
 493              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 494              		.loc 1 497 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 498 9 is_stmt 1 view .LVU142
 498              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 499              		.loc 1 498 83 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 502              		.loc 1 498 74 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 505              		.loc 1 498 101 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 508              		.loc 1 498 74 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 511              		.loc 1 498 129 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 514              		.loc 1 498 57 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
 516              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 517              		.loc 1 498 118 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 520              		.loc 1 497 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 522              		.loc 1 497 25 view .LVU151
 523              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 524              		.loc 1 497 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 528              		.loc 1 497 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.147, prolog_loop_niters.146
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.148, niters.147
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.148,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.166,
GAS LISTING /tmp/ccRwwoRx.s 			page 21


 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.151, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
 548      0000
 549              	.LVL31:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 550              		.loc 1 497 40 view .LVU154
 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.151, vect_vec_iv_.151
 552 029e 4883C640 		add	rsi, 64	# ivtmp.166,
 553              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 554              		.loc 1 498 83 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.151, vect_vec_iv_.151, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.151, vect_vec_iv_.151, tmp496
 556      F0
 557              		.loc 1 498 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 559              		.loc 1 498 83 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.151, vect_vec_iv_.151,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.151, vect_vec_iv_.151,
 561      DA31
 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.153, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 498 83 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.154, vect__45.153, vect_cst__148
 569              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 570              		.loc 1 498 101 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.155, vect__47.154, tmp498
 571      C5
 572              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccRwwoRx.s 			page 22


 573              		.loc 1 498 74 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.156, vect_cst__152, vect__48.155
 575              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 576              		.loc 1 498 118 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.155
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.156
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.156
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.155
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.157, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.159, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 586      D7
 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 587      DB
 588              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 589              		.loc 1 498 46 view .LVU162
 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.161
 590      C0
 591              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 592              		.loc 1 498 118 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 593      CB
 594              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 595              		.loc 1 498 46 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.161
 596      E0
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 597              		.loc 1 497 40 is_stmt 1 view .LVU165
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 598              		.loc 1 497 25 view .LVU166
 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.166, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 605              		.loc 1 498 83 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.151, vect_vec_iv_.151, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.151, vect_vec_iv_.151, tmp496
 607      E0
 608              		.loc 1 498 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 610              		.loc 1 498 83 is_stmt 0 discriminator 3 view .LVU169
GAS LISTING /tmp/ccRwwoRx.s 			page 23


 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.151, vect_vec_iv_.151,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.151, vect_vec_iv_.151,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.166,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.153, vect_cst__146, tmp400
 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.154, vect__45.153, vect_cst__148
 619              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 620              		.loc 1 498 101 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.155, vect__47.154, tmp498
 621      FD
 622              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 623              		.loc 1 498 74 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.156, vect_cst__152, vect__48.155
 624      CF
 625              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 626              		.loc 1 498 118 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.155
 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.156
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 630      D6
 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.156
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.155
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.157, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.159, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 636      F1
 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 637      C2
 638              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 639              		.loc 1 498 46 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.161
 640      80
 641              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 642              		.loc 1 498 83 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.151, vect_vec_iv_.151, tmp497
 644              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 645              		.loc 1 498 118 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 647              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 648              		.loc 1 498 83 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.151, vect_vec_iv_.151,
GAS LISTING /tmp/ccRwwoRx.s 			page 24


 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.151, vect_vec_iv_.151, tmp496
 651      F0
 652              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 653              		.loc 1 498 46 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.161
 654      A0
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 655              		.loc 1 497 40 is_stmt 1 discriminator 3 view .LVU178
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 656              		.loc 1 497 25 discriminator 3 view .LVU179
 657              		.loc 1 498 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 659              		.loc 1 498 83 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.151, vect_vec_iv_.151,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.153, vect_cst__146, tmp517
 663      C2
 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.154, vect__45.153, vect_cst__148
 665              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 666              		.loc 1 498 101 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.155, vect__47.154, tmp498
 667      CD
 668              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 669              		.loc 1 498 74 discriminator 3 view .LVU183
 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.156, vect_cst__152, vect__48.155
 670      E1
 671              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 672              		.loc 1 498 118 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.155
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.156
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.156
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.155
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.157, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.159, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.158, vect_cst__156, vect_patt_139.157
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.160, vect_cst__156, vect_patt_137.159
 683      F9
GAS LISTING /tmp/ccRwwoRx.s 			page 25


 684              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 685              		.loc 1 498 46 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.161
 686      C0
 687              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 688              		.loc 1 498 118 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.161, vect_patt_138.158, vect_patt_136.160
 689      D7
 690              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 691              		.loc 1 498 46 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.161
 692      E0
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 693              		.loc 1 497 40 is_stmt 1 discriminator 3 view .LVU188
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 694              		.loc 1 497 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.166, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.149, niters.147
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.149,
 700 0442 4901F6   		add	r14, rsi	# tmp.150, niters_vector_mult_vf.149
 701 0445 4939F5   		cmp	r13, rsi	# niters.147, niters_vector_mult_vf.149
 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
 705              	.LVL33:
 706              		.loc 1 498 9 view .LVU190
 707              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 708              		.loc 1 498 83 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 711              		.loc 1 498 74 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 714              		.loc 1 498 83 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.150
 716              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 717              		.loc 1 498 19 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 719              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 720              		.loc 1 498 83 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 723              		.loc 1 498 101 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 726              		.loc 1 498 129 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 729              		.loc 1 498 74 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccRwwoRx.s 			page 26


 732              		.loc 1 497 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 735              		.loc 1 498 57 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 738              		.loc 1 498 118 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 741              		.loc 1 497 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 743              		.loc 1 497 25 view .LVU203
 744              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 745              		.loc 1 497 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 498 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 750              		.loc 1 498 83 is_stmt 0 view .LVU206
 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 753              		.loc 1 498 74 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 755              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 756              		.loc 1 498 83 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 758              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 759              		.loc 1 498 19 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 763              		.loc 1 498 83 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 766              		.loc 1 498 101 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 769              		.loc 1 498 74 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 772              		.loc 1 498 129 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 775              		.loc 1 498 57 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 778              		.loc 1 498 118 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccRwwoRx.s 			page 27


 781              		.loc 1 497 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 784              		.loc 1 497 25 view .LVU217
 785              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 786              		.loc 1 497 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
 789              		.loc 1 498 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 791              		.loc 1 498 83 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 794              		.loc 1 498 74 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 797              		.loc 1 498 83 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 800              		.loc 1 498 19 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 802              	.LVL37:
 803              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 804              		.loc 1 498 83 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
 806              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 807              		.loc 1 498 101 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
 809              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 810              		.loc 1 498 74 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 813              		.loc 1 498 129 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 816              		.loc 1 498 57 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
 818              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 819              		.loc 1 498 118 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 822              		.loc 1 497 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 825              		.loc 1 497 25 view .LVU231
 826              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 827              		.loc 1 497 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 28


 829      0000
 830              		.loc 1 498 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 832              		.loc 1 498 83 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 835              		.loc 1 498 74 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 838              		.loc 1 498 83 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 840              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 841              		.loc 1 498 19 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 845              		.loc 1 498 83 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 848              		.loc 1 498 101 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 851              		.loc 1 498 129 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 852      F0
 853              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 854              		.loc 1 498 74 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 856              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 857              		.loc 1 498 57 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 858      E8
 859              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 860              		.loc 1 498 118 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 863              		.loc 1 497 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 866              		.loc 1 497 25 view .LVU245
 867              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 868              		.loc 1 497 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 498 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 873              		.loc 1 498 83 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 876              		.loc 1 498 74 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 879              		.loc 1 498 83 view .LVU250
GAS LISTING /tmp/ccRwwoRx.s 			page 29


 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 882              		.loc 1 498 19 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 886              		.loc 1 498 83 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 889              		.loc 1 498 101 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
 891              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 892              		.loc 1 498 129 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 895              		.loc 1 498 74 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 898              		.loc 1 498 57 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 901              		.loc 1 498 118 view .LVU257
 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 904              		.loc 1 497 40 is_stmt 1 view .LVU258
 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 907              		.loc 1 497 25 view .LVU259
 908              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 909              		.loc 1 497 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 498 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 914              		.loc 1 498 83 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 916              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 917              		.loc 1 498 74 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 920              		.loc 1 498 83 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 923              		.loc 1 498 19 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 927              		.loc 1 498 83 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 930              		.loc 1 498 101 view .LVU267
GAS LISTING /tmp/ccRwwoRx.s 			page 30


 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 933              		.loc 1 498 129 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 936              		.loc 1 498 74 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 939              		.loc 1 498 57 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 940      E8
 941              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 942              		.loc 1 498 118 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 945              		.loc 1 497 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 948              		.loc 1 497 25 view .LVU273
 949              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 950              		.loc 1 497 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
 953              		.loc 1 498 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 955              		.loc 1 498 83 is_stmt 0 view .LVU276
 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 958              		.loc 1 498 74 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 961              		.loc 1 498 83 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 964              		.loc 1 498 19 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
 967              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 968              		.loc 1 498 83 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 971              		.loc 1 498 101 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 974              		.loc 1 498 129 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 977              		.loc 1 498 74 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 980              		.loc 1 498 57 view .LVU284
GAS LISTING /tmp/ccRwwoRx.s 			page 31


 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 983              		.loc 1 498 118 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 986              		.loc 1 497 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 989              		.loc 1 497 25 view .LVU287
 990              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 991              		.loc 1 497 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 498 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 996              		.loc 1 498 83 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 999              		.loc 1 498 74 view .LVU291
 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1002              		.loc 1 498 83 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1004              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1005              		.loc 1 498 19 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1007              	.LVL47:
 1008              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1009              		.loc 1 498 83 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1012              		.loc 1 498 101 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1015              		.loc 1 498 129 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
 1017              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1018              		.loc 1 498 74 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1021              		.loc 1 498 57 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1024              		.loc 1 498 118 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1027              		.loc 1 497 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
GAS LISTING /tmp/ccRwwoRx.s 			page 32


 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1030              		.loc 1 497 25 view .LVU301
 1031              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1032              		.loc 1 497 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 498 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1037              		.loc 1 498 83 is_stmt 0 view .LVU304
 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1040              		.loc 1 498 74 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1043              		.loc 1 498 83 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1046              		.loc 1 498 19 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1050              		.loc 1 498 83 view .LVU308
 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1053              		.loc 1 498 101 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
 1055              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1056              		.loc 1 498 129 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1057      F0
 1058              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1059              		.loc 1 498 74 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1062              		.loc 1 498 57 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1065              		.loc 1 498 118 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1068              		.loc 1 497 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1071              		.loc 1 497 25 view .LVU315
 1072              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1073              		.loc 1 497 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 498 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1078              		.loc 1 498 83 is_stmt 0 view .LVU318
GAS LISTING /tmp/ccRwwoRx.s 			page 33


 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1081              		.loc 1 498 74 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1084              		.loc 1 498 83 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1087              		.loc 1 497 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
 1089              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1090              		.loc 1 498 19 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1094              		.loc 1 498 83 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1097              		.loc 1 498 101 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1100              		.loc 1 498 129 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1101      F0
 1102              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1103              		.loc 1 498 74 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1105              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1106              		.loc 1 498 57 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1107      E8
 1108              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1109              		.loc 1 498 118 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1112              		.loc 1 497 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1115              		.loc 1 498 118 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1117              		.loc 1 497 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1119              		.loc 1 497 25 view .LVU332
 1120              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1121              		.loc 1 497 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 498 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1125              		.loc 1 498 83 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccRwwoRx.s 			page 34


 1129              		.loc 1 498 19 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1132              		.loc 1 498 83 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1136              		.loc 1 498 101 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1139              		.loc 1 498 74 view .LVU339
 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1143              		.loc 1 498 57 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1146              		.loc 1 498 129 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:498:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1150              		.loc 1 498 118 view .LVU342
 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1153              		.loc 1 497 40 is_stmt 1 view .LVU343
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1154              		.loc 1 497 25 view .LVU344
 1155              	.L10:
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1156              		.loc 1 497 25 is_stmt 0 view .LVU345
 1157              	.LBE313:
 499:sieve_extend.c ****     }
 500:sieve_extend.c ****     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 500 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:500:     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 500 39 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:501: }
 501:sieve_extend.c **** }
 1163              		.loc 1 501 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 501 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
GAS LISTING /tmp/ccRwwoRx.s 			page 35


 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 482:sieve_extend.c ****         return;
 1181              		.loc 1 482 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:482:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 482:sieve_extend.c ****         return;
 1183              		.loc 1 482 88 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:482:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 482:sieve_extend.c ****         return;
 1186              		.loc 1 482 44 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 483:sieve_extend.c ****     }
 1189              		.loc 1 483 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:501: }
 1191              		.loc 1 501 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 501 1 view .LVU355
 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 501 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB314:
 1213              	# sieve_extend.c:497:     for (counter_t i=0; i<=loop_range; ++i ) {
 497:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1214              		.loc 1 497 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.150
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE314:
 1222              		.cfi_endproc
 1223              	.LFE68:
 1225 06bd 0F1F00   		.p2align 4
 1227              	extendSieve_shiftright_ivdep:
 1228              	.LVL62:
GAS LISTING /tmp/ccRwwoRx.s 			page 36


 1229              	.LFB73:
 502:sieve_extend.c **** 
 503:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source_start, const counter_
 504:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 505:sieve_extend.c **** 
 506:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 507:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 508:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 509:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 510:sieve_extend.c ****     
 511:sieve_extend.c ****     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 512:sieve_extend.c **** 
 513:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 514:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 515:sieve_extend.c ****         copy_word += size;
 516:sieve_extend.c ****     }
 517:sieve_extend.c **** 
 518:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 519:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 520:sieve_extend.c ****         source_word++;
 521:sieve_extend.c ****         copy_word++;
 522:sieve_extend.c ****     }
 523:sieve_extend.c **** 
 524:sieve_extend.c **** }
 525:sieve_extend.c **** 
 526:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 527:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 528:sieve_extend.c **** 
 529:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 530:sieve_extend.c **** {
 531:sieve_extend.c ****     int i = 0;
 532:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 533:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 534:sieve_extend.c ****     {
 535:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 536:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 537:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 538:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 539:sieve_extend.c ****     }
 540:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 541:sieve_extend.c ****     {
 542:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 543:sieve_extend.c ****     }    
 544:sieve_extend.c **** }
 545:sieve_extend.c **** 
 546:sieve_extend.c **** #define forward_distance 4
 547:sieve_extend.c **** static void extendSieve_shiftright_vector(bitword_t* bitstorage, const counter_t source_start, cons
 548:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 549:sieve_extend.c ****    
 550:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*) bitstorage;
 551:sieve_extend.c **** 
 552:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 553:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 554:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 555:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 556:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 557:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
GAS LISTING /tmp/ccRwwoRx.s 			page 37


 558:sieve_extend.c **** 
 559:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not lose da
 560:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 561:sieve_extend.c ****                                 & keepmask(copy_start);
 562:sieve_extend.c **** 
 563:sieve_extend.c ****     if (copy_word >= destination_stop_word) return; // rapid exit for one word variant
 564:sieve_extend.c **** 
 565:sieve_extend.c ****     copy_word++;
 566:sieve_extend.c **** 
 567:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 568:sieve_extend.c ****     if (((copy_word - source_word) > 8)) {
 569:sieve_extend.c **** 
 570:sieve_extend.c ****         // move one vector further
 571:sieve_extend.c ****         counter_t target_word = wordindex(vectorstart(source_start+size)+VECTOR_SIZE_counter);
 572:sieve_extend.c ****         counter_t delta_word   = 4-((copy_word-source_word-1) % 4);
 573:sieve_extend.c ****         if (delta_word==0) { 
 574:sieve_extend.c ****             target_word += 8;
 575:sieve_extend.c ****         }
 576:sieve_extend.c **** 
 577:sieve_extend.c ****         debug printf("..source_word %ju copy_word %ju mod %ju target_word %ju\n",source_word, copy_
 578:sieve_extend.c **** 
 579:sieve_extend.c ****         #pragma GCC ivdep
 580:sieve_extend.c ****         for (; copy_word < target_word; copy_word++, source_word++ ) {
 581:sieve_extend.c ****             bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source
 582:sieve_extend.c ****         }
 583:sieve_extend.c **** 
 584:sieve_extend.c ****         if (delta_word==0) { 
 585:sieve_extend.c ****             delta_word = 4;
 586:sieve_extend.c ****             source_word += 4;
 587:sieve_extend.c ****         }
 588:sieve_extend.c **** 
 589:sieve_extend.c ****         counter_t source_vector = vectorfromword(source_word+1);
 590:sieve_extend.c ****         counter_t copy_vector = vectorfromword(copy_word);
 591:sieve_extend.c **** 
 592:sieve_extend.c ****         // debug printf("..using vectors source_vector %ju copy vector %ju target_word %ju delta_wo
 593:sieve_extend.c **** 
 594:sieve_extend.c ****         const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 595:sieve_extend.c ****         const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 596:sieve_extend.c ****         const bitvector_t shift_vector = { shift, shift, shift, shift };
 597:sieve_extend.c ****         const bitvector_t shift_flipped_vector = { shift_flipped, shift_flipped, shift_flipped, shi
 598:sieve_extend.c **** 
 599:sieve_extend.c ****         const counter_t target_vector = vectorindex(destination_stop);
 600:sieve_extend.c **** 
 601:sieve_extend.c ****         // debug printf("..should be copy from source_word %ju to %ju, but takes vector %ju to %ju 
 602:sieve_extend.c **** 
 603:sieve_extend.c ****         // dump_bitstorage(bitstorage, copy_word+4);
 604:sieve_extend.c **** 
 605:sieve_extend.c ****         // debug printf("Will copy from %ju to %ju  vector %ju to %ju at copy_word %ju\n",source_ve
 606:sieve_extend.c ****         #pragma GCC ivdep
 607:sieve_extend.c ****         for (; copy_vector <= target_vector; copy_vector++, source_vector++ ) {
 608:sieve_extend.c ****             bitvector_t source0 = bitstorage_vector[source_vector];
 609:sieve_extend.c ****             bitvector_t source1 = bitstorage_vector[source_vector+1];
 610:sieve_extend.c ****             bitvector_t copy1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped_vector
 611:sieve_extend.c ****             bitvector_t copy2 = __builtin_shuffle(source0,source1,shuffle2) << shift_vector;
 612:sieve_extend.c ****             bitstorage_vector[copy_vector] = copy1 | copy2;
 613:sieve_extend.c ****             // copy_word += 4;
 614:sieve_extend.c ****             // source_word += 4;
GAS LISTING /tmp/ccRwwoRx.s 			page 38


 615:sieve_extend.c ****         }
 616:sieve_extend.c **** 
 617:sieve_extend.c ****         // target_word = target_vector*4;
 618:sieve_extend.c ****         // for (; copy_word <= target_word; copy_word++, source_word++ ) {
 619:sieve_extend.c ****         //     bitword_t shouldbe = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source
 620:sieve_extend.c ****         //     bitword_t asis = bitstorage[copy_word];
 621:sieve_extend.c ****         //     debug printf("Copy_word = %ju\n",copy_word);
 622:sieve_extend.c ****         //     if (shouldbe != asis) {
 623:sieve_extend.c ****         //         printf("ERROR expected at copy_word %ju\n", copy_word);
 624:sieve_extend.c ****         //         printWord(shouldbe);
 625:sieve_extend.c ****         //         printf("\n");
 626:sieve_extend.c ****         //         printf("But is\n");
 627:sieve_extend.c ****         //         printWord(asis);
 628:sieve_extend.c ****         //         printf("\n");
 629:sieve_extend.c ****         //         // dump_bitstorage(bitstorage, copy_word+4);
 630:sieve_extend.c ****         //         exit(0);
 631:sieve_extend.c ****         //     }
 632:sieve_extend.c ****         //     else {
 633:sieve_extend.c ****         //         // debug printf("Correct for copy_word %ju\n",copy_word);
 634:sieve_extend.c ****         //     }
 635:sieve_extend.c ****         // }
 636:sieve_extend.c **** 
 637:sieve_extend.c ****         // copy_word += 4;
 638:sieve_extend.c ****         // source_word += 4;
 639:sieve_extend.c **** 
 640:sieve_extend.c **** 
 641:sieve_extend.c ****         // #pragma GCC ivdep 
 642:sieve_extend.c ****         // for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 643:sieve_extend.c ****         //     bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[sou
 644:sieve_extend.c ****         // }
 645:sieve_extend.c ****         // bitstorage[copy_word] &= chopmask(destination_stop);
 646:sieve_extend.c ****     }
 647:sieve_extend.c ****     else {
 648:sieve_extend.c ****         register counter_t i = 0;
 649:sieve_extend.c ****         bitword_t* copy_ptr   = &bitstorage[copy_word];
 650:sieve_extend.c ****         bitword_t* source_ptr = &bitstorage[source_word];
 651:sieve_extend.c ****         bitword_t* dest_ptr   = &bitstorage[destination_stop_word];
 652:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 653:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 654:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 655:sieve_extend.c ****     }
 656:sieve_extend.c **** }
 657:sieve_extend.c **** 
 658:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitstorage, const counter_t align
 659:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 660:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 661:sieve_extend.c ****     counter_t distance = 0;
 662:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 663:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 664:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 665:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 666:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 667:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 668:sieve_extend.c ****         copy_word += 2;
 669:sieve_extend.c ****         source_word += 2;
 670:sieve_extend.c ****         distance += 2;
 671:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 39


 672:sieve_extend.c ****     return distance;
 673:sieve_extend.c **** }
 674:sieve_extend.c **** 
 675:sieve_extend.c **** 
 676:sieve_extend.c **** 
 677:sieve_extend.c **** 
 678:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter_t source_start, const
 1230              		.loc 1 678 151 is_stmt 1 view -0
 1231              		.cfi_startproc
 679:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1232              		.loc 1 679 5 view .LVU359
 680:sieve_extend.c ****    
 681:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1233              		.loc 1 681 5 view .LVU360
 1234              	# sieve_extend.c:678: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1235              		.loc 1 678 151 is_stmt 0 view .LVU361
 1236 06c0 55       		push	rbp	#
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 6, -16
 1239              	# sieve_extend.c:683:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 682:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 683:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1240              		.loc 1 683 67 view .LVU362
 1241 06c1 4889F0   		mov	rax, rsi	# _5, source_start
 1242              	# sieve_extend.c:678: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1243              		.loc 1 678 151 view .LVU363
 1244 06c4 4889E5   		mov	rbp, rsp	#,
 1245              		.cfi_def_cfa_register 6
 1246              	# sieve_extend.c:683:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 1247              		.loc 1 683 67 view .LVU364
 1248 06c7 83E03F   		and	eax, 63	# _5,
 1249              	# sieve_extend.c:678: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1250              		.loc 1 678 151 view .LVU365
 1251 06ca 4157     		push	r15	#
 1252 06cc 4156     		push	r14	#
 1253 06ce 4155     		push	r13	#
 1254 06d0 4154     		push	r12	#
 1255 06d2 53       		push	rbx	#
 1256              		.cfi_offset 15, -24
 1257              		.cfi_offset 14, -32
 1258              		.cfi_offset 13, -40
 1259              		.cfi_offset 12, -48
 1260              		.cfi_offset 3, -56
 1261 06d3 4889CB   		mov	rbx, rcx	# destination_stop, tmp840
 1262              	# sieve_extend.c:681:     const counter_t destination_stop_word = wordindex(destination_stop);
 681:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1263              		.loc 1 681 21 view .LVU366
 1264 06d6 48C1EB06 		shr	rbx, 6	# destination_stop_word,
 1265              	# sieve_extend.c:678: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1266              		.loc 1 678 151 view .LVU367
 1267 06da 4883E4E0 		and	rsp, -32	#,
 1268              	.LVL63:
 682:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccRwwoRx.s 			page 40


 1269              		.loc 1 682 5 is_stmt 1 view .LVU368
 1270              	# sieve_extend.c:678: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 678:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1271              		.loc 1 678 151 is_stmt 0 view .LVU369
 1272 06de 48894C24 		mov	QWORD PTR -40[rsp], rcx	# %sfp, destination_stop
 1272      D8
 1273              	# sieve_extend.c:682:     const counter_t copy_start = source_start + size;
 682:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1274              		.loc 1 682 21 view .LVU370
 1275 06e3 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 1276              	.LVL64:
 1277              		.loc 1 683 5 is_stmt 1 view .LVU371
 1278              	# sieve_extend.c:685:     register counter_t source_word = wordindex(source_start);
 684:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 685:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1279              		.loc 1 685 24 is_stmt 0 view .LVU372
 1280 06e7 48C1EE06 		shr	rsi, 6	# source_word,
 1281              	.LVL65:
 1282              	# sieve_extend.c:683:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 683:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1283              		.loc 1 683 39 view .LVU373
 1284 06eb 4989CB   		mov	r11, rcx	# _4, copy_start
 1285 06ee 4183E33F 		and	r11d, 63	# _4,
 1286              	.LVL66:
 684:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1287              		.loc 1 684 5 is_stmt 1 view .LVU374
 1288              		.loc 1 685 5 view .LVU375
 686:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1289              		.loc 1 686 5 view .LVU376
 1290              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 687:sieve_extend.c **** 
 688:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not lose da
 1291              		.loc 1 688 42 is_stmt 0 view .LVU377
 1292 06f2 4C8D2CF5 		lea	r13, 0[0+rsi*8]	# _9,
 1292      00000000 
 1293              	# sieve_extend.c:686:     register counter_t copy_word = wordindex(copy_start);
 686:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1294              		.loc 1 686 24 view .LVU378
 1295 06fa 48C1E906 		shr	rcx, 6	# copy_word,
 1296              	.LVL67:
 1297              		.loc 1 688 5 is_stmt 1 view .LVU379
 1298              	# sieve_extend.c:683:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 683:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1299              		.loc 1 683 31 is_stmt 0 view .LVU380
 1300 06fe 4D89DA   		mov	r10, r11	# shift, _4
 1301              	# sieve_extend.c:681:     const counter_t destination_stop_word = wordindex(destination_stop);
 681:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1302              		.loc 1 681 21 view .LVU381
 1303 0701 48895C24 		mov	QWORD PTR -8[rsp], rbx	# %sfp, destination_stop_word
 1303      F8
 1304              	.LVL68:
 1305              	# sieve_extend.c:683:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 683:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1306              		.loc 1 683 31 view .LVU382
 1307 0706 4929C2   		sub	r10, rax	# shift, _5
 1308              	.LVL69:
 1309              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
GAS LISTING /tmp/ccRwwoRx.s 			page 41


 1310              		.loc 1 688 27 view .LVU383
 1311 0709 4C8D0CCF 		lea	r9, [rdi+rcx*8]	# _7,
 1312              	# sieve_extend.c:684:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 684:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1313              		.loc 1 684 31 view .LVU384
 1314 070d 4883C040 		add	rax, 64	# tmp401,
 1315              	.LVL70:
 1316              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 1317              		.loc 1 688 27 view .LVU385
 1318 0711 4D8B21   		mov	r12, QWORD PTR [r9]	# _8, *_7
 1319              	# sieve_extend.c:684:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 684:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 684 31 view .LVU386
 1321 0714 4C29D8   		sub	rax, r11	# shift_flipped, _4
 1322              	.LVL71:
 1323              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 1324              		.loc 1 688 42 view .LVU387
 1325 0717 4E8D342F 		lea	r14, [rdi+r13]	# _10,
 1326              	# sieve_extend.c:689:                                 | (bitstorage[copy_word] >> shift_flipped))
 689:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 1327              		.loc 1 689 58 view .LVU388
 1328 071b C442FBF7 		shrx	r8, r12, rax	# tmp405, _8, shift_flipped
 1328      C4
 1329              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 1330              		.loc 1 688 56 view .LVU389
 1331 0720 C442A9F7 		shlx	r15, QWORD PTR [r14], r10	# tmp403, *_10, shift
 1331      3E
 1332              	# sieve_extend.c:689:                                 | (bitstorage[copy_word] >> shift_flipped))
 1333              		.loc 1 689 33 view .LVU390
 1334 0725 4D09F8   		or	r8, r15	# tmp406, tmp403
 1335              	# sieve_extend.c:692:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 690:sieve_extend.c ****                                 & keepmask(copy_start);
 691:sieve_extend.c **** 
 692:sieve_extend.c ****     if (copy_word >= destination_stop_word) return; // rapid exit for one word variant
 1336              		.loc 1 692 8 view .LVU391
 1337 0728 4C8B7C24 		mov	r15, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1337      F8
 1338              	# sieve_extend.c:690:                                 & keepmask(copy_start);
 690:sieve_extend.c ****                                 & keepmask(copy_start);
 1339              		.loc 1 690 35 view .LVU392
 1340 072d 48C7C3FF 		mov	rbx, -1	# tmp409,
 1340      FFFFFF
 1341 0734 C462A1F7 		shlx	r11, rbx, r11	# tmp408, tmp409, _4
 1341      DB
 1342              	.LVL72:
 1343              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 1344              		.loc 1 688 56 view .LVU393
 1345 0739 44895424 		mov	DWORD PTR -20[rsp], r10d	# %sfp, shift
 1345      EC
 1346              	# sieve_extend.c:690:                                 & keepmask(copy_start);
 690:sieve_extend.c ****                                 & keepmask(copy_start);
 1347              		.loc 1 690 33 view .LVU394
 1348 073e 4D21C3   		and	r11, r8	# tmp410, tmp406
 1349              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
GAS LISTING /tmp/ccRwwoRx.s 			page 42


 1350              		.loc 1 688 27 view .LVU395
 1351 0741 4D09E3   		or	r11, r12	# tmp411, _8
 1352              	# sieve_extend.c:692:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 1353              		.loc 1 692 8 view .LVU396
 1354 0744 4939CF   		cmp	r15, rcx	# destination_stop_word, copy_word
 1355              	# sieve_extend.c:688:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the s
 688:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 1356              		.loc 1 688 27 view .LVU397
 1357 0747 4D8919   		mov	QWORD PTR [r9], r11	# *_7, tmp411
 1358              		.loc 1 692 5 is_stmt 1 view .LVU398
 1359              	# sieve_extend.c:692:     if (copy_word >= destination_stop_word) return; // rapid exit for one wor
 1360              		.loc 1 692 8 is_stmt 0 view .LVU399
 1361 074a 0F867204 		jbe	.L206	#,
 1361      0000
 1362              	# sieve_extend.c:698:     if (size >= WORD_SIZE_counter) {
 693:sieve_extend.c **** 
 694:sieve_extend.c ****     copy_word++;
 695:sieve_extend.c **** 
 696:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 697:sieve_extend.c **** 
 698:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1363              		.loc 1 698 8 view .LVU400
 1364 0750 4883FA3F 		cmp	rdx, 63	# size,
 1365 0754 4189C1   		mov	r9d, eax	# _15, shift_flipped
 694:sieve_extend.c **** 
 1366              		.loc 1 694 5 is_stmt 1 view .LVU401
 1367              	# sieve_extend.c:694:     copy_word++;
 694:sieve_extend.c **** 
 1368              		.loc 1 694 14 is_stmt 0 view .LVU402
 1369 0757 4C8D4101 		lea	r8, 1[rcx]	# copy_word,
 1370              	.LVL73:
 696:sieve_extend.c **** 
 1371              		.loc 1 696 5 is_stmt 1 view .LVU403
 1372              		.loc 1 698 5 view .LVU404
 1373              	# sieve_extend.c:698:     if (size >= WORD_SIZE_counter) {
 1374              		.loc 1 698 8 is_stmt 0 view .LVU405
 1375 075b 0F877704 		ja	.L208	#,
 1375      0000
 1376              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 699:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 700:sieve_extend.c **** 
 701:sieve_extend.c ****         //#pragma GCC unroll 16
 702:sieve_extend.c ****         #pragma GCC ivdep
 703:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 704:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 705:sieve_extend.c ****         }
 706:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 707:sieve_extend.c ****     }
 708:sieve_extend.c **** 
 709:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1377              		.loc 1 709 5 discriminator 1 view .LVU406
 1378 0761 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 1379 0764 4D89FC   		mov	r12, r15	# destination_stop_word, destination_stop_word
 1380              		.loc 1 709 12 is_stmt 1 discriminator 1 view .LVU407
 1381              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1382              		.loc 1 709 5 is_stmt 0 discriminator 1 view .LVU408
 1383 0767 0F823D04 		jb	.L61	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 43


 1383      0000
 1384 076d 4D89E6   		mov	r14, r12	# _151, destination_stop_word
 1385 0770 498D5701 		lea	rdx, 1[r15]	# _158,
 1386              	.LVL74:
 1387              		.loc 1 709 5 discriminator 1 view .LVU409
 1388 0774 4D29C6   		sub	r14, r8	# _151, copy_word
 1389 0777 4C8D1CF5 		lea	r11, 40[0+rsi*8]	# _146,
 1389      28000000 
 1390 077f 4C897424 		mov	QWORD PTR -32[rsp], r14	# %sfp, _151
 1390      E0
 1391 0784 4E8D34C5 		lea	r14, 0[0+r8*8]	# _144,
 1391      00000000 
 1392 078c 48895424 		mov	QWORD PTR -16[rsp], rdx	# %sfp, _158
 1392      F0
 1393 0791 498D5E20 		lea	rbx, 32[r14]	# tmp496,
 1394 0795 488D14F5 		lea	rdx, 0[0+rsi*8]	# _296,
 1394      00000000 
 1395 079d 4C8D7902 		lea	r15, 2[rcx]	# _124,
 1396 07a1 4839DA   		cmp	rdx, rbx	# _296, tmp496
 1397 07a4 0F9DC3   		setge	bl	#, tmp498
 1398 07a7 4D39DE   		cmp	r14, r11	# _144, _146
 1399 07aa 410F9DC3 		setge	r11b	#, tmp500
 1400 07ae 4408DB   		or	bl, r11b	# tmp498, tmp500
 1401 07b1 0F848108 		je	.L60	#,
 1401      0000
 1402 07b7 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1402      E005
 1403 07bd 0F97C3   		seta	bl	#, tmp503
 1404 07c0 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1404      F0
 1405 07c5 410F96C3 		setbe	r11b	#, tmp505
 1406 07c9 4484DB   		test	bl, r11b	# tmp503, tmp505
 1407 07cc 0F846608 		je	.L60	#,
 1407      0000
 1408 07d2 4929CC   		sub	r12, rcx	# tmp507, copy_word
 1409 07d5 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1409      F0
 1410 07da 41BB0100 		mov	r11d, 1	# tmp508,
 1410      0000
 1411 07e0 4D0F46DC 		cmovbe	r11, r12	# tmp507,, niters.176
 1412 07e4 4801FA   		add	rdx, rdi	# vectp.177, bitstorage
 1413 07e7 48C1EA03 		shr	rdx, 3	# tmp510,
 1414 07eb 48F7DA   		neg	rdx	# tmp511
 1415 07ee 83E203   		and	edx, 3	# prolog_loop_niters.178,
 1416 07f1 0F84790A 		je	.L72	#,
 1416      0000
 710:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1417              		.loc 1 710 9 is_stmt 1 view .LVU410
 1418              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1419              		.loc 1 710 105 is_stmt 0 view .LVU411
 1420 07f7 4E8B6C2F 		mov	r13, QWORD PTR 8[rdi+r13]	# *_305, *_305
 1420      08
 1421              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1422              		.loc 1 710 89 view .LVU412
 1423 07fc 488D5E01 		lea	rbx, 1[rsi]	# tmp631,
 1424              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1425              		.loc 1 710 105 view .LVU413
GAS LISTING /tmp/ccRwwoRx.s 			page 44


 1426 0800 C442A9F7 		shlx	r12, r13, r10	# tmp512, *_305, shift
 1426      E5
 1427              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1428              		.loc 1 710 58 view .LVU414
 1429 0805 C462FBF7 		shrx	r13, QWORD PTR [rdi+rsi*8], rax	# tmp514, *_300, shift_flipped
 1429      2CF7
 1430              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1431              		.loc 1 710 89 view .LVU415
 1432 080b 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, tmp631
 1432      D0
 1433              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1434              		.loc 1 710 76 view .LVU416
 1435 0810 4D09EC   		or	r12, r13	# tmp516, tmp514
 1436 0813 4E892437 		mov	QWORD PTR [rdi+r14], r12	# *_309, tmp516
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1437              		.loc 1 709 48 is_stmt 1 view .LVU417
 1438              	.LVL75:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1439              		.loc 1 709 12 view .LVU418
 1440 0817 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.178,
 1441              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1442              		.loc 1 710 31 is_stmt 0 view .LVU419
 1443 081b 4D89FE   		mov	r14, r15	# copy_word, _124
 1444 081e 745E     		je	.L62	#,
 1445              		.loc 1 710 9 is_stmt 1 view .LVU420
 1446              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1447              		.loc 1 710 44 is_stmt 0 view .LVU421
 1448 0820 4C8D2CDD 		lea	r13, 0[0+rbx*8]	# _318,
 1448      00000000 
 1449              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1450              		.loc 1 710 89 view .LVU422
 1451 0828 4C8D7602 		lea	r14, 2[rsi]	# source_word,
 1452              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1453              		.loc 1 710 105 view .LVU423
 1454 082c C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13], r10	# tmp517, *_324, shift
 1454      642F08
 1455              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1456              		.loc 1 710 89 view .LVU424
 1457 0833 4C897424 		mov	QWORD PTR -48[rsp], r14	# %sfp, source_word
 1457      D0
 1458              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1459              		.loc 1 710 58 view .LVU425
 1460 0838 4E8B2C2F 		mov	r13, QWORD PTR [rdi+r13]	# *_319, *_319
 1461 083c C442FBF7 		shrx	r14, r13, rax	# tmp519, *_319, shift_flipped
 1461      F5
 1462              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1463              		.loc 1 710 76 view .LVU426
 1464 0841 4D09F4   		or	r12, r14	# tmp521, tmp519
 1465 0844 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.178,
 1466 0848 4E8924FF 		mov	QWORD PTR [rdi+r15*8], r12	# *_328, tmp521
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1467              		.loc 1 709 48 is_stmt 1 view .LVU427
 1468              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1469              		.loc 1 709 57 is_stmt 0 view .LVU428
 1470 084c 4C8D7103 		lea	r14, 3[rcx]	# copy_word,
 1471              	.LVL76:
GAS LISTING /tmp/ccRwwoRx.s 			page 45


 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1472              		.loc 1 709 12 is_stmt 1 view .LVU429
 1473 0850 752C     		jne	.L62	#,
 1474              		.loc 1 710 9 view .LVU430
 1475              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1476              		.loc 1 710 44 is_stmt 0 view .LVU431
 1477 0852 4C8D6E02 		lea	r13, 2[rsi]	# source_word,
 1478              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1479              		.loc 1 710 89 view .LVU432
 1480 0856 4C8D6603 		lea	r12, 3[rsi]	# source_word,
 1481 085a 4C896424 		mov	QWORD PTR -48[rsp], r12	# %sfp, source_word
 1481      D0
 1482              	.LVL77:
 1483              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1484              		.loc 1 710 44 view .LVU433
 1485 085f 49C1E503 		sal	r13, 3	# source_word,
 1486              	.LVL78:
 1487              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1488              		.loc 1 710 105 view .LVU434
 1489 0863 C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13], r10	# tmp522, *_88, shift
 1489      642F08
 1490              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1491              		.loc 1 710 58 view .LVU435
 1492 086a 4E8B2C2F 		mov	r13, QWORD PTR [rdi+r13]	# *_99, *_99
 1493 086e C442FBF7 		shrx	r13, r13, rax	# tmp524, *_99, shift_flipped
 1493      ED
 1494              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1495              		.loc 1 710 76 view .LVU436
 1496 0873 4D09EC   		or	r12, r13	# tmp526, tmp524
 1497 0876 4E8924F7 		mov	QWORD PTR [rdi+r14*8], r12	# *_81, tmp526
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1498              		.loc 1 709 48 is_stmt 1 view .LVU437
 1499              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1500              		.loc 1 709 57 is_stmt 0 view .LVU438
 1501 087a 4C8D7104 		lea	r14, 4[rcx]	# copy_word,
 1502              	.LVL79:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1503              		.loc 1 709 12 is_stmt 1 view .LVU439
 1504              	.L62:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1505              		.loc 1 709 12 is_stmt 0 view .LVU440
 1506 087e 4801D6   		add	rsi, rdx	# tmp527, prolog_loop_niters.178
 1507 0881 4801D3   		add	rbx, rdx	# tmp530, prolog_loop_niters.178
 1508 0884 4929D3   		sub	r11, rdx	# niters.179, prolog_loop_niters.178
 1509 0887 488D0CF7 		lea	rcx, [rdi+rsi*8]	# vectp.185,
 1510 088b 488D34DF 		lea	rsi, [rdi+rbx*8]	# vectp.189,
 1511 088f 4C89DB   		mov	rbx, r11	# bnd.180, niters.179
 1512 0892 48C1EB02 		shr	rbx, 2	# bnd.180,
 1513 0896 C4C1796E 		vmovd	xmm1, r9d	# _15, _15
 1513      C9
 1514 089b 48C1E305 		sal	rbx, 5	# _472,
 1515 089f 4901D0   		add	r8, rdx	# tmp532, prolog_loop_niters.178
 1516 08a2 4C8D4BE0 		lea	r9, -32[rbx]	# tmp584,
 1517              	# sieve_extend.c:694:     copy_word++;
 694:sieve_extend.c **** 
 1518              		.loc 1 694 14 view .LVU441
GAS LISTING /tmp/ccRwwoRx.s 			page 46


 1519 08a6 31D2     		xor	edx, edx	# ivtmp.227
 1520 08a8 C5F96E44 		vmovd	xmm0, DWORD PTR -20[rsp]	# _12, %sfp
 1520      24EC
 1521 08ae 4E8D04C7 		lea	r8, [rdi+r8*8]	# vectp.194,
 1522 08b2 49C1E905 		shr	r9, 5	# tmp582,
 1523 08b6 4983C101 		add	r9, 1	# tmp585,
 1524 08ba 4183E107 		and	r9d, 7	# tmp586,
 1525 08be 0F841A01 		je	.L64	#,
 1525      0000
 1526 08c4 4983F901 		cmp	r9, 1	# tmp586,
 1527 08c8 0F84E700 		je	.L153	#,
 1527      0000
 1528 08ce 4983F902 		cmp	r9, 2	# tmp586,
 1529 08d2 0F84BD00 		je	.L154	#,
 1529      0000
 1530 08d8 4983F903 		cmp	r9, 3	# tmp586,
 1531 08dc 0F849200 		je	.L155	#,
 1531      0000
 1532 08e2 4983F904 		cmp	r9, 4	# tmp586,
 1533 08e6 746C     		je	.L156	#,
 1534 08e8 4983F905 		cmp	r9, 5	# tmp586,
 1535 08ec 7445     		je	.L157	#,
 1536 08ee 4983F906 		cmp	r9, 6	# tmp586,
 1537 08f2 741E     		je	.L158	#,
 1538              		.loc 1 710 9 is_stmt 1 view .LVU442
 1539              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1540              		.loc 1 710 58 is_stmt 0 view .LVU443
 1541 08f4 C5FD6F31 		vmovdqa	ymm6, YMMWORD PTR [rcx]	# tmp971, MEM[base: vectp.185_192, index: ivtmp.227_470, offset: 0
 1542 08f8 BA200000 		mov	edx, 32	# ivtmp.227,
 1542      00
 1543              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1544              		.loc 1 710 105 view .LVU444
 1545 08fd C5FE6F3E 		vmovdqu	ymm7, YMMWORD PTR [rsi]	# tmp972, MEM[base: vectp.189_199, index: ivtmp.227_470, offset: 0
 1546              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1547              		.loc 1 710 58 view .LVU445
 1548 0901 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__41.187, tmp971, _15
 1549              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1550              		.loc 1 710 105 view .LVU446
 1551 0905 C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__46.191, tmp972, _12
 1552              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1553              		.loc 1 710 76 view .LVU447
 1554 0909 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__49.192, vect__41.187, vect__46.191
 1555              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1556              		.loc 1 710 31 view .LVU448
 1557 090d C4C17E7F 		vmovdqu	YMMWORD PTR [r8], ymm4	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], vect_
 1557      20
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1558              		.loc 1 709 48 is_stmt 1 view .LVU449
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1559              		.loc 1 709 12 view .LVU450
 1560              	.L158:
 1561              		.loc 1 710 9 view .LVU451
 1562              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1563              		.loc 1 710 58 is_stmt 0 view .LVU452
 1564 0912 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rcx+rdx]	# tmp973, MEM[base: vectp.185_192, index: ivtmp.227_470, offse
 1564      11
 1565              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccRwwoRx.s 			page 47


 1566              		.loc 1 710 105 view .LVU453
 1567 0917 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rsi+rdx]	# tmp974, MEM[base: vectp.189_199, index: ivtmp.227_470, offse
 1567      16
 1568              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1569              		.loc 1 710 58 view .LVU454
 1570 091c C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__41.187, tmp973, _15
 1571              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1572              		.loc 1 710 105 view .LVU455
 1573 0920 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__46.191, tmp974, _12
 1574              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1575              		.loc 1 710 76 view .LVU456
 1576 0924 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__49.192, vect__41.187, vect__46.191
 1576      DA
 1577              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1578              		.loc 1 710 31 view .LVU457
 1579 0929 C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm11	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], 
 1579      1C10
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1580              		.loc 1 709 48 is_stmt 1 view .LVU458
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1581              		.loc 1 709 12 view .LVU459
 1582 092f 4883C220 		add	rdx, 32	# ivtmp.227,
 1583              	.L157:
 1584              		.loc 1 710 9 view .LVU460
 1585              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1586              		.loc 1 710 58 is_stmt 0 view .LVU461
 1587 0933 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rcx+rdx]	# tmp975, MEM[base: vectp.185_192, index: ivtmp.227_470, offs
 1587      11
 1588              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1589              		.loc 1 710 105 view .LVU462
 1590 0938 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rdx]	# tmp976, MEM[base: vectp.189_199, index: ivtmp.227_470, offs
 1590      16
 1591              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1592              		.loc 1 710 58 view .LVU463
 1593 093d C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__41.187, tmp975, _15
 1594              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1595              		.loc 1 710 105 view .LVU464
 1596 0941 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__46.191, tmp976, _12
 1597              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1598              		.loc 1 710 76 view .LVU465
 1599 0945 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__49.192, vect__41.187, vect__46.191
 1599      F7
 1600              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1601              		.loc 1 710 31 view .LVU466
 1602 094a C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm6	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], v
 1602      3410
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1603              		.loc 1 709 48 is_stmt 1 view .LVU467
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1604              		.loc 1 709 12 view .LVU468
 1605 0950 4883C220 		add	rdx, 32	# ivtmp.227,
 1606              	.L156:
 1607              		.loc 1 710 9 view .LVU469
 1608              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1609              		.loc 1 710 58 is_stmt 0 view .LVU470
 1610 0954 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rcx+rdx]	# tmp977, MEM[base: vectp.185_192, index: ivtmp.227_470, offse
 1610      11
GAS LISTING /tmp/ccRwwoRx.s 			page 48


 1611              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1612              		.loc 1 710 105 view .LVU471
 1613 0959 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rdx]	# tmp978, MEM[base: vectp.189_199, index: ivtmp.227_470, offse
 1613      16
 1614              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1615              		.loc 1 710 58 view .LVU472
 1616 095e C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__41.187, tmp977, _15
 1617              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1618              		.loc 1 710 105 view .LVU473
 1619 0962 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__46.191, tmp978, _12
 1620              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1621              		.loc 1 710 76 view .LVU474
 1622 0966 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__49.192, vect__41.187, vect__46.191
 1623              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1624              		.loc 1 710 31 view .LVU475
 1625 096a C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm5	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], v
 1625      2C10
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1626              		.loc 1 709 48 is_stmt 1 view .LVU476
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1627              		.loc 1 709 12 view .LVU477
 1628 0970 4883C220 		add	rdx, 32	# ivtmp.227,
 1629              	.L155:
 1630              		.loc 1 710 9 view .LVU478
 1631              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1632              		.loc 1 710 58 is_stmt 0 view .LVU479
 1633 0974 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rcx+rdx]	# tmp979, MEM[base: vectp.185_192, index: ivtmp.227_470, offse
 1633      11
 1634              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1635              		.loc 1 710 105 view .LVU480
 1636 0979 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rdx]	# tmp980, MEM[base: vectp.189_199, index: ivtmp.227_470, offs
 1636      16
 1637              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1638              		.loc 1 710 58 view .LVU481
 1639 097e C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__41.187, tmp979, _15
 1640              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1641              		.loc 1 710 105 view .LVU482
 1642 0982 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__46.191, tmp980, _12
 1643              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1644              		.loc 1 710 76 view .LVU483
 1645 0986 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__49.192, vect__41.187, vect__46.191
 1645      E3
 1646              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1647              		.loc 1 710 31 view .LVU484
 1648 098b C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm12	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], 
 1648      2410
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1649              		.loc 1 709 48 is_stmt 1 view .LVU485
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1650              		.loc 1 709 12 view .LVU486
 1651 0991 4883C220 		add	rdx, 32	# ivtmp.227,
 1652              	.L154:
 1653              		.loc 1 710 9 view .LVU487
 1654              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1655              		.loc 1 710 58 is_stmt 0 view .LVU488
 1656 0995 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rcx+rdx]	# tmp981, MEM[base: vectp.185_192, index: ivtmp.227_470, offs
 1656      11
GAS LISTING /tmp/ccRwwoRx.s 			page 49


 1657              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1658              		.loc 1 710 105 view .LVU489
 1659 099a C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rdx]	# tmp982, MEM[base: vectp.189_199, index: ivtmp.227_470, offs
 1659      16
 1660              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1661              		.loc 1 710 58 view .LVU490
 1662 099f C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__41.187, tmp981, _15
 1663              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1664              		.loc 1 710 105 view .LVU491
 1665 09a3 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__46.191, tmp982, _12
 1666              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1667              		.loc 1 710 76 view .LVU492
 1668 09a7 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__49.192, vect__41.187, vect__46.191
 1669              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1670              		.loc 1 710 31 view .LVU493
 1671 09ab C4C17E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm2	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], v
 1671      1410
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1672              		.loc 1 709 48 is_stmt 1 view .LVU494
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1673              		.loc 1 709 12 view .LVU495
 1674 09b1 4883C220 		add	rdx, 32	# ivtmp.227,
 1675              	.L153:
 1676              		.loc 1 710 9 view .LVU496
 1677              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1678              		.loc 1 710 58 is_stmt 0 view .LVU497
 1679 09b5 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rcx+rdx]	# tmp983, MEM[base: vectp.185_192, index: ivtmp.227_470, offse
 1679      11
 1680              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1681              		.loc 1 710 105 view .LVU498
 1682 09ba C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rdx]	# tmp984, MEM[base: vectp.189_199, index: ivtmp.227_470, offse
 1682      16
 1683              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1684              		.loc 1 710 58 view .LVU499
 1685 09bf C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__41.187, tmp983, _15
 1686              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1687              		.loc 1 710 105 view .LVU500
 1688 09c3 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__46.191, tmp984, _12
 1689              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1690              		.loc 1 710 76 view .LVU501
 1691 09c7 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__49.192, vect__41.187, vect__46.191
 1692              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1693              		.loc 1 710 31 view .LVU502
 1694 09cb C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm8	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], v
 1694      0410
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1695              		.loc 1 709 48 is_stmt 1 view .LVU503
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1696              		.loc 1 709 12 view .LVU504
 1697 09d1 4883C220 		add	rdx, 32	# ivtmp.227,
 1698 09d5 4839DA   		cmp	rdx, rbx	# ivtmp.227, _472
 1699 09d8 0F842E01 		je	.L195	#,
 1699      0000
 1700              	.L64:
 1701              		.loc 1 710 9 discriminator 2 view .LVU505
 1702              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1703              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU506
GAS LISTING /tmp/ccRwwoRx.s 			page 50


 1704 09de C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rcx+rdx]	# tmp922, MEM[base: vectp.185_192, index: ivtmp.227_470, offse
 1704      11
 1705              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1706              		.loc 1 710 105 discriminator 2 view .LVU507
 1707 09e3 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rdx]	# tmp923, MEM[base: vectp.189_199, index: ivtmp.227_470, offs
 1707      16
 1708              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1709              		.loc 1 710 58 discriminator 2 view .LVU508
 1710 09e8 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__41.187, tmp922, _15
 1711              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1712              		.loc 1 710 105 discriminator 2 view .LVU509
 1713 09ec C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__46.191, tmp923, _12
 1714              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1715              		.loc 1 710 76 discriminator 2 view .LVU510
 1716 09f0 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__49.192, vect__41.187, vect__46.191
 1716      EC
 1717              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1718              		.loc 1 710 31 discriminator 2 view .LVU511
 1719 09f5 C4417E7F 		vmovdqu	YMMWORD PTR [r8+rdx], ymm13	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B], 
 1719      2C10
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1720              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU512
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1721              		.loc 1 709 12 discriminator 2 view .LVU513
 1722              		.loc 1 710 9 discriminator 2 view .LVU514
 1723              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1724              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU515
 1725 09fb C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rcx+rdx]	# tmp924, MEM[base: vectp.185_192, index: ivtmp.227_470, of
 1725      1120
 1726              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1727              		.loc 1 710 105 discriminator 2 view .LVU516
 1728 0a01 C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rsi+rdx]	# tmp925, MEM[base: vectp.189_199, index: ivtmp.227_470, off
 1728      1620
 1729              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1730              		.loc 1 710 58 discriminator 2 view .LVU517
 1731 0a07 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__41.187, tmp924, _15
 1732              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1733              		.loc 1 710 105 discriminator 2 view .LVU518
 1734 0a0b C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__46.191, tmp925, _12
 1735              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1736              		.loc 1 710 76 discriminator 2 view .LVU519
 1737 0a0f C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__49.192, vect__41.187, vect__46.191
 1738              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1739              		.loc 1 710 31 discriminator 2 view .LVU520
 1740 0a13 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r8+rdx], ymm7	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B],
 1740      7C1020
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1741              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU521
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1742              		.loc 1 709 12 discriminator 2 view .LVU522
 1743              		.loc 1 710 9 discriminator 2 view .LVU523
 1744              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1745              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU524
 1746 0a1a C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rcx+rdx]	# tmp926, MEM[base: vectp.185_192, index: ivtmp.227_470, off
 1746      1140
 1747              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1748              		.loc 1 710 105 discriminator 2 view .LVU525
GAS LISTING /tmp/ccRwwoRx.s 			page 51


 1749 0a20 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rsi+rdx]	# tmp927, MEM[base: vectp.189_199, index: ivtmp.227_470, off
 1749      1640
 1750              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1751              		.loc 1 710 58 discriminator 2 view .LVU526
 1752 0a26 C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__41.187, tmp926, _15
 1753              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1754              		.loc 1 710 105 discriminator 2 view .LVU527
 1755 0a2a C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__46.191, tmp927, _12
 1756              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1757              		.loc 1 710 76 discriminator 2 view .LVU528
 1758 0a2e C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__49.192, vect__41.187, vect__46.191
 1758      C8
 1759              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1760              		.loc 1 710 31 discriminator 2 view .LVU529
 1761 0a33 C4417E7F 		vmovdqu	YMMWORD PTR 64[r8+rdx], ymm9	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B],
 1761      4C1040
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1762              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU530
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1763              		.loc 1 709 12 discriminator 2 view .LVU531
 1764              		.loc 1 710 9 discriminator 2 view .LVU532
 1765              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1766              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU533
 1767 0a3a C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rcx+rdx]	# tmp928, MEM[base: vectp.185_192, index: ivtmp.227_470, of
 1767      1160
 1768              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1769              		.loc 1 710 105 discriminator 2 view .LVU534
 1770 0a40 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rsi+rdx]	# tmp929, MEM[base: vectp.189_199, index: ivtmp.227_470, of
 1770      1660
 1771              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1772              		.loc 1 710 58 discriminator 2 view .LVU535
 1773 0a46 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__41.187, tmp928, _15
 1774              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1775              		.loc 1 710 105 discriminator 2 view .LVU536
 1776 0a4a C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__46.191, tmp929, _12
 1777              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1778              		.loc 1 710 76 discriminator 2 view .LVU537
 1779 0a4e C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__49.192, vect__41.187, vect__46.191
 1779      F5
 1780              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1781              		.loc 1 710 31 discriminator 2 view .LVU538
 1782 0a53 C4417E7F 		vmovdqu	YMMWORD PTR 96[r8+rdx], ymm14	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B]
 1782      741060
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1783              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU539
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1784              		.loc 1 709 12 discriminator 2 view .LVU540
 1785              		.loc 1 710 9 discriminator 2 view .LVU541
 1786              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1787              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU542
 1788 0a5a C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rcx+rdx]	# tmp930, MEM[base: vectp.185_192, index: ivtmp.227_470, o
 1788      11800000 
 1788      00
 1789              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1790              		.loc 1 710 105 discriminator 2 view .LVU543
 1791 0a63 C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rsi+rdx]	# tmp931, MEM[base: vectp.189_199, index: ivtmp.227_470, of
 1791      16800000 
GAS LISTING /tmp/ccRwwoRx.s 			page 52


 1791      00
 1792              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1793              		.loc 1 710 58 discriminator 2 view .LVU544
 1794 0a6c C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__41.187, tmp930, _15
 1795              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1796              		.loc 1 710 105 discriminator 2 view .LVU545
 1797 0a70 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__46.191, tmp931, _12
 1798              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1799              		.loc 1 710 76 discriminator 2 view .LVU546
 1800 0a74 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__49.192, vect__41.187, vect__46.191
 1801              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1802              		.loc 1 710 31 discriminator 2 view .LVU547
 1803 0a78 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r8+rdx], ymm4	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B]
 1803      A4108000 
 1803      0000
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1804              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU548
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1805              		.loc 1 709 12 discriminator 2 view .LVU549
 1806              		.loc 1 710 9 discriminator 2 view .LVU550
 1807              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1808              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU551
 1809 0a82 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rcx+rdx]	# tmp932, MEM[base: vectp.185_192, index: ivtmp.227_470, of
 1809      11A00000 
 1809      00
 1810              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1811              		.loc 1 710 105 discriminator 2 view .LVU552
 1812 0a8b C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rsi+rdx]	# tmp933, MEM[base: vectp.189_199, index: ivtmp.227_470, of
 1812      16A00000 
 1812      00
 1813              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1814              		.loc 1 710 58 discriminator 2 view .LVU553
 1815 0a94 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__41.187, tmp932, _15
 1816              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1817              		.loc 1 710 105 discriminator 2 view .LVU554
 1818 0a98 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__46.191, tmp933, _12
 1819              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1820              		.loc 1 710 76 discriminator 2 view .LVU555
 1821 0a9c C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__49.192, vect__41.187, vect__46.191
 1821      D1
 1822              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1823              		.loc 1 710 31 discriminator 2 view .LVU556
 1824 0aa1 C4417E7F 		vmovdqu	YMMWORD PTR 160[r8+rdx], ymm10	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B
 1824      9410A000 
 1824      0000
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1825              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU557
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1826              		.loc 1 709 12 discriminator 2 view .LVU558
 1827              		.loc 1 710 9 discriminator 2 view .LVU559
 1828              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1829              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU560
 1830 0aab C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rcx+rdx]	# tmp934, MEM[base: vectp.185_192, index: ivtmp.227_470, o
 1830      11C00000 
 1830      00
 1831              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1832              		.loc 1 710 105 discriminator 2 view .LVU561
GAS LISTING /tmp/ccRwwoRx.s 			page 53


 1833 0ab4 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rsi+rdx]	# tmp935, MEM[base: vectp.189_199, index: ivtmp.227_470, o
 1833      16C00000 
 1833      00
 1834              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1835              		.loc 1 710 58 discriminator 2 view .LVU562
 1836 0abd C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__41.187, tmp934, _15
 1837              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1838              		.loc 1 710 105 discriminator 2 view .LVU563
 1839 0ac1 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__46.191, tmp935, _12
 1840              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1841              		.loc 1 710 76 discriminator 2 view .LVU564
 1842 0ac5 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__49.192, vect__41.187, vect__46.191
 1842      FE
 1843              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1844              		.loc 1 710 31 discriminator 2 view .LVU565
 1845 0aca C4417E7F 		vmovdqu	YMMWORD PTR 192[r8+rdx], ymm15	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B
 1845      BC10C000 
 1845      0000
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1846              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU566
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1847              		.loc 1 709 12 discriminator 2 view .LVU567
 1848              		.loc 1 710 9 discriminator 2 view .LVU568
 1849              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1850              		.loc 1 710 58 is_stmt 0 discriminator 2 view .LVU569
 1851 0ad4 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rcx+rdx]	# tmp936, MEM[base: vectp.185_192, index: ivtmp.227_470, of
 1851      11E00000 
 1851      00
 1852              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1853              		.loc 1 710 105 discriminator 2 view .LVU570
 1854 0add C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rsi+rdx]	# tmp937, MEM[base: vectp.189_199, index: ivtmp.227_470, of
 1854      16E00000 
 1854      00
 1855              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1856              		.loc 1 710 58 discriminator 2 view .LVU571
 1857 0ae6 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__41.187, tmp936, _15
 1858              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1859              		.loc 1 710 105 discriminator 2 view .LVU572
 1860 0aea C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__46.191, tmp937, _12
 1861              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1862              		.loc 1 710 76 discriminator 2 view .LVU573
 1863 0aee C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__49.192, vect__41.187, vect__46.191
 1864              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1865              		.loc 1 710 31 discriminator 2 view .LVU574
 1866 0af2 C4C17E7F 		vmovdqu	YMMWORD PTR 224[r8+rdx], ymm5	# MEM[base: vectp.194_208, index: ivtmp.227_470, offset: 0B]
 1866      AC10E000 
 1866      0000
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1867              		.loc 1 709 48 is_stmt 1 discriminator 2 view .LVU575
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1868              		.loc 1 709 12 discriminator 2 view .LVU576
 1869 0afc 4881C200 		add	rdx, 256	# ivtmp.227,
 1869      010000
 1870 0b03 4839DA   		cmp	rdx, rbx	# ivtmp.227, _472
 1871 0b06 0F85D2FE 		jne	.L64	#,
 1871      FFFF
 1872              	.L195:
GAS LISTING /tmp/ccRwwoRx.s 			page 54


 1873 0b0c 4C8B6C24 		mov	r13, QWORD PTR -48[rsp]	# source_word, %sfp
 1873      D0
 1874 0b11 4D89DC   		mov	r12, r11	# niters_vector_mult_vf.181, niters.179
 1875 0b14 4983E4FC 		and	r12, -4	# niters_vector_mult_vf.181,
 1876 0b18 4D01E6   		add	r14, r12	# tmp.182, niters_vector_mult_vf.181
 1877 0b1b 4D01E5   		add	r13, r12	# source_word, niters_vector_mult_vf.181
 1878 0b1e 4D39E3   		cmp	r11, r12	# niters.179, niters_vector_mult_vf.181
 1879 0b21 0F844107 		je	.L205	#,
 1879      0000
 1880              	.LVL80:
 1881              		.loc 1 710 9 view .LVU577
 1882              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1883              		.loc 1 709 5 is_stmt 0 view .LVU578
 1884 0b27 488B5C24 		mov	rbx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1884      F8
 1885              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1886              		.loc 1 709 57 view .LVU579
 1887 0b2c 4D8D4E01 		lea	r9, 1[r14]	# copy_word,
 1888              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1889              		.loc 1 710 105 view .LVU580
 1890 0b30 C4A2A9F7 		shlx	rcx, QWORD PTR 8[rdi+r13*8], r10	# tmp542, *_45, shift
 1890      4CEF08
 1891              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1892              		.loc 1 710 58 view .LVU581
 1893 0b37 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r13*8], rax	# tmp544, *_40, shift_flipped
 1893      34EF
 1894              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1895              		.loc 1 710 76 view .LVU582
 1896 0b3d 4809F1   		or	rcx, rsi	# tmp546, tmp544
 1897              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1898              		.loc 1 710 89 view .LVU583
 1899 0b40 4D8D5D01 		lea	r11, 1[r13]	# _43,
 1900              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1901              		.loc 1 710 76 view .LVU584
 1902 0b44 4A890CF7 		mov	QWORD PTR [rdi+r14*8], rcx	# *_49, tmp546
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1903              		.loc 1 709 48 is_stmt 1 view .LVU585
 1904              	.LVL81:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1905              		.loc 1 709 12 view .LVU586
 1906              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1907              		.loc 1 709 5 is_stmt 0 view .LVU587
 1908 0b48 4C39CB   		cmp	rbx, r9	# destination_stop_word, copy_word
 1909 0b4b 0F821707 		jb	.L205	#,
 1909      0000
 1910              		.loc 1 710 9 is_stmt 1 view .LVU588
 1911              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1912              		.loc 1 709 57 is_stmt 0 view .LVU589
 1913 0b51 4983C602 		add	r14, 2	# copy_word,
 1914              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1915              		.loc 1 710 105 view .LVU590
 1916 0b55 C4A2A9F7 		shlx	rdx, QWORD PTR 8[rdi+r11*8], r10	# tmp547, *_32, shift
 1916      54DF08
GAS LISTING /tmp/ccRwwoRx.s 			page 55


 1917              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1918              		.loc 1 710 58 view .LVU591
 1919 0b5c 4E8B04DF 		mov	r8, QWORD PTR [rdi+r11*8]	# *_27, *_27
 1920              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1921              		.loc 1 710 89 view .LVU592
 1922 0b60 4983C502 		add	r13, 2	# _30,
 1923              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1924              		.loc 1 710 58 view .LVU593
 1925 0b64 C442FBF7 		shrx	r12, r8, rax	# tmp549, *_27, shift_flipped
 1925      E0
 1926              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1927              		.loc 1 710 76 view .LVU594
 1928 0b69 4C09E2   		or	rdx, r12	# tmp551, tmp549
 1929 0b6c 4A8914CF 		mov	QWORD PTR [rdi+r9*8], rdx	# *_36, tmp551
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1930              		.loc 1 709 48 is_stmt 1 view .LVU595
 1931              	.LVL82:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1932              		.loc 1 709 12 view .LVU596
 1933              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1934              		.loc 1 709 5 is_stmt 0 view .LVU597
 1935 0b70 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 1936 0b73 0F82EF06 		jb	.L205	#,
 1936      0000
 1937              		.loc 1 710 9 is_stmt 1 view .LVU598
 1938              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1939              		.loc 1 710 105 is_stmt 0 view .LVU599
 1940 0b79 C422A9F7 		shlx	r10, QWORD PTR 8[rdi+r13*8], r10	# tmp552, *_178, shift
 1940      54EF08
 1941              	.LVL83:
 1942              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1943              		.loc 1 710 58 view .LVU600
 1944 0b80 4E8B2CEF 		mov	r13, QWORD PTR [rdi+r13*8]	# *_173, *_173
 1945              	.LVL84:
 1946              		.loc 1 710 58 view .LVU601
 1947 0b84 C4C2FBF7 		shrx	rax, r13, rax	# tmp554, *_173, shift_flipped
 1947      C5
 1948              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 1949              		.loc 1 710 76 view .LVU602
 1950 0b89 4C09D0   		or	rax, r10	# tmp556, tmp552
 1951 0b8c 4A8904F7 		mov	QWORD PTR [rdi+r14*8], rax	# *_182, tmp556
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1952              		.loc 1 709 48 is_stmt 1 view .LVU603
 1953              	.LVL85:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1954              		.loc 1 709 12 view .LVU604
 1955 0b90 C5F877   		vzeroupper
 1956              	.LVL86:
 1957              	.L67:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1958              		.loc 1 709 12 is_stmt 0 view .LVU605
 1959 0b93 4C3B7C24 		cmp	r15, QWORD PTR -16[rsp]	# _124, %sfp
 1959      F0
 1960 0b98 41B80000 		mov	r8d, 0	# tmp563,
 1960      0000
 1961 0b9e 4C8B4C24 		mov	r9, QWORD PTR -32[rsp]	#, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 56


 1961      E0
 1962 0ba3 4D0F46C1 		cmovbe	r8, r9	#,, tmp562
 1963 0ba7 4D01F8   		add	r8, r15	# copy_word, _124
 1964              	.L61:
 711:sieve_extend.c ****     }
 712:sieve_extend.c ****     bitstorage[copy_word] &= chopmask(destination_stop);
 1965              		.loc 1 712 5 is_stmt 1 view .LVU606
 1966              	# sieve_extend.c:712:     bitstorage[copy_word] &= chopmask(destination_stop);
 1967              		.loc 1 712 30 is_stmt 0 view .LVU607
 1968 0baa 448B5C24 		mov	r11d, DWORD PTR -40[rsp]	# tmp565, %sfp
 1968      D8
 1969 0baf 48C7C3FF 		mov	rbx, -1	# tmp568,
 1969      FFFFFF
 1970 0bb6 41F7D3   		not	r11d	# tmp565
 1971 0bb9 C462A3F7 		shrx	r15, rbx, r11	# tmp567, tmp568, tmp565
 1971      FB
 1972              	# sieve_extend.c:712:     bitstorage[copy_word] &= chopmask(destination_stop);
 1973              		.loc 1 712 27 view .LVU608
 1974 0bbe 4E213CC7 		and	QWORD PTR [rdi+r8*8], r15	# *_51, tmp567
 1975              	.L206:
 1976              	# sieve_extend.c:714: }
 713:sieve_extend.c **** 
 714:sieve_extend.c **** }
 1977              		.loc 1 714 1 view .LVU609
 1978 0bc2 488D65D8 		lea	rsp, -40[rbp]	#,
 1979              	.LVL87:
 1980              		.loc 1 714 1 view .LVU610
 1981 0bc6 5B       		pop	rbx	#
 1982 0bc7 415C     		pop	r12	#
 1983 0bc9 415D     		pop	r13	#
 1984 0bcb 415E     		pop	r14	#
 1985 0bcd 415F     		pop	r15	#
 1986 0bcf 5D       		pop	rbp	#
 1987              		.cfi_remember_state
 1988              		.cfi_def_cfa 7, 8
 1989              	.LVL88:
 1990              		.loc 1 714 1 view .LVU611
 1991 0bd0 C3       		ret	
 1992              	.LVL89:
 1993              		.p2align 4,,7
 1994 0bd1 0F1F8000 		.p2align 3
 1994      000000
 1995              	.L208:
 1996              		.cfi_restore_state
 1997              	.LBB315:
 699:sieve_extend.c **** 
 1998              		.loc 1 699 9 is_stmt 1 view .LVU612
 1999              	.LBB316:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2000              		.loc 1 703 14 view .LVU613
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2001              		.loc 1 703 40 view .LVU614
 2002              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2003              		.loc 1 703 9 is_stmt 0 view .LVU615
 2004 0bd8 4D29C7   		sub	r15, r8	# loop_distance, copy_word
 2005              	.LVL90:
GAS LISTING /tmp/ccRwwoRx.s 			page 57


 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2006              		.loc 1 703 9 view .LVU616
 2007 0bdb 4C897C24 		mov	QWORD PTR -32[rsp], r15	# %sfp, loop_distance
 2007      E0
 2008 0be0 0F842904 		je	.L54	#,
 2008      0000
 2009 0be6 4C89F2   		mov	rdx, r14	# tmp412, _10
 2010              	.LVL91:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2011              		.loc 1 703 9 view .LVU617
 2012 0be9 4983EF01 		sub	r15, 1	# tmp414,
 2013              	.LVL92:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2014              		.loc 1 703 9 view .LVU618
 2015 0bed 48C1EA03 		shr	rdx, 3	# tmp412,
 2016 0bf1 BB050000 		mov	ebx, 5	# tmp416,
 2016      00
 2017 0bf6 48F7DA   		neg	rdx	# tmp413
 2018 0bf9 83E203   		and	edx, 3	# prolog_loop_niters.197,
 2019 0bfc 4C8D5A03 		lea	r11, 3[rdx]	# tmp415,
 2020 0c00 4983FB05 		cmp	r11, 5	# tmp415,
 2021 0c04 4C0F42DB 		cmovb	r11, rbx	# tmp415,, tmp588, tmp416
 2022 0c08 4D39DF   		cmp	r15, r11	# tmp414, tmp588
 2023 0c0b 0F82A506 		jb	.L68	#,
 2023      0000
 2024 0c11 4885D2   		test	rdx, rdx	# prolog_loop_niters.197
 2025 0c14 0F843E06 		je	.L69	#,
 2025      0000
 704:sieve_extend.c ****         }
 2026              		.loc 1 704 13 is_stmt 1 view .LVU619
 2027              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2028              		.loc 1 704 115 is_stmt 0 view .LVU620
 2029 0c1a 4E8B642F 		mov	r12, QWORD PTR 8[rdi+r13]	# *_433, *_433
 2029      08
 2030 0c1f C442A9F7 		shlx	r13, r12, r10	# tmp417, *_433, shift
 2030      EC
 2031              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2032              		.loc 1 704 66 view .LVU621
 2033 0c24 4D8B36   		mov	r14, QWORD PTR [r14]	# *_10, *_10
 2034 0c27 C4C2FBF7 		shrx	rbx, r14, rax	# tmp419, *_10, shift_flipped
 2034      DE
 2035              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2036              		.loc 1 704 84 view .LVU622
 2037 0c2c 4909DD   		or	r13, rbx	# tmp421, tmp419
 2038 0c2f 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.197,
 2039              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2040              		.loc 1 704 111 view .LVU623
 2041 0c33 4C8D5E01 		lea	r11, 1[rsi]	# tmp571,
 2042              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2043              		.loc 1 703 59 view .LVU624
 2044 0c37 41BF0100 		mov	r15d, 1	# i,
 2044      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 58


 2045              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2046              		.loc 1 704 84 view .LVU625
 2047 0c3d 4E892CC7 		mov	QWORD PTR [rdi+r8*8], r13	# *_438, tmp421
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2048              		.loc 1 703 58 is_stmt 1 view .LVU626
 2049              	.LVL93:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2050              		.loc 1 703 40 view .LVU627
 2051 0c41 7443     		je	.L56	#,
 704:sieve_extend.c ****         }
 2052              		.loc 1 704 13 view .LVU628
 2053              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2054              		.loc 1 704 115 is_stmt 0 view .LVU629
 2055 0c43 C422A9F7 		shlx	r15, QWORD PTR 8[rdi+r11*8], r10	# tmp423, *_453, shift
 2055      7CDF08
 2056              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2057              		.loc 1 704 66 view .LVU630
 2058 0c4a C422FBF7 		shrx	r12, QWORD PTR [rdi+r11*8], rax	# tmp425, *_448, shift_flipped
 2058      24DF
 2059              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2060              		.loc 1 704 84 view .LVU631
 2061 0c50 4D09E7   		or	r15, r12	# tmp427, tmp425
 2062 0c53 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.197,
 2063 0c57 4C897CCF 		mov	QWORD PTR 16[rdi+rcx*8], r15	# *_458, tmp427
 2063      10
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2064              		.loc 1 703 58 is_stmt 1 view .LVU632
 2065              	.LVL94:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2066              		.loc 1 703 40 view .LVU633
 2067              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2068              		.loc 1 703 59 is_stmt 0 view .LVU634
 2069 0c5c 41BF0200 		mov	r15d, 2	# i,
 2069      0000
 2070 0c62 7522     		jne	.L56	#,
 704:sieve_extend.c ****         }
 2071              		.loc 1 704 13 is_stmt 1 view .LVU635
 2072              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2073              		.loc 1 704 62 is_stmt 0 view .LVU636
 2074 0c64 4C8D6E02 		lea	r13, 2[rsi]	# tmp428,
 2075              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2076              		.loc 1 704 115 view .LVU637
 2077 0c68 C422A9F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r10	# tmp430, *_232, shift
 2077      74EF08
 2078              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2079              		.loc 1 704 66 view .LVU638
 2080 0c6f 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_227, *_227
 2081 0c73 C462FBF7 		shrx	r15, rbx, rax	# tmp432, *_227, shift_flipped
 2081      FB
GAS LISTING /tmp/ccRwwoRx.s 			page 59


 2082              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2083              		.loc 1 704 84 view .LVU639
 2084 0c78 4D09FE   		or	r14, r15	# tmp434, tmp432
 2085              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2086              		.loc 1 703 59 view .LVU640
 2087 0c7b 41BF0300 		mov	r15d, 3	# i,
 2087      0000
 2088              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2089              		.loc 1 704 84 view .LVU641
 2090 0c81 4C8974CF 		mov	QWORD PTR 24[rdi+rcx*8], r14	# *_237, tmp434
 2090      18
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2091              		.loc 1 703 58 is_stmt 1 view .LVU642
 2092              	.LVL95:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2093              		.loc 1 703 40 view .LVU643
 2094              	.L56:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2095              		.loc 1 703 40 is_stmt 0 view .LVU644
 2096 0c86 4C8B6C24 		mov	r13, QWORD PTR -32[rsp]	# niters.198, %sfp
 2096      E0
 2097 0c8b 488D0C16 		lea	rcx, [rsi+rdx]	# tmp435,
 2098 0c8f 488D1CCF 		lea	rbx, [rdi+rcx*8]	# vectp.203,
 2099 0c93 4901D3   		add	r11, rdx	# tmp438, prolog_loop_niters.197
 2100 0c96 C4C1796E 		vmovd	xmm1, r9d	# _15, _15
 2100      C9
 2101 0c9b 4E8D1CDF 		lea	r11, [rdi+r11*8]	# vectp.207,
 2102 0c9f C5F96E44 		vmovd	xmm0, DWORD PTR -20[rsp]	# _12, %sfp
 2102      24EC
 2103 0ca5 4929D5   		sub	r13, rdx	# niters.198, prolog_loop_niters.197
 2104 0ca8 4D89EE   		mov	r14, r13	# bnd.199, niters.198
 2105 0cab 4C01C2   		add	rdx, r8	# tmp440, copy_word
 2106 0cae 49C1EE02 		shr	r14, 2	# bnd.199,
 2107 0cb2 4C8D24D7 		lea	r12, [rdi+rdx*8]	# vectp.212,
 2108 0cb6 49C1E605 		sal	r14, 5	# bnd.199,
 2109              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2110              		.loc 1 703 33 view .LVU645
 2111 0cba 31D2     		xor	edx, edx	# ivtmp.237
 2112 0cbc 498D4EE0 		lea	rcx, -32[r14]	# tmp578,
 2113 0cc0 48C1E905 		shr	rcx, 5	# tmp576,
 2114 0cc4 4883C101 		add	rcx, 1	# tmp579,
 2115 0cc8 83E107   		and	ecx, 7	# tmp580,
 2116 0ccb 0F840301 		je	.L58	#,
 2116      0000
 2117 0cd1 4883F901 		cmp	rcx, 1	# tmp580,
 2118 0cd5 0F84CE00 		je	.L147	#,
 2118      0000
 2119 0cdb 4883F902 		cmp	rcx, 2	# tmp580,
 2120 0cdf 0F84A200 		je	.L148	#,
 2120      0000
 2121 0ce5 4883F903 		cmp	rcx, 3	# tmp580,
 2122 0ce9 747B     		je	.L149	#,
 2123 0ceb 4883F904 		cmp	rcx, 4	# tmp580,
GAS LISTING /tmp/ccRwwoRx.s 			page 60


 2124 0cef 7453     		je	.L150	#,
 2125 0cf1 4883F905 		cmp	rcx, 5	# tmp580,
 2126 0cf5 742C     		je	.L151	#,
 2127 0cf7 4883F906 		cmp	rcx, 6	# tmp580,
 2128 0cfb 0F858F05 		jne	.L209	#,
 2128      0000
 2129              	.L152:
 704:sieve_extend.c ****         }
 2130              		.loc 1 704 13 is_stmt 1 view .LVU646
 2131              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2132              		.loc 1 704 66 is_stmt 0 view .LVU647
 2133 0d01 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rbx+rdx]	# tmp959, MEM[base: vectp.203_276, index: ivtmp.237_473, offs
 2133      13
 2134              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2135              		.loc 1 704 115 view .LVU648
 2136 0d06 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp960, MEM[base: vectp.207_283, index: ivtmp.237_473, offs
 2136      3413
 2137              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2138              		.loc 1 704 66 view .LVU649
 2139 0d0c C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__28.205, tmp959, _15
 2140              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2141              		.loc 1 704 115 view .LVU650
 2142 0d10 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__33.209, tmp960, _12
 2143              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2144              		.loc 1 704 84 view .LVU651
 2145 0d14 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__37.210, vect__28.205, vect__33.209
 2145      F7
 2146              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2147              		.loc 1 704 37 view .LVU652
 2148 0d19 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], 
 2148      3414
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2149              		.loc 1 703 58 is_stmt 1 view .LVU653
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2150              		.loc 1 703 40 view .LVU654
 2151 0d1f 4883C220 		add	rdx, 32	# ivtmp.237,
 2152              	.L151:
 704:sieve_extend.c ****         }
 2153              		.loc 1 704 13 view .LVU655
 2154              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2155              		.loc 1 704 66 is_stmt 0 view .LVU656
 2156 0d23 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rbx+rdx]	# tmp961, MEM[base: vectp.203_276, index: ivtmp.237_473, offse
 2156      13
 2157              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2158              		.loc 1 704 115 view .LVU657
 2159 0d28 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp962, MEM[base: vectp.207_283, index: ivtmp.237_473, offse
 2159      2413
 2160              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 61


 2161              		.loc 1 704 66 view .LVU658
 2162 0d2e C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__28.205, tmp961, _15
 2163              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2164              		.loc 1 704 115 view .LVU659
 2165 0d32 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__33.209, tmp962, _12
 2166              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2167              		.loc 1 704 84 view .LVU660
 2168 0d36 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__37.210, vect__28.205, vect__33.209
 2169              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2170              		.loc 1 704 37 view .LVU661
 2171 0d3a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm8	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], 
 2171      0414
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2172              		.loc 1 703 58 is_stmt 1 view .LVU662
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2173              		.loc 1 703 40 view .LVU663
 2174 0d40 4883C220 		add	rdx, 32	# ivtmp.237,
 2175              	.L150:
 704:sieve_extend.c ****         }
 2176              		.loc 1 704 13 view .LVU664
 2177              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2178              		.loc 1 704 66 is_stmt 0 view .LVU665
 2179 0d44 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rbx+rdx]	# tmp963, MEM[base: vectp.203_276, index: ivtmp.237_473, offse
 2179      13
 2180              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2181              		.loc 1 704 115 view .LVU666
 2182 0d49 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp964, MEM[base: vectp.207_283, index: ivtmp.237_473, offse
 2182      1C13
 2183              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2184              		.loc 1 704 66 view .LVU667
 2185 0d4f C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__28.205, tmp963, _15
 2186              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2187              		.loc 1 704 115 view .LVU668
 2188 0d53 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__33.209, tmp964, _12
 2189              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2190              		.loc 1 704 84 view .LVU669
 2191 0d57 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__37.210, vect__28.205, vect__33.209
 2191      E3
 2192              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2193              		.loc 1 704 37 view .LVU670
 2194 0d5c C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm12	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B],
 2194      2414
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2195              		.loc 1 703 58 is_stmt 1 view .LVU671
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2196              		.loc 1 703 40 view .LVU672
 2197 0d62 4883C220 		add	rdx, 32	# ivtmp.237,
 2198              	.L149:
GAS LISTING /tmp/ccRwwoRx.s 			page 62


 704:sieve_extend.c ****         }
 2199              		.loc 1 704 13 view .LVU673
 2200              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2201              		.loc 1 704 66 is_stmt 0 view .LVU674
 2202 0d66 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rbx+rdx]	# tmp965, MEM[base: vectp.203_276, index: ivtmp.237_473, offs
 2202      13
 2203              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2204              		.loc 1 704 115 view .LVU675
 2205 0d6b C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp966, MEM[base: vectp.207_283, index: ivtmp.237_473, offs
 2205      3C13
 2206              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2207              		.loc 1 704 66 view .LVU676
 2208 0d71 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__28.205, tmp965, _15
 2209              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2210              		.loc 1 704 115 view .LVU677
 2211 0d75 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__33.209, tmp966, _12
 2212              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2213              		.loc 1 704 84 view .LVU678
 2214 0d79 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__37.210, vect__28.205, vect__33.209
 2215              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2216              		.loc 1 704 37 view .LVU679
 2217 0d7d C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], 
 2217      1414
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2218              		.loc 1 703 58 is_stmt 1 view .LVU680
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2219              		.loc 1 703 40 view .LVU681
 2220 0d83 4883C220 		add	rdx, 32	# ivtmp.237,
 2221              	.L148:
 704:sieve_extend.c ****         }
 2222              		.loc 1 704 13 view .LVU682
 2223              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2224              		.loc 1 704 66 is_stmt 0 view .LVU683
 2225 0d87 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rbx+rdx]	# tmp967, MEM[base: vectp.203_276, index: ivtmp.237_473, offse
 2225      13
 2226              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2227              		.loc 1 704 115 view .LVU684
 2228 0d8c C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp968, MEM[base: vectp.207_283, index: ivtmp.237_473, offse
 2228      2C13
 2229              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2230              		.loc 1 704 66 view .LVU685
 2231 0d92 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__28.205, tmp967, _15
 2232              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2233              		.loc 1 704 115 view .LVU686
 2234 0d96 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__33.209, tmp968, _12
 2235              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 63


 2236              		.loc 1 704 84 view .LVU687
 2237 0d9a C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__37.210, vect__28.205, vect__33.209
 2237      C8
 2238              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2239              		.loc 1 704 37 view .LVU688
 2240 0d9f C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm9	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], 
 2240      0C14
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2241              		.loc 1 703 58 is_stmt 1 view .LVU689
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2242              		.loc 1 703 40 view .LVU690
 2243 0da5 4883C220 		add	rdx, 32	# ivtmp.237,
 2244              	.L147:
 704:sieve_extend.c ****         }
 2245              		.loc 1 704 13 view .LVU691
 2246              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2247              		.loc 1 704 66 is_stmt 0 view .LVU692
 2248 0da9 C57D6F14 		vmovdqa	ymm10, YMMWORD PTR [rbx+rdx]	# tmp969, MEM[base: vectp.203_276, index: ivtmp.237_473, offs
 2248      13
 2249              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2250              		.loc 1 704 115 view .LVU693
 2251 0dae C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp970, MEM[base: vectp.207_283, index: ivtmp.237_473, offse
 2251      1C13
 2252              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2253              		.loc 1 704 66 view .LVU694
 2254 0db4 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__28.205, tmp969, _15
 2255              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2256              		.loc 1 704 115 view .LVU695
 2257 0db8 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__33.209, tmp970, _12
 2258              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2259              		.loc 1 704 84 view .LVU696
 2260 0dbc C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__37.210, vect__28.205, vect__33.209
 2260      EC
 2261              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2262              		.loc 1 704 37 view .LVU697
 2263 0dc1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm13	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B],
 2263      2C14
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2264              		.loc 1 703 58 is_stmt 1 view .LVU698
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2265              		.loc 1 703 40 view .LVU699
 2266 0dc7 4883C220 		add	rdx, 32	# ivtmp.237,
 2267 0dcb 4C39F2   		cmp	rdx, r14	# ivtmp.237, _475
 2268 0dce 0F843601 		je	.L194	#,
 2268      0000
 2269              	.L58:
 704:sieve_extend.c ****         }
 2270              		.loc 1 704 13 discriminator 3 view .LVU700
 2271              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 64


 2272              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU701
 2273 0dd4 C57D6F34 		vmovdqa	ymm14, YMMWORD PTR [rbx+rdx]	# tmp884, MEM[base: vectp.203_276, index: ivtmp.237_473, offs
 2273      13
 2274              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2275              		.loc 1 704 115 discriminator 3 view .LVU702
 2276 0dd9 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp885, MEM[base: vectp.207_283, index: ivtmp.237_473, offse
 2276      3413
 2277              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2278              		.loc 1 704 66 discriminator 3 view .LVU703
 2279 0ddf C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__28.205, tmp884, _15
 2280              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2281              		.loc 1 704 115 discriminator 3 view .LVU704
 2282 0de3 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__33.209, tmp885, _12
 2283              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2284              		.loc 1 704 84 discriminator 3 view .LVU705
 2285 0de7 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__37.210, vect__28.205, vect__33.209
 2286              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2287              		.loc 1 704 37 discriminator 3 view .LVU706
 2288 0deb C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], 
 2288      3C14
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2289              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU707
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2290              		.loc 1 703 40 discriminator 3 view .LVU708
 704:sieve_extend.c ****         }
 2291              		.loc 1 704 13 discriminator 3 view .LVU709
 2292              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2293              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU710
 2294 0df1 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 32[rbx+rdx]	# tmp886, MEM[base: vectp.203_276, index: ivtmp.237_473, off
 2294      1320
 2295              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2296              		.loc 1 704 115 discriminator 3 view .LVU711
 2297 0df7 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r11+rdx]	# tmp887, MEM[base: vectp.207_283, index: ivtmp.237_473, off
 2297      441320
 2298              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2299              		.loc 1 704 66 discriminator 3 view .LVU712
 2300 0dfe C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__28.205, tmp886, _15
 2301              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2302              		.loc 1 704 115 discriminator 3 view .LVU713
 2303 0e02 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__33.209, tmp887, _12
 2304              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2305              		.loc 1 704 84 discriminator 3 view .LVU714
 2306 0e06 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__37.210, vect__28.205, vect__33.209
 2306      D1
 2307              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2308              		.loc 1 704 37 discriminator 3 view .LVU715
GAS LISTING /tmp/ccRwwoRx.s 			page 65


 2309 0e0b C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm10	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B
 2309      541420
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2310              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU716
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2311              		.loc 1 703 40 discriminator 3 view .LVU717
 704:sieve_extend.c ****         }
 2312              		.loc 1 704 13 discriminator 3 view .LVU718
 2313              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2314              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU719
 2315 0e12 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 64[rbx+rdx]	# tmp888, MEM[base: vectp.203_276, index: ivtmp.237_473, of
 2315      1340
 2316              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2317              		.loc 1 704 115 discriminator 3 view .LVU720
 2318 0e18 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp889, MEM[base: vectp.207_283, index: ivtmp.237_473, off
 2318      5C1340
 2319              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2320              		.loc 1 704 66 discriminator 3 view .LVU721
 2321 0e1f C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__28.205, tmp888, _15
 2322              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2323              		.loc 1 704 115 discriminator 3 view .LVU722
 2324 0e23 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__33.209, tmp889, _12
 2325              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2326              		.loc 1 704 84 discriminator 3 view .LVU723
 2327 0e27 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__37.210, vect__28.205, vect__33.209
 2327      F5
 2328              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2329              		.loc 1 704 37 discriminator 3 view .LVU724
 2330 0e2c C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm14	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B
 2330      741440
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2331              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU725
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2332              		.loc 1 703 40 discriminator 3 view .LVU726
 704:sieve_extend.c ****         }
 2333              		.loc 1 704 13 discriminator 3 view .LVU727
 2334              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2335              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU728
 2336 0e33 C57D6F7C 		vmovdqa	ymm15, YMMWORD PTR 96[rbx+rdx]	# tmp890, MEM[base: vectp.203_276, index: ivtmp.237_473, of
 2336      1360
 2337              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2338              		.loc 1 704 115 discriminator 3 view .LVU729
 2339 0e39 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp891, MEM[base: vectp.207_283, index: ivtmp.237_473, off
 2339      541360
 2340              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2341              		.loc 1 704 66 discriminator 3 view .LVU730
 2342 0e40 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__28.205, tmp890, _15
 2343              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
GAS LISTING /tmp/ccRwwoRx.s 			page 66


 704:sieve_extend.c ****         }
 2344              		.loc 1 704 115 discriminator 3 view .LVU731
 2345 0e44 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__33.209, tmp891, _12
 2346              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2347              		.loc 1 704 84 discriminator 3 view .LVU732
 2348 0e48 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__37.210, vect__28.205, vect__33.209
 2349              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2350              		.loc 1 704 37 discriminator 3 view .LVU733
 2351 0e4c C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm4	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B]
 2351      641460
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2352              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU734
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2353              		.loc 1 703 40 discriminator 3 view .LVU735
 704:sieve_extend.c ****         }
 2354              		.loc 1 704 13 discriminator 3 view .LVU736
 2355              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2356              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU737
 2357 0e53 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 128[rbx+rdx]	# tmp892, MEM[base: vectp.203_276, index: ivtmp.237_473, of
 2357      13800000 
 2357      00
 2358              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2359              		.loc 1 704 115 discriminator 3 view .LVU738
 2360 0e5c C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp893, MEM[base: vectp.207_283, index: ivtmp.237_473, of
 2360      8C138000 
 2360      0000
 2361              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2362              		.loc 1 704 66 discriminator 3 view .LVU739
 2363 0e66 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__28.205, tmp892, _15
 2364              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2365              		.loc 1 704 115 discriminator 3 view .LVU740
 2366 0e6a C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__33.209, tmp893, _12
 2367              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2368              		.loc 1 704 84 discriminator 3 view .LVU741
 2369 0e6e C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__37.210, vect__28.205, vect__33.209
 2369      DA
 2370              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2371              		.loc 1 704 37 discriminator 3 view .LVU742
 2372 0e73 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0
 2372      9C148000 
 2372      0000
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2373              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU743
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2374              		.loc 1 703 40 discriminator 3 view .LVU744
 704:sieve_extend.c ****         }
 2375              		.loc 1 704 13 discriminator 3 view .LVU745
 2376              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 67


 2377              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU746
 2378 0e7d C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rbx+rdx]	# tmp894, MEM[base: vectp.203_276, index: ivtmp.237_473, o
 2378      13A00000 
 2378      00
 2379              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2380              		.loc 1 704 115 discriminator 3 view .LVU747
 2381 0e86 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp895, MEM[base: vectp.207_283, index: ivtmp.237_473, of
 2381      9C13A000 
 2381      0000
 2382              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2383              		.loc 1 704 66 discriminator 3 view .LVU748
 2384 0e90 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__28.205, tmp894, _15
 2385              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2386              		.loc 1 704 115 discriminator 3 view .LVU749
 2387 0e94 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__33.209, tmp895, _12
 2388              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2389              		.loc 1 704 84 discriminator 3 view .LVU750
 2390 0e98 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__37.210, vect__28.205, vect__33.209
 2390      FE
 2391              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2392              		.loc 1 704 37 discriminator 3 view .LVU751
 2393 0e9d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm15	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0
 2393      BC14A000 
 2393      0000
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2394              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU752
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2395              		.loc 1 703 40 discriminator 3 view .LVU753
 704:sieve_extend.c ****         }
 2396              		.loc 1 704 13 discriminator 3 view .LVU754
 2397              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2398              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU755
 2399 0ea7 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 192[rbx+rdx]	# tmp896, MEM[base: vectp.203_276, index: ivtmp.237_473, of
 2399      13C00000 
 2399      00
 2400              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2401              		.loc 1 704 115 discriminator 3 view .LVU756
 2402 0eb0 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp897, MEM[base: vectp.207_283, index: ivtmp.237_473, of
 2402      BC13C000 
 2402      0000
 2403              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2404              		.loc 1 704 66 discriminator 3 view .LVU757
 2405 0eba C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__28.205, tmp896, _15
 2406              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2407              		.loc 1 704 115 discriminator 3 view .LVU758
 2408 0ebe C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__33.209, tmp897, _12
 2409              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 68


 2410              		.loc 1 704 84 discriminator 3 view .LVU759
 2411 0ec2 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__37.210, vect__28.205, vect__33.209
 2412              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2413              		.loc 1 704 37 discriminator 3 view .LVU760
 2414 0ec6 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm5	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B
 2414      AC14C000 
 2414      0000
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2415              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU761
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2416              		.loc 1 703 40 discriminator 3 view .LVU762
 704:sieve_extend.c ****         }
 2417              		.loc 1 704 13 discriminator 3 view .LVU763
 2418              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2419              		.loc 1 704 66 is_stmt 0 discriminator 3 view .LVU764
 2420 0ed0 C57D6F84 		vmovdqa	ymm8, YMMWORD PTR 224[rbx+rdx]	# tmp898, MEM[base: vectp.203_276, index: ivtmp.237_473, of
 2420      13E00000 
 2420      00
 2421              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2422              		.loc 1 704 115 discriminator 3 view .LVU765
 2423 0ed9 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp899, MEM[base: vectp.207_283, index: ivtmp.237_473, o
 2423      9413E000 
 2423      0000
 2424              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2425              		.loc 1 704 66 discriminator 3 view .LVU766
 2426 0ee3 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__28.205, tmp898, _15
 2427              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2428              		.loc 1 704 115 discriminator 3 view .LVU767
 2429 0ee7 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__33.209, tmp899, _12
 2430              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2431              		.loc 1 704 84 discriminator 3 view .LVU768
 2432 0eeb C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__37.210, vect__28.205, vect__33.209
 2432      E3
 2433              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2434              		.loc 1 704 37 discriminator 3 view .LVU769
 2435 0ef0 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm12	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0
 2435      A414E000 
 2435      0000
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2436              		.loc 1 703 58 is_stmt 1 discriminator 3 view .LVU770
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2437              		.loc 1 703 40 discriminator 3 view .LVU771
 2438 0efa 4881C200 		add	rdx, 256	# ivtmp.237,
 2438      010000
 2439 0f01 4C39F2   		cmp	rdx, r14	# ivtmp.237, _475
 2440 0f04 0F85CAFE 		jne	.L58	#,
 2440      FFFF
 2441              	.L194:
 2442 0f0a 4C89EB   		mov	rbx, r13	# niters_vector_mult_vf.200, niters.198
 2443 0f0d 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.200,
GAS LISTING /tmp/ccRwwoRx.s 			page 69


 2444 0f11 4901DF   		add	r15, rbx	# tmp.201, niters_vector_mult_vf.200
 2445 0f14 4939DD   		cmp	r13, rbx	# niters.198, niters_vector_mult_vf.200
 2446 0f17 0F846B03 		je	.L210	#,
 2446      0000
 2447 0f1d C5F877   		vzeroupper
 2448              	.L55:
 2449              	.LVL96:
 704:sieve_extend.c ****         }
 2450              		.loc 1 704 13 view .LVU772
 2451              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2452              		.loc 1 703 9 is_stmt 0 view .LVU773
 2453 0f20 488B5C24 		mov	rbx, QWORD PTR -32[rsp]	# loop_distance, %sfp
 2453      E0
 2454              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2455              		.loc 1 704 62 view .LVU774
 2456 0f25 4E8D2C3E 		lea	r13, [rsi+r15]	# tmp450,
 2457              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2458              		.loc 1 703 59 view .LVU775
 2459 0f29 498D5701 		lea	rdx, 1[r15]	# i,
 2460              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2461              		.loc 1 704 115 view .LVU776
 2462 0f2d C422A9F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r10	# tmp452, *_342, shift
 2462      74EF08
 2463              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2464              		.loc 1 704 66 view .LVU777
 2465 0f34 4E8B1CEF 		mov	r11, QWORD PTR [rdi+r13*8]	# *_337, *_337
 2466              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2467              		.loc 1 704 23 view .LVU778
 2468 0f38 4F8D2438 		lea	r12, [r8+r15]	# tmp451,
 2469              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2470              		.loc 1 704 66 view .LVU779
 2471 0f3c C4C2FBF7 		shrx	rcx, r11, rax	# tmp454, *_337, shift_flipped
 2471      CB
 2472              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2473              		.loc 1 704 84 view .LVU780
 2474 0f41 4909CE   		or	r14, rcx	# tmp456, tmp454
 2475 0f44 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_347, tmp456
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2476              		.loc 1 703 58 is_stmt 1 view .LVU781
 2477              	.LVL97:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2478              		.loc 1 703 40 view .LVU782
 2479              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2480              		.loc 1 703 9 is_stmt 0 view .LVU783
 2481 0f48 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2482 0f4b 0F86BE00 		jbe	.L54	#,
 2482      0000
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 70


 2483              		.loc 1 704 13 is_stmt 1 view .LVU784
 2484              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2485              		.loc 1 704 62 is_stmt 0 view .LVU785
 2486 0f51 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp457,
 2487              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2488              		.loc 1 704 23 view .LVU786
 2489 0f55 4C01C2   		add	rdx, r8	# tmp458, copy_word
 2490              	.LVL98:
 2491              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2492              		.loc 1 704 66 view .LVU787
 2493 0f58 4E8B34EF 		mov	r14, QWORD PTR [rdi+r13*8]	# *_355, *_355
 2494              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2495              		.loc 1 704 115 view .LVU788
 2496 0f5c C422A9F7 		shlx	r12, QWORD PTR 8[rdi+r13*8], r10	# tmp459, *_360, shift
 2496      64EF08
 2497              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2498              		.loc 1 704 66 view .LVU789
 2499 0f63 C442FBF7 		shrx	r11, r14, rax	# tmp461, *_355, shift_flipped
 2499      DE
 2500              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2501              		.loc 1 704 84 view .LVU790
 2502 0f68 4D09DC   		or	r12, r11	# tmp463, tmp461
 2503 0f6b 4C8924D7 		mov	QWORD PTR [rdi+rdx*8], r12	# *_365, tmp463
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2504              		.loc 1 703 58 is_stmt 1 view .LVU791
 2505              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2506              		.loc 1 703 59 is_stmt 0 view .LVU792
 2507 0f6f 498D5702 		lea	rdx, 2[r15]	# i,
 2508              	.LVL99:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2509              		.loc 1 703 40 is_stmt 1 view .LVU793
 2510              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2511              		.loc 1 703 9 is_stmt 0 view .LVU794
 2512 0f73 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2513 0f76 0F869300 		jbe	.L54	#,
 2513      0000
 704:sieve_extend.c ****         }
 2514              		.loc 1 704 13 is_stmt 1 view .LVU795
 2515              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2516              		.loc 1 704 62 is_stmt 0 view .LVU796
 2517 0f7c 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp464,
 2518              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2519              		.loc 1 704 23 view .LVU797
 2520 0f80 4C01C2   		add	rdx, r8	# tmp465, copy_word
 2521              	.LVL100:
 2522              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 71


 2523              		.loc 1 704 66 view .LVU798
 2524 0f83 4E8B24EF 		mov	r12, QWORD PTR [rdi+r13*8]	# *_373, *_373
 2525              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2526              		.loc 1 704 115 view .LVU799
 2527 0f87 C4A2A9F7 		shlx	rcx, QWORD PTR 8[rdi+r13*8], r10	# tmp466, *_378, shift
 2527      4CEF08
 2528              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2529              		.loc 1 704 66 view .LVU800
 2530 0f8e C442FBF7 		shrx	r14, r12, rax	# tmp468, *_373, shift_flipped
 2530      F4
 2531              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2532              		.loc 1 704 84 view .LVU801
 2533 0f93 4C09F1   		or	rcx, r14	# tmp470, tmp468
 2534 0f96 48890CD7 		mov	QWORD PTR [rdi+rdx*8], rcx	# *_383, tmp470
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2535              		.loc 1 703 58 is_stmt 1 view .LVU802
 2536              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2537              		.loc 1 703 59 is_stmt 0 view .LVU803
 2538 0f9a 498D5703 		lea	rdx, 3[r15]	# i,
 2539              	.LVL101:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2540              		.loc 1 703 40 is_stmt 1 view .LVU804
 2541              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2542              		.loc 1 703 9 is_stmt 0 view .LVU805
 2543 0f9e 4839D3   		cmp	rbx, rdx	# loop_distance, i
 2544 0fa1 766C     		jbe	.L54	#,
 704:sieve_extend.c ****         }
 2545              		.loc 1 704 13 is_stmt 1 view .LVU806
 2546              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2547              		.loc 1 704 62 is_stmt 0 view .LVU807
 2548 0fa3 4C8D1C16 		lea	r11, [rsi+rdx]	# tmp471,
 2549              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2550              		.loc 1 703 59 view .LVU808
 2551 0fa7 4D8D7704 		lea	r14, 4[r15]	# i,
 2552              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2553              		.loc 1 704 66 view .LVU809
 2554 0fab 4A8B0CDF 		mov	rcx, QWORD PTR [rdi+r11*8]	# *_391, *_391
 2555              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2556              		.loc 1 704 23 view .LVU810
 2557 0faf 4C01C2   		add	rdx, r8	# tmp472, copy_word
 2558              	.LVL102:
 2559              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2560              		.loc 1 704 115 view .LVU811
 2561 0fb2 C422A9F7 		shlx	r13, QWORD PTR 8[rdi+r11*8], r10	# tmp473, *_396, shift
 2561      6CDF08
 2562              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 72


 2563              		.loc 1 704 66 view .LVU812
 2564 0fb9 C462FBF7 		shrx	r12, rcx, rax	# tmp475, *_391, shift_flipped
 2564      E1
 2565              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2566              		.loc 1 704 84 view .LVU813
 2567 0fbe 4D09E5   		or	r13, r12	# tmp477, tmp475
 2568              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2569              		.loc 1 703 9 view .LVU814
 2570 0fc1 4C39F3   		cmp	rbx, r14	# loop_distance, i
 2571              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2572              		.loc 1 704 84 view .LVU815
 2573 0fc4 4C892CD7 		mov	QWORD PTR [rdi+rdx*8], r13	# *_401, tmp477
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2574              		.loc 1 703 58 is_stmt 1 view .LVU816
 2575              	.LVL103:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2576              		.loc 1 703 40 view .LVU817
 2577              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2578              		.loc 1 703 9 is_stmt 0 view .LVU818
 2579 0fc8 7645     		jbe	.L54	#,
 704:sieve_extend.c ****         }
 2580              		.loc 1 704 13 is_stmt 1 view .LVU819
 2581              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2582              		.loc 1 704 62 is_stmt 0 view .LVU820
 2583 0fca 4A8D1436 		lea	rdx, [rsi+r14]	# tmp478,
 2584              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2585              		.loc 1 703 59 view .LVU821
 2586 0fce 4983C705 		add	r15, 5	# i,
 2587              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2588              		.loc 1 704 66 view .LVU822
 2589 0fd2 4C8B1CD7 		mov	r11, QWORD PTR [rdi+rdx*8]	# *_409, *_409
 2590              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2591              		.loc 1 704 23 view .LVU823
 2592 0fd6 4D01C6   		add	r14, r8	# tmp479, copy_word
 2593              	.LVL104:
 2594              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2595              		.loc 1 704 115 view .LVU824
 2596 0fd9 C462A9F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r10	# tmp480, *_414, shift
 2596      6CD708
 2597              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2598              		.loc 1 704 66 view .LVU825
 2599 0fe0 C4C2FBF7 		shrx	rcx, r11, rax	# tmp482, *_409, shift_flipped
 2599      CB
 2600              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2601              		.loc 1 704 84 view .LVU826
 2602 0fe5 4909CD   		or	r13, rcx	# tmp484, tmp482
GAS LISTING /tmp/ccRwwoRx.s 			page 73


 2603              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2604              		.loc 1 703 9 view .LVU827
 2605 0fe8 4C39FB   		cmp	rbx, r15	# loop_distance, i
 2606              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2607              		.loc 1 704 84 view .LVU828
 2608 0feb 4E892CF7 		mov	QWORD PTR [rdi+r14*8], r13	# *_419, tmp484
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2609              		.loc 1 703 58 is_stmt 1 view .LVU829
 2610              	.LVL105:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2611              		.loc 1 703 40 view .LVU830
 2612              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2613              		.loc 1 703 9 is_stmt 0 view .LVU831
 2614 0fef 761E     		jbe	.L54	#,
 704:sieve_extend.c ****         }
 2615              		.loc 1 704 13 is_stmt 1 view .LVU832
 2616              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2617              		.loc 1 704 62 is_stmt 0 view .LVU833
 2618 0ff1 4A8D1C3E 		lea	rbx, [rsi+r15]	# tmp485,
 2619              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2620              		.loc 1 704 23 view .LVU834
 2621 0ff5 4D01C7   		add	r15, r8	# tmp486, copy_word
 2622              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2623              		.loc 1 704 115 view .LVU835
 2624 0ff8 C462A9F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r10	# tmp487, *_257, shift
 2624      44DF08
 2625              	.LVL106:
 2626              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2627              		.loc 1 704 66 view .LVU836
 2628 0fff 4C8B14DF 		mov	r10, QWORD PTR [rdi+rbx*8]	# *_252, *_252
 2629              	.LVL107:
 704:sieve_extend.c ****         }
 2630              		.loc 1 704 66 view .LVU837
 2631 1003 C4C2FBF7 		shrx	rax, r10, rax	# tmp489, *_252, shift_flipped
 2631      C2
 2632              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 2633              		.loc 1 704 84 view .LVU838
 2634 1008 4C09C0   		or	rax, r8	# tmp491, tmp487
 2635 100b 4A8904FF 		mov	QWORD PTR [rdi+r15*8], rax	# *_262, tmp491
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2636              		.loc 1 703 58 is_stmt 1 view .LVU839
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2637              		.loc 1 703 40 view .LVU840
 2638              	.L54:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2639              		.loc 1 703 40 is_stmt 0 view .LVU841
 2640              	.LBE316:
 706:sieve_extend.c ****     }
 2641              		.loc 1 706 9 is_stmt 1 view .LVU842
GAS LISTING /tmp/ccRwwoRx.s 			page 74


 2642              	.LVL108:
 706:sieve_extend.c ****     }
 2643              		.loc 1 706 39 view .LVU843
 706:sieve_extend.c ****     }
 2644              		.loc 1 706 39 is_stmt 0 view .LVU844
 2645              	.LBE315:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2646              		.loc 1 709 12 is_stmt 1 view .LVU845
 2647 100f 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	# loop_distance, %sfp
 2647      E0
 2648 1014 4C8B4424 		mov	r8, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2648      F8
 2649              	.LBB319:
 2650              	# sieve_extend.c:706:         source_word += loop_distance; copy_word+= loop_distance;
 706:sieve_extend.c ****     }
 2651              		.loc 1 706 21 is_stmt 0 view .LVU846
 2652 1019 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2652      E0000000 
 2652      00
 2653              	.LVL109:
 706:sieve_extend.c ****     }
 2654              		.loc 1 706 21 view .LVU847
 2655 1022 4A8D7426 		lea	rsi, 5[rsi+r12]	# tmp493,
 2655      05
 2656              	.LVL110:
 706:sieve_extend.c ****     }
 2657              		.loc 1 706 21 view .LVU848
 2658 1027 4D8D7801 		lea	r15, 1[r8]	# _158,
 2659 102b 488D14F5 		lea	rdx, -40[0+rsi*8]	# _296,
 2659      D8FFFFFF 
 2660 1033 4C897C24 		mov	QWORD PTR -16[rsp], r15	# %sfp, _158
 2660      F0
 2661              	.LVL111:
 2662              	.L60:
 706:sieve_extend.c ****     }
 2663              		.loc 1 706 21 view .LVU849
 2664 1038 4C8B7424 		mov	r14, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2664      F8
 2665 103d 4801FA   		add	rdx, rdi	# ivtmp.219, bitstorage
 2666              	.LBE319:
 2667              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2668              		.loc 1 710 105 view .LVU850
 2669 1040 440FB65C 		movzx	r11d, BYTE PTR -20[rsp]	# tmp943, %sfp
 2669      24EC
 2670 1046 C4E2A1F7 		shlx	rbx, QWORD PTR 8[rdx], r11	# tmp557, MEM[base: _468, offset: 8B], tmp943
 2670      5A08
 2671              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2672              		.loc 1 709 57 view .LVU851
 2673 104c 4D8D5801 		lea	r11, 1[r8]	# copy_word,
 2674              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2675              		.loc 1 710 58 view .LVU852
 2676 1050 C4E2B3F7 		shrx	rcx, QWORD PTR [rdx], r9	# tmp559, MEM[base: _468, offset: 0B], _15
 2676      0A
 2677 1055 4D89F5   		mov	r13, r14	# tmp572, destination_stop_word
GAS LISTING /tmp/ccRwwoRx.s 			page 75


 2678              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2679              		.loc 1 710 76 view .LVU853
 2680 1058 4809CB   		or	rbx, rcx	# tmp561, tmp559
 2681 105b 4A891CC7 		mov	QWORD PTR [rdi+r8*8], rbx	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset:
 2682 105f 4D29C5   		sub	r13, r8	# tmp572, copy_word
 2683 1062 4183E507 		and	r13d, 7	# tmp573,
 2684              	.LVL112:
 710:sieve_extend.c ****     }
 2685              		.loc 1 710 9 is_stmt 1 view .LVU854
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2686              		.loc 1 709 48 view .LVU855
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2687              		.loc 1 709 12 view .LVU856
 2688              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2689              		.loc 1 709 5 is_stmt 0 view .LVU857
 2690 1066 4D39DE   		cmp	r14, r11	# destination_stop_word, copy_word
 2691 1069 488D5A08 		lea	rbx, 8[rdx]	# ivtmp.219,
 2692 106d 0F8220FB 		jb	.L67	#,
 2692      FFFF
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2693              		.loc 1 709 5 view .LVU858
 2694 1073 4D85ED   		test	r13, r13	# tmp573
 2695 1076 0F841C01 		je	.L199	#,
 2695      0000
 2696 107c 4983FD01 		cmp	r13, 1	# tmp573,
 2697 1080 0F84E700 		je	.L160	#,
 2697      0000
 2698 1086 4983FD02 		cmp	r13, 2	# tmp573,
 2699 108a 0F84BD00 		je	.L161	#,
 2699      0000
 2700 1090 4983FD03 		cmp	r13, 3	# tmp573,
 2701 1094 0F849400 		je	.L162	#,
 2701      0000
 2702 109a 4983FD04 		cmp	r13, 4	# tmp573,
 2703 109e 746E     		je	.L163	#,
 2704 10a0 4983FD05 		cmp	r13, 5	# tmp573,
 2705 10a4 7448     		je	.L164	#,
 2706 10a6 4983FD06 		cmp	r13, 6	# tmp573,
 2707 10aa 7423     		je	.L165	#,
 710:sieve_extend.c ****     }
 2708              		.loc 1 710 9 is_stmt 1 view .LVU859
 2709              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2710              		.loc 1 710 58 is_stmt 0 view .LVU860
 2711 10ac 488B03   		mov	rax, QWORD PTR [rbx]	# MEM[base: _468, offset: 0B], MEM[base: _468, offset: 0B]
 2712 10af C4E2B3F7 		shrx	rsi, rax, r9	# tmp735, MEM[base: _468, offset: 0B], _15
 2712      F0
 2713              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2714              		.loc 1 710 105 view .LVU861
 2715 10b4 440FB654 		movzx	r10d, BYTE PTR -20[rsp]	# tmp949, %sfp
 2715      24EC
 2716 10ba C462A9F7 		shlx	r12, QWORD PTR 8[rbx], r10	# tmp733, MEM[base: _468, offset: 8B], tmp949
 2716      6308
 2717              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccRwwoRx.s 			page 76


 710:sieve_extend.c ****     }
 2718              		.loc 1 710 76 view .LVU862
 2719 10c0 4C09E6   		or	rsi, r12	# tmp736, tmp733
 2720 10c3 488D5A10 		lea	rbx, 16[rdx]	# ivtmp.219,
 2721 10c7 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2722              		.loc 1 709 48 is_stmt 1 view .LVU863
 2723              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2724              		.loc 1 709 57 is_stmt 0 view .LVU864
 2725 10cb 4D8D5802 		lea	r11, 2[r8]	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2726              		.loc 1 709 12 is_stmt 1 view .LVU865
 2727              	.L165:
 710:sieve_extend.c ****     }
 2728              		.loc 1 710 9 view .LVU866
 2729              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2730              		.loc 1 710 58 is_stmt 0 view .LVU867
 2731 10cf C462B3F7 		shrx	r14, QWORD PTR [rbx], r9	# tmp740, MEM[base: _468, offset: 0B], _15
 2731      33
 2732              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2733              		.loc 1 710 105 view .LVU868
 2734 10d4 0FB65424 		movzx	edx, BYTE PTR -20[rsp]	# tmp950, %sfp
 2734      EC
 2735 10d9 C462E9F7 		shlx	r8, QWORD PTR 8[rbx], rdx	# tmp738, MEM[base: _468, offset: 8B], tmp950
 2735      4308
 2736              	.LVL113:
 2737              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2738              		.loc 1 710 76 view .LVU869
 2739 10df 4D09F0   		or	r8, r14	# tmp741, tmp740
 2740 10e2 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2741              		.loc 1 709 48 is_stmt 1 view .LVU870
 2742 10e6 4883C308 		add	rbx, 8	# ivtmp.219,
 2743              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2744              		.loc 1 709 57 is_stmt 0 view .LVU871
 2745 10ea 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2746              		.loc 1 709 12 is_stmt 1 view .LVU872
 2747              	.L164:
 710:sieve_extend.c ****     }
 2748              		.loc 1 710 9 view .LVU873
 2749              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2750              		.loc 1 710 58 is_stmt 0 view .LVU874
 2751 10ee C462B3F7 		shrx	r10, QWORD PTR [rbx], r9	# tmp745, MEM[base: _468, offset: 0B], _15
 2751      13
 2752              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2753              		.loc 1 710 105 view .LVU875
 2754 10f3 440FB66C 		movzx	r13d, BYTE PTR -20[rsp]	# tmp951, %sfp
 2754      24EC
 2755 10f9 C4E291F7 		shlx	rcx, QWORD PTR 8[rbx], r13	# tmp743, MEM[base: _468, offset: 8B], tmp951
GAS LISTING /tmp/ccRwwoRx.s 			page 77


 2755      4B08
 2756              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2757              		.loc 1 710 76 view .LVU876
 2758 10ff 4C09D1   		or	rcx, r10	# tmp746, tmp745
 2759 1102 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2760              		.loc 1 709 48 is_stmt 1 view .LVU877
 2761 1106 4883C308 		add	rbx, 8	# ivtmp.219,
 2762              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2763              		.loc 1 709 57 is_stmt 0 view .LVU878
 2764 110a 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2765              		.loc 1 709 12 is_stmt 1 view .LVU879
 2766              	.L163:
 710:sieve_extend.c ****     }
 2767              		.loc 1 710 9 view .LVU880
 2768              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2769              		.loc 1 710 58 is_stmt 0 view .LVU881
 2770 110e C4E2B3F7 		shrx	rsi, QWORD PTR [rbx], r9	# tmp750, MEM[base: _468, offset: 0B], _15
 2770      33
 2771              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2772              		.loc 1 710 105 view .LVU882
 2773 1113 440FB664 		movzx	r12d, BYTE PTR -20[rsp]	# tmp952, %sfp
 2773      24EC
 2774 1119 C4E299F7 		shlx	rax, QWORD PTR 8[rbx], r12	# tmp748, MEM[base: _468, offset: 8B], tmp952
 2774      4308
 2775              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2776              		.loc 1 710 76 view .LVU883
 2777 111f 4809F0   		or	rax, rsi	# tmp751, tmp750
 2778 1122 4A8904DF 		mov	QWORD PTR [rdi+r11*8], rax	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2779              		.loc 1 709 48 is_stmt 1 view .LVU884
 2780 1126 4883C308 		add	rbx, 8	# ivtmp.219,
 2781              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2782              		.loc 1 709 57 is_stmt 0 view .LVU885
 2783 112a 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2784              		.loc 1 709 12 is_stmt 1 view .LVU886
 2785              	.L162:
 710:sieve_extend.c ****     }
 2786              		.loc 1 710 9 view .LVU887
 2787              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2788              		.loc 1 710 58 is_stmt 0 view .LVU888
 2789 112e C462B3F7 		shrx	r14, QWORD PTR [rbx], r9	# tmp755, MEM[base: _468, offset: 0B], _15
 2789      33
 2790              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2791              		.loc 1 710 105 view .LVU889
 2792 1133 0FB65424 		movzx	edx, BYTE PTR -20[rsp]	# tmp953, %sfp
 2792      EC
GAS LISTING /tmp/ccRwwoRx.s 			page 78


 2793 1138 C462E9F7 		shlx	r8, QWORD PTR 8[rbx], rdx	# tmp753, MEM[base: _468, offset: 8B], tmp953
 2793      4308
 2794              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2795              		.loc 1 710 76 view .LVU890
 2796 113e 4D09F0   		or	r8, r14	# tmp756, tmp755
 2797 1141 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2798              		.loc 1 709 48 is_stmt 1 view .LVU891
 2799 1145 4883C308 		add	rbx, 8	# ivtmp.219,
 2800              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2801              		.loc 1 709 57 is_stmt 0 view .LVU892
 2802 1149 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2803              		.loc 1 709 12 is_stmt 1 view .LVU893
 2804              	.L161:
 710:sieve_extend.c ****     }
 2805              		.loc 1 710 9 view .LVU894
 2806              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2807              		.loc 1 710 58 is_stmt 0 view .LVU895
 2808 114d C462B3F7 		shrx	r10, QWORD PTR [rbx], r9	# tmp760, MEM[base: _468, offset: 0B], _15
 2808      13
 2809              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2810              		.loc 1 710 105 view .LVU896
 2811 1152 440FB66C 		movzx	r13d, BYTE PTR -20[rsp]	# tmp954, %sfp
 2811      24EC
 2812 1158 C4E291F7 		shlx	rcx, QWORD PTR 8[rbx], r13	# tmp758, MEM[base: _468, offset: 8B], tmp954
 2812      4B08
 2813              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2814              		.loc 1 710 76 view .LVU897
 2815 115e 4C09D1   		or	rcx, r10	# tmp761, tmp760
 2816 1161 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2817              		.loc 1 709 48 is_stmt 1 view .LVU898
 2818 1165 4883C308 		add	rbx, 8	# ivtmp.219,
 2819              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2820              		.loc 1 709 57 is_stmt 0 view .LVU899
 2821 1169 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2822              		.loc 1 709 12 is_stmt 1 view .LVU900
 2823              	.L160:
 710:sieve_extend.c ****     }
 2824              		.loc 1 710 9 view .LVU901
 2825              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2826              		.loc 1 710 58 is_stmt 0 view .LVU902
 2827 116d C4E2B3F7 		shrx	rsi, QWORD PTR [rbx], r9	# tmp765, MEM[base: _468, offset: 0B], _15
 2827      33
 2828              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2829              		.loc 1 710 105 view .LVU903
 2830 1172 440FB664 		movzx	r12d, BYTE PTR -20[rsp]	# tmp955, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 79


 2830      24EC
 2831 1178 C4E299F7 		shlx	rax, QWORD PTR 8[rbx], r12	# tmp763, MEM[base: _468, offset: 8B], tmp955
 2831      4308
 2832              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2833              		.loc 1 710 76 view .LVU904
 2834 117e 4809F0   		or	rax, rsi	# tmp766, tmp765
 2835 1181 4A8904DF 		mov	QWORD PTR [rdi+r11*8], rax	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2836              		.loc 1 709 48 is_stmt 1 view .LVU905
 2837              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2838              		.loc 1 709 57 is_stmt 0 view .LVU906
 2839 1185 4983C301 		add	r11, 1	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2840              		.loc 1 709 12 is_stmt 1 view .LVU907
 2841 1189 4883C308 		add	rbx, 8	# ivtmp.219,
 2842              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2843              		.loc 1 709 5 is_stmt 0 view .LVU908
 2844 118d 4C395C24 		cmp	QWORD PTR -8[rsp], r11	# %sfp, copy_word
 2844      F8
 2845 1192 0F82FBF9 		jb	.L67	#,
 2845      FFFF
 2846              	.L199:
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2847              		.loc 1 709 5 view .LVU909
 2848 1198 8B5424EC 		mov	edx, DWORD PTR -20[rsp]	# _12, %sfp
 2849              	.L66:
 710:sieve_extend.c ****     }
 2850              		.loc 1 710 9 is_stmt 1 view .LVU910
 2851              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2852              		.loc 1 710 58 is_stmt 0 view .LVU911
 2853 119c C462B3F7 		shrx	r8, QWORD PTR [rbx], r9	# tmp681, MEM[base: _468, offset: 0B], _15
 2853      03
 2854              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2855              		.loc 1 710 105 view .LVU912
 2856 11a1 C462E9F7 		shlx	r14, QWORD PTR 8[rbx], rdx	# tmp679, MEM[base: _468, offset: 8B], _12
 2856      7308
 2857              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2858              		.loc 1 710 76 view .LVU913
 2859 11a7 4D09C6   		or	r14, r8	# tmp682, tmp681
 2860 11aa 4883C340 		add	rbx, 64	# ivtmp.219,
 2861 11ae 4E8934DF 		mov	QWORD PTR [rdi+r11*8], r14	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offset
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2862              		.loc 1 709 48 is_stmt 1 view .LVU914
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2863              		.loc 1 709 12 view .LVU915
 710:sieve_extend.c ****     }
 2864              		.loc 1 710 9 view .LVU916
 2865              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2866              		.loc 1 710 58 is_stmt 0 view .LVU917
 2867 11b2 C4E2B3F7 		shrx	rcx, QWORD PTR -56[rbx], r9	# tmp688, MEM[base: _468, offset: 0B], _15
GAS LISTING /tmp/ccRwwoRx.s 			page 80


 2867      4BC8
 2868              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2869              		.loc 1 710 105 view .LVU918
 2870 11b8 C462E9F7 		shlx	r13, QWORD PTR -48[rbx], rdx	# tmp686, MEM[base: _468, offset: 8B], _12
 2870      6BD0
 2871              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2872              		.loc 1 710 76 view .LVU919
 2873 11be 4909CD   		or	r13, rcx	# tmp689, tmp688
 2874 11c1 4E896CDF 		mov	QWORD PTR 8[rdi+r11*8], r13	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offse
 2874      08
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2875              		.loc 1 709 48 is_stmt 1 view .LVU920
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2876              		.loc 1 709 12 view .LVU921
 710:sieve_extend.c ****     }
 2877              		.loc 1 710 9 view .LVU922
 2878              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2879              		.loc 1 710 58 is_stmt 0 view .LVU923
 2880 11c6 C462B3F7 		shrx	r12, QWORD PTR -48[rbx], r9	# tmp695, MEM[base: _468, offset: 0B], _15
 2880      63D0
 2881              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2882              		.loc 1 710 105 view .LVU924
 2883 11cc C462E9F7 		shlx	r10, QWORD PTR -40[rbx], rdx	# tmp693, MEM[base: _468, offset: 8B], _12
 2883      53D8
 2884              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2885              		.loc 1 710 76 view .LVU925
 2886 11d2 4D09E2   		or	r10, r12	# tmp696, tmp695
 2887 11d5 4E8954DF 		mov	QWORD PTR 16[rdi+r11*8], r10	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2887      10
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2888              		.loc 1 709 48 is_stmt 1 view .LVU926
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2889              		.loc 1 709 12 view .LVU927
 710:sieve_extend.c ****     }
 2890              		.loc 1 710 9 view .LVU928
 2891              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2892              		.loc 1 710 58 is_stmt 0 view .LVU929
 2893 11da C4E2B3F7 		shrx	rsi, QWORD PTR -40[rbx], r9	# tmp702, MEM[base: _468, offset: 0B], _15
 2893      73D8
 2894              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2895              		.loc 1 710 105 view .LVU930
 2896 11e0 C4E2E9F7 		shlx	rax, QWORD PTR -32[rbx], rdx	# tmp700, MEM[base: _468, offset: 8B], _12
 2896      43E0
 2897              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2898              		.loc 1 710 76 view .LVU931
 2899 11e6 4809F0   		or	rax, rsi	# tmp703, tmp702
 2900 11e9 4A8944DF 		mov	QWORD PTR 24[rdi+r11*8], rax	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2900      18
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
GAS LISTING /tmp/ccRwwoRx.s 			page 81


 2901              		.loc 1 709 48 is_stmt 1 view .LVU932
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2902              		.loc 1 709 12 view .LVU933
 710:sieve_extend.c ****     }
 2903              		.loc 1 710 9 view .LVU934
 2904              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2905              		.loc 1 710 105 is_stmt 0 view .LVU935
 2906 11ee C462E9F7 		shlx	r14, QWORD PTR -24[rbx], rdx	# tmp707, MEM[base: _468, offset: 8B], _12
 2906      73E8
 2907              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2908              		.loc 1 710 58 view .LVU936
 2909 11f4 C462B3F7 		shrx	r8, QWORD PTR -32[rbx], r9	# tmp709, MEM[base: _468, offset: 0B], _15
 2909      43E0
 2910              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2911              		.loc 1 710 76 view .LVU937
 2912 11fa 4D09C6   		or	r14, r8	# tmp710, tmp709
 2913 11fd 4E8974DF 		mov	QWORD PTR 32[rdi+r11*8], r14	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2913      20
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2914              		.loc 1 709 48 is_stmt 1 view .LVU938
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2915              		.loc 1 709 12 view .LVU939
 710:sieve_extend.c ****     }
 2916              		.loc 1 710 9 view .LVU940
 2917              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2918              		.loc 1 710 105 is_stmt 0 view .LVU941
 2919 1202 C462E9F7 		shlx	r13, QWORD PTR -16[rbx], rdx	# tmp714, MEM[base: _468, offset: 8B], _12
 2919      6BF0
 2920              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2921              		.loc 1 710 58 view .LVU942
 2922 1208 C4E2B3F7 		shrx	rcx, QWORD PTR -24[rbx], r9	# tmp716, MEM[base: _468, offset: 0B], _15
 2922      4BE8
 2923              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2924              		.loc 1 710 76 view .LVU943
 2925 120e 4909CD   		or	r13, rcx	# tmp717, tmp716
 2926 1211 4E896CDF 		mov	QWORD PTR 40[rdi+r11*8], r13	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2926      28
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2927              		.loc 1 709 48 is_stmt 1 view .LVU944
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2928              		.loc 1 709 12 view .LVU945
 710:sieve_extend.c ****     }
 2929              		.loc 1 710 9 view .LVU946
 2930              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2931              		.loc 1 710 105 is_stmt 0 view .LVU947
 2932 1216 C462E9F7 		shlx	r10, QWORD PTR -8[rbx], rdx	# tmp721, MEM[base: _468, offset: 8B], _12
 2932      53F8
 2933              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2934              		.loc 1 710 58 view .LVU948
GAS LISTING /tmp/ccRwwoRx.s 			page 82


 2935 121c C462B3F7 		shrx	r12, QWORD PTR -16[rbx], r9	# tmp723, MEM[base: _468, offset: 0B], _15
 2935      63F0
 2936              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2937              		.loc 1 710 76 view .LVU949
 2938 1222 4D09E2   		or	r10, r12	# tmp724, tmp723
 2939 1225 4E8954DF 		mov	QWORD PTR 48[rdi+r11*8], r10	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2939      30
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2940              		.loc 1 709 48 is_stmt 1 view .LVU950
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2941              		.loc 1 709 12 view .LVU951
 710:sieve_extend.c ****     }
 2942              		.loc 1 710 9 view .LVU952
 2943              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2944              		.loc 1 710 105 is_stmt 0 view .LVU953
 2945 122a C4E2E9F7 		shlx	rax, QWORD PTR [rbx], rdx	# tmp728, MEM[base: _468, offset: 8B], _12
 2945      03
 2946              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2947              		.loc 1 710 58 view .LVU954
 2948 122f C4E2B3F7 		shrx	rsi, QWORD PTR -8[rbx], r9	# tmp730, MEM[base: _468, offset: 0B], _15
 2948      73F8
 2949              	# sieve_extend.c:710:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 710:sieve_extend.c ****     }
 2950              		.loc 1 710 76 view .LVU955
 2951 1235 4809F0   		or	rax, rsi	# tmp731, tmp730
 2952 1238 4A8944DF 		mov	QWORD PTR 56[rdi+r11*8], rax	# MEM[base: bitstorage_69(D), index: copy_word_133, step: 8, offs
 2952      38
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2953              		.loc 1 709 48 is_stmt 1 view .LVU956
 2954              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2955              		.loc 1 709 57 is_stmt 0 view .LVU957
 2956 123d 4983C308 		add	r11, 8	# copy_word,
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2957              		.loc 1 709 12 is_stmt 1 view .LVU958
 2958              	# sieve_extend.c:709:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 709:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2959              		.loc 1 709 5 is_stmt 0 view .LVU959
 2960 1241 4C395C24 		cmp	QWORD PTR -8[rsp], r11	# %sfp, copy_word
 2960      F8
 2961 1246 0F8350FF 		jnb	.L66	#,
 2961      FFFF
 2962 124c E942F9FF 		jmp	.L67	#
 2962      FF
 2963              	.LVL114:
 2964              		.p2align 4,,7
 2965 1251 0F1F8000 		.p2align 3
 2965      000000
 2966              	.L69:
 2967              	.LBB320:
 2968              	.LBB317:
 2969              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2970              		.loc 1 703 33 view .LVU960
GAS LISTING /tmp/ccRwwoRx.s 			page 83


 2971 1258 4531FF   		xor	r15d, r15d	# i
 2972 125b 4C8D5E01 		lea	r11, 1[rsi]	# tmp571,
 2973 125f E922FAFF 		jmp	.L56	#
 2973      FF
 2974              	.LVL115:
 2975              		.p2align 4,,7
 2976 1264 0F1F4000 		.p2align 3
 2977              	.L205:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2978              		.loc 1 703 33 view .LVU961
 2979 1268 C5F877   		vzeroupper
 2980 126b E923F9FF 		jmp	.L67	#
 2980      FF
 2981              	.LVL116:
 2982              		.p2align 4,,7
 2983              		.p2align 3
 2984              	.L72:
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2985              		.loc 1 703 33 view .LVU962
 2986              	.LBE317:
 2987              	.LBE320:
 2988              	# sieve_extend.c:685:     register counter_t source_word = wordindex(source_start);
 685:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2989              		.loc 1 685 24 view .LVU963
 2990 1270 48897424 		mov	QWORD PTR -48[rsp], rsi	# %sfp, source_word
 2990      D0
 2991              	# sieve_extend.c:694:     copy_word++;
 694:sieve_extend.c **** 
 2992              		.loc 1 694 14 view .LVU964
 2993 1275 4D89C6   		mov	r14, r8	# copy_word, copy_word
 2994 1278 488D5E01 		lea	rbx, 1[rsi]	# tmp631,
 2995 127c E9FDF5FF 		jmp	.L62	#
 2995      FF
 2996              	.LVL117:
 2997              		.p2align 4,,7
 2998 1281 0F1F8000 		.p2align 3
 2998      000000
 2999              	.L210:
 694:sieve_extend.c **** 
 3000              		.loc 1 694 14 view .LVU965
 3001 1288 C5F877   		vzeroupper
 3002 128b E97FFDFF 		jmp	.L54	#
 3002      FF
 3003              	.L209:
 3004              	.LBB321:
 3005              	.LBB318:
 704:sieve_extend.c ****         }
 3006              		.loc 1 704 13 is_stmt 1 view .LVU966
 3007              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3008              		.loc 1 704 66 is_stmt 0 view .LVU967
 3009 1290 C57D6F03 		vmovdqa	ymm8, YMMWORD PTR [rbx]	# tmp957, MEM[base: vectp.203_276, index: ivtmp.237_473, offset: 0
 3010 1294 BA200000 		mov	edx, 32	# ivtmp.237,
 3010      00
 3011              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3012              		.loc 1 704 115 view .LVU968
GAS LISTING /tmp/ccRwwoRx.s 			page 84


 3013 1299 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp958, MEM[base: vectp.207_283, index: ivtmp.237_473, offset: 0
 3013      1B
 3014              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3015              		.loc 1 704 66 view .LVU969
 3016 129e C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__28.205, tmp957, _15
 3017              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3018              		.loc 1 704 115 view .LVU970
 3019 12a2 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__33.209, tmp958, _12
 3020              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3021              		.loc 1 704 84 view .LVU971
 3022 12a6 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__37.210, vect__28.205, vect__33.209
 3022      DA
 3023              	# sieve_extend.c:704:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 704:sieve_extend.c ****         }
 3024              		.loc 1 704 37 view .LVU972
 3025 12ab C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm11	# MEM[base: vectp.212_292, index: ivtmp.237_473, offset: 0B], vec
 3025      1C24
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3026              		.loc 1 703 58 is_stmt 1 view .LVU973
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3027              		.loc 1 703 40 view .LVU974
 3028 12b1 E94BFAFF 		jmp	.L152	#
 3028      FF
 3029              	.LVL118:
 3030              	.L68:
 3031              	# sieve_extend.c:703:         for (register counter_t i = 0; i <loop_distance; i++) {
 703:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3032              		.loc 1 703 33 is_stmt 0 view .LVU975
 3033 12b6 4531FF   		xor	r15d, r15d	# tmp.201
 3034 12b9 E962FCFF 		jmp	.L55	#
 3034      FF
 3035              	.LBE318:
 3036              	.LBE321:
 3037              		.cfi_endproc
 3038              	.LFE73:
 3040 12be 6690     		.p2align 4
 3041              		.globl	compare_tuning_result
 3043              	compare_tuning_result:
 3044              	.LVL119:
 3045              	.LFB86:
 715:sieve_extend.c **** 
 716:sieve_extend.c **** static void  extendSieve_shiftright_base(bitword_t* bitstorage, const counter_t source_start, const
 717:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 718:sieve_extend.c ****    
 719:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 720:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 721:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 722:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 723:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 724:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 725:sieve_extend.c **** 
 726:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 727:sieve_extend.c ****         bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not los
 728:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
GAS LISTING /tmp/ccRwwoRx.s 			page 85


 729:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 730:sieve_extend.c ****         return; // rapid exit for one word variant
 731:sieve_extend.c ****     }
 732:sieve_extend.c **** 
 733:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not lose da
 734:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 735:sieve_extend.c ****                                 & keepmask(copy_start);
 736:sieve_extend.c ****     
 737:sieve_extend.c ****     copy_word++;
 738:sieve_extend.c **** 
 739:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 740:sieve_extend.c **** 
 741:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 742:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 743:sieve_extend.c ****     // bitstorage[copy_word] &= chopmask(destination_stop);
 744:sieve_extend.c **** 
 745:sieve_extend.c **** }
 746:sieve_extend.c **** 
 747:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t source_start, const counte
 748:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 749:sieve_extend.c **** 
 750:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 751:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 752:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 753:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 754:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 755:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 756:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 757:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 758:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 759:sieve_extend.c **** 
 760:sieve_extend.c ****     copy_word++;
 761:sieve_extend.c ****     source_word++;
 762:sieve_extend.c **** 
 763:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 764:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 765:sieve_extend.c ****     source_word += distance;
 766:sieve_extend.c ****     copy_word += distance;
 767:sieve_extend.c **** 
 768:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 769:sieve_extend.c **** 
 770:sieve_extend.c ****     #pragma GCC ivdep
 771:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 772:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 773:sieve_extend.c ****     }
 774:sieve_extend.c **** 
 775:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 776:sieve_extend.c **** 
 777:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 778:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 779:sieve_extend.c **** 
 780:sieve_extend.c ****     #pragma GCC ivdep
 781:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 782:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 783:sieve_extend.c **** 
 784:sieve_extend.c ****     #pragma GCC ivdep
 785:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/ccRwwoRx.s 			page 86


 786:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 787:sieve_extend.c **** 
 788:sieve_extend.c **** 
 789:sieve_extend.c ****  }
 790:sieve_extend.c **** 
 791:sieve_extend.c **** static inline void extendSieve(bitword_t* bitstorage, const counter_t source_start, const counter_t
 792:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 793:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 794:sieve_extend.c ****         return; // rapid exit for small sizes
 795:sieve_extend.c ****     }
 796:sieve_extend.c **** 
 797:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 798:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 799:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 800:sieve_extend.c **** 
 801:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source_start, size, destinat
 802:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 803:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 804:sieve_extend.c **** }
 805:sieve_extend.c **** 
 806:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitstorage, const counter_t block_start, const counter_t 
 807:sieve_extend.c ****     counter_t prime = prime_start;
 808:sieve_extend.c ****     counter_t start = 0;
 809:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 810:sieve_extend.c **** 
 811:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 812:sieve_extend.c ****     
 813:sieve_extend.c ****     while (prime*step <= block_stop) {
 814:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 815:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 816:sieve_extend.c ****         else 
 817:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 818:sieve_extend.c **** 
 819:sieve_extend.c ****         if (step < VECTORSTEP_FASTER) {
 820:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 821:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 822:sieve_extend.c ****         }
 823:sieve_extend.c ****         else {
 824:sieve_extend.c ****             setBitsTrue_largeRange(bitstorage, start, step, block_stop);
 825:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 826:sieve_extend.c ****         }
 827:sieve_extend.c **** 
 828:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 829:sieve_extend.c ****         step  = prime * 2 + 1;
 830:sieve_extend.c ****     }
 831:sieve_extend.c **** }
 832:sieve_extend.c **** 
 833:sieve_extend.c **** struct block {
 834:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 835:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 836:sieve_extend.c ****     counter_t prime; // next prime to be striped
 837:sieve_extend.c **** };
 838:sieve_extend.c **** 
 839:sieve_extend.c **** // returns prime that could not be handled:
 840:sieve_extend.c **** // start is too large
 841:sieve_extend.c **** // range is too big
 842:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
GAS LISTING /tmp/ccRwwoRx.s 			page 87


 843:sieve_extend.c ****     register counter_t prime   = 0;
 844:sieve_extend.c ****     counter_t patternsize_bits = 1;
 845:sieve_extend.c ****     counter_t pattern_start    = 0;
 846:sieve_extend.c ****     counter_t range_stop       = block_start;
 847:sieve_extend.c ****     bitword_t* bitstorage        = sieve->bitstorage;
 848:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 849:sieve_extend.c **** 
 850:sieve_extend.c ****     sieve->bitstorage[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populat
 851:sieve_extend.c ****     
 852:sieve_extend.c ****     for (;range_stop < block_stop;) {
 853:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 854:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 855:sieve_extend.c ****         if unlikely(start > block_stop) break;
 856:sieve_extend.c **** 
 857:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 858:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 859:sieve_extend.c **** 
 860:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 861:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 862:sieve_extend.c ****         block.pattern_start = pattern_start;
 863:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 864:sieve_extend.c **** 
 865:sieve_extend.c ****         if (patternsize_bits>1) {
 866:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 867:sieve_extend.c ****             extendSieve(bitstorage, pattern_start, patternsize_bits, range_stop);
 868:sieve_extend.c ****         }
 869:sieve_extend.c ****         patternsize_bits *= step;
 870:sieve_extend.c **** 
 871:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitstorage, start, (bitshift_
 872:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 873:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 874:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 875:sieve_extend.c ****         block.prime = prime;
 876:sieve_extend.c ****     } 
 877:sieve_extend.c **** 
 878:sieve_extend.c ****     return block;
 879:sieve_extend.c **** }
 880:sieve_extend.c **** 
 881:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 882:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 883:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 884:sieve_extend.c **** 
 885:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 886:sieve_extend.c **** 
 887:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 888:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 889:sieve_extend.c ****     extendSieve(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 890:sieve_extend.c ****     counter_t startprime = block.prime;
 891:sieve_extend.c **** 
 892:sieve_extend.c ****     // //#pragma GCC unroll 8
 893:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 894:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 895:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 896:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 897:sieve_extend.c ****     } 
 898:sieve_extend.c **** 
 899:sieve_extend.c ****     return sieve;
GAS LISTING /tmp/ccRwwoRx.s 			page 88


 900:sieve_extend.c **** }
 901:sieve_extend.c **** 
 902:sieve_extend.c **** static struct sieve_t *sieve_blockbyblock(const counter_t maxints, const counter_t blocksize) {
 903:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 904:sieve_extend.c ****     counter_t prime     = 1;
 905:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 906:sieve_extend.c ****     for(counter_t index=0; index<wordindex(maxints/2); index++) {
 907:sieve_extend.c ****         bitstorage[index]=SAFE_ZERO;
 908:sieve_extend.c ****     }
 909:sieve_extend.c **** 
 910:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 911:sieve_extend.c **** 
 912:sieve_extend.c ****     // //#pragma GCC unroll 8
 913:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 915:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime);
 916:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 917:sieve_extend.c ****     } 
 918:sieve_extend.c **** 
 919:sieve_extend.c ****     return sieve;
 920:sieve_extend.c **** }
 921:sieve_extend.c **** 
 922:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 923:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 924:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 925:sieve_extend.c ****         primeCount++;
 926:sieve_extend.c ****         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 928:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 929:sieve_extend.c ****         }
 930:sieve_extend.c ****     }
 931:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 932:sieve_extend.c **** }
 933:sieve_extend.c **** 
 934:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 935:sieve_extend.c ****     counter_t primeCount = 1;
 936:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 937:sieve_extend.c ****     return primeCount;
 938:sieve_extend.c **** }
 939:sieve_extend.c **** 
 940:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 941:sieve_extend.c ****     printf("DeepAnalyzing\n");
 942:sieve_extend.c ****     counter_t warn_prime = 0;
 943:sieve_extend.c ****     counter_t warn_nonprime = 0;
 944:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 949:sieve_extend.c ****                 }
 950:sieve_extend.c ****             }
 951:sieve_extend.c ****         }
 952:sieve_extend.c ****         else {
 953:sieve_extend.c ****             counter_t c_prime = 0;
 954:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 956:sieve_extend.c ****             }
GAS LISTING /tmp/ccRwwoRx.s 			page 89


 957:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 958:sieve_extend.c ****         }
 959:sieve_extend.c ****     }
 960:sieve_extend.c **** }
 961:sieve_extend.c **** 
 962:sieve_extend.c **** 
 963:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 964:sieve_extend.c **** 
 965:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 966:sieve_extend.c ****     counter_t valid_primes = 0;
 967:sieve_extend.c ****     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 969:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 970:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 977:sieve_extend.c ****         default:            valid_primes= 0;
 978:sieve_extend.c ****     }
 979:sieve_extend.c **** 
 980:sieve_extend.c ****     int valid = (valid_primes == primecount);
 981:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 984:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 985:sieve_extend.c ****     }
 986:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 987:sieve_extend.c ****     return (valid);
 988:sieve_extend.c **** }
 989:sieve_extend.c **** 
 990:sieve_extend.c **** void usage(char *name) {
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 992:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 993:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 994:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 995:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 996:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 997:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 998:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 999:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1000:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1001:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1002:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1003:sieve_extend.c ****     exit(1);
1004:sieve_extend.c **** }
1005:sieve_extend.c **** 
1006:sieve_extend.c **** typedef struct  {
1007:sieve_extend.c ****     counter_t maxints;
1008:sieve_extend.c ****     counter_t blocksize_bits;
1009:sieve_extend.c ****     counter_t blocksize_kb;
1010:sieve_extend.c ****     counter_t free_bits;
1011:sieve_extend.c ****     counter_t smallstep_faster;
1012:sieve_extend.c ****     counter_t mediumstep_faster;
1013:sieve_extend.c ****     counter_t vectorstep_faster;
GAS LISTING /tmp/ccRwwoRx.s 			page 90


1014:sieve_extend.c ****     counter_t sample_max;
1015:sieve_extend.c ****     double    sample_duration;
1016:sieve_extend.c ****     counter_t passes;
1017:sieve_extend.c ****     double    elapsed_time;
1018:sieve_extend.c ****     double    avg;
1019:sieve_extend.c **** } tuning_result_type;
1020:sieve_extend.c **** 
1021:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3046              		.loc 1 1021 57 is_stmt 1 view -0
 3047              		.cfi_startproc
 3048              		.loc 1 1021 57 is_stmt 0 view .LVU977
 3049 12c0 F30F1EFA 		endbr64	
1022:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3050              		.loc 1 1022 5 is_stmt 1 view .LVU978
 3051              	.LVL120:
1023:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3052              		.loc 1 1023 5 view .LVU979
1024:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3053              		.loc 1 1024 5 view .LVU980
 3054              	# sieve_extend.c:1024:     return (resultB->avg > resultA->avg ? 1 : -1);
 3055              		.loc 1 1024 45 is_stmt 0 view .LVU981
 3056 12c4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3056      58
 3057 12c9 31C0     		xor	eax, eax	# <retval>
 3058 12cb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3058      58
 3059 12d0 0F97C0   		seta	al	#, <retval>
 3060 12d3 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3061              	# sieve_extend.c:1025: }
1025:sieve_extend.c **** }
 3062              		.loc 1 1025 1 view .LVU982
 3063 12d7 C3       		ret	
 3064              		.cfi_endproc
 3065              	.LFE86:
 3067 12d8 0F1F8400 		.p2align 4
 3067      00000000 
 3069              	setBitsTrue_largeRange_vector:
 3070              	.LVL121:
 3071              	.LFB67:
 418:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3072              		.loc 1 418 155 is_stmt 1 view -0
 3073              		.cfi_startproc
 418:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3074              		.loc 1 418 155 is_stmt 0 view .LVU984
 3075 12e0 55       		push	rbp	#
 3076              		.cfi_def_cfa_offset 16
 3077              		.cfi_offset 6, -16
 3078 12e1 4889E5   		mov	rbp, rsp	#,
 3079              		.cfi_def_cfa_register 6
 3080 12e4 4157     		push	r15	#
 3081 12e6 4156     		push	r14	#
 3082 12e8 4155     		push	r13	#
 3083 12ea 4154     		push	r12	#
 3084 12ec 53       		push	rbx	#
 3085 12ed 4883E4E0 		and	rsp, -32	#,
 3086 12f1 488D6424 		lea	rsp, -96[rsp]	#,
 3086      A0
GAS LISTING /tmp/ccRwwoRx.s 			page 91


 3087              		.cfi_offset 15, -24
 3088              		.cfi_offset 14, -32
 3089              		.cfi_offset 13, -40
 3090              		.cfi_offset 12, -48
 3091              		.cfi_offset 3, -56
 3092              	# sieve_extend.c:418: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_wo
 418:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3093              		.loc 1 418 155 view .LVU985
 3094 12f6 64488B04 		mov	rax, QWORD PTR fs:40	# tmp511, MEM[(<address-space-1> long unsigned int *)40B]
 3094      25280000 
 3094      00
 3095 12ff 48894424 		mov	QWORD PTR 88[rsp], rax	# D.6856, tmp511
 3095      58
 3096 1304 31C0     		xor	eax, eax	# tmp511
 419:sieve_extend.c **** 
 3097              		.loc 1 419 5 is_stmt 1 view .LVU986
 421:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 3098              		.loc 1 421 5 view .LVU987
 3099              	.LVL122:
 422:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3100              		.loc 1 422 5 view .LVU988
 3101              	# sieve_extend.c:422:     counter_t range_start_atvector = vectorstart(range_start);
 422:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3102              		.loc 1 422 15 is_stmt 0 view .LVU989
 3103 1306 4889F0   		mov	rax, rsi	# range_start_atvector, range_start
 3104 1309 30C0     		xor	al, al	# range_start_atvector
 3105              	.LVL123:
 423:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3106              		.loc 1 423 5 is_stmt 1 view .LVU990
 3107              	# sieve_extend.c:423:     if likely((range_start_atvector + step) < range_start) { // not the first
 423:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3108              		.loc 1 423 8 is_stmt 0 view .LVU991
 3109 130b 4C8D0410 		lea	r8, [rax+rdx]	# tmp174,
 3110 130f 4939F0   		cmp	r8, rsi	# tmp174, range_start
 3111 1312 0F83F800 		jnb	.L215	#,
 3111      0000
 424:sieve_extend.c **** 
 3112              		.loc 1 424 9 is_stmt 1 view .LVU992
 426:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3113              		.loc 1 426 9 view .LVU993
 3114              	# sieve_extend.c:426:         range_start_atvector += VECTOR_SIZE; // find next vector
 426:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3115              		.loc 1 426 30 is_stmt 0 view .LVU994
 3116 1318 48050001 		add	rax, 256	# range_start_atvector,
 3116      0000
 3117              	.LVL124:
 427:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3118              		.loc 1 427 9 is_stmt 1 view .LVU995
 3119              	# sieve_extend.c:427:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 427:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3120              		.loc 1 427 12 is_stmt 0 view .LVU996
 3121 131e 4839C8   		cmp	rax, rcx	# range_start_atvector, range_stop
 3122 1321 0F876909 		ja	.L216	#,
 3122      0000
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3123              		.loc 1 439 16 is_stmt 1 view .LVU997
 3124              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
GAS LISTING /tmp/ccRwwoRx.s 			page 92


 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3125              		.loc 1 439 9 is_stmt 0 view .LVU998
 3126 1327 4839C6   		cmp	rsi, rax	# range_start, range_start_atvector
 3127              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3128              		.loc 1 440 56 view .LVU999
 3129 132a 41BA0100 		mov	r10d, 1	# tmp184,
 3129      0000
 3130              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3131              		.loc 1 439 9 view .LVU1000
 3132 1330 0F87DA00 		ja	.L215	#,
 3132      0000
 3133              	.LVL125:
 3134              	.L217:
 440:sieve_extend.c ****     }
 3135              		.loc 1 440 13 is_stmt 1 discriminator 2 view .LVU1001
 3136              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3137              		.loc 1 440 53 is_stmt 0 discriminator 2 view .LVU1002
 3138 1336 4889F3   		mov	rbx, rsi	# tmp180, range_start
 3139              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3140              		.loc 1 440 56 discriminator 2 view .LVU1003
 3141 1339 C442C9F7 		shlx	r9, r10, rsi	# tmp183, tmp184, range_start
 3141      CA
 3142              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3143              		.loc 1 440 53 discriminator 2 view .LVU1004
 3144 133e 48C1EB06 		shr	rbx, 6	# tmp180,
 3145              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3146              		.loc 1 439 65 discriminator 2 view .LVU1005
 3147 1342 4801D6   		add	rsi, rdx	# range_start, step
 3148              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3149              		.loc 1 440 53 discriminator 2 view .LVU1006
 3150 1345 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp183
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3151              		.loc 1 439 53 is_stmt 1 discriminator 2 view .LVU1007
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3152              		.loc 1 439 16 discriminator 2 view .LVU1008
 3153              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3154              		.loc 1 439 9 is_stmt 0 discriminator 2 view .LVU1009
 3155 1349 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3156 134c 0F82BE00 		jb	.L215	#,
 3156      0000
 440:sieve_extend.c ****     }
 3157              		.loc 1 440 13 is_stmt 1 view .LVU1010
 3158              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3159              		.loc 1 440 53 is_stmt 0 view .LVU1011
 3160 1352 4989F3   		mov	r11, rsi	# tmp419, range_start
 3161              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3162              		.loc 1 440 56 view .LVU1012
GAS LISTING /tmp/ccRwwoRx.s 			page 93


 3163 1355 C442C9F7 		shlx	r12, r10, rsi	# tmp422, tmp184, range_start
 3163      E2
 3164              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3165              		.loc 1 440 53 view .LVU1013
 3166 135a 49C1EB06 		shr	r11, 6	# tmp419,
 3167              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3168              		.loc 1 439 65 view .LVU1014
 3169 135e 4801D6   		add	rsi, rdx	# range_start, step
 3170              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3171              		.loc 1 440 53 view .LVU1015
 3172 1361 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp422
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3173              		.loc 1 439 53 is_stmt 1 view .LVU1016
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3174              		.loc 1 439 16 view .LVU1017
 3175              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3176              		.loc 1 439 9 is_stmt 0 view .LVU1018
 3177 1365 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3178 1368 0F82A200 		jb	.L215	#,
 3178      0000
 440:sieve_extend.c ****     }
 3179              		.loc 1 440 13 is_stmt 1 view .LVU1019
 3180              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3181              		.loc 1 440 53 is_stmt 0 view .LVU1020
 3182 136e 4989F5   		mov	r13, rsi	# tmp423, range_start
 3183              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3184              		.loc 1 440 56 view .LVU1021
 3185 1371 C442C9F7 		shlx	r14, r10, rsi	# tmp426, tmp184, range_start
 3185      F2
 3186              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3187              		.loc 1 440 53 view .LVU1022
 3188 1376 49C1ED06 		shr	r13, 6	# tmp423,
 3189              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3190              		.loc 1 439 65 view .LVU1023
 3191 137a 4801D6   		add	rsi, rdx	# range_start, step
 3192              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3193              		.loc 1 440 53 view .LVU1024
 3194 137d 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp426
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3195              		.loc 1 439 53 is_stmt 1 view .LVU1025
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3196              		.loc 1 439 16 view .LVU1026
 3197              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3198              		.loc 1 439 9 is_stmt 0 view .LVU1027
 3199 1381 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3200 1384 0F828600 		jb	.L215	#,
 3200      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 94


 440:sieve_extend.c ****     }
 3201              		.loc 1 440 13 is_stmt 1 view .LVU1028
 3202              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3203              		.loc 1 440 53 is_stmt 0 view .LVU1029
 3204 138a 4989F7   		mov	r15, rsi	# tmp427, range_start
 3205              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3206              		.loc 1 440 56 view .LVU1030
 3207 138d C442C9F7 		shlx	r8, r10, rsi	# tmp430, tmp184, range_start
 3207      C2
 3208              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3209              		.loc 1 440 53 view .LVU1031
 3210 1392 49C1EF06 		shr	r15, 6	# tmp427,
 3211              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3212              		.loc 1 439 65 view .LVU1032
 3213 1396 4801D6   		add	rsi, rdx	# range_start, step
 3214              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3215              		.loc 1 440 53 view .LVU1033
 3216 1399 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp430
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3217              		.loc 1 439 53 is_stmt 1 view .LVU1034
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3218              		.loc 1 439 16 view .LVU1035
 3219              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3220              		.loc 1 439 9 is_stmt 0 view .LVU1036
 3221 139d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3222 13a0 726E     		jb	.L215	#,
 440:sieve_extend.c ****     }
 3223              		.loc 1 440 13 is_stmt 1 view .LVU1037
 3224              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3225              		.loc 1 440 53 is_stmt 0 view .LVU1038
 3226 13a2 4889F3   		mov	rbx, rsi	# tmp431, range_start
 3227              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3228              		.loc 1 440 56 view .LVU1039
 3229 13a5 C442C9F7 		shlx	r9, r10, rsi	# tmp434, tmp184, range_start
 3229      CA
 3230              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3231              		.loc 1 440 53 view .LVU1040
 3232 13aa 48C1EB06 		shr	rbx, 6	# tmp431,
 3233              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3234              		.loc 1 439 65 view .LVU1041
 3235 13ae 4801D6   		add	rsi, rdx	# range_start, step
 3236              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3237              		.loc 1 440 53 view .LVU1042
 3238 13b1 4C090CDF 		or	QWORD PTR [rdi+rbx*8], r9	# *_21, tmp434
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3239              		.loc 1 439 53 is_stmt 1 view .LVU1043
GAS LISTING /tmp/ccRwwoRx.s 			page 95


 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3240              		.loc 1 439 16 view .LVU1044
 3241              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3242              		.loc 1 439 9 is_stmt 0 view .LVU1045
 3243 13b5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3244 13b8 7256     		jb	.L215	#,
 440:sieve_extend.c ****     }
 3245              		.loc 1 440 13 is_stmt 1 view .LVU1046
 3246              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3247              		.loc 1 440 53 is_stmt 0 view .LVU1047
 3248 13ba 4989F3   		mov	r11, rsi	# tmp435, range_start
 3249              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3250              		.loc 1 440 56 view .LVU1048
 3251 13bd C442C9F7 		shlx	r12, r10, rsi	# tmp438, tmp184, range_start
 3251      E2
 3252              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3253              		.loc 1 440 53 view .LVU1049
 3254 13c2 49C1EB06 		shr	r11, 6	# tmp435,
 3255              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3256              		.loc 1 439 65 view .LVU1050
 3257 13c6 4801D6   		add	rsi, rdx	# range_start, step
 3258              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3259              		.loc 1 440 53 view .LVU1051
 3260 13c9 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp438
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3261              		.loc 1 439 53 is_stmt 1 view .LVU1052
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3262              		.loc 1 439 16 view .LVU1053
 3263              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3264              		.loc 1 439 9 is_stmt 0 view .LVU1054
 3265 13cd 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3266 13d0 723E     		jb	.L215	#,
 440:sieve_extend.c ****     }
 3267              		.loc 1 440 13 is_stmt 1 view .LVU1055
 3268              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3269              		.loc 1 440 53 is_stmt 0 view .LVU1056
 3270 13d2 4989F5   		mov	r13, rsi	# tmp439, range_start
 3271              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3272              		.loc 1 440 56 view .LVU1057
 3273 13d5 C442C9F7 		shlx	r14, r10, rsi	# tmp442, tmp184, range_start
 3273      F2
 3274              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3275              		.loc 1 440 53 view .LVU1058
 3276 13da 49C1ED06 		shr	r13, 6	# tmp439,
 3277              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3278              		.loc 1 439 65 view .LVU1059
GAS LISTING /tmp/ccRwwoRx.s 			page 96


 3279 13de 4801D6   		add	rsi, rdx	# range_start, step
 3280              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3281              		.loc 1 440 53 view .LVU1060
 3282 13e1 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp442
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3283              		.loc 1 439 53 is_stmt 1 view .LVU1061
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3284              		.loc 1 439 16 view .LVU1062
 3285              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3286              		.loc 1 439 9 is_stmt 0 view .LVU1063
 3287 13e5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3288 13e8 7226     		jb	.L215	#,
 440:sieve_extend.c ****     }
 3289              		.loc 1 440 13 is_stmt 1 view .LVU1064
 3290              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3291              		.loc 1 440 53 is_stmt 0 view .LVU1065
 3292 13ea 4989F7   		mov	r15, rsi	# tmp443, range_start
 3293              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3294              		.loc 1 440 56 view .LVU1066
 3295 13ed C442C9F7 		shlx	r8, r10, rsi	# tmp446, tmp184, range_start
 3295      C2
 3296              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3297              		.loc 1 440 53 view .LVU1067
 3298 13f2 49C1EF06 		shr	r15, 6	# tmp443,
 3299              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3300              		.loc 1 439 65 view .LVU1068
 3301 13f6 4801D6   		add	rsi, rdx	# range_start, step
 3302              	# sieve_extend.c:440:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 440:sieve_extend.c ****     }
 3303              		.loc 1 440 53 view .LVU1069
 3304 13f9 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_21, tmp446
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3305              		.loc 1 439 53 is_stmt 1 view .LVU1070
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3306              		.loc 1 439 16 view .LVU1071
 3307              	# sieve_extend.c:439:         for (; range_start <= range_start_atvector; range_start += step) 
 439:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3308              		.loc 1 439 9 is_stmt 0 view .LVU1072
 3309 13fd 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3310 1400 0F8330FF 		jnb	.L217	#,
 3310      FFFF
 3311 1406 662E0F1F 		.p2align 4
 3311      84000000 
 3311      0000
 3312              		.p2align 3
 3313              	.L215:
 443:sieve_extend.c **** 
 3314              		.loc 1 443 5 is_stmt 1 view .LVU1073
 3315              	# sieve_extend.c:443:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 443:sieve_extend.c **** 
 3316              		.loc 1 443 42 is_stmt 0 view .LVU1074
GAS LISTING /tmp/ccRwwoRx.s 			page 97


 3317 1410 4989D2   		mov	r10, rdx	# tmp185, step
 3318 1413 49C1E208 		sal	r10, 8	# tmp185,
 3319 1417 4901F2   		add	r10, rsi	# tmp186, range_start
 3320              	# sieve_extend.c:443:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 443:sieve_extend.c **** 
 3321              		.loc 1 443 21 view .LVU1075
 3322 141a 4939CA   		cmp	r10, rcx	# tmp186, range_stop
 3323 141d 4C0F47D1 		cmova	r10, rcx	# tmp186,, range_stop_unique, range_stop
 3324              	.LVL126:
 3325              	.LBB328:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3326              		.loc 1 447 10 is_stmt 1 view .LVU1076
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3327              		.loc 1 447 41 view .LVU1077
 3328              	# sieve_extend.c:447:     for (counter_t index = range_start; index < range_stop_unique;) {
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3329              		.loc 1 447 5 is_stmt 0 view .LVU1078
 3330 1421 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3331 1424 0F83EA04 		jnb	.L214	#,
 3331      0000
 3332              	.LBB329:
 3333              	.LBB330:
 3334              	.LBB331:
 3335              	# sieve_extend.c:393:     register const counter_t range_stop_vector = vectorindex(range_stop);
 393:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3336              		.loc 1 393 30 view .LVU1079
 3337 142a 48C1E908 		shr	rcx, 8	# range_stop,
 3338              	.LVL127:
 3339              	# sieve_extend.c:396:     register const counter_t step_4 = step * 4;
 396:sieve_extend.c **** 
 3340              		.loc 1 396 30 view .LVU1080
 3341 142e 4C8D2C95 		lea	r13, 0[0+rdx*4]	# step_4,
 3341      00000000 
 3342              	.LBB332:
 3343              	# sieve_extend.c:399:         register const counter_t loop_stop_vector = (range_stop_vector > step
 399:sieve_extend.c ****         //#pragma GCC unroll 16
 3344              		.loc 1 399 113 view .LVU1081
 3345 1436 4889CB   		mov	rbx, rcx	# iftmp.60_71, range_stop_vector
 3346              	.LBE332:
 3347              	# sieve_extend.c:393:     register const counter_t range_stop_vector = vectorindex(range_stop);
 393:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3348              		.loc 1 393 30 view .LVU1082
 3349 1439 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3350              	.LBB333:
 3351              	# sieve_extend.c:399:         register const counter_t loop_stop_vector = (range_stop_vector > step
 399:sieve_extend.c ****         //#pragma GCC unroll 16
 3352              		.loc 1 399 113 view .LVU1083
 3353 143c 4C29EB   		sub	rbx, r13	# iftmp.60_71, step_4
 3354 143f 4883FA01 		cmp	rdx, 1	# step,
 3355 1443 0F85EE04 		jne	.L395	#,
 3355      0000
 3356 1449 4883F904 		cmp	rcx, 4	# range_stop_vector,
 3357 144d BA000000 		mov	edx, 0	# tmp208,
 3357      00
 3358              	.LVL128:
 399:sieve_extend.c ****         //#pragma GCC unroll 16
 3359              		.loc 1 399 113 view .LVU1084
GAS LISTING /tmp/ccRwwoRx.s 			page 98


 3360              	.LBE333:
 3361              	.LBE331:
 3362              	.LBE330:
 3363              	# sieve_extend.c:449:         register bitvector_t quadmask = { };
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3364              		.loc 1 449 30 view .LVU1085
 3365 1452 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp209
 3366              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3367              		.loc 1 456 31 view .LVU1086
 3368 1456 41BB0100 		mov	r11d, 1	# tmp213,
 3368      0000
 3369 145c 480F46DA 		cmovbe	rbx, rdx	# iftmp.60_71,, iftmp.60_164, tmp208
 3370              	.LVL129:
 3371              		.p2align 4
 3372              		.p2align 3
 3373              	.L232:
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 3374              		.loc 1 448 9 is_stmt 1 view .LVU1087
 3375              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 3376              		.loc 1 448 54 is_stmt 0 view .LVU1088
 3377 1460 4889F1   		mov	rcx, rsi	# current_vector, range_start
 3378              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 3379              		.loc 1 450 35 view .LVU1089
 3380 1463 4889F0   		mov	rax, rsi	# tmp210, range_start
 3381              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 3382              		.loc 1 448 54 view .LVU1090
 3383 1466 48C1E908 		shr	rcx, 8	# current_vector,
 3384              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 3385              		.loc 1 450 35 view .LVU1091
 3386 146a 48C1E806 		shr	rax, 6	# tmp210,
 3387              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 3388              		.loc 1 448 25 view .LVU1092
 3389 146e 4C8D2C8D 		lea	r13, 0[0+rcx*4]	# current_vector_start_word,
 3389      00000000 
 3390              	.LVL130:
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3391              		.loc 1 449 9 is_stmt 1 view .LVU1093
 3392              	# sieve_extend.c:449:         register bitvector_t quadmask = { };
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3393              		.loc 1 449 30 is_stmt 0 view .LVU1094
 3394 1476 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp209
 3394      2420
 450:sieve_extend.c ****         
 3395              		.loc 1 450 9 is_stmt 1 view .LVU1095
 3396              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 3397              		.loc 1 450 28 is_stmt 0 view .LVU1096
 3398 147c 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3399              	.LVL131:
 3400              	.L227:
 456:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccRwwoRx.s 			page 99


 3401              		.loc 1 456 13 is_stmt 1 view .LVU1097
 3402              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3403              		.loc 1 456 31 is_stmt 0 view .LVU1098
 3404 147f C442C9F7 		shlx	r9, r11, rsi	# tmp212, tmp213, range_start
 3404      CB
 3405              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3406              		.loc 1 456 28 view .LVU1099
 3407 1484 4C094CC4 		or	QWORD PTR 32[rsp+rax*8], r9	# quadmask, tmp212
 3407      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3408              		.loc 1 457 13 is_stmt 1 view .LVU1100
 3409              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3410              		.loc 1 457 19 is_stmt 0 view .LVU1101
 3411 1489 488D4601 		lea	rax, 1[rsi]	# tmp236,
 3412              	.LVL132:
 3413              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3414              		.loc 1 458 20 view .LVU1102
 3415 148d 4989C7   		mov	r15, rax	# tmp214, range_start
 3416              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3417              		.loc 1 457 19 view .LVU1103
 3418 1490 4889C6   		mov	rsi, rax	# range_start, tmp236
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3419              		.loc 1 458 13 is_stmt 1 view .LVU1104
 3420              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3421              		.loc 1 458 20 is_stmt 0 view .LVU1105
 3422 1493 49C1EF06 		shr	r15, 6	# tmp214,
 3423              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3424              		.loc 1 458 18 view .LVU1106
 3425 1497 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3426              		.loc 1 459 17 is_stmt 1 view .LVU1107
 3427              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3428              		.loc 1 459 9 is_stmt 0 view .LVU1108
 3429 149a 4983FF03 		cmp	r15, 3	# word,
 3430 149e 0F87EC00 		ja	.L368	#,
 3430      0000
 456:sieve_extend.c ****             index += step;
 3431              		.loc 1 456 13 is_stmt 1 view .LVU1109
 3432              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3433              		.loc 1 457 19 is_stmt 0 view .LVU1110
 3434 14a4 4883C601 		add	rsi, 1	# range_start,
 3435              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3436              		.loc 1 456 31 view .LVU1111
 3437 14a8 C442F9F7 		shlx	r12, r11, rax	# tmp349, tmp213, range_start
 3437      E3
 3438              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccRwwoRx.s 			page 100


 3439              		.loc 1 458 20 view .LVU1112
 3440 14ad 4989F6   		mov	r14, rsi	# tmp350, range_start
 3441              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3442              		.loc 1 456 28 view .LVU1113
 3443 14b0 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp349
 3443      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3444              		.loc 1 457 13 is_stmt 1 view .LVU1114
 3445              	.LVL133:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3446              		.loc 1 458 13 view .LVU1115
 3447              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3448              		.loc 1 458 20 is_stmt 0 view .LVU1116
 3449 14b5 49C1EE06 		shr	r14, 6	# tmp350,
 3450              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3451              		.loc 1 458 18 view .LVU1117
 3452 14b9 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3453              		.loc 1 459 17 is_stmt 1 view .LVU1118
 3454              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3455              		.loc 1 459 9 is_stmt 0 view .LVU1119
 3456 14bc 4983FE03 		cmp	r14, 3	# word,
 3457 14c0 0F87CA00 		ja	.L368	#,
 3457      0000
 456:sieve_extend.c ****             index += step;
 3458              		.loc 1 456 13 is_stmt 1 view .LVU1120
 3459              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3460              		.loc 1 456 31 is_stmt 0 view .LVU1121
 3461 14c6 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp352, tmp213, range_start
 3461      F3
 3462              	.LVL134:
 3463              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3464              		.loc 1 456 28 view .LVU1122
 3465 14cb 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp352
 3465      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3466              		.loc 1 457 13 is_stmt 1 view .LVU1123
 3467              	.LVL135:
 3468              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3469              		.loc 1 457 19 is_stmt 0 view .LVU1124
 3470 14d0 488D7002 		lea	rsi, 2[rax]	# range_start,
 3471              	.LVL136:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3472              		.loc 1 458 13 is_stmt 1 view .LVU1125
 3473              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3474              		.loc 1 458 20 is_stmt 0 view .LVU1126
 3475 14d4 4889F2   		mov	rdx, rsi	# tmp353, range_start
 3476 14d7 48C1EA06 		shr	rdx, 6	# tmp353,
 3477              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccRwwoRx.s 			page 101


 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3478              		.loc 1 458 18 view .LVU1127
 3479 14db 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3480              		.loc 1 459 17 is_stmt 1 view .LVU1128
 3481              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3482              		.loc 1 459 9 is_stmt 0 view .LVU1129
 3483 14de 4883FA03 		cmp	rdx, 3	# word,
 3484 14e2 0F87A800 		ja	.L368	#,
 3484      0000
 456:sieve_extend.c ****             index += step;
 3485              		.loc 1 456 13 is_stmt 1 view .LVU1130
 3486              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3487              		.loc 1 456 31 is_stmt 0 view .LVU1131
 3488 14e8 C442C9F7 		shlx	r9, r11, rsi	# tmp355, tmp213, range_start
 3488      CB
 3489              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3490              		.loc 1 457 19 view .LVU1132
 3491 14ed 488D7003 		lea	rsi, 3[rax]	# range_start,
 3492              	.LVL137:
 3493              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3494              		.loc 1 458 20 view .LVU1133
 3495 14f1 4989F7   		mov	r15, rsi	# tmp356, range_start
 3496              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3497              		.loc 1 456 28 view .LVU1134
 3498 14f4 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp355
 3498      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3499              		.loc 1 457 13 is_stmt 1 view .LVU1135
 3500              	.LVL138:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3501              		.loc 1 458 13 view .LVU1136
 3502              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3503              		.loc 1 458 20 is_stmt 0 view .LVU1137
 3504 14f9 49C1EF06 		shr	r15, 6	# tmp356,
 3505              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3506              		.loc 1 458 18 view .LVU1138
 3507 14fd 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3508              		.loc 1 459 17 is_stmt 1 view .LVU1139
 3509              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3510              		.loc 1 459 9 is_stmt 0 view .LVU1140
 3511 1500 4983FF03 		cmp	r15, 3	# word,
 3512 1504 0F878600 		ja	.L368	#,
 3512      0000
 456:sieve_extend.c ****             index += step;
 3513              		.loc 1 456 13 is_stmt 1 view .LVU1141
 3514              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccRwwoRx.s 			page 102


 3515              		.loc 1 456 31 is_stmt 0 view .LVU1142
 3516 150a C442C9F7 		shlx	r12, r11, rsi	# tmp358, tmp213, range_start
 3516      E3
 3517              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3518              		.loc 1 457 19 view .LVU1143
 3519 150f 488D7004 		lea	rsi, 4[rax]	# range_start,
 3520              	.LVL139:
 3521              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3522              		.loc 1 458 20 view .LVU1144
 3523 1513 4989F6   		mov	r14, rsi	# tmp359, range_start
 3524              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3525              		.loc 1 456 28 view .LVU1145
 3526 1516 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp358
 3526      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3527              		.loc 1 457 13 is_stmt 1 view .LVU1146
 3528              	.LVL140:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3529              		.loc 1 458 13 view .LVU1147
 3530              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3531              		.loc 1 458 20 is_stmt 0 view .LVU1148
 3532 151b 49C1EE06 		shr	r14, 6	# tmp359,
 3533              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3534              		.loc 1 458 18 view .LVU1149
 3535 151f 4D29EE   		sub	r14, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3536              		.loc 1 459 17 is_stmt 1 view .LVU1150
 3537              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3538              		.loc 1 459 9 is_stmt 0 view .LVU1151
 3539 1522 4983FE03 		cmp	r14, 3	# word,
 3540 1526 7768     		ja	.L368	#,
 456:sieve_extend.c ****             index += step;
 3541              		.loc 1 456 13 is_stmt 1 view .LVU1152
 3542              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3543              		.loc 1 456 31 is_stmt 0 view .LVU1153
 3544 1528 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp361, tmp213, range_start
 3544      F3
 3545              	.LVL141:
 3546              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3547              		.loc 1 456 28 view .LVU1154
 3548 152d 4A0974F4 		or	QWORD PTR 32[rsp+r14*8], rsi	# quadmask, tmp361
 3548      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3549              		.loc 1 457 13 is_stmt 1 view .LVU1155
 3550              	.LVL142:
 3551              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3552              		.loc 1 457 19 is_stmt 0 view .LVU1156
 3553 1532 488D7005 		lea	rsi, 5[rax]	# range_start,
GAS LISTING /tmp/ccRwwoRx.s 			page 103


 3554              	.LVL143:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3555              		.loc 1 458 13 is_stmt 1 view .LVU1157
 3556              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3557              		.loc 1 458 20 is_stmt 0 view .LVU1158
 3558 1536 4889F2   		mov	rdx, rsi	# tmp362, range_start
 3559 1539 48C1EA06 		shr	rdx, 6	# tmp362,
 3560              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3561              		.loc 1 458 18 view .LVU1159
 3562 153d 4C29EA   		sub	rdx, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3563              		.loc 1 459 17 is_stmt 1 view .LVU1160
 3564              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3565              		.loc 1 459 9 is_stmt 0 view .LVU1161
 3566 1540 4883FA03 		cmp	rdx, 3	# word,
 3567 1544 774A     		ja	.L368	#,
 456:sieve_extend.c ****             index += step;
 3568              		.loc 1 456 13 is_stmt 1 view .LVU1162
 3569              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3570              		.loc 1 456 31 is_stmt 0 view .LVU1163
 3571 1546 C442C9F7 		shlx	r9, r11, rsi	# tmp364, tmp213, range_start
 3571      CB
 3572              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3573              		.loc 1 457 19 view .LVU1164
 3574 154b 488D7006 		lea	rsi, 6[rax]	# range_start,
 3575              	.LVL144:
 3576              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3577              		.loc 1 458 20 view .LVU1165
 3578 154f 4989F7   		mov	r15, rsi	# tmp365, range_start
 3579              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3580              		.loc 1 456 28 view .LVU1166
 3581 1552 4C094CD4 		or	QWORD PTR 32[rsp+rdx*8], r9	# quadmask, tmp364
 3581      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3582              		.loc 1 457 13 is_stmt 1 view .LVU1167
 3583              	.LVL145:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3584              		.loc 1 458 13 view .LVU1168
 3585              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3586              		.loc 1 458 20 is_stmt 0 view .LVU1169
 3587 1557 49C1EF06 		shr	r15, 6	# tmp365,
 3588              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3589              		.loc 1 458 18 view .LVU1170
 3590 155b 4D29EF   		sub	r15, r13	# word, current_vector_start_word
 459:sieve_extend.c ****         
 3591              		.loc 1 459 17 is_stmt 1 view .LVU1171
 3592              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
GAS LISTING /tmp/ccRwwoRx.s 			page 104


 3593              		.loc 1 459 9 is_stmt 0 view .LVU1172
 3594 155e 4983FF03 		cmp	r15, 3	# word,
 3595 1562 772C     		ja	.L368	#,
 456:sieve_extend.c ****             index += step;
 3596              		.loc 1 456 13 is_stmt 1 view .LVU1173
 3597              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3598              		.loc 1 456 31 is_stmt 0 view .LVU1174
 3599 1564 C442C9F7 		shlx	r12, r11, rsi	# tmp367, tmp213, range_start
 3599      E3
 3600              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3601              		.loc 1 457 19 view .LVU1175
 3602 1569 488D7007 		lea	rsi, 7[rax]	# range_start,
 3603              	.LVL146:
 3604              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3605              		.loc 1 458 20 view .LVU1176
 3606 156d 4889F0   		mov	rax, rsi	# tmp368, range_start
 3607              	.LVL147:
 3608              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 3609              		.loc 1 456 28 view .LVU1177
 3610 1570 4E0964FC 		or	QWORD PTR 32[rsp+r15*8], r12	# quadmask, tmp367
 3610      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3611              		.loc 1 457 13 is_stmt 1 view .LVU1178
 3612              	.LVL148:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3613              		.loc 1 458 13 view .LVU1179
 3614              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3615              		.loc 1 458 20 is_stmt 0 view .LVU1180
 3616 1575 48C1E806 		shr	rax, 6	# tmp368,
 3617              	.LVL149:
 3618              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3619              		.loc 1 458 18 view .LVU1181
 3620 1579 4C29E8   		sub	rax, r13	# word, current_vector_start_word
 3621              	.LVL150:
 459:sieve_extend.c ****         
 3622              		.loc 1 459 17 is_stmt 1 view .LVU1182
 3623              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 3624              		.loc 1 459 9 is_stmt 0 view .LVU1183
 3625 157c 4883F803 		cmp	rax, 3	# word,
 3626 1580 0F86F9FE 		jbe	.L227	#,
 3626      FFFF
 3627              	.LVL151:
 3628 1586 662E0F1F 		.p2align 4
 3628      84000000 
 3628      0000
 3629              		.p2align 3
 3630              	.L368:
 462:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 3631              		.loc 1 462 9 is_stmt 1 view .LVU1184
 465:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 105


 3632              		.loc 1 465 9 view .LVU1185
 3633 1590 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.59_166, quadmask
 3633      2420
 3634              	.LVL152:
 3635              	.LBB338:
 3636              	.LBI330:
 389:sieve_extend.c **** 
 3637              		.loc 1 389 20 view .LVU1186
 3638              	.LBB336:
 392:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 3639              		.loc 1 392 5 view .LVU1187
 393:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 3640              		.loc 1 393 5 view .LVU1188
 394:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 3641              		.loc 1 394 5 view .LVU1189
 395:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 3642              		.loc 1 395 5 view .LVU1190
 396:sieve_extend.c **** 
 3643              		.loc 1 396 5 view .LVU1191
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3644              		.loc 1 398 5 view .LVU1192
 3645              	# sieve_extend.c:398:     if (current_vector+step_4 <= range_stop_vector) {
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3646              		.loc 1 398 23 is_stmt 0 view .LVU1193
 3647 1596 488D5104 		lea	rdx, 4[rcx]	# current_vector,
 3648              	# sieve_extend.c:398:     if (current_vector+step_4 <= range_stop_vector) {
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 3649              		.loc 1 398 8 view .LVU1194
 3650 159a 4939D0   		cmp	r8, rdx	# range_stop_vector, current_vector
 3651 159d 0F820D02 		jb	.L228	#,
 3651      0000
 3652              	.LBB334:
 399:sieve_extend.c ****         //#pragma GCC unroll 16
 3653              		.loc 1 399 9 is_stmt 1 view .LVU1195
 3654              	.LVL153:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3655              		.loc 1 402 15 view .LVU1196
 3656              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3657              		.loc 1 402 9 is_stmt 0 view .LVU1197
 3658 15a3 4839CB   		cmp	rbx, rcx	# iftmp.60_164, current_vector
 3659 15a6 0F820402 		jb	.L228	#,
 3659      0000
 3660 15ac 4989D9   		mov	r9, rbx	# tmp231, iftmp.60_164
 3661 15af 4989CD   		mov	r13, rcx	# current_vector, current_vector
 3662              	.LVL154:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3663              		.loc 1 402 9 view .LVU1198
 3664 15b2 49C1E505 		sal	r13, 5	# current_vector,
 3665 15b6 4929D1   		sub	r9, rdx	# tmp231, current_vector
 3666 15b9 4983C104 		add	r9, 4	# tmp232,
 3667 15bd 4901FD   		add	r13, rdi	# ivtmp.263, bitstorage_word
 3668 15c0 49C1E902 		shr	r9, 2	# tmp230,
 3669 15c4 4183E103 		and	r9d, 3	# tmp230,
 3670 15c8 0F84A101 		je	.L229	#,
 3670      0000
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 106


 3671              		.loc 1 403 13 is_stmt 1 view .LVU1199
 3672              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3673              		.loc 1 403 54 is_stmt 0 view .LVU1200
 3674 15ce C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 0[r13]	# tmp335, quadmask.59_166, MEM[base: _102, offset: 0B]
 3674      6500
 3675              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3676              		.loc 1 404 54 view .LVU1201
 3677 15d4 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 32[r13]	# tmp336, quadmask.59_166, MEM[base: _102, offset: 32B]
 3677      6D20
 3678              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3679              		.loc 1 405 54 view .LVU1202
 3680 15da C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR 64[r13]	# tmp337, quadmask.59_166, MEM[base: _102, offset: 64B]
 3680      7540
 3681              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3682              		.loc 1 406 54 view .LVU1203
 3683 15e0 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 96[r13]	# tmp338, quadmask.59_166, MEM[base: _102, offset: 96B]
 3683      7D60
 3684              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3685              		.loc 1 403 54 view .LVU1204
 3686 15e6 C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm12	# MEM[base: _102, offset: 0B], tmp335
 3686      6500
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3687              		.loc 1 404 13 is_stmt 1 view .LVU1205
 3688 15ec 4983ED80 		sub	r13, -128	# ivtmp.263,
 3689              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3690              		.loc 1 404 54 is_stmt 0 view .LVU1206
 3691 15f0 C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm13	# MEM[base: _102, offset: 32B], tmp336
 3691      6DA0
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3692              		.loc 1 405 13 is_stmt 1 view .LVU1207
 3693              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3694              		.loc 1 402 66 is_stmt 0 view .LVU1208
 3695 15f6 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3696              	.LVL155:
 3697              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3698              		.loc 1 405 54 view .LVU1209
 3699 15f9 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm14	# MEM[base: _102, offset: 64B], tmp337
 3699      75C0
 406:sieve_extend.c ****         }
 3700              		.loc 1 406 13 is_stmt 1 view .LVU1210
 3701              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3702              		.loc 1 406 54 is_stmt 0 view .LVU1211
 3703 15ff C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm15	# MEM[base: _102, offset: 96B], tmp338
 3703      7DE0
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3704              		.loc 1 402 51 is_stmt 1 view .LVU1212
 3705              	.LVL156:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 107


 3706              		.loc 1 402 15 view .LVU1213
 3707              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3708              		.loc 1 402 9 is_stmt 0 view .LVU1214
 3709 1605 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.60_164
 3710 1608 0F87A201 		ja	.L228	#,
 3710      0000
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3711              		.loc 1 402 9 view .LVU1215
 3712 160e 4983F901 		cmp	r9, 1	# tmp233,
 3713 1612 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3714              	.LVL157:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3715              		.loc 1 402 9 view .LVU1216
 3716 1616 0F845301 		je	.L229	#,
 3716      0000
 3717 161c 4983F902 		cmp	r9, 2	# tmp233,
 3718 1620 7438     		je	.L332	#,
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3719              		.loc 1 403 13 is_stmt 1 view .LVU1217
 3720              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3721              		.loc 1 403 54 is_stmt 0 view .LVU1218
 3722 1622 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 0[r13]	# tmp339, quadmask.59_166, MEM[base: _102, offset: 0B]
 3722      4D00
 3723              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3724              		.loc 1 404 54 view .LVU1219
 3725 1628 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 32[r13]	# tmp340, quadmask.59_166, MEM[base: _102, offset: 32B]
 3725      5D20
 3726              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3727              		.loc 1 405 54 view .LVU1220
 3728 162e C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 64[r13]	# tmp341, quadmask.59_166, MEM[base: _102, offset: 64B]
 3728      6540
 3729              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3730              		.loc 1 406 54 view .LVU1221
 3731 1634 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 96[r13]	# tmp342, quadmask.59_166, MEM[base: _102, offset: 96B]
 3731      6D60
 3732              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3733              		.loc 1 403 54 view .LVU1222
 3734 163a C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm1	# MEM[base: _102, offset: 0B], tmp339
 3734      4D00
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3735              		.loc 1 404 13 is_stmt 1 view .LVU1223
 3736 1640 488D5108 		lea	rdx, 8[rcx]	# current_vector,
 3737              	.LVL158:
 3738              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3739              		.loc 1 404 54 is_stmt 0 view .LVU1224
 3740 1644 C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm3	# MEM[base: _102, offset: 32B], tmp340
 3740      5D20
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3741              		.loc 1 405 13 is_stmt 1 view .LVU1225
 3742 164a 4983ED80 		sub	r13, -128	# ivtmp.263,
GAS LISTING /tmp/ccRwwoRx.s 			page 108


 3743              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3744              		.loc 1 405 54 is_stmt 0 view .LVU1226
 3745 164e C4C17D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm4	# MEM[base: _102, offset: 64B], tmp341
 3745      65C0
 406:sieve_extend.c ****         }
 3746              		.loc 1 406 13 is_stmt 1 view .LVU1227
 3747              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3748              		.loc 1 406 54 is_stmt 0 view .LVU1228
 3749 1654 C4C17D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm5	# MEM[base: _102, offset: 96B], tmp342
 3749      6DE0
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3750              		.loc 1 402 51 is_stmt 1 view .LVU1229
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3751              		.loc 1 402 15 view .LVU1230
 3752              	.LVL159:
 3753              	.L332:
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3754              		.loc 1 403 13 view .LVU1231
 3755              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3756              		.loc 1 403 54 is_stmt 0 view .LVU1232
 3757 165a C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 0[r13]	# tmp344, quadmask.59_166, MEM[base: _102, offset: 0B]
 3757      7500
 3758              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3759              		.loc 1 404 54 view .LVU1233
 3760 1660 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 32[r13]	# tmp345, quadmask.59_166, MEM[base: _102, offset: 32B]
 3760      7D20
 3761              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3762              		.loc 1 405 54 view .LVU1234
 3763 1666 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 64[r13]	# tmp346, quadmask.59_166, MEM[base: _102, offset: 64B]
 3763      4540
 3764              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3765              		.loc 1 406 54 view .LVU1235
 3766 166c C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 96[r13]	# tmp347, quadmask.59_166, MEM[base: _102, offset: 96B]
 3766      4D60
 3767              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3768              		.loc 1 403 54 view .LVU1236
 3769 1672 C4C17D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm6	# MEM[base: _102, offset: 0B], tmp344
 3769      7500
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3770              		.loc 1 404 13 is_stmt 1 view .LVU1237
 3771 1678 488D5204 		lea	rdx, 4[rdx]	# current_vector,
 3772              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3773              		.loc 1 404 54 is_stmt 0 view .LVU1238
 3774 167c C4C17D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm7	# MEM[base: _102, offset: 32B], tmp345
 3774      7D20
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3775              		.loc 1 405 13 is_stmt 1 view .LVU1239
 3776 1682 4983ED80 		sub	r13, -128	# ivtmp.263,
 3777              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 109


 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3778              		.loc 1 405 54 is_stmt 0 view .LVU1240
 3779 1686 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm8	# MEM[base: _102, offset: 64B], tmp346
 3779      45C0
 406:sieve_extend.c ****         }
 3780              		.loc 1 406 13 is_stmt 1 view .LVU1241
 3781              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3782              		.loc 1 406 54 is_stmt 0 view .LVU1242
 3783 168c C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm9	# MEM[base: _102, offset: 96B], tmp347
 3783      4DE0
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3784              		.loc 1 402 51 is_stmt 1 view .LVU1243
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3785              		.loc 1 402 15 view .LVU1244
 3786 1692 E9D80000 		jmp	.L229	#
 3786      00
 3787              	.LVL160:
 3788              		.p2align 4,,7
 3789 1697 90       		.p2align 3
 3790              	.L396:
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3791              		.loc 1 403 13 view .LVU1245
 3792              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3793              		.loc 1 403 54 is_stmt 0 view .LVU1246
 3794 1698 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR 128[r13]	# tmp251, quadmask.59_166, MEM[base: _102, offset: 0B]
 3794      8D800000 
 3794      00
 3795              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3796              		.loc 1 404 54 view .LVU1247
 3797 16a1 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR 160[r13]	# tmp252, quadmask.59_166, MEM[base: _102, offset: 32B]
 3797      9DA00000 
 3797      00
 3798              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3799              		.loc 1 405 54 view .LVU1248
 3800 16aa C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 192[r13]	# tmp253, quadmask.59_166, MEM[base: _102, offset: 64B]
 3800      A5C00000 
 3800      00
 3801              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3802              		.loc 1 406 54 view .LVU1249
 3803 16b3 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR 224[r13]	# tmp254, quadmask.59_166, MEM[base: _102, offset: 96B]
 3803      ADE00000 
 3803      00
 3804              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3805              		.loc 1 403 54 view .LVU1250
 3806 16bc C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR 256[r13]	# tmp258, quadmask.59_166, MEM[base: _102, offset: 0B]
 3806      B5000100 
 3806      00
 3807              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3808              		.loc 1 404 54 view .LVU1251
 3809 16c5 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR 288[r13]	# tmp259, quadmask.59_166, MEM[base: _102, offset: 32B]
GAS LISTING /tmp/ccRwwoRx.s 			page 110


 3809      BD200100 
 3809      00
 3810              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3811              		.loc 1 405 54 view .LVU1252
 3812 16ce C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR 320[r13]	# tmp260, quadmask.59_166, MEM[base: _102, offset: 64B]
 3812      85400100 
 3812      00
 3813              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3814              		.loc 1 406 54 view .LVU1253
 3815 16d7 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR 352[r13]	# tmp261, quadmask.59_166, MEM[base: _102, offset: 96B]
 3815      8D600100 
 3815      00
 3816              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3817              		.loc 1 403 54 view .LVU1254
 3818 16e0 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 384[r13]	# tmp265, quadmask.59_166, MEM[base: _102, offset: 0B]
 3818      95800100 
 3818      00
 3819              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3820              		.loc 1 404 54 view .LVU1255
 3821 16e9 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 416[r13]	# tmp266, quadmask.59_166, MEM[base: _102, offset: 32B]
 3821      9DA00100 
 3821      00
 3822              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3823              		.loc 1 405 54 view .LVU1256
 3824 16f2 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 448[r13]	# tmp267, quadmask.59_166, MEM[base: _102, offset: 64B]
 3824      A5C00100 
 3824      00
 3825              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3826              		.loc 1 406 54 view .LVU1257
 3827 16fb C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 480[r13]	# tmp268, quadmask.59_166, MEM[base: _102, offset: 96B]
 3827      ADE00100 
 3827      00
 3828              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3829              		.loc 1 403 54 view .LVU1258
 3830 1704 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r13], ymm1	# MEM[base: _102, offset: 0B], tmp251
 3830      8D800000 
 3830      00
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3831              		.loc 1 404 13 is_stmt 1 view .LVU1259
 3832 170d 488D5210 		lea	rdx, 16[rdx]	# current_vector,
 3833              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3834              		.loc 1 404 54 is_stmt 0 view .LVU1260
 3835 1711 C4C17D7F 		vmovdqa	YMMWORD PTR 160[r13], ymm3	# MEM[base: _102, offset: 32B], tmp252
 3835      9DA00000 
 3835      00
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3836              		.loc 1 405 13 is_stmt 1 view .LVU1261
 3837 171a 4981C500 		add	r13, 512	# ivtmp.263,
 3837      020000
GAS LISTING /tmp/ccRwwoRx.s 			page 111


 3838              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3839              		.loc 1 405 54 is_stmt 0 view .LVU1262
 3840 1721 C4C17D7F 		vmovdqa	YMMWORD PTR -320[r13], ymm4	# MEM[base: _102, offset: 64B], tmp253
 3840      A5C0FEFF 
 3840      FF
 406:sieve_extend.c ****         }
 3841              		.loc 1 406 13 is_stmt 1 view .LVU1263
 3842              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3843              		.loc 1 406 54 is_stmt 0 view .LVU1264
 3844 172a C4C17D7F 		vmovdqa	YMMWORD PTR -288[r13], ymm5	# MEM[base: _102, offset: 96B], tmp254
 3844      ADE0FEFF 
 3844      FF
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3845              		.loc 1 402 51 is_stmt 1 view .LVU1265
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3846              		.loc 1 402 15 view .LVU1266
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3847              		.loc 1 403 13 view .LVU1267
 3848              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3849              		.loc 1 403 54 is_stmt 0 view .LVU1268
 3850 1733 C4C17D7F 		vmovdqa	YMMWORD PTR -256[r13], ymm6	# MEM[base: _102, offset: 0B], tmp258
 3850      B500FFFF 
 3850      FF
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3851              		.loc 1 404 13 is_stmt 1 view .LVU1269
 3852              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3853              		.loc 1 404 54 is_stmt 0 view .LVU1270
 3854 173c C4C17D7F 		vmovdqa	YMMWORD PTR -224[r13], ymm7	# MEM[base: _102, offset: 32B], tmp259
 3854      BD20FFFF 
 3854      FF
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3855              		.loc 1 405 13 is_stmt 1 view .LVU1271
 3856              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3857              		.loc 1 405 54 is_stmt 0 view .LVU1272
 3858 1745 C4417D7F 		vmovdqa	YMMWORD PTR -192[r13], ymm8	# MEM[base: _102, offset: 64B], tmp260
 3858      8540FFFF 
 3858      FF
 406:sieve_extend.c ****         }
 3859              		.loc 1 406 13 is_stmt 1 view .LVU1273
 3860              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3861              		.loc 1 406 54 is_stmt 0 view .LVU1274
 3862 174e C4417D7F 		vmovdqa	YMMWORD PTR -160[r13], ymm9	# MEM[base: _102, offset: 96B], tmp261
 3862      8D60FFFF 
 3862      FF
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3863              		.loc 1 402 51 is_stmt 1 view .LVU1275
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3864              		.loc 1 402 15 view .LVU1276
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3865              		.loc 1 403 13 view .LVU1277
 3866              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 112


 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3867              		.loc 1 403 54 is_stmt 0 view .LVU1278
 3868 1757 C4417D7F 		vmovdqa	YMMWORD PTR -128[r13], ymm10	# MEM[base: _102, offset: 0B], tmp265
 3868      5580
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3869              		.loc 1 404 13 is_stmt 1 view .LVU1279
 3870              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3871              		.loc 1 404 54 is_stmt 0 view .LVU1280
 3872 175d C4417D7F 		vmovdqa	YMMWORD PTR -96[r13], ymm11	# MEM[base: _102, offset: 32B], tmp266
 3872      5DA0
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3873              		.loc 1 405 13 is_stmt 1 view .LVU1281
 3874              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3875              		.loc 1 405 54 is_stmt 0 view .LVU1282
 3876 1763 C4417D7F 		vmovdqa	YMMWORD PTR -64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp267
 3876      65C0
 406:sieve_extend.c ****         }
 3877              		.loc 1 406 13 is_stmt 1 view .LVU1283
 3878              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3879              		.loc 1 406 54 is_stmt 0 view .LVU1284
 3880 1769 C4417D7F 		vmovdqa	YMMWORD PTR -32[r13], ymm13	# MEM[base: _102, offset: 96B], tmp268
 3880      6DE0
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3881              		.loc 1 402 51 is_stmt 1 view .LVU1285
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3882              		.loc 1 402 15 view .LVU1286
 3883              	.LVL161:
 3884              	.L229:
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3885              		.loc 1 403 13 view .LVU1287
 3886              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3887              		.loc 1 403 54 is_stmt 0 view .LVU1288
 3888 176f C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR 0[r13]	# tmp217, quadmask.59_166, MEM[base: _102, offset: 0B]
 3888      5500
 3889              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3890              		.loc 1 404 54 view .LVU1289
 3891 1775 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR 32[r13]	# tmp218, quadmask.59_166, MEM[base: _102, offset: 32B]
 3891      5D20
 3892              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3893              		.loc 1 405 54 view .LVU1290
 3894 177b C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR 64[r13]	# tmp219, quadmask.59_166, MEM[base: _102, offset: 64B]
 3894      6540
 3895              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3896              		.loc 1 406 54 view .LVU1291
 3897 1781 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR 96[r13]	# tmp220, quadmask.59_166, MEM[base: _102, offset: 96B]
 3897      6D60
 3898              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3899              		.loc 1 402 9 view .LVU1292
 3900 1787 4839DA   		cmp	rdx, rbx	# current_vector, iftmp.60_164
GAS LISTING /tmp/ccRwwoRx.s 			page 113


 3901              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3902              		.loc 1 402 66 view .LVU1293
 3903 178a 4889D1   		mov	rcx, rdx	# current_vector, current_vector
 3904              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 3905              		.loc 1 403 54 view .LVU1294
 3906 178d C4417D7F 		vmovdqa	YMMWORD PTR 0[r13], ymm10	# MEM[base: _102, offset: 0B], tmp217
 3906      5500
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3907              		.loc 1 404 13 is_stmt 1 view .LVU1295
 3908              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 3909              		.loc 1 404 54 is_stmt 0 view .LVU1296
 3910 1793 C4417D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm11	# MEM[base: _102, offset: 32B], tmp218
 3910      5D20
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3911              		.loc 1 405 13 is_stmt 1 view .LVU1297
 3912              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 3913              		.loc 1 405 54 is_stmt 0 view .LVU1298
 3914 1799 C4417D7F 		vmovdqa	YMMWORD PTR 64[r13], ymm12	# MEM[base: _102, offset: 64B], tmp219
 3914      6540
 406:sieve_extend.c ****         }
 3915              		.loc 1 406 13 is_stmt 1 view .LVU1299
 3916              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 3917              		.loc 1 406 54 is_stmt 0 view .LVU1300
 3918 179f C4417D7F 		vmovdqa	YMMWORD PTR 96[r13], ymm13	# MEM[base: _102, offset: 96B], tmp220
 3918      6D60
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3919              		.loc 1 402 51 is_stmt 1 view .LVU1301
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3920              		.loc 1 402 15 view .LVU1302
 3921              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3922              		.loc 1 402 9 is_stmt 0 view .LVU1303
 3923 17a5 0F86EDFE 		jbe	.L396	#,
 3923      FFFF
 3924              	.LVL162:
 3925 17ab 0F1F4400 		.p2align 4
 3925      00
 3926              		.p2align 3
 3927              	.L228:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 3928              		.loc 1 402 9 view .LVU1304
 3929              	.LBE334:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3930              		.loc 1 412 11 is_stmt 1 view .LVU1305
 3931              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3932              		.loc 1 412 5 is_stmt 0 view .LVU1306
 3933 17b0 4939C8   		cmp	r8, rcx	# range_stop_vector, current_vector
 3934 17b3 0F824F01 		jb	.L230	#,
 3934      0000
 3935 17b9 4989CF   		mov	r15, rcx	# tmp221, current_vector
 3936 17bc 4D89C4   		mov	r12, r8	# tmp226, range_stop_vector
GAS LISTING /tmp/ccRwwoRx.s 			page 114


 3937 17bf 49C1E705 		sal	r15, 5	# tmp221,
 3938 17c3 4929CC   		sub	r12, rcx	# tmp226, current_vector
 3939              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3940              		.loc 1 412 63 view .LVU1307
 3941 17c6 4C8D6901 		lea	r13, 1[rcx]	# current_vector,
 3942 17ca 4901FF   		add	r15, rdi	# ivtmp.273, bitstorage_word
 3943 17cd 4183E407 		and	r12d, 7	# tmp227,
 413:sieve_extend.c ****     }
 3944              		.loc 1 413 9 is_stmt 1 view .LVU1308
 3945              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3946              		.loc 1 413 43 is_stmt 0 view .LVU1309
 3947 17d1 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r15]	# tmp222, quadmask.59_166, MEM[base: _177, offset: 0B]
 3947      37
 3948              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3949              		.loc 1 412 5 view .LVU1310
 3950 17d6 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 3951 17d9 498D4720 		lea	rax, 32[r15]	# ivtmp.273,
 3952              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3953              		.loc 1 413 43 view .LVU1311
 3954 17dd C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm14	# MEM[base: _177, offset: 0B], tmp222
 3954      37
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3955              		.loc 1 412 48 is_stmt 1 view .LVU1312
 3956              	.LVL163:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3957              		.loc 1 412 11 view .LVU1313
 3958              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3959              		.loc 1 412 5 is_stmt 0 view .LVU1314
 3960 17e2 0F822001 		jb	.L230	#,
 3960      0000
 3961 17e8 4D85E4   		test	r12, r12	# tmp227
 3962 17eb 0F84A100 		je	.L231	#,
 3962      0000
 3963 17f1 4983FC01 		cmp	r12, 1	# tmp227,
 3964 17f5 0F848200 		je	.L326	#,
 3964      0000
 3965 17fb 4983FC02 		cmp	r12, 2	# tmp227,
 3966 17ff 746C     		je	.L327	#,
 3967 1801 4983FC03 		cmp	r12, 3	# tmp227,
 3968 1805 7456     		je	.L328	#,
 3969 1807 4983FC04 		cmp	r12, 4	# tmp227,
 3970 180b 7440     		je	.L329	#,
 3971 180d 4983FC05 		cmp	r12, 5	# tmp227,
 3972 1811 742A     		je	.L330	#,
 3973 1813 4983FC06 		cmp	r12, 6	# tmp227,
 3974 1817 7414     		je	.L331	#,
 413:sieve_extend.c ****     }
 3975              		.loc 1 413 9 is_stmt 1 view .LVU1315
 3976              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3977              		.loc 1 413 43 is_stmt 0 view .LVU1316
 3978 1819 C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR 32[r15]	# tmp328, quadmask.59_166, MEM[base: _177, offset: 0B]
GAS LISTING /tmp/ccRwwoRx.s 			page 115


 3978      7F20
 3979              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3980              		.loc 1 412 63 view .LVU1317
 3981 181f 4C8D6902 		lea	r13, 2[rcx]	# current_vector,
 3982              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3983              		.loc 1 413 43 view .LVU1318
 3984 1823 C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm15	# MEM[base: _177, offset: 0B], tmp328
 3984      7F20
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3985              		.loc 1 412 48 is_stmt 1 view .LVU1319
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3986              		.loc 1 412 11 view .LVU1320
 3987 1829 498D4740 		lea	rax, 64[r15]	# ivtmp.273,
 3988              	.L331:
 413:sieve_extend.c ****     }
 3989              		.loc 1 413 9 view .LVU1321
 3990              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3991              		.loc 1 413 43 is_stmt 0 view .LVU1322
 3992 182d C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp329, quadmask.59_166, MEM[base: _177, offset: 0B]
 3993              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3994              		.loc 1 412 63 view .LVU1323
 3995 1831 4983C501 		add	r13, 1	# current_vector,
 3996              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 3997              		.loc 1 413 43 view .LVU1324
 3998 1835 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _177, offset: 0B], tmp329
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 3999              		.loc 1 412 48 is_stmt 1 view .LVU1325
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4000              		.loc 1 412 11 view .LVU1326
 4001 1839 4883C020 		add	rax, 32	# ivtmp.273,
 4002              	.LVL164:
 4003              	.L330:
 413:sieve_extend.c ****     }
 4004              		.loc 1 413 9 view .LVU1327
 4005              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4006              		.loc 1 413 43 is_stmt 0 view .LVU1328
 4007 183d C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp330, quadmask.59_166, MEM[base: _177, offset: 0B]
 4008              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4009              		.loc 1 412 63 view .LVU1329
 4010 1841 4983C501 		add	r13, 1	# current_vector,
 4011              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4012              		.loc 1 413 43 view .LVU1330
 4013 1845 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: _177, offset: 0B], tmp330
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4014              		.loc 1 412 48 is_stmt 1 view .LVU1331
 4015              	.LVL165:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4016              		.loc 1 412 11 view .LVU1332
 4017 1849 4883C020 		add	rax, 32	# ivtmp.273,
GAS LISTING /tmp/ccRwwoRx.s 			page 116


 4018              	.LVL166:
 4019              	.L329:
 413:sieve_extend.c ****     }
 4020              		.loc 1 413 9 view .LVU1333
 4021              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4022              		.loc 1 413 43 is_stmt 0 view .LVU1334
 4023 184d C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp331, quadmask.59_166, MEM[base: _177, offset: 0B]
 4024              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4025              		.loc 1 412 63 view .LVU1335
 4026 1851 4983C501 		add	r13, 1	# current_vector,
 4027              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4028              		.loc 1 413 43 view .LVU1336
 4029 1855 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _177, offset: 0B], tmp331
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4030              		.loc 1 412 48 is_stmt 1 view .LVU1337
 4031              	.LVL167:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4032              		.loc 1 412 11 view .LVU1338
 4033 1859 4883C020 		add	rax, 32	# ivtmp.273,
 4034              	.LVL168:
 4035              	.L328:
 413:sieve_extend.c ****     }
 4036              		.loc 1 413 9 view .LVU1339
 4037              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4038              		.loc 1 413 43 is_stmt 0 view .LVU1340
 4039 185d C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp332, quadmask.59_166, MEM[base: _177, offset: 0B]
 4040              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4041              		.loc 1 412 63 view .LVU1341
 4042 1861 4983C501 		add	r13, 1	# current_vector,
 4043              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4044              		.loc 1 413 43 view .LVU1342
 4045 1865 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _177, offset: 0B], tmp332
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4046              		.loc 1 412 48 is_stmt 1 view .LVU1343
 4047              	.LVL169:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4048              		.loc 1 412 11 view .LVU1344
 4049 1869 4883C020 		add	rax, 32	# ivtmp.273,
 4050              	.LVL170:
 4051              	.L327:
 413:sieve_extend.c ****     }
 4052              		.loc 1 413 9 view .LVU1345
 4053              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4054              		.loc 1 413 43 is_stmt 0 view .LVU1346
 4055 186d C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp333, quadmask.59_166, MEM[base: _177, offset: 0B]
 4056              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4057              		.loc 1 412 63 view .LVU1347
 4058 1871 4983C501 		add	r13, 1	# current_vector,
 4059              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 117


 413:sieve_extend.c ****     }
 4060              		.loc 1 413 43 view .LVU1348
 4061 1875 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _177, offset: 0B], tmp333
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4062              		.loc 1 412 48 is_stmt 1 view .LVU1349
 4063              	.LVL171:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4064              		.loc 1 412 11 view .LVU1350
 4065 1879 4883C020 		add	rax, 32	# ivtmp.273,
 4066              	.LVL172:
 4067              	.L326:
 413:sieve_extend.c ****     }
 4068              		.loc 1 413 9 view .LVU1351
 4069              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4070              		.loc 1 413 43 is_stmt 0 view .LVU1352
 4071 187d C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp334, quadmask.59_166, MEM[base: _177, offset: 0B]
 4072              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4073              		.loc 1 412 63 view .LVU1353
 4074 1881 4983C501 		add	r13, 1	# current_vector,
 4075              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4076              		.loc 1 413 43 view .LVU1354
 4077 1885 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _177, offset: 0B], tmp334
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4078              		.loc 1 412 48 is_stmt 1 view .LVU1355
 4079              	.LVL173:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4080              		.loc 1 412 11 view .LVU1356
 4081 1889 4883C020 		add	rax, 32	# ivtmp.273,
 4082              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4083              		.loc 1 412 5 is_stmt 0 view .LVU1357
 4084 188d 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4085 1890 7276     		jb	.L230	#,
 4086              	.LVL174:
 4087              	.L231:
 413:sieve_extend.c ****     }
 4088              		.loc 1 413 9 is_stmt 1 view .LVU1358
 4089              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4090              		.loc 1 413 43 is_stmt 0 view .LVU1359
 4091 1892 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp272, quadmask.59_166, MEM[base: _177, offset: 0B]
 4092 1896 C57DEB48 		vpor	ymm9, ymm0, YMMWORD PTR 32[rax]	# tmp275, quadmask.59_166, MEM[base: _177, offset: 0B]
 4092      20
 4093 189b C57DEB50 		vpor	ymm10, ymm0, YMMWORD PTR 64[rax]	# tmp278, quadmask.59_166, MEM[base: _177, offset: 0B]
 4093      40
 4094 18a0 C57DEB58 		vpor	ymm11, ymm0, YMMWORD PTR 96[rax]	# tmp281, quadmask.59_166, MEM[base: _177, offset: 0B]
 4094      60
 4095 18a5 C57DEBA0 		vpor	ymm12, ymm0, YMMWORD PTR 128[rax]	# tmp284, quadmask.59_166, MEM[base: _177, offset: 0B]
 4095      80000000 
 4096 18ad C57DEBA8 		vpor	ymm13, ymm0, YMMWORD PTR 160[rax]	# tmp287, quadmask.59_166, MEM[base: _177, offset: 0B]
 4096      A0000000 
 4097 18b5 C57DEBB0 		vpor	ymm14, ymm0, YMMWORD PTR 192[rax]	# tmp290, quadmask.59_166, MEM[base: _177, offset: 0B]
 4097      C0000000 
 4098 18bd C57DEBB8 		vpor	ymm15, ymm0, YMMWORD PTR 224[rax]	# tmp293, quadmask.59_166, MEM[base: _177, offset: 0B]
GAS LISTING /tmp/ccRwwoRx.s 			page 118


 4098      E0000000 
 4099              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4100              		.loc 1 412 63 view .LVU1360
 4101 18c5 4983C508 		add	r13, 8	# current_vector,
 4102 18c9 48050001 		add	rax, 256	# ivtmp.273,
 4102      0000
 4103              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4104              		.loc 1 413 43 view .LVU1361
 4105 18cf C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _177, offset: 0B], tmp272
 4105      00FFFFFF 
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4106              		.loc 1 412 48 is_stmt 1 view .LVU1362
 4107              	.LVL175:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4108              		.loc 1 412 11 view .LVU1363
 413:sieve_extend.c ****     }
 4109              		.loc 1 413 9 view .LVU1364
 4110              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4111              		.loc 1 413 43 is_stmt 0 view .LVU1365
 4112 18d7 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _177, offset: 0B], tmp275
 4112      20FFFFFF 
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4113              		.loc 1 412 48 is_stmt 1 view .LVU1366
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4114              		.loc 1 412 11 view .LVU1367
 413:sieve_extend.c ****     }
 4115              		.loc 1 413 9 view .LVU1368
 4116              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4117              		.loc 1 413 43 is_stmt 0 view .LVU1369
 4118 18df C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _177, offset: 0B], tmp278
 4118      40FFFFFF 
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4119              		.loc 1 412 48 is_stmt 1 view .LVU1370
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4120              		.loc 1 412 11 view .LVU1371
 413:sieve_extend.c ****     }
 4121              		.loc 1 413 9 view .LVU1372
 4122              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4123              		.loc 1 413 43 is_stmt 0 view .LVU1373
 4124 18e7 C57D7F98 		vmovdqa	YMMWORD PTR -160[rax], ymm11	# MEM[base: _177, offset: 0B], tmp281
 4124      60FFFFFF 
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4125              		.loc 1 412 48 is_stmt 1 view .LVU1374
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4126              		.loc 1 412 11 view .LVU1375
 413:sieve_extend.c ****     }
 4127              		.loc 1 413 9 view .LVU1376
 4128              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4129              		.loc 1 413 43 is_stmt 0 view .LVU1377
 4130 18ef C57D7F60 		vmovdqa	YMMWORD PTR -128[rax], ymm12	# MEM[base: _177, offset: 0B], tmp284
 4130      80
GAS LISTING /tmp/ccRwwoRx.s 			page 119


 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4131              		.loc 1 412 48 is_stmt 1 view .LVU1378
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4132              		.loc 1 412 11 view .LVU1379
 413:sieve_extend.c ****     }
 4133              		.loc 1 413 9 view .LVU1380
 4134              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4135              		.loc 1 413 43 is_stmt 0 view .LVU1381
 4136 18f4 C57D7F68 		vmovdqa	YMMWORD PTR -96[rax], ymm13	# MEM[base: _177, offset: 0B], tmp287
 4136      A0
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4137              		.loc 1 412 48 is_stmt 1 view .LVU1382
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4138              		.loc 1 412 11 view .LVU1383
 413:sieve_extend.c ****     }
 4139              		.loc 1 413 9 view .LVU1384
 4140              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4141              		.loc 1 413 43 is_stmt 0 view .LVU1385
 4142 18f9 C57D7F70 		vmovdqa	YMMWORD PTR -64[rax], ymm14	# MEM[base: _177, offset: 0B], tmp290
 4142      C0
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4143              		.loc 1 412 48 is_stmt 1 view .LVU1386
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4144              		.loc 1 412 11 view .LVU1387
 413:sieve_extend.c ****     }
 4145              		.loc 1 413 9 view .LVU1388
 4146              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4147              		.loc 1 413 43 is_stmt 0 view .LVU1389
 4148 18fe C57D7F78 		vmovdqa	YMMWORD PTR -32[rax], ymm15	# MEM[base: _177, offset: 0B], tmp293
 4148      E0
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4149              		.loc 1 412 48 is_stmt 1 view .LVU1390
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4150              		.loc 1 412 11 view .LVU1391
 4151              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4152              		.loc 1 412 5 is_stmt 0 view .LVU1392
 4153 1903 4D39E8   		cmp	r8, r13	# range_stop_vector, current_vector
 4154 1906 738A     		jnb	.L231	#,
 4155              	.LVL176:
 4156              	.L230:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4157              		.loc 1 412 5 view .LVU1393
 4158              	.LBE336:
 4159              	.LBE338:
 4160              	.LBE329:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4161              		.loc 1 447 41 is_stmt 1 view .LVU1394
 4162              	# sieve_extend.c:447:     for (counter_t index = range_start; index < range_stop_unique;) {
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4163              		.loc 1 447 5 is_stmt 0 view .LVU1395
 4164 1908 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4165 190b 0F874FFB 		ja	.L232	#,
 4165      FFFF
GAS LISTING /tmp/ccRwwoRx.s 			page 120


 4166              	.LVL177:
 4167              	.L394:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4168              		.loc 1 447 5 view .LVU1396
 4169 1911 C5F877   		vzeroupper
 4170              	.L214:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4171              		.loc 1 447 5 view .LVU1397
 4172              	.LBE328:
 4173              	# sieve_extend.c:467: }
 467:sieve_extend.c **** 
 4174              		.loc 1 467 1 view .LVU1398
 4175 1914 488B4424 		mov	rax, QWORD PTR 88[rsp]	# tmp512, D.6856
 4175      58
 4176 1919 64483304 		xor	rax, QWORD PTR fs:40	# tmp512, MEM[(<address-space-1> long unsigned int *)40B]
 4176      25280000 
 4176      00
 4177 1922 0F855C04 		jne	.L397	#,
 4177      0000
 4178 1928 488D65D8 		lea	rsp, -40[rbp]	#,
 4179 192c 5B       		pop	rbx	#
 4180 192d 415C     		pop	r12	#
 4181 192f 415D     		pop	r13	#
 4182 1931 415E     		pop	r14	#
 4183 1933 415F     		pop	r15	#
 4184 1935 5D       		pop	rbp	#
 4185              		.cfi_remember_state
 4186              		.cfi_def_cfa 7, 8
 4187 1936 C3       		ret	
 4188              	.LVL178:
 4189              	.L395:
 4190              		.cfi_restore_state
 467:sieve_extend.c **** 
 4191              		.loc 1 467 1 view .LVU1399
 4192 1937 4C39E9   		cmp	rcx, r13	# range_stop_vector, step_4
 4193 193a B8000000 		mov	eax, 0	# tmp188,
 4193      00
 4194              	.LVL179:
 467:sieve_extend.c **** 
 4195              		.loc 1 467 1 view .LVU1400
 4196 193f 4889D1   		mov	rcx, rdx	# _200, step
 4197 1942 4989D1   		mov	r9, rdx	# _207, step
 4198 1945 480F47C3 		cmova	rax, rbx	# iftmp.60_71,, tmp188
 4199 1949 488D1C52 		lea	rbx, [rdx+rdx*2]	# tmp191,
 4200 194d 4989D4   		mov	r12, rdx	# _211, step
 4201              	.LBB341:
 4202              	.LBB340:
 4203              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4204              		.loc 1 456 31 view .LVU1401
 4205 1950 41BB0100 		mov	r11d, 1	# tmp197,
 4205      0000
 4206 1956 48C1E107 		sal	rcx, 7	# _200,
 4207 195a 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, range_stop_unique
 4207      10
 4208 195f 4989CA   		mov	r10, rcx	# _200, _200
 4209              	.LVL180:
GAS LISTING /tmp/ccRwwoRx.s 			page 121


 456:sieve_extend.c ****             index += step;
 4210              		.loc 1 456 31 view .LVU1402
 4211 1962 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, bitstorage_word
 4211      18
 4212 1967 4889C7   		mov	rdi, rax	# iftmp.60_93, iftmp.60_93
 4213              	.LVL181:
 456:sieve_extend.c ****             index += step;
 4214              		.loc 1 456 31 view .LVU1403
 4215 196a 49C1E105 		sal	r9, 5	# _207,
 4216 196e 48C1E305 		sal	rbx, 5	# tmp192,
 4217              	# sieve_extend.c:449:         register bitvector_t quadmask = { };
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4218              		.loc 1 449 30 view .LVU1404
 4219 1972 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp193
 4220 1976 49C1E406 		sal	r12, 6	# _211,
 4221 197a 660F1F44 		.p2align 4
 4221      0000
 4222              		.p2align 3
 4223              	.L226:
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 4224              		.loc 1 448 9 is_stmt 1 view .LVU1405
 4225              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 4226              		.loc 1 448 54 is_stmt 0 view .LVU1406
 4227 1980 4889F0   		mov	rax, rsi	# current_vector, range_start
 4228              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 4229              		.loc 1 450 35 view .LVU1407
 4230 1983 4989F6   		mov	r14, rsi	# tmp194, range_start
 4231              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 4232              		.loc 1 448 54 view .LVU1408
 4233 1986 48C1E808 		shr	rax, 8	# current_vector,
 4234              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 4235              		.loc 1 450 35 view .LVU1409
 4236 198a 49C1EE06 		shr	r14, 6	# tmp194,
 4237              	# sieve_extend.c:448:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 448:sieve_extend.c ****         register bitvector_t quadmask = { };
 4238              		.loc 1 448 25 view .LVU1410
 4239 198e 488D0C85 		lea	rcx, 0[0+rax*4]	# current_vector_start_word,
 4239      00000000 
 4240              	.LVL182:
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4241              		.loc 1 449 9 is_stmt 1 view .LVU1411
 4242              	# sieve_extend.c:449:         register bitvector_t quadmask = { };
 449:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4243              		.loc 1 449 30 is_stmt 0 view .LVU1412
 4244 1996 C5FD7F54 		vmovdqa	YMMWORD PTR 32[rsp], ymm2	# quadmask, tmp193
 4244      2420
 450:sieve_extend.c ****         
 4245              		.loc 1 450 9 is_stmt 1 view .LVU1413
 4246              	# sieve_extend.c:450:         register counter_t word = wordindex(index) - current_vector_start_wor
 450:sieve_extend.c ****         
 4247              		.loc 1 450 28 is_stmt 0 view .LVU1414
 4248 199c 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4249              	.LVL183:
GAS LISTING /tmp/ccRwwoRx.s 			page 122


 4250              	.L221:
 456:sieve_extend.c ****             index += step;
 4251              		.loc 1 456 13 is_stmt 1 discriminator 1 view .LVU1415
 4252              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4253              		.loc 1 456 31 is_stmt 0 discriminator 1 view .LVU1416
 4254 199f C442C9F7 		shlx	r15, r11, rsi	# tmp196, tmp197, range_start
 4254      FB
 4255              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4256              		.loc 1 457 19 discriminator 1 view .LVU1417
 4257 19a4 4801D6   		add	rsi, rdx	# range_start, step
 4258              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4259              		.loc 1 456 28 discriminator 1 view .LVU1418
 4260 19a7 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp196
 4260      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4261              		.loc 1 457 13 is_stmt 1 discriminator 1 view .LVU1419
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4262              		.loc 1 458 13 discriminator 1 view .LVU1420
 4263              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4264              		.loc 1 458 20 is_stmt 0 discriminator 1 view .LVU1421
 4265 19ac 4989F6   		mov	r14, rsi	# tmp198, range_start
 4266              	.LVL184:
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4267              		.loc 1 458 20 discriminator 1 view .LVU1422
 4268 19af 49C1EE06 		shr	r14, 6	# tmp198,
 4269              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4270              		.loc 1 458 18 discriminator 1 view .LVU1423
 4271 19b3 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4272              		.loc 1 459 17 is_stmt 1 discriminator 1 view .LVU1424
 4273              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4274              		.loc 1 459 9 is_stmt 0 discriminator 1 view .LVU1425
 4275 19b6 4983FE03 		cmp	r14, 3	# word,
 4276 19ba 0F87E000 		ja	.L369	#,
 4276      0000
 456:sieve_extend.c ****             index += step;
 4277              		.loc 1 456 13 is_stmt 1 view .LVU1426
 4278              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4279              		.loc 1 456 31 is_stmt 0 view .LVU1427
 4280 19c0 C442C9F7 		shlx	r15, r11, rsi	# tmp399, tmp197, range_start
 4280      FB
 4281              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4282              		.loc 1 457 19 view .LVU1428
 4283 19c5 4801D6   		add	rsi, rdx	# range_start, step
 4284              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4285              		.loc 1 456 28 view .LVU1429
 4286 19c8 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp399
 4286      20
GAS LISTING /tmp/ccRwwoRx.s 			page 123


 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4287              		.loc 1 457 13 is_stmt 1 view .LVU1430
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4288              		.loc 1 458 13 view .LVU1431
 4289              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4290              		.loc 1 458 20 is_stmt 0 view .LVU1432
 4291 19cd 4989F6   		mov	r14, rsi	# tmp400, range_start
 4292 19d0 49C1EE06 		shr	r14, 6	# tmp400,
 4293              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4294              		.loc 1 458 18 view .LVU1433
 4295 19d4 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4296              		.loc 1 459 17 is_stmt 1 view .LVU1434
 4297              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4298              		.loc 1 459 9 is_stmt 0 view .LVU1435
 4299 19d7 4983FE03 		cmp	r14, 3	# word,
 4300 19db 0F87BF00 		ja	.L369	#,
 4300      0000
 456:sieve_extend.c ****             index += step;
 4301              		.loc 1 456 13 is_stmt 1 view .LVU1436
 4302              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4303              		.loc 1 456 31 is_stmt 0 view .LVU1437
 4304 19e1 C442C9F7 		shlx	r15, r11, rsi	# tmp402, tmp197, range_start
 4304      FB
 4305              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4306              		.loc 1 457 19 view .LVU1438
 4307 19e6 4801D6   		add	rsi, rdx	# range_start, step
 4308              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4309              		.loc 1 456 28 view .LVU1439
 4310 19e9 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp402
 4310      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4311              		.loc 1 457 13 is_stmt 1 view .LVU1440
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4312              		.loc 1 458 13 view .LVU1441
 4313              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4314              		.loc 1 458 20 is_stmt 0 view .LVU1442
 4315 19ee 4989F6   		mov	r14, rsi	# tmp403, range_start
 4316 19f1 49C1EE06 		shr	r14, 6	# tmp403,
 4317              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4318              		.loc 1 458 18 view .LVU1443
 4319 19f5 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4320              		.loc 1 459 17 is_stmt 1 view .LVU1444
 4321              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4322              		.loc 1 459 9 is_stmt 0 view .LVU1445
 4323 19f8 4983FE03 		cmp	r14, 3	# word,
 4324 19fc 0F879E00 		ja	.L369	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 124


 4324      0000
 456:sieve_extend.c ****             index += step;
 4325              		.loc 1 456 13 is_stmt 1 view .LVU1446
 4326              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4327              		.loc 1 456 31 is_stmt 0 view .LVU1447
 4328 1a02 C442C9F7 		shlx	r15, r11, rsi	# tmp405, tmp197, range_start
 4328      FB
 4329              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4330              		.loc 1 457 19 view .LVU1448
 4331 1a07 4801D6   		add	rsi, rdx	# range_start, step
 4332              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4333              		.loc 1 456 28 view .LVU1449
 4334 1a0a 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp405
 4334      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4335              		.loc 1 457 13 is_stmt 1 view .LVU1450
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4336              		.loc 1 458 13 view .LVU1451
 4337              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4338              		.loc 1 458 20 is_stmt 0 view .LVU1452
 4339 1a0f 4989F6   		mov	r14, rsi	# tmp406, range_start
 4340 1a12 49C1EE06 		shr	r14, 6	# tmp406,
 4341              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4342              		.loc 1 458 18 view .LVU1453
 4343 1a16 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4344              		.loc 1 459 17 is_stmt 1 view .LVU1454
 4345              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4346              		.loc 1 459 9 is_stmt 0 view .LVU1455
 4347 1a19 4983FE03 		cmp	r14, 3	# word,
 4348 1a1d 0F877D00 		ja	.L369	#,
 4348      0000
 456:sieve_extend.c ****             index += step;
 4349              		.loc 1 456 13 is_stmt 1 view .LVU1456
 4350              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4351              		.loc 1 456 31 is_stmt 0 view .LVU1457
 4352 1a23 C442C9F7 		shlx	r15, r11, rsi	# tmp408, tmp197, range_start
 4352      FB
 4353              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4354              		.loc 1 457 19 view .LVU1458
 4355 1a28 4801D6   		add	rsi, rdx	# range_start, step
 4356              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4357              		.loc 1 456 28 view .LVU1459
 4358 1a2b 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp408
 4358      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4359              		.loc 1 457 13 is_stmt 1 view .LVU1460
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccRwwoRx.s 			page 125


 4360              		.loc 1 458 13 view .LVU1461
 4361              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4362              		.loc 1 458 20 is_stmt 0 view .LVU1462
 4363 1a30 4989F6   		mov	r14, rsi	# tmp409, range_start
 4364 1a33 49C1EE06 		shr	r14, 6	# tmp409,
 4365              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4366              		.loc 1 458 18 view .LVU1463
 4367 1a37 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4368              		.loc 1 459 17 is_stmt 1 view .LVU1464
 4369              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4370              		.loc 1 459 9 is_stmt 0 view .LVU1465
 4371 1a3a 4983FE03 		cmp	r14, 3	# word,
 4372 1a3e 7760     		ja	.L369	#,
 456:sieve_extend.c ****             index += step;
 4373              		.loc 1 456 13 is_stmt 1 view .LVU1466
 4374              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4375              		.loc 1 456 31 is_stmt 0 view .LVU1467
 4376 1a40 C442C9F7 		shlx	r15, r11, rsi	# tmp411, tmp197, range_start
 4376      FB
 4377              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4378              		.loc 1 457 19 view .LVU1468
 4379 1a45 4801D6   		add	rsi, rdx	# range_start, step
 4380              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4381              		.loc 1 456 28 view .LVU1469
 4382 1a48 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp411
 4382      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4383              		.loc 1 457 13 is_stmt 1 view .LVU1470
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4384              		.loc 1 458 13 view .LVU1471
 4385              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4386              		.loc 1 458 20 is_stmt 0 view .LVU1472
 4387 1a4d 4989F6   		mov	r14, rsi	# tmp412, range_start
 4388 1a50 49C1EE06 		shr	r14, 6	# tmp412,
 4389              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4390              		.loc 1 458 18 view .LVU1473
 4391 1a54 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4392              		.loc 1 459 17 is_stmt 1 view .LVU1474
 4393              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4394              		.loc 1 459 9 is_stmt 0 view .LVU1475
 4395 1a57 4983FE03 		cmp	r14, 3	# word,
 4396 1a5b 7743     		ja	.L369	#,
 456:sieve_extend.c ****             index += step;
 4397              		.loc 1 456 13 is_stmt 1 view .LVU1476
 4398              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccRwwoRx.s 			page 126


 4399              		.loc 1 456 31 is_stmt 0 view .LVU1477
 4400 1a5d C442C9F7 		shlx	r15, r11, rsi	# tmp414, tmp197, range_start
 4400      FB
 4401              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4402              		.loc 1 457 19 view .LVU1478
 4403 1a62 4801D6   		add	rsi, rdx	# range_start, step
 4404              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4405              		.loc 1 456 28 view .LVU1479
 4406 1a65 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp414
 4406      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4407              		.loc 1 457 13 is_stmt 1 view .LVU1480
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4408              		.loc 1 458 13 view .LVU1481
 4409              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4410              		.loc 1 458 20 is_stmt 0 view .LVU1482
 4411 1a6a 4989F6   		mov	r14, rsi	# tmp415, range_start
 4412 1a6d 49C1EE06 		shr	r14, 6	# tmp415,
 4413              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4414              		.loc 1 458 18 view .LVU1483
 4415 1a71 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 459:sieve_extend.c ****         
 4416              		.loc 1 459 17 is_stmt 1 view .LVU1484
 4417              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4418              		.loc 1 459 9 is_stmt 0 view .LVU1485
 4419 1a74 4983FE03 		cmp	r14, 3	# word,
 4420 1a78 7726     		ja	.L369	#,
 456:sieve_extend.c ****             index += step;
 4421              		.loc 1 456 13 is_stmt 1 view .LVU1486
 4422              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4423              		.loc 1 456 31 is_stmt 0 view .LVU1487
 4424 1a7a C442C9F7 		shlx	r15, r11, rsi	# tmp417, tmp197, range_start
 4424      FB
 4425              	# sieve_extend.c:457:             index += step;
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4426              		.loc 1 457 19 view .LVU1488
 4427 1a7f 4801D6   		add	rsi, rdx	# range_start, step
 4428              	# sieve_extend.c:456:             quadmask[word] |= markmask(index);
 456:sieve_extend.c ****             index += step;
 4429              		.loc 1 456 28 view .LVU1489
 4430 1a82 4E097CF4 		or	QWORD PTR 32[rsp+r14*8], r15	# quadmask, tmp417
 4430      20
 457:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4431              		.loc 1 457 13 is_stmt 1 view .LVU1490
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4432              		.loc 1 458 13 view .LVU1491
 4433              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4434              		.loc 1 458 20 is_stmt 0 view .LVU1492
 4435 1a87 4989F6   		mov	r14, rsi	# tmp418, range_start
 4436 1a8a 49C1EE06 		shr	r14, 6	# tmp418,
GAS LISTING /tmp/ccRwwoRx.s 			page 127


 4437              	.LVL185:
 4438              	# sieve_extend.c:458:             word = wordindex(index) - current_vector_start_word;
 458:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4439              		.loc 1 458 18 view .LVU1493
 4440 1a8e 4929CE   		sub	r14, rcx	# word, current_vector_start_word
 4441              	.LVL186:
 459:sieve_extend.c ****         
 4442              		.loc 1 459 17 is_stmt 1 view .LVU1494
 4443              	# sieve_extend.c:459:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 459:sieve_extend.c ****         
 4444              		.loc 1 459 9 is_stmt 0 view .LVU1495
 4445 1a91 4983FE03 		cmp	r14, 3	# word,
 4446 1a95 0F8604FF 		jbe	.L221	#,
 4446      FFFF
 4447              	.LVL187:
 4448 1a9b 0F1F4400 		.p2align 4
 4448      00
 4449              		.p2align 3
 4450              	.L369:
 462:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 4451              		.loc 1 462 9 is_stmt 1 view .LVU1496
 465:sieve_extend.c ****     }
 4452              		.loc 1 465 9 view .LVU1497
 4453 1aa0 C5FD6F44 		vmovdqa	ymm0, YMMWORD PTR 32[rsp]	# quadmask.59_36, quadmask
 4453      2420
 4454              	.LVL188:
 4455              	.LBB339:
 389:sieve_extend.c **** 
 4456              		.loc 1 389 20 view .LVU1498
 4457              	.LBB337:
 392:sieve_extend.c ****     register const counter_t range_stop_vector = vectorindex(range_stop);
 4458              		.loc 1 392 5 view .LVU1499
 393:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 4459              		.loc 1 393 5 view .LVU1500
 394:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 4460              		.loc 1 394 5 view .LVU1501
 395:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 4461              		.loc 1 395 5 view .LVU1502
 396:sieve_extend.c **** 
 4462              		.loc 1 396 5 view .LVU1503
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4463              		.loc 1 398 5 view .LVU1504
 4464              	# sieve_extend.c:398:     if (current_vector+step_4 <= range_stop_vector) {
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4465              		.loc 1 398 23 is_stmt 0 view .LVU1505
 4466 1aa6 4E8D3428 		lea	r14, [rax+r13]	# current_vector,
 4467              	# sieve_extend.c:398:     if (current_vector+step_4 <= range_stop_vector) {
 398:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 4468              		.loc 1 398 8 view .LVU1506
 4469 1aaa 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4470 1aad 0F820501 		jb	.L222	#,
 4470      0000
 4471              	.LBB335:
 399:sieve_extend.c ****         //#pragma GCC unroll 16
 4472              		.loc 1 399 9 is_stmt 1 view .LVU1507
 4473              	.LVL189:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 128


 4474              		.loc 1 402 15 view .LVU1508
 4475              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4476              		.loc 1 402 9 is_stmt 0 view .LVU1509
 4477 1ab3 4839F8   		cmp	rax, rdi	# current_vector, iftmp.60_93
 4478 1ab6 0F87FC00 		ja	.L222	#,
 4478      0000
 4479 1abc 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# bitstorage_word, %sfp
 4479      18
 4480              	.LVL190:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4481              		.loc 1 402 9 view .LVU1510
 4482 1ac1 48C1E005 		sal	rax, 5	# tmp200,
 4483              	.LVL191:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4484              		.loc 1 402 9 view .LVU1511
 4485 1ac5 4801C1   		add	rcx, rax	# ivtmp.291, tmp200
 4486              	.L223:
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4487              		.loc 1 403 13 is_stmt 1 view .LVU1512
 4488              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4489              		.loc 1 403 54 is_stmt 0 view .LVU1513
 4490 1ac8 C5FDEB09 		vpor	ymm1, ymm0, YMMWORD PTR [rcx]	# tmp201, quadmask.59_36, MEM[base: _204, offset: 0B]
 4491              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4492              		.loc 1 402 66 view .LVU1514
 4493 1acc 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4494              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4495              		.loc 1 403 54 view .LVU1515
 4496 1acf C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: _204, offset: 0B], tmp201
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4497              		.loc 1 404 13 is_stmt 1 view .LVU1516
 4498              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4499              		.loc 1 404 54 is_stmt 0 view .LVU1517
 4500 1ad3 C4A17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+r9]	# tmp202, quadmask.59_36, MEM[base: _204, index: _207, offse
 4500      1C09
 4501 1ad9 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm3	# MEM[base: _204, index: _207, offset: 0B], tmp202
 4501      1C09
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4502              		.loc 1 405 13 is_stmt 1 view .LVU1518
 4503              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4504              		.loc 1 405 54 is_stmt 0 view .LVU1519
 4505 1adf C4A17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [rcx+r12]	# tmp203, quadmask.59_36, MEM[base: _204, index: _211, offs
 4505      2421
 4506 1ae5 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm4	# MEM[base: _204, index: _211, offset: 0B], tmp203
 4506      2421
 406:sieve_extend.c ****         }
 4507              		.loc 1 406 13 is_stmt 1 view .LVU1520
 4508              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 4509              		.loc 1 406 54 is_stmt 0 view .LVU1521
 4510 1aeb C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rcx+rbx]	# tmp204, quadmask.59_36, MEM[base: _204, index: _215, offs
 4510      19
GAS LISTING /tmp/ccRwwoRx.s 			page 129


 4511 1af0 C5FD7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm5	# MEM[base: _204, index: _215, offset: 0B], tmp204
 4511      19
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4512              		.loc 1 402 51 is_stmt 1 view .LVU1522
 4513              	.LVL192:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4514              		.loc 1 402 15 view .LVU1523
 4515 1af5 4C01D1   		add	rcx, r10	# ivtmp.291, _200
 4516              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4517              		.loc 1 402 9 is_stmt 0 view .LVU1524
 4518 1af8 4939FE   		cmp	r14, rdi	# current_vector, iftmp.60_93
 4519 1afb 0F87B700 		ja	.L222	#,
 4519      0000
 4520              	.LVL193:
 4521              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4522              		.loc 1 403 54 view .LVU1525
 4523 1b01 C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp241, quadmask.59_36, MEM[base: _204, offset: 0B]
 4524 1b05 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4525              		.loc 1 403 13 is_stmt 1 view .LVU1526
 4526              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4527              		.loc 1 403 54 is_stmt 0 view .LVU1527
 4528 1b09 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _204, offset: 0B], tmp241
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4529              		.loc 1 404 13 is_stmt 1 view .LVU1528
 4530              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4531              		.loc 1 402 66 is_stmt 0 view .LVU1529
 4532 1b0d 4C89F8   		mov	rax, r15	# current_vector, current_vector
 4533              	.LVL194:
 4534              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4535              		.loc 1 404 54 view .LVU1530
 4536 1b10 C4A17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [rcx+r9]	# tmp242, quadmask.59_36, MEM[base: _204, index: _207, offse
 4536      3C09
 4537 1b16 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm7	# MEM[base: _204, index: _207, offset: 0B], tmp242
 4537      3C09
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4538              		.loc 1 405 13 is_stmt 1 view .LVU1531
 4539              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4540              		.loc 1 405 54 is_stmt 0 view .LVU1532
 4541 1b1c C4217DEB 		vpor	ymm8, ymm0, YMMWORD PTR [rcx+r12]	# tmp243, quadmask.59_36, MEM[base: _204, index: _211, offs
 4541      0421
 4542 1b22 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm8	# MEM[base: _204, index: _211, offset: 0B], tmp243
 4542      0421
 406:sieve_extend.c ****         }
 4543              		.loc 1 406 13 is_stmt 1 view .LVU1533
 4544              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 4545              		.loc 1 406 54 is_stmt 0 view .LVU1534
 4546 1b28 C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rcx+rbx]	# tmp244, quadmask.59_36, MEM[base: _204, index: _215, offs
 4546      19
 4547 1b2d C57D7F0C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm9	# MEM[base: _204, index: _215, offset: 0B], tmp244
GAS LISTING /tmp/ccRwwoRx.s 			page 130


 4547      19
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4548              		.loc 1 402 51 is_stmt 1 view .LVU1535
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4549              		.loc 1 402 15 view .LVU1536
 4550 1b32 4C01D1   		add	rcx, r10	# ivtmp.291, _200
 4551              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4552              		.loc 1 402 9 is_stmt 0 view .LVU1537
 4553 1b35 4939FF   		cmp	r15, rdi	# current_vector, iftmp.60_93
 4554 1b38 777E     		ja	.L222	#,
 4555              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4556              		.loc 1 403 54 view .LVU1538
 4557 1b3a C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp389, quadmask.59_36, MEM[base: _204, offset: 0B]
 4558 1b3e 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4559              	.LVL195:
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4560              		.loc 1 403 13 is_stmt 1 view .LVU1539
 4561              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4562              		.loc 1 403 54 is_stmt 0 view .LVU1540
 4563 1b42 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _204, offset: 0B], tmp389
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4564              		.loc 1 404 13 is_stmt 1 view .LVU1541
 4565              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4566              		.loc 1 402 66 is_stmt 0 view .LVU1542
 4567 1b46 4C89F0   		mov	rax, r14	# current_vector, current_vector
 4568              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4569              		.loc 1 404 54 view .LVU1543
 4570 1b49 C4217DEB 		vpor	ymm11, ymm0, YMMWORD PTR [rcx+r9]	# tmp390, quadmask.59_36, MEM[base: _204, index: _207, offs
 4570      1C09
 4571 1b4f C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm11	# MEM[base: _204, index: _207, offset: 0B], tmp390
 4571      1C09
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4572              		.loc 1 405 13 is_stmt 1 view .LVU1544
 4573              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4574              		.loc 1 405 54 is_stmt 0 view .LVU1545
 4575 1b55 C4217DEB 		vpor	ymm12, ymm0, YMMWORD PTR [rcx+r12]	# tmp391, quadmask.59_36, MEM[base: _204, index: _211, off
 4575      2421
 4576 1b5b C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm12	# MEM[base: _204, index: _211, offset: 0B], tmp391
 4576      2421
 406:sieve_extend.c ****         }
 4577              		.loc 1 406 13 is_stmt 1 view .LVU1546
 4578              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 4579              		.loc 1 406 54 is_stmt 0 view .LVU1547
 4580 1b61 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rcx+rbx]	# tmp392, quadmask.59_36, MEM[base: _204, index: _215, off
 4580      19
 4581 1b66 C57D7F2C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm13	# MEM[base: _204, index: _215, offset: 0B], tmp392
 4581      19
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4582              		.loc 1 402 51 is_stmt 1 view .LVU1548
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
GAS LISTING /tmp/ccRwwoRx.s 			page 131


 4583              		.loc 1 402 15 view .LVU1549
 4584 1b6b 4C01D1   		add	rcx, r10	# ivtmp.291, _200
 4585              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4586              		.loc 1 402 9 is_stmt 0 view .LVU1550
 4587 1b6e 4939FE   		cmp	r14, rdi	# current_vector, iftmp.60_93
 4588 1b71 7745     		ja	.L222	#,
 4589              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4590              		.loc 1 403 54 view .LVU1551
 4591 1b73 C57DEB31 		vpor	ymm14, ymm0, YMMWORD PTR [rcx]	# tmp395, quadmask.59_36, MEM[base: _204, offset: 0B]
 4592 1b77 4F8D3C2E 		lea	r15, [r14+r13]	# current_vector,
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4593              		.loc 1 403 13 is_stmt 1 view .LVU1552
 4594              	# sieve_extend.c:403:             bitstorage_vector[current_vector       ] |= mask;
 403:sieve_extend.c ****             bitstorage_vector[current_vector+step  ] |= mask;
 4595              		.loc 1 403 54 is_stmt 0 view .LVU1553
 4596 1b7b C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: _204, offset: 0B], tmp395
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4597              		.loc 1 404 13 is_stmt 1 view .LVU1554
 4598              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4599              		.loc 1 402 66 is_stmt 0 view .LVU1555
 4600 1b7f 4C89F8   		mov	rax, r15	# current_vector, current_vector
 4601              	# sieve_extend.c:404:             bitstorage_vector[current_vector+step  ] |= mask;
 404:sieve_extend.c ****             bitstorage_vector[current_vector+step_2] |= mask;
 4602              		.loc 1 404 54 view .LVU1556
 4603 1b82 C4217DEB 		vpor	ymm15, ymm0, YMMWORD PTR [rcx+r9]	# tmp396, quadmask.59_36, MEM[base: _204, index: _207, offs
 4603      3C09
 4604 1b88 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r9], ymm15	# MEM[base: _204, index: _207, offset: 0B], tmp396
 4604      3C09
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4605              		.loc 1 405 13 is_stmt 1 view .LVU1557
 4606              	# sieve_extend.c:405:             bitstorage_vector[current_vector+step_2] |= mask;
 405:sieve_extend.c ****             bitstorage_vector[current_vector+step_3] |= mask;
 4607              		.loc 1 405 54 is_stmt 0 view .LVU1558
 4608 1b8e C4A17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [rcx+r12]	# tmp397, quadmask.59_36, MEM[base: _204, index: _211, offs
 4608      0C21
 4609 1b94 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r12], ymm1	# MEM[base: _204, index: _211, offset: 0B], tmp397
 4609      0C21
 406:sieve_extend.c ****         }
 4610              		.loc 1 406 13 is_stmt 1 view .LVU1559
 4611              	# sieve_extend.c:406:             bitstorage_vector[current_vector+step_3] |= mask;
 406:sieve_extend.c ****         }
 4612              		.loc 1 406 54 is_stmt 0 view .LVU1560
 4613 1b9a C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+rbx]	# tmp398, quadmask.59_36, MEM[base: _204, index: _215, offs
 4613      19
 4614 1b9f C5FD7F1C 		vmovdqa	YMMWORD PTR [rcx+rbx], ymm3	# MEM[base: _204, index: _215, offset: 0B], tmp398
 4614      19
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4615              		.loc 1 402 51 is_stmt 1 view .LVU1561
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4616              		.loc 1 402 15 view .LVU1562
 4617 1ba4 4C01D1   		add	rcx, r10	# ivtmp.291, _200
 4618              	# sieve_extend.c:402:         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4619              		.loc 1 402 9 is_stmt 0 view .LVU1563
GAS LISTING /tmp/ccRwwoRx.s 			page 132


 4620 1ba7 4939FF   		cmp	r15, rdi	# current_vector, iftmp.60_93
 4621 1baa 770C     		ja	.L222	#,
 4622              	.LVL196:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4623              		.loc 1 402 9 view .LVU1564
 4624 1bac 4F8D342F 		lea	r14, [r15+r13]	# current_vector,
 4625              	.LVL197:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4626              		.loc 1 402 9 view .LVU1565
 4627 1bb0 E913FFFF 		jmp	.L223	#
 4627      FF
 4628              	.LVL198:
 4629              		.p2align 4,,7
 4630 1bb5 0F1F00   		.p2align 3
 4631              	.L222:
 402:sieve_extend.c ****             bitstorage_vector[current_vector       ] |= mask;
 4632              		.loc 1 402 9 view .LVU1566
 4633              	.LBE335:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4634              		.loc 1 412 11 is_stmt 1 view .LVU1567
 4635              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4636              		.loc 1 412 5 is_stmt 0 view .LVU1568
 4637 1bb8 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
 4638 1bbb 0F82BF00 		jb	.L224	#,
 4638      0000
 4639 1bc1 4989C7   		mov	r15, rax	# tmp205, current_vector
 4640 1bc4 49C1E705 		sal	r15, 5	# tmp205,
 4641 1bc8 4C037C24 		add	r15, QWORD PTR 24[rsp]	# ivtmp.285, %sfp
 4641      18
 4642              	.L225:
 413:sieve_extend.c ****     }
 4643              		.loc 1 413 9 is_stmt 1 view .LVU1569
 4644              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4645              		.loc 1 412 63 is_stmt 0 view .LVU1570
 4646 1bcd 4C8D3410 		lea	r14, [rax+rdx]	# current_vector,
 4647              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4648              		.loc 1 413 43 view .LVU1571
 4649 1bd1 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r15]	# tmp206, quadmask.59_36, MEM[base: _196, offset: 0B]
 4649      27
 4650              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4651              		.loc 1 412 5 view .LVU1572
 4652 1bd6 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4653 1bd9 4B8D0C0F 		lea	rcx, [r15+r9]	# ivtmp.285,
 4654              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4655              		.loc 1 413 43 view .LVU1573
 4656 1bdd C4C17D7F 		vmovdqa	YMMWORD PTR [r15], ymm4	# MEM[base: _196, offset: 0B], tmp206
 4656      27
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4657              		.loc 1 412 48 is_stmt 1 view .LVU1574
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4658              		.loc 1 412 11 view .LVU1575
 4659              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
GAS LISTING /tmp/ccRwwoRx.s 			page 133


 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4660              		.loc 1 412 5 is_stmt 0 view .LVU1576
 4661 1be2 0F829800 		jb	.L224	#,
 4661      0000
 413:sieve_extend.c ****     }
 4662              		.loc 1 413 9 is_stmt 1 view .LVU1577
 4663              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4664              		.loc 1 413 43 is_stmt 0 view .LVU1578
 4665 1be8 C5FDEB29 		vpor	ymm5, ymm0, YMMWORD PTR [rcx]	# tmp369, quadmask.59_36, MEM[base: _196, offset: 0B]
 4666              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4667              		.loc 1 412 63 view .LVU1579
 4668 1bec 4901D6   		add	r14, rdx	# current_vector, step
 4669              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4670              		.loc 1 413 43 view .LVU1580
 4671 1bef C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: _196, offset: 0B], tmp369
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4672              		.loc 1 412 48 is_stmt 1 view .LVU1581
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4673              		.loc 1 412 11 view .LVU1582
 4674 1bf3 4C01C9   		add	rcx, r9	# ivtmp.285, _207
 4675              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4676              		.loc 1 412 5 is_stmt 0 view .LVU1583
 4677 1bf6 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4678 1bf9 0F828100 		jb	.L224	#,
 4678      0000
 413:sieve_extend.c ****     }
 4679              		.loc 1 413 9 is_stmt 1 view .LVU1584
 4680              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4681              		.loc 1 413 43 is_stmt 0 view .LVU1585
 4682 1bff C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp372, quadmask.59_36, MEM[base: _196, offset: 0B]
 4683              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4684              		.loc 1 412 63 view .LVU1586
 4685 1c03 4901D6   		add	r14, rdx	# current_vector, step
 4686              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4687              		.loc 1 413 43 view .LVU1587
 4688 1c06 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: _196, offset: 0B], tmp372
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4689              		.loc 1 412 48 is_stmt 1 view .LVU1588
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4690              		.loc 1 412 11 view .LVU1589
 4691 1c0a 4C01C9   		add	rcx, r9	# ivtmp.285, _207
 4692              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4693              		.loc 1 412 5 is_stmt 0 view .LVU1590
 4694 1c0d 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4695 1c10 726E     		jb	.L224	#,
 413:sieve_extend.c ****     }
 4696              		.loc 1 413 9 is_stmt 1 view .LVU1591
 4697              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 134


 4698              		.loc 1 413 43 is_stmt 0 view .LVU1592
 4699 1c12 C5FDEB39 		vpor	ymm7, ymm0, YMMWORD PTR [rcx]	# tmp375, quadmask.59_36, MEM[base: _196, offset: 0B]
 4700              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4701              		.loc 1 412 63 view .LVU1593
 4702 1c16 4901D6   		add	r14, rdx	# current_vector, step
 4703              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4704              		.loc 1 413 43 view .LVU1594
 4705 1c19 C5FD7F39 		vmovdqa	YMMWORD PTR [rcx], ymm7	# MEM[base: _196, offset: 0B], tmp375
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4706              		.loc 1 412 48 is_stmt 1 view .LVU1595
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4707              		.loc 1 412 11 view .LVU1596
 4708 1c1d 4C01C9   		add	rcx, r9	# ivtmp.285, _207
 4709              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4710              		.loc 1 412 5 is_stmt 0 view .LVU1597
 4711 1c20 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4712 1c23 725B     		jb	.L224	#,
 413:sieve_extend.c ****     }
 4713              		.loc 1 413 9 is_stmt 1 view .LVU1598
 4714              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4715              		.loc 1 413 43 is_stmt 0 view .LVU1599
 4716 1c25 C57DEB01 		vpor	ymm8, ymm0, YMMWORD PTR [rcx]	# tmp378, quadmask.59_36, MEM[base: _196, offset: 0B]
 4717              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4718              		.loc 1 412 63 view .LVU1600
 4719 1c29 4901D6   		add	r14, rdx	# current_vector, step
 4720              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4721              		.loc 1 413 43 view .LVU1601
 4722 1c2c C57D7F01 		vmovdqa	YMMWORD PTR [rcx], ymm8	# MEM[base: _196, offset: 0B], tmp378
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4723              		.loc 1 412 48 is_stmt 1 view .LVU1602
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4724              		.loc 1 412 11 view .LVU1603
 4725 1c30 4C01C9   		add	rcx, r9	# ivtmp.285, _207
 4726              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4727              		.loc 1 412 5 is_stmt 0 view .LVU1604
 4728 1c33 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4729 1c36 7248     		jb	.L224	#,
 413:sieve_extend.c ****     }
 4730              		.loc 1 413 9 is_stmt 1 view .LVU1605
 4731              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4732              		.loc 1 413 43 is_stmt 0 view .LVU1606
 4733 1c38 C57DEB09 		vpor	ymm9, ymm0, YMMWORD PTR [rcx]	# tmp381, quadmask.59_36, MEM[base: _196, offset: 0B]
 4734              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4735              		.loc 1 412 63 view .LVU1607
 4736 1c3c 4901D6   		add	r14, rdx	# current_vector, step
 4737              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4738              		.loc 1 413 43 view .LVU1608
GAS LISTING /tmp/ccRwwoRx.s 			page 135


 4739 1c3f C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: _196, offset: 0B], tmp381
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4740              		.loc 1 412 48 is_stmt 1 view .LVU1609
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4741              		.loc 1 412 11 view .LVU1610
 4742 1c43 4C01C9   		add	rcx, r9	# ivtmp.285, _207
 4743              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4744              		.loc 1 412 5 is_stmt 0 view .LVU1611
 4745 1c46 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4746 1c49 7235     		jb	.L224	#,
 413:sieve_extend.c ****     }
 4747              		.loc 1 413 9 is_stmt 1 view .LVU1612
 4748              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4749              		.loc 1 412 63 is_stmt 0 view .LVU1613
 4750 1c4b 4901D6   		add	r14, rdx	# current_vector, step
 4751              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4752              		.loc 1 413 43 view .LVU1614
 4753 1c4e C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp384, quadmask.59_36, MEM[base: _196, offset: 0B]
 4754              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4755              		.loc 1 412 5 view .LVU1615
 4756 1c52 4D39F0   		cmp	r8, r14	# range_stop_vector, current_vector
 4757 1c55 4E8D3C09 		lea	r15, [rcx+r9]	# ivtmp.285,
 4758              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4759              		.loc 1 413 43 view .LVU1616
 4760 1c59 C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: _196, offset: 0B], tmp384
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4761              		.loc 1 412 48 is_stmt 1 view .LVU1617
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4762              		.loc 1 412 11 view .LVU1618
 4763              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4764              		.loc 1 412 5 is_stmt 0 view .LVU1619
 4765 1c5d 7221     		jb	.L224	#,
 413:sieve_extend.c ****     }
 4766              		.loc 1 413 9 is_stmt 1 view .LVU1620
 4767              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4768              		.loc 1 413 43 is_stmt 0 view .LVU1621
 4769 1c5f C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r15]	# tmp387, quadmask.59_36, MEM[base: _196, offset: 0B]
 4769      1F
 4770              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4771              		.loc 1 412 63 view .LVU1622
 4772 1c64 498D0416 		lea	rax, [r14+rdx]	# current_vector,
 4773              	# sieve_extend.c:413:         bitstorage_vector[current_vector] |= mask;
 413:sieve_extend.c ****     }
 4774              		.loc 1 413 43 view .LVU1623
 4775 1c68 C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm11	# MEM[base: _196, offset: 0B], tmp387
 4775      1F
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4776              		.loc 1 412 48 is_stmt 1 view .LVU1624
 4777              	.LVL199:
GAS LISTING /tmp/ccRwwoRx.s 			page 136


 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4778              		.loc 1 412 11 view .LVU1625
 4779 1c6d 4D01CF   		add	r15, r9	# ivtmp.285, _207
 4780              	# sieve_extend.c:412:     for(; current_vector <= range_stop_vector; current_vector += step) {
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4781              		.loc 1 412 5 is_stmt 0 view .LVU1626
 4782 1c70 4939C0   		cmp	r8, rax	# range_stop_vector, current_vector
 4783 1c73 0F8354FF 		jnb	.L225	#,
 4783      FFFF
 4784              	.LVL200:
 4785 1c79 0F1F8000 		.p2align 4
 4785      000000
 4786              		.p2align 3
 4787              	.L224:
 412:sieve_extend.c ****         bitstorage_vector[current_vector] |= mask;
 4788              		.loc 1 412 5 view .LVU1627
 4789              	.LBE337:
 4790              	.LBE339:
 4791              	.LBE340:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4792              		.loc 1 447 41 is_stmt 1 view .LVU1628
 4793              	# sieve_extend.c:447:     for (counter_t index = range_start; index < range_stop_unique;) {
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4794              		.loc 1 447 5 is_stmt 0 view .LVU1629
 4795 1c80 48397424 		cmp	QWORD PTR 16[rsp], rsi	# %sfp, range_start
 4795      10
 4796 1c85 0F87F5FC 		ja	.L226	#,
 4796      FFFF
 4797 1c8b E981FCFF 		jmp	.L394	#
 4797      FF
 4798              	.LVL201:
 4799              	.L216:
 447:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4800              		.loc 1 447 5 view .LVU1630
 4801              	.LBE341:
 4802              	.LBB342:
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4803              		.loc 1 430 49 is_stmt 1 view .LVU1631
 4804              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4805              		.loc 1 430 13 is_stmt 0 view .LVU1632
 4806 1c90 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4807              		.p2align 4,,3
 4808 1c93 0F877BFC 		ja	.L214	#,
 4808      FFFF
 4809              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4810              		.loc 1 431 54 view .LVU1633
 4811 1c99 41BE0100 		mov	r14d, 1	# tmp179,
 4811      0000
 4812              	.LVL202:
 4813              	.L219:
 431:sieve_extend.c ****             return;                 
 4814              		.loc 1 431 17 is_stmt 1 discriminator 3 view .LVU1634
 4815              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4816              		.loc 1 431 51 is_stmt 0 discriminator 3 view .LVU1635
GAS LISTING /tmp/ccRwwoRx.s 			page 137


 4817 1c9f 4989F7   		mov	r15, rsi	# tmp175, range_start
 4818              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4819              		.loc 1 431 54 discriminator 3 view .LVU1636
 4820 1ca2 C442C9F7 		shlx	r9, r14, rsi	# tmp178, tmp179, range_start
 4820      CE
 4821              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4822              		.loc 1 431 51 discriminator 3 view .LVU1637
 4823 1ca7 49C1EF06 		shr	r15, 6	# tmp175,
 4824              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4825              		.loc 1 430 76 discriminator 3 view .LVU1638
 4826 1cab 4801D6   		add	rsi, rdx	# range_start, step
 4827              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4828              		.loc 1 431 51 discriminator 3 view .LVU1639
 4829 1cae 4E090CFF 		or	QWORD PTR [rdi+r15*8], r9	# *_14, tmp178
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4830              		.loc 1 430 70 is_stmt 1 discriminator 3 view .LVU1640
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4831              		.loc 1 430 49 discriminator 3 view .LVU1641
 4832              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4833              		.loc 1 430 13 is_stmt 0 discriminator 3 view .LVU1642
 4834 1cb2 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4835 1cb5 0F8259FC 		jb	.L214	#,
 4835      FFFF
 431:sieve_extend.c ****             return;                 
 4836              		.loc 1 431 17 is_stmt 1 view .LVU1643
 4837              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4838              		.loc 1 431 51 is_stmt 0 view .LVU1644
 4839 1cbb 4989F4   		mov	r12, rsi	# tmp294, range_start
 4840              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4841              		.loc 1 431 54 view .LVU1645
 4842 1cbe C442C9F7 		shlx	r13, r14, rsi	# tmp297, tmp179, range_start
 4842      EE
 4843              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4844              		.loc 1 431 51 view .LVU1646
 4845 1cc3 49C1EC06 		shr	r12, 6	# tmp294,
 4846              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4847              		.loc 1 430 76 view .LVU1647
 4848 1cc7 4801D6   		add	rsi, rdx	# range_start, step
 4849              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4850              		.loc 1 431 51 view .LVU1648
 4851 1cca 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp297
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4852              		.loc 1 430 70 is_stmt 1 view .LVU1649
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4853              		.loc 1 430 49 view .LVU1650
 4854              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccRwwoRx.s 			page 138


 4855              		.loc 1 430 13 is_stmt 0 view .LVU1651
 4856 1cce 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4857 1cd1 0F823DFC 		jb	.L214	#,
 4857      FFFF
 431:sieve_extend.c ****             return;                 
 4858              		.loc 1 431 17 is_stmt 1 view .LVU1652
 4859              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4860              		.loc 1 431 51 is_stmt 0 view .LVU1653
 4861 1cd7 4889F0   		mov	rax, rsi	# tmp299, range_start
 4862              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4863              		.loc 1 431 54 view .LVU1654
 4864 1cda C4C2C9F7 		shlx	rbx, r14, rsi	# tmp302, tmp179, range_start
 4864      DE
 4865              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4866              		.loc 1 431 51 view .LVU1655
 4867 1cdf 48C1E806 		shr	rax, 6	# tmp299,
 4868              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4869              		.loc 1 430 76 view .LVU1656
 4870 1ce3 4801D6   		add	rsi, rdx	# range_start, step
 4871              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4872              		.loc 1 431 51 view .LVU1657
 4873 1ce6 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_14, tmp302
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4874              		.loc 1 430 70 is_stmt 1 view .LVU1658
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4875              		.loc 1 430 49 view .LVU1659
 4876              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4877              		.loc 1 430 13 is_stmt 0 view .LVU1660
 4878 1cea 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4879 1ced 0F8221FC 		jb	.L214	#,
 4879      FFFF
 431:sieve_extend.c ****             return;                 
 4880              		.loc 1 431 17 is_stmt 1 view .LVU1661
 4881              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4882              		.loc 1 431 51 is_stmt 0 view .LVU1662
 4883 1cf3 4989F0   		mov	r8, rsi	# tmp304, range_start
 4884              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4885              		.loc 1 431 54 view .LVU1663
 4886 1cf6 C442C9F7 		shlx	r10, r14, rsi	# tmp307, tmp179, range_start
 4886      D6
 4887              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4888              		.loc 1 431 51 view .LVU1664
 4889 1cfb 49C1E806 		shr	r8, 6	# tmp304,
 4890              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4891              		.loc 1 430 76 view .LVU1665
 4892 1cff 4801D6   		add	rsi, rdx	# range_start, step
 4893              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccRwwoRx.s 			page 139


 431:sieve_extend.c ****             return;                 
 4894              		.loc 1 431 51 view .LVU1666
 4895 1d02 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp307
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4896              		.loc 1 430 70 is_stmt 1 view .LVU1667
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4897              		.loc 1 430 49 view .LVU1668
 4898              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4899              		.loc 1 430 13 is_stmt 0 view .LVU1669
 4900 1d06 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4901 1d09 0F8205FC 		jb	.L214	#,
 4901      FFFF
 431:sieve_extend.c ****             return;                 
 4902              		.loc 1 431 17 is_stmt 1 view .LVU1670
 4903              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4904              		.loc 1 431 51 is_stmt 0 view .LVU1671
 4905 1d0f 4989F3   		mov	r11, rsi	# tmp309, range_start
 4906              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4907              		.loc 1 431 54 view .LVU1672
 4908 1d12 C442C9F7 		shlx	r15, r14, rsi	# tmp312, tmp179, range_start
 4908      FE
 4909              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4910              		.loc 1 431 51 view .LVU1673
 4911 1d17 49C1EB06 		shr	r11, 6	# tmp309,
 4912              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4913              		.loc 1 430 76 view .LVU1674
 4914 1d1b 4801D6   		add	rsi, rdx	# range_start, step
 4915              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4916              		.loc 1 431 51 view .LVU1675
 4917 1d1e 4E093CDF 		or	QWORD PTR [rdi+r11*8], r15	# *_14, tmp312
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4918              		.loc 1 430 70 is_stmt 1 view .LVU1676
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4919              		.loc 1 430 49 view .LVU1677
 4920              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4921              		.loc 1 430 13 is_stmt 0 view .LVU1678
 4922 1d22 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4923 1d25 0F82E9FB 		jb	.L214	#,
 4923      FFFF
 431:sieve_extend.c ****             return;                 
 4924              		.loc 1 431 17 is_stmt 1 view .LVU1679
 4925              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4926              		.loc 1 431 51 is_stmt 0 view .LVU1680
 4927 1d2b 4989F4   		mov	r12, rsi	# tmp314, range_start
 4928              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4929              		.loc 1 431 54 view .LVU1681
 4930 1d2e C442C9F7 		shlx	r9, r14, rsi	# tmp317, tmp179, range_start
 4930      CE
GAS LISTING /tmp/ccRwwoRx.s 			page 140


 4931              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4932              		.loc 1 431 51 view .LVU1682
 4933 1d33 49C1EC06 		shr	r12, 6	# tmp314,
 4934              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4935              		.loc 1 430 76 view .LVU1683
 4936 1d37 4801D6   		add	rsi, rdx	# range_start, step
 4937              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4938              		.loc 1 431 51 view .LVU1684
 4939 1d3a 4E090CE7 		or	QWORD PTR [rdi+r12*8], r9	# *_14, tmp317
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4940              		.loc 1 430 70 is_stmt 1 view .LVU1685
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4941              		.loc 1 430 49 view .LVU1686
 4942              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4943              		.loc 1 430 13 is_stmt 0 view .LVU1687
 4944 1d3e 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4945 1d41 0F82CDFB 		jb	.L214	#,
 4945      FFFF
 431:sieve_extend.c ****             return;                 
 4946              		.loc 1 431 17 is_stmt 1 view .LVU1688
 4947              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4948              		.loc 1 431 51 is_stmt 0 view .LVU1689
 4949 1d47 4989F5   		mov	r13, rsi	# tmp319, range_start
 4950              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4951              		.loc 1 431 54 view .LVU1690
 4952 1d4a C4C2C9F7 		shlx	rax, r14, rsi	# tmp322, tmp179, range_start
 4952      C6
 4953              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4954              		.loc 1 431 51 view .LVU1691
 4955 1d4f 49C1ED06 		shr	r13, 6	# tmp319,
 4956              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4957              		.loc 1 430 76 view .LVU1692
 4958 1d53 4801D6   		add	rsi, rdx	# range_start, step
 4959              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4960              		.loc 1 431 51 view .LVU1693
 4961 1d56 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp322
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4962              		.loc 1 430 70 is_stmt 1 view .LVU1694
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4963              		.loc 1 430 49 view .LVU1695
 4964              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4965              		.loc 1 430 13 is_stmt 0 view .LVU1696
 4966 1d5a 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4967 1d5d 0F82B1FB 		jb	.L214	#,
 4967      FFFF
 431:sieve_extend.c ****             return;                 
 4968              		.loc 1 431 17 is_stmt 1 view .LVU1697
GAS LISTING /tmp/ccRwwoRx.s 			page 141


 4969              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4970              		.loc 1 431 51 is_stmt 0 view .LVU1698
 4971 1d63 4889F3   		mov	rbx, rsi	# tmp324, range_start
 4972              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4973              		.loc 1 431 54 view .LVU1699
 4974 1d66 C442C9F7 		shlx	r8, r14, rsi	# tmp327, tmp179, range_start
 4974      C6
 4975              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4976              		.loc 1 431 51 view .LVU1700
 4977 1d6b 48C1EB06 		shr	rbx, 6	# tmp324,
 4978              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4979              		.loc 1 430 76 view .LVU1701
 4980 1d6f 4801D6   		add	rsi, rdx	# range_start, step
 4981              	# sieve_extend.c:431:                 bitstorage_word[wordindex(index)] |= markmask(index);
 431:sieve_extend.c ****             return;                 
 4982              		.loc 1 431 51 view .LVU1702
 4983 1d72 4C0904DF 		or	QWORD PTR [rdi+rbx*8], r8	# *_14, tmp327
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4984              		.loc 1 430 70 is_stmt 1 view .LVU1703
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4985              		.loc 1 430 49 view .LVU1704
 4986              	# sieve_extend.c:430:             for (counter_t index = range_start; index <= range_stop; index +=
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4987              		.loc 1 430 13 is_stmt 0 view .LVU1705
 4988 1d76 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4989 1d79 0F8320FF 		jnb	.L219	#,
 4989      FFFF
 4990 1d7f E990FBFF 		jmp	.L214	#
 4990      FF
 4991              	.LVL203:
 4992              	.L397:
 430:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4993              		.loc 1 430 13 view .LVU1706
 4994              	.LBE342:
 4995              	# sieve_extend.c:467: }
 467:sieve_extend.c **** 
 4996              		.loc 1 467 1 view .LVU1707
 4997 1d84 E8000000 		call	__stack_chk_fail@PLT	#
 4997      00
 4998              	.LVL204:
 4999              		.cfi_endproc
 5000              	.LFE67:
 5002 1d89 0F1F8000 		.p2align 4
 5002      000000
 5004              	extendSieve_aligned:
 5005              	.LVL205:
 5006              	.LFB69:
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5007              		.loc 1 503 142 is_stmt 1 view -0
 5008              		.cfi_startproc
 504:sieve_extend.c **** 
 5009              		.loc 1 504 5 view .LVU1709
 506:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccRwwoRx.s 			page 142


 5010              		.loc 1 506 5 view .LVU1710
 5011              	# sieve_extend.c:503: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5012              		.loc 1 503 142 is_stmt 0 view .LVU1711
 5013 1d90 55       		push	rbp	#
 5014              		.cfi_def_cfa_offset 16
 5015              		.cfi_offset 6, -16
 5016 1d91 4889E5   		mov	rbp, rsp	#,
 5017              		.cfi_def_cfa_register 6
 5018 1d94 4157     		push	r15	#
 5019 1d96 4156     		push	r14	#
 5020 1d98 4155     		push	r13	#
 5021              		.cfi_offset 15, -24
 5022              		.cfi_offset 14, -32
 5023              		.cfi_offset 13, -40
 5024 1d9a 4989FD   		mov	r13, rdi	# bitstorage, tmp295
 5025 1d9d 4154     		push	r12	#
 5026              		.cfi_offset 12, -48
 5027 1d9f 4989D4   		mov	r12, rdx	# size, tmp297
 5028 1da2 53       		push	rbx	#
 5029              		.cfi_offset 3, -56
 5030              	# sieve_extend.c:506:     const counter_t destination_stop_word = wordindex(destination_stop);
 506:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5031              		.loc 1 506 21 view .LVU1712
 5032 1da3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5033              	# sieve_extend.c:507:     const counter_t copy_start = source_start + size;
 507:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5034              		.loc 1 507 21 view .LVU1713
 5035 1da6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5036              	.LVL206:
 5037              	# sieve_extend.c:503: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5038              		.loc 1 503 142 view .LVU1714
 5039 1daa 4883E4E0 		and	rsp, -32	#,
 5040              	# sieve_extend.c:509:     counter_t copy_word = wordindex(copy_start);
 509:sieve_extend.c ****     
 5041              		.loc 1 509 15 view .LVU1715
 5042 1dae 4889C8   		mov	rax, rcx	# ivtmp.346, copy_start
 5043              	# sieve_extend.c:508:     counter_t source_word = wordindex(source_start);
 508:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5044              		.loc 1 508 15 view .LVU1716
 5045 1db1 48C1EE06 		shr	rsi, 6	# source_start,
 5046              	.LVL207:
 5047              	# sieve_extend.c:503: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 503:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5048              		.loc 1 503 142 view .LVU1717
 5049 1db5 488D6424 		lea	rsp, -32[rsp]	#,
 5049      E0
 5050              	# sieve_extend.c:509:     counter_t copy_word = wordindex(copy_start);
 509:sieve_extend.c ****     
 5051              		.loc 1 509 15 view .LVU1718
 5052 1dba 48C1E806 		shr	rax, 6	# ivtmp.346,
 5053              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5054              		.loc 1 511 39 view .LVU1719
 5055 1dbe 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5055      00000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 143


 5056              	.LVL208:
 5057              	# sieve_extend.c:506:     const counter_t destination_stop_word = wordindex(destination_stop);
 506:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5058              		.loc 1 506 21 view .LVU1720
 5059 1dc6 48C1EB06 		shr	rbx, 6	# tmp298,
 5060              	.LVL209:
 507:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5061              		.loc 1 507 5 is_stmt 1 view .LVU1721
 508:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5062              		.loc 1 508 5 view .LVU1722
 5063              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5064              		.loc 1 511 39 is_stmt 0 view .LVU1723
 5065 1dca 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 5065      00
 5066              	# sieve_extend.c:508:     counter_t source_word = wordindex(source_start);
 508:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5067              		.loc 1 508 15 view .LVU1724
 5068 1dcf 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5068      08
 5069              	.LVL210:
 509:sieve_extend.c ****     
 5070              		.loc 1 509 5 is_stmt 1 view .LVU1725
 511:sieve_extend.c **** 
 5071              		.loc 1 511 5 view .LVU1726
 5072              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5073              		.loc 1 511 56 is_stmt 0 view .LVU1727
 5074 1dd4 89CE     		mov	esi, ecx	# tmp183, copy_start
 5075              	.LVL211:
 5076              	# sieve_extend.c:513:     while (copy_word + size <= destination_stop_word) {
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5077              		.loc 1 513 22 view .LVU1728
 5078 1dd6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.346,
 5079              	.LVL212:
 5080              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5081              		.loc 1 511 56 view .LVU1729
 5082 1dda F7D6     		not	esi	# tmp183
 5083              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5084              		.loc 1 511 39 view .LVU1730
 5085 1ddc 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5086              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5087              		.loc 1 511 56 view .LVU1731
 5088 1de0 48C7C2FF 		mov	rdx, -1	# tmp186,
 5088      FFFFFF
 5089              	.LVL213:
 511:sieve_extend.c **** 
 5090              		.loc 1 511 56 view .LVU1732
 5091 1de7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5091      C2
 5092              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5093              		.loc 1 511 53 view .LVU1733
 5094 1dec C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
GAS LISTING /tmp/ccRwwoRx.s 			page 144


 5094      0E
 5095              	# sieve_extend.c:511:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 511:sieve_extend.c **** 
 5096              		.loc 1 511 27 view .LVU1734
 5097 1df1 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5097      00
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5098              		.loc 1 513 5 is_stmt 1 view .LVU1735
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5099              		.loc 1 513 11 view .LVU1736
 5100 1df6 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.346
 5101 1df9 0F827101 		jb	.L399	#,
 5101      0000
 5102 1dff 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 5102      00000000 
 5103 1e07 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5103      00000000 
 5104              	.LVL214:
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5105              		.loc 1 513 11 is_stmt 0 view .LVU1737
 5106 1e0f 4D01EA   		add	r10, r13	# tmp190, bitstorage
 5107              	# sieve_extend.c:514:         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)s
 514:sieve_extend.c ****         copy_word += size;
 5108              		.loc 1 514 9 view .LVU1738
 5109 1e12 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5109      00000000 
 5110 1e1a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5111 1e1d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5111      18
 5112              	.LVL215:
 5113              	.L400:
 514:sieve_extend.c ****         copy_word += size;
 5114              		.loc 1 514 9 is_stmt 1 view .LVU1739
 5115              	.LBB343:
 5116              	.LBI343:
 5117              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
GAS LISTING /tmp/ccRwwoRx.s 			page 145


  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5118              		.loc 2 31 1 view .LVU1740
 5119              	.LBB344:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5120              		.loc 2 34 3 view .LVU1741
 5121              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5122              		.loc 2 34 10 is_stmt 0 view .LVU1742
 5123 1e22 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5123      18
 5124 1e27 4C89FA   		mov	rdx, r15	#, _15
 5125 1e2a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.346
 5125      10
 5126 1e2f 4C89F6   		mov	rsi, r14	#, _5
 5127 1e32 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5128 1e36 E8000000 		call	memcpy@PLT	#
 5128      00
 5129              	.LVL216:
 5130              		.loc 2 34 10 view .LVU1743
 5131              	.LBE344:
 5132              	.LBE343:
 515:sieve_extend.c ****     }
 5133              		.loc 1 515 9 is_stmt 1 view .LVU1744
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5134              		.loc 1 513 11 view .LVU1745
 5135 1e3b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5135      10
 5136 1e40 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.346,
 5137 1e44 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.346
 5138 1e47 0F822301 		jb	.L399	#,
 5138      0000
 514:sieve_extend.c ****         copy_word += size;
 5139              		.loc 1 514 9 view .LVU1746
 5140              	.LVL217:
 5141              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5142              		.loc 2 31 1 view .LVU1747
 5143              	.LBB345:
 5144              		.loc 2 34 3 view .LVU1748
 5145              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5146              		.loc 2 34 10 is_stmt 0 view .LVU1749
 5147 1e4d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5147      18
 5148 1e52 4C89F6   		mov	rsi, r14	#, _5
 5149 1e55 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.346
 5149      10
 5150              	.LVL218:
GAS LISTING /tmp/ccRwwoRx.s 			page 146


 5151              		.loc 2 34 10 view .LVU1750
 5152 1e5a 4C89FA   		mov	rdx, r15	#, _15
 5153 1e5d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5154 1e61 E8000000 		call	memcpy@PLT	#
 5154      00
 5155              	.LVL219:
 5156              		.loc 2 34 10 view .LVU1751
 5157              	.LBE345:
 5158              	.LBE352:
 515:sieve_extend.c ****     }
 5159              		.loc 1 515 9 is_stmt 1 view .LVU1752
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5160              		.loc 1 513 11 view .LVU1753
 5161 1e66 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5161      10
 5162 1e6b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.346,
 5163 1e6f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.346
 5164 1e72 0F82F800 		jb	.L399	#,
 5164      0000
 514:sieve_extend.c ****         copy_word += size;
 5165              		.loc 1 514 9 view .LVU1754
 5166              	.LVL220:
 5167              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5168              		.loc 2 31 1 view .LVU1755
 5169              	.LBB346:
 5170              		.loc 2 34 3 view .LVU1756
 5171              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5172              		.loc 2 34 10 is_stmt 0 view .LVU1757
 5173 1e78 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5173      18
 5174 1e7d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.346
 5174      10
 5175 1e82 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5176 1e86 4C89FA   		mov	rdx, r15	#, _15
 5177 1e89 4C89F6   		mov	rsi, r14	#, _5
 5178 1e8c E8000000 		call	memcpy@PLT	#
 5178      00
 5179              	.LVL221:
 5180              		.loc 2 34 10 view .LVU1758
 5181              	.LBE346:
 5182              	.LBE353:
 515:sieve_extend.c ****     }
 5183              		.loc 1 515 9 is_stmt 1 view .LVU1759
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5184              		.loc 1 513 11 view .LVU1760
 5185 1e91 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5185      10
 5186 1e96 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.346,
 5187 1e9a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.346
 5188 1e9d 0F82CD00 		jb	.L399	#,
 5188      0000
 514:sieve_extend.c ****         copy_word += size;
 5189              		.loc 1 514 9 view .LVU1761
 5190              	.LVL222:
 5191              	.LBB354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccRwwoRx.s 			page 147


 5192              		.loc 2 31 1 view .LVU1762
 5193              	.LBB347:
 5194              		.loc 2 34 3 view .LVU1763
 5195              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5196              		.loc 2 34 10 is_stmt 0 view .LVU1764
 5197 1ea3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5197      18
 5198 1ea8 4C89FA   		mov	rdx, r15	#, _15
 5199 1eab 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.346
 5199      10
 5200 1eb0 4C89F6   		mov	rsi, r14	#, _5
 5201 1eb3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5202 1eb7 E8000000 		call	memcpy@PLT	#
 5202      00
 5203              	.LVL223:
 5204              		.loc 2 34 10 view .LVU1765
 5205              	.LBE347:
 5206              	.LBE354:
 515:sieve_extend.c ****     }
 5207              		.loc 1 515 9 is_stmt 1 view .LVU1766
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5208              		.loc 1 513 11 view .LVU1767
 5209 1ebc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5209      10
 5210 1ec1 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.346,
 5211 1ec5 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.346
 5212 1ec8 0F82A200 		jb	.L399	#,
 5212      0000
 514:sieve_extend.c ****         copy_word += size;
 5213              		.loc 1 514 9 view .LVU1768
 5214              	.LVL224:
 5215              	.LBB355:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5216              		.loc 2 31 1 view .LVU1769
 5217              	.LBB348:
 5218              		.loc 2 34 3 view .LVU1770
 5219              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5220              		.loc 2 34 10 is_stmt 0 view .LVU1771
 5221 1ece 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5221      18
 5222 1ed3 4C89FA   		mov	rdx, r15	#, _15
 5223 1ed6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.346
 5223      10
 5224 1edb 4C89F6   		mov	rsi, r14	#, _5
 5225 1ede 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5226 1ee2 E8000000 		call	memcpy@PLT	#
 5226      00
 5227              	.LVL225:
 5228              		.loc 2 34 10 view .LVU1772
 5229              	.LBE348:
 5230              	.LBE355:
 515:sieve_extend.c ****     }
 5231              		.loc 1 515 9 is_stmt 1 view .LVU1773
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5232              		.loc 1 513 11 view .LVU1774
 5233 1ee7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5233      10
GAS LISTING /tmp/ccRwwoRx.s 			page 148


 5234 1eec 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.346,
 5235 1ef0 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.346
 5236 1ef3 727B     		jb	.L399	#,
 514:sieve_extend.c ****         copy_word += size;
 5237              		.loc 1 514 9 view .LVU1775
 5238              	.LVL226:
 5239              	.LBB356:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5240              		.loc 2 31 1 view .LVU1776
 5241              	.LBB349:
 5242              		.loc 2 34 3 view .LVU1777
 5243              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5244              		.loc 2 34 10 is_stmt 0 view .LVU1778
 5245 1ef5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5245      18
 5246 1efa 4C89F6   		mov	rsi, r14	#, _5
 5247 1efd 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.346
 5247      10
 5248 1f02 4C89FA   		mov	rdx, r15	#, _15
 5249 1f05 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5250 1f09 E8000000 		call	memcpy@PLT	#
 5250      00
 5251              	.LVL227:
 5252              		.loc 2 34 10 view .LVU1779
 5253              	.LBE349:
 5254              	.LBE356:
 515:sieve_extend.c ****     }
 5255              		.loc 1 515 9 is_stmt 1 view .LVU1780
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5256              		.loc 1 513 11 view .LVU1781
 5257 1f0e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5257      10
 5258 1f13 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.346,
 5259 1f17 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.346
 5260 1f1a 7254     		jb	.L399	#,
 514:sieve_extend.c ****         copy_word += size;
 5261              		.loc 1 514 9 view .LVU1782
 5262              	.LVL228:
 5263              	.LBB357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5264              		.loc 2 31 1 view .LVU1783
 5265              	.LBB350:
 5266              		.loc 2 34 3 view .LVU1784
 5267              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5268              		.loc 2 34 10 is_stmt 0 view .LVU1785
 5269 1f1c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5269      18
 5270 1f21 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.346
 5270      10
 5271 1f26 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5272 1f2a 4C89FA   		mov	rdx, r15	#, _15
 5273 1f2d 4C89F6   		mov	rsi, r14	#, _5
 5274 1f30 E8000000 		call	memcpy@PLT	#
 5274      00
 5275              	.LVL229:
 5276              		.loc 2 34 10 view .LVU1786
 5277              	.LBE350:
GAS LISTING /tmp/ccRwwoRx.s 			page 149


 5278              	.LBE357:
 515:sieve_extend.c ****     }
 5279              		.loc 1 515 9 is_stmt 1 view .LVU1787
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5280              		.loc 1 513 11 view .LVU1788
 5281 1f35 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5281      10
 5282 1f3a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.346,
 5283 1f3e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.346
 5284 1f41 722D     		jb	.L399	#,
 514:sieve_extend.c ****         copy_word += size;
 5285              		.loc 1 514 9 view .LVU1789
 5286              	.LVL230:
 5287              	.LBB358:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5288              		.loc 2 31 1 view .LVU1790
 5289              	.LBB351:
 5290              		.loc 2 34 3 view .LVU1791
 5291              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5292              		.loc 2 34 10 is_stmt 0 view .LVU1792
 5293 1f43 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5293      18
 5294 1f48 4C89FA   		mov	rdx, r15	#, _15
 5295 1f4b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.346
 5295      10
 5296 1f50 4C89F6   		mov	rsi, r14	#, _5
 5297 1f53 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5298 1f57 E8000000 		call	memcpy@PLT	#
 5298      00
 5299              	.LVL231:
 5300              		.loc 2 34 10 view .LVU1793
 5301              	.LBE351:
 5302              	.LBE358:
 515:sieve_extend.c ****     }
 5303              		.loc 1 515 9 is_stmt 1 view .LVU1794
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5304              		.loc 1 513 11 view .LVU1795
 5305 1f5c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.346, %sfp
 5305      10
 5306              	.LVL232:
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5307              		.loc 1 513 11 is_stmt 0 view .LVU1796
 5308 1f61 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.346,
 5309              	.LVL233:
 513:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5310              		.loc 1 513 11 view .LVU1797
 5311 1f65 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.346
 5312 1f68 0F83B4FE 		jnb	.L400	#,
 5312      FFFF
 5313              	.LVL234:
 5314 1f6e 6690     		.p2align 4
 5315              		.p2align 3
 5316              	.L399:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5317              		.loc 1 518 10 is_stmt 1 view .LVU1798
 5318 1f70 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.346
 5319 1f73 0F864902 		jbe	.L510	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 150


 5319      0000
 5320 1f79 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5321 1f7d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5321      00000000 
 5322              	.LVL235:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5323              		.loc 1 518 10 is_stmt 0 view .LVU1799
 5324 1f85 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5324      20
 5325 1f8a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5326 1f8e 4D39FA   		cmp	r10, r15	# _4, tmp199
 5327 1f91 410F9DC3 		setge	r11b	#, tmp201
 5328 1f95 4939FC   		cmp	r12, rdi	# _41, tmp202
 5329 1f98 400F9DC6 		setge	sil	#, tmp204
 5330 1f9c 4108F3   		or	r11b, sil	# tmp201, tmp204
 5331 1f9f 0F844B02 		je	.L402	#,
 5331      0000
 5332 1fa5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5333 1fa9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.346
 5334 1fac 4883FA05 		cmp	rdx, 5	# tmp207,
 5335 1fb0 0F863A02 		jbe	.L402	#,
 5335      0000
 5336 1fb6 4D89F7   		mov	r15, r14	# tmp210, _5
 5337 1fb9 49C1EF03 		shr	r15, 3	# tmp210,
 5338 1fbd 49F7DF   		neg	r15	# tmp211
 5339 1fc0 4183E703 		and	r15d, 3	# prolog_loop_niters.314,
 5340 1fc4 0F842E03 		je	.L409	#,
 5340      0000
 519:sieve_extend.c ****         source_word++;
 5341              		.loc 1 519 9 is_stmt 1 view .LVU1800
 5342              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5343              		.loc 1 519 43 is_stmt 0 view .LVU1801
 5344 1fca 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5345 1fcd 4983FF01 		cmp	r15, 1	# prolog_loop_niters.314,
 5346              	# sieve_extend.c:520:         source_word++;
 520:sieve_extend.c ****         copy_word++;
 5347              		.loc 1 520 20 view .LVU1802
 5348 1fd1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5348      08
 5349              	# sieve_extend.c:521:         copy_word++;
 521:sieve_extend.c ****     }
 5350              		.loc 1 521 18 view .LVU1803
 5351 1fd6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5352              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5353              		.loc 1 519 31 view .LVU1804
 5354 1fda 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5354      00
 520:sieve_extend.c ****         copy_word++;
 5355              		.loc 1 520 9 is_stmt 1 view .LVU1805
 5356              	# sieve_extend.c:520:         source_word++;
 520:sieve_extend.c ****         copy_word++;
 5357              		.loc 1 520 20 is_stmt 0 view .LVU1806
 5358 1fdf 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5359              	.LVL236:
 521:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 151


 5360              		.loc 1 521 9 is_stmt 1 view .LVU1807
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5361              		.loc 1 518 10 view .LVU1808
 5362 1fe3 742A     		je	.L403	#,
 519:sieve_extend.c ****         source_word++;
 5363              		.loc 1 519 9 view .LVU1809
 5364              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5365              		.loc 1 519 43 is_stmt 0 view .LVU1810
 5366 1fe5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5366      00
 5367 1fea 4983FF03 		cmp	r15, 3	# prolog_loop_niters.314,
 5368              	# sieve_extend.c:520:         source_word++;
 520:sieve_extend.c ****         copy_word++;
 5369              		.loc 1 520 20 view .LVU1811
 5370 1fee 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5371              	.LVL237:
 5372              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5373              		.loc 1 519 31 view .LVU1812
 5374 1ff2 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5374      00
 520:sieve_extend.c ****         copy_word++;
 5375              		.loc 1 520 9 is_stmt 1 view .LVU1813
 5376              	.LVL238:
 521:sieve_extend.c ****     }
 5377              		.loc 1 521 9 view .LVU1814
 5378              	# sieve_extend.c:521:         copy_word++;
 521:sieve_extend.c ****     }
 5379              		.loc 1 521 18 is_stmt 0 view .LVU1815
 5380 1ff7 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5381              	.LVL239:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5382              		.loc 1 518 10 is_stmt 1 view .LVU1816
 5383 1ffb 7512     		jne	.L403	#,
 519:sieve_extend.c ****         source_word++;
 5384              		.loc 1 519 9 view .LVU1817
 5385              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5386              		.loc 1 519 43 is_stmt 0 view .LVU1818
 5387 1ffd 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5387      00
 5388              	# sieve_extend.c:520:         source_word++;
 520:sieve_extend.c ****         copy_word++;
 5389              		.loc 1 520 20 view .LVU1819
 5390 2002 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5391              	.LVL240:
 5392              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5393              		.loc 1 519 31 view .LVU1820
 5394 2006 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5394      00
 520:sieve_extend.c ****         copy_word++;
 5395              		.loc 1 520 9 is_stmt 1 view .LVU1821
 5396              	.LVL241:
 521:sieve_extend.c ****     }
 5397              		.loc 1 521 9 view .LVU1822
GAS LISTING /tmp/ccRwwoRx.s 			page 152


 5398              	# sieve_extend.c:521:         copy_word++;
 521:sieve_extend.c ****     }
 5399              		.loc 1 521 18 is_stmt 0 view .LVU1823
 5400 200b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5401              	.LVL242:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5402              		.loc 1 518 10 is_stmt 1 view .LVU1824
 5403              	.L403:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5404              		.loc 1 518 10 is_stmt 0 view .LVU1825
 5405 200f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5405      08
 5406 2014 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5407 2017 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.314
 5408 201a 4929C3   		sub	r11, rax	# niters.315, ivtmp.346
 5409 201d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.314
 5410 2020 4D89D8   		mov	r8, r11	# bnd.316, niters.315
 5411 2023 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.314
 5412 2026 49C1E802 		shr	r8, 2	# bnd.316,
 5413 202a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.324,
 5413      00
 5414 202f 49C1E005 		sal	r8, 5	# _182,
 5415              	# sieve_extend.c:508:     counter_t source_word = wordindex(source_start);
 508:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5416              		.loc 1 508 15 view .LVU1826
 5417 2033 31C0     		xor	eax, eax	# ivtmp.337
 5418 2035 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5419 2039 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.321,
 5419      00
 5420 203e 48C1EA05 		shr	rdx, 5	# tmp226,
 5421 2042 4883C201 		add	rdx, 1	# tmp229,
 5422 2046 83E207   		and	edx, 7	# tmp230,
 5423 2049 0F849500 		je	.L405	#,
 5423      0000
 5424 204f 4883FA01 		cmp	rdx, 1	# tmp230,
 5425 2053 7477     		je	.L469	#,
 5426 2055 4883FA02 		cmp	rdx, 2	# tmp230,
 5427 2059 7462     		je	.L470	#,
 5428 205b 4883FA03 		cmp	rdx, 3	# tmp230,
 5429 205f 744D     		je	.L471	#,
 5430 2061 4883FA04 		cmp	rdx, 4	# tmp230,
 5431 2065 7438     		je	.L472	#,
 5432 2067 4883FA05 		cmp	rdx, 5	# tmp230,
 5433 206b 7423     		je	.L473	#,
 5434 206d 4883FA06 		cmp	rdx, 6	# tmp230,
 5435 2071 740E     		je	.L474	#,
 519:sieve_extend.c ****         source_word++;
 5436              		.loc 1 519 9 is_stmt 1 view .LVU1827
 5437              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5438              		.loc 1 519 31 is_stmt 0 view .LVU1828
 5439 2073 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.321_119, index: ivtmp.337_180, offset: 0
 5440 2077 B8200000 		mov	eax, 32	# ivtmp.337,
 5440      00
 5441 207c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], tmp3
 5441      0F
 520:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccRwwoRx.s 			page 153


 5442              		.loc 1 520 9 is_stmt 1 view .LVU1829
 521:sieve_extend.c ****     }
 5443              		.loc 1 521 9 view .LVU1830
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5444              		.loc 1 518 10 view .LVU1831
 5445              	.L474:
 519:sieve_extend.c ****         source_word++;
 5446              		.loc 1 519 9 view .LVU1832
 5447              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5448              		.loc 1 519 31 is_stmt 0 view .LVU1833
 5449 2081 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5449      06
 5450 2086 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5450      3C07
 520:sieve_extend.c ****         copy_word++;
 5451              		.loc 1 520 9 is_stmt 1 view .LVU1834
 521:sieve_extend.c ****     }
 5452              		.loc 1 521 9 view .LVU1835
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5453              		.loc 1 518 10 view .LVU1836
 5454 208c 4883C020 		add	rax, 32	# ivtmp.337,
 5455              	.L473:
 519:sieve_extend.c ****         source_word++;
 5456              		.loc 1 519 9 view .LVU1837
 5457              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5458              		.loc 1 519 31 is_stmt 0 view .LVU1838
 5459 2090 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5459      06
 5460 2095 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5460      3407
 520:sieve_extend.c ****         copy_word++;
 5461              		.loc 1 520 9 is_stmt 1 view .LVU1839
 521:sieve_extend.c ****     }
 5462              		.loc 1 521 9 view .LVU1840
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5463              		.loc 1 518 10 view .LVU1841
 5464 209b 4883C020 		add	rax, 32	# ivtmp.337,
 5465              	.L472:
 519:sieve_extend.c ****         source_word++;
 5466              		.loc 1 519 9 view .LVU1842
 5467              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5468              		.loc 1 519 31 is_stmt 0 view .LVU1843
 5469 209f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5469      06
 5470 20a4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5470      2C07
 520:sieve_extend.c ****         copy_word++;
 5471              		.loc 1 520 9 is_stmt 1 view .LVU1844
 521:sieve_extend.c ****     }
 5472              		.loc 1 521 9 view .LVU1845
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5473              		.loc 1 518 10 view .LVU1846
 5474 20aa 4883C020 		add	rax, 32	# ivtmp.337,
 5475              	.L471:
GAS LISTING /tmp/ccRwwoRx.s 			page 154


 519:sieve_extend.c ****         source_word++;
 5476              		.loc 1 519 9 view .LVU1847
 5477              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5478              		.loc 1 519 31 is_stmt 0 view .LVU1848
 5479 20ae C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5479      06
 5480 20b3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5480      2407
 520:sieve_extend.c ****         copy_word++;
 5481              		.loc 1 520 9 is_stmt 1 view .LVU1849
 521:sieve_extend.c ****     }
 5482              		.loc 1 521 9 view .LVU1850
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5483              		.loc 1 518 10 view .LVU1851
 5484 20b9 4883C020 		add	rax, 32	# ivtmp.337,
 5485              	.L470:
 519:sieve_extend.c ****         source_word++;
 5486              		.loc 1 519 9 view .LVU1852
 5487              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5488              		.loc 1 519 31 is_stmt 0 view .LVU1853
 5489 20bd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5489      06
 5490 20c2 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5490      0407
 520:sieve_extend.c ****         copy_word++;
 5491              		.loc 1 520 9 is_stmt 1 view .LVU1854
 521:sieve_extend.c ****     }
 5492              		.loc 1 521 9 view .LVU1855
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5493              		.loc 1 518 10 view .LVU1856
 5494 20c8 4883C020 		add	rax, 32	# ivtmp.337,
 5495              	.L469:
 519:sieve_extend.c ****         source_word++;
 5496              		.loc 1 519 9 view .LVU1857
 5497              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5498              		.loc 1 519 31 is_stmt 0 view .LVU1858
 5499 20cc C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5499      06
 5500 20d1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5500      1407
 520:sieve_extend.c ****         copy_word++;
 5501              		.loc 1 520 9 is_stmt 1 view .LVU1859
 521:sieve_extend.c ****     }
 5502              		.loc 1 521 9 view .LVU1860
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5503              		.loc 1 518 10 view .LVU1861
 5504 20d7 4883C020 		add	rax, 32	# ivtmp.337,
 5505 20db 4C39C0   		cmp	rax, r8	# ivtmp.337, _182
 5506 20de 0F848D00 		je	.L506	#,
 5506      0000
 5507              	.L405:
 519:sieve_extend.c ****         source_word++;
 5508              		.loc 1 519 9 view .LVU1862
 5509              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccRwwoRx.s 			page 155


 519:sieve_extend.c ****         source_word++;
 5510              		.loc 1 519 31 is_stmt 0 view .LVU1863
 5511 20e4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.321_119, index: ivtmp.337_180, offse
 5511      06
 5512 20e9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B], 
 5512      1C07
 520:sieve_extend.c ****         copy_word++;
 5513              		.loc 1 520 9 is_stmt 1 view .LVU1864
 521:sieve_extend.c ****     }
 5514              		.loc 1 521 9 view .LVU1865
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5515              		.loc 1 518 10 view .LVU1866
 519:sieve_extend.c ****         source_word++;
 5516              		.loc 1 519 9 view .LVU1867
 5517              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5518              		.loc 1 519 31 is_stmt 0 view .LVU1868
 5519 20ef C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.321_119, index: ivtmp.337_180, off
 5519      0620
 5520 20f5 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B]
 5520      440720
 520:sieve_extend.c ****         copy_word++;
 5521              		.loc 1 520 9 is_stmt 1 view .LVU1869
 521:sieve_extend.c ****     }
 5522              		.loc 1 521 9 view .LVU1870
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5523              		.loc 1 518 10 view .LVU1871
 519:sieve_extend.c ****         source_word++;
 5524              		.loc 1 519 9 view .LVU1872
 5525              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5526              		.loc 1 519 31 is_stmt 0 view .LVU1873
 5527 20fc C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.321_119, index: ivtmp.337_180, off
 5527      0640
 5528 2102 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B]
 5528      4C0740
 520:sieve_extend.c ****         copy_word++;
 5529              		.loc 1 520 9 is_stmt 1 view .LVU1874
 521:sieve_extend.c ****     }
 5530              		.loc 1 521 9 view .LVU1875
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5531              		.loc 1 518 10 view .LVU1876
 519:sieve_extend.c ****         source_word++;
 5532              		.loc 1 519 9 view .LVU1877
 5533              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5534              		.loc 1 519 31 is_stmt 0 view .LVU1878
 5535 2109 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.321_119, index: ivtmp.337_180, of
 5535      0660
 5536 210f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0B
 5536      540760
 520:sieve_extend.c ****         copy_word++;
 5537              		.loc 1 520 9 is_stmt 1 view .LVU1879
 521:sieve_extend.c ****     }
 5538              		.loc 1 521 9 view .LVU1880
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5539              		.loc 1 518 10 view .LVU1881
GAS LISTING /tmp/ccRwwoRx.s 			page 156


 519:sieve_extend.c ****         source_word++;
 5540              		.loc 1 519 9 view .LVU1882
 5541              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5542              		.loc 1 519 31 is_stmt 0 view .LVU1883
 5543 2116 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.321_119, index: ivtmp.337_180, o
 5543      06800000 
 5543      00
 5544 211f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0
 5544      9C078000 
 5544      0000
 520:sieve_extend.c ****         copy_word++;
 5545              		.loc 1 520 9 is_stmt 1 view .LVU1884
 521:sieve_extend.c ****     }
 5546              		.loc 1 521 9 view .LVU1885
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5547              		.loc 1 518 10 view .LVU1886
 519:sieve_extend.c ****         source_word++;
 5548              		.loc 1 519 9 view .LVU1887
 5549              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5550              		.loc 1 519 31 is_stmt 0 view .LVU1888
 5551 2129 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.321_119, index: ivtmp.337_180, o
 5551      06A00000 
 5551      00
 5552 2132 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0
 5552      A407A000 
 5552      0000
 520:sieve_extend.c ****         copy_word++;
 5553              		.loc 1 520 9 is_stmt 1 view .LVU1889
 521:sieve_extend.c ****     }
 5554              		.loc 1 521 9 view .LVU1890
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5555              		.loc 1 518 10 view .LVU1891
 519:sieve_extend.c ****         source_word++;
 5556              		.loc 1 519 9 view .LVU1892
 5557              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5558              		.loc 1 519 31 is_stmt 0 view .LVU1893
 5559 213c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.321_119, index: ivtmp.337_180, o
 5559      06C00000 
 5559      00
 5560 2145 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0
 5560      AC07C000 
 5560      0000
 520:sieve_extend.c ****         copy_word++;
 5561              		.loc 1 520 9 is_stmt 1 view .LVU1894
 521:sieve_extend.c ****     }
 5562              		.loc 1 521 9 view .LVU1895
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5563              		.loc 1 518 10 view .LVU1896
 519:sieve_extend.c ****         source_word++;
 5564              		.loc 1 519 9 view .LVU1897
 5565              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5566              		.loc 1 519 31 is_stmt 0 view .LVU1898
 5567 214f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.321_119, index: ivtmp.337_180, o
GAS LISTING /tmp/ccRwwoRx.s 			page 157


 5567      06E00000 
 5567      00
 5568 2158 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.324_125, index: ivtmp.337_180, offset: 0
 5568      B407E000 
 5568      0000
 520:sieve_extend.c ****         copy_word++;
 5569              		.loc 1 520 9 is_stmt 1 view .LVU1899
 521:sieve_extend.c ****     }
 5570              		.loc 1 521 9 view .LVU1900
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5571              		.loc 1 518 10 view .LVU1901
 5572 2162 48050001 		add	rax, 256	# ivtmp.337,
 5572      0000
 5573 2168 4C39C0   		cmp	rax, r8	# ivtmp.337, _182
 5574 216b 0F8573FF 		jne	.L405	#,
 5574      FFFF
 5575              	.L506:
 5576 2171 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.317, niters.315
 5577 2174 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.317,
 5578 2178 4D01CC   		add	r12, r9	# tmp.318, niters_vector_mult_vf.317
 5579 217b 4D01CE   		add	r14, r9	# tmp.319, niters_vector_mult_vf.317
 5580 217e 4D39CB   		cmp	r11, r9	# niters.315, niters_vector_mult_vf.317
 5581 2181 7455     		je	.L509	#,
 5582              	.LVL243:
 519:sieve_extend.c ****         source_word++;
 5583              		.loc 1 519 9 view .LVU1902
 5584              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5585              		.loc 1 519 43 is_stmt 0 view .LVU1903
 5586 2183 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5586      00
 5587              	# sieve_extend.c:521:         copy_word++;
 521:sieve_extend.c ****     }
 5588              		.loc 1 521 18 view .LVU1904
 5589 2188 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5590              	# sieve_extend.c:520:         source_word++;
 520:sieve_extend.c ****         copy_word++;
 5591              		.loc 1 520 20 view .LVU1905
 5592 218c 4983C401 		add	r12, 1	# source_word,
 5593              	.LVL244:
 5594              	# sieve_extend.c:518:    while (copy_word < destination_stop_word) {
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5595              		.loc 1 518 10 view .LVU1906
 5596 2190 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5597              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5598              		.loc 1 519 31 view .LVU1907
 5599 2193 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5599      00
 520:sieve_extend.c ****         copy_word++;
 5600              		.loc 1 520 9 is_stmt 1 view .LVU1908
 5601              	.LVL245:
 521:sieve_extend.c ****     }
 5602              		.loc 1 521 9 view .LVU1909
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5603              		.loc 1 518 10 view .LVU1910
 5604 2198 763E     		jbe	.L509	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 158


 519:sieve_extend.c ****         source_word++;
 5605              		.loc 1 519 9 view .LVU1911
 5606              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5607              		.loc 1 519 43 is_stmt 0 view .LVU1912
 5608 219a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5608      00000000 
 5609              	# sieve_extend.c:521:         copy_word++;
 521:sieve_extend.c ****     }
 5610              		.loc 1 521 18 view .LVU1913
 5611 21a2 4983C602 		add	r14, 2	# copy_word,
 5612              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5613              		.loc 1 519 43 view .LVU1914
 5614 21a6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5614      00
 5615              	# sieve_extend.c:518:    while (copy_word < destination_stop_word) {
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5616              		.loc 1 518 10 view .LVU1915
 5617 21ab 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5618              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5619              		.loc 1 519 31 view .LVU1916
 5620 21ae 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5620      00
 520:sieve_extend.c ****         copy_word++;
 5621              		.loc 1 520 9 is_stmt 1 view .LVU1917
 521:sieve_extend.c ****     }
 5622              		.loc 1 521 9 view .LVU1918
 5623              	.LVL246:
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5624              		.loc 1 518 10 view .LVU1919
 5625 21b3 7623     		jbe	.L509	#,
 519:sieve_extend.c ****         source_word++;
 5626              		.loc 1 519 9 view .LVU1920
 5627              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5628              		.loc 1 519 43 is_stmt 0 view .LVU1921
 5629 21b5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5629      08
 5630              	.LVL247:
 5631              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5632              		.loc 1 519 31 view .LVU1922
 5633 21ba 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5633      00
 520:sieve_extend.c ****         copy_word++;
 5634              		.loc 1 520 9 is_stmt 1 view .LVU1923
 521:sieve_extend.c ****     }
 5635              		.loc 1 521 9 view .LVU1924
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5636              		.loc 1 518 10 view .LVU1925
 5637 21bf C5F877   		vzeroupper
 5638              	.LVL248:
 5639              	.L510:
 5640              	# sieve_extend.c:524: }
 524:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 159


 5641              		.loc 1 524 1 is_stmt 0 view .LVU1926
 5642 21c2 488D65D8 		lea	rsp, -40[rbp]	#,
 5643 21c6 5B       		pop	rbx	#
 5644 21c7 415C     		pop	r12	#
 5645 21c9 415D     		pop	r13	#
 5646 21cb 415E     		pop	r14	#
 5647 21cd 415F     		pop	r15	#
 5648 21cf 5D       		pop	rbp	#
 5649              		.cfi_remember_state
 5650              		.cfi_def_cfa 7, 8
 5651 21d0 C3       		ret	
 5652              	.LVL249:
 5653              		.p2align 4,,7
 5654 21d1 0F1F8000 		.p2align 3
 5654      000000
 5655              	.L509:
 5656              		.cfi_restore_state
 524:sieve_extend.c **** 
 5657              		.loc 1 524 1 view .LVU1927
 5658 21d8 C5F877   		vzeroupper
 5659 21db 488D65D8 		lea	rsp, -40[rbp]	#,
 5660 21df 5B       		pop	rbx	#
 5661              	.LVL250:
 524:sieve_extend.c **** 
 5662              		.loc 1 524 1 view .LVU1928
 5663 21e0 415C     		pop	r12	#
 5664 21e2 415D     		pop	r13	#
 5665              	.LVL251:
 524:sieve_extend.c **** 
 5666              		.loc 1 524 1 view .LVU1929
 5667 21e4 415E     		pop	r14	#
 5668 21e6 415F     		pop	r15	#
 5669 21e8 5D       		pop	rbp	#
 5670              		.cfi_remember_state
 5671              		.cfi_def_cfa 7, 8
 5672 21e9 C3       		ret	
 5673              	.LVL252:
 5674 21ea 660F1F44 		.p2align 4,,7
 5674      0000
 5675              		.p2align 3
 5676              	.L402:
 5677              		.cfi_restore_state
 5678              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5679              		.loc 1 519 43 view .LVU1930
 5680 21f0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5680      08
 5681 21f5 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.332,
 5681      00
 5682 21fa 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5682      00
 5683              	.LVL253:
 519:sieve_extend.c ****         source_word++;
 5684              		.loc 1 519 43 view .LVU1931
 5685 21ff 4C89EE   		mov	rsi, r13	# tmp221, _179
 5686 2202 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.332
 5687 2205 4829C7   		sub	rdi, rax	# source_word, ivtmp.346
GAS LISTING /tmp/ccRwwoRx.s 			page 160


 5688 2208 4883EE08 		sub	rsi, 8	# tmp222,
 5689 220c 48C1EE03 		shr	rsi, 3	# tmp220,
 5690 2210 4883C601 		add	rsi, 1	# tmp223,
 5691 2214 83E607   		and	esi, 7	# tmp224,
 5692 2217 0F848100 		je	.L407	#,
 5692      0000
 5693 221d 4883FE01 		cmp	rsi, 1	# tmp224,
 5694 2221 7466     		je	.L475	#,
 5695 2223 4883FE02 		cmp	rsi, 2	# tmp224,
 5696 2227 7454     		je	.L476	#,
 5697 2229 4883FE03 		cmp	rsi, 3	# tmp224,
 5698 222d 7442     		je	.L477	#,
 5699 222f 4883FE04 		cmp	rsi, 4	# tmp224,
 5700 2233 7430     		je	.L478	#,
 5701 2235 4883FE05 		cmp	rsi, 5	# tmp224,
 5702 2239 741E     		je	.L479	#,
 5703 223b 4883FE06 		cmp	rsi, 6	# tmp224,
 5704 223f 740C     		je	.L480	#,
 5705              	.LVL254:
 519:sieve_extend.c ****         source_word++;
 5706              		.loc 1 519 9 is_stmt 1 view .LVU1932
 5707              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5708              		.loc 1 519 43 is_stmt 0 view .LVU1933
 5709 2241 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5710 2245 4983C608 		add	r14, 8	# ivtmp.332,
 5711              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5712              		.loc 1 519 31 view .LVU1934
 5713 2249 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5714              		.loc 1 520 9 is_stmt 1 view .LVU1935
 521:sieve_extend.c ****     }
 5715              		.loc 1 521 9 view .LVU1936
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5716              		.loc 1 518 10 view .LVU1937
 5717              	.L480:
 519:sieve_extend.c ****         source_word++;
 5718              		.loc 1 519 9 view .LVU1938
 5719              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5720              		.loc 1 519 43 is_stmt 0 view .LVU1939
 5721 224d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5722 2251 4983C608 		add	r14, 8	# ivtmp.332,
 5723              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5724              		.loc 1 519 31 view .LVU1940
 5725 2255 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5726              		.loc 1 520 9 is_stmt 1 view .LVU1941
 521:sieve_extend.c ****     }
 5727              		.loc 1 521 9 view .LVU1942
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5728              		.loc 1 518 10 view .LVU1943
 5729              	.L479:
 519:sieve_extend.c ****         source_word++;
 5730              		.loc 1 519 9 view .LVU1944
GAS LISTING /tmp/ccRwwoRx.s 			page 161


 5731              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5732              		.loc 1 519 43 is_stmt 0 view .LVU1945
 5733 2259 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5734 225d 4983C608 		add	r14, 8	# ivtmp.332,
 5735              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5736              		.loc 1 519 31 view .LVU1946
 5737 2261 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5738              		.loc 1 520 9 is_stmt 1 view .LVU1947
 521:sieve_extend.c ****     }
 5739              		.loc 1 521 9 view .LVU1948
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5740              		.loc 1 518 10 view .LVU1949
 5741              	.L478:
 519:sieve_extend.c ****         source_word++;
 5742              		.loc 1 519 9 view .LVU1950
 5743              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5744              		.loc 1 519 43 is_stmt 0 view .LVU1951
 5745 2265 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5746 2269 4983C608 		add	r14, 8	# ivtmp.332,
 5747              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5748              		.loc 1 519 31 view .LVU1952
 5749 226d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5750              		.loc 1 520 9 is_stmt 1 view .LVU1953
 521:sieve_extend.c ****     }
 5751              		.loc 1 521 9 view .LVU1954
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5752              		.loc 1 518 10 view .LVU1955
 5753              	.L477:
 519:sieve_extend.c ****         source_word++;
 5754              		.loc 1 519 9 view .LVU1956
 5755              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5756              		.loc 1 519 43 is_stmt 0 view .LVU1957
 5757 2271 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5758 2275 4983C608 		add	r14, 8	# ivtmp.332,
 5759              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5760              		.loc 1 519 31 view .LVU1958
 5761 2279 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5762              		.loc 1 520 9 is_stmt 1 view .LVU1959
 521:sieve_extend.c ****     }
 5763              		.loc 1 521 9 view .LVU1960
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5764              		.loc 1 518 10 view .LVU1961
 5765              	.L476:
 519:sieve_extend.c ****         source_word++;
 5766              		.loc 1 519 9 view .LVU1962
 5767              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5768              		.loc 1 519 43 is_stmt 0 view .LVU1963
GAS LISTING /tmp/ccRwwoRx.s 			page 162


 5769 227d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5770 2281 4983C608 		add	r14, 8	# ivtmp.332,
 5771              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5772              		.loc 1 519 31 view .LVU1964
 5773 2285 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5774              		.loc 1 520 9 is_stmt 1 view .LVU1965
 521:sieve_extend.c ****     }
 5775              		.loc 1 521 9 view .LVU1966
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5776              		.loc 1 518 10 view .LVU1967
 5777              	.L475:
 519:sieve_extend.c ****         source_word++;
 5778              		.loc 1 519 9 view .LVU1968
 5779              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5780              		.loc 1 519 43 is_stmt 0 view .LVU1969
 5781 2289 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5782 228d 4983C608 		add	r14, 8	# ivtmp.332,
 5783              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5784              		.loc 1 519 31 view .LVU1970
 5785 2291 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5786              		.loc 1 520 9 is_stmt 1 view .LVU1971
 521:sieve_extend.c ****     }
 5787              		.loc 1 521 9 view .LVU1972
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5788              		.loc 1 518 10 view .LVU1973
 5789 2295 4D39EE   		cmp	r14, r13	# ivtmp.332, _179
 5790 2298 0F8424FF 		je	.L510	#,
 5790      FFFF
 5791              	.LVL255:
 5792              	.L407:
 519:sieve_extend.c ****         source_word++;
 5793              		.loc 1 519 9 view .LVU1974
 5794              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5795              		.loc 1 519 43 is_stmt 0 view .LVU1975
 5796 229e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5797              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5798              		.loc 1 519 31 view .LVU1976
 5799 22a2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5800              		.loc 1 520 9 is_stmt 1 view .LVU1977
 521:sieve_extend.c ****     }
 5801              		.loc 1 521 9 view .LVU1978
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5802              		.loc 1 518 10 view .LVU1979
 519:sieve_extend.c ****         source_word++;
 5803              		.loc 1 519 9 view .LVU1980
 5804              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5805              		.loc 1 519 43 is_stmt 0 view .LVU1981
 5806 22a5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/ccRwwoRx.s 			page 163


 5806      08
 5807              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5808              		.loc 1 519 31 view .LVU1982
 5809 22aa 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5810              		.loc 1 520 9 is_stmt 1 view .LVU1983
 521:sieve_extend.c ****     }
 5811              		.loc 1 521 9 view .LVU1984
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5812              		.loc 1 518 10 view .LVU1985
 519:sieve_extend.c ****         source_word++;
 5813              		.loc 1 519 9 view .LVU1986
 5814              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5815              		.loc 1 519 43 is_stmt 0 view .LVU1987
 5816 22ae 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5816      10
 5817              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5818              		.loc 1 519 31 view .LVU1988
 5819 22b3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5820              		.loc 1 520 9 is_stmt 1 view .LVU1989
 521:sieve_extend.c ****     }
 5821              		.loc 1 521 9 view .LVU1990
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5822              		.loc 1 518 10 view .LVU1991
 519:sieve_extend.c ****         source_word++;
 5823              		.loc 1 519 9 view .LVU1992
 5824              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5825              		.loc 1 519 43 is_stmt 0 view .LVU1993
 5826 22b7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5826      18
 5827              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5828              		.loc 1 519 31 view .LVU1994
 5829 22bc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5830              		.loc 1 520 9 is_stmt 1 view .LVU1995
 521:sieve_extend.c ****     }
 5831              		.loc 1 521 9 view .LVU1996
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5832              		.loc 1 518 10 view .LVU1997
 519:sieve_extend.c ****         source_word++;
 5833              		.loc 1 519 9 view .LVU1998
 5834              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5835              		.loc 1 519 43 is_stmt 0 view .LVU1999
 5836 22c0 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5836      20
 5837              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5838              		.loc 1 519 31 view .LVU2000
 5839 22c5 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccRwwoRx.s 			page 164


 5840              		.loc 1 520 9 is_stmt 1 view .LVU2001
 521:sieve_extend.c ****     }
 5841              		.loc 1 521 9 view .LVU2002
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5842              		.loc 1 518 10 view .LVU2003
 519:sieve_extend.c ****         source_word++;
 5843              		.loc 1 519 9 view .LVU2004
 5844              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5845              		.loc 1 519 43 is_stmt 0 view .LVU2005
 5846 22c9 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5846      28
 5847              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5848              		.loc 1 519 31 view .LVU2006
 5849 22ce 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5850              		.loc 1 520 9 is_stmt 1 view .LVU2007
 521:sieve_extend.c ****     }
 5851              		.loc 1 521 9 view .LVU2008
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5852              		.loc 1 518 10 view .LVU2009
 519:sieve_extend.c ****         source_word++;
 5853              		.loc 1 519 9 view .LVU2010
 5854              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5855              		.loc 1 519 43 is_stmt 0 view .LVU2011
 5856 22d2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5856      30
 5857              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5858              		.loc 1 519 31 view .LVU2012
 5859 22d7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5860              		.loc 1 520 9 is_stmt 1 view .LVU2013
 521:sieve_extend.c ****     }
 5861              		.loc 1 521 9 view .LVU2014
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5862              		.loc 1 518 10 view .LVU2015
 519:sieve_extend.c ****         source_word++;
 5863              		.loc 1 519 9 view .LVU2016
 5864              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5865              		.loc 1 519 43 is_stmt 0 view .LVU2017
 5866 22db 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5866      38
 5867 22e0 4983C640 		add	r14, 64	# ivtmp.332,
 5868              	# sieve_extend.c:519:         bitstorage[copy_word] = bitstorage[source_word];
 519:sieve_extend.c ****         source_word++;
 5869              		.loc 1 519 31 view .LVU2018
 5870 22e4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 520:sieve_extend.c ****         copy_word++;
 5871              		.loc 1 520 9 is_stmt 1 view .LVU2019
 521:sieve_extend.c ****     }
 5872              		.loc 1 521 9 view .LVU2020
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5873              		.loc 1 518 10 view .LVU2021
GAS LISTING /tmp/ccRwwoRx.s 			page 165


 5874 22e8 4D39EE   		cmp	r14, r13	# ivtmp.332, _179
 5875 22eb 75B1     		jne	.L407	#,
 5876 22ed E9D0FEFF 		jmp	.L510	#
 5876      FF
 5877              	.LVL256:
 5878              		.p2align 4,,7
 5879 22f2 660F1F44 		.p2align 3
 5879      0000
 5880              	.L409:
 5881              	# sieve_extend.c:508:     counter_t source_word = wordindex(source_start);
 508:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5882              		.loc 1 508 15 is_stmt 0 view .LVU2022
 5883 22f8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5883      08
 5884              	# sieve_extend.c:518:    while (copy_word < destination_stop_word) {
 518:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5885              		.loc 1 518 10 view .LVU2023
 5886 22fd 4989C6   		mov	r14, rax	# copy_word, ivtmp.346
 5887 2300 E90AFDFF 		jmp	.L403	#
 5887      FF
 5888              		.cfi_endproc
 5889              	.LFE69:
 5891 2305 66662E0F 		.p2align 4
 5891      1F840000 
 5891      000000
 5893              	extendSieve_shiftleft:
 5894              	.LVL257:
 5895              	.LFB75:
 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5896              		.loc 1 747 144 is_stmt 1 view -0
 5897              		.cfi_startproc
 748:sieve_extend.c **** 
 5898              		.loc 1 748 5 view .LVU2025
 750:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5899              		.loc 1 750 5 view .LVU2026
 5900              	# sieve_extend.c:747: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5901              		.loc 1 747 144 is_stmt 0 view .LVU2027
 5902 2310 55       		push	rbp	#
 5903              		.cfi_def_cfa_offset 16
 5904              		.cfi_offset 6, -16
 5905              	# sieve_extend.c:750:     const counter_t destination_stop_word = wordindex(destination_stop);
 750:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5906              		.loc 1 750 21 view .LVU2028
 5907 2311 48C1E906 		shr	rcx, 6	# tmp1104,
 5908              	.LVL258:
 5909              	# sieve_extend.c:751:     const counter_t copy_start = source_start + size;
 751:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5910              		.loc 1 751 21 view .LVU2029
 5911 2315 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 5912              	# sieve_extend.c:747: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5913              		.loc 1 747 144 view .LVU2030
 5914 2319 4889E5   		mov	rbp, rsp	#,
 5915              		.cfi_def_cfa_register 6
 5916 231c 4989D2   		mov	r10, rdx	# size, tmp1103
 5917 231f 4157     		push	r15	#
GAS LISTING /tmp/ccRwwoRx.s 			page 166


 5918              	# sieve_extend.c:755:     register counter_t copy_word = wordindex(copy_start);
 755:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5919              		.loc 1 755 24 view .LVU2031
 5920 2321 4D89C3   		mov	r11, r8	# copy_word, copy_start
 5921              	# sieve_extend.c:747: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5922              		.loc 1 747 144 view .LVU2032
 5923 2324 4156     		push	r14	#
 5924              	# sieve_extend.c:755:     register counter_t copy_word = wordindex(copy_start);
 755:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5925              		.loc 1 755 24 view .LVU2033
 5926 2326 49C1EB06 		shr	r11, 6	# copy_word,
 5927              		.cfi_offset 15, -24
 5928              		.cfi_offset 14, -32
 5929              	# sieve_extend.c:750:     const counter_t destination_stop_word = wordindex(destination_stop);
 750:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5930              		.loc 1 750 21 view .LVU2034
 5931 232a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 5932              	# sieve_extend.c:747: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5933              		.loc 1 747 144 view .LVU2035
 5934 232d 4155     		push	r13	#
 5935 232f 4154     		push	r12	#
 5936 2331 53       		push	rbx	#
 5937              		.cfi_offset 13, -40
 5938              		.cfi_offset 12, -48
 5939              		.cfi_offset 3, -56
 5940 2332 4889FB   		mov	rbx, rdi	# bitstorage, tmp1101
 5941 2335 4883E4E0 		and	rsp, -32	#,
 5942 2339 488D6424 		lea	rsp, -96[rsp]	#,
 5942      A0
 5943              	# sieve_extend.c:750:     const counter_t destination_stop_word = wordindex(destination_stop);
 750:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5944              		.loc 1 750 21 view .LVU2036
 5945 233e 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 5945      58
 5946              	.LVL259:
 751:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5947              		.loc 1 751 5 is_stmt 1 view .LVU2037
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5948              		.loc 1 752 5 view .LVU2038
 5949              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5950              		.loc 1 752 39 is_stmt 0 view .LVU2039
 5951 2343 4889F1   		mov	rcx, rsi	# _4, source_start
 5952              	.LVL260:
 5953              	# sieve_extend.c:754:     register counter_t source_word = wordindex(source_start);
 754:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5954              		.loc 1 754 24 view .LVU2040
 5955 2346 48C1EE06 		shr	rsi, 6	# source_start,
 5956              	.LVL261:
 5957              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5958              		.loc 1 752 39 view .LVU2041
 5959 234a 83E13F   		and	ecx, 63	# _4,
 5960              	.LVL262:
 5961              	# sieve_extend.c:747: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
GAS LISTING /tmp/ccRwwoRx.s 			page 167


 747:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5962              		.loc 1 747 144 view .LVU2042
 5963 234d 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5963      18
 5964              	# sieve_extend.c:754:     register counter_t source_word = wordindex(source_start);
 754:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5965              		.loc 1 754 24 view .LVU2043
 5966 2352 4989F1   		mov	r9, rsi	# source_word, source_start
 5967              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5968              		.loc 1 752 69 view .LVU2044
 5969 2355 4C89C2   		mov	rdx, r8	# _5, copy_start
 5970              	.LVL263:
 5971              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5972              		.loc 1 752 31 view .LVU2045
 5973 2358 4989CF   		mov	r15, rcx	# shift, _4
 5974              	# sieve_extend.c:757:                              | (bitstorage[source_word+1] << shift_flipped))
 757:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5975              		.loc 1 757 43 view .LVU2046
 5976 235b 4D8D6101 		lea	r12, 1[r9]	# tmp.373,
 5977              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5978              		.loc 1 752 69 view .LVU2047
 5979 235f 83E23F   		and	edx, 63	# _5,
 5980              	.LVL264:
 753:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5981              		.loc 1 753 5 is_stmt 1 view .LVU2048
 754:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5982              		.loc 1 754 5 view .LVU2049
 755:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5983              		.loc 1 755 5 view .LVU2050
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5984              		.loc 1 756 5 view .LVU2051
 5985              	# sieve_extend.c:752:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 752:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5986              		.loc 1 752 31 is_stmt 0 view .LVU2052
 5987 2362 4929D7   		sub	r15, rdx	# shift, _5
 5988              	.LVL265:
 5989              	# sieve_extend.c:763:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 763:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 5990              		.loc 1 763 41 view .LVU2053
 5991 2365 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
 5992              	.LVL266:
 5993              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5994              		.loc 1 756 27 view .LVU2054
 5995 2369 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5995      00000000 
 5996              	# sieve_extend.c:753:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 753:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5997              		.loc 1 753 31 view .LVU2055
 5998 2371 4829CA   		sub	rdx, rcx	# tmp550, _4
 5999              	.LVL267:
 6000              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 6001              		.loc 1 756 42 view .LVU2056
GAS LISTING /tmp/ccRwwoRx.s 			page 168


 6002 2374 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 6002      00000000 
 6003              	# sieve_extend.c:753:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 753:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6004              		.loc 1 753 31 view .LVU2057
 6005 237c 4883C240 		add	rdx, 64	# shift_flipped,
 6006              	.LVL268:
 6007              	# sieve_extend.c:758:                              & ~chopmask(copy_start); // because this is the 
 758:sieve_extend.c **** 
 6008              		.loc 1 758 33 view .LVU2058
 6009 2380 41F7D0   		not	r8d	# tmp557
 6010              	.LVL269:
 6011              	# sieve_extend.c:757:                              | (bitstorage[source_word+1] << shift_flipped))
 757:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6012              		.loc 1 757 59 view .LVU2059
 6013 2383 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 6013      6C0708
 6014              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 6015              		.loc 1 756 56 view .LVU2060
 6016 238a 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 6017              	.LVL270:
 6018              	# sieve_extend.c:758:                              & ~chopmask(copy_start); // because this is the 
 758:sieve_extend.c **** 
 6019              		.loc 1 758 33 view .LVU2061
 6020 238e 48C7C1FF 		mov	rcx, -1	# tmp560,
 6020      FFFFFF
 6021              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 6022              		.loc 1 756 56 view .LVU2062
 6023 2395 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 6023      CF
 6024              	# sieve_extend.c:758:                              & ~chopmask(copy_start); // because this is the 
 758:sieve_extend.c **** 
 6025              		.loc 1 758 33 view .LVU2063
 6026 239a C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 6026      C1
 6027              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 6028              		.loc 1 756 56 view .LVU2064
 6029 239f 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 6029      48
 6030              	# sieve_extend.c:757:                              | (bitstorage[source_word+1] << shift_flipped))
 757:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6031              		.loc 1 757 30 view .LVU2065
 6032 23a4 4D09E9   		or	r9, r13	# tmp556, tmp552
 6033              	# sieve_extend.c:758:                              & ~chopmask(copy_start); // because this is the 
 758:sieve_extend.c **** 
 6034              		.loc 1 758 30 view .LVU2066
 6035 23a7 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 6035      E9
 6036              	# sieve_extend.c:756:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 756:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 6037              		.loc 1 756 27 view .LVU2067
 6038 23ac 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 760:sieve_extend.c ****     source_word++;
 6039              		.loc 1 760 5 is_stmt 1 view .LVU2068
GAS LISTING /tmp/ccRwwoRx.s 			page 169


 6040              	# sieve_extend.c:763:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 763:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 6041              		.loc 1 763 21 is_stmt 0 view .LVU2069
 6042 23b0 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 6043              	.LBB364:
 6044              	.LBB365:
 6045              	# sieve_extend.c:659:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 659:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6046              		.loc 1 659 91 view .LVU2070
 6047 23b3 41B90200 		mov	r9d, 2	# tmp564,
 6047      0000
 6048              	.LBE365:
 6049              	.LBE364:
 6050              	# sieve_extend.c:757:                              | (bitstorage[source_word+1] << shift_flipped))
 757:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6051              		.loc 1 757 59 view .LVU2071
 6052 23b9 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 6053              	# sieve_extend.c:760:     copy_word++;
 760:sieve_extend.c ****     source_word++;
 6054              		.loc 1 760 14 view .LVU2072
 6055 23bd 4D8D6B01 		lea	r13, 1[r11]	# tmp.374,
 6056              	.LVL271:
 761:sieve_extend.c **** 
 6057              		.loc 1 761 5 is_stmt 1 view .LVU2073
 763:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 6058              		.loc 1 763 5 view .LVU2074
 6059              	# sieve_extend.c:763:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 763:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 6060              		.loc 1 763 21 is_stmt 0 view .LVU2075
 6061 23c1 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 6062 23c5 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 6062      50
 6063              	.LVL272:
 764:sieve_extend.c ****     source_word += distance;
 6064              		.loc 1 764 5 is_stmt 1 view .LVU2076
 6065              	.LBB390:
 6066              	.LBI364:
 658:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6067              		.loc 1 658 25 view .LVU2077
 6068              	.LBB387:
 659:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6069              		.loc 1 659 5 view .LVU2078
 6070              	# sieve_extend.c:659:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 659:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6071              		.loc 1 659 91 is_stmt 0 view .LVU2079
 6072 23ca 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 6073 23ce 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 6074              	# sieve_extend.c:659:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 659:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6075              		.loc 1 659 21 view .LVU2080
 6076 23d2 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 6077 23d6 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 6077      30
 6078              	.LVL273:
 660:sieve_extend.c ****     counter_t distance = 0;
 6079              		.loc 1 660 5 is_stmt 1 view .LVU2081
 661:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
GAS LISTING /tmp/ccRwwoRx.s 			page 170


 6080              		.loc 1 661 5 view .LVU2082
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6081              		.loc 1 662 5 view .LVU2083
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6082              		.loc 1 662 11 view .LVU2084
 6083 23db 4939FD   		cmp	r13, rdi	# tmp.374, fast_loop_stop_word
 6084 23de 0F83A004 		jnb	.L513	#,
 6084      0000
 6085 23e4 4D29D9   		sub	r9, r11	# tmp565, copy_word
 6086 23e7 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 6087              	.LVL274:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6088              		.loc 1 662 11 is_stmt 0 view .LVU2085
 6089 23eb 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
 6090 23ef 498D49FC 		lea	rcx, -4[r9]	# _282,
 6091 23f3 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 6092              	.LVL275:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6093              		.loc 1 662 11 view .LVU2086
 6094 23f7 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 6095 23fa 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 6095      38
 6096 23ff 488D4808 		lea	rcx, 8[rax]	# tmp787,
 6097 2403 410F9EC1 		setle	r9b	#, tmp570
 6098 2407 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 6099 240a 400F9EC7 		setle	dil	#, tmp574
 6100              	.LVL276:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6101              		.loc 1 662 11 view .LVU2087
 6102 240e 4109F9   		or	r9d, edi	# tmp575, tmp574
 6103 2411 488D7850 		lea	rdi, 80[rax]	# tmp576,
 6104 2415 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 6104      28
 6105 241a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 6106 241d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6106      27
 6107 2422 4883C010 		add	rax, 16	# tmp581,
 6108 2426 4939C6   		cmp	r14, rax	# tmp571, tmp581
 6109 2429 400F9EC7 		setle	dil	#, tmp583
 6110 242d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 6110      27
 6111 2432 4421CF   		and	edi, r9d	# tmp585, tmp575
 6112 2435 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6112      380B
 6113 243b 410F97C1 		seta	r9b	#, tmp587
 6114 243f 4421CF   		and	edi, r9d	# tmp588, tmp587
 6115 2442 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 6116 2446 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 6117 2449 410F9EC2 		setle	r10b	#, tmp592
 6118 244d 4883C640 		add	rsi, 64	# tmp593,
 6119 2451 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 6120 2454 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6120      27
 6121 2459 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 6121      27
 6122 245e 4421D7   		and	edi, r10d	# tmp598, tmp597
 6123 2461 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
GAS LISTING /tmp/ccRwwoRx.s 			page 171


 6123      28
 6124 2466 410F9EC2 		setle	r10b	#, tmp602
 6125 246a 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 6126 246d 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6126      28
 6127 2472 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 6127      28
 6128 2477 4484D7   		test	dil, r10b	# tmp598, tmp607
 6129 247a 0F84E80C 		je	.L514	#,
 6129      0000
 6130 2480 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 6131 2483 410F9EC6 		setle	r14b	#, tmp612
 6132 2487 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 6133 248a 400F9EC6 		setle	sil	#, tmp616
 6134 248e 4108F6   		or	r14b, sil	# tmp612, tmp616
 6135 2491 0F84D10C 		je	.L514	#,
 6135      0000
 6136 2497 4801D9   		add	rcx, rbx	# vectp.395, bitstorage
 6137 249a 4801D8   		add	rax, rbx	# vectp.399, bitstorage
 6138              	.LBB366:
 6139              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6140              		.loc 1 664 19 view .LVU2088
 6141 249d C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B], MEM[
 6142 24a1 C4C1796E 		vmovd	xmm3, r15d	# _12,
 6142      DF
 6143 24a6 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 32B], M
 6143      20
 6144 24ab C5F96EE2 		vmovd	xmm4, edx	# _18,
 6145              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6146              		.loc 1 663 19 view .LVU2089
 6147 24af C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.395_440, index: ivtmp.450_748, offset: 
 6148              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6149              		.loc 1 664 19 view .LVU2090
 6150 24b3 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B],
 6151 24b7 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B]
 6152              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6153              		.loc 1 663 19 view .LVU2091
 6154 24bb C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.395_440, index: ivt
 6154      20
 6155 24c0 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 6155      38
 6156              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6157              		.loc 1 664 19 view .LVU2092
 6158 24c5 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 6158      C5D8
 6159              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6160              		.loc 1 663 19 view .LVU2093
 6161 24cb C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 6161      F2D8
 6162              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/ccRwwoRx.s 			page 172


 6163              		.loc 1 664 19 view .LVU2094
 6164 24d1 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 6164      FED8
 6165              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6166              		.loc 1 665 65 view .LVU2095
 6167 24d7 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.403, vect_perm_even_457, _18
 6168              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6169              		.loc 1 665 44 view .LVU2096
 6170 24db C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.402, tmp627, _12
 6171              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6172              		.loc 1 667 44 view .LVU2097
 6173 24df C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.405, vect_perm_even_457, _12
 6174              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6175              		.loc 1 667 65 view .LVU2098
 6176 24e3 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.406, tmp641, _18
 6177 24e7 49C1EE03 		shr	r14, 3	# _282,
 6178              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6179              		.loc 1 665 54 view .LVU2099
 6180 24eb C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.404, vect__98.402, vect__100.403
 6180      DA
 6181              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6182              		.loc 1 667 54 view .LVU2100
 6183 24f0 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.407, vect__110.406, vect__109.405
 6184 24f4 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 6185              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6186              		.loc 1 665 33 view .LVU2101
 6187 24f8 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.404
 6187      DD01
 6188 24fe 4183E201 		and	r10d, 1	# tmp811,
 6189              	.LVL277:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6190              		.loc 1 663 9 is_stmt 1 view .LVU2102
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6191              		.loc 1 664 9 view .LVU2103
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6192              		.loc 1 665 9 view .LVU2104
 6193              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6194              		.loc 1 667 33 is_stmt 0 view .LVU2105
 6195 2502 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.407
 6195      EF01
 6196 2508 4983FE01 		cmp	r14, 1	# bnd.388,
 6197              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6198              		.loc 1 665 33 view .LVU2106
 6199 250c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.450_748, offset: 0B], tmp634
 6199      1C0B
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6200              		.loc 1 665 33 view .LVU2107
 6201 2512 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
GAS LISTING /tmp/ccRwwoRx.s 			page 173


 6202 2516 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 16B], tmp63
 6202      5C0B1001 
 6203 251e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 6204 2522 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.450_748, offset: 32B], tmp638
 6204      6C0B20
 6205 2529 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 48B], tmp63
 6205      6C0B3001 
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6206              		.loc 1 666 9 is_stmt 1 view .LVU2108
 6207              	.LVL278:
 667:sieve_extend.c ****         copy_word += 2;
 6208              		.loc 1 667 9 view .LVU2109
 6209 2531 41B90100 		mov	r9d, 1	# ivtmp.448,
 6209      0000
 6210              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6211              		.loc 1 667 33 is_stmt 0 view .LVU2110
 6212 2537 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.450_748, offset: 0B], tmp648
 6212      2C03
 667:sieve_extend.c ****         copy_word += 2;
 6213              		.loc 1 667 33 view .LVU2111
 6214 253d C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 16B], tmp648
 6214      6C031001 
 6215 2545 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.450_748, offset: 32B], tmp652
 6215      7C0320
 6216 254c C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 48B], tmp652
 6216      7C033001 
 668:sieve_extend.c ****         source_word += 2;
 6217              		.loc 1 668 9 is_stmt 1 view .LVU2112
 669:sieve_extend.c ****         distance += 2;
 6218              		.loc 1 669 9 view .LVU2113
 670:sieve_extend.c ****     }
 6219              		.loc 1 670 9 view .LVU2114
 670:sieve_extend.c ****     }
 6220              		.loc 1 670 9 is_stmt 0 view .LVU2115
 6221              	.LBE366:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6222              		.loc 1 662 11 is_stmt 1 view .LVU2116
 6223 2554 41B84000 		mov	r8d, 64	# ivtmp.450,
 6223      0000
 6224 255a 0F86EC01 		jbe	.L659	#,
 6224      0000
 6225 2560 4D85D2   		test	r10, r10	# tmp811
 6226 2563 0F84A700 		je	.L515	#,
 6226      0000
 6227              	.LBB367:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6228              		.loc 1 663 9 view .LVU2117
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6229              		.loc 1 664 9 view .LVU2118
 6230              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6231              		.loc 1 664 19 is_stmt 0 view .LVU2119
 6232 2569 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B], ME
 6232      40
 6233 256e 4983FE02 		cmp	r14, 2	# bnd.388,
 6234 2572 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 32B], 
GAS LISTING /tmp/ccRwwoRx.s 			page 174


 6234      60
 6235 2577 41B90200 		mov	r9d, 2	# ivtmp.448,
 6235      0000
 6236              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6237              		.loc 1 663 19 view .LVU2120
 6238 257d C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.395_440, index: ivtmp.450_748, offset
 6238      40
 6239              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6240              		.loc 1 664 19 view .LVU2121
 6241 2582 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B
 6241      D2
 6242 2587 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B
 6242      C2
 6243              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6244              		.loc 1 663 19 view .LVU2122
 6245 258c C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.395_440, index: i
 6245      60
 6246              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6247              		.loc 1 664 19 view .LVU2123
 6248 2591 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
 6248      DAD8
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6249              		.loc 1 665 9 is_stmt 1 view .LVU2124
 6250              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6251              		.loc 1 663 19 is_stmt 0 view .LVU2125
 6252 2597 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 6252      ECD8
 6253              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6254              		.loc 1 664 19 view .LVU2126
 6255 259d C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 6255      F8D8
 6256 25a3 41B88000 		mov	r8d, 128	# ivtmp.450,
 6256      0000
 6257              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6258              		.loc 1 665 44 view .LVU2127
 6259 25a9 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.402, tmp1080, _12
 6260              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6261              		.loc 1 665 65 view .LVU2128
 6262 25ad C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.403, vect_perm_even_457, _18
 6263              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6264              		.loc 1 667 44 view .LVU2129
 6265 25b1 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.405, vect_perm_even_457, _12
 6266              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6267              		.loc 1 667 65 view .LVU2130
 6268 25b5 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.406, tmp1091, _18
 6269              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
GAS LISTING /tmp/ccRwwoRx.s 			page 175


 6270              		.loc 1 665 54 view .LVU2131
 6271 25b9 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.404, vect__98.402, vect__100.403
 6271      CF
 6272              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6273              		.loc 1 667 54 view .LVU2132
 6274 25be C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.407, vect__110.406, vect__109.405
 6274      D2
 6275              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6276              		.loc 1 665 33 view .LVU2133
 6277 25c3 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.404
 6277      CD01
 6278              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6279              		.loc 1 667 33 view .LVU2134
 6280 25c9 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.407
 6280      D601
 6281              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6282              		.loc 1 665 33 view .LVU2135
 6283 25cf C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.450_748, offset: 0B], tmp1084
 6283      4B40
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6284              		.loc 1 665 33 view .LVU2136
 6285 25d5 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 16B], tmp1084
 6285      4B5001
 6286 25dc C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.450_748, offset: 32B], tmp1087
 6286      6B60
 6287 25e2 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 48B], tmp1087
 6287      6B7001
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6288              		.loc 1 666 9 is_stmt 1 view .LVU2137
 667:sieve_extend.c ****         copy_word += 2;
 6289              		.loc 1 667 9 view .LVU2138
 6290              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6291              		.loc 1 667 33 is_stmt 0 view .LVU2139
 6292 25e9 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.450_748, offset: 0B], tmp1095
 6292      40
 667:sieve_extend.c ****         copy_word += 2;
 6293              		.loc 1 667 33 view .LVU2140
 6294 25ee C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 16B], tmp1095
 6294      575001
 6295 25f5 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.450_748, offset: 32B], tmp1098
 6295      60
 6296 25fa C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 48B], tmp1098
 6296      777001
 668:sieve_extend.c ****         source_word += 2;
 6297              		.loc 1 668 9 is_stmt 1 view .LVU2141
 669:sieve_extend.c ****         distance += 2;
 6298              		.loc 1 669 9 view .LVU2142
 670:sieve_extend.c ****     }
 6299              		.loc 1 670 9 view .LVU2143
 670:sieve_extend.c ****     }
 6300              		.loc 1 670 9 is_stmt 0 view .LVU2144
 6301              	.LBE367:
GAS LISTING /tmp/ccRwwoRx.s 			page 176


 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6302              		.loc 1 662 11 is_stmt 1 view .LVU2145
 6303 2601 0F864501 		jbe	.L659	#,
 6303      0000
 6304 2607 660F1F84 		.p2align 4
 6304      00000000 
 6304      00
 6305              		.p2align 3
 6306              	.L515:
 6307              	.LBB368:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6308              		.loc 1 663 9 view .LVU2146
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6309              		.loc 1 664 9 view .LVU2147
 6310              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6311              		.loc 1 664 19 is_stmt 0 view .LVU2148
 6312 2610 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B], 
 6312      2400
 6313 2616 4983C102 		add	r9, 2	# ivtmp.448,
 6314 261a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 32B
 6314      6C0020
 6315              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6316              		.loc 1 663 19 view .LVU2149
 6317 2621 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.395_440, index: ivtmp.450_748, offse
 6317      0C01
 6318              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6319              		.loc 1 664 19 view .LVU2150
 6320 2627 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0
 6320      F5
 6321 262c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0
 6321      DD
 6322              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6323              		.loc 1 663 19 view .LVU2151
 6324 2631 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.395_440, index: 
 6324      440120
 6325              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6326              		.loc 1 664 19 view .LVU2152
 6327 2638 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
 6327      FED8
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6328              		.loc 1 665 9 is_stmt 1 view .LVU2153
 6329              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6330              		.loc 1 663 19 is_stmt 0 view .LVU2154
 6331 263e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 6331      E8D8
 6332              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6333              		.loc 1 664 19 view .LVU2155
 6334 2644 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 6334      F3D8
 6335              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccRwwoRx.s 			page 177


 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6336              		.loc 1 665 44 view .LVU2156
 6337 264a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.402, tmp823, _12
 6338              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6339              		.loc 1 665 65 view .LVU2157
 6340 264e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.403, vect_perm_even_457, _18
 6341              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6342              		.loc 1 667 44 view .LVU2158
 6343 2652 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.405, vect_perm_even_457, _12
 6344              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6345              		.loc 1 667 65 view .LVU2159
 6346 2656 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.406, tmp834, _18
 6347              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6348              		.loc 1 665 54 view .LVU2160
 6349 265a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.404, vect__98.402, vect__100.403
 6350              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6351              		.loc 1 667 54 view .LVU2161
 6352 265e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.407, vect__110.406, vect__109.405
 6352      F5
 6353              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6354              		.loc 1 665 33 view .LVU2162
 6355 2663 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.404
 6355      CA01
 6356              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6357              		.loc 1 667 33 view .LVU2163
 6358 2669 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.407
 6358      F101
 6359              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6360              		.loc 1 665 33 view .LVU2164
 6361 266f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.450_748, offset: 0B], tmp827
 6361      0C03
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6362              		.loc 1 665 33 view .LVU2165
 6363 2675 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 16B], tmp827
 6363      4C031001 
 6364 267d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.450_748, offset: 32B], tmp830
 6364      540320
 6365 2684 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 48B], tmp830
 6365      54033001 
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6366              		.loc 1 666 9 is_stmt 1 view .LVU2166
 667:sieve_extend.c ****         copy_word += 2;
 6367              		.loc 1 667 9 view .LVU2167
 6368              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6369              		.loc 1 667 33 is_stmt 0 view .LVU2168
 6370 268c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.450_748, offset: 0B], tmp838
 6370      3407
 667:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccRwwoRx.s 			page 178


 6371              		.loc 1 667 33 view .LVU2169
 6372 2692 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 16B], tmp83
 6372      74071001 
 6373 269a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.450_748, offset: 32B], tmp841
 6373      4C0720
 6374 26a1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 48B], tmp841
 6374      4C073001 
 668:sieve_extend.c ****         source_word += 2;
 6375              		.loc 1 668 9 is_stmt 1 view .LVU2170
 669:sieve_extend.c ****         distance += 2;
 6376              		.loc 1 669 9 view .LVU2171
 670:sieve_extend.c ****     }
 6377              		.loc 1 670 9 view .LVU2172
 670:sieve_extend.c ****     }
 6378              		.loc 1 670 9 is_stmt 0 view .LVU2173
 6379              	.LBE368:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6380              		.loc 1 662 11 is_stmt 1 view .LVU2174
 6381              	.LBB369:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6382              		.loc 1 663 9 view .LVU2175
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6383              		.loc 1 664 9 view .LVU2176
 6384              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6385              		.loc 1 664 19 is_stmt 0 view .LVU2177
 6386 26a9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B],
 6386      440040
 6387 26b0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 32B]
 6387      440060
 6388              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6389              		.loc 1 663 19 view .LVU2178
 6390 26b7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.395_440, index: ivtmp.450_748, off
 6390      7C0140
 6391              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6392              		.loc 1 664 19 view .LVU2179
 6393 26be C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B],
 6394 26c2 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.399_449, index: ivtmp.450_748, offset: 0B]
 6395              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6396              		.loc 1 663 19 view .LVU2180
 6397 26c6 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.395_440, index:
 6397      540160
 6398              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6399              		.loc 1 664 19 view .LVU2181
 6400 26cd C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 6400      CDD8
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6401              		.loc 1 665 9 is_stmt 1 view .LVU2182
 6402              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6403              		.loc 1 663 19 is_stmt 0 view .LVU2183
 6404 26d3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 6404      D2D8
GAS LISTING /tmp/ccRwwoRx.s 			page 179


 6405              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6406              		.loc 1 664 19 view .LVU2184
 6407 26d9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 6407      CFD8
 6408              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6409              		.loc 1 665 44 view .LVU2185
 6410 26df C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.402, tmp853, _12
 6411              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6412              		.loc 1 665 65 view .LVU2186
 6413 26e3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.403, vect_perm_even_457, _18
 6414              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6415              		.loc 1 667 44 view .LVU2187
 6416 26e7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.405, vect_perm_even_457, _12
 6417              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6418              		.loc 1 667 65 view .LVU2188
 6419 26eb C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.406, tmp864, _18
 6420              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6421              		.loc 1 665 54 view .LVU2189
 6422 26ef C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.404, vect__98.402, vect__100.403
 6423              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6424              		.loc 1 667 54 view .LVU2190
 6425 26f3 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.407, vect__110.406, vect__109.405
 6426              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6427              		.loc 1 665 33 view .LVU2191
 6428 26f7 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.404
 6428      E601
 6429              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6430              		.loc 1 667 33 view .LVU2192
 6431 26fd C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.407
 6431      EF01
 6432              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6433              		.loc 1 665 33 view .LVU2193
 6434 2703 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.450_748, offset: 0B], tmp857
 6434      640340
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6435              		.loc 1 665 33 view .LVU2194
 6436 270a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 16B], tmp85
 6436      64035001 
 6437 2712 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.450_748, offset: 32B], tmp860
 6437      740360
 6438 2719 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.450_748, offset: 48B], tmp8
 6438      74037001 
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6439              		.loc 1 666 9 is_stmt 1 view .LVU2195
 667:sieve_extend.c ****         copy_word += 2;
 6440              		.loc 1 667 9 view .LVU2196
 6441              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccRwwoRx.s 			page 180


 667:sieve_extend.c ****         copy_word += 2;
 6442              		.loc 1 667 33 is_stmt 0 view .LVU2197
 6443 2721 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.450_748, offset: 0B], tmp868
 6443      6C0740
 667:sieve_extend.c ****         copy_word += 2;
 6444              		.loc 1 667 33 view .LVU2198
 6445 2728 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 16B], tmp868
 6445      6C075001 
 6446 2730 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.450_748, offset: 32B], tmp871
 6446      7C0760
 6447 2737 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.450_748, offset: 48B], tmp87
 6447      7C077001 
 668:sieve_extend.c ****         source_word += 2;
 6448              		.loc 1 668 9 is_stmt 1 view .LVU2199
 669:sieve_extend.c ****         distance += 2;
 6449              		.loc 1 669 9 view .LVU2200
 670:sieve_extend.c ****     }
 6450              		.loc 1 670 9 view .LVU2201
 670:sieve_extend.c ****     }
 6451              		.loc 1 670 9 is_stmt 0 view .LVU2202
 6452              	.LBE369:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6453              		.loc 1 662 11 is_stmt 1 view .LVU2203
 6454 273f 4983E880 		sub	r8, -128	# ivtmp.450,
 6455 2743 4D39CE   		cmp	r14, r9	# bnd.388, ivtmp.448
 6456 2746 0F87C4FE 		ja	.L515	#,
 6456      FFFF
 6457              	.L659:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6458              		.loc 1 662 11 is_stmt 0 view .LVU2204
 6459 274c 49C1E603 		sal	r14, 3	# _433,
 6460 2750 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.390,
 6461 2754 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.391,
 6461      00
 6462              	.LVL279:
 6463              	.LBB370:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6464              		.loc 1 663 9 is_stmt 1 view .LVU2205
 6465              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6466              		.loc 1 663 39 is_stmt 0 view .LVU2206
 6467 2759 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 6467      00000000 
 6468              	.LVL280:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6469              		.loc 1 664 9 is_stmt 1 view .LVU2207
 6470              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6471              		.loc 1 665 44 is_stmt 0 view .LVU2208
 6472 2761 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 6472      34CB
 6473              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6474              		.loc 1 664 19 view .LVU2209
 6475 2767 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 6475      08
 6476              	.LVL281:
GAS LISTING /tmp/ccRwwoRx.s 			page 181


 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6477              		.loc 1 665 9 is_stmt 1 view .LVU2210
 6478              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6479              		.loc 1 665 65 is_stmt 0 view .LVU2211
 6480 276c C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 6480      D7
 6481              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6482              		.loc 1 665 54 view .LVU2212
 6483 2771 4C09D6   		or	rsi, r10	# tmp659, tmp658
 6484              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6485              		.loc 1 667 44 view .LVU2213
 6486 2774 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 6486      FF
 6487              	.LVL282:
 6488              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6489              		.loc 1 665 54 view .LVU2214
 6490 2779 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 6491              	.LVL283:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6492              		.loc 1 666 9 is_stmt 1 view .LVU2215
 6493              	# sieve_extend.c:666:         bitword_t source2 = bitstorage[source_word+2];
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6494              		.loc 1 666 39 is_stmt 0 view .LVU2216
 6495 277d 4C8D4902 		lea	r9, 2[rcx]	# _652,
 6496              	.LVL284:
 667:sieve_extend.c ****         copy_word += 2;
 6497              		.loc 1 667 9 is_stmt 1 view .LVU2217
 6498              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6499              		.loc 1 667 65 is_stmt 0 view .LVU2218
 6500 2781 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 6500      10
 6501 2786 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 6501      D8
 6502              	.LVL285:
 6503              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6504              		.loc 1 667 54 view .LVU2219
 6505 278b 4C09DF   		or	rdi, r11	# tmp663, tmp660
 6506              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 6507              		.loc 1 668 19 view .LVU2220
 6508 278e 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 6509              	.LVL286:
 668:sieve_extend.c ****         source_word += 2;
 6510              		.loc 1 668 19 view .LVU2221
 6511              	.LBE370:
 6512              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6513              		.loc 1 662 11 view .LVU2222
 6514 2792 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6514      30
 6515              	.LBB371:
GAS LISTING /tmp/ccRwwoRx.s 			page 182


 6516              	# sieve_extend.c:670:         distance += 2;
 670:sieve_extend.c ****     }
 6517              		.loc 1 670 18 view .LVU2223
 6518 2797 4D8D5602 		lea	r10, 2[r14]	# distance,
 6519              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6520              		.loc 1 667 54 view .LVU2224
 6521 279b 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 6521      08
 6522              	.LVL287:
 668:sieve_extend.c ****         source_word += 2;
 6523              		.loc 1 668 9 is_stmt 1 view .LVU2225
 669:sieve_extend.c ****         distance += 2;
 6524              		.loc 1 669 9 view .LVU2226
 670:sieve_extend.c ****     }
 6525              		.loc 1 670 9 view .LVU2227
 670:sieve_extend.c ****     }
 6526              		.loc 1 670 9 is_stmt 0 view .LVU2228
 6527              	.LBE371:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6528              		.loc 1 662 11 is_stmt 1 view .LVU2229
 6529 27a0 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6530 27a3 0F86D500 		jbe	.L518	#,
 6530      0000
 6531              	.LBB372:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6532              		.loc 1 663 9 view .LVU2230
 6533              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6534              		.loc 1 665 44 is_stmt 0 view .LVU2231
 6535 27a9 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 6536              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6537              		.loc 1 663 39 view .LVU2232
 6538 27ad 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 6538      00000000 
 6539              	.LVL288:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6540              		.loc 1 664 9 is_stmt 1 view .LVU2233
 6541              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6542              		.loc 1 664 19 is_stmt 0 view .LVU2234
 6543 27b5 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
 6543      08
 6544              	.LVL289:
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6545              		.loc 1 665 9 is_stmt 1 view .LVU2235
 6546              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6547              		.loc 1 665 44 is_stmt 0 view .LVU2236
 6548 27ba C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 6548      F6
 6549              	.LVL290:
 6550              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6551              		.loc 1 665 65 view .LVU2237
 6552 27bf C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
GAS LISTING /tmp/ccRwwoRx.s 			page 183


 6552      CF
 6553              	.LVL291:
 6554              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6555              		.loc 1 665 54 view .LVU2238
 6556 27c4 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6557 27c7 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 6558              	.LVL292:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6559              		.loc 1 666 9 is_stmt 1 view .LVU2239
 6560              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6561              		.loc 1 667 44 is_stmt 0 view .LVU2240
 6562 27cb C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
 6562      FF
 6563              	.LVL293:
 6564              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6565              		.loc 1 667 65 view .LVU2241
 6566 27d0 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 6566      10
 6567 27d5 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
 6567      F2
 6568              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6569              		.loc 1 667 54 view .LVU2242
 6570 27da 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6571              	# sieve_extend.c:666:         bitword_t source2 = bitstorage[source_word+2];
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6572              		.loc 1 666 39 view .LVU2243
 6573 27dd 4C8D4904 		lea	r9, 4[rcx]	# _682,
 667:sieve_extend.c ****         copy_word += 2;
 6574              		.loc 1 667 9 is_stmt 1 view .LVU2244
 6575              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6576              		.loc 1 667 54 is_stmt 0 view .LVU2245
 6577 27e1 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 6577      08
 668:sieve_extend.c ****         source_word += 2;
 6578              		.loc 1 668 9 is_stmt 1 view .LVU2246
 6579              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 6580              		.loc 1 668 19 is_stmt 0 view .LVU2247
 6581 27e6 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 6582              	.LVL294:
 669:sieve_extend.c ****         distance += 2;
 6583              		.loc 1 669 9 is_stmt 1 view .LVU2248
 670:sieve_extend.c ****     }
 6584              		.loc 1 670 9 view .LVU2249
 670:sieve_extend.c ****     }
 6585              		.loc 1 670 9 is_stmt 0 view .LVU2250
 6586              	.LBE372:
 6587              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6588              		.loc 1 662 11 view .LVU2251
 6589 27ea 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6590              	.LBB373:
GAS LISTING /tmp/ccRwwoRx.s 			page 184


 6591              	# sieve_extend.c:670:         distance += 2;
 670:sieve_extend.c ****     }
 6592              		.loc 1 670 18 view .LVU2252
 6593 27ed 4D8D5604 		lea	r10, 4[r14]	# distance,
 6594              	.LVL295:
 670:sieve_extend.c ****     }
 6595              		.loc 1 670 18 view .LVU2253
 6596              	.LBE373:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6597              		.loc 1 662 11 is_stmt 1 view .LVU2254
 6598 27f1 0F868700 		jbe	.L518	#,
 6598      0000
 6599              	.LBB374:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6600              		.loc 1 663 9 view .LVU2255
 6601              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6602              		.loc 1 663 39 is_stmt 0 view .LVU2256
 6603 27f7 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 6603      00000000 
 6604              	.LVL296:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6605              		.loc 1 664 9 is_stmt 1 view .LVU2257
 6606              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 6607              		.loc 1 668 19 is_stmt 0 view .LVU2258
 6608 27ff 4883C006 		add	rax, 6	# copy_word,
 6609              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6610              		.loc 1 664 19 view .LVU2259
 6611 2803 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 6611      08
 6612              	.LVL297:
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6613              		.loc 1 665 9 is_stmt 1 view .LVU2260
 6614              	# sieve_extend.c:666:         bitword_t source2 = bitstorage[source_word+2];
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6615              		.loc 1 666 39 is_stmt 0 view .LVU2261
 6616 2808 4883C106 		add	rcx, 6	# _712,
 6617              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6618              		.loc 1 665 44 view .LVU2262
 6619 280c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
 6620              	.LVL298:
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6621              		.loc 1 665 44 view .LVU2263
 6622 2810 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 6622      F1
 6623              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6624              		.loc 1 665 65 view .LVU2264
 6625 2815 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 6625      CF
 6626              	.LVL299:
 6627              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6628              		.loc 1 665 54 view .LVU2265
GAS LISTING /tmp/ccRwwoRx.s 			page 185


 6629 281a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 6630 281d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 6631              	.LVL300:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6632              		.loc 1 666 9 is_stmt 1 view .LVU2266
 667:sieve_extend.c ****         copy_word += 2;
 6633              		.loc 1 667 9 view .LVU2267
 6634              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6635              		.loc 1 667 44 is_stmt 0 view .LVU2268
 6636 2821 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 6636      FF
 6637              	.LVL301:
 6638              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6639              		.loc 1 667 65 view .LVU2269
 6640 2826 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 6640      10
 6641              	.LVL302:
 667:sieve_extend.c ****         copy_word += 2;
 6642              		.loc 1 667 65 view .LVU2270
 6643 282b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
 6643      F2
 6644              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6645              		.loc 1 667 54 view .LVU2271
 6646 2830 4809F7   		or	rdi, rsi	# tmp679, tmp676
 6647              	.LBE374:
 6648              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6649              		.loc 1 662 11 view .LVU2272
 6650 2833 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 6651              	.LBB375:
 6652              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6653              		.loc 1 667 54 view .LVU2273
 6654 2836 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 6654      08
 668:sieve_extend.c ****         source_word += 2;
 6655              		.loc 1 668 9 is_stmt 1 view .LVU2274
 6656              	.LVL303:
 669:sieve_extend.c ****         distance += 2;
 6657              		.loc 1 669 9 view .LVU2275
 670:sieve_extend.c ****     }
 6658              		.loc 1 670 9 view .LVU2276
 6659              	# sieve_extend.c:670:         distance += 2;
 670:sieve_extend.c ****     }
 6660              		.loc 1 670 18 is_stmt 0 view .LVU2277
 6661 283b 4D8D5606 		lea	r10, 6[r14]	# distance,
 6662              	.LVL304:
 670:sieve_extend.c ****     }
 6663              		.loc 1 670 18 view .LVU2278
 6664              	.LBE375:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6665              		.loc 1 662 11 is_stmt 1 view .LVU2279
 6666 283f 763D     		jbe	.L518	#,
 6667              	.LBB376:
GAS LISTING /tmp/ccRwwoRx.s 			page 186


 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6668              		.loc 1 663 9 view .LVU2280
 6669              	# sieve_extend.c:663:         bitword_t source0 = bitstorage[source_word  ];
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6670              		.loc 1 663 39 is_stmt 0 view .LVU2281
 6671 2841 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 6671      00000000 
 6672              	.LVL305:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6673              		.loc 1 664 9 is_stmt 1 view .LVU2282
 6674              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6675              		.loc 1 664 19 is_stmt 0 view .LVU2283
 6676 2849 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
 6676      08
 6677              	.LVL306:
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6678              		.loc 1 665 9 is_stmt 1 view .LVU2284
 6679              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6680              		.loc 1 665 65 is_stmt 0 view .LVU2285
 6681 284e C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
 6681      C1
 6682              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6683              		.loc 1 665 44 view .LVU2286
 6684 2853 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 6685              	.LVL307:
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6686              		.loc 1 665 44 view .LVU2287
 6687 2857 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 6687      D1
 6688              	.LVL308:
 6689              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6690              		.loc 1 665 54 view .LVU2288
 6691 285c 4D09C2   		or	r10, r8	# tmp683, tmp682
 6692 285f 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6693              		.loc 1 666 9 is_stmt 1 view .LVU2289
 6694              	.LVL309:
 667:sieve_extend.c ****         copy_word += 2;
 6695              		.loc 1 667 9 view .LVU2290
 6696              	# sieve_extend.c:670:         distance += 2;
 670:sieve_extend.c ****     }
 6697              		.loc 1 670 18 is_stmt 0 view .LVU2291
 6698 2863 4D8D5608 		lea	r10, 8[r14]	# distance,
 6699              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6700              		.loc 1 667 65 view .LVU2292
 6701 2867 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 6701      10
 6702              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6703              		.loc 1 667 44 view .LVU2293
 6704 286c C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 6704      D9
GAS LISTING /tmp/ccRwwoRx.s 			page 187


 6705              	.LVL310:
 6706              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6707              		.loc 1 667 65 view .LVU2294
 6708 2871 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 6708      FE
 6709              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 6710              		.loc 1 667 54 view .LVU2295
 6711 2876 4909FB   		or	r11, rdi	# tmp687, tmp684
 6712 2879 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 6712      08
 668:sieve_extend.c ****         source_word += 2;
 6713              		.loc 1 668 9 is_stmt 1 view .LVU2296
 669:sieve_extend.c ****         distance += 2;
 6714              		.loc 1 669 9 view .LVU2297
 670:sieve_extend.c ****     }
 6715              		.loc 1 670 9 view .LVU2298
 6716              	.LVL311:
 670:sieve_extend.c ****     }
 6717              		.loc 1 670 9 is_stmt 0 view .LVU2299
 6718              	.LBE376:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6719              		.loc 1 662 11 is_stmt 1 view .LVU2300
 6720              	.L518:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6721              		.loc 1 662 11 is_stmt 0 view .LVU2301
 6722 287e 4D01D4   		add	r12, r10	# tmp.373, distance
 6723 2881 4D01D5   		add	r13, r10	# tmp.374, distance
 6724              	.LVL312:
 6725              	.L513:
 672:sieve_extend.c **** }
 6726              		.loc 1 672 5 is_stmt 1 view .LVU2302
 672:sieve_extend.c **** }
 6727              		.loc 1 672 5 is_stmt 0 view .LVU2303
 6728              	.LBE387:
 6729              	.LBE390:
 765:sieve_extend.c ****     copy_word += distance;
 6730              		.loc 1 765 5 is_stmt 1 view .LVU2304
 766:sieve_extend.c **** 
 6731              		.loc 1 766 5 view .LVU2305
 768:sieve_extend.c **** 
 6732              		.loc 1 768 6 view .LVU2306
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6733              		.loc 1 771 11 view .LVU2307
 6734              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6735              		.loc 1 771 5 is_stmt 0 view .LVU2308
 6736 2884 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 6736      50
 6737 2889 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.374
 6738 288c 0F82BE0A 		jb	.L535	#,
 6738      0000
 6739 2892 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 6739      00000000 
 6740 289a 498D4B01 		lea	rcx, 1[r11]	# tmp.361,
 6741 289e 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.368,
GAS LISTING /tmp/ccRwwoRx.s 			page 188


 6742 28a2 4989C8   		mov	r8, rcx	# niters.367, tmp.361
 6743 28a5 4889F8   		mov	rax, rdi	# tmp698, vectp.368
 6744 28a8 4D29EB   		sub	r11, r13	# tmp700, tmp.374
 6745 28ab 48C1E803 		shr	rax, 3	# tmp698,
 6746 28af 4D29E8   		sub	r8, r13	# niters.367, tmp.374
 6747 28b2 48F7D8   		neg	rax	# tmp699
 6748 28b5 41B90500 		mov	r9d, 5	# tmp702,
 6748      0000
 6749 28bb 83E003   		and	eax, 3	# prolog_loop_niters.369,
 6750 28be 488D7003 		lea	rsi, 3[rax]	# tmp701,
 6751 28c2 4883FE05 		cmp	rsi, 5	# tmp701,
 6752 28c6 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 6753 28ca 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 6754 28cd 0F823F03 		jb	.L520	#,
 6754      0000
 6755 28d3 4885C0   		test	rax, rax	# prolog_loop_niters.369
 6756 28d6 0F844408 		je	.L536	#,
 6756      0000
 6757              	.LVL313:
 772:sieve_extend.c ****     }
 6758              		.loc 1 772 9 is_stmt 1 view .LVU2309
 6759              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6760              		.loc 1 772 100 is_stmt 0 view .LVU2310
 6761 28dc 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 6761      08
 6762              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6763              		.loc 1 772 83 view .LVU2311
 6764 28e1 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6764      01
 6765              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6766              		.loc 1 772 60 view .LVU2312
 6767 28e6 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.368_27], MEM[(uint64_t *)vectp.368_27]
 6768              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6769              		.loc 1 772 100 view .LVU2313
 6770 28e9 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 6770      CB
 6771              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6772              		.loc 1 772 60 view .LVU2314
 6773 28ee C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.368_27], shift
 6773      F7
 6774              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6775              		.loc 1 772 70 view .LVU2315
 6776 28f3 4D09F1   		or	r9, r14	# tmp707, tmp705
 6777 28f6 4883F801 		cmp	rax, 1	# prolog_loop_niters.369,
 6778              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6779              		.loc 1 772 83 view .LVU2316
 6780 28fa 4989F2   		mov	r10, rsi	# source_word, tmp788
 6781              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6782              		.loc 1 772 70 view .LVU2317
GAS LISTING /tmp/ccRwwoRx.s 			page 189


 6783 28fd 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6784              		.loc 1 771 43 is_stmt 1 view .LVU2318
 6785              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6786              		.loc 1 771 52 is_stmt 0 view .LVU2319
 6787 2901 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 6788              	.LVL314:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6789              		.loc 1 771 11 is_stmt 1 view .LVU2320
 6790 2905 7456     		je	.L521	#,
 772:sieve_extend.c ****     }
 6791              		.loc 1 772 9 view .LVU2321
 6792              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6793              		.loc 1 772 44 is_stmt 0 view .LVU2322
 6794 2907 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 6794      00000000 
 6795              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6796              		.loc 1 772 100 view .LVU2323
 6797 290f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
 6797      4C1B08
 6798              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6799              		.loc 1 772 60 view .LVU2324
 6800 2916 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 6801 291a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 6801      DF
 6802              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6803              		.loc 1 772 70 view .LVU2325
 6804 291f 4D09D9   		or	r9, r11	# tmp712, tmp710
 6805 2922 4883F803 		cmp	rax, 3	# prolog_loop_niters.369,
 6806 2926 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6807              		.loc 1 771 43 is_stmt 1 view .LVU2326
 6808              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6809              		.loc 1 772 83 is_stmt 0 view .LVU2327
 6810 292a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 6810      02
 6811              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6812              		.loc 1 771 52 view .LVU2328
 6813 292f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 6814              	.LVL315:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6815              		.loc 1 771 11 is_stmt 1 view .LVU2329
 6816 2933 7528     		jne	.L521	#,
 772:sieve_extend.c ****     }
 6817              		.loc 1 772 9 view .LVU2330
 6818              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6819              		.loc 1 772 44 is_stmt 0 view .LVU2331
 6820 2935 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 6820      00000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 190


 6821              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6822              		.loc 1 772 100 view .LVU2332
 6823 293d C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 6823      7C0B08
 6824              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6825              		.loc 1 772 60 view .LVU2333
 6826 2944 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 6827 2948 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 6827      CB
 6828              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6829              		.loc 1 772 70 view .LVU2334
 6830 294d 4C09CF   		or	rdi, r9	# tmp717, tmp715
 6831              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6832              		.loc 1 772 83 view .LVU2335
 6833 2950 4D8D5424 		lea	r10, 3[r12]	# source_word,
 6833      03
 6834              	.LVL316:
 6835              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6836              		.loc 1 772 70 view .LVU2336
 6837 2955 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6838              		.loc 1 771 43 is_stmt 1 view .LVU2337
 6839              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6840              		.loc 1 771 52 is_stmt 0 view .LVU2338
 6841 2959 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 6842              	.LVL317:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6843              		.loc 1 771 11 is_stmt 1 view .LVU2339
 6844              	.L521:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6845              		.loc 1 771 11 is_stmt 0 view .LVU2340
 6846 295d 4929C0   		sub	r8, rax	# niters.370, prolog_loop_niters.369
 6847 2960 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.369
 6848 2963 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 6849 2967 4C01E8   		add	rax, r13	# tmp723, tmp.374
 6850 296a 4D89C5   		mov	r13, r8	# bnd.371, niters.370
 6851 296d 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.380,
 6852 2971 49C1ED02 		shr	r13, 2	# bnd.371,
 6853 2975 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.385,
 6854 2979 49C1E505 		sal	r13, 5	# _733,
 6855              	# sieve_extend.c:765:     source_word += distance;
 765:sieve_extend.c ****     copy_word += distance;
 6856              		.loc 1 765 17 view .LVU2341
 6857 297d 31C0     		xor	eax, eax	# ivtmp.426
 6858 297f 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 6859 2983 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.376,
 6860 2987 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 6860      2448
 6861 298d 48C1EE05 		shr	rsi, 5	# tmp797,
 6862 2991 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 6862      2440
GAS LISTING /tmp/ccRwwoRx.s 			page 191


 6863 2997 4883C601 		add	rsi, 1	# tmp800,
 6864 299b 83E607   		and	esi, 7	# tmp801,
 6865 299e 0F841201 		je	.L523	#,
 6865      0000
 6866 29a4 4883FE01 		cmp	rsi, 1	# tmp801,
 6867 29a8 0F84DB00 		je	.L616	#,
 6867      0000
 6868 29ae 4883FE02 		cmp	rsi, 2	# tmp801,
 6869 29b2 0F84AE00 		je	.L617	#,
 6869      0000
 6870 29b8 4883FE03 		cmp	rsi, 3	# tmp801,
 6871 29bc 0F848000 		je	.L618	#,
 6871      0000
 6872 29c2 4883FE04 		cmp	rsi, 4	# tmp801,
 6873 29c6 7456     		je	.L619	#,
 6874 29c8 4883FE05 		cmp	rsi, 5	# tmp801,
 6875 29cc 742D     		je	.L620	#,
 6876 29ce 4883FE06 		cmp	rsi, 6	# tmp801,
 6877 29d2 0F856807 		jne	.L688	#,
 6877      0000
 6878              	.L621:
 772:sieve_extend.c ****     }
 6879              		.loc 1 772 9 is_stmt 1 view .LVU2342
 6880              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6881              		.loc 1 772 60 is_stmt 0 view .LVU2343
 6882 29d8 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.376_257, index: ivtmp.426_731, off
 6882      2C03
 6883              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6884              		.loc 1 772 100 view .LVU2344
 6885 29de C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.380_264, index: ivtmp.426_731, off
 6885      07
 6886              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6887              		.loc 1 772 60 view .LVU2345
 6888 29e3 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.378, tmp1262, _12
 6888      F2
 6889              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6890              		.loc 1 772 100 view .LVU2346
 6891 29e8 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.382, tmp1263, _18
 6891      CB
 6892              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6893              		.loc 1 772 70 view .LVU2347
 6894 29ed C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.383, vect__38.378, vect__43.382
 6895              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6896              		.loc 1 772 31 view .LVU2348
 6897 29f1 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], v
 6897      0401
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6898              		.loc 1 771 43 is_stmt 1 view .LVU2349
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6899              		.loc 1 771 11 view .LVU2350
 6900 29f7 4883C020 		add	rax, 32	# ivtmp.426,
GAS LISTING /tmp/ccRwwoRx.s 			page 192


 6901              	.L620:
 772:sieve_extend.c ****     }
 6902              		.loc 1 772 9 view .LVU2351
 6903              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6904              		.loc 1 772 60 is_stmt 0 view .LVU2352
 6905 29fb C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.376_257, index: ivtmp.426_731, offs
 6905      0403
 6906              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6907              		.loc 1 772 100 view .LVU2353
 6908 2a01 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 6908      07
 6909              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6910              		.loc 1 772 60 view .LVU2354
 6911 2a06 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.378, tmp1264, _12
 6911      EA
 6912              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6913              		.loc 1 772 100 view .LVU2355
 6914 2a0b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.382, tmp1265, _18
 6914      FB
 6915              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6916              		.loc 1 772 70 view .LVU2356
 6917 2a10 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.383, vect__38.378, vect__43.382
 6918              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6919              		.loc 1 772 31 view .LVU2357
 6920 2a14 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], v
 6920      1C01
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6921              		.loc 1 771 43 is_stmt 1 view .LVU2358
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6922              		.loc 1 771 11 view .LVU2359
 6923 2a1a 4883C020 		add	rax, 32	# ivtmp.426,
 6924              	.L619:
 772:sieve_extend.c ****     }
 6925              		.loc 1 772 9 view .LVU2360
 6926              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6927              		.loc 1 772 60 is_stmt 0 view .LVU2361
 6928 2a1e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.376_257, index: ivtmp.426_731, offs
 6928      1403
 6929              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6930              		.loc 1 772 100 view .LVU2362
 6931 2a24 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 6931      07
 6932              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6933              		.loc 1 772 60 view .LVU2363
 6934 2a29 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.378, tmp1266, _12
 6934      F2
 6935              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 193


 6936              		.loc 1 772 100 view .LVU2364
 6937 2a2e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.382, tmp1267, _18
 6937      E3
 6938              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6939              		.loc 1 772 70 view .LVU2365
 6940 2a33 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.383, vect__38.378, vect__43.382
 6940      EC
 6941              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6942              		.loc 1 772 31 view .LVU2366
 6943 2a38 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], 
 6943      2C01
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6944              		.loc 1 771 43 is_stmt 1 view .LVU2367
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6945              		.loc 1 771 11 view .LVU2368
 6946 2a3e 4883C020 		add	rax, 32	# ivtmp.426,
 6947              	.L618:
 772:sieve_extend.c ****     }
 6948              		.loc 1 772 9 view .LVU2369
 6949              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6950              		.loc 1 772 60 is_stmt 0 view .LVU2370
 6951 2a42 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.376_257, index: ivtmp.426_731, off
 6951      3403
 6952              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6953              		.loc 1 772 100 view .LVU2371
 6954 2a48 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 6954      07
 6955              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6956              		.loc 1 772 60 view .LVU2372
 6957 2a4d C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.378, tmp1268, _12
 6957      FA
 6958              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6959              		.loc 1 772 100 view .LVU2373
 6960 2a52 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.382, tmp1269, _18
 6960      C3
 6961              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6962              		.loc 1 772 70 view .LVU2374
 6963 2a57 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.383, vect__38.378, vect__43.382
 6963      C0
 6964              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6965              		.loc 1 772 31 view .LVU2375
 6966 2a5c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], v
 6966      0401
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6967              		.loc 1 771 43 is_stmt 1 view .LVU2376
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6968              		.loc 1 771 11 view .LVU2377
 6969 2a62 4883C020 		add	rax, 32	# ivtmp.426,
 6970              	.L617:
GAS LISTING /tmp/ccRwwoRx.s 			page 194


 772:sieve_extend.c ****     }
 6971              		.loc 1 772 9 view .LVU2378
 6972              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6973              		.loc 1 772 60 is_stmt 0 view .LVU2379
 6974 2a66 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.376_257, index: ivtmp.426_731, offs
 6974      2C03
 6975              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6976              		.loc 1 772 100 view .LVU2380
 6977 2a6c C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 6977      07
 6978              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6979              		.loc 1 772 60 view .LVU2381
 6980 2a71 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.378, tmp1270, _12
 6980      CA
 6981              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6982              		.loc 1 772 100 view .LVU2382
 6983 2a76 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.382, tmp1271, _18
 6983      DB
 6984              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6985              		.loc 1 772 70 view .LVU2383
 6986 2a7b C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.383, vect__38.378, vect__43.382
 6987              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6988              		.loc 1 772 31 view .LVU2384
 6989 2a7f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], v
 6989      1401
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6990              		.loc 1 771 43 is_stmt 1 view .LVU2385
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6991              		.loc 1 771 11 view .LVU2386
 6992 2a85 4883C020 		add	rax, 32	# ivtmp.426,
 6993              	.L616:
 772:sieve_extend.c ****     }
 6994              		.loc 1 772 9 view .LVU2387
 6995              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6996              		.loc 1 772 60 is_stmt 0 view .LVU2388
 6997 2a89 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.376_257, index: ivtmp.426_731, offs
 6997      3403
 6998              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 6999              		.loc 1 772 100 view .LVU2389
 7000 2a8f C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 7000      07
 7001              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7002              		.loc 1 772 60 view .LVU2390
 7003 2a94 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.378, tmp1272, _12
 7003      E2
 7004              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7005              		.loc 1 772 100 view .LVU2391
GAS LISTING /tmp/ccRwwoRx.s 			page 195


 7006 2a99 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.382, tmp1273, _18
 7006      EB
 7007              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7008              		.loc 1 772 70 view .LVU2392
 7009 2a9e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.383, vect__38.378, vect__43.382
 7009      F5
 7010              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7011              		.loc 1 772 31 view .LVU2393
 7012 2aa3 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], 
 7012      3401
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7013              		.loc 1 771 43 is_stmt 1 view .LVU2394
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7014              		.loc 1 771 11 view .LVU2395
 7015 2aa9 4883C020 		add	rax, 32	# ivtmp.426,
 7016 2aad 4C39E8   		cmp	rax, r13	# ivtmp.426, _733
 7017 2ab0 0F844401 		je	.L664	#,
 7017      0000
 7018              	.L523:
 772:sieve_extend.c ****     }
 7019              		.loc 1 772 9 discriminator 2 view .LVU2396
 7020              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7021              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2397
 7022 2ab6 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.376_257, index: ivtmp.426_731, off
 7022      3C03
 7023              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7024              		.loc 1 772 100 discriminator 2 view .LVU2398
 7025 2abc C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.380_264, index: ivtmp.426_731, offs
 7025      07
 7026              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7027              		.loc 1 772 60 discriminator 2 view .LVU2399
 7028 2ac1 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.378, tmp1206, _12
 7028      CA
 7029              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7030              		.loc 1 772 100 discriminator 2 view .LVU2400
 7031 2ac6 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.382, tmp1207, _18
 7031      C3
 7032              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7033              		.loc 1 772 70 discriminator 2 view .LVU2401
 7034 2acb C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.383, vect__38.378, vect__43.382
 7035              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7036              		.loc 1 772 31 discriminator 2 view .LVU2402
 7037 2acf C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], v
 7037      2C01
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7038              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2403
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7039              		.loc 1 771 11 discriminator 2 view .LVU2404
 772:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 196


 7040              		.loc 1 772 9 discriminator 2 view .LVU2405
 7041              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7042              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2406
 7043 2ad5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.376_257, index: ivtmp.426_731, of
 7043      4C0320
 7044              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7045              		.loc 1 772 100 discriminator 2 view .LVU2407
 7046 2adc C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.380_264, index: ivtmp.426_731, of
 7046      0720
 7047              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7048              		.loc 1 772 60 discriminator 2 view .LVU2408
 7049 2ae2 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.378, tmp1208, _12
 7049      FA
 7050              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7051              		.loc 1 772 100 discriminator 2 view .LVU2409
 7052 2ae7 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.382, tmp1209, _18
 7052      D3
 7053              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7054              		.loc 1 772 70 discriminator 2 view .LVU2410
 7055 2aec C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.383, vect__38.378, vect__43.382
 7056              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7057              		.loc 1 772 31 discriminator 2 view .LVU2411
 7058 2af0 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B],
 7058      740120
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7059              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2412
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7060              		.loc 1 771 11 discriminator 2 view .LVU2413
 772:sieve_extend.c ****     }
 7061              		.loc 1 772 9 discriminator 2 view .LVU2414
 7062              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7063              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2415
 7064 2af7 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.376_257, index: ivtmp.426_731, o
 7064      640340
 7065              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7066              		.loc 1 772 100 discriminator 2 view .LVU2416
 7067 2afe C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.380_264, index: ivtmp.426_731, of
 7067      0740
 7068              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7069              		.loc 1 772 60 discriminator 2 view .LVU2417
 7070 2b04 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.378, tmp1210, _12
 7070      EA
 7071              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7072              		.loc 1 772 100 discriminator 2 view .LVU2418
 7073 2b09 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.382, tmp1211, _18
 7073      F3
 7074              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccRwwoRx.s 			page 197


 772:sieve_extend.c ****     }
 7075              		.loc 1 772 70 discriminator 2 view .LVU2419
 7076 2b0e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.383, vect__38.378, vect__43.382
 7076      FE
 7077              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7078              		.loc 1 772 31 discriminator 2 view .LVU2420
 7079 2b13 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B]
 7079      7C0140
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7080              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2421
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7081              		.loc 1 771 11 discriminator 2 view .LVU2422
 772:sieve_extend.c ****     }
 7082              		.loc 1 772 9 discriminator 2 view .LVU2423
 7083              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7084              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2424
 7085 2b1a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.376_257, index: ivtmp.426_731, of
 7085      4C0360
 7086              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7087              		.loc 1 772 100 discriminator 2 view .LVU2425
 7088 2b21 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.380_264, index: ivtmp.426_731, of
 7088      0760
 7089              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7090              		.loc 1 772 60 discriminator 2 view .LVU2426
 7091 2b27 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.378, tmp1212, _12
 7091      C2
 7092              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7093              		.loc 1 772 100 discriminator 2 view .LVU2427
 7094 2b2c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.382, tmp1213, _18
 7094      EB
 7095              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7096              		.loc 1 772 70 discriminator 2 view .LVU2428
 7097 2b31 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.383, vect__38.378, vect__43.382
 7098              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7099              		.loc 1 772 31 discriminator 2 view .LVU2429
 7100 2b35 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B],
 7100      4C0160
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7101              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2430
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7102              		.loc 1 771 11 discriminator 2 view .LVU2431
 772:sieve_extend.c ****     }
 7103              		.loc 1 772 9 discriminator 2 view .LVU2432
 7104              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7105              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2433
 7106 2b3c C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.376_257, index: ivtmp.426_731, o
 7106      BC038000 
 7106      0000
 7107              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccRwwoRx.s 			page 198


 772:sieve_extend.c ****     }
 7108              		.loc 1 772 100 discriminator 2 view .LVU2434
 7109 2b46 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.380_264, index: ivtmp.426_731, o
 7109      07800000 
 7109      00
 7110              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7111              		.loc 1 772 60 discriminator 2 view .LVU2435
 7112 2b4f C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.378, tmp1214, _12
 7112      D2
 7113              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7114              		.loc 1 772 100 discriminator 2 view .LVU2436
 7115 2b54 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.382, tmp1215, _18
 7115      F3
 7116              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7117              		.loc 1 772 70 discriminator 2 view .LVU2437
 7118 2b59 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.383, vect__38.378, vect__43.382
 7119              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7120              		.loc 1 772 31 discriminator 2 view .LVU2438
 7121 2b5d C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B
 7121      A4018000 
 7121      0000
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7122              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2439
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7123              		.loc 1 771 11 discriminator 2 view .LVU2440
 772:sieve_extend.c ****     }
 7124              		.loc 1 772 9 discriminator 2 view .LVU2441
 7125              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7126              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2442
 7127 2b67 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.376_257, index: ivtmp.426_731, 
 7127      AC03A000 
 7127      0000
 7128              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7129              		.loc 1 772 100 discriminator 2 view .LVU2443
 7130 2b71 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.380_264, index: ivtmp.426_731, o
 7130      07A00000 
 7130      00
 7131              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7132              		.loc 1 772 60 discriminator 2 view .LVU2444
 7133 2b7a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.378, tmp1216, _12
 7133      F2
 7134              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7135              		.loc 1 772 100 discriminator 2 view .LVU2445
 7136 2b7f C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.382, tmp1217, _18
 7136      FB
 7137              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7138              		.loc 1 772 70 discriminator 2 view .LVU2446
 7139 2b84 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.383, vect__38.378, vect__43.382
GAS LISTING /tmp/ccRwwoRx.s 			page 199


 7139      CF
 7140              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7141              		.loc 1 772 31 discriminator 2 view .LVU2447
 7142 2b89 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B]
 7142      8C01A000 
 7142      0000
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7143              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2448
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7144              		.loc 1 771 11 discriminator 2 view .LVU2449
 772:sieve_extend.c ****     }
 7145              		.loc 1 772 9 discriminator 2 view .LVU2450
 7146              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7147              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2451
 7148 2b93 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.376_257, index: ivtmp.426_731, o
 7148      8403C000 
 7148      0000
 7149              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7150              		.loc 1 772 100 discriminator 2 view .LVU2452
 7151 2b9d C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.380_264, index: ivtmp.426_731, o
 7151      07C00000 
 7151      00
 7152              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7153              		.loc 1 772 60 discriminator 2 view .LVU2453
 7154 2ba6 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.378, tmp1218, _12
 7154      C2
 7155              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7156              		.loc 1 772 100 discriminator 2 view .LVU2454
 7157 2bab C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.382, tmp1219, _18
 7157      CB
 7158              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7159              		.loc 1 772 70 discriminator 2 view .LVU2455
 7160 2bb0 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.383, vect__38.378, vect__43.382
 7160      F9
 7161              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7162              		.loc 1 772 31 discriminator 2 view .LVU2456
 7163 2bb5 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B]
 7163      BC01C000 
 7163      0000
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7164              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2457
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7165              		.loc 1 771 11 discriminator 2 view .LVU2458
 772:sieve_extend.c ****     }
 7166              		.loc 1 772 9 discriminator 2 view .LVU2459
 7167              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7168              		.loc 1 772 60 is_stmt 0 discriminator 2 view .LVU2460
 7169 2bbf C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.376_257, index: ivtmp.426_731, o
 7169      9403E000 
GAS LISTING /tmp/ccRwwoRx.s 			page 200


 7169      0000
 7170              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7171              		.loc 1 772 100 discriminator 2 view .LVU2461
 7172 2bc9 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.380_264, index: ivtmp.426_731, o
 7172      07E00000 
 7172      00
 7173              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7174              		.loc 1 772 60 discriminator 2 view .LVU2462
 7175 2bd2 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.378, tmp1220, _12
 7175      F2
 7176              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7177              		.loc 1 772 100 discriminator 2 view .LVU2463
 7178 2bd7 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.382, tmp1221, _18
 7178      E3
 7179              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7180              		.loc 1 772 70 discriminator 2 view .LVU2464
 7181 2bdc C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.383, vect__38.378, vect__43.382
 7181      EC
 7182              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7183              		.loc 1 772 31 discriminator 2 view .LVU2465
 7184 2be1 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B
 7184      AC01E000 
 7184      0000
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7185              		.loc 1 771 43 is_stmt 1 discriminator 2 view .LVU2466
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7186              		.loc 1 771 11 discriminator 2 view .LVU2467
 7187 2beb 48050001 		add	rax, 256	# ivtmp.426,
 7187      0000
 7188 2bf1 4C39E8   		cmp	rax, r13	# ivtmp.426, _733
 7189 2bf4 0F85BCFE 		jne	.L523	#,
 7189      FFFF
 7190              	.L664:
 7191 2bfa 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.372, niters.370
 7192 2bfd 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.372,
 7193 2c01 4D39D8   		cmp	r8, r11	# niters.370, niters_vector_mult_vf.372
 7194 2c04 4F8D241A 		lea	r12, [r10+r11]	# tmp.373,
 7195 2c08 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.374,
 7196 2c0c 0F84DA00 		je	.L519	#,
 7196      0000
 7197              	.L520:
 7198              	.LVL318:
 772:sieve_extend.c ****     }
 7199              		.loc 1 772 9 view .LVU2468
 7200              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7201              		.loc 1 771 5 is_stmt 0 view .LVU2469
 7202 2c12 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 7202      50
 7203              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7204              		.loc 1 771 52 view .LVU2470
GAS LISTING /tmp/ccRwwoRx.s 			page 201


 7205 2c17 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 7206              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7207              		.loc 1 772 100 view .LVU2471
 7208 2c1b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 7208      44E308
 7209              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7210              		.loc 1 772 60 view .LVU2472
 7211 2c22 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 7211      34E3
 7212              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7213              		.loc 1 772 70 view .LVU2473
 7214 2c28 4D09F0   		or	r8, r14	# tmp737, tmp735
 7215              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7216              		.loc 1 772 83 view .LVU2474
 7217 2c2b 4D8D5424 		lea	r10, 1[r12]	# _519,
 7217      01
 7218              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7219              		.loc 1 772 70 view .LVU2475
 7220 2c30 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7221              		.loc 1 771 43 is_stmt 1 view .LVU2476
 7222              	.LVL319:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7223              		.loc 1 771 11 view .LVU2477
 7224              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7225              		.loc 1 771 5 is_stmt 0 view .LVU2478
 7226 2c34 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
 7227 2c37 0F82AF00 		jb	.L519	#,
 7227      0000
 772:sieve_extend.c ****     }
 7228              		.loc 1 772 9 is_stmt 1 view .LVU2479
 7229              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7230              		.loc 1 772 60 is_stmt 0 view .LVU2480
 7231 2c3d 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 7232              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7233              		.loc 1 772 100 view .LVU2481
 7234 2c41 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 7234      74D308
 7235              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7236              		.loc 1 771 52 view .LVU2482
 7237 2c48 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 7238              	.LVL320:
 7239              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7240              		.loc 1 772 60 view .LVU2483
 7241 2c4c C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 7241      C7
 7242              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccRwwoRx.s 			page 202


 772:sieve_extend.c ****     }
 7243              		.loc 1 772 70 view .LVU2484
 7244 2c51 4809C6   		or	rsi, rax	# tmp742, tmp740
 7245              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7246              		.loc 1 771 5 view .LVU2485
 7247 2c54 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7248              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7249              		.loc 1 772 70 view .LVU2486
 7250 2c57 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7251              		.loc 1 771 43 is_stmt 1 view .LVU2487
 7252              	.LVL321:
 7253              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7254              		.loc 1 772 83 is_stmt 0 view .LVU2488
 7255 2c5b 4D8D4424 		lea	r8, 2[r12]	# _536,
 7255      02
 7256              	.LVL322:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7257              		.loc 1 771 11 is_stmt 1 view .LVU2489
 7258              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7259              		.loc 1 771 5 is_stmt 0 view .LVU2490
 7260 2c60 0F828600 		jb	.L519	#,
 7260      0000
 772:sieve_extend.c ****     }
 7261              		.loc 1 772 9 is_stmt 1 view .LVU2491
 7262              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7263              		.loc 1 772 100 is_stmt 0 view .LVU2492
 7264 2c66 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
 7264      4CC308
 7265              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7266              		.loc 1 772 60 view .LVU2493
 7267 2c6d 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 7268              	.LVL323:
 772:sieve_extend.c ****     }
 7269              		.loc 1 772 60 view .LVU2494
 7270 2c71 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 7270      F0
 7271              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7272              		.loc 1 772 70 view .LVU2495
 7273 2c76 4909F1   		or	r9, rsi	# tmp747, tmp745
 7274 2c79 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7275              		.loc 1 771 43 is_stmt 1 view .LVU2496
 7276              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7277              		.loc 1 771 52 is_stmt 0 view .LVU2497
 7278 2c7d 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 7279              	.LVL324:
 7280              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccRwwoRx.s 			page 203


 7281              		.loc 1 771 5 view .LVU2498
 7282 2c81 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7283              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7284              		.loc 1 772 83 view .LVU2499
 7285 2c84 4D8D7424 		lea	r14, 3[r12]	# _553,
 7285      03
 7286              	.LVL325:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7287              		.loc 1 771 11 is_stmt 1 view .LVU2500
 7288              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7289              		.loc 1 771 5 is_stmt 0 view .LVU2501
 7290 2c89 7261     		jb	.L519	#,
 772:sieve_extend.c ****     }
 7291              		.loc 1 772 9 is_stmt 1 view .LVU2502
 7292              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7293              		.loc 1 772 100 is_stmt 0 view .LVU2503
 7294 2c8b C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 7294      44F308
 7295              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7296              		.loc 1 772 60 view .LVU2504
 7297 2c92 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 7298 2c96 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 7298      F7
 7299              	.LVL326:
 7300              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7301              		.loc 1 772 70 view .LVU2505
 7302 2c9b 4C09F0   		or	rax, r14	# tmp752, tmp750
 7303 2c9e 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7304              		.loc 1 771 43 is_stmt 1 view .LVU2506
 7305              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7306              		.loc 1 771 52 is_stmt 0 view .LVU2507
 7307 2ca2 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 7308              	.LVL327:
 7309              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7310              		.loc 1 771 5 view .LVU2508
 7311 2ca6 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7312              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7313              		.loc 1 772 83 view .LVU2509
 7314 2ca9 4D8D4C24 		lea	r9, 4[r12]	# _570,
 7314      04
 7315              	.LVL328:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7316              		.loc 1 771 11 is_stmt 1 view .LVU2510
 7317              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7318              		.loc 1 771 5 is_stmt 0 view .LVU2511
 7319 2cae 723C     		jb	.L519	#,
 772:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 204


 7320              		.loc 1 772 9 is_stmt 1 view .LVU2512
 7321              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7322              		.loc 1 771 52 is_stmt 0 view .LVU2513
 7323 2cb0 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 7324              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7325              		.loc 1 772 100 view .LVU2514
 7326 2cb4 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 7326      44CB08
 7327              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7328              		.loc 1 772 60 view .LVU2515
 7329 2cbb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
 7330 2cbf C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 7330      CE
 7331              	.LVL329:
 7332              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7333              		.loc 1 772 70 view .LVU2516
 7334 2cc4 4D09C8   		or	r8, r9	# tmp757, tmp755
 7335              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7336              		.loc 1 771 5 view .LVU2517
 7337 2cc7 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 7338              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7339              		.loc 1 772 70 view .LVU2518
 7340 2cca 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7341              		.loc 1 771 43 is_stmt 1 view .LVU2519
 7342              	.LVL330:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7343              		.loc 1 771 11 view .LVU2520
 7344              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7345              		.loc 1 772 83 is_stmt 0 view .LVU2521
 7346 2cce 4D8D6424 		lea	r12, 5[r12]	# _587,
 7346      05
 7347              	.LVL331:
 7348              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7349              		.loc 1 771 5 view .LVU2522
 7350 2cd3 7217     		jb	.L519	#,
 772:sieve_extend.c ****     }
 7351              		.loc 1 772 9 is_stmt 1 view .LVU2523
 7352              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7353              		.loc 1 772 60 is_stmt 0 view .LVU2524
 7354 2cd5 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 7355              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7356              		.loc 1 772 100 view .LVU2525
 7357 2cd9 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 7357      54E308
 7358              	.LVL332:
 7359              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
GAS LISTING /tmp/ccRwwoRx.s 			page 205


 772:sieve_extend.c ****     }
 7360              		.loc 1 772 60 view .LVU2526
 7361 2ce0 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 7361      FB
 7362              	.LVL333:
 7363              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 7364              		.loc 1 772 70 view .LVU2527
 7365 2ce5 4C09FA   		or	rdx, r15	# tmp762, tmp760
 7366 2ce8 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7367              		.loc 1 771 43 is_stmt 1 view .LVU2528
 7368              	.LVL334:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7369              		.loc 1 771 11 view .LVU2529
 7370              	.L519:
 775:sieve_extend.c **** 
 7371              		.loc 1 775 5 view .LVU2530
 7372              	# sieve_extend.c:775:     if (copy_word >= destination_stop_word) return;
 775:sieve_extend.c **** 
 7373              		.loc 1 775 8 is_stmt 0 view .LVU2531
 7374 2cec 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7374      58
 7375 2cf1 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.361
 7376 2cf4 0F860E04 		jbe	.L685	#,
 7376      0000
 777:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7377              		.loc 1 777 5 is_stmt 1 view .LVU2532
 7378              	# sieve_extend.c:777:     source_word = copy_word - size; // recalibrate
 777:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7379              		.loc 1 777 17 is_stmt 0 view .LVU2533
 7380 2cfa 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 7380      18
 7381 2cff 4989CC   		mov	r12, rcx	# tmp.360, tmp.361
 7382              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7383              		.loc 1 781 21 view .LVU2534
 7384 2d02 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.421,
 7385              	# sieve_extend.c:777:     source_word = copy_word - size; // recalibrate
 777:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7386              		.loc 1 777 17 view .LVU2535
 7387 2d06 4929FC   		sub	r12, rdi	# tmp.360, size
 7388              	.LVL335:
 778:sieve_extend.c **** 
 7389              		.loc 1 778 5 is_stmt 1 view .LVU2536
 7390              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7391              		.loc 1 781 5 is_stmt 0 view .LVU2537
 7392 2d09 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.421
 7393              	# sieve_extend.c:778:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 778:sieve_extend.c **** 
 7394              		.loc 1 778 18 view .LVU2538
 7395 2d0c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 7395      00000000 
 7396              	.LVL336:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7397              		.loc 1 781 11 is_stmt 1 view .LVU2539
GAS LISTING /tmp/ccRwwoRx.s 			page 206


 7398              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7399              		.loc 1 781 5 is_stmt 0 view .LVU2540
 7400 2d14 0F826B01 		jb	.L526	#,
 7400      0000
 7401 2d1a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 7402 2d1e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 7402      00000000 
 7403              	.LVL337:
 7404              	# sieve_extend.c:782:         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 782:sieve_extend.c **** 
 7405              		.loc 1 782 40 view .LVU2541
 7406 2d26 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 7407 2d2a 4929CD   		sub	r13, rcx	# _437, tmp766
 7408 2d2d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.360
 7408      48
 7409 2d32 4989FC   		mov	r12, rdi	# size, size
 7410              	.LVL338:
 782:sieve_extend.c **** 
 7411              		.loc 1 782 40 view .LVU2542
 7412 2d35 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitstorage
 7412      40
 7413 2d3a 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 7414              	.LVL339:
 782:sieve_extend.c **** 
 7415              		.loc 1 782 40 view .LVU2543
 7416 2d3d C5F877   		vzeroupper
 7417              	.LVL340:
 7418              	.L527:
 782:sieve_extend.c **** 
 7419              		.loc 1 782 9 is_stmt 1 discriminator 2 view .LVU2544
 7420              	.LBB391:
 7421              	.LBI391:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7422              		.loc 2 31 1 discriminator 2 view .LVU2545
 7423              	.LBB392:
 7424              		.loc 2 34 3 discriminator 2 view .LVU2546
 7425              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7426              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2547
 7427 2d40 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 7427      00
 7428 2d45 4C89F2   		mov	rdx, r14	#, memsize
 7429 2d48 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.421
 7429      50
 7430 2d4d 4C89FE   		mov	rsi, r15	#, _48
 7431 2d50 E8000000 		call	memcpy@PLT	#
 7431      00
 7432              	.LVL341:
 7433              		.loc 2 34 10 discriminator 2 view .LVU2548
 7434              	.LBE392:
 7435              	.LBE391:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7436              		.loc 1 781 54 is_stmt 1 discriminator 2 view .LVU2549
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7437              		.loc 1 781 11 discriminator 2 view .LVU2550
 7438 2d55 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7438      50
GAS LISTING /tmp/ccRwwoRx.s 			page 207


 7439 2d5a 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.421,
 7440              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7441              		.loc 1 781 5 is_stmt 0 discriminator 2 view .LVU2551
 7442 2d5e 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.421
 7443 2d61 0F820901 		jb	.L673	#,
 7443      0000
 782:sieve_extend.c **** 
 7444              		.loc 1 782 9 is_stmt 1 view .LVU2552
 7445              	.LVL342:
 7446              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7447              		.loc 2 31 1 view .LVU2553
 7448              	.LBB393:
 7449              		.loc 2 34 3 view .LVU2554
 7450              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7451              		.loc 2 34 10 is_stmt 0 view .LVU2555
 7452 2d67 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 7452      00
 7453 2d6c 4C89F2   		mov	rdx, r14	#, memsize
 7454 2d6f 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.421
 7454      50
 7455              	.LVL343:
 7456              		.loc 2 34 10 view .LVU2556
 7457 2d74 4C89FE   		mov	rsi, r15	#, _48
 7458 2d77 E8000000 		call	memcpy@PLT	#
 7458      00
 7459              	.LVL344:
 7460              		.loc 2 34 10 view .LVU2557
 7461              	.LBE393:
 7462              	.LBE400:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7463              		.loc 1 781 54 is_stmt 1 view .LVU2558
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7464              		.loc 1 781 11 view .LVU2559
 7465 2d7c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7465      50
 7466 2d81 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.421,
 7467              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7468              		.loc 1 781 5 is_stmt 0 view .LVU2560
 7469 2d85 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.421
 7470 2d88 0F82E200 		jb	.L673	#,
 7470      0000
 782:sieve_extend.c **** 
 7471              		.loc 1 782 9 is_stmt 1 view .LVU2561
 7472              	.LVL345:
 7473              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7474              		.loc 2 31 1 view .LVU2562
 7475              	.LBB394:
 7476              		.loc 2 34 3 view .LVU2563
 7477              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7478              		.loc 2 34 10 is_stmt 0 view .LVU2564
 7479 2d8e 4C89FE   		mov	rsi, r15	#, _48
 7480 2d91 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 7480      00
GAS LISTING /tmp/ccRwwoRx.s 			page 208


 7481 2d96 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.421
 7481      50
 7482 2d9b 4C89F2   		mov	rdx, r14	#, memsize
 7483 2d9e E8000000 		call	memcpy@PLT	#
 7483      00
 7484              	.LVL346:
 7485              		.loc 2 34 10 view .LVU2565
 7486              	.LBE394:
 7487              	.LBE401:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7488              		.loc 1 781 54 is_stmt 1 view .LVU2566
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7489              		.loc 1 781 11 view .LVU2567
 7490 2da3 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7490      50
 7491 2da8 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.421,
 7492              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7493              		.loc 1 781 5 is_stmt 0 view .LVU2568
 7494 2dac 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.421
 7495 2daf 0F82BB00 		jb	.L673	#,
 7495      0000
 782:sieve_extend.c **** 
 7496              		.loc 1 782 9 is_stmt 1 view .LVU2569
 7497              	.LVL347:
 7498              	.LBB402:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7499              		.loc 2 31 1 view .LVU2570
 7500              	.LBB395:
 7501              		.loc 2 34 3 view .LVU2571
 7502              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7503              		.loc 2 34 10 is_stmt 0 view .LVU2572
 7504 2db5 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
 7504      00
 7505 2dba 4C89F2   		mov	rdx, r14	#, memsize
 7506 2dbd 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.421
 7506      50
 7507 2dc2 4C89FE   		mov	rsi, r15	#, _48
 7508 2dc5 E8000000 		call	memcpy@PLT	#
 7508      00
 7509              	.LVL348:
 7510              		.loc 2 34 10 view .LVU2573
 7511              	.LBE395:
 7512              	.LBE402:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7513              		.loc 1 781 54 is_stmt 1 view .LVU2574
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7514              		.loc 1 781 11 view .LVU2575
 7515 2dca 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7515      50
 7516 2dcf 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.421,
 7517              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7518              		.loc 1 781 5 is_stmt 0 view .LVU2576
 7519 2dd3 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.421
 7520 2dd6 0F829400 		jb	.L673	#,
 7520      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 209


 782:sieve_extend.c **** 
 7521              		.loc 1 782 9 is_stmt 1 view .LVU2577
 7522              	.LVL349:
 7523              	.LBB403:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7524              		.loc 2 31 1 view .LVU2578
 7525              	.LBB396:
 7526              		.loc 2 34 3 view .LVU2579
 7527              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7528              		.loc 2 34 10 is_stmt 0 view .LVU2580
 7529 2ddc 4C89F2   		mov	rdx, r14	#, memsize
 7530 2ddf 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 7530      00
 7531 2de4 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.421
 7531      50
 7532 2de9 4C89FE   		mov	rsi, r15	#, _48
 7533 2dec E8000000 		call	memcpy@PLT	#
 7533      00
 7534              	.LVL350:
 7535              		.loc 2 34 10 view .LVU2581
 7536              	.LBE396:
 7537              	.LBE403:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7538              		.loc 1 781 54 is_stmt 1 view .LVU2582
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7539              		.loc 1 781 11 view .LVU2583
 7540 2df1 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7540      50
 7541 2df6 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.421,
 7542              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7543              		.loc 1 781 5 is_stmt 0 view .LVU2584
 7544 2dfa 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.421
 7545 2dfd 7271     		jb	.L673	#,
 782:sieve_extend.c **** 
 7546              		.loc 1 782 9 is_stmt 1 view .LVU2585
 7547              	.LVL351:
 7548              	.LBB404:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7549              		.loc 2 31 1 view .LVU2586
 7550              	.LBB397:
 7551              		.loc 2 34 3 view .LVU2587
 7552              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7553              		.loc 2 34 10 is_stmt 0 view .LVU2588
 7554 2dff 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 7554      00
 7555 2e04 4C89FE   		mov	rsi, r15	#, _48
 7556 2e07 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.421
 7556      50
 7557 2e0c 4C89F2   		mov	rdx, r14	#, memsize
 7558 2e0f E8000000 		call	memcpy@PLT	#
 7558      00
 7559              	.LVL352:
 7560              		.loc 2 34 10 view .LVU2589
 7561              	.LBE397:
 7562              	.LBE404:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
GAS LISTING /tmp/ccRwwoRx.s 			page 210


 7563              		.loc 1 781 54 is_stmt 1 view .LVU2590
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7564              		.loc 1 781 11 view .LVU2591
 7565 2e14 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7565      50
 7566 2e19 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.421,
 7567              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7568              		.loc 1 781 5 is_stmt 0 view .LVU2592
 7569 2e1d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.421
 7570 2e20 724E     		jb	.L673	#,
 782:sieve_extend.c **** 
 7571              		.loc 1 782 9 is_stmt 1 view .LVU2593
 7572              	.LVL353:
 7573              	.LBB405:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7574              		.loc 2 31 1 view .LVU2594
 7575              	.LBB398:
 7576              		.loc 2 34 3 view .LVU2595
 7577              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7578              		.loc 2 34 10 is_stmt 0 view .LVU2596
 7579 2e22 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
 7579      00
 7580 2e27 4C89F2   		mov	rdx, r14	#, memsize
 7581 2e2a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.421
 7581      50
 7582 2e2f 4C89FE   		mov	rsi, r15	#, _48
 7583 2e32 E8000000 		call	memcpy@PLT	#
 7583      00
 7584              	.LVL354:
 7585              		.loc 2 34 10 view .LVU2597
 7586              	.LBE398:
 7587              	.LBE405:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7588              		.loc 1 781 54 is_stmt 1 view .LVU2598
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7589              		.loc 1 781 11 view .LVU2599
 7590 2e37 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7590      50
 7591 2e3c 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.421,
 7592              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7593              		.loc 1 781 5 is_stmt 0 view .LVU2600
 7594 2e40 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.421
 7595 2e43 722B     		jb	.L673	#,
 782:sieve_extend.c **** 
 7596              		.loc 1 782 9 is_stmt 1 view .LVU2601
 7597              	.LVL355:
 7598              	.LBB406:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7599              		.loc 2 31 1 view .LVU2602
 7600              	.LBB399:
 7601              		.loc 2 34 3 view .LVU2603
 7602              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7603              		.loc 2 34 10 is_stmt 0 view .LVU2604
 7604 2e45 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 7604      00
GAS LISTING /tmp/ccRwwoRx.s 			page 211


 7605 2e4a 4C89F2   		mov	rdx, r14	#, memsize
 7606 2e4d 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.421
 7606      50
 7607 2e52 4C89FE   		mov	rsi, r15	#, _48
 7608 2e55 E8000000 		call	memcpy@PLT	#
 7608      00
 7609              	.LVL356:
 7610              		.loc 2 34 10 view .LVU2605
 7611              	.LBE399:
 7612              	.LBE406:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7613              		.loc 1 781 54 is_stmt 1 view .LVU2606
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7614              		.loc 1 781 11 view .LVU2607
 7615 2e5a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.421, %sfp
 7615      50
 7616              	.LVL357:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7617              		.loc 1 781 11 is_stmt 0 view .LVU2608
 7618 2e5f 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.421,
 7619              	.LVL358:
 7620              	# sieve_extend.c:781:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7621              		.loc 1 781 5 view .LVU2609
 7622 2e63 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.421
 7623 2e66 0F83D4FE 		jnb	.L527	#,
 7623      FFFF
 7624              	.LVL359:
 7625 2e6c 0F1F4000 		.p2align 4
 7626              		.p2align 3
 7627              	.L673:
 781:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7628              		.loc 1 781 5 view .LVU2610
 7629 2e70 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.360, %sfp
 7629      48
 7630              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7631              		.loc 1 785 5 view .LVU2611
 7632 2e75 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.361
 7632      58
 7633 2e7a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitstorage, %sfp
 7633      40
 7634              	.LVL360:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7635              		.loc 1 785 11 is_stmt 1 view .LVU2612
 7636              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7637              		.loc 1 785 5 is_stmt 0 view .LVU2613
 7638 2e7f 0F827402 		jb	.L686	#,
 7638      0000
 7639              	.LVL361:
 7640              	.L526:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7641              		.loc 1 785 5 view .LVU2614
 7642 2e85 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.355,
 7643 2e89 41B80500 		mov	r8d, 5	# tmp778,
 7643      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 212


 7644 2e8f 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7644      58
 7645              	.LVL362:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7646              		.loc 1 785 5 view .LVU2615
 7647 2e94 4989FD   		mov	r13, rdi	# tmp775, vectp.355
 7648 2e97 49C1ED03 		shr	r13, 3	# tmp775,
 7649 2e9b 49F7DD   		neg	r13	# tmp776
 7650 2e9e 4183E503 		and	r13d, 3	# prolog_loop_niters.356,
 7651 2ea2 4D8D7E01 		lea	r15, 1[r14]	# _49,
 7652 2ea6 498D7503 		lea	rsi, 3[r13]	# tmp777,
 7653 2eaa 4883FE05 		cmp	rsi, 5	# tmp777,
 7654 2eae 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 7655 2eb2 4929CE   		sub	r14, rcx	# tmp779, tmp.361
 7656 2eb5 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 7657 2eb8 0F87BA01 		ja	.L529	#,
 7657      0000
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7658              		.loc 1 785 5 view .LVU2616
 7659 2ebe 4D85ED   		test	r13, r13	# prolog_loop_niters.356
 7660 2ec1 0F846902 		je	.L537	#,
 7660      0000
 786:sieve_extend.c **** 
 7661              		.loc 1 786 9 is_stmt 1 view .LVU2617
 7662              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7663              		.loc 1 786 43 is_stmt 0 view .LVU2618
 7664 2ec7 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.355_198]
 7665 2eca 4983FD01 		cmp	r13, 1	# prolog_loop_niters.356,
 7666              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7667              		.loc 1 785 57 view .LVU2619
 7668 2ece 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
 7669              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7670              		.loc 1 785 71 view .LVU2620
 7671 2ed2 4D8D7424 		lea	r14, 1[r12]	# source_word,
 7671      01
 7672              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7673              		.loc 1 786 31 view .LVU2621
 7674 2ed7 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7675              		.loc 1 785 48 is_stmt 1 view .LVU2622
 7676              	.LVL363:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7677              		.loc 1 785 11 view .LVU2623
 7678 2edb 7428     		je	.L530	#,
 786:sieve_extend.c **** 
 7679              		.loc 1 786 9 view .LVU2624
 7680              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7681              		.loc 1 786 43 is_stmt 0 view .LVU2625
 7682 2edd 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 7683 2ee1 4983FD03 		cmp	r13, 3	# prolog_loop_niters.356,
 7684              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccRwwoRx.s 			page 213


 7685              		.loc 1 785 71 view .LVU2626
 7686 2ee5 4D8D7424 		lea	r14, 2[r12]	# source_word,
 7686      02
 7687              	.LVL364:
 7688              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7689              		.loc 1 786 31 view .LVU2627
 7690 2eea 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7691              		.loc 1 785 48 is_stmt 1 view .LVU2628
 7692              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7693              		.loc 1 785 57 is_stmt 0 view .LVU2629
 7694 2eee 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
 7695              	.LVL365:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7696              		.loc 1 785 11 is_stmt 1 view .LVU2630
 7697 2ef2 7511     		jne	.L530	#,
 786:sieve_extend.c **** 
 7698              		.loc 1 786 9 view .LVU2631
 7699              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7700              		.loc 1 786 43 is_stmt 0 view .LVU2632
 7701 2ef4 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
 7702              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7703              		.loc 1 785 71 view .LVU2633
 7704 2ef8 4D8D7424 		lea	r14, 3[r12]	# source_word,
 7704      03
 7705              	.LVL366:
 7706              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7707              		.loc 1 786 31 view .LVU2634
 7708 2efd 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7709              		.loc 1 785 48 is_stmt 1 view .LVU2635
 7710              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7711              		.loc 1 785 57 is_stmt 0 view .LVU2636
 7712 2f01 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 7713              	.LVL367:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7714              		.loc 1 785 11 is_stmt 1 view .LVU2637
 7715              	.L530:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7716              		.loc 1 785 11 is_stmt 0 view .LVU2638
 7717 2f05 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.356
 7718 2f08 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.356
 7719 2f0b 4929CF   		sub	r15, rcx	# niters.357, tmp.361
 7720 2f0e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.356
 7721 2f11 4C89FF   		mov	rdi, r15	# bnd.358, niters.357
 7722              	# sieve_extend.c:777:     source_word = copy_word - size; // recalibrate
 777:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7723              		.loc 1 777 17 view .LVU2639
 7724 2f14 31F6     		xor	esi, esi	# ivtmp.413
 7725 2f16 48C1EF02 		shr	rdi, 2	# bnd.358,
 7726 2f1a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.363,
GAS LISTING /tmp/ccRwwoRx.s 			page 214


 7727 2f1e 48C1E705 		sal	rdi, 5	# _635,
 7728 2f22 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.366,
 7729 2f26 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 7730 2f2a 49C1ED05 		shr	r13, 5	# tmp791,
 7731 2f2e 4983C501 		add	r13, 1	# tmp794,
 7732 2f32 4183E507 		and	r13d, 7	# tmp795,
 7733 2f36 0F849600 		je	.L532	#,
 7733      0000
 7734 2f3c 4983FD01 		cmp	r13, 1	# tmp795,
 7735 2f40 7478     		je	.L623	#,
 7736 2f42 4983FD02 		cmp	r13, 2	# tmp795,
 7737 2f46 7463     		je	.L624	#,
 7738 2f48 4983FD03 		cmp	r13, 3	# tmp795,
 7739 2f4c 744E     		je	.L625	#,
 7740 2f4e 4983FD04 		cmp	r13, 4	# tmp795,
 7741 2f52 7439     		je	.L626	#,
 7742 2f54 4983FD05 		cmp	r13, 5	# tmp795,
 7743 2f58 7424     		je	.L627	#,
 7744 2f5a 4983FD06 		cmp	r13, 6	# tmp795,
 7745 2f5e 740F     		je	.L628	#,
 7746              	.LVL368:
 786:sieve_extend.c **** 
 7747              		.loc 1 786 9 is_stmt 1 view .LVU2640
 7748              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7749              		.loc 1 786 31 is_stmt 0 view .LVU2641
 7750 2f60 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.363_120, index: ivtmp.413_513, offset:
 7750      1424
 7751 2f66 BE200000 		mov	esi, 32	# ivtmp.413,
 7751      00
 7752 2f6b C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], tmp1
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7753              		.loc 1 785 48 is_stmt 1 view .LVU2642
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7754              		.loc 1 785 11 view .LVU2643
 7755              	.L628:
 786:sieve_extend.c **** 
 7756              		.loc 1 786 9 view .LVU2644
 7757              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7758              		.loc 1 786 31 is_stmt 0 view .LVU2645
 7759 2f6f C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.363_120, index: ivtmp.413_513, off
 7759      1C34
 7760 2f75 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], 
 7760      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7761              		.loc 1 785 48 is_stmt 1 view .LVU2646
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7762              		.loc 1 785 11 view .LVU2647
 7763 2f7a 4883C620 		add	rsi, 32	# ivtmp.413,
 7764              	.L627:
 786:sieve_extend.c **** 
 7765              		.loc 1 786 9 view .LVU2648
 7766              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7767              		.loc 1 786 31 is_stmt 0 view .LVU2649
 7768 2f7e C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.363_120, index: ivtmp.413_513, off
GAS LISTING /tmp/ccRwwoRx.s 			page 215


 7768      3434
 7769 2f84 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], 
 7769      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7770              		.loc 1 785 48 is_stmt 1 view .LVU2650
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7771              		.loc 1 785 11 view .LVU2651
 7772 2f89 4883C620 		add	rsi, 32	# ivtmp.413,
 7773              	.L626:
 786:sieve_extend.c **** 
 7774              		.loc 1 786 9 view .LVU2652
 7775              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7776              		.loc 1 786 31 is_stmt 0 view .LVU2653
 7777 2f8d C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.363_120, index: ivtmp.413_513, offs
 7777      2434
 7778 2f93 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], t
 7778      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7779              		.loc 1 785 48 is_stmt 1 view .LVU2654
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7780              		.loc 1 785 11 view .LVU2655
 7781 2f98 4883C620 		add	rsi, 32	# ivtmp.413,
 7782              	.L625:
 786:sieve_extend.c **** 
 7783              		.loc 1 786 9 view .LVU2656
 7784              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7785              		.loc 1 786 31 is_stmt 0 view .LVU2657
 7786 2f9c C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.363_120, index: ivtmp.413_513, off
 7786      3C34
 7787 2fa2 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], 
 7787      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7788              		.loc 1 785 48 is_stmt 1 view .LVU2658
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7789              		.loc 1 785 11 view .LVU2659
 7790 2fa7 4883C620 		add	rsi, 32	# ivtmp.413,
 7791              	.L624:
 786:sieve_extend.c **** 
 7792              		.loc 1 786 9 view .LVU2660
 7793              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7794              		.loc 1 786 31 is_stmt 0 view .LVU2661
 7795 2fab C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.363_120, index: ivtmp.413_513, offs
 7795      0C34
 7796 2fb1 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], t
 7796      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7797              		.loc 1 785 48 is_stmt 1 view .LVU2662
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7798              		.loc 1 785 11 view .LVU2663
 7799 2fb6 4883C620 		add	rsi, 32	# ivtmp.413,
 7800              	.L623:
 786:sieve_extend.c **** 
 7801              		.loc 1 786 9 view .LVU2664
 7802              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccRwwoRx.s 			page 216


 786:sieve_extend.c **** 
 7803              		.loc 1 786 31 is_stmt 0 view .LVU2665
 7804 2fba C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.363_120, index: ivtmp.413_513, offs
 7804      0434
 7805 2fc0 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], t
 7805      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7806              		.loc 1 785 48 is_stmt 1 view .LVU2666
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7807              		.loc 1 785 11 view .LVU2667
 7808 2fc5 4883C620 		add	rsi, 32	# ivtmp.413,
 7809 2fc9 4839FE   		cmp	rsi, rdi	# ivtmp.413, _635
 7810 2fcc 0F848E00 		je	.L662	#,
 7810      0000
 7811              	.L532:
 786:sieve_extend.c **** 
 7812              		.loc 1 786 9 discriminator 2 view .LVU2668
 7813              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7814              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2669
 7815 2fd2 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.363_120, index: ivtmp.413_513, offs
 7815      0434
 7816 2fd8 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B], t
 7816      31
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7817              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2670
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7818              		.loc 1 785 11 discriminator 2 view .LVU2671
 786:sieve_extend.c **** 
 7819              		.loc 1 786 9 discriminator 2 view .LVU2672
 7820              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7821              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2673
 7822 2fdd C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.363_120, index: ivtmp.413_513, of
 7822      6C3420
 7823 2fe4 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B],
 7823      3120
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7824              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2674
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7825              		.loc 1 785 11 discriminator 2 view .LVU2675
 786:sieve_extend.c **** 
 7826              		.loc 1 786 9 discriminator 2 view .LVU2676
 7827              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7828              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2677
 7829 2fea C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.363_120, index: ivtmp.413_513, of
 7829      4C3440
 7830 2ff1 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B],
 7830      3140
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7831              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2678
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7832              		.loc 1 785 11 discriminator 2 view .LVU2679
 786:sieve_extend.c **** 
 7833              		.loc 1 786 9 discriminator 2 view .LVU2680
 7834              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccRwwoRx.s 			page 217


 786:sieve_extend.c **** 
 7835              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2681
 7836 2ff7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.363_120, index: ivtmp.413_513, of
 7836      7C3460
 7837 2ffe C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B],
 7837      3160
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7838              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2682
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7839              		.loc 1 785 11 discriminator 2 view .LVU2683
 786:sieve_extend.c **** 
 7840              		.loc 1 786 9 discriminator 2 view .LVU2684
 7841              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7842              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2685
 7843 3004 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.363_120, index: ivtmp.413_513, o
 7843      94348000 
 7843      0000
 7844 300e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B]
 7844      31800000 
 7844      00
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7845              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2686
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7846              		.loc 1 785 11 discriminator 2 view .LVU2687
 786:sieve_extend.c **** 
 7847              		.loc 1 786 9 discriminator 2 view .LVU2688
 7848              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7849              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2689
 7850 3017 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.363_120, index: ivtmp.413_513, o
 7850      B434A000 
 7850      0000
 7851 3021 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B]
 7851      31A00000 
 7851      00
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7852              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2690
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7853              		.loc 1 785 11 discriminator 2 view .LVU2691
 786:sieve_extend.c **** 
 7854              		.loc 1 786 9 discriminator 2 view .LVU2692
 7855              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7856              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2693
 7857 302a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.363_120, index: ivtmp.413_513, o
 7857      9C34C000 
 7857      0000
 7858 3034 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B]
 7858      31C00000 
 7858      00
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7859              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2694
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7860              		.loc 1 785 11 discriminator 2 view .LVU2695
 786:sieve_extend.c **** 
 7861              		.loc 1 786 9 discriminator 2 view .LVU2696
GAS LISTING /tmp/ccRwwoRx.s 			page 218


 7862              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7863              		.loc 1 786 31 is_stmt 0 discriminator 2 view .LVU2697
 7864 303d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.363_120, index: ivtmp.413_513, 
 7864      A434E000 
 7864      0000
 7865 3047 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.366_97, index: ivtmp.413_513, offset: 0B
 7865      31E00000 
 7865      00
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7866              		.loc 1 785 48 is_stmt 1 discriminator 2 view .LVU2698
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7867              		.loc 1 785 11 discriminator 2 view .LVU2699
 7868 3050 4881C600 		add	rsi, 256	# ivtmp.413,
 7868      010000
 7869 3057 4839FE   		cmp	rsi, rdi	# ivtmp.413, _635
 7870 305a 0F8572FF 		jne	.L532	#,
 7870      FFFF
 7871              	.L662:
 7872 3060 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.359, niters.357
 7873 3063 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.359,
 7874 3067 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.359, niters.357
 7875 306a 4F8D2430 		lea	r12, [r8+r14]	# tmp.360,
 7876 306e 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.361,
 7877 3072 0F849000 		je	.L685	#,
 7877      0000
 7878              	.L529:
 7879              	.LVL369:
 786:sieve_extend.c **** 
 7880              		.loc 1 786 9 view .LVU2700
 7881              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7882              		.loc 1 785 5 is_stmt 0 view .LVU2701
 7883 3078 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7883      58
 7884              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7885              		.loc 1 785 57 view .LVU2702
 7886 307d 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 7887              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7888              		.loc 1 786 43 view .LVU2703
 7889 3081 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
 7890              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7891              		.loc 1 785 71 view .LVU2704
 7892 3085 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 7892      01
 7893              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7894              		.loc 1 785 5 view .LVU2705
 7895 308a 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 7896              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7897              		.loc 1 786 31 view .LVU2706
 7898 308d 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccRwwoRx.s 			page 219


 7899              		.loc 1 785 48 is_stmt 1 view .LVU2707
 7900              	.LVL370:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7901              		.loc 1 785 11 view .LVU2708
 7902              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7903              		.loc 1 785 5 is_stmt 0 view .LVU2709
 7904 3091 7275     		jb	.L685	#,
 786:sieve_extend.c **** 
 7905              		.loc 1 786 9 is_stmt 1 view .LVU2710
 7906              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7907              		.loc 1 786 43 is_stmt 0 view .LVU2711
 7908 3093 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
 7909              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7910              		.loc 1 785 57 view .LVU2712
 7911 3097 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 7912              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7913              		.loc 1 785 5 view .LVU2713
 7914 309b 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
 7915              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7916              		.loc 1 785 71 view .LVU2714
 7917 309e 498D4424 		lea	rax, 2[r12]	# source_word,
 7917      02
 7918              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7919              		.loc 1 786 31 view .LVU2715
 7920 30a3 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7921              		.loc 1 785 48 is_stmt 1 view .LVU2716
 7922              	.LVL371:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7923              		.loc 1 785 11 view .LVU2717
 7924              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7925              		.loc 1 785 5 is_stmt 0 view .LVU2718
 7926 30a7 725F     		jb	.L685	#,
 786:sieve_extend.c **** 
 7927              		.loc 1 786 9 is_stmt 1 view .LVU2719
 7928              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7929              		.loc 1 786 43 is_stmt 0 view .LVU2720
 7930 30a9 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 7931              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7932              		.loc 1 785 57 view .LVU2721
 7933 30ad 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 7934              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7935              		.loc 1 785 5 view .LVU2722
 7936 30b1 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 7937              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7938              		.loc 1 785 71 view .LVU2723
GAS LISTING /tmp/ccRwwoRx.s 			page 220


 7939 30b4 498D7424 		lea	rsi, 3[r12]	# source_word,
 7939      03
 7940              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7941              		.loc 1 786 31 view .LVU2724
 7942 30b9 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7943              		.loc 1 785 48 is_stmt 1 view .LVU2725
 7944              	.LVL372:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7945              		.loc 1 785 11 view .LVU2726
 7946              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7947              		.loc 1 785 5 is_stmt 0 view .LVU2727
 7948 30bd 7249     		jb	.L685	#,
 786:sieve_extend.c **** 
 7949              		.loc 1 786 9 is_stmt 1 view .LVU2728
 7950              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7951              		.loc 1 786 43 is_stmt 0 view .LVU2729
 7952 30bf 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 7953              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7954              		.loc 1 785 57 view .LVU2730
 7955 30c3 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 7956              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7957              		.loc 1 785 71 view .LVU2731
 7958 30c7 4983C404 		add	r12, 4	# source_word,
 7959              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7960              		.loc 1 785 5 view .LVU2732
 7961 30cb 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
 7962              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7963              		.loc 1 786 31 view .LVU2733
 7964 30ce 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7965              		.loc 1 785 48 is_stmt 1 view .LVU2734
 7966              	.LVL373:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7967              		.loc 1 785 11 view .LVU2735
 7968              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7969              		.loc 1 785 5 is_stmt 0 view .LVU2736
 7970 30d2 7734     		ja	.L685	#,
 786:sieve_extend.c **** 
 7971              		.loc 1 786 9 is_stmt 1 view .LVU2737
 7972              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7973              		.loc 1 786 43 is_stmt 0 view .LVU2738
 7974 30d4 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 7974      00000000 
 7975              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7976              		.loc 1 785 57 view .LVU2739
 7977 30dc 4883C105 		add	rcx, 5	# copy_word,
GAS LISTING /tmp/ccRwwoRx.s 			page 221


 7978              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7979              		.loc 1 786 43 view .LVU2740
 7980 30e0 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 7981              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7982              		.loc 1 785 5 view .LVU2741
 7983 30e4 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 7984              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7985              		.loc 1 786 31 view .LVU2742
 7986 30e7 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7987              		.loc 1 785 48 is_stmt 1 view .LVU2743
 7988              	.LVL374:
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7989              		.loc 1 785 11 view .LVU2744
 7990              	# sieve_extend.c:785:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7991              		.loc 1 785 5 is_stmt 0 view .LVU2745
 7992 30eb 721B     		jb	.L685	#,
 786:sieve_extend.c **** 
 7993              		.loc 1 786 9 is_stmt 1 view .LVU2746
 7994              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7995              		.loc 1 786 43 is_stmt 0 view .LVU2747
 7996 30ed 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 7996      08
 7997              	# sieve_extend.c:786:         bitstorage[copy_word] = bitstorage[source_word];
 786:sieve_extend.c **** 
 7998              		.loc 1 786 31 view .LVU2748
 7999 30f2 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 8000              		.loc 1 785 48 is_stmt 1 view .LVU2749
 785:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 8001              		.loc 1 785 11 view .LVU2750
 8002 30f6 C5F877   		vzeroupper
 8003              	.L686:
 8004              	# sieve_extend.c:789:  }
 789:sieve_extend.c **** 
 8005              		.loc 1 789 2 is_stmt 0 view .LVU2751
 8006 30f9 488D65D8 		lea	rsp, -40[rbp]	#,
 8007              	.LVL375:
 789:sieve_extend.c **** 
 8008              		.loc 1 789 2 view .LVU2752
 8009 30fd 5B       		pop	rbx	#
 8010 30fe 415C     		pop	r12	#
 8011 3100 415D     		pop	r13	#
 8012 3102 415E     		pop	r14	#
 8013 3104 415F     		pop	r15	#
 8014 3106 5D       		pop	rbp	#
 8015              		.cfi_remember_state
 8016              		.cfi_def_cfa 7, 8
 8017              	.LVL376:
 789:sieve_extend.c **** 
 8018              		.loc 1 789 2 view .LVU2753
 8019 3107 C3       		ret	
GAS LISTING /tmp/ccRwwoRx.s 			page 222


 8020              	.LVL377:
 8021              		.p2align 4,,7
 8022              		.p2align 3
 8023              	.L685:
 8024              		.cfi_restore_state
 789:sieve_extend.c **** 
 8025              		.loc 1 789 2 view .LVU2754
 8026 3108 C5F877   		vzeroupper
 8027 310b 488D65D8 		lea	rsp, -40[rbp]	#,
 8028              	.LVL378:
 789:sieve_extend.c **** 
 8029              		.loc 1 789 2 view .LVU2755
 8030 310f 5B       		pop	rbx	#
 8031 3110 415C     		pop	r12	#
 8032 3112 415D     		pop	r13	#
 8033 3114 415E     		pop	r14	#
 8034 3116 415F     		pop	r15	#
 8035 3118 5D       		pop	rbp	#
 8036              		.cfi_remember_state
 8037              		.cfi_def_cfa 7, 8
 8038              	.LVL379:
 789:sieve_extend.c **** 
 8039              		.loc 1 789 2 view .LVU2756
 8040 3119 C3       		ret	
 8041              	.LVL380:
 8042 311a 660F1F44 		.p2align 4,,7
 8042      0000
 8043              		.p2align 3
 8044              	.L536:
 8045              		.cfi_restore_state
 8046              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8047              		.loc 1 771 5 view .LVU2757
 8048 3120 4D89EE   		mov	r14, r13	# copy_word, tmp.374
 8049              	# sieve_extend.c:765:     source_word += distance;
 765:sieve_extend.c ****     copy_word += distance;
 8050              		.loc 1 765 17 view .LVU2758
 8051 3123 4D89E2   		mov	r10, r12	# source_word, tmp.373
 8052 3126 498D7424 		lea	rsi, 1[r12]	# tmp788,
 8052      01
 8053 312b E92DF8FF 		jmp	.L521	#
 8053      FF
 8054              	.LVL381:
 8055              		.p2align 4,,7
 8056              		.p2align 3
 8057              	.L537:
 8058              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8059              		.loc 1 771 5 view .LVU2759
 8060 3130 4989CB   		mov	r11, rcx	# copy_word, tmp.361
 8061              	# sieve_extend.c:777:     source_word = copy_word - size; // recalibrate
 777:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8062              		.loc 1 777 17 view .LVU2760
 8063 3133 4D89E6   		mov	r14, r12	# source_word, tmp.360
 8064 3136 E9CAFDFF 		jmp	.L530	#
 8064      FF
 8065              	.LVL382:
GAS LISTING /tmp/ccRwwoRx.s 			page 223


 8066 313b 0F1F4400 		.p2align 4,,7
 8066      00
 8067              		.p2align 3
 8068              	.L688:
 772:sieve_extend.c ****     }
 8069              		.loc 1 772 9 is_stmt 1 view .LVU2761
 8070              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8071              		.loc 1 772 60 is_stmt 0 view .LVU2762
 8072 3140 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.376_257, index: ivtmp.426_731, offset: 
 8072      1B
 8073 3145 B8200000 		mov	eax, 32	# ivtmp.426,
 8073      00
 8074              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8075              		.loc 1 772 100 view .LVU2763
 8076 314a C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.380_264, index: ivtmp.426_731, offset: 
 8077              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8078              		.loc 1 772 60 view .LVU2764
 8079 314e C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.378, tmp1260, _12
 8079      D2
 8080              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8081              		.loc 1 772 100 view .LVU2765
 8082 3153 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.382, tmp1261, _18
 8082      F3
 8083              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8084              		.loc 1 772 70 view .LVU2766
 8085 3158 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.383, vect__38.378, vect__43.382
 8086              	# sieve_extend.c:772:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 772:sieve_extend.c ****     }
 8087              		.loc 1 772 31 view .LVU2767
 8088 315c C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.385_273, index: ivtmp.426_731, offset: 0B], vect
 8088      21
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8089              		.loc 1 771 43 is_stmt 1 view .LVU2768
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8090              		.loc 1 771 11 view .LVU2769
 8091 3161 E972F8FF 		jmp	.L621	#
 8091      FF
 8092              	.LVL383:
 8093              		.p2align 4,,7
 8094 3166 6690     		.p2align 3
 8095              	.L514:
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8096              		.loc 1 771 11 is_stmt 0 view .LVU2770
 8097 3168 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8097      30
 8098 316d 4D89E8   		mov	r8, r13	# tmp804, tmp.374
 8099 3170 49F7D0   		not	r8	# tmp804
 8100 3173 4801D9   		add	rcx, rbx	# ivtmp.441, bitstorage
 8101              	.LBB407:
 8102              	.LBB388:
 8103              	.LBB377:
 8104              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccRwwoRx.s 			page 224


 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8105              		.loc 1 665 44 view .LVU2771
 8106 3176 4489F8   		mov	eax, r15d	# tmp1194, _12
 8107              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8108              		.loc 1 665 65 view .LVU2772
 8109 3179 89D7     		mov	edi, edx	# tmp1195, _18
 8110 317b 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 8111              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8112              		.loc 1 665 44 view .LVU2773
 8113 317e C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 8113      01
 8114              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8115              		.loc 1 664 19 view .LVU2774
 8116 3183 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8117              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8118              		.loc 1 665 65 view .LVU2775
 8119 3187 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 8119      FE
 8120 318c 49D1E8   		shr	r8	# tmp803
 8121              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8122              		.loc 1 665 54 view .LVU2776
 8123 318f 4809F8   		or	rax, rdi	# tmp692, tmp691
 8124              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8125              		.loc 1 668 19 view .LVU2777
 8126 3192 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 8127              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8128              		.loc 1 665 65 view .LVU2778
 8129 3196 4189D2   		mov	r10d, edx	# _18, shift_flipped
 8130 3199 49F7D3   		not	r11	# tmp790
 8131 319c 4183E003 		and	r8d, 3	# tmp806,
 8132              	.LVL384:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8133              		.loc 1 663 9 is_stmt 1 view .LVU2779
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8134              		.loc 1 664 9 view .LVU2780
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8135              		.loc 1 665 9 view .LVU2781
 8136              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8137              		.loc 1 665 54 is_stmt 0 view .LVU2782
 8138 31a0 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8139              	.LVL385:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8140              		.loc 1 666 9 is_stmt 1 view .LVU2783
 667:sieve_extend.c ****         copy_word += 2;
 8141              		.loc 1 667 9 view .LVU2784
 8142              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8143              		.loc 1 665 44 is_stmt 0 view .LVU2785
 8144 31a4 4589F9   		mov	r9d, r15d	# _12, shift
GAS LISTING /tmp/ccRwwoRx.s 			page 225


 8145              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8146              		.loc 1 667 65 view .LVU2786
 8147 31a7 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 8147      4110
 8148              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8149              		.loc 1 667 44 view .LVU2787
 8150 31ad C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 8150      F6
 8151              	.LVL386:
 8152              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8153              		.loc 1 667 54 view .LVU2788
 8154 31b2 4809C6   		or	rsi, rax	# tmp696, tmp693
 8155              	.LBE377:
 8156              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8157              		.loc 1 662 11 view .LVU2789
 8158 31b5 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8159 31b8 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8160 31bc 488D4110 		lea	rax, 16[rcx]	# ivtmp.441,
 8161              	.LBB378:
 8162              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8163              		.loc 1 667 54 view .LVU2790
 8164 31c0 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8164      08
 8165              	.LVL387:
 668:sieve_extend.c ****         source_word += 2;
 8166              		.loc 1 668 9 is_stmt 1 view .LVU2791
 669:sieve_extend.c ****         distance += 2;
 8167              		.loc 1 669 9 view .LVU2792
 670:sieve_extend.c ****     }
 8168              		.loc 1 670 9 view .LVU2793
 670:sieve_extend.c ****     }
 8169              		.loc 1 670 9 is_stmt 0 view .LVU2794
 8170              	.LBE378:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8171              		.loc 1 662 11 is_stmt 1 view .LVU2795
 8172 31c5 0F86B3F6 		jbe	.L518	#,
 8172      FFFF
 8173 31cb 4D85C0   		test	r8, r8	# tmp806
 8174 31ce 0F849700 		je	.L676	#,
 8174      0000
 8175 31d4 4983F801 		cmp	r8, 1	# tmp806,
 8176 31d8 7446     		je	.L635	#,
 8177 31da 4983F802 		cmp	r8, 2	# tmp806,
 8178 31de 0F857401 		jne	.L689	#,
 8178      0000
 8179              	.LVL388:
 8180              	.L636:
 8181              	.LBB379:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8182              		.loc 1 663 9 view .LVU2796
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8183              		.loc 1 664 9 view .LVU2797
GAS LISTING /tmp/ccRwwoRx.s 			page 226


 8184              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8185              		.loc 1 664 19 is_stmt 0 view .LVU2798
 8186 31e4 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8187              		.loc 1 665 9 is_stmt 1 view .LVU2799
 8188              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8189              		.loc 1 665 44 is_stmt 0 view .LVU2800
 8190 31e8 4489F9   		mov	ecx, r15d	# tmp1278, _12
 8191              	.LVL389:
 8192              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8193              		.loc 1 665 65 view .LVU2801
 8194 31eb 4189D0   		mov	r8d, edx	# tmp1279, _18
 8195              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8196              		.loc 1 665 44 view .LVU2802
 8197 31ee C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 8197      08
 8198              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8199              		.loc 1 665 65 view .LVU2803
 8200 31f3 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
 8200      CE
 8201              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8202              		.loc 1 665 54 view .LVU2804
 8203 31f8 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 8204              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8205              		.loc 1 665 44 view .LVU2805
 8206 31fb 4589FA   		mov	r10d, r15d	# _12, shift
 8207              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8208              		.loc 1 665 65 view .LVU2806
 8209 31fe 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8210              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8211              		.loc 1 665 54 view .LVU2807
 8212 3201 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8213              	.LVL390:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8214              		.loc 1 666 9 is_stmt 1 view .LVU2808
 667:sieve_extend.c ****         copy_word += 2;
 8215              		.loc 1 667 9 view .LVU2809
 8216              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8217              		.loc 1 667 44 is_stmt 0 view .LVU2810
 8218 3205 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 8218      F6
 8219              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8220              		.loc 1 667 65 view .LVU2811
 8221 320a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 8221      4810
 8222              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
GAS LISTING /tmp/ccRwwoRx.s 			page 227


 667:sieve_extend.c ****         copy_word += 2;
 8223              		.loc 1 667 54 view .LVU2812
 8224 3210 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 8225 3213 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8225      08
 8226              	.LVL391:
 668:sieve_extend.c ****         source_word += 2;
 8227              		.loc 1 668 9 is_stmt 1 view .LVU2813
 8228 3218 4883C010 		add	rax, 16	# ivtmp.441,
 8229              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8230              		.loc 1 668 19 is_stmt 0 view .LVU2814
 8231 321c 4883C702 		add	rdi, 2	# copy_word,
 669:sieve_extend.c ****         distance += 2;
 8232              		.loc 1 669 9 is_stmt 1 view .LVU2815
 670:sieve_extend.c ****     }
 8233              		.loc 1 670 9 view .LVU2816
 670:sieve_extend.c ****     }
 8234              		.loc 1 670 9 is_stmt 0 view .LVU2817
 8235              	.LBE379:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8236              		.loc 1 662 11 is_stmt 1 view .LVU2818
 8237              	.LVL392:
 8238              	.L635:
 8239              	.LBB380:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8240              		.loc 1 663 9 view .LVU2819
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8241              		.loc 1 664 9 view .LVU2820
 8242              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8243              		.loc 1 664 19 is_stmt 0 view .LVU2821
 8244 3220 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8245              		.loc 1 665 9 is_stmt 1 view .LVU2822
 8246              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8247              		.loc 1 665 44 is_stmt 0 view .LVU2823
 8248 3224 4589F8   		mov	r8d, r15d	# tmp1282, _12
 8249              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8250              		.loc 1 665 65 view .LVU2824
 8251 3227 4189D1   		mov	r9d, edx	# tmp1283, _18
 8252              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8253              		.loc 1 665 44 view .LVU2825
 8254 322a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 8254      08
 8255              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8256              		.loc 1 665 65 view .LVU2826
 8257 322f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 8257      C6
 8258              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8259              		.loc 1 665 54 view .LVU2827
 8260 3234 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
GAS LISTING /tmp/ccRwwoRx.s 			page 228


 8261              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8262              		.loc 1 665 44 view .LVU2828
 8263 3237 4589FA   		mov	r10d, r15d	# _12, shift
 8264              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8265              		.loc 1 665 65 view .LVU2829
 8266 323a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8267              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8268              		.loc 1 665 54 view .LVU2830
 8269 323d 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8270              	.LVL393:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8271              		.loc 1 666 9 is_stmt 1 view .LVU2831
 667:sieve_extend.c ****         copy_word += 2;
 8272              		.loc 1 667 9 view .LVU2832
 8273              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8274              		.loc 1 667 44 is_stmt 0 view .LVU2833
 8275 3241 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 8275      F6
 8276              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8277              		.loc 1 667 65 view .LVU2834
 8278 3246 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 8278      4810
 8279              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8280              		.loc 1 667 54 view .LVU2835
 8281 324c 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 8282 324f 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8282      08
 8283              	.LVL394:
 668:sieve_extend.c ****         source_word += 2;
 8284              		.loc 1 668 9 is_stmt 1 view .LVU2836
 8285              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8286              		.loc 1 668 19 is_stmt 0 view .LVU2837
 8287 3254 4883C702 		add	rdi, 2	# copy_word,
 669:sieve_extend.c ****         distance += 2;
 8288              		.loc 1 669 9 is_stmt 1 view .LVU2838
 670:sieve_extend.c ****     }
 8289              		.loc 1 670 9 view .LVU2839
 8290 3258 4883C010 		add	rax, 16	# ivtmp.441,
 8291              	.LBE380:
 8292              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8293              		.loc 1 662 11 is_stmt 0 view .LVU2840
 8294 325c 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8294      30
 8295 3261 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8296              		.loc 1 662 11 is_stmt 1 view .LVU2841
 8297 3265 0F8613F6 		jbe	.L518	#,
 8297      FFFF
 8298              	.LVL395:
GAS LISTING /tmp/ccRwwoRx.s 			page 229


 8299              	.L676:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8300              		.loc 1 662 11 is_stmt 0 view .LVU2842
 8301 326b 4489F9   		mov	ecx, r15d	# _12, shift
 8302 326e 4189D0   		mov	r8d, edx	# _18, shift_flipped
 8303 3271 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.373
 8303      38
 8304              	.LVL396:
 8305              	.L517:
 8306              	.LBB381:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8307              		.loc 1 663 9 is_stmt 1 view .LVU2843
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8308              		.loc 1 664 9 view .LVU2844
 8309              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8310              		.loc 1 664 19 is_stmt 0 view .LVU2845
 8311 3276 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8312              		.loc 1 665 9 is_stmt 1 view .LVU2846
 8313              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8314              		.loc 1 665 44 is_stmt 0 view .LVU2847
 8315 327a C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
 8315      08
 8316              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8317              		.loc 1 665 65 view .LVU2848
 8318 327f C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 8318      F4
 8319              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8320              		.loc 1 665 54 view .LVU2849
 8321 3284 4D09F1   		or	r9, r14	# tmp880, tmp879
 8322              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8323              		.loc 1 667 44 view .LVU2850
 8324 3287 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 8324      D4
 8325              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8326              		.loc 1 665 54 view .LVU2851
 8327 328c 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset:
 8328              	.LVL397:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8329              		.loc 1 666 9 is_stmt 1 view .LVU2852
 667:sieve_extend.c ****         copy_word += 2;
 8330              		.loc 1 667 9 view .LVU2853
 8331              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8332              		.loc 1 667 65 is_stmt 0 view .LVU2854
 8333 3290 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 8333      7010
 8334              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8335              		.loc 1 667 54 view .LVU2855
 8336 3296 4C09D6   		or	rsi, r10	# tmp884, tmp883
GAS LISTING /tmp/ccRwwoRx.s 			page 230


 8337 3299 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8337      08
 8338              	.LVL398:
 668:sieve_extend.c ****         source_word += 2;
 8339              		.loc 1 668 9 is_stmt 1 view .LVU2856
 8340              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8341              		.loc 1 668 19 is_stmt 0 view .LVU2857
 8342 329e 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 669:sieve_extend.c ****         distance += 2;
 8343              		.loc 1 669 9 is_stmt 1 view .LVU2858
 670:sieve_extend.c ****     }
 8344              		.loc 1 670 9 view .LVU2859
 670:sieve_extend.c ****     }
 8345              		.loc 1 670 9 is_stmt 0 view .LVU2860
 8346              	.LBE381:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8347              		.loc 1 662 11 is_stmt 1 view .LVU2861
 8348              	.LBB382:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8349              		.loc 1 663 9 view .LVU2862
 8350              	.LVL399:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8351              		.loc 1 664 9 view .LVU2863
 8352              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8353              		.loc 1 664 19 is_stmt 0 view .LVU2864
 8354 32a2 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8355              		.loc 1 665 9 is_stmt 1 view .LVU2865
 8356              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8357              		.loc 1 665 44 is_stmt 0 view .LVU2866
 8358 32a6 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 8358      7010
 8359              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8360              		.loc 1 665 65 view .LVU2867
 8361 32ac C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 8361      F1
 8362              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8363              		.loc 1 665 54 view .LVU2868
 8364 32b1 4C09F6   		or	rsi, r14	# tmp892, tmp891
 8365 32b4 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8366              	.LVL400:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8367              		.loc 1 666 9 is_stmt 1 view .LVU2869
 667:sieve_extend.c ****         copy_word += 2;
 8368              		.loc 1 667 9 view .LVU2870
 8369              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8370              		.loc 1 667 44 is_stmt 0 view .LVU2871
 8371 32b8 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 8371      C9
 8372              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccRwwoRx.s 			page 231


 8373              		.loc 1 667 65 view .LVU2872
 8374 32bd 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8375 32c1 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 8375      F2
 8376              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8377              		.loc 1 667 54 view .LVU2873
 8378 32c6 4909F1   		or	r9, rsi	# tmp896, tmp894
 8379 32c9 4883C040 		add	rax, 64	# ivtmp.441,
 8380 32cd 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8380      08
 8381              	.LVL401:
 668:sieve_extend.c ****         source_word += 2;
 8382              		.loc 1 668 9 is_stmt 1 view .LVU2874
 8383              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8384              		.loc 1 668 19 is_stmt 0 view .LVU2875
 8385 32d2 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 669:sieve_extend.c ****         distance += 2;
 8386              		.loc 1 669 9 is_stmt 1 view .LVU2876
 670:sieve_extend.c ****     }
 8387              		.loc 1 670 9 view .LVU2877
 670:sieve_extend.c ****     }
 8388              		.loc 1 670 9 is_stmt 0 view .LVU2878
 8389              	.LBE382:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8390              		.loc 1 662 11 is_stmt 1 view .LVU2879
 8391              	.LBB383:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8392              		.loc 1 663 9 view .LVU2880
 8393              	.LVL402:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8394              		.loc 1 664 9 view .LVU2881
 8395              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8396              		.loc 1 664 19 is_stmt 0 view .LVU2882
 8397 32d6 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8398              		.loc 1 665 9 is_stmt 1 view .LVU2883
 8399              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8400              		.loc 1 665 44 is_stmt 0 view .LVU2884
 8401 32da C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
 8401      70E0
 8402              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8403              		.loc 1 665 65 view .LVU2885
 8404 32e0 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 8404      F2
 8405              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8406              		.loc 1 665 54 view .LVU2886
 8407 32e5 4C09F6   		or	rsi, r14	# tmp904, tmp903
 8408 32e8 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8409              	.LVL403:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8410              		.loc 1 666 9 is_stmt 1 view .LVU2887
GAS LISTING /tmp/ccRwwoRx.s 			page 232


 667:sieve_extend.c ****         copy_word += 2;
 8411              		.loc 1 667 9 view .LVU2888
 8412              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8413              		.loc 1 667 44 is_stmt 0 view .LVU2889
 8414 32ec C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 8414      D2
 8415              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8416              		.loc 1 667 65 view .LVU2890
 8417 32f1 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8418 32f5 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 8418      F1
 8419              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8420              		.loc 1 667 54 view .LVU2891
 8421 32fa 4909F2   		or	r10, rsi	# tmp908, tmp906
 8422 32fd 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8422      08
 8423              	.LVL404:
 668:sieve_extend.c ****         source_word += 2;
 8424              		.loc 1 668 9 is_stmt 1 view .LVU2892
 8425              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8426              		.loc 1 668 19 is_stmt 0 view .LVU2893
 8427 3302 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 669:sieve_extend.c ****         distance += 2;
 8428              		.loc 1 669 9 is_stmt 1 view .LVU2894
 670:sieve_extend.c ****     }
 8429              		.loc 1 670 9 view .LVU2895
 670:sieve_extend.c ****     }
 8430              		.loc 1 670 9 is_stmt 0 view .LVU2896
 8431              	.LBE383:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8432              		.loc 1 662 11 is_stmt 1 view .LVU2897
 8433              	.LBB384:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8434              		.loc 1 663 9 view .LVU2898
 8435              	.LVL405:
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8436              		.loc 1 664 9 view .LVU2899
 8437              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8438              		.loc 1 664 19 is_stmt 0 view .LVU2900
 8439 3306 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8440              		.loc 1 665 9 is_stmt 1 view .LVU2901
 8441              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8442              		.loc 1 665 44 is_stmt 0 view .LVU2902
 8443 330a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 8443      70F0
 8444              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8445              		.loc 1 665 65 view .LVU2903
 8446 3310 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 8446      F1
GAS LISTING /tmp/ccRwwoRx.s 			page 233


 8447              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8448              		.loc 1 665 54 view .LVU2904
 8449 3315 4C09F6   		or	rsi, r14	# tmp916, tmp915
 8450 3318 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8451              	.LVL406:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8452              		.loc 1 666 9 is_stmt 1 view .LVU2905
 667:sieve_extend.c ****         copy_word += 2;
 8453              		.loc 1 667 9 view .LVU2906
 8454              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8455              		.loc 1 668 19 is_stmt 0 view .LVU2907
 8456 331c 4883C708 		add	rdi, 8	# copy_word,
 8457              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8458              		.loc 1 667 44 view .LVU2908
 8459 3320 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 8459      C9
 8460              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8461              		.loc 1 667 65 view .LVU2909
 8462 3325 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8463 3328 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
 8463      F2
 8464              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8465              		.loc 1 667 54 view .LVU2910
 8466 332d 4909F1   		or	r9, rsi	# tmp920, tmp918
 8467              	.LBE384:
 8468              	# sieve_extend.c:662:     while (copy_word < fast_loop_stop_word) {
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8469              		.loc 1 662 11 view .LVU2911
 8470 3330 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8470      30
 8471 3335 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8472              	.LBB385:
 8473              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8474              		.loc 1 667 54 view .LVU2912
 8475 3339 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8475      08
 8476              	.LVL407:
 668:sieve_extend.c ****         source_word += 2;
 8477              		.loc 1 668 9 is_stmt 1 view .LVU2913
 669:sieve_extend.c ****         distance += 2;
 8478              		.loc 1 669 9 view .LVU2914
 670:sieve_extend.c ****     }
 8479              		.loc 1 670 9 view .LVU2915
 670:sieve_extend.c ****     }
 8480              		.loc 1 670 9 is_stmt 0 view .LVU2916
 8481              	.LBE385:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8482              		.loc 1 662 11 is_stmt 1 view .LVU2917
 8483 333e 0F8732FF 		ja	.L517	#,
 8483      FFFF
 8484 3344 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.373, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 234


 8484      38
 8485 3349 E930F5FF 		jmp	.L518	#
 8485      FF
 8486              	.LVL408:
 8487 334e 6690     		.p2align 4,,7
 8488              		.p2align 3
 8489              	.L535:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8490              		.loc 1 662 11 is_stmt 0 view .LVU2918
 8491              	.LBE388:
 8492              	.LBE407:
 8493              	# sieve_extend.c:771:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 771:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8494              		.loc 1 771 5 view .LVU2919
 8495 3350 4C89E9   		mov	rcx, r13	# tmp.361, tmp.374
 8496 3353 E994F9FF 		jmp	.L519	#
 8496      FF
 8497              	.LVL409:
 8498              	.L689:
 8499              	.LBB408:
 8500              	.LBB389:
 8501              	.LBB386:
 663:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8502              		.loc 1 663 9 is_stmt 1 view .LVU2920
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8503              		.loc 1 664 9 view .LVU2921
 8504              	# sieve_extend.c:664:         bitword_t source1 = bitstorage[source_word+1];
 664:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8505              		.loc 1 664 19 is_stmt 0 view .LVU2922
 8506 3358 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8507              		.loc 1 665 9 is_stmt 1 view .LVU2923
 8508              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8509              		.loc 1 665 44 is_stmt 0 view .LVU2924
 8510 335c 4589F8   		mov	r8d, r15d	# tmp1274, _12
 8511 335f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 8511      30
 8512              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8513              		.loc 1 665 65 view .LVU2925
 8514 3364 4189D0   		mov	r8d, edx	# tmp1275, _18
 8515 3367 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
 8515      C1
 8516              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8517              		.loc 1 665 54 view .LVU2926
 8518 336c 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 8519 336f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8520              	.LVL410:
 666:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8521              		.loc 1 666 9 is_stmt 1 view .LVU2927
 667:sieve_extend.c ****         copy_word += 2;
 8522              		.loc 1 667 9 view .LVU2928
 8523              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8524              		.loc 1 665 44 is_stmt 0 view .LVU2929
GAS LISTING /tmp/ccRwwoRx.s 			page 235


 8525 3373 4589FA   		mov	r10d, r15d	# _12, shift
 8526              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8527              		.loc 1 667 65 view .LVU2930
 8528 3376 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8529              	# sieve_extend.c:665:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 665:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8530              		.loc 1 665 65 view .LVU2931
 8531 337a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8532              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8533              		.loc 1 667 44 view .LVU2932
 8534 337d C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 8534      C9
 8535              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8536              		.loc 1 667 65 view .LVU2933
 8537 3382 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 8537      C0
 8538              	# sieve_extend.c:667:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 667:sieve_extend.c ****         copy_word += 2;
 8539              		.loc 1 667 54 view .LVU2934
 8540 3387 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 8541 338a 488D4120 		lea	rax, 32[rcx]	# ivtmp.441,
 8542 338e 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8542      08
 8543              	.LVL411:
 668:sieve_extend.c ****         source_word += 2;
 8544              		.loc 1 668 9 is_stmt 1 view .LVU2935
 8545              	# sieve_extend.c:668:         copy_word += 2;
 668:sieve_extend.c ****         source_word += 2;
 8546              		.loc 1 668 19 is_stmt 0 view .LVU2936
 8547 3393 498D7D04 		lea	rdi, 4[r13]	# copy_word,
 669:sieve_extend.c ****         distance += 2;
 8548              		.loc 1 669 9 is_stmt 1 view .LVU2937
 670:sieve_extend.c ****     }
 8549              		.loc 1 670 9 view .LVU2938
 670:sieve_extend.c ****     }
 8550              		.loc 1 670 9 is_stmt 0 view .LVU2939
 8551              	.LBE386:
 662:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8552              		.loc 1 662 11 is_stmt 1 view .LVU2940
 8553 3397 E948FEFF 		jmp	.L636	#
 8553      FF
 8554              	.LBE389:
 8555              	.LBE408:
 8556              		.cfi_endproc
 8557              	.LFE75:
 8559              		.section	.rodata.str1.1,"aMS",@progbits,1
 8560              	.LC4:
 8561 0000 25336A75 		.string	"%3ju "
 8561      2000
 8562              	.LC5:
 8563 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8563      6E642025 
 8563      6A752070 
 8563      72696D65 
GAS LISTING /tmp/ccRwwoRx.s 			page 236


 8563      7320756E 
 8564              		.text
 8565 339c 0F1F4000 		.p2align 4
 8567              	show_primes.isra.0:
 8568              	.LVL412:
 8569              	.LFB100:
 922:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8570              		.loc 1 922 13 view -0
 8571              		.cfi_startproc
 8572              	.LBB409:
 924:sieve_extend.c ****         primeCount++;
 8573              		.loc 1 924 30 view .LVU2942
 8574              	.LBE409:
 8575              	# sieve_extend.c:922: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 922:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8576              		.loc 1 922 13 is_stmt 0 view .LVU2943
 8577 33a0 4157     		push	r15	#
 8578              		.cfi_def_cfa_offset 16
 8579              		.cfi_offset 15, -16
 8580 33a2 4156     		push	r14	#
 8581              		.cfi_def_cfa_offset 24
 8582              		.cfi_offset 14, -24
 8583 33a4 4155     		push	r13	#
 8584              		.cfi_def_cfa_offset 32
 8585              		.cfi_offset 13, -32
 8586 33a6 4154     		push	r12	#
 8587              		.cfi_def_cfa_offset 40
 8588              		.cfi_offset 12, -40
 8589 33a8 4989F4   		mov	r12, rsi	# ISRA.76, tmp168
 8590 33ab 55       		push	rbp	#
 8591              		.cfi_def_cfa_offset 48
 8592              		.cfi_offset 6, -48
 8593 33ac 53       		push	rbx	#
 8594              		.cfi_def_cfa_offset 56
 8595              		.cfi_offset 3, -56
 8596 33ad 488D6424 		lea	rsp, -8[rsp]	#,
 8596      F8
 8597              		.cfi_def_cfa_offset 64
 8598              	.LBB426:
 8599              	# sieve_extend.c:924:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 924:sieve_extend.c ****         primeCount++;
 8600              		.loc 1 924 44 view .LVU2944
 8601 33b2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.76_32(D)
 8602              	# sieve_extend.c:924:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 924:sieve_extend.c ****         primeCount++;
 8603              		.loc 1 924 5 view .LVU2945
 8604 33b5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8605 33b9 0F867501 		jbe	.L697	#,
 8605      0000
 8606              	# sieve_extend.c:926:         if (factor < maxFactor/2) {
 926:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8607              		.loc 1 926 31 view .LVU2946
 8608 33bf 48D1EA   		shr	rdx	# maxFactor
 8609              	.LVL413:
 926:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8610              		.loc 1 926 31 view .LVU2947
 8611 33c2 4989FD   		mov	r13, rdi	# ISRA.75, tmp167
GAS LISTING /tmp/ccRwwoRx.s 			page 237


 8612              	# sieve_extend.c:924:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 924:sieve_extend.c ****         primeCount++;
 8613              		.loc 1 924 20 view .LVU2948
 8614 33c5 BB010000 		mov	ebx, 1	# factor,
 8614      00
 8615              	# sieve_extend.c:926:         if (factor < maxFactor/2) {
 926:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8616              		.loc 1 926 31 view .LVU2949
 8617 33ca 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8618              	.LBE426:
 8619              	# sieve_extend.c:923:     counter_t primeCount = 1;    // We already have 2
 923:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 8620              		.loc 1 923 15 view .LVU2950
 8621 33cd 41BF0100 		mov	r15d, 1	# primeCount,
 8621      0000
 8622              	.LBB427:
 8623              	.LBB410:
 8624              	.LBB411:
 8625              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8626              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
GAS LISTING /tmp/ccRwwoRx.s 			page 238


  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
GAS LISTING /tmp/ccRwwoRx.s 			page 239


  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8627              		.loc 3 107 10 view .LVU2951
 8628 33d3 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8628      CCCCCCCC 
 8628      CCCC
 8629              	.LVL414:
 8630 33dd 0F1F00   		.p2align 4
 8631              		.p2align 3
 8632              	.L696:
 8633              		.loc 3 107 10 view .LVU2952
 8634              	.LBE411:
 8635              	.LBE410:
 925:sieve_extend.c ****         if (factor < maxFactor/2) {
 8636              		.loc 1 925 9 is_stmt 1 view .LVU2953
 8637              	# sieve_extend.c:925:         primeCount++;
 925:sieve_extend.c ****         if (factor < maxFactor/2) {
 8638              		.loc 1 925 19 is_stmt 0 view .LVU2954
 8639 33e0 4983C701 		add	r15, 1	# primeCount,
 8640              	.LVL415:
 926:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8641              		.loc 1 926 9 is_stmt 1 view .LVU2955
 8642              	# sieve_extend.c:926:         if (factor < maxFactor/2) {
 926:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8643              		.loc 1 926 12 is_stmt 0 view .LVU2956
 8644 33e4 4839DD   		cmp	rbp, rbx	# _4, factor
 8645 33e7 0F87FB00 		ja	.L720	#,
 8645      0000
 8646              	.L692:
 924:sieve_extend.c ****         primeCount++;
 8647              		.loc 1 924 52 is_stmt 1 view .LVU2957
 8648              	.LVL416:
 8649              	# sieve_extend.c:924:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 924:sieve_extend.c ****         primeCount++;
 8650              		.loc 1 924 61 is_stmt 0 view .LVU2958
 8651 33ed 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.75_33(D)
 8652 33f1 4883C301 		add	rbx, 1	# factor,
 8653              	.LVL417:
 8654              	.L719:
 8655              	.LBB416:
 8656              	.LBI416:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 8657              		.loc 1 117 25 is_stmt 1 view .LVU2959
 8658              	.LBB417:
 118:sieve_extend.c ****     return index;
 8659              		.loc 1 118 5 view .LVU2960
GAS LISTING /tmp/ccRwwoRx.s 			page 240


 118:sieve_extend.c ****     return index;
 8660              		.loc 1 118 11 view .LVU2961
 8661              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8662              		.loc 1 118 23 is_stmt 0 view .LVU2962
 8663 33f5 4889D9   		mov	rcx, rbx	# tmp124, factor
 8664 33f8 48C1E906 		shr	rcx, 6	# tmp124,
 8665              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8666              		.loc 1 118 12 view .LVU2963
 8667 33fc 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8668              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8669              		.loc 1 118 11 view .LVU2964
 8670 3400 490FA3D9 		bt	r9, rbx	# *_39, factor
 8671 3404 0F83A600 		jnc	.L694	#,
 8671      0000
 118:sieve_extend.c ****     return index;
 8672              		.loc 1 118 60 is_stmt 1 view .LVU2965
 8673              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8674              		.loc 1 118 65 is_stmt 0 view .LVU2966
 8675 340a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8676              	.LVL418:
 8677              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8678              		.loc 1 118 23 view .LVU2967
 8679 340e 4D89D3   		mov	r11, r10	# tmp129, factor
 8680              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8681              		.loc 1 118 65 view .LVU2968
 8682 3411 4C89D3   		mov	rbx, r10	# factor, tmp138
 118:sieve_extend.c ****     return index;
 8683              		.loc 1 118 11 is_stmt 1 view .LVU2969
 8684              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8685              		.loc 1 118 23 is_stmt 0 view .LVU2970
 8686 3414 49C1EB06 		shr	r11, 6	# tmp129,
 8687              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8688              		.loc 1 118 12 view .LVU2971
 8689 3418 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8690              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8691              		.loc 1 118 11 view .LVU2972
 8692 341c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8693 3420 0F838A00 		jnc	.L694	#,
 8693      0000
 118:sieve_extend.c ****     return index;
 8694              		.loc 1 118 60 is_stmt 1 view .LVU2973
 8695              	.LVL419:
 8696              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8697              		.loc 1 118 65 is_stmt 0 view .LVU2974
 8698 3426 4883C301 		add	rbx, 1	# factor,
 8699              	.LVL420:
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccRwwoRx.s 			page 241


 8700              		.loc 1 118 11 is_stmt 1 view .LVU2975
 8701              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8702              		.loc 1 118 23 is_stmt 0 view .LVU2976
 8703 342a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8704 342d 48C1EA06 		shr	rdx, 6	# tmp139,
 8705              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8706              		.loc 1 118 12 view .LVU2977
 8707 3431 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8708              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8709              		.loc 1 118 11 view .LVU2978
 8710 3435 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8711 3439 7375     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8712              		.loc 1 118 60 is_stmt 1 view .LVU2979
 8713              	.LVL421:
 8714              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8715              		.loc 1 118 65 is_stmt 0 view .LVU2980
 8716 343b 498D5A02 		lea	rbx, 2[r10]	# factor,
 8717              	.LVL422:
 118:sieve_extend.c ****     return index;
 8718              		.loc 1 118 11 is_stmt 1 view .LVU2981
 8719              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8720              		.loc 1 118 23 is_stmt 0 view .LVU2982
 8721 343f 4889D9   		mov	rcx, rbx	# tmp143, factor
 8722 3442 48C1E906 		shr	rcx, 6	# tmp143,
 8723              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8724              		.loc 1 118 12 view .LVU2983
 8725 3446 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8726              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8727              		.loc 1 118 11 view .LVU2984
 8728 344a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8729 344e 7360     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8730              		.loc 1 118 60 is_stmt 1 view .LVU2985
 8731              	.LVL423:
 8732              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8733              		.loc 1 118 65 is_stmt 0 view .LVU2986
 8734 3450 498D5A03 		lea	rbx, 3[r10]	# factor,
 8735              	.LVL424:
 118:sieve_extend.c ****     return index;
 8736              		.loc 1 118 11 is_stmt 1 view .LVU2987
 8737              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8738              		.loc 1 118 23 is_stmt 0 view .LVU2988
 8739 3454 4989DB   		mov	r11, rbx	# tmp147, factor
 8740 3457 49C1EB06 		shr	r11, 6	# tmp147,
 8741              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8742              		.loc 1 118 12 view .LVU2989
GAS LISTING /tmp/ccRwwoRx.s 			page 242


 8743 345b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8744              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8745              		.loc 1 118 11 view .LVU2990
 8746 345f 480FA3D8 		bt	rax, rbx	# *_16, factor
 8747 3463 734B     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8748              		.loc 1 118 60 is_stmt 1 view .LVU2991
 8749              	.LVL425:
 8750              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8751              		.loc 1 118 65 is_stmt 0 view .LVU2992
 8752 3465 498D5A04 		lea	rbx, 4[r10]	# factor,
 8753              	.LVL426:
 118:sieve_extend.c ****     return index;
 8754              		.loc 1 118 11 is_stmt 1 view .LVU2993
 8755              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8756              		.loc 1 118 23 is_stmt 0 view .LVU2994
 8757 3469 4889DA   		mov	rdx, rbx	# tmp151, factor
 8758 346c 48C1EA06 		shr	rdx, 6	# tmp151,
 8759              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8760              		.loc 1 118 12 view .LVU2995
 8761 3470 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8762              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8763              		.loc 1 118 11 view .LVU2996
 8764 3474 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8765 3478 7336     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8766              		.loc 1 118 60 is_stmt 1 view .LVU2997
 8767              	.LVL427:
 8768              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8769              		.loc 1 118 65 is_stmt 0 view .LVU2998
 8770 347a 498D5A05 		lea	rbx, 5[r10]	# factor,
 8771              	.LVL428:
 118:sieve_extend.c ****     return index;
 8772              		.loc 1 118 11 is_stmt 1 view .LVU2999
 8773              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8774              		.loc 1 118 23 is_stmt 0 view .LVU3000
 8775 347e 4889D9   		mov	rcx, rbx	# tmp155, factor
 8776 3481 48C1E906 		shr	rcx, 6	# tmp155,
 8777              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8778              		.loc 1 118 12 view .LVU3001
 8779 3485 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8780              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8781              		.loc 1 118 11 view .LVU3002
 8782 3489 490FA3D9 		bt	r9, rbx	# *_16, factor
 8783 348d 7321     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8784              		.loc 1 118 60 is_stmt 1 view .LVU3003
 8785              	.LVL429:
GAS LISTING /tmp/ccRwwoRx.s 			page 243


 8786              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8787              		.loc 1 118 65 is_stmt 0 view .LVU3004
 8788 348f 498D5A06 		lea	rbx, 6[r10]	# factor,
 8789              	.LVL430:
 118:sieve_extend.c ****     return index;
 8790              		.loc 1 118 11 is_stmt 1 view .LVU3005
 8791              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8792              		.loc 1 118 23 is_stmt 0 view .LVU3006
 8793 3493 4989DB   		mov	r11, rbx	# tmp159, factor
 8794 3496 49C1EB06 		shr	r11, 6	# tmp159,
 8795              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8796              		.loc 1 118 12 view .LVU3007
 8797 349a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8798              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8799              		.loc 1 118 11 view .LVU3008
 8800 349e 480FA3D8 		bt	rax, rbx	# *_16, factor
 8801 34a2 730C     		jnc	.L694	#,
 118:sieve_extend.c ****     return index;
 8802              		.loc 1 118 60 is_stmt 1 view .LVU3009
 8803              	.LVL431:
 8804              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 8805              		.loc 1 118 65 is_stmt 0 view .LVU3010
 8806 34a4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8807              	.LVL432:
 118:sieve_extend.c ****     return index;
 8808              		.loc 1 118 11 is_stmt 1 view .LVU3011
 8809 34a8 E948FFFF 		jmp	.L719	#
 8809      FF
 8810 34ad 0F1F00   		.p2align 4,,7
 8811              		.p2align 3
 8812              	.L694:
 8813              	.LVL433:
 118:sieve_extend.c ****     return index;
 8814              		.loc 1 118 11 is_stmt 0 view .LVU3012
 8815              	.LBE417:
 8816              	.LBE416:
 924:sieve_extend.c ****         primeCount++;
 8817              		.loc 1 924 30 is_stmt 1 view .LVU3013
 8818              	# sieve_extend.c:924:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 924:sieve_extend.c ****         primeCount++;
 8819              		.loc 1 924 5 is_stmt 0 view .LVU3014
 8820 34b0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8821 34b3 0F8227FF 		jb	.L696	#,
 8821      FFFF
 8822              	.LVL434:
 8823              	.L691:
 924:sieve_extend.c ****         primeCount++;
 8824              		.loc 1 924 5 view .LVU3015
 8825              	.LBE427:
 931:sieve_extend.c **** }
 8826              		.loc 1 931 5 is_stmt 1 view .LVU3016
 8827              	.LBB428:
GAS LISTING /tmp/ccRwwoRx.s 			page 244


 8828              	.LBI428:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8829              		.loc 3 105 1 view .LVU3017
 8830              	.LBB429:
 8831              		.loc 3 107 3 view .LVU3018
 8832              	.LBE429:
 8833              	.LBE428:
 8834              	# sieve_extend.c:932: }
 932:sieve_extend.c **** 
 8835              		.loc 1 932 1 is_stmt 0 view .LVU3019
 8836 34b9 488D6424 		lea	rsp, 8[rsp]	#,
 8836      08
 8837              		.cfi_remember_state
 8838              		.cfi_def_cfa_offset 56
 8839              	.LBB433:
 8840              	.LBB430:
 8841              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8842              		.loc 3 107 10 view .LVU3020
 8843 34be 4C89FA   		mov	rdx, r15	#, primeCount
 8844              	.LBE430:
 8845              	.LBE433:
 8846              	# sieve_extend.c:932: }
 932:sieve_extend.c **** 
 8847              		.loc 1 932 1 view .LVU3021
 8848 34c1 5B       		pop	rbx	#
 8849              		.cfi_def_cfa_offset 48
 8850              	# sieve_extend.c:931:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 931:sieve_extend.c **** }
 8851              		.loc 1 931 5 view .LVU3022
 8852 34c2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8852      01
 8853              	.LBB434:
 8854              	.LBB431:
 8855              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8856              		.loc 3 107 10 view .LVU3023
 8857 34c7 BF010000 		mov	edi, 1	#,
 8857      00
 8858 34cc 31C0     		xor	eax, eax	#
 8859 34ce 488D3500 		lea	rsi, .LC5[rip]	#,
 8859      000000
 8860              	.LBE431:
 8861              	.LBE434:
 8862              	# sieve_extend.c:932: }
 932:sieve_extend.c **** 
 8863              		.loc 1 932 1 view .LVU3024
 8864 34d5 5D       		pop	rbp	#
 8865              		.cfi_def_cfa_offset 40
 8866 34d6 415C     		pop	r12	#
 8867              		.cfi_def_cfa_offset 32
 8868 34d8 415D     		pop	r13	#
 8869              		.cfi_def_cfa_offset 24
 8870 34da 415E     		pop	r14	#
 8871              		.cfi_def_cfa_offset 16
 8872 34dc 415F     		pop	r15	#
 8873              		.cfi_def_cfa_offset 8
 8874              	.LBB435:
 8875              	.LBB432:
GAS LISTING /tmp/ccRwwoRx.s 			page 245


 8876              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8877              		.loc 3 107 10 view .LVU3025
 8878 34de E9000000 		jmp	__printf_chk@PLT	#
 8878      00
 8879              	.LVL435:
 8880              		.p2align 4,,7
 8881 34e3 0F1F4400 		.p2align 3
 8881      00
 8882              	.L720:
 8883              		.cfi_restore_state
 8884              		.loc 3 107 10 view .LVU3026
 8885              	.LBE432:
 8886              	.LBE435:
 8887              	.LBB436:
 927:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8888              		.loc 1 927 13 is_stmt 1 view .LVU3027
 8889              	.LBB418:
 8890              	.LBI410:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8891              		.loc 3 105 1 view .LVU3028
 8892              	.LBB412:
 8893              		.loc 3 107 3 view .LVU3029
 8894              	.LBE412:
 8895              	.LBE418:
 8896              	# sieve_extend.c:927:             printf("%3ju ",(uintmax_t)factor*2+1);
 927:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8897              		.loc 1 927 13 is_stmt 0 view .LVU3030
 8898 34e8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8898      01
 8899              	.LBB419:
 8900              	.LBB413:
 8901              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8902              		.loc 3 107 10 view .LVU3031
 8903 34ed BF010000 		mov	edi, 1	#,
 8903      00
 8904 34f2 31C0     		xor	eax, eax	#
 8905 34f4 488D3500 		lea	rsi, .LC4[rip]	#,
 8905      000000
 8906 34fb E8000000 		call	__printf_chk@PLT	#
 8906      00
 8907              	.LVL436:
 8908              		.loc 3 107 10 view .LVU3032
 8909              	.LBE413:
 8910              	.LBE419:
 928:sieve_extend.c ****         }
 8911              		.loc 1 928 13 is_stmt 1 view .LVU3033
 8912              	.LBB420:
 8913              	.LBB414:
 8914              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8915              		.loc 3 107 10 is_stmt 0 view .LVU3034
 8916 3500 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8917              	.LBE414:
 8918              	.LBE420:
 8919              	# sieve_extend.c:928:             if (primeCount % 10 == 0) printf("\n");
 928:sieve_extend.c ****         }
 8920              		.loc 1 928 16 view .LVU3035
 8921 3503 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
GAS LISTING /tmp/ccRwwoRx.s 			page 246


 8921      99999999 
 8921      9919
 8922              	.LBB421:
 8923              	.LBB415:
 8924              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8925              		.loc 3 107 10 view .LVU3036
 8926 350d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8927 3511 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8927      D001
 8928              	.LBE415:
 8929              	.LBE421:
 8930              	# sieve_extend.c:928:             if (primeCount % 10 == 0) printf("\n");
 928:sieve_extend.c ****         }
 8931              		.loc 1 928 16 view .LVU3037
 8932 3517 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8933 351a 760C     		jbe	.L693	#,
 8934              	.L718:
 8935 351c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.76_32(D)
 8936              	.LBB422:
 8937              	.LBB423:
 8938              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8939              		.loc 3 107 10 view .LVU3038
 8940 3520 E9C8FEFF 		jmp	.L692	#
 8940      FF
 8941              		.p2align 4,,7
 8942 3525 0F1F00   		.p2align 3
 8943              	.L693:
 8944              	.LBE423:
 8945              	.LBE422:
 928:sieve_extend.c ****         }
 8946              		.loc 1 928 39 is_stmt 1 view .LVU3039
 8947              	.LVL437:
 8948              	.LBB425:
 8949              	.LBI422:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8950              		.loc 3 105 1 view .LVU3040
 8951              	.LBB424:
 8952              		.loc 3 107 3 view .LVU3041
 8953              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8954              		.loc 3 107 10 is_stmt 0 view .LVU3042
 8955 3528 BF0A0000 		mov	edi, 10	#,
 8955      00
 8956 352d E8000000 		call	putchar@PLT	#
 8956      00
 8957              	.LVL438:
 8958 3532 EBE8     		jmp	.L718	#
 8959              	.LVL439:
 8960              	.L697:
 8961              		.loc 3 107 10 view .LVU3043
 8962              	.LBE424:
 8963              	.LBE425:
 8964              	.LBE436:
 8965              	# sieve_extend.c:923:     counter_t primeCount = 1;    // We already have 2
 923:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 8966              		.loc 1 923 15 view .LVU3044
 8967 3534 41BF0100 		mov	r15d, 1	# primeCount,
 8967      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 247


 8968 353a E97AFFFF 		jmp	.L691	#
 8968      FF
 8969              		.cfi_endproc
 8970              	.LFE100:
 8972 353f 90       		.p2align 4
 8974              	sieve_shake:
 8975              	.LVL440:
 8976              	.LFB79:
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8977              		.loc 1 881 88 is_stmt 1 view -0
 8978              		.cfi_startproc
 882:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 8979              		.loc 1 882 5 view .LVU3046
 8980              	# sieve_extend.c:881: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8981              		.loc 1 881 88 is_stmt 0 view .LVU3047
 8982 3540 4157     		push	r15	#
 8983              		.cfi_def_cfa_offset 16
 8984              		.cfi_offset 15, -16
 8985 3542 4156     		push	r14	#
 8986              		.cfi_def_cfa_offset 24
 8987              		.cfi_offset 14, -24
 8988 3544 4155     		push	r13	#
 8989              		.cfi_def_cfa_offset 32
 8990              		.cfi_offset 13, -32
 8991 3546 4154     		push	r12	#
 8992              		.cfi_def_cfa_offset 40
 8993              		.cfi_offset 12, -40
 8994 3548 55       		push	rbp	#
 8995              		.cfi_def_cfa_offset 48
 8996              		.cfi_offset 6, -48
 8997 3549 53       		push	rbx	#
 8998              		.cfi_def_cfa_offset 56
 8999              		.cfi_offset 3, -56
 9000 354a 4889FB   		mov	rbx, rdi	# maxints, tmp757
 9001              	.LVL441:
 9002              	.LBB481:
 9003              	.LBI481:
 103:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 9004              		.loc 1 103 24 is_stmt 1 view .LVU3048
 9005              	.LBB482:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9006              		.loc 1 104 5 view .LVU3049
 9007              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9008              		.loc 1 104 29 is_stmt 0 view .LVU3050
 9009 354d BF080000 		mov	edi, 8	#,
 9009      00
 9010              	.LVL442:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9011              		.loc 1 104 29 view .LVU3051
 9012              	.LBE482:
 9013              	.LBE481:
 9014              	# sieve_extend.c:881: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9015              		.loc 1 881 88 view .LVU3052
 9016 3552 488D6424 		lea	rsp, -88[rsp]	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 248


 9016      A8
 9017              		.cfi_def_cfa_offset 144
 9018              	.LBB486:
 9019              	.LBB483:
 9020              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9021              		.loc 1 105 86 view .LVU3053
 9022 3557 4989DE   		mov	r14, rbx	# prephitmp_814, maxints
 9023 355a 49D1EE   		shr	r14	# prephitmp_814
 9024              	.LBE483:
 9025              	.LBE486:
 9026              	# sieve_extend.c:881: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9027              		.loc 1 881 88 view .LVU3054
 9028 355d 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, tmp758
 9028      38
 9029              	.LBB487:
 9030              	.LBB484:
 9031              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9032              		.loc 1 104 29 view .LVU3055
 9033 3562 BE180000 		mov	esi, 24	#,
 9033      00
 9034              	.LVL443:
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9035              		.loc 1 104 29 view .LVU3056
 9036 3567 E8000000 		call	aligned_alloc@PLT	#
 9036      00
 9037              	.LVL444:
 9038              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9039              		.loc 1 105 86 view .LVU3057
 9040 356c 498DB600 		lea	rsi, 1024[r14]	# tmp379,
 9040      040000
 9041              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9042              		.loc 1 105 25 view .LVU3058
 9043 3573 BF800000 		mov	edi, 128	#,
 9043      00
 9044              	# sieve_extend.c:104:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 104:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 9045              		.loc 1 104 29 view .LVU3059
 9046 3578 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, <retval>
 9046      28
 9047 357d 4889C5   		mov	rbp, rax	# <retval>, tmp759
 9048              	.LVL445:
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9049              		.loc 1 105 5 is_stmt 1 view .LVU3060
 9050              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9051              		.loc 1 105 78 is_stmt 0 view .LVU3061
 9052 3580 48C1EE0A 		shr	rsi, 10	# tmp380,
 9053              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9054              		.loc 1 105 25 view .LVU3062
 9055 3584 48C1E607 		sal	rsi, 7	# tmp381,
 9056              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
GAS LISTING /tmp/ccRwwoRx.s 			page 249


 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9057              		.loc 1 105 86 view .LVU3063
 9058 3588 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_814
 9058      08
 9059              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9060              		.loc 1 105 25 view .LVU3064
 9061 358d E8000000 		call	aligned_alloc@PLT	#
 9061      00
 9062              	.LVL446:
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9063              		.loc 1 105 25 view .LVU3065
 9064              	.LBE484:
 9065              	.LBE487:
 9066              	.LBB488:
 9067              	.LBB489:
 9068              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9069              		.loc 1 852 5 view .LVU3066
 9070 3592 4D85F6   		test	r14, r14	# prephitmp_814
 9071              	.LBE489:
 9072              	.LBE488:
 9073              	.LBB567:
 9074              	.LBB485:
 9075              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9076              		.loc 1 105 25 view .LVU3067
 9077 3595 4989C7   		mov	r15, rax	# _96, tmp760
 9078              	# sieve_extend.c:105:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 105:sieve_extend.c ****     sieve->bits     = size >> 1;
 9079              		.loc 1 105 23 view .LVU3068
 9080 3598 48894500 		mov	QWORD PTR 0[rbp], rax	# sieve_91->bitstorage, _96
 106:sieve_extend.c ****     sieve->size     = size;
 9081              		.loc 1 106 5 is_stmt 1 view .LVU3069
 9082              	# sieve_extend.c:106:     sieve->bits     = size >> 1;
 106:sieve_extend.c ****     sieve->size     = size;
 9083              		.loc 1 106 21 is_stmt 0 view .LVU3070
 9084 359c 4C897508 		mov	QWORD PTR 8[rbp], r14	# sieve_91->bits, prephitmp_814
 107:sieve_extend.c ****     return sieve;
 9085              		.loc 1 107 5 is_stmt 1 view .LVU3071
 9086              	# sieve_extend.c:107:     sieve->size     = size;
 107:sieve_extend.c ****     return sieve;
 9087              		.loc 1 107 21 is_stmt 0 view .LVU3072
 9088 35a0 48895D10 		mov	QWORD PTR 16[rbp], rbx	# sieve_91->size, maxints
 108:sieve_extend.c **** }
 9089              		.loc 1 108 5 is_stmt 1 view .LVU3073
 9090              	.LVL447:
 108:sieve_extend.c **** }
 9091              		.loc 1 108 5 is_stmt 0 view .LVU3074
 9092              	.LBE485:
 9093              	.LBE567:
 883:sieve_extend.c **** 
 9094              		.loc 1 883 5 is_stmt 1 view .LVU3075
 885:sieve_extend.c **** 
 9095              		.loc 1 885 5 view .LVU3076
 888:sieve_extend.c ****     extendSieve(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 9096              		.loc 1 888 5 view .LVU3077
GAS LISTING /tmp/ccRwwoRx.s 			page 250


 9097              	.LBB568:
 9098              	.LBI488:
 842:sieve_extend.c ****     register counter_t prime   = 0;
 9099              		.loc 1 842 21 view .LVU3078
 9100              	.LBB560:
 843:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9101              		.loc 1 843 5 view .LVU3079
 844:sieve_extend.c ****     counter_t pattern_start    = 0;
 9102              		.loc 1 844 5 view .LVU3080
 845:sieve_extend.c ****     counter_t range_stop       = block_start;
 9103              		.loc 1 845 5 view .LVU3081
 846:sieve_extend.c ****     bitword_t* bitstorage        = sieve->bitstorage;
 9104              		.loc 1 846 5 view .LVU3082
 847:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9105              		.loc 1 847 5 view .LVU3083
 848:sieve_extend.c **** 
 9106              		.loc 1 848 5 view .LVU3084
 850:sieve_extend.c ****     
 9107              		.loc 1 850 5 view .LVU3085
 9108              	# sieve_extend.c:850:     sieve->bitstorage[0] = SAFE_ZERO; // only the first word has to be cleare
 850:sieve_extend.c ****     
 9109              		.loc 1 850 26 is_stmt 0 view .LVU3086
 9110 35a4 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_96],
 9110      000000
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9111              		.loc 1 852 5 is_stmt 1 view .LVU3087
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9112              		.loc 1 852 11 view .LVU3088
 9113              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9114              		.loc 1 852 5 is_stmt 0 view .LVU3089
 9115 35ab 0F844511 		je	.L1082	#,
 9115      0000
 9116              	# sieve_extend.c:844:     counter_t patternsize_bits = 1;
 844:sieve_extend.c ****     counter_t pattern_start    = 0;
 9117              		.loc 1 844 15 view .LVU3090
 9118 35b1 41BD0100 		mov	r13d, 1	# patternsize_bits,
 9118      0000
 9119              	# sieve_extend.c:848:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 848:sieve_extend.c **** 
 9120              		.loc 1 848 18 view .LVU3091
 9121 35b7 31F6     		xor	esi, esi	# block$pattern_start
 9122              	.LBB490:
 9123              	# sieve_extend.c:853:         prime = searchBitFalse(bitstorage, prime+1);
 853:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9124              		.loc 1 853 17 view .LVU3092
 9125 35b9 48C74424 		mov	QWORD PTR 16[rsp], 1	# %sfp,
 9125      10010000 
 9125      00
 9126              	.LBE490:
 9127              	# sieve_extend.c:848:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 848:sieve_extend.c **** 
 9128              		.loc 1 848 18 view .LVU3093
 9129 35c2 31D2     		xor	edx, edx	# block$pattern_size
 9130              	# sieve_extend.c:845:     counter_t pattern_start    = 0;
 845:sieve_extend.c ****     counter_t range_stop       = block_start;
 9131              		.loc 1 845 15 view .LVU3094
GAS LISTING /tmp/ccRwwoRx.s 			page 251


 9132 35c4 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 9132      18000000 
 9132      00
 9133              	# sieve_extend.c:843:     register counter_t prime   = 0;
 843:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9134              		.loc 1 843 24 view .LVU3095
 9135 35cd 31C9     		xor	ecx, ecx	# prime
 9136              	.LBB553:
 9137              	# sieve_extend.c:858:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 858:sieve_extend.c **** 
 9138              		.loc 1 858 102 view .LVU3096
 9139 35cf 4C892C24 		mov	QWORD PTR [rsp], r13	# %sfp, patternsize_bits
 9140 35d3 488B4424 		mov	rax, QWORD PTR 16[rsp]	# index, %sfp
 9140      10
 9141              	.LVL448:
 9142 35d8 0F1F8400 		.p2align 4
 9142      00000000 
 9143              		.p2align 3
 9144              	.L722:
 9145              	.LBB491:
 9146              	.LBB492:
 119:sieve_extend.c **** }
 9147              		.loc 1 119 5 is_stmt 1 view .LVU3097
 119:sieve_extend.c **** }
 9148              		.loc 1 119 5 is_stmt 0 view .LVU3098
 9149              	.LBE492:
 9150              	.LBE491:
 854:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9151              		.loc 1 854 9 is_stmt 1 view .LVU3099
 9152              	# sieve_extend.c:854:         counter_t start = prime * prime * 2 + prime * 2;
 854:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9153              		.loc 1 854 45 is_stmt 0 view .LVU3100
 9154 35e0 488D5801 		lea	rbx, 1[rax]	# index,
 9155 35e4 4C8D2400 		lea	r12, [rax+rax]	# _546,
 9156              	# sieve_extend.c:854:         counter_t start = prime * prime * 2 + prime * 2;
 854:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9157              		.loc 1 854 19 view .LVU3101
 9158 35e8 4889DD   		mov	rbp, rbx	# index, index
 9159 35eb 490FAFEC 		imul	rbp, r12	# index, _546
 9160              	.LVL449:
 855:sieve_extend.c **** 
 9161              		.loc 1 855 9 is_stmt 1 view .LVU3102
 9162              	# sieve_extend.c:855:         if unlikely(start > block_stop) break;
 855:sieve_extend.c **** 
 9163              		.loc 1 855 12 is_stmt 0 view .LVU3103
 9164 35ef 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9164      08
 9165 35f4 0F87D209 		ja	.L1083	#,
 9165      0000
 857:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9166              		.loc 1 857 9 is_stmt 1 view .LVU3104
 9167              	# sieve_extend.c:857:         const counter_t step  = prime * 2 + 1;
 857:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9168              		.loc 1 857 25 is_stmt 0 view .LVU3105
 9169 35fa 4983C401 		add	r12, 1	# step,
 9170              	.LVL450:
 858:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 252


 9171              		.loc 1 858 9 is_stmt 1 view .LVU3106
 9172              	# sieve_extend.c:858:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 858:sieve_extend.c **** 
 9173              		.loc 1 858 12 is_stmt 0 view .LVU3107
 9174 35fe 4885DB   		test	rbx, rbx	# index
 9175 3601 7516     		jne	.L728	#,
 858:sieve_extend.c **** 
 9176              		.loc 1 858 41 is_stmt 1 view .LVU3108
 9177              	# sieve_extend.c:858:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 858:sieve_extend.c **** 
 9178              		.loc 1 858 102 is_stmt 0 view .LVU3109
 9179 3603 48C7C0FF 		mov	rax, -1	# tmp400,
 9179      FFFFFF
 9180 360a 31D2     		xor	edx, edx	# tmp399
 9181 360c 49F7F4   		div	r12	# step
 9182              	# sieve_extend.c:858:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 858:sieve_extend.c **** 
 9183              		.loc 1 858 47 view .LVU3110
 9184 360f 48C7C5FE 		mov	rbp, -2	# tmp401,
 9184      FFFFFF
 9185              	.LVL451:
 858:sieve_extend.c **** 
 9186              		.loc 1 858 47 view .LVU3111
 9187 3616 4829D5   		sub	rbp, rdx	# index, tmp399
 9188              	.LVL452:
 9189              	.L728:
 860:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9190              		.loc 1 860 9 is_stmt 1 view .LVU3112
 9191              	# sieve_extend.c:860:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 860:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9192              		.loc 1 860 53 is_stmt 0 view .LVU3113
 9193 3619 488B3424 		mov	rsi, QWORD PTR [rsp]	# _66, %sfp
 9194 361d 490FAFF4 		imul	rsi, r12	# _66, step
 9195 3621 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, _66
 9195      30
 9196              	# sieve_extend.c:860:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 860:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9197              		.loc 1 860 60 view .LVU3114
 9198 3626 4C8D2C36 		lea	r13, [rsi+rsi]	# _67,
 9199              	.LVL453:
 861:sieve_extend.c ****         block.pattern_start = pattern_start;
 9200              		.loc 1 861 9 is_stmt 1 view .LVU3115
 862:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9201              		.loc 1 862 9 view .LVU3116
 863:sieve_extend.c **** 
 9202              		.loc 1 863 9 view .LVU3117
 9203              	# sieve_extend.c:863:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 863:sieve_extend.c **** 
 9204              		.loc 1 863 12 is_stmt 0 view .LVU3118
 9205 362a 4C3B6C24 		cmp	r13, QWORD PTR 8[rsp]	# _67, %sfp
 9205      08
 9206 362f 0F877810 		ja	.L1084	#,
 9206      0000
 865:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9207              		.loc 1 865 9 is_stmt 1 view .LVU3119
 9208              	# sieve_extend.c:865:         if (patternsize_bits>1) {
 865:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
GAS LISTING /tmp/ccRwwoRx.s 			page 253


 9209              		.loc 1 865 12 is_stmt 0 view .LVU3120
 9210 3635 4C8B0424 		mov	r8, QWORD PTR [rsp]	# patternsize_bits, %sfp
 9211 3639 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9211      18
 9212 363e 4983F801 		cmp	r8, 1	# patternsize_bits,
 9213 3642 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, pattern_start
 9213      20
 9214 3647 0F87A303 		ja	.L1085	#,
 9214      0000
 9215              	.L731:
 9216              	.LVL454:
 869:sieve_extend.c **** 
 9217              		.loc 1 869 9 is_stmt 1 view .LVU3121
 871:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 9218              		.loc 1 871 9 view .LVU3122
 9219              	# sieve_extend.c:871:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitstor
 871:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 9220              		.loc 1 871 17 is_stmt 0 view .LVU3123
 9221 364d 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9221      000000
 9222 3654 0F82E603 		jb	.L1086	#,
 9222      0000
 9223              	.L735:
 872:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 9224              		.loc 1 872 14 is_stmt 1 view .LVU3124
 9225              	# sieve_extend.c:872:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstor
 872:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 9226              		.loc 1 872 17 is_stmt 0 view .LVU3125
 9227 365a 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9227      000000
 9228 3661 0F828906 		jb	.L1087	#,
 9228      0000
 9229              	.L739:
 873:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9230              		.loc 1 873 9 is_stmt 1 view .LVU3126
 9231              	# sieve_extend.c:873:         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitst
 873:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9232              		.loc 1 873 12 is_stmt 0 view .LVU3127
 9233 3667 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 9233      000000
 9234 366e 0F830401 		jnb	.L758	#,
 9234      0000
 873:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9235              		.loc 1 873 43 is_stmt 1 view .LVU3128
 9236 3674 4C89E9   		mov	rcx, r13	#, _67
 9237 3677 4C89E2   		mov	rdx, r12	#, step
 9238 367a 4889EE   		mov	rsi, rbp	#, index
 9239 367d 4C89FF   		mov	rdi, r15	#, _96
 9240 3680 E85BDCFF 		call	setBitsTrue_largeRange_vector	#
 9240      FF
 9241              	.LVL455:
 9242              	.L759:
 873:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9243              		.loc 1 873 43 is_stmt 0 view .LVU3129
 9244              	.LBE553:
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9245              		.loc 1 852 11 is_stmt 1 view .LVU3130
GAS LISTING /tmp/ccRwwoRx.s 			page 254


 9246              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9247              		.loc 1 852 5 is_stmt 0 view .LVU3131
 9248 3685 4C3B6C24 		cmp	r13, QWORD PTR 8[rsp]	# _67, %sfp
 9248      08
 9249 368a 0F83EC02 		jnb	.L1088	#,
 9249      0000
 9250              	.LVL456:
 9251              	.L768:
 9252              	.LBB554:
 853:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9253              		.loc 1 853 9 is_stmt 1 view .LVU3132
 9254              	.LBB494:
 9255              	.LBI491:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 9256              		.loc 1 117 25 view .LVU3133
 9257              	.LBB493:
 118:sieve_extend.c ****     return index;
 9258              		.loc 1 118 5 view .LVU3134
 118:sieve_extend.c ****     return index;
 9259              		.loc 1 118 11 view .LVU3135
 9260              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9261              		.loc 1 118 23 is_stmt 0 view .LVU3136
 9262 3690 4989DE   		mov	r14, rbx	# tmp383, index
 9263 3693 49C1EE06 		shr	r14, 6	# tmp383,
 9264              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9265              		.loc 1 118 12 view .LVU3137
 9266 3697 4F8B1CF7 		mov	r11, QWORD PTR [r15+r14*8]	# *_78,* _96
 9267              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9268              		.loc 1 118 11 view .LVU3138
 9269 369b 490FA3DB 		bt	r11, rbx	# *_78, index
 9270 369f 0F83A300 		jnc	.L724	#,
 9270      0000
 118:sieve_extend.c ****     return index;
 9271              		.loc 1 118 60 is_stmt 1 view .LVU3139
 9272              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9273              		.loc 1 118 65 is_stmt 0 view .LVU3140
 9274 36a5 488D4B01 		lea	rcx, 1[rbx]	# tmp554,
 9275              	.LVL457:
 9276              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9277              		.loc 1 118 23 view .LVU3141
 9278 36a9 4889C8   		mov	rax, rcx	# tmp388, index
 9279              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9280              		.loc 1 118 65 view .LVU3142
 9281 36ac 4889CB   		mov	rbx, rcx	# index, tmp554
 118:sieve_extend.c ****     return index;
 9282              		.loc 1 118 11 is_stmt 1 view .LVU3143
 9283              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9284              		.loc 1 118 23 is_stmt 0 view .LVU3144
 9285 36af 48C1E806 		shr	rax, 6	# tmp388,
GAS LISTING /tmp/ccRwwoRx.s 			page 255


 9286              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9287              		.loc 1 118 12 view .LVU3145
 9288 36b3 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_47, *_47
 9289              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9290              		.loc 1 118 11 view .LVU3146
 9291 36b7 480FA3CE 		bt	rsi, rcx	# *_47, index
 9292 36bb 0F838700 		jnc	.L724	#,
 9292      0000
 118:sieve_extend.c ****     return index;
 9293              		.loc 1 118 60 is_stmt 1 view .LVU3147
 9294              	.LVL458:
 9295              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9296              		.loc 1 118 65 is_stmt 0 view .LVU3148
 9297 36c1 4883C301 		add	rbx, 1	# index,
 9298              	.LVL459:
 118:sieve_extend.c ****     return index;
 9299              		.loc 1 118 11 is_stmt 1 view .LVU3149
 9300              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9301              		.loc 1 118 23 is_stmt 0 view .LVU3150
 9302 36c5 4889DA   		mov	rdx, rbx	# tmp655, index
 9303 36c8 48C1EA06 		shr	rdx, 6	# tmp655,
 9304              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9305              		.loc 1 118 12 view .LVU3151
 9306 36cc 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_47, *_47
 9307              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9308              		.loc 1 118 11 view .LVU3152
 9309 36d0 490FA3DC 		bt	r12, rbx	# *_47, index
 9310 36d4 7372     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9311              		.loc 1 118 60 is_stmt 1 view .LVU3153
 9312              	.LVL460:
 9313              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9314              		.loc 1 118 65 is_stmt 0 view .LVU3154
 9315 36d6 488D5902 		lea	rbx, 2[rcx]	# index,
 9316              	.LVL461:
 118:sieve_extend.c ****     return index;
 9317              		.loc 1 118 11 is_stmt 1 view .LVU3155
 9318              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9319              		.loc 1 118 23 is_stmt 0 view .LVU3156
 9320 36da 4889DD   		mov	rbp, rbx	# tmp659, index
 9321 36dd 48C1ED06 		shr	rbp, 6	# tmp659,
 9322              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9323              		.loc 1 118 12 view .LVU3157
 9324 36e1 4D8B2CEF 		mov	r13, QWORD PTR [r15+rbp*8]	# *_47, *_47
 9325              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9326              		.loc 1 118 11 view .LVU3158
 9327 36e5 490FA3DD 		bt	r13, rbx	# *_47, index
GAS LISTING /tmp/ccRwwoRx.s 			page 256


 9328 36e9 735D     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9329              		.loc 1 118 60 is_stmt 1 view .LVU3159
 9330              	.LVL462:
 9331              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9332              		.loc 1 118 65 is_stmt 0 view .LVU3160
 9333 36eb 488D5903 		lea	rbx, 3[rcx]	# index,
 9334              	.LVL463:
 118:sieve_extend.c ****     return index;
 9335              		.loc 1 118 11 is_stmt 1 view .LVU3161
 9336              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9337              		.loc 1 118 23 is_stmt 0 view .LVU3162
 9338 36ef 4889DF   		mov	rdi, rbx	# tmp663, index
 9339 36f2 48C1EF06 		shr	rdi, 6	# tmp663,
 9340              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9341              		.loc 1 118 12 view .LVU3163
 9342 36f6 4D8B14FF 		mov	r10, QWORD PTR [r15+rdi*8]	# *_47, *_47
 9343              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9344              		.loc 1 118 11 view .LVU3164
 9345 36fa 490FA3DA 		bt	r10, rbx	# *_47, index
 9346 36fe 7348     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9347              		.loc 1 118 60 is_stmt 1 view .LVU3165
 9348              	.LVL464:
 9349              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9350              		.loc 1 118 65 is_stmt 0 view .LVU3166
 9351 3700 488D5904 		lea	rbx, 4[rcx]	# index,
 9352              	.LVL465:
 118:sieve_extend.c ****     return index;
 9353              		.loc 1 118 11 is_stmt 1 view .LVU3167
 9354              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9355              		.loc 1 118 23 is_stmt 0 view .LVU3168
 9356 3704 4989D8   		mov	r8, rbx	# tmp667, index
 9357 3707 49C1E806 		shr	r8, 6	# tmp667,
 9358              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9359              		.loc 1 118 12 view .LVU3169
 9360 370b 4F8B0CC7 		mov	r9, QWORD PTR [r15+r8*8]	# *_47, *_47
 9361              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9362              		.loc 1 118 11 view .LVU3170
 9363 370f 490FA3D9 		bt	r9, rbx	# *_47, index
 9364 3713 7333     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9365              		.loc 1 118 60 is_stmt 1 view .LVU3171
 9366              	.LVL466:
 9367              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9368              		.loc 1 118 65 is_stmt 0 view .LVU3172
 9369 3715 488D5905 		lea	rbx, 5[rcx]	# index,
 9370              	.LVL467:
GAS LISTING /tmp/ccRwwoRx.s 			page 257


 118:sieve_extend.c ****     return index;
 9371              		.loc 1 118 11 is_stmt 1 view .LVU3173
 9372              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9373              		.loc 1 118 23 is_stmt 0 view .LVU3174
 9374 3719 4989DE   		mov	r14, rbx	# tmp671, index
 9375 371c 49C1EE06 		shr	r14, 6	# tmp671,
 9376              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9377              		.loc 1 118 12 view .LVU3175
 9378 3720 4F8B1CF7 		mov	r11, QWORD PTR [r15+r14*8]	# *_47, *_47
 9379              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9380              		.loc 1 118 11 view .LVU3176
 9381 3724 490FA3DB 		bt	r11, rbx	# *_47, index
 9382 3728 731E     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9383              		.loc 1 118 60 is_stmt 1 view .LVU3177
 9384              	.LVL468:
 9385              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9386              		.loc 1 118 65 is_stmt 0 view .LVU3178
 9387 372a 488D5906 		lea	rbx, 6[rcx]	# index,
 9388              	.LVL469:
 118:sieve_extend.c ****     return index;
 9389              		.loc 1 118 11 is_stmt 1 view .LVU3179
 9390              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9391              		.loc 1 118 23 is_stmt 0 view .LVU3180
 9392 372e 4889D8   		mov	rax, rbx	# tmp675, index
 9393 3731 48C1E806 		shr	rax, 6	# tmp675,
 9394              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9395              		.loc 1 118 12 view .LVU3181
 9396 3735 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_47, *_47
 9397              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9398              		.loc 1 118 11 view .LVU3182
 9399 3739 480FA3DE 		bt	rsi, rbx	# *_47, index
 9400 373d 7309     		jnc	.L724	#,
 118:sieve_extend.c ****     return index;
 9401              		.loc 1 118 60 is_stmt 1 view .LVU3183
 9402              	.LVL470:
 9403              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 9404              		.loc 1 118 65 is_stmt 0 view .LVU3184
 9405 373f 488D5907 		lea	rbx, 7[rcx]	# index,
 9406              	.LVL471:
 118:sieve_extend.c ****     return index;
 9407              		.loc 1 118 11 is_stmt 1 view .LVU3185
 9408 3743 E948FFFF 		jmp	.L768	#
 9408      FF
 9409              	.LVL472:
 9410              		.p2align 4,,7
 9411              		.p2align 3
 9412              	.L724:
 118:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccRwwoRx.s 			page 258


 9413              		.loc 1 118 11 is_stmt 0 view .LVU3186
 9414              	.LBE493:
 9415              	.LBE494:
 9416              	.LBE554:
 9417              	.LBE560:
 9418              	.LBE568:
 9419              	# sieve_extend.c:881: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9420              		.loc 1 881 88 view .LVU3187
 9421 3748 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# pattern_start, %sfp
 9421      20
 9422 374d 4889D8   		mov	rax, rbx	# index, index
 9423 3750 4C8B6424 		mov	r12, QWORD PTR 48[rsp]	# _66, %sfp
 9423      30
 9424 3755 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9424      18
 9425              	.LVL473:
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9426              		.loc 1 881 88 view .LVU3188
 9427 375a 488B1424 		mov	rdx, QWORD PTR [rsp]	# block$pattern_size, %sfp
 9428              	.LVL474:
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9429              		.loc 1 881 88 view .LVU3189
 9430 375e 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, pattern_start
 9430      18
 9431 3763 4C892424 		mov	QWORD PTR [rsp], r12	# %sfp, _66
 9432 3767 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# prime, %sfp
 9432      10
 9433              	.LVL475:
 881:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9434              		.loc 1 881 88 view .LVU3190
 9435 376c 48895C24 		mov	QWORD PTR 16[rsp], rbx	# %sfp, index
 9435      10
 9436 3771 E96AFEFF 		jmp	.L722	#
 9436      FF
 9437              	.LVL476:
 9438              		.p2align 4,,7
 9439 3776 6690     		.p2align 3
 9440              	.L758:
 9441              	.LBB569:
 9442              	.LBB561:
 9443              	.LBB555:
 874:sieve_extend.c ****         block.prime = prime;
 9444              		.loc 1 874 43 is_stmt 1 view .LVU3191
 9445              	.LBB495:
 9446              	.LBI495:
 352:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9447              		.loc 1 352 20 view .LVU3192
 9448              	.LBB496:
 353:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9449              		.loc 1 353 5 view .LVU3193
 354:sieve_extend.c **** 
 9450              		.loc 1 354 5 view .LVU3194
 9451              	# sieve_extend.c:354:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 354:sieve_extend.c **** 
 9452              		.loc 1 354 74 is_stmt 0 view .LVU3195
 9453 3778 4D89E2   		mov	r10, r12	# tmp463, step
GAS LISTING /tmp/ccRwwoRx.s 			page 259


 9454 377b 49C1E206 		sal	r10, 6	# tmp463,
 9455              	# sieve_extend.c:354:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 354:sieve_extend.c **** 
 9456              		.loc 1 354 21 view .LVU3196
 9457 377f 4901EA   		add	r10, rbp	# range_stop_unique, index
 9458              	.LVL477:
 9459              	.LBB497:
 358:sieve_extend.c ****         #if __APPLE__
 9460              		.loc 1 358 10 is_stmt 1 view .LVU3197
 358:sieve_extend.c ****         #if __APPLE__
 9461              		.loc 1 358 50 view .LVU3198
 9462              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
 9463              		.loc 1 358 5 is_stmt 0 view .LVU3199
 9464 3782 4C39D5   		cmp	rbp, r10	# index, range_stop_unique
 9465 3785 0F83FAFE 		jnb	.L759	#,
 9465      FFFF
 9466              	.LBB498:
 9467              	.LBB499:
 9468              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9469              		.loc 1 168 20 view .LVU3200
 9470 378b 4D89EE   		mov	r14, r13	# range_stop_word, _67
 9471              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9472              		.loc 1 170 112 view .LVU3201
 9473 378e 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp466,
 9474              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9475              		.loc 1 168 20 view .LVU3202
 9476 3792 49C1EE06 		shr	r14, 6	# range_stop_word,
 9477              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 9478              		.loc 1 188 29 view .LVU3203
 9479 3796 4589E9   		mov	r9d, r13d	# tmp468, _67
 9480              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9481              		.loc 1 170 135 view .LVU3204
 9482 3799 4D89F3   		mov	r11, r14	# tmp472, range_stop_word
 9483              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 9484              		.loc 1 188 29 view .LVU3205
 9485 379c 41F7D1   		not	r9d	# tmp468
 9486              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9487              		.loc 1 170 135 view .LVU3206
 9488 379f 4929FB   		sub	r11, rdi	# tmp472, tmp466
 9489              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9490              		.loc 1 170 53 view .LVU3207
 9491 37a2 4939FE   		cmp	r14, rdi	# range_stop_word, tmp466
 9492              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 9493              		.loc 1 188 29 view .LVU3208
 9494 37a5 48C7C6FF 		mov	rsi, -1	# tmp1026,
 9494      FFFFFF
 9495              	# sieve_extend.c:182:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
GAS LISTING /tmp/ccRwwoRx.s 			page 260


 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9496              		.loc 1 182 41 view .LVU3209
 9497 37ac 4F8D04F7 		lea	r8, [r15+r14*8]	# range_stop_ptr,
 9498              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 9499              		.loc 1 188 29 view .LVU3210
 9500 37b0 C4E2B3F7 		shrx	rax, rsi, r9	# _285, tmp1026, tmp468
 9500      C6
 9501 37b5 4D89E6   		mov	r14, r12	# _785, step
 9502              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9503              		.loc 1 170 53 view .LVU3211
 9504 37b8 4F8D0CDF 		lea	r9, [r15+r11*8]	# tmp474,
 9505              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9506              		.loc 1 175 44 view .LVU3212
 9507 37bc 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _253,
 9507      00000000 
 9508              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 9509              		.loc 1 188 29 view .LVU3213
 9510 37c4 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _285
 9510      40
 9511              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 9512              		.loc 1 170 53 view .LVU3214
 9513 37c9 4D0F46CF 		cmovbe	r9, r15	# _96,, fast_loop_ptr
 9514 37cd 48C1E703 		sal	rdi, 3	# tmp478,
 9515              	.LBE499:
 9516              	.LBE498:
 9517              	# sieve_extend.c:362:             applyMask_ptr(bitstorage, step, range_stop, markmask(index), word
 362:sieve_extend.c ****         #endif
 9518              		.loc 1 362 13 view .LVU3215
 9519 37d1 41BB0100 		mov	r11d, 1	# tmp480,
 9519      0000
 9520 37d7 49C1E604 		sal	r14, 4	# _785,
 9521              	.LVL478:
 9522 37db 0F1F4400 		.p2align 4
 9522      00
 9523              		.p2align 3
 9524              	.L766:
 362:sieve_extend.c ****         #endif
 9525              		.loc 1 362 13 is_stmt 1 view .LVU3216
 9526 37e0 4889EE   		mov	rsi, rbp	# tmp481, index
 9527 37e3 C4C2D1F7 		shlx	rcx, r11, rbp	# _238, tmp480, index
 9527      CB
 9528              	.LVL479:
 9529              	.LBB503:
 9530              	.LBI498:
 167:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9531              		.loc 1 167 20 view .LVU3217
 9532              	.LBB500:
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9533              		.loc 1 168 4 view .LVU3218
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9534              		.loc 1 169 4 view .LVU3219
 9535              	.LBE500:
GAS LISTING /tmp/ccRwwoRx.s 			page 261


 9536              	.LBE503:
 9537              	# sieve_extend.c:362:             applyMask_ptr(bitstorage, step, range_stop, markmask(index), word
 362:sieve_extend.c ****         #endif
 9538              		.loc 1 362 13 is_stmt 0 view .LVU3220
 9539 37e8 48C1EE06 		shr	rsi, 6	# tmp481,
 9540              	.LVL480:
 9541              	.LBB504:
 9542              	.LBB501:
 9543              	# sieve_extend.c:169:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9544              		.loc 1 169 78 view .LVU3221
 9545 37ec 498D04F7 		lea	rax, [r15+rsi*8]	# index_ptr,
 9546              	.LVL481:
 170:sieve_extend.c **** 
 9547              		.loc 1 170 4 is_stmt 1 view .LVU3222
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9548              		.loc 1 174 10 view .LVU3223
 9549 37f0 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 9550 37f3 0F830701 		jnb	.L761	#,
 9550      0000
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9551              		.loc 1 174 10 is_stmt 0 view .LVU3224
 9552 37f9 4A8D3430 		lea	rsi, [rax+r14]	# ivtmp.552,
 9553              	.LVL482:
 9554              	.L762:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9555              		.loc 1 175 8 is_stmt 1 view .LVU3225
 9556              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9557              		.loc 1 175 19 is_stmt 0 view .LVU3226
 9558 37fd 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9559              		.loc 1 175 35 is_stmt 1 view .LVU3227
 9560              	.LVL483:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9561              		.loc 1 176 8 view .LVU3228
 9562              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9563              		.loc 1 176 19 is_stmt 0 view .LVU3229
 9564 3800 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9565              		.loc 1 176 35 is_stmt 1 view .LVU3230
 9566              	.LVL484:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9567              		.loc 1 177 8 view .LVU3231
 9568              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9569              		.loc 1 177 19 is_stmt 0 view .LVU3232
 9570 3804 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9571              		.loc 1 177 35 is_stmt 1 view .LVU3233
 9572              	.LVL485:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9573              		.loc 1 178 8 view .LVU3234
 9574              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9575              		.loc 1 178 19 is_stmt 0 view .LVU3235
GAS LISTING /tmp/ccRwwoRx.s 			page 262


 9576 3807 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9577              		.loc 1 178 35 is_stmt 1 view .LVU3236
 9578              	.LVL486:
 179:sieve_extend.c ****    }
 9579              		.loc 1 179 8 view .LVU3237
 9580 380b 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9581              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9582              		.loc 1 179 19 is_stmt 0 view .LVU3238
 9583 380e 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9584              		.loc 1 179 35 is_stmt 1 view .LVU3239
 9585 3812 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9586              	.LVL487:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9587              		.loc 1 174 10 view .LVU3240
 9588 3815 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9589 3818 0F86E200 		jbe	.L761	#,
 9589      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9590              		.loc 1 175 8 view .LVU3241
 9591              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9592              		.loc 1 175 19 is_stmt 0 view .LVU3242
 9593 381e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9594              		.loc 1 175 35 is_stmt 1 view .LVU3243
 9595              	.LVL488:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9596              		.loc 1 176 8 view .LVU3244
 9597              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9598              		.loc 1 176 19 is_stmt 0 view .LVU3245
 9599 3821 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9600              		.loc 1 176 35 is_stmt 1 view .LVU3246
 9601              	.LVL489:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9602              		.loc 1 177 8 view .LVU3247
 9603              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9604              		.loc 1 177 19 is_stmt 0 view .LVU3248
 9605 3825 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9606              		.loc 1 177 35 is_stmt 1 view .LVU3249
 9607              	.LVL490:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9608              		.loc 1 178 8 view .LVU3250
 9609              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9610              		.loc 1 178 19 is_stmt 0 view .LVU3251
 9611 3828 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9612              		.loc 1 178 35 is_stmt 1 view .LVU3252
 9613              	.LVL491:
 179:sieve_extend.c ****    }
GAS LISTING /tmp/ccRwwoRx.s 			page 263


 9614              		.loc 1 179 8 view .LVU3253
 9615 382c 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9616              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9617              		.loc 1 179 19 is_stmt 0 view .LVU3254
 9618 382f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9619              		.loc 1 179 35 is_stmt 1 view .LVU3255
 9620 3833 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9621              	.LVL492:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9622              		.loc 1 174 10 view .LVU3256
 9623 3836 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9624 3839 0F86C100 		jbe	.L761	#,
 9624      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9625              		.loc 1 175 8 view .LVU3257
 9626              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9627              		.loc 1 175 19 is_stmt 0 view .LVU3258
 9628 383f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9629              		.loc 1 175 35 is_stmt 1 view .LVU3259
 9630              	.LVL493:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9631              		.loc 1 176 8 view .LVU3260
 9632              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9633              		.loc 1 176 19 is_stmt 0 view .LVU3261
 9634 3842 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9635              		.loc 1 176 35 is_stmt 1 view .LVU3262
 9636              	.LVL494:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9637              		.loc 1 177 8 view .LVU3263
 9638              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9639              		.loc 1 177 19 is_stmt 0 view .LVU3264
 9640 3846 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9641              		.loc 1 177 35 is_stmt 1 view .LVU3265
 9642              	.LVL495:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9643              		.loc 1 178 8 view .LVU3266
 9644              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9645              		.loc 1 178 19 is_stmt 0 view .LVU3267
 9646 3849 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9647              		.loc 1 178 35 is_stmt 1 view .LVU3268
 9648              	.LVL496:
 179:sieve_extend.c ****    }
 9649              		.loc 1 179 8 view .LVU3269
 9650 384d 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9651              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9652              		.loc 1 179 19 is_stmt 0 view .LVU3270
GAS LISTING /tmp/ccRwwoRx.s 			page 264


 9653 3850 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9654              		.loc 1 179 35 is_stmt 1 view .LVU3271
 9655 3854 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9656              	.LVL497:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9657              		.loc 1 174 10 view .LVU3272
 9658 3857 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9659 385a 0F86A000 		jbe	.L761	#,
 9659      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9660              		.loc 1 175 8 view .LVU3273
 9661              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9662              		.loc 1 175 19 is_stmt 0 view .LVU3274
 9663 3860 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9664              		.loc 1 175 35 is_stmt 1 view .LVU3275
 9665              	.LVL498:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9666              		.loc 1 176 8 view .LVU3276
 9667              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9668              		.loc 1 176 19 is_stmt 0 view .LVU3277
 9669 3863 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9670              		.loc 1 176 35 is_stmt 1 view .LVU3278
 9671              	.LVL499:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9672              		.loc 1 177 8 view .LVU3279
 9673              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9674              		.loc 1 177 19 is_stmt 0 view .LVU3280
 9675 3867 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9676              		.loc 1 177 35 is_stmt 1 view .LVU3281
 9677              	.LVL500:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9678              		.loc 1 178 8 view .LVU3282
 9679              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9680              		.loc 1 178 19 is_stmt 0 view .LVU3283
 9681 386a 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9682              		.loc 1 178 35 is_stmt 1 view .LVU3284
 9683              	.LVL501:
 179:sieve_extend.c ****    }
 9684              		.loc 1 179 8 view .LVU3285
 9685 386e 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9686              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9687              		.loc 1 179 19 is_stmt 0 view .LVU3286
 9688 3871 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9689              		.loc 1 179 35 is_stmt 1 view .LVU3287
 9690 3875 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9691              	.LVL502:
GAS LISTING /tmp/ccRwwoRx.s 			page 265


 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9692              		.loc 1 174 10 view .LVU3288
 9693 3878 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9694 387b 0F867F00 		jbe	.L761	#,
 9694      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9695              		.loc 1 175 8 view .LVU3289
 9696              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9697              		.loc 1 175 19 is_stmt 0 view .LVU3290
 9698 3881 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9699              		.loc 1 175 35 is_stmt 1 view .LVU3291
 9700              	.LVL503:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9701              		.loc 1 176 8 view .LVU3292
 9702              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9703              		.loc 1 176 19 is_stmt 0 view .LVU3293
 9704 3884 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9705              		.loc 1 176 35 is_stmt 1 view .LVU3294
 9706              	.LVL504:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9707              		.loc 1 177 8 view .LVU3295
 9708              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9709              		.loc 1 177 19 is_stmt 0 view .LVU3296
 9710 3888 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9711              		.loc 1 177 35 is_stmt 1 view .LVU3297
 9712              	.LVL505:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9713              		.loc 1 178 8 view .LVU3298
 9714              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9715              		.loc 1 178 19 is_stmt 0 view .LVU3299
 9716 388b 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9717              		.loc 1 178 35 is_stmt 1 view .LVU3300
 9718              	.LVL506:
 179:sieve_extend.c ****    }
 9719              		.loc 1 179 8 view .LVU3301
 9720 388f 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9721              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9722              		.loc 1 179 19 is_stmt 0 view .LVU3302
 9723 3892 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9724              		.loc 1 179 35 is_stmt 1 view .LVU3303
 9725 3896 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9726              	.LVL507:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9727              		.loc 1 174 10 view .LVU3304
 9728 3899 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9729 389c 7662     		jbe	.L761	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 266


 9730              		.loc 1 175 8 view .LVU3305
 9731              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9732              		.loc 1 175 19 is_stmt 0 view .LVU3306
 9733 389e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9734              		.loc 1 175 35 is_stmt 1 view .LVU3307
 9735              	.LVL508:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9736              		.loc 1 176 8 view .LVU3308
 9737              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9738              		.loc 1 176 19 is_stmt 0 view .LVU3309
 9739 38a1 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9740              		.loc 1 176 35 is_stmt 1 view .LVU3310
 9741              	.LVL509:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9742              		.loc 1 177 8 view .LVU3311
 9743              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9744              		.loc 1 177 19 is_stmt 0 view .LVU3312
 9745 38a5 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9746              		.loc 1 177 35 is_stmt 1 view .LVU3313
 9747              	.LVL510:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9748              		.loc 1 178 8 view .LVU3314
 9749              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9750              		.loc 1 178 19 is_stmt 0 view .LVU3315
 9751 38a8 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9752              		.loc 1 178 35 is_stmt 1 view .LVU3316
 9753              	.LVL511:
 179:sieve_extend.c ****    }
 9754              		.loc 1 179 8 view .LVU3317
 9755 38ac 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9756              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9757              		.loc 1 179 19 is_stmt 0 view .LVU3318
 9758 38af 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9759              		.loc 1 179 35 is_stmt 1 view .LVU3319
 9760 38b3 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9761              	.LVL512:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9762              		.loc 1 174 10 view .LVU3320
 9763 38b6 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9764 38b9 7645     		jbe	.L761	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9765              		.loc 1 175 8 view .LVU3321
 9766              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9767              		.loc 1 175 19 is_stmt 0 view .LVU3322
 9768 38bb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 267


 9769              		.loc 1 175 35 is_stmt 1 view .LVU3323
 9770              	.LVL513:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9771              		.loc 1 176 8 view .LVU3324
 9772              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9773              		.loc 1 176 19 is_stmt 0 view .LVU3325
 9774 38be 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9775              		.loc 1 176 35 is_stmt 1 view .LVU3326
 9776              	.LVL514:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9777              		.loc 1 177 8 view .LVU3327
 9778              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9779              		.loc 1 177 19 is_stmt 0 view .LVU3328
 9780 38c2 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9781              		.loc 1 177 35 is_stmt 1 view .LVU3329
 9782              	.LVL515:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9783              		.loc 1 178 8 view .LVU3330
 9784              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9785              		.loc 1 178 19 is_stmt 0 view .LVU3331
 9786 38c5 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9787              		.loc 1 178 35 is_stmt 1 view .LVU3332
 9788              	.LVL516:
 179:sieve_extend.c ****    }
 9789              		.loc 1 179 8 view .LVU3333
 9790 38c9 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9791              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9792              		.loc 1 179 19 is_stmt 0 view .LVU3334
 9793 38cc 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9794              		.loc 1 179 35 is_stmt 1 view .LVU3335
 9795 38d0 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9796              	.LVL517:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9797              		.loc 1 174 10 view .LVU3336
 9798 38d3 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9799 38d6 7628     		jbe	.L761	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9800              		.loc 1 175 8 view .LVU3337
 9801              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9802              		.loc 1 175 19 is_stmt 0 view .LVU3338
 9803 38d8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _238
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9804              		.loc 1 175 35 is_stmt 1 view .LVU3339
 9805              	.LVL518:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9806              		.loc 1 176 8 view .LVU3340
 9807              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 268


 9808              		.loc 1 176 19 is_stmt 0 view .LVU3341
 9809 38db 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _253, offset: 0B], _238
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9810              		.loc 1 176 35 is_stmt 1 view .LVU3342
 9811              	.LVL519:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9812              		.loc 1 177 8 view .LVU3343
 9813              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9814              		.loc 1 177 19 is_stmt 0 view .LVU3344
 9815 38df 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _774, offset: 0B], _238
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9816              		.loc 1 177 35 is_stmt 1 view .LVU3345
 9817              	.LVL520:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9818              		.loc 1 178 8 view .LVU3346
 9819              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9820              		.loc 1 178 19 is_stmt 0 view .LVU3347
 9821 38e2 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _774, index: _253, offset: 0B], _238
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9822              		.loc 1 178 35 is_stmt 1 view .LVU3348
 9823              	.LVL521:
 179:sieve_extend.c ****    }
 9824              		.loc 1 179 8 view .LVU3349
 9825 38e6 4801FE   		add	rsi, rdi	# ivtmp.552, tmp478
 9826              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 9827              		.loc 1 179 19 is_stmt 0 view .LVU3350
 9828 38e9 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _253, step: 4, offset: 0B], _238
 179:sieve_extend.c ****    }
 9829              		.loc 1 179 35 is_stmt 1 view .LVU3351
 9830 38ed 4801F8   		add	rax, rdi	# index_ptr, tmp478
 9831              	.LVL522:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9832              		.loc 1 174 10 view .LVU3352
 9833 38f0 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9834 38f3 0F8704FF 		ja	.L762	#,
 9834      FFFF
 9835 38f9 0F1F8000 		.p2align 4
 9835      000000
 9836              		.p2align 3
 9837              	.L761:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9838              		.loc 1 182 4 view .LVU3353
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9839              		.loc 1 183 4 view .LVU3354
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9840              		.loc 1 183 10 view .LVU3355
 9841 3900 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9842 3903 765B     		jbe	.L763	#,
 9843              	.L764:
 184:sieve_extend.c ****    }
 9844              		.loc 1 184 8 view .LVU3356
 9845              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9846              		.loc 1 184 19 is_stmt 0 view .LVU3357
GAS LISTING /tmp/ccRwwoRx.s 			page 269


 9847 3905 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9848              		.loc 1 184 34 is_stmt 1 view .LVU3358
 9849              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9850              		.loc 1 184 43 is_stmt 0 view .LVU3359
 9851 3908 4801D0   		add	rax, rdx	# index_ptr, _253
 9852              	.LVL523:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9853              		.loc 1 183 10 is_stmt 1 view .LVU3360
 9854 390b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9855 390e 7650     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9856              		.loc 1 184 8 view .LVU3361
 9857              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9858              		.loc 1 184 19 is_stmt 0 view .LVU3362
 9859 3910 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9860              		.loc 1 184 34 is_stmt 1 view .LVU3363
 9861              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9862              		.loc 1 184 43 is_stmt 0 view .LVU3364
 9863 3913 4801D0   		add	rax, rdx	# index_ptr, _253
 9864              	.LVL524:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9865              		.loc 1 183 10 is_stmt 1 view .LVU3365
 9866 3916 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9867 3919 7645     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9868              		.loc 1 184 8 view .LVU3366
 9869              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9870              		.loc 1 184 19 is_stmt 0 view .LVU3367
 9871 391b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9872              		.loc 1 184 34 is_stmt 1 view .LVU3368
 9873              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9874              		.loc 1 184 43 is_stmt 0 view .LVU3369
 9875 391e 4801D0   		add	rax, rdx	# index_ptr, _253
 9876              	.LVL525:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9877              		.loc 1 183 10 is_stmt 1 view .LVU3370
 9878 3921 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9879 3924 763A     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9880              		.loc 1 184 8 view .LVU3371
 9881              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9882              		.loc 1 184 19 is_stmt 0 view .LVU3372
 9883 3926 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9884              		.loc 1 184 34 is_stmt 1 view .LVU3373
 9885              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9886              		.loc 1 184 43 is_stmt 0 view .LVU3374
GAS LISTING /tmp/ccRwwoRx.s 			page 270


 9887 3929 4801D0   		add	rax, rdx	# index_ptr, _253
 9888              	.LVL526:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9889              		.loc 1 183 10 is_stmt 1 view .LVU3375
 9890 392c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9891 392f 762F     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9892              		.loc 1 184 8 view .LVU3376
 9893              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9894              		.loc 1 184 19 is_stmt 0 view .LVU3377
 9895 3931 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9896              		.loc 1 184 34 is_stmt 1 view .LVU3378
 9897              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9898              		.loc 1 184 43 is_stmt 0 view .LVU3379
 9899 3934 4801D0   		add	rax, rdx	# index_ptr, _253
 9900              	.LVL527:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9901              		.loc 1 183 10 is_stmt 1 view .LVU3380
 9902 3937 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9903 393a 7624     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9904              		.loc 1 184 8 view .LVU3381
 9905              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9906              		.loc 1 184 19 is_stmt 0 view .LVU3382
 9907 393c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9908              		.loc 1 184 34 is_stmt 1 view .LVU3383
 9909              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9910              		.loc 1 184 43 is_stmt 0 view .LVU3384
 9911 393f 4801D0   		add	rax, rdx	# index_ptr, _253
 9912              	.LVL528:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9913              		.loc 1 183 10 is_stmt 1 view .LVU3385
 9914 3942 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9915 3945 7619     		jbe	.L763	#,
 184:sieve_extend.c ****    }
 9916              		.loc 1 184 8 view .LVU3386
 9917              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9918              		.loc 1 184 19 is_stmt 0 view .LVU3387
 9919 3947 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9920              		.loc 1 184 34 is_stmt 1 view .LVU3388
 9921              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9922              		.loc 1 184 43 is_stmt 0 view .LVU3389
 9923 394a 4801D0   		add	rax, rdx	# index_ptr, _253
 9924              	.LVL529:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9925              		.loc 1 183 10 is_stmt 1 view .LVU3390
 9926 394d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9927 3950 760E     		jbe	.L763	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 271


 184:sieve_extend.c ****    }
 9928              		.loc 1 184 8 view .LVU3391
 9929              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9930              		.loc 1 184 19 is_stmt 0 view .LVU3392
 9931 3952 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_517, offset: 0B], _238
 184:sieve_extend.c ****    }
 9932              		.loc 1 184 34 is_stmt 1 view .LVU3393
 9933              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 9934              		.loc 1 184 43 is_stmt 0 view .LVU3394
 9935 3955 4801D0   		add	rax, rdx	# index_ptr, _253
 9936              	.LVL530:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9937              		.loc 1 183 10 is_stmt 1 view .LVU3395
 9938 3958 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9939 395b 77A8     		ja	.L764	#,
 9940 395d 0F1F00   		.p2align 4
 9941              		.p2align 3
 9942              	.L763:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9943              		.loc 1 187 4 view .LVU3396
 9944              	# sieve_extend.c:187:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9945              		.loc 1 187 7 is_stmt 0 view .LVU3397
 9946 3960 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9947 3963 747B     		je	.L1089	#,
 9948              	.LVL531:
 9949              	.L765:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9950              		.loc 1 187 7 view .LVU3398
 9951              	.LBE501:
 9952              	.LBE504:
 358:sieve_extend.c ****         #if __APPLE__
 9953              		.loc 1 358 77 is_stmt 1 view .LVU3399
 9954              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
 9955              		.loc 1 358 83 is_stmt 0 view .LVU3400
 9956 3965 4C01E5   		add	rbp, r12	# index, step
 9957              	.LVL532:
 358:sieve_extend.c ****         #if __APPLE__
 9958              		.loc 1 358 50 is_stmt 1 view .LVU3401
 9959              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
 9960              		.loc 1 358 5 is_stmt 0 view .LVU3402
 9961 3968 4939EA   		cmp	r10, rbp	# range_stop_unique, index
 9962 396b 0F876FFE 		ja	.L766	#,
 9962      FFFF
 9963              	.LVL533:
 358:sieve_extend.c ****         #if __APPLE__
 9964              		.loc 1 358 5 view .LVU3403
 9965              	.LBE497:
 9966              	.LBE496:
 9967              	.LBE495:
 9968              	.LBE555:
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9969              		.loc 1 852 11 is_stmt 1 view .LVU3404
GAS LISTING /tmp/ccRwwoRx.s 			page 272


 9970              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9971              		.loc 1 852 5 is_stmt 0 view .LVU3405
 9972 3971 4C3B6C24 		cmp	r13, QWORD PTR 8[rsp]	# _67, %sfp
 9972      08
 9973 3976 0F8214FD 		jb	.L768	#,
 9973      FFFF
 9974              	.L1088:
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9975              		.loc 1 852 5 view .LVU3406
 9976 397c 488B5C24 		mov	rbx, QWORD PTR 16[rsp]	# index, %sfp
 9976      10
 9977 3981 41BD0100 		mov	r13d, 1	# tmp485,
 9977      0000
 9978              	.LVL534:
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9979              		.loc 1 852 5 view .LVU3407
 9980 3987 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# <retval>, %sfp
 9980      28
 9981              	.LVL535:
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9982              		.loc 1 852 5 view .LVU3408
 9983 398c 488B1424 		mov	rdx, QWORD PTR [rsp]	# patternsize_bits, %sfp
 9984 3990 4989D8   		mov	r8, rbx	# tmp486, index
 9985 3993 89DF     		mov	edi, ebx	# tmp1035, index
 9986 3995 498B6C24 		mov	rbp, QWORD PTR 8[r12]	# prephitmp_814, sieve_91->bits
 9986      08
 9987 399a C442C1F7 		shlx	r10, r13, rdi	# prephitmp_716, tmp485, tmp1035
 9987      D5
 9988 399f 49C1E806 		shr	r8, 6	# tmp486,
 9989              	.LBE561:
 9990              	.LBE569:
 9991              	.LBB570:
 9992              	.LBB571:
 9993              	# sieve_extend.c:792:     if (size < WORD_SIZE_counter)   {
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 9994              		.loc 1 792 8 view .LVU3409
 9995 39a3 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9996 39a7 4C895424 		mov	QWORD PTR 48[rsp], r10	# %sfp, prephitmp_716
 9996      30
 9997              	.LVL536:
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 9998              		.loc 1 792 8 view .LVU3410
 9999 39ac 4F8D0CC7 		lea	r9, [r15+r8*8]	# prephitmp_714,
 10000 39b0 48896C24 		mov	QWORD PTR 8[rsp], rbp	# %sfp, prephitmp_814
 10000      08
 10001              	.LVL537:
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 10002              		.loc 1 792 8 view .LVU3411
 10003              	.LBE571:
 10004              	.LBE570:
 10005              	.LBB576:
 10006              	.LBB562:
 10007              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 10008              		.loc 1 852 5 view .LVU3412
 10009 39b5 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 273


 10009      18
 10010 39ba 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, index
 10010      40
 878:sieve_extend.c **** }
 10011              		.loc 1 878 5 is_stmt 1 view .LVU3413
 10012              	.LVL538:
 878:sieve_extend.c **** }
 10013              		.loc 1 878 5 is_stmt 0 view .LVU3414
 10014              	.LBE562:
 10015              	.LBE576:
 889:sieve_extend.c ****     counter_t startprime = block.prime;
 10016              		.loc 1 889 5 is_stmt 1 view .LVU3415
 10017              	.LBB577:
 10018              	.LBI570:
 791:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10019              		.loc 1 791 20 view .LVU3416
 10020              	.LBB572:
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 10021              		.loc 1 792 5 view .LVU3417
 10022 39bf 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, prephitmp_714
 10022      20
 10023              	# sieve_extend.c:792:     if (size < WORD_SIZE_counter)   {
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 10024              		.loc 1 792 8 is_stmt 0 view .LVU3418
 10025 39c4 0F873E06 		ja	.L769	#,
 10025      0000
 10026              	.LVL539:
 10027              	.L723:
 793:sieve_extend.c ****         return; // rapid exit for small sizes
 10028              		.loc 1 793 9 is_stmt 1 view .LVU3419
 10029 39ca 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10029      08
 10030 39cf 4C89FF   		mov	rdi, r15	#, _96
 10031 39d2 E829C6FF 		call	extendSieve_smallSize	#
 10031      FF
 10032              	.LVL540:
 794:sieve_extend.c ****     }
 10033              		.loc 1 794 9 view .LVU3420
 10034 39d7 E9560600 		jmp	.L770	#
 10034      00
 10035              	.LVL541:
 10036 39dc 0F1F4000 		.p2align 4,,7
 10037              		.p2align 3
 10038              	.L1089:
 794:sieve_extend.c ****     }
 10039              		.loc 1 794 9 is_stmt 0 view .LVU3421
 10040              	.LBE572:
 10041              	.LBE577:
 10042              	.LBB578:
 10043              	.LBB563:
 10044              	.LBB556:
 10045              	.LBB508:
 10046              	.LBB507:
 10047              	.LBB506:
 10048              	.LBB505:
 10049              	.LBB502:
 188:sieve_extend.c ****    }
GAS LISTING /tmp/ccRwwoRx.s 			page 274


 10050              		.loc 1 188 7 is_stmt 1 view .LVU3422
 10051              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10052              		.loc 1 188 27 is_stmt 0 view .LVU3423
 10053 39e0 48234C24 		and	rcx, QWORD PTR 64[rsp]	# tmp483, %sfp
 10053      40
 10054              	.LVL542:
 10055              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10056              		.loc 1 188 18 view .LVU3424
 10057 39e5 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_515, tmp483
 10058 39e8 E978FFFF 		jmp	.L765	#
 10058      FF
 10059              	.LVL543:
 10060 39ed 0F1F00   		.p2align 4,,7
 10061              		.p2align 3
 10062              	.L1085:
 188:sieve_extend.c ****    }
 10063              		.loc 1 188 18 view .LVU3425
 10064              	.LBE502:
 10065              	.LBE505:
 10066              	.LBE506:
 10067              	.LBE507:
 10068              	.LBE508:
 866:sieve_extend.c ****             extendSieve(bitstorage, pattern_start, patternsize_bits, range_stop);
 10069              		.loc 1 866 13 is_stmt 1 view .LVU3426
 867:sieve_extend.c ****         }
 10070              		.loc 1 867 13 view .LVU3427
 10071              	.LBB509:
 10072              	.LBI509:
 791:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10073              		.loc 1 791 20 view .LVU3428
 10074              	.LBB510:
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 10075              		.loc 1 792 5 view .LVU3429
 10076              	# sieve_extend.c:792:     if (size < WORD_SIZE_counter)   {
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 10077              		.loc 1 792 8 is_stmt 0 view .LVU3430
 10078 39f0 4983F83F 		cmp	r8, 63	# patternsize_bits,
 10079 39f4 0F868B0C 		jbe	.L1090	#,
 10079      0000
 10080              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10081              		.loc 1 801 37 view .LVU3431
 10082 39fa 4C8B3424 		mov	r14, QWORD PTR [rsp]	# patternsize_bits, %sfp
 10083 39fe 4C89C2   		mov	rdx, r8	# patternsize_bits, patternsize_bits
 797:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10084              		.loc 1 797 5 is_stmt 1 view .LVU3432
 10085              	.LVL544:
 798:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10086              		.loc 1 798 5 view .LVU3433
 10087              	# sieve_extend.c:797:     const counter_t copy_start  = source_start + size;
 797:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10088              		.loc 1 797 21 is_stmt 0 view .LVU3434
 10089 3a01 4F8D0C00 		lea	r9, [r8+r8]	# copy_start,
 10090              	# sieve_extend.c:799:     const bitshift_t source_bit = bitindex_calc(source_start);
 799:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 275


 10091              		.loc 1 799 22 view .LVU3435
 10092 3a05 83E23F   		and	edx, 63	# source_bit,
 10093              	# sieve_extend.c:798:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 798:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10094              		.loc 1 798 22 view .LVU3436
 10095 3a08 4183E13F 		and	r9d, 63	# copy_bit,
 10096              	.LVL545:
 799:sieve_extend.c **** 
 10097              		.loc 1 799 5 is_stmt 1 view .LVU3437
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10098              		.loc 1 801 5 view .LVU3438
 10099              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10100              		.loc 1 801 37 is_stmt 0 view .LVU3439
 10101 3a0c 4C89E9   		mov	rcx, r13	#, _67
 10102              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10103              		.loc 1 801 13 view .LVU3440
 10104 3a0f 4939D1   		cmp	r9, rdx	# copy_bit, source_bit
 10105              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10106              		.loc 1 801 37 view .LVU3441
 10107 3a12 4C89F6   		mov	rsi, r14	#, patternsize_bits
 10108 3a15 4C89FF   		mov	rdi, r15	#, _96
 10109 3a18 4C89F2   		mov	rdx, r14	#, patternsize_bits
 10110              	.LVL546:
 10111              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10112              		.loc 1 801 13 view .LVU3442
 10113 3a1b 0F82100B 		jb	.L1091	#,
 10113      0000
 10114              	.LVL547:
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 10115              		.loc 1 802 10 is_stmt 1 view .LVU3443
 10116              	# sieve_extend.c:802:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, 
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 10117              		.loc 1 802 13 is_stmt 0 view .LVU3444
 10118 3a21 0F86FB0A 		jbe	.L734	#,
 10118      0000
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 10119              		.loc 1 802 37 is_stmt 1 view .LVU3445
 10120 3a27 E894CCFF 		call	extendSieve_shiftright_ivdep	#
 10120      FF
 10121              	.LVL548:
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 10122              		.loc 1 802 37 is_stmt 0 view .LVU3446
 10123 3a2c 4C897424 		mov	QWORD PTR 32[rsp], r14	# %sfp, patternsize_bits
 10123      20
 10124              	.LVL549:
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 10125              		.loc 1 802 37 view .LVU3447
 10126              	.LBE510:
 10127              	.LBE509:
 869:sieve_extend.c **** 
 10128              		.loc 1 869 9 is_stmt 1 view .LVU3448
 871:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 10129              		.loc 1 871 9 view .LVU3449
GAS LISTING /tmp/ccRwwoRx.s 			page 276


 10130              	# sieve_extend.c:871:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitstor
 871:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 10131              		.loc 1 871 17 is_stmt 0 view .LVU3450
 10132 3a31 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10132      000000
 10133 3a38 0F831CFC 		jnb	.L735	#,
 10133      FFFF
 10134              	.LVL550:
 10135 3a3e 6690     		.p2align 4
 10136              		.p2align 3
 10137              	.L1086:
 10138              	.LBB513:
 10139              	.LBB514:
 10140              	.LBB515:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10141              		.loc 1 198 41 is_stmt 1 view .LVU3451
 10142              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10143              		.loc 1 198 5 is_stmt 0 view .LVU3452
 10144 3a40 4983FC40 		cmp	r12, 64	# step,
 10145 3a44 0F87A20C 		ja	.L796	#,
 10145      0000
 10146 3a4a 4D89E6   		mov	r14, r12	# patternsize, step
 10147              	.LBE515:
 10148              	# sieve_extend.c:197: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 197:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10149              		.loc 1 197 21 view .LVU3453
 10150 3a4d B9010000 		mov	ecx, 1	# pattern,
 10150      00
 10151              	.LVL551:
 10152              	.L737:
 10153              	.LBB516:
 199:sieve_extend.c **** 
 10154              		.loc 1 199 9 is_stmt 1 view .LVU3454
 10155              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10156              		.loc 1 198 88 is_stmt 0 view .LVU3455
 10157 3a52 4F8D0C36 		lea	r9, [r14+r14]	# patternsize,
 10158              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10159              		.loc 1 199 29 view .LVU3456
 10160 3a56 C46289F7 		shlx	r8, rcx, r14	# _103, pattern, patternsize
 10160      C1
 10161              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10162              		.loc 1 199 17 view .LVU3457
 10163 3a5b 4C09C1   		or	rcx, r8	# pattern, _103
 10164              	.LVL552:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10165              		.loc 1 198 76 is_stmt 1 view .LVU3458
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10166              		.loc 1 198 41 view .LVU3459
 10167              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10168              		.loc 1 198 5 is_stmt 0 view .LVU3460
 10169 3a5e 4983F940 		cmp	r9, 64	# patternsize,
 10170 3a62 0F87A800 		ja	.L736	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 277


 10170      0000
 199:sieve_extend.c **** 
 10171              		.loc 1 199 9 is_stmt 1 view .LVU3461
 10172              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10173              		.loc 1 198 88 is_stmt 0 view .LVU3462
 10174 3a68 4A8D34B5 		lea	rsi, 0[0+r14*4]	# patternsize,
 10174      00000000 
 10175              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10176              		.loc 1 199 29 view .LVU3463
 10177 3a70 C4E2B1F7 		shlx	rax, rcx, r9	# _103, pattern, patternsize
 10177      C1
 10178              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10179              		.loc 1 199 17 view .LVU3464
 10180 3a75 4809C1   		or	rcx, rax	# pattern, _103
 10181              	.LVL553:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10182              		.loc 1 198 76 is_stmt 1 view .LVU3465
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10183              		.loc 1 198 41 view .LVU3466
 10184              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10185              		.loc 1 198 5 is_stmt 0 view .LVU3467
 10186 3a78 4883FE40 		cmp	rsi, 64	# patternsize,
 10187 3a7c 0F878E00 		ja	.L736	#,
 10187      0000
 199:sieve_extend.c **** 
 10188              		.loc 1 199 9 is_stmt 1 view .LVU3468
 10189              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10190              		.loc 1 198 88 is_stmt 0 view .LVU3469
 10191 3a82 4A8D3CF5 		lea	rdi, 0[0+r14*8]	# patternsize,
 10191      00000000 
 10192              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10193              		.loc 1 199 29 view .LVU3470
 10194 3a8a C462C9F7 		shlx	r10, rcx, rsi	# _103, pattern, patternsize
 10194      D1
 10195              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10196              		.loc 1 199 17 view .LVU3471
 10197 3a8f 4C09D1   		or	rcx, r10	# pattern, _103
 10198              	.LVL554:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10199              		.loc 1 198 76 is_stmt 1 view .LVU3472
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10200              		.loc 1 198 41 view .LVU3473
 10201              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10202              		.loc 1 198 5 is_stmt 0 view .LVU3474
 10203 3a92 4883FF40 		cmp	rdi, 64	# patternsize,
 10204 3a96 7778     		ja	.L736	#,
 199:sieve_extend.c **** 
 10205              		.loc 1 199 9 is_stmt 1 view .LVU3475
 10206              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/ccRwwoRx.s 			page 278


 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10207              		.loc 1 198 88 is_stmt 0 view .LVU3476
 10208 3a98 4C89F2   		mov	rdx, r14	# patternsize, patternsize
 10209              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10210              		.loc 1 199 29 view .LVU3477
 10211 3a9b C462C1F7 		shlx	r11, rcx, rdi	# _103, pattern, patternsize
 10211      D9
 10212              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10213              		.loc 1 198 88 view .LVU3478
 10214 3aa0 48C1E204 		sal	rdx, 4	# patternsize,
 10215              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10216              		.loc 1 199 17 view .LVU3479
 10217 3aa4 4C09D9   		or	rcx, r11	# pattern, _103
 10218              	.LVL555:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10219              		.loc 1 198 76 is_stmt 1 view .LVU3480
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10220              		.loc 1 198 41 view .LVU3481
 10221              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10222              		.loc 1 198 5 is_stmt 0 view .LVU3482
 10223 3aa7 4883FA40 		cmp	rdx, 64	# patternsize,
 10224 3aab 7763     		ja	.L736	#,
 199:sieve_extend.c **** 
 10225              		.loc 1 199 9 is_stmt 1 view .LVU3483
 10226              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10227              		.loc 1 198 88 is_stmt 0 view .LVU3484
 10228 3aad 4D89F1   		mov	r9, r14	# patternsize, patternsize
 10229              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10230              		.loc 1 199 29 view .LVU3485
 10231 3ab0 C462E9F7 		shlx	r8, rcx, rdx	# _103, pattern, patternsize
 10231      C1
 10232              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10233              		.loc 1 198 88 view .LVU3486
 10234 3ab5 49C1E105 		sal	r9, 5	# patternsize,
 10235              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10236              		.loc 1 199 17 view .LVU3487
 10237 3ab9 4C09C1   		or	rcx, r8	# pattern, _103
 10238              	.LVL556:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10239              		.loc 1 198 76 is_stmt 1 view .LVU3488
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10240              		.loc 1 198 41 view .LVU3489
 10241              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10242              		.loc 1 198 5 is_stmt 0 view .LVU3490
 10243 3abc 4983F940 		cmp	r9, 64	# patternsize,
 10244 3ac0 774E     		ja	.L736	#,
 199:sieve_extend.c **** 
 10245              		.loc 1 199 9 is_stmt 1 view .LVU3491
GAS LISTING /tmp/ccRwwoRx.s 			page 279


 10246              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10247              		.loc 1 198 88 is_stmt 0 view .LVU3492
 10248 3ac2 4C89F6   		mov	rsi, r14	# patternsize, patternsize
 10249              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10250              		.loc 1 199 29 view .LVU3493
 10251 3ac5 C4E2B1F7 		shlx	rax, rcx, r9	# _103, pattern, patternsize
 10251      C1
 10252              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10253              		.loc 1 198 88 view .LVU3494
 10254 3aca 48C1E606 		sal	rsi, 6	# patternsize,
 10255              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10256              		.loc 1 199 17 view .LVU3495
 10257 3ace 4809C1   		or	rcx, rax	# pattern, _103
 10258              	.LVL557:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10259              		.loc 1 198 76 is_stmt 1 view .LVU3496
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10260              		.loc 1 198 41 view .LVU3497
 10261              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10262              		.loc 1 198 5 is_stmt 0 view .LVU3498
 10263 3ad1 4883FE40 		cmp	rsi, 64	# patternsize,
 10264 3ad5 7739     		ja	.L736	#,
 199:sieve_extend.c **** 
 10265              		.loc 1 199 9 is_stmt 1 view .LVU3499
 10266              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10267              		.loc 1 198 88 is_stmt 0 view .LVU3500
 10268 3ad7 4C89F7   		mov	rdi, r14	# patternsize, patternsize
 10269              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10270              		.loc 1 199 29 view .LVU3501
 10271 3ada C462C9F7 		shlx	r10, rcx, rsi	# _103, pattern, patternsize
 10271      D1
 10272              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10273              		.loc 1 198 88 view .LVU3502
 10274 3adf 48C1E707 		sal	rdi, 7	# patternsize,
 10275              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10276              		.loc 1 199 17 view .LVU3503
 10277 3ae3 4C09D1   		or	rcx, r10	# pattern, _103
 10278              	.LVL558:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10279              		.loc 1 198 76 is_stmt 1 view .LVU3504
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10280              		.loc 1 198 41 view .LVU3505
 10281              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10282              		.loc 1 198 5 is_stmt 0 view .LVU3506
 10283 3ae6 4883FF40 		cmp	rdi, 64	# patternsize,
 10284 3aea 7724     		ja	.L736	#,
 199:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 280


 10285              		.loc 1 199 9 is_stmt 1 view .LVU3507
 10286              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10287              		.loc 1 198 88 is_stmt 0 view .LVU3508
 10288 3aec 49C1E608 		sal	r14, 8	# patternsize,
 10289              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10290              		.loc 1 199 29 view .LVU3509
 10291 3af0 C462C1F7 		shlx	r11, rcx, rdi	# _103, pattern, patternsize
 10291      D9
 10292              	# sieve_extend.c:199:         pattern |= (pattern << patternsize);
 199:sieve_extend.c **** 
 10293              		.loc 1 199 17 view .LVU3510
 10294 3af5 4C09D9   		or	rcx, r11	# pattern, _103
 10295              	.LVL559:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10296              		.loc 1 198 76 is_stmt 1 view .LVU3511
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10297              		.loc 1 198 41 view .LVU3512
 10298              	# sieve_extend.c:198:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10299              		.loc 1 198 5 is_stmt 0 view .LVU3513
 10300 3af8 4983FE40 		cmp	r14, 64	# patternsize,
 10301 3afc 0F8650FF 		jbe	.L737	#,
 10301      FFFF
 10302              	.LVL560:
 10303 3b02 66662E0F 		.p2align 4
 10303      1F840000 
 10303      0000000F 
 10303      1F00
 10304              		.p2align 3
 10305              	.L736:
 198:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10306              		.loc 1 198 5 view .LVU3514
 10307              	.LBE516:
 202:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10308              		.loc 1 202 5 is_stmt 1 view .LVU3515
 10309              	# sieve_extend.c:202:     const counter_t range_stop_word = wordindex(range_stop);
 202:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10310              		.loc 1 202 21 is_stmt 0 view .LVU3516
 10311 3b10 4D89EA   		mov	r10, r13	# range_stop_word, _67
 10312              	# sieve_extend.c:203:     register counter_t range_start_word = wordindex(range_start);
 203:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10313              		.loc 1 203 24 view .LVU3517
 10314 3b13 4989EE   		mov	r14, rbp	# range_start_word, index
 10315 3b16 49C1EE06 		shr	r14, 6	# range_start_word,
 10316 3b1a 4589E8   		mov	r8d, r13d	# tmp409, _67
 10317              	# sieve_extend.c:202:     const counter_t range_stop_word = wordindex(range_stop);
 202:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10318              		.loc 1 202 21 view .LVU3518
 10319 3b1d 49C1EA06 		shr	r10, 6	# range_stop_word,
 10320              	.LVL561:
 203:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10321              		.loc 1 203 5 is_stmt 1 view .LVU3519
 204:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10322              		.loc 1 204 6 view .LVU3520
 10323 3b21 4F8D1CF7 		lea	r11, [r15+r14*8]	# _735,
GAS LISTING /tmp/ccRwwoRx.s 			page 281


 10324              	# sieve_extend.c:204:      if (range_start_word >= range_stop_word) { // shortcut
 204:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10325              		.loc 1 204 9 is_stmt 0 view .LVU3521
 10326 3b25 4D39F2   		cmp	r10, r14	# range_stop_word, range_start_word
 10327 3b28 41F7D0   		not	r8d	# tmp409
 10328 3b2b 498B13   		mov	rdx, QWORD PTR [r11]	# pretmp_736, MEM[(uint64_t *)_735]
 10329 3b2e 49C7C1FF 		mov	r9, -1	# tmp995,
 10329      FFFFFF
 10330              	# sieve_extend.c:205:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
 205:sieve_extend.c ****        return;
 10331              		.loc 1 205 49 view .LVU3522
 10332 3b35 C4E2D1F7 		shlx	rsi, rcx, rbp	# tmp412, pattern, index
 10332      F1
 10333 3b3a C4C2BBF7 		shrx	rax, r9, r8	# _742, tmp995, tmp409
 10333      C1
 10334 3b3f 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _742
 10334      40
 10335              	# sieve_extend.c:204:      if (range_start_word >= range_stop_word) { // shortcut
 204:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10336              		.loc 1 204 9 view .LVU3523
 10337 3b44 0F86C608 		jbe	.L1092	#,
 10337      0000
 209:sieve_extend.c **** 
 10338              		.loc 1 209 5 is_stmt 1 view .LVU3524
 10339              	# sieve_extend.c:213:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 213:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10340              		.loc 1 213 80 is_stmt 0 view .LVU3525
 10341 3b4a 41B84000 		mov	r8d, 64	# tmp417,
 10341      0000
 10342              	# sieve_extend.c:209:     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 209:sieve_extend.c **** 
 10343              		.loc 1 209 34 view .LVU3526
 10344 3b50 4809D6   		or	rsi, rdx	# tmp416, pretmp_736
 10345              	# sieve_extend.c:213:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 213:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10346              		.loc 1 213 80 view .LVU3527
 10347 3b53 4C89C0   		mov	rax, r8	# tmp419, tmp417
 10348 3b56 31D2     		xor	edx, edx	# tmp418
 10349 3b58 49F7F4   		div	r12	# step
 10350              	# sieve_extend.c:214:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 214:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10351              		.loc 1 214 24 view .LVU3528
 10352 3b5b 4D89E1   		mov	r9, r12	# pattern_shift, step
 10353              	# sieve_extend.c:215:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 215:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10354              		.loc 1 215 33 view .LVU3529
 10355 3b5e 4889E8   		mov	rax, rbp	# tmp421, index
 10356              	# sieve_extend.c:209:     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 209:sieve_extend.c **** 
 10357              		.loc 1 209 34 view .LVU3530
 10358 3b61 498933   		mov	QWORD PTR [r11], rsi	# MEM[(uint64_t *)_735], tmp416
 213:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10359              		.loc 1 213 4 is_stmt 1 view .LVU3531
 10360              	# sieve_extend.c:215:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 215:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10361              		.loc 1 215 33 is_stmt 0 view .LVU3532
 10362 3b64 83E03F   		and	eax, 63	# tmp421,
GAS LISTING /tmp/ccRwwoRx.s 			page 282


 10363              	# sieve_extend.c:213:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 213:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10364              		.loc 1 213 24 view .LVU3533
 10365 3b67 4929D0   		sub	r8, rdx	# pattern_size, tmp418
 10366              	.LVL562:
 214:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10367              		.loc 1 214 4 is_stmt 1 view .LVU3534
 10368              	# sieve_extend.c:214:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 214:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10369              		.loc 1 214 24 is_stmt 0 view .LVU3535
 10370 3b6a 4929D1   		sub	r9, rdx	# pattern_shift, tmp418
 10371              	.LVL563:
 215:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10372              		.loc 1 215 4 is_stmt 1 view .LVU3536
 10373              	# sieve_extend.c:215:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 215:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10374              		.loc 1 215 24 is_stmt 0 view .LVU3537
 10375 3b6d 31D2     		xor	edx, edx	# tmp422
 10376 3b6f 49F7F4   		div	r12	# step
 10377              	.LVL564:
 216:sieve_extend.c ****    #pragma GCC ivdep
 10378              		.loc 1 216 4 is_stmt 1 view .LVU3538
 10379              	.LBB517:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10380              		.loc 1 218 9 view .LVU3539
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10381              		.loc 1 218 24 view .LVU3540
 10382              	# sieve_extend.c:218:    for (counter_t i=1; i <= loop_range; i++) {
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10383              		.loc 1 218 4 is_stmt 0 view .LVU3541
 10384 3b72 4D39F2   		cmp	r10, r14	# range_stop_word, range_start_word
 10385 3b75 0F846101 		je	.L742	#,
 10385      0000
 10386 3b7b 4F8D34D7 		lea	r14, [r15+r10*8]	# _756,
 10387              	.LVL565:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10388              		.loc 1 218 4 view .LVU3542
 10389 3b7f 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.566,
 10390 3b83 4C89F0   		mov	rax, r14	# tmp556, _756
 10391 3b86 4C89DF   		mov	rdi, r11	# ivtmp.568, _735
 10392 3b89 4C29D8   		sub	rax, r11	# tmp556, ivtmp.568
 10393 3b8c 4883E808 		sub	rax, 8	# tmp557,
 10394 3b90 48C1E803 		shr	rax, 3	# tmp555,
 10395 3b94 4883C001 		add	rax, 1	# tmp558,
 10396 3b98 83E003   		and	eax, 3	# tmp559,
 10397 3b9b 0F849800 		je	.L741	#,
 10397      0000
 10398 3ba1 4883F801 		cmp	rax, 1	# tmp559,
 10399 3ba5 7461     		je	.L915	#,
 10400 3ba7 4883F802 		cmp	rax, 2	# tmp559,
 10401 3bab 7433     		je	.L916	#,
 10402              	.LVL566:
 10403              	.LBB518:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10404              		.loc 1 219 9 is_stmt 1 view .LVU3543
 220:sieve_extend.c ****    }
 10405              		.loc 1 220 8 view .LVU3544
GAS LISTING /tmp/ccRwwoRx.s 			page 283


 10406              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10407              		.loc 1 219 20 is_stmt 0 view .LVU3545
 10408 3bad 4889F0   		mov	rax, rsi	# tmp690, ivtmp.566
 10409 3bb0 31D2     		xor	edx, edx	# totalshift
 10410              	.LVL567:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10411              		.loc 1 219 20 view .LVU3546
 10412 3bb2 49F7F4   		div	r12	# step
 10413 3bb5 4883C708 		add	rdi, 8	# ivtmp.568,
 10414 3bb9 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10415              	.LVL568:
 10416              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10417              		.loc 1 220 93 view .LVU3547
 10418 3bbc C4E2E9F7 		shlx	rax, rcx, rdx	# tmp691, pattern, totalshift
 10418      C1
 10419              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10420              		.loc 1 220 39 view .LVU3548
 10421 3bc1 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp691, MEM[base: _761, offset: 8B]
 10422 3bc5 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, tmp691
 10422      48
 10423              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10424              		.loc 1 220 68 view .LVU3549
 10425 3bca 4489C0   		mov	eax, r8d	# tmp693, _744
 10426 3bcd 29D0     		sub	eax, edx	# tmp693, totalshift
 10427              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10428              		.loc 1 220 52 view .LVU3550
 10429 3bcf C4E2FBF7 		shrx	rdx, rcx, rax	# tmp694, pattern, tmp693
 10429      D1
 10430              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10431              		.loc 1 220 39 view .LVU3551
 10432 3bd4 488B4424 		mov	rax, QWORD PTR 72[rsp]	# tmp692, %sfp
 10432      48
 10433 3bd9 4809D0   		or	rax, rdx	# tmp692, tmp694
 10434 3bdc 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _761, offset: 8B], tmp695
 10435              	.LBE518:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10436              		.loc 1 218 41 is_stmt 1 view .LVU3552
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10437              		.loc 1 218 24 view .LVU3553
 10438              	.LVL569:
 10439              	.L916:
 10440              	.LBB519:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10441              		.loc 1 219 9 view .LVU3554
 220:sieve_extend.c ****    }
 10442              		.loc 1 220 8 view .LVU3555
 10443              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10444              		.loc 1 219 20 is_stmt 0 view .LVU3556
 10445 3be0 4889F0   		mov	rax, rsi	# tmp697, ivtmp.566
 10446 3be3 31D2     		xor	edx, edx	# totalshift
GAS LISTING /tmp/ccRwwoRx.s 			page 284


 10447 3be5 49F7F4   		div	r12	# step
 10448              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10449              		.loc 1 220 68 view .LVU3557
 10450 3be8 4589C3   		mov	r11d, r8d	# tmp700, _744
 10451 3beb 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10452 3bee 4883C708 		add	rdi, 8	# ivtmp.568,
 10453              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10454              		.loc 1 220 93 view .LVU3558
 10455 3bf2 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp698, pattern, totalshift
 10455      C1
 10456              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10457              		.loc 1 220 39 view .LVU3559
 10458 3bf7 480B07   		or	rax, QWORD PTR [rdi]	# tmp699, MEM[base: _761, offset: 8B]
 10459              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10460              		.loc 1 220 68 view .LVU3560
 10461 3bfa 4129D3   		sub	r11d, edx	# tmp700, totalshift
 10462              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10463              		.loc 1 220 52 view .LVU3561
 10464 3bfd C4E2A3F7 		shrx	rdx, rcx, r11	# tmp701, pattern, tmp700
 10464      D1
 10465              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10466              		.loc 1 220 39 view .LVU3562
 10467 3c02 4809D0   		or	rax, rdx	# tmp702, tmp701
 10468 3c05 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _761, offset: 8B], tmp702
 10469              	.LBE519:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10470              		.loc 1 218 41 is_stmt 1 view .LVU3563
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10471              		.loc 1 218 24 view .LVU3564
 10472              	.L915:
 10473              	.LBB520:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10474              		.loc 1 219 9 view .LVU3565
 220:sieve_extend.c ****    }
 10475              		.loc 1 220 8 view .LVU3566
 10476              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10477              		.loc 1 219 20 is_stmt 0 view .LVU3567
 10478 3c08 4889F0   		mov	rax, rsi	# tmp704, ivtmp.566
 10479 3c0b 31D2     		xor	edx, edx	# totalshift
 10480 3c0d 49F7F4   		div	r12	# step
 10481              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10482              		.loc 1 220 68 view .LVU3568
 10483 3c10 4589C3   		mov	r11d, r8d	# tmp707, _744
 10484 3c13 4883C708 		add	rdi, 8	# ivtmp.568,
 10485 3c17 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10486              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10487              		.loc 1 220 93 view .LVU3569
 10488 3c1a C4E2E9F7 		shlx	rax, rcx, rdx	# tmp705, pattern, totalshift
GAS LISTING /tmp/ccRwwoRx.s 			page 285


 10488      C1
 10489              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10490              		.loc 1 220 39 view .LVU3570
 10491 3c1f 480B07   		or	rax, QWORD PTR [rdi]	# tmp706, MEM[base: _761, offset: 8B]
 10492              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10493              		.loc 1 220 68 view .LVU3571
 10494 3c22 4129D3   		sub	r11d, edx	# tmp707, totalshift
 10495              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10496              		.loc 1 220 52 view .LVU3572
 10497 3c25 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp708, pattern, tmp707
 10497      D1
 10498              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10499              		.loc 1 220 39 view .LVU3573
 10500 3c2a 4809D0   		or	rax, rdx	# tmp709, tmp708
 10501 3c2d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _761, offset: 8B], tmp709
 10502              	.LBE520:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10503              		.loc 1 218 41 is_stmt 1 view .LVU3574
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10504              		.loc 1 218 24 view .LVU3575
 10505              	# sieve_extend.c:218:    for (counter_t i=1; i <= loop_range; i++) {
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10506              		.loc 1 218 4 is_stmt 0 view .LVU3576
 10507 3c30 4939FE   		cmp	r14, rdi	# _756, ivtmp.568
 10508 3c33 0F84A300 		je	.L742	#,
 10508      0000
 10509              	.L741:
 10510              	.LBB521:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10511              		.loc 1 219 9 is_stmt 1 view .LVU3577
 220:sieve_extend.c ****    }
 10512              		.loc 1 220 8 view .LVU3578
 10513              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10514              		.loc 1 219 20 is_stmt 0 view .LVU3579
 10515 3c39 4889F0   		mov	rax, rsi	# tmp429, ivtmp.566
 10516 3c3c 31D2     		xor	edx, edx	# totalshift
 10517 3c3e 49F7F4   		div	r12	# step
 10518              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10519              		.loc 1 220 68 view .LVU3580
 10520 3c41 4589C3   		mov	r11d, r8d	# tmp432, _744
 10521 3c44 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10522 3c47 4883C720 		add	rdi, 32	# ivtmp.568,
 10523              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10524              		.loc 1 220 93 view .LVU3581
 10525 3c4b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp430, pattern, totalshift
 10525      C1
 10526              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10527              		.loc 1 220 39 view .LVU3582
 10528 3c50 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp431, MEM[base: _761, offset: 8B]
GAS LISTING /tmp/ccRwwoRx.s 			page 286


 10529              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10530              		.loc 1 220 68 view .LVU3583
 10531 3c54 4129D3   		sub	r11d, edx	# tmp432, totalshift
 10532              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10533              		.loc 1 220 52 view .LVU3584
 10534 3c57 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp433, pattern, tmp432
 10534      D1
 10535              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10536              		.loc 1 220 68 view .LVU3585
 10537 3c5c 4589C3   		mov	r11d, r8d	# tmp568, _744
 10538              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10539              		.loc 1 220 39 view .LVU3586
 10540 3c5f 4809D0   		or	rax, rdx	# tmp434, tmp433
 10541              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10542              		.loc 1 219 20 view .LVU3587
 10543 3c62 31D2     		xor	edx, edx	# totalshift
 10544              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10545              		.loc 1 220 39 view .LVU3588
 10546 3c64 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _761, offset: 8B], tmp434
 10547              	.LBE521:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10548              		.loc 1 218 41 is_stmt 1 view .LVU3589
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10549              		.loc 1 218 24 view .LVU3590
 10550              	.LBB522:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10551              		.loc 1 219 9 view .LVU3591
 220:sieve_extend.c ****    }
 10552              		.loc 1 220 8 view .LVU3592
 10553              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10554              		.loc 1 219 20 is_stmt 0 view .LVU3593
 10555 3c68 4889F0   		mov	rax, rsi	# tmp565, ivtmp.566
 10556 3c6b 49F7F4   		div	r12	# step
 10557 3c6e 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10558              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10559              		.loc 1 220 93 view .LVU3594
 10560 3c71 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp566, pattern, totalshift
 10560      C1
 10561              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10562              		.loc 1 220 39 view .LVU3595
 10563 3c76 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp567, MEM[base: _761, offset: 8B]
 10564              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10565              		.loc 1 220 68 view .LVU3596
 10566 3c7a 4129D3   		sub	r11d, edx	# tmp568, totalshift
 10567              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10568              		.loc 1 220 52 view .LVU3597
GAS LISTING /tmp/ccRwwoRx.s 			page 287


 10569 3c7d C4E2A3F7 		shrx	rdx, rcx, r11	# tmp569, pattern, tmp568
 10569      D1
 10570              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10571              		.loc 1 220 68 view .LVU3598
 10572 3c82 4589C3   		mov	r11d, r8d	# tmp577, _744
 10573              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10574              		.loc 1 220 39 view .LVU3599
 10575 3c85 4809D0   		or	rax, rdx	# tmp570, tmp569
 10576              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10577              		.loc 1 219 20 view .LVU3600
 10578 3c88 31D2     		xor	edx, edx	# totalshift
 10579              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10580              		.loc 1 220 39 view .LVU3601
 10581 3c8a 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _761, offset: 8B], tmp570
 10582              	.LBE522:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10583              		.loc 1 218 41 is_stmt 1 view .LVU3602
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10584              		.loc 1 218 24 view .LVU3603
 10585              	.LBB523:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10586              		.loc 1 219 9 view .LVU3604
 220:sieve_extend.c ****    }
 10587              		.loc 1 220 8 view .LVU3605
 10588              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10589              		.loc 1 219 20 is_stmt 0 view .LVU3606
 10590 3c8e 4889F0   		mov	rax, rsi	# tmp574, ivtmp.566
 10591 3c91 49F7F4   		div	r12	# step
 10592 3c94 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10593              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10594              		.loc 1 220 93 view .LVU3607
 10595 3c97 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp575, pattern, totalshift
 10595      C1
 10596              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10597              		.loc 1 220 39 view .LVU3608
 10598 3c9c 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp576, MEM[base: _761, offset: 8B]
 10599              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10600              		.loc 1 220 68 view .LVU3609
 10601 3ca0 4129D3   		sub	r11d, edx	# tmp577, totalshift
 10602              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10603              		.loc 1 220 52 view .LVU3610
 10604 3ca3 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp578, pattern, tmp577
 10604      D1
 10605              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10606              		.loc 1 220 68 view .LVU3611
 10607 3ca8 4589C3   		mov	r11d, r8d	# tmp586, _744
 10608              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
GAS LISTING /tmp/ccRwwoRx.s 			page 288


 220:sieve_extend.c ****    }
 10609              		.loc 1 220 39 view .LVU3612
 10610 3cab 4809D0   		or	rax, rdx	# tmp579, tmp578
 10611              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10612              		.loc 1 219 20 view .LVU3613
 10613 3cae 31D2     		xor	edx, edx	# totalshift
 10614              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10615              		.loc 1 220 39 view .LVU3614
 10616 3cb0 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _761, offset: 8B], tmp579
 10617              	.LBE523:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10618              		.loc 1 218 41 is_stmt 1 view .LVU3615
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10619              		.loc 1 218 24 view .LVU3616
 10620              	.LBB524:
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10621              		.loc 1 219 9 view .LVU3617
 220:sieve_extend.c ****    }
 10622              		.loc 1 220 8 view .LVU3618
 10623              	# sieve_extend.c:219:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 219:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10624              		.loc 1 219 20 is_stmt 0 view .LVU3619
 10625 3cb4 4889F0   		mov	rax, rsi	# tmp583, ivtmp.566
 10626 3cb7 49F7F4   		div	r12	# step
 10627 3cba 4C01CE   		add	rsi, r9	# ivtmp.566, pattern_shift
 10628              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10629              		.loc 1 220 93 view .LVU3620
 10630 3cbd C4E2E9F7 		shlx	rax, rcx, rdx	# tmp584, pattern, totalshift
 10630      C1
 10631              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10632              		.loc 1 220 39 view .LVU3621
 10633 3cc2 480B07   		or	rax, QWORD PTR [rdi]	# tmp585, MEM[base: _761, offset: 8B]
 10634              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10635              		.loc 1 220 68 view .LVU3622
 10636 3cc5 4129D3   		sub	r11d, edx	# tmp586, totalshift
 10637              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10638              		.loc 1 220 52 view .LVU3623
 10639 3cc8 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp587, pattern, tmp586
 10639      D1
 10640              	# sieve_extend.c:220:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 220:sieve_extend.c ****    }
 10641              		.loc 1 220 39 view .LVU3624
 10642 3ccd 4809D0   		or	rax, rdx	# tmp588, tmp587
 10643 3cd0 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _761, offset: 8B], tmp588
 10644              	.LBE524:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10645              		.loc 1 218 41 is_stmt 1 view .LVU3625
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10646              		.loc 1 218 24 view .LVU3626
 10647              	# sieve_extend.c:218:    for (counter_t i=1; i <= loop_range; i++) {
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/ccRwwoRx.s 			page 289


 10648              		.loc 1 218 4 is_stmt 0 view .LVU3627
 10649 3cd3 4939FE   		cmp	r14, rdi	# _756, ivtmp.568
 10650 3cd6 0F855DFF 		jne	.L741	#,
 10650      FFFF
 10651              	.L742:
 218:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10652              		.loc 1 218 4 view .LVU3628
 10653              	.LBE517:
 222:sieve_extend.c **** }
 10654              		.loc 1 222 4 is_stmt 1 view .LVU3629
 10655              	# sieve_extend.c:222:    bitstorage[range_stop_word] &= chopmask(range_stop);
 222:sieve_extend.c **** }
 10656              		.loc 1 222 32 is_stmt 0 view .LVU3630
 10657 3cdc 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	# _742, %sfp
 10657      40
 10658 3ce1 4B210CD7 		and	QWORD PTR [r15+r10*8], rcx	# *_149, _742
 10659 3ce5 E97DF9FF 		jmp	.L739	#
 10659      FF
 10660              	.LVL570:
 10661 3cea 660F1F44 		.p2align 4,,7
 10661      0000
 10662              		.p2align 3
 10663              	.L1087:
 222:sieve_extend.c **** }
 10664              		.loc 1 222 32 view .LVU3631
 10665              	.LBE514:
 10666              	.LBE513:
 872:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 10667              		.loc 1 872 48 is_stmt 1 view .LVU3632
 10668              	.LBB527:
 10669              	.LBI527:
 229:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10670              		.loc 1 229 14 view .LVU3633
 10671              	.LBB528:
 230:sieve_extend.c **** 
 10672              		.loc 1 230 5 view .LVU3634
 10673              	# sieve_extend.c:230:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 230:sieve_extend.c **** 
 10674              		.loc 1 230 74 is_stmt 0 view .LVU3635
 10675 3cf0 4D89E6   		mov	r14, r12	# tmp435, step
 10676 3cf3 4531DB   		xor	r11d, r11d	# _136
 10677 3cf6 49C1E606 		sal	r14, 6	# tmp435,
 10678 3cfa 4901EE   		add	r14, rbp	# tmp436, index
 10679 3cfd 410F92C3 		setc	r11b	#, _136
 10680              	.LVL571:
 232:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10681              		.loc 1 232 5 is_stmt 1 view .LVU3636
 10682              	# sieve_extend.c:232:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 232:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10683              		.loc 1 232 8 is_stmt 0 view .LVU3637
 10684 3d01 4D39F5   		cmp	r13, r14	# _67, tmp436
 10685 3d04 0F821607 		jb	.L746	#,
 10685      0000
 10686              	.LVL572:
 10687              	.LBB529:
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10688              		.loc 1 253 54 is_stmt 1 view .LVU3638
GAS LISTING /tmp/ccRwwoRx.s 			page 290


 10689              	# sieve_extend.c:253:         for (register counter_t index = range_start; index <= range_stop_uniq
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10690              		.loc 1 253 9 is_stmt 0 view .LVU3639
 10691 3d0a 4D85DB   		test	r11, r11	# _136
 10692 3d0d 0F8554F9 		jne	.L739	#,
 10692      FFFF
 10693              	.LBB530:
 10694              	.LBB531:
 10695              	.LBB532:
 10696              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10697              		.loc 1 168 20 view .LVU3640
 10698 3d13 4C89E8   		mov	rax, r13	# range_stop_word, _67
 10699              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 10700              		.loc 1 170 112 view .LVU3641
 10701 3d16 4F8D04A4 		lea	r8, [r12+r12*4]	# tmp444,
 10702              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10703              		.loc 1 168 20 view .LVU3642
 10704 3d1a 48C1E806 		shr	rax, 6	# range_stop_word,
 10705              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10706              		.loc 1 188 29 view .LVU3643
 10707 3d1e 4489EE   		mov	esi, r13d	# tmp446, _67
 10708              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 10709              		.loc 1 170 135 view .LVU3644
 10710 3d21 4989C2   		mov	r10, rax	# tmp450, range_stop_word
 10711              	# sieve_extend.c:182:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10712              		.loc 1 182 41 view .LVU3645
 10713 3d24 4D8D0CC7 		lea	r9, [r15+rax*8]	# range_stop_ptr,
 10714              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 10715              		.loc 1 170 135 view .LVU3646
 10716 3d28 4D29C2   		sub	r10, r8	# tmp450, tmp444
 10717 3d2b 4C39C0   		cmp	rax, r8	# range_stop_word, tmp444
 10718 3d2e 4F8D14D7 		lea	r10, [r15+r10*8]	# tmp452,
 10719 3d32 4C89E0   		mov	rax, r12	# _749, step
 10720 3d35 4D0F46D7 		cmovbe	r10, r15	# _96,, fast_loop_ptr
 10721              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10722              		.loc 1 188 29 view .LVU3647
 10723 3d39 48C7C7FF 		mov	rdi, -1	# tmp1016,
 10723      FFFFFF
 10724 3d40 48C1E004 		sal	rax, 4	# _749,
 10725 3d44 F7D6     		not	esi	# tmp446
 10726              	.LBE532:
 10727              	.LBE531:
 10728              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10729              		.loc 1 258 25 view .LVU3648
 10730 3d46 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, index
 10730      48
 10731              	.LBB537:
 10732              	.LBB533:
GAS LISTING /tmp/ccRwwoRx.s 			page 291


 10733              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10734              		.loc 1 188 29 view .LVU3649
 10735 3d4b C4E2CBF7 		shrx	rdx, rdi, rsi	# _229, tmp1016, tmp446
 10735      D7
 10736              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10737              		.loc 1 175 44 view .LVU3650
 10738 3d50 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _197,
 10738      00000000 
 10739              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10740              		.loc 1 188 29 view .LVU3651
 10741 3d58 4889EF   		mov	rdi, rbp	# index, index
 10742 3d5b 49C1E003 		sal	r8, 3	# tmp456,
 10743              	.LBE533:
 10744              	.LBE537:
 10745              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10746              		.loc 1 258 25 view .LVU3652
 10747 3d5f 41BB0100 		mov	r11d, 1	# tmp459,
 10747      0000
 10748              	.LBB538:
 10749              	.LBB534:
 10750              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 10751              		.loc 1 188 29 view .LVU3653
 10752 3d65 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, _229
 10752      40
 10753              	.LBE534:
 10754              	.LBE538:
 10755              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10756              		.loc 1 258 25 view .LVU3654
 10757 3d6a 4889C3   		mov	rbx, rax	# _749, _749
 10758              	.LVL573:
 10759 3d6d 0F1F00   		.p2align 4
 10760              		.p2align 3
 10761              	.L757:
 254:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10762              		.loc 1 254 13 is_stmt 1 view .LVU3655
 10763              	# sieve_extend.c:254:             register counter_t index_word = wordindex(index);
 254:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10764              		.loc 1 254 32 is_stmt 0 view .LVU3656
 10765 3d70 4889F8   		mov	rax, rdi	# index_word, index
 10766              	# sieve_extend.c:255:             register bitword_t mask = SAFE_ZERO;
 255:sieve_extend.c ****             #pragma GCC ivdep
 10767              		.loc 1 255 32 view .LVU3657
 10768 3d73 31D2     		xor	edx, edx	# mask
 10769              	# sieve_extend.c:254:             register counter_t index_word = wordindex(index);
 254:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10770              		.loc 1 254 32 view .LVU3658
 10771 3d75 48C1E806 		shr	rax, 6	# index_word,
 10772              	.LVL574:
 255:sieve_extend.c ****             #pragma GCC ivdep
 10773              		.loc 1 255 13 is_stmt 1 view .LVU3659
 10774              	.L751:
GAS LISTING /tmp/ccRwwoRx.s 			page 292


 258:sieve_extend.c ****                 index += step;
 10775              		.loc 1 258 17 view .LVU3660
 10776              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10777              		.loc 1 258 25 is_stmt 0 view .LVU3661
 10778 3d79 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp458, tmp459, index
 10778      F3
 10779              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10780              		.loc 1 259 23 view .LVU3662
 10781 3d7e 4C01E7   		add	rdi, r12	# index, step
 10782              	.LVL575:
 10783              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10784              		.loc 1 258 22 view .LVU3663
 10785 3d81 4809F2   		or	rdx, rsi	# mask, tmp458
 10786              	.LVL576:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10787              		.loc 1 259 17 is_stmt 1 view .LVU3664
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10788              		.loc 1 260 21 view .LVU3665
 10789              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10790              		.loc 1 260 36 is_stmt 0 view .LVU3666
 10791 3d84 4889FE   		mov	rsi, rdi	# tmp460, index
 10792 3d87 48C1EE06 		shr	rsi, 6	# tmp460,
 10793              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10794              		.loc 1 260 13 view .LVU3667
 10795 3d8b 4839F0   		cmp	rax, rsi	# index_word, tmp460
 10796 3d8e 0F85AC00 		jne	.L1006	#,
 10796      0000
 258:sieve_extend.c ****                 index += step;
 10797              		.loc 1 258 17 is_stmt 1 view .LVU3668
 10798              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10799              		.loc 1 258 25 is_stmt 0 view .LVU3669
 10800 3d94 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp743, tmp459, index
 10800      F3
 10801              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10802              		.loc 1 259 23 view .LVU3670
 10803 3d99 4C01E7   		add	rdi, r12	# index, step
 10804              	.LVL577:
 10805              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10806              		.loc 1 258 22 view .LVU3671
 10807 3d9c 4809F2   		or	rdx, rsi	# mask, tmp743
 10808              	.LVL578:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10809              		.loc 1 259 17 is_stmt 1 view .LVU3672
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10810              		.loc 1 260 21 view .LVU3673
 10811              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10812              		.loc 1 260 36 is_stmt 0 view .LVU3674
 10813 3d9f 4889FE   		mov	rsi, rdi	# tmp744, index
GAS LISTING /tmp/ccRwwoRx.s 			page 293


 10814 3da2 48C1EE06 		shr	rsi, 6	# tmp744,
 10815              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10816              		.loc 1 260 13 view .LVU3675
 10817 3da6 4839F0   		cmp	rax, rsi	# index_word, tmp744
 10818 3da9 0F859100 		jne	.L1006	#,
 10818      0000
 258:sieve_extend.c ****                 index += step;
 10819              		.loc 1 258 17 is_stmt 1 view .LVU3676
 10820              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10821              		.loc 1 258 25 is_stmt 0 view .LVU3677
 10822 3daf C4C2C1F7 		shlx	rsi, r11, rdi	# tmp745, tmp459, index
 10822      F3
 10823              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10824              		.loc 1 259 23 view .LVU3678
 10825 3db4 4C01E7   		add	rdi, r12	# index, step
 10826              	.LVL579:
 10827              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10828              		.loc 1 258 22 view .LVU3679
 10829 3db7 4809F2   		or	rdx, rsi	# mask, tmp745
 10830              	.LVL580:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10831              		.loc 1 259 17 is_stmt 1 view .LVU3680
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10832              		.loc 1 260 21 view .LVU3681
 10833              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10834              		.loc 1 260 36 is_stmt 0 view .LVU3682
 10835 3dba 4889FE   		mov	rsi, rdi	# tmp746, index
 10836 3dbd 48C1EE06 		shr	rsi, 6	# tmp746,
 10837              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10838              		.loc 1 260 13 view .LVU3683
 10839 3dc1 4839F0   		cmp	rax, rsi	# index_word, tmp746
 10840 3dc4 757A     		jne	.L1006	#,
 258:sieve_extend.c ****                 index += step;
 10841              		.loc 1 258 17 is_stmt 1 view .LVU3684
 10842              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10843              		.loc 1 258 25 is_stmt 0 view .LVU3685
 10844 3dc6 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp747, tmp459, index
 10844      F3
 10845              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10846              		.loc 1 259 23 view .LVU3686
 10847 3dcb 4C01E7   		add	rdi, r12	# index, step
 10848              	.LVL581:
 10849              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10850              		.loc 1 258 22 view .LVU3687
 10851 3dce 4809F2   		or	rdx, rsi	# mask, tmp747
 10852              	.LVL582:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10853              		.loc 1 259 17 is_stmt 1 view .LVU3688
GAS LISTING /tmp/ccRwwoRx.s 			page 294


 260:sieve_extend.c ****             // #pragma GCC ivdep
 10854              		.loc 1 260 21 view .LVU3689
 10855              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10856              		.loc 1 260 36 is_stmt 0 view .LVU3690
 10857 3dd1 4889FE   		mov	rsi, rdi	# tmp748, index
 10858 3dd4 48C1EE06 		shr	rsi, 6	# tmp748,
 10859              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10860              		.loc 1 260 13 view .LVU3691
 10861 3dd8 4839F0   		cmp	rax, rsi	# index_word, tmp748
 10862 3ddb 7563     		jne	.L1006	#,
 258:sieve_extend.c ****                 index += step;
 10863              		.loc 1 258 17 is_stmt 1 view .LVU3692
 10864              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10865              		.loc 1 258 25 is_stmt 0 view .LVU3693
 10866 3ddd C4C2C1F7 		shlx	rsi, r11, rdi	# tmp749, tmp459, index
 10866      F3
 10867              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10868              		.loc 1 259 23 view .LVU3694
 10869 3de2 4C01E7   		add	rdi, r12	# index, step
 10870              	.LVL583:
 10871              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10872              		.loc 1 258 22 view .LVU3695
 10873 3de5 4809F2   		or	rdx, rsi	# mask, tmp749
 10874              	.LVL584:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10875              		.loc 1 259 17 is_stmt 1 view .LVU3696
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10876              		.loc 1 260 21 view .LVU3697
 10877              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10878              		.loc 1 260 36 is_stmt 0 view .LVU3698
 10879 3de8 4889FE   		mov	rsi, rdi	# tmp750, index
 10880 3deb 48C1EE06 		shr	rsi, 6	# tmp750,
 10881              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10882              		.loc 1 260 13 view .LVU3699
 10883 3def 4839F0   		cmp	rax, rsi	# index_word, tmp750
 10884 3df2 754C     		jne	.L1006	#,
 258:sieve_extend.c ****                 index += step;
 10885              		.loc 1 258 17 is_stmt 1 view .LVU3700
 10886              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10887              		.loc 1 258 25 is_stmt 0 view .LVU3701
 10888 3df4 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp751, tmp459, index
 10888      F3
 10889              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10890              		.loc 1 259 23 view .LVU3702
 10891 3df9 4C01E7   		add	rdi, r12	# index, step
 10892              	.LVL585:
 10893              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccRwwoRx.s 			page 295


 10894              		.loc 1 258 22 view .LVU3703
 10895 3dfc 4809F2   		or	rdx, rsi	# mask, tmp751
 10896              	.LVL586:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10897              		.loc 1 259 17 is_stmt 1 view .LVU3704
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10898              		.loc 1 260 21 view .LVU3705
 10899              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10900              		.loc 1 260 36 is_stmt 0 view .LVU3706
 10901 3dff 4889FE   		mov	rsi, rdi	# tmp752, index
 10902 3e02 48C1EE06 		shr	rsi, 6	# tmp752,
 10903              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10904              		.loc 1 260 13 view .LVU3707
 10905 3e06 4839F0   		cmp	rax, rsi	# index_word, tmp752
 10906 3e09 7535     		jne	.L1006	#,
 258:sieve_extend.c ****                 index += step;
 10907              		.loc 1 258 17 is_stmt 1 view .LVU3708
 10908              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10909              		.loc 1 258 25 is_stmt 0 view .LVU3709
 10910 3e0b C4C2C1F7 		shlx	rsi, r11, rdi	# tmp753, tmp459, index
 10910      F3
 10911              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10912              		.loc 1 259 23 view .LVU3710
 10913 3e10 4C01E7   		add	rdi, r12	# index, step
 10914              	.LVL587:
 10915              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10916              		.loc 1 258 22 view .LVU3711
 10917 3e13 4809F2   		or	rdx, rsi	# mask, tmp753
 10918              	.LVL588:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10919              		.loc 1 259 17 is_stmt 1 view .LVU3712
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10920              		.loc 1 260 21 view .LVU3713
 10921              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10922              		.loc 1 260 36 is_stmt 0 view .LVU3714
 10923 3e16 4889FE   		mov	rsi, rdi	# tmp754, index
 10924 3e19 48C1EE06 		shr	rsi, 6	# tmp754,
 10925              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10926              		.loc 1 260 13 view .LVU3715
 10927 3e1d 4839F0   		cmp	rax, rsi	# index_word, tmp754
 10928 3e20 751E     		jne	.L1006	#,
 258:sieve_extend.c ****                 index += step;
 10929              		.loc 1 258 17 is_stmt 1 view .LVU3716
 10930              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10931              		.loc 1 258 25 is_stmt 0 view .LVU3717
 10932 3e22 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp755, tmp459, index
 10932      F3
 10933              	# sieve_extend.c:259:                 index += step;
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccRwwoRx.s 			page 296


 10934              		.loc 1 259 23 view .LVU3718
 10935 3e27 4C01E7   		add	rdi, r12	# index, step
 10936              	.LVL589:
 10937              	# sieve_extend.c:258:                 mask |= markmask(index);
 258:sieve_extend.c ****                 index += step;
 10938              		.loc 1 258 22 view .LVU3719
 10939 3e2a 4809F2   		or	rdx, rsi	# mask, tmp755
 10940              	.LVL590:
 259:sieve_extend.c ****             } while (index_word == wordindex(index));
 10941              		.loc 1 259 17 is_stmt 1 view .LVU3720
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10942              		.loc 1 260 21 view .LVU3721
 10943              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10944              		.loc 1 260 36 is_stmt 0 view .LVU3722
 10945 3e2d 4889FE   		mov	rsi, rdi	# tmp756, index
 10946 3e30 48C1EE06 		shr	rsi, 6	# tmp756,
 10947              	# sieve_extend.c:260:             } while (index_word == wordindex(index));
 260:sieve_extend.c ****             // #pragma GCC ivdep
 10948              		.loc 1 260 13 view .LVU3723
 10949 3e34 4839F0   		cmp	rax, rsi	# index_word, tmp756
 10950 3e37 0F843CFF 		je	.L751	#,
 10950      FFFF
 10951 3e3d 0F1F00   		.p2align 4
 10952              		.p2align 3
 10953              	.L1006:
 267:sieve_extend.c ****             #endif
 10954              		.loc 1 267 16 is_stmt 1 view .LVU3724
 10955              	.LVL591:
 10956              	.LBB539:
 10957              	.LBI531:
 167:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10958              		.loc 1 167 20 view .LVU3725
 10959              	.LBB535:
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10960              		.loc 1 168 4 view .LVU3726
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10961              		.loc 1 169 4 view .LVU3727
 10962              	# sieve_extend.c:169:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10963              		.loc 1 169 78 is_stmt 0 view .LVU3728
 10964 3e40 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 10965              	.LVL592:
 170:sieve_extend.c **** 
 10966              		.loc 1 170 4 is_stmt 1 view .LVU3729
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10967              		.loc 1 174 10 view .LVU3730
 10968 3e44 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 10969 3e47 0F830301 		jnb	.L752	#,
 10969      0000
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10970              		.loc 1 174 10 is_stmt 0 view .LVU3731
 10971 3e4d 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.587,
 10972              	.L753:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10973              		.loc 1 175 8 is_stmt 1 view .LVU3732
 10974              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 297


 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10975              		.loc 1 175 19 is_stmt 0 view .LVU3733
 10976 3e51 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10977              		.loc 1 175 35 is_stmt 1 view .LVU3734
 10978              	.LVL593:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10979              		.loc 1 176 8 view .LVU3735
 10980              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10981              		.loc 1 176 19 is_stmt 0 view .LVU3736
 10982 3e54 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10983              		.loc 1 176 35 is_stmt 1 view .LVU3737
 10984              	.LVL594:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10985              		.loc 1 177 8 view .LVU3738
 10986              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10987              		.loc 1 177 19 is_stmt 0 view .LVU3739
 10988 3e58 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10989              		.loc 1 177 35 is_stmt 1 view .LVU3740
 10990              	.LVL595:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10991              		.loc 1 178 8 view .LVU3741
 10992              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10993              		.loc 1 178 19 is_stmt 0 view .LVU3742
 10994 3e5b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10995              		.loc 1 178 35 is_stmt 1 view .LVU3743
 10996              	.LVL596:
 179:sieve_extend.c ****    }
 10997              		.loc 1 179 8 view .LVU3744
 10998 3e5f 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 10999              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11000              		.loc 1 179 19 is_stmt 0 view .LVU3745
 11001 3e62 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11002              		.loc 1 179 35 is_stmt 1 view .LVU3746
 11003 3e66 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11004              	.LVL597:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11005              		.loc 1 174 10 view .LVU3747
 11006 3e69 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11007 3e6c 0F86DE00 		jbe	.L752	#,
 11007      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11008              		.loc 1 175 8 view .LVU3748
 11009              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11010              		.loc 1 175 19 is_stmt 0 view .LVU3749
 11011 3e72 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11012              		.loc 1 175 35 is_stmt 1 view .LVU3750
GAS LISTING /tmp/ccRwwoRx.s 			page 298


 11013              	.LVL598:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11014              		.loc 1 176 8 view .LVU3751
 11015              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11016              		.loc 1 176 19 is_stmt 0 view .LVU3752
 11017 3e75 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11018              		.loc 1 176 35 is_stmt 1 view .LVU3753
 11019              	.LVL599:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11020              		.loc 1 177 8 view .LVU3754
 11021              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11022              		.loc 1 177 19 is_stmt 0 view .LVU3755
 11023 3e79 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11024              		.loc 1 177 35 is_stmt 1 view .LVU3756
 11025              	.LVL600:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11026              		.loc 1 178 8 view .LVU3757
 11027              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11028              		.loc 1 178 19 is_stmt 0 view .LVU3758
 11029 3e7c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11030              		.loc 1 178 35 is_stmt 1 view .LVU3759
 11031              	.LVL601:
 179:sieve_extend.c ****    }
 11032              		.loc 1 179 8 view .LVU3760
 11033 3e80 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11034              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11035              		.loc 1 179 19 is_stmt 0 view .LVU3761
 11036 3e83 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11037              		.loc 1 179 35 is_stmt 1 view .LVU3762
 11038 3e87 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11039              	.LVL602:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11040              		.loc 1 174 10 view .LVU3763
 11041 3e8a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11042 3e8d 0F86BD00 		jbe	.L752	#,
 11042      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11043              		.loc 1 175 8 view .LVU3764
 11044              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11045              		.loc 1 175 19 is_stmt 0 view .LVU3765
 11046 3e93 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11047              		.loc 1 175 35 is_stmt 1 view .LVU3766
 11048              	.LVL603:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11049              		.loc 1 176 8 view .LVU3767
 11050              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 299


 11051              		.loc 1 176 19 is_stmt 0 view .LVU3768
 11052 3e96 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11053              		.loc 1 176 35 is_stmt 1 view .LVU3769
 11054              	.LVL604:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11055              		.loc 1 177 8 view .LVU3770
 11056              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11057              		.loc 1 177 19 is_stmt 0 view .LVU3771
 11058 3e9a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11059              		.loc 1 177 35 is_stmt 1 view .LVU3772
 11060              	.LVL605:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11061              		.loc 1 178 8 view .LVU3773
 11062              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11063              		.loc 1 178 19 is_stmt 0 view .LVU3774
 11064 3e9d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11065              		.loc 1 178 35 is_stmt 1 view .LVU3775
 11066              	.LVL606:
 179:sieve_extend.c ****    }
 11067              		.loc 1 179 8 view .LVU3776
 11068 3ea1 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11069              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11070              		.loc 1 179 19 is_stmt 0 view .LVU3777
 11071 3ea4 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11072              		.loc 1 179 35 is_stmt 1 view .LVU3778
 11073 3ea8 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11074              	.LVL607:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11075              		.loc 1 174 10 view .LVU3779
 11076 3eab 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11077 3eae 0F869C00 		jbe	.L752	#,
 11077      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11078              		.loc 1 175 8 view .LVU3780
 11079              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11080              		.loc 1 175 19 is_stmt 0 view .LVU3781
 11081 3eb4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11082              		.loc 1 175 35 is_stmt 1 view .LVU3782
 11083              	.LVL608:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11084              		.loc 1 176 8 view .LVU3783
 11085              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11086              		.loc 1 176 19 is_stmt 0 view .LVU3784
 11087 3eb7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11088              		.loc 1 176 35 is_stmt 1 view .LVU3785
 11089              	.LVL609:
GAS LISTING /tmp/ccRwwoRx.s 			page 300


 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11090              		.loc 1 177 8 view .LVU3786
 11091              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11092              		.loc 1 177 19 is_stmt 0 view .LVU3787
 11093 3ebb 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11094              		.loc 1 177 35 is_stmt 1 view .LVU3788
 11095              	.LVL610:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11096              		.loc 1 178 8 view .LVU3789
 11097              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11098              		.loc 1 178 19 is_stmt 0 view .LVU3790
 11099 3ebe 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11100              		.loc 1 178 35 is_stmt 1 view .LVU3791
 11101              	.LVL611:
 179:sieve_extend.c ****    }
 11102              		.loc 1 179 8 view .LVU3792
 11103 3ec2 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11104              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11105              		.loc 1 179 19 is_stmt 0 view .LVU3793
 11106 3ec5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11107              		.loc 1 179 35 is_stmt 1 view .LVU3794
 11108 3ec9 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11109              	.LVL612:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11110              		.loc 1 174 10 view .LVU3795
 11111 3ecc 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11112 3ecf 767F     		jbe	.L752	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11113              		.loc 1 175 8 view .LVU3796
 11114              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11115              		.loc 1 175 19 is_stmt 0 view .LVU3797
 11116 3ed1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11117              		.loc 1 175 35 is_stmt 1 view .LVU3798
 11118              	.LVL613:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11119              		.loc 1 176 8 view .LVU3799
 11120              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11121              		.loc 1 176 19 is_stmt 0 view .LVU3800
 11122 3ed4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11123              		.loc 1 176 35 is_stmt 1 view .LVU3801
 11124              	.LVL614:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11125              		.loc 1 177 8 view .LVU3802
 11126              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11127              		.loc 1 177 19 is_stmt 0 view .LVU3803
 11128 3ed8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
GAS LISTING /tmp/ccRwwoRx.s 			page 301


 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11129              		.loc 1 177 35 is_stmt 1 view .LVU3804
 11130              	.LVL615:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11131              		.loc 1 178 8 view .LVU3805
 11132              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11133              		.loc 1 178 19 is_stmt 0 view .LVU3806
 11134 3edb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11135              		.loc 1 178 35 is_stmt 1 view .LVU3807
 11136              	.LVL616:
 179:sieve_extend.c ****    }
 11137              		.loc 1 179 8 view .LVU3808
 11138 3edf 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11139              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11140              		.loc 1 179 19 is_stmt 0 view .LVU3809
 11141 3ee2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11142              		.loc 1 179 35 is_stmt 1 view .LVU3810
 11143 3ee6 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11144              	.LVL617:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11145              		.loc 1 174 10 view .LVU3811
 11146 3ee9 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11147 3eec 7662     		jbe	.L752	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11148              		.loc 1 175 8 view .LVU3812
 11149              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11150              		.loc 1 175 19 is_stmt 0 view .LVU3813
 11151 3eee 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11152              		.loc 1 175 35 is_stmt 1 view .LVU3814
 11153              	.LVL618:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11154              		.loc 1 176 8 view .LVU3815
 11155              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11156              		.loc 1 176 19 is_stmt 0 view .LVU3816
 11157 3ef1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11158              		.loc 1 176 35 is_stmt 1 view .LVU3817
 11159              	.LVL619:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11160              		.loc 1 177 8 view .LVU3818
 11161              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11162              		.loc 1 177 19 is_stmt 0 view .LVU3819
 11163 3ef5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11164              		.loc 1 177 35 is_stmt 1 view .LVU3820
 11165              	.LVL620:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11166              		.loc 1 178 8 view .LVU3821
 11167              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 302


 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11168              		.loc 1 178 19 is_stmt 0 view .LVU3822
 11169 3ef8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11170              		.loc 1 178 35 is_stmt 1 view .LVU3823
 11171              	.LVL621:
 179:sieve_extend.c ****    }
 11172              		.loc 1 179 8 view .LVU3824
 11173 3efc 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11174              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11175              		.loc 1 179 19 is_stmt 0 view .LVU3825
 11176 3eff 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11177              		.loc 1 179 35 is_stmt 1 view .LVU3826
 11178 3f03 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11179              	.LVL622:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11180              		.loc 1 174 10 view .LVU3827
 11181 3f06 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11182 3f09 7645     		jbe	.L752	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11183              		.loc 1 175 8 view .LVU3828
 11184              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11185              		.loc 1 175 19 is_stmt 0 view .LVU3829
 11186 3f0b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11187              		.loc 1 175 35 is_stmt 1 view .LVU3830
 11188              	.LVL623:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11189              		.loc 1 176 8 view .LVU3831
 11190              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11191              		.loc 1 176 19 is_stmt 0 view .LVU3832
 11192 3f0e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11193              		.loc 1 176 35 is_stmt 1 view .LVU3833
 11194              	.LVL624:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11195              		.loc 1 177 8 view .LVU3834
 11196              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11197              		.loc 1 177 19 is_stmt 0 view .LVU3835
 11198 3f12 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11199              		.loc 1 177 35 is_stmt 1 view .LVU3836
 11200              	.LVL625:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11201              		.loc 1 178 8 view .LVU3837
 11202              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11203              		.loc 1 178 19 is_stmt 0 view .LVU3838
 11204 3f15 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11205              		.loc 1 178 35 is_stmt 1 view .LVU3839
 11206              	.LVL626:
GAS LISTING /tmp/ccRwwoRx.s 			page 303


 179:sieve_extend.c ****    }
 11207              		.loc 1 179 8 view .LVU3840
 11208 3f19 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11209              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11210              		.loc 1 179 19 is_stmt 0 view .LVU3841
 11211 3f1c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11212              		.loc 1 179 35 is_stmt 1 view .LVU3842
 11213 3f20 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11214              	.LVL627:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11215              		.loc 1 174 10 view .LVU3843
 11216 3f23 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11217 3f26 7628     		jbe	.L752	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11218              		.loc 1 175 8 view .LVU3844
 11219              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11220              		.loc 1 175 19 is_stmt 0 view .LVU3845
 11221 3f28 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11222              		.loc 1 175 35 is_stmt 1 view .LVU3846
 11223              	.LVL628:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11224              		.loc 1 176 8 view .LVU3847
 11225              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11226              		.loc 1 176 19 is_stmt 0 view .LVU3848
 11227 3f2b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_518, index: _197, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11228              		.loc 1 176 35 is_stmt 1 view .LVU3849
 11229              	.LVL629:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11230              		.loc 1 177 8 view .LVU3850
 11231              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11232              		.loc 1 177 19 is_stmt 0 view .LVU3851
 11233 3f2f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _731, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11234              		.loc 1 177 35 is_stmt 1 view .LVU3852
 11235              	.LVL630:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11236              		.loc 1 178 8 view .LVU3853
 11237              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11238              		.loc 1 178 19 is_stmt 0 view .LVU3854
 11239 3f32 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _731, index: _197, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11240              		.loc 1 178 35 is_stmt 1 view .LVU3855
 11241              	.LVL631:
 179:sieve_extend.c ****    }
 11242              		.loc 1 179 8 view .LVU3856
 11243 3f36 4C01C6   		add	rsi, r8	# ivtmp.587, tmp456
 11244              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11245              		.loc 1 179 19 is_stmt 0 view .LVU3857
GAS LISTING /tmp/ccRwwoRx.s 			page 304


 11246 3f39 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_518, index: _197, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 11247              		.loc 1 179 35 is_stmt 1 view .LVU3858
 11248 3f3d 4C01C0   		add	rax, r8	# index_ptr, tmp456
 11249              	.LVL632:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11250              		.loc 1 174 10 view .LVU3859
 11251 3f40 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11252 3f43 0F8708FF 		ja	.L753	#,
 11252      FFFF
 11253 3f49 0F1F8000 		.p2align 4
 11253      000000
 11254              		.p2align 3
 11255              	.L752:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11256              		.loc 1 182 4 view .LVU3860
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11257              		.loc 1 183 4 view .LVU3861
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11258              		.loc 1 183 10 view .LVU3862
 11259 3f50 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11260 3f53 765B     		jbe	.L754	#,
 11261              	.L755:
 184:sieve_extend.c ****    }
 11262              		.loc 1 184 8 view .LVU3863
 11263              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11264              		.loc 1 184 19 is_stmt 0 view .LVU3864
 11265 3f55 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11266              		.loc 1 184 34 is_stmt 1 view .LVU3865
 11267              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11268              		.loc 1 184 43 is_stmt 0 view .LVU3866
 11269 3f58 4801C8   		add	rax, rcx	# index_ptr, _197
 11270              	.LVL633:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11271              		.loc 1 183 10 is_stmt 1 view .LVU3867
 11272 3f5b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11273 3f5e 7650     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11274              		.loc 1 184 8 view .LVU3868
 11275              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11276              		.loc 1 184 19 is_stmt 0 view .LVU3869
 11277 3f60 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11278              		.loc 1 184 34 is_stmt 1 view .LVU3870
 11279              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11280              		.loc 1 184 43 is_stmt 0 view .LVU3871
 11281 3f63 4801C8   		add	rax, rcx	# index_ptr, _197
 11282              	.LVL634:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11283              		.loc 1 183 10 is_stmt 1 view .LVU3872
 11284 3f66 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11285 3f69 7645     		jbe	.L754	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 305


 184:sieve_extend.c ****    }
 11286              		.loc 1 184 8 view .LVU3873
 11287              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11288              		.loc 1 184 19 is_stmt 0 view .LVU3874
 11289 3f6b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11290              		.loc 1 184 34 is_stmt 1 view .LVU3875
 11291              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11292              		.loc 1 184 43 is_stmt 0 view .LVU3876
 11293 3f6e 4801C8   		add	rax, rcx	# index_ptr, _197
 11294              	.LVL635:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11295              		.loc 1 183 10 is_stmt 1 view .LVU3877
 11296 3f71 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11297 3f74 763A     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11298              		.loc 1 184 8 view .LVU3878
 11299              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11300              		.loc 1 184 19 is_stmt 0 view .LVU3879
 11301 3f76 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11302              		.loc 1 184 34 is_stmt 1 view .LVU3880
 11303              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11304              		.loc 1 184 43 is_stmt 0 view .LVU3881
 11305 3f79 4801C8   		add	rax, rcx	# index_ptr, _197
 11306              	.LVL636:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11307              		.loc 1 183 10 is_stmt 1 view .LVU3882
 11308 3f7c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11309 3f7f 762F     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11310              		.loc 1 184 8 view .LVU3883
 11311              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11312              		.loc 1 184 19 is_stmt 0 view .LVU3884
 11313 3f81 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11314              		.loc 1 184 34 is_stmt 1 view .LVU3885
 11315              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11316              		.loc 1 184 43 is_stmt 0 view .LVU3886
 11317 3f84 4801C8   		add	rax, rcx	# index_ptr, _197
 11318              	.LVL637:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11319              		.loc 1 183 10 is_stmt 1 view .LVU3887
 11320 3f87 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11321 3f8a 7624     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11322              		.loc 1 184 8 view .LVU3888
 11323              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11324              		.loc 1 184 19 is_stmt 0 view .LVU3889
 11325 3f8c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
GAS LISTING /tmp/ccRwwoRx.s 			page 306


 184:sieve_extend.c ****    }
 11326              		.loc 1 184 34 is_stmt 1 view .LVU3890
 11327              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11328              		.loc 1 184 43 is_stmt 0 view .LVU3891
 11329 3f8f 4801C8   		add	rax, rcx	# index_ptr, _197
 11330              	.LVL638:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11331              		.loc 1 183 10 is_stmt 1 view .LVU3892
 11332 3f92 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11333 3f95 7619     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11334              		.loc 1 184 8 view .LVU3893
 11335              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11336              		.loc 1 184 19 is_stmt 0 view .LVU3894
 11337 3f97 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11338              		.loc 1 184 34 is_stmt 1 view .LVU3895
 11339              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11340              		.loc 1 184 43 is_stmt 0 view .LVU3896
 11341 3f9a 4801C8   		add	rax, rcx	# index_ptr, _197
 11342              	.LVL639:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11343              		.loc 1 183 10 is_stmt 1 view .LVU3897
 11344 3f9d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11345 3fa0 760E     		jbe	.L754	#,
 184:sieve_extend.c ****    }
 11346              		.loc 1 184 8 view .LVU3898
 11347              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11348              		.loc 1 184 19 is_stmt 0 view .LVU3899
 11349 3fa2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_392, offset: 0B], mask
 184:sieve_extend.c ****    }
 11350              		.loc 1 184 34 is_stmt 1 view .LVU3900
 11351              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 11352              		.loc 1 184 43 is_stmt 0 view .LVU3901
 11353 3fa5 4801C8   		add	rax, rcx	# index_ptr, _197
 11354              	.LVL640:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11355              		.loc 1 183 10 is_stmt 1 view .LVU3902
 11356 3fa8 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11357 3fab 77A8     		ja	.L755	#,
 11358 3fad 0F1F00   		.p2align 4
 11359              		.p2align 3
 11360              	.L754:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11361              		.loc 1 187 4 view .LVU3903
 11362              	# sieve_extend.c:187:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11363              		.loc 1 187 7 is_stmt 0 view .LVU3904
 11364 3fb0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11365 3fb3 0F84BF06 		je	.L1093	#,
 11365      0000
 11366              	.LVL641:
GAS LISTING /tmp/ccRwwoRx.s 			page 307


 11367              	.L756:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11368              		.loc 1 187 7 view .LVU3905
 11369              	.LBE535:
 11370              	.LBE539:
 11371              	.LBE530:
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11372              		.loc 1 253 54 is_stmt 1 view .LVU3906
 11373              	# sieve_extend.c:253:         for (register counter_t index = range_start; index <= range_stop_uniq
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11374              		.loc 1 253 9 is_stmt 0 view .LVU3907
 11375 3fb9 4939FE   		cmp	r14, rdi	# tmp436, index
 11376 3fbc 0F83AEFD 		jnb	.L757	#,
 11376      FFFF
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11377              		.loc 1 253 9 view .LVU3908
 11378 3fc2 488B5C24 		mov	rbx, QWORD PTR 72[rsp]	# index, %sfp
 11378      48
 11379 3fc7 E99BF6FF 		jmp	.L739	#
 11379      FF
 11380              	.LVL642:
 11381              	.L1083:
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11382              		.loc 1 253 9 view .LVU3909
 11383 3fcc 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# <retval>, %sfp
 11383      28
 11384 3fd1 89CB     		mov	ebx, ecx	# tmp969, prime
 11385 3fd3 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, prime
 11385      40
 11386 3fd8 41BB0100 		mov	r11d, 1	# tmp394,
 11386      0000
 11387 3fde 48C1E906 		shr	rcx, 6	# tmp395,
 11388 3fe2 C442E1F7 		shlx	r12, r11, rbx	# prephitmp_716, tmp394, tmp969
 11388      E3
 11389 3fe7 4D8B7108 		mov	r14, QWORD PTR 8[r9]	# prephitmp_814, sieve_91->bits
 11390 3feb 498D2CCF 		lea	rbp, [r15+rcx*8]	# prephitmp_714,
 11391              	.LVL643:
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11392              		.loc 1 253 9 view .LVU3910
 11393 3fef 4C896424 		mov	QWORD PTR 48[rsp], r12	# %sfp, prephitmp_716
 11393      30
 11394 3ff4 48896C24 		mov	QWORD PTR 32[rsp], rbp	# %sfp, prephitmp_714
 11394      20
 11395 3ff9 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_814
 11395      08
 11396              	.LVL644:
 11397              	.L730:
 253:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11398              		.loc 1 253 9 view .LVU3911
 11399              	.LBE529:
 11400              	.LBE528:
 11401              	.LBE527:
 11402              	.LBE556:
 11403              	.LBE563:
 11404              	.LBE578:
 889:sieve_extend.c ****     counter_t startprime = block.prime;
 11405              		.loc 1 889 5 is_stmt 1 view .LVU3912
GAS LISTING /tmp/ccRwwoRx.s 			page 308


 11406              	.LBB579:
 791:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 11407              		.loc 1 791 20 view .LVU3913
 11408              	.LBB573:
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 11409              		.loc 1 792 5 view .LVU3914
 11410              	# sieve_extend.c:792:     if (size < WORD_SIZE_counter)   {
 792:sieve_extend.c ****         extendSieve_smallSize (bitstorage, source_start, size, destination_stop);
 11411              		.loc 1 792 8 is_stmt 0 view .LVU3915
 11412 3ffe 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 11413 4002 0F86C2F9 		jbe	.L723	#,
 11413      FFFF
 11414              	.LVL645:
 11415              	.L769:
 797:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11416              		.loc 1 797 5 is_stmt 1 view .LVU3916
 798:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11417              		.loc 1 798 5 view .LVU3917
 11418              	# sieve_extend.c:797:     const counter_t copy_start  = source_start + size;
 797:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11419              		.loc 1 797 21 is_stmt 0 view .LVU3918
 11420 4008 4C8D2C16 		lea	r13, [rsi+rdx]	# copy_start,
 11421              	.LVL646:
 11422              	# sieve_extend.c:799:     const bitshift_t source_bit = bitindex_calc(source_start);
 799:sieve_extend.c **** 
 11423              		.loc 1 799 22 view .LVU3919
 11424 400c 4889F7   		mov	rdi, rsi	# source_bit, block$pattern_start
 11425 400f 83E73F   		and	edi, 63	# source_bit,
 11426              	# sieve_extend.c:798:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 798:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11427              		.loc 1 798 22 view .LVU3920
 11428 4012 4183E53F 		and	r13d, 63	# copy_bit,
 11429              	.LVL647:
 799:sieve_extend.c **** 
 11430              		.loc 1 799 5 is_stmt 1 view .LVU3921
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11431              		.loc 1 801 5 view .LVU3922
 11432              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11433              		.loc 1 801 37 is_stmt 0 view .LVU3923
 11434 4016 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 11434      08
 11435              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11436              		.loc 1 801 13 view .LVU3924
 11437 401b 4939FD   		cmp	r13, rdi	# copy_bit, source_bit
 11438              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11439              		.loc 1 801 37 view .LVU3925
 11440 401e 4C89FF   		mov	rdi, r15	#, _96
 11441              	.LVL648:
 11442              	# sieve_extend.c:801:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11443              		.loc 1 801 13 view .LVU3926
 11444 4021 0F827C06 		jb	.L1094	#,
 11444      0000
 11445              	.LVL649:
GAS LISTING /tmp/ccRwwoRx.s 			page 309


 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11446              		.loc 1 802 10 is_stmt 1 view .LVU3927
 11447              	# sieve_extend.c:802:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, 
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11448              		.loc 1 802 13 is_stmt 0 view .LVU3928
 11449 4027 0F861305 		jbe	.L772	#,
 11449      0000
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11450              		.loc 1 802 37 is_stmt 1 view .LVU3929
 11451 402d E88EC6FF 		call	extendSieve_shiftright_ivdep	#
 11451      FF
 11452              	.LVL650:
 11453              	.L770:
 802:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11454              		.loc 1 802 37 is_stmt 0 view .LVU3930
 11455              	.LBE573:
 11456              	.LBE579:
 890:sieve_extend.c **** 
 11457              		.loc 1 890 5 is_stmt 1 view .LVU3931
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11458              		.loc 1 893 5 view .LVU3932
 11459              	.LBB580:
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11460              		.loc 1 893 10 view .LVU3933
 11461              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11462              		.loc 1 893 38 is_stmt 0 view .LVU3934
 11463 4032 488B7424 		mov	rsi, QWORD PTR 56[rsp]	# blocksize, %sfp
 11463      38
 11464              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11465              		.loc 1 893 20 view .LVU3935
 11466 4037 4531F6   		xor	r14d, r14d	# block_start
 11467              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11468              		.loc 1 893 83 view .LVU3936
 11469 403a 488B5424 		mov	rdx, QWORD PTR 40[rsp]	# <retval>, %sfp
 11469      28
 11470              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11471              		.loc 1 893 38 view .LVU3937
 11472 403f 4C8D66FF 		lea	r12, -1[rsi]	# block_stop,
 11473              	.LVL651:
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11474              		.loc 1 893 63 is_stmt 1 view .LVU3938
 11475              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11476              		.loc 1 893 83 is_stmt 0 view .LVU3939
 11477 4043 488B5208 		mov	rdx, QWORD PTR 8[rdx]	# _8, sieve_91->bits
 11478              	.LVL652:
 11479 4047 660F1F84 		.p2align 4
 11479      00000000 
 11479      00
 11480              		.p2align 3
 11481              	.L776:
 11482              	.LBB581:
 894:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
GAS LISTING /tmp/ccRwwoRx.s 			page 310


 11483              		.loc 1 894 9 is_stmt 1 view .LVU3940
 11484              	.LBB582:
 11485              	.LBB583:
 11486              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11487              		.loc 1 118 11 is_stmt 0 view .LVU3941
 11488 4050 488B4424 		mov	rax, QWORD PTR 32[rsp]	# prephitmp_714, %sfp
 11488      20
 11489 4055 4C39E2   		cmp	rdx, r12	# _8, block_stop
 11490 4058 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# prephitmp_716, %sfp
 11490      30
 11491 405d 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	# index, %sfp
 11491      40
 11492 4062 4C0F46E2 		cmovbe	r12, rdx	# _8,, block_stop
 11493              	.LVL653:
 118:sieve_extend.c ****     return index;
 11494              		.loc 1 118 11 view .LVU3942
 11495 4066 4C892424 		mov	QWORD PTR [rsp], r12	# %sfp, block_stop
 11496              	.LVL654:
 118:sieve_extend.c ****     return index;
 11497              		.loc 1 118 11 view .LVU3943
 11498              	.LBE583:
 11499              	.LBE582:
 895:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 11500              		.loc 1 895 9 is_stmt 1 view .LVU3944
 11501              	.LBB585:
 11502              	.LBI582:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 11503              		.loc 1 117 25 view .LVU3945
 11504              	.LBB584:
 118:sieve_extend.c ****     return index;
 11505              		.loc 1 118 5 view .LVU3946
 118:sieve_extend.c ****     return index;
 11506              		.loc 1 118 11 view .LVU3947
 11507 406a 4C8510   		test	QWORD PTR [rax], r10	# MEM[(uint64_t *)prephitmp_714], prephitmp_716
 11508 406d 0F84BD00 		je	.L773	#,
 11508      0000
 11509              	.LVL655:
 11510              	.L774:
 118:sieve_extend.c ****     return index;
 11511              		.loc 1 118 60 view .LVU3948
 11512              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11513              		.loc 1 118 65 is_stmt 0 view .LVU3949
 11514 4073 4D8D4801 		lea	r9, 1[r8]	# tmp553,
 11515              	.LVL656:
 11516              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11517              		.loc 1 118 23 view .LVU3950
 11518 4077 4D89CB   		mov	r11, r9	# tmp490, index
 11519              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11520              		.loc 1 118 65 view .LVU3951
 11521 407a 4D89C8   		mov	r8, r9	# index, tmp553
 118:sieve_extend.c ****     return index;
 11522              		.loc 1 118 11 is_stmt 1 view .LVU3952
 11523              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccRwwoRx.s 			page 311


 118:sieve_extend.c ****     return index;
 11524              		.loc 1 118 23 is_stmt 0 view .LVU3953
 11525 407d 49C1EB06 		shr	r11, 6	# tmp490,
 11526              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11527              		.loc 1 118 12 view .LVU3954
 11528 4081 4B8B1CDF 		mov	rbx, QWORD PTR [r15+r11*8]	# *_32, *_32
 11529              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11530              		.loc 1 118 11 view .LVU3955
 11531 4085 4C0FA3CB 		bt	rbx, r9	# *_32, index
 11532 4089 0F83A100 		jnc	.L773	#,
 11532      0000
 118:sieve_extend.c ****     return index;
 11533              		.loc 1 118 60 is_stmt 1 view .LVU3956
 11534              	.LVL657:
 11535              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11536              		.loc 1 118 65 is_stmt 0 view .LVU3957
 11537 408f 4983C001 		add	r8, 1	# index,
 11538              	.LVL658:
 118:sieve_extend.c ****     return index;
 11539              		.loc 1 118 11 is_stmt 1 view .LVU3958
 11540              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11541              		.loc 1 118 23 is_stmt 0 view .LVU3959
 11542 4093 4D89C4   		mov	r12, r8	# tmp627, index
 11543 4096 49C1EC06 		shr	r12, 6	# tmp627,
 11544              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11545              		.loc 1 118 12 view .LVU3960
 11546 409a 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
 11547              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11548              		.loc 1 118 11 view .LVU3961
 11549 409e 4C0FA3C1 		bt	rcx, r8	# *_32, index
 11550 40a2 0F838800 		jnc	.L773	#,
 11550      0000
 118:sieve_extend.c ****     return index;
 11551              		.loc 1 118 60 is_stmt 1 view .LVU3962
 11552              	.LVL659:
 11553              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11554              		.loc 1 118 65 is_stmt 0 view .LVU3963
 11555 40a8 4D8D4102 		lea	r8, 2[r9]	# index,
 11556              	.LVL660:
 118:sieve_extend.c ****     return index;
 11557              		.loc 1 118 11 is_stmt 1 view .LVU3964
 11558              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11559              		.loc 1 118 23 is_stmt 0 view .LVU3965
 11560 40ac 4C89C5   		mov	rbp, r8	# tmp631, index
 11561 40af 48C1ED06 		shr	rbp, 6	# tmp631,
 11562              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11563              		.loc 1 118 12 view .LVU3966
 11564 40b3 4D8B2CEF 		mov	r13, QWORD PTR [r15+rbp*8]	# *_32, *_32
GAS LISTING /tmp/ccRwwoRx.s 			page 312


 11565              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11566              		.loc 1 118 11 view .LVU3967
 11567 40b7 4D0FA3C5 		bt	r13, r8	# *_32, index
 11568 40bb 7373     		jnc	.L773	#,
 118:sieve_extend.c ****     return index;
 11569              		.loc 1 118 60 is_stmt 1 view .LVU3968
 11570              	.LVL661:
 11571              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11572              		.loc 1 118 65 is_stmt 0 view .LVU3969
 11573 40bd 4D8D4103 		lea	r8, 3[r9]	# index,
 11574              	.LVL662:
 118:sieve_extend.c ****     return index;
 11575              		.loc 1 118 11 is_stmt 1 view .LVU3970
 11576              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11577              		.loc 1 118 23 is_stmt 0 view .LVU3971
 11578 40c1 4C89C7   		mov	rdi, r8	# tmp635, index
 11579 40c4 48C1EF06 		shr	rdi, 6	# tmp635,
 11580              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11581              		.loc 1 118 12 view .LVU3972
 11582 40c8 498B34FF 		mov	rsi, QWORD PTR [r15+rdi*8]	# *_32, *_32
 11583              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11584              		.loc 1 118 11 view .LVU3973
 11585 40cc 4C0FA3C6 		bt	rsi, r8	# *_32, index
 11586 40d0 735E     		jnc	.L773	#,
 118:sieve_extend.c ****     return index;
 11587              		.loc 1 118 60 is_stmt 1 view .LVU3974
 11588              	.LVL663:
 11589              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11590              		.loc 1 118 65 is_stmt 0 view .LVU3975
 11591 40d2 4D8D4104 		lea	r8, 4[r9]	# index,
 11592              	.LVL664:
 118:sieve_extend.c ****     return index;
 11593              		.loc 1 118 11 is_stmt 1 view .LVU3976
 11594              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11595              		.loc 1 118 23 is_stmt 0 view .LVU3977
 11596 40d6 4C89C0   		mov	rax, r8	# tmp639, index
 11597 40d9 48C1E806 		shr	rax, 6	# tmp639,
 11598              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11599              		.loc 1 118 12 view .LVU3978
 11600 40dd 4D8B14C7 		mov	r10, QWORD PTR [r15+rax*8]	# *_32, *_32
 11601              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11602              		.loc 1 118 11 view .LVU3979
 11603 40e1 4D0FA3C2 		bt	r10, r8	# *_32, index
 11604 40e5 7349     		jnc	.L773	#,
 118:sieve_extend.c ****     return index;
 11605              		.loc 1 118 60 is_stmt 1 view .LVU3980
 11606              	.LVL665:
 11607              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccRwwoRx.s 			page 313


 118:sieve_extend.c ****     return index;
 11608              		.loc 1 118 65 is_stmt 0 view .LVU3981
 11609 40e7 4D8D4105 		lea	r8, 5[r9]	# index,
 11610              	.LVL666:
 118:sieve_extend.c ****     return index;
 11611              		.loc 1 118 11 is_stmt 1 view .LVU3982
 11612              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11613              		.loc 1 118 23 is_stmt 0 view .LVU3983
 11614 40eb 4D89C3   		mov	r11, r8	# tmp643, index
 11615 40ee 49C1EB06 		shr	r11, 6	# tmp643,
 11616              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11617              		.loc 1 118 12 view .LVU3984
 11618 40f2 4B8B1CDF 		mov	rbx, QWORD PTR [r15+r11*8]	# *_32, *_32
 11619              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11620              		.loc 1 118 11 view .LVU3985
 11621 40f6 4C0FA3C3 		bt	rbx, r8	# *_32, index
 11622 40fa 7334     		jnc	.L773	#,
 118:sieve_extend.c ****     return index;
 11623              		.loc 1 118 60 is_stmt 1 view .LVU3986
 11624              	.LVL667:
 11625              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11626              		.loc 1 118 65 is_stmt 0 view .LVU3987
 11627 40fc 4D8D4106 		lea	r8, 6[r9]	# index,
 11628              	.LVL668:
 118:sieve_extend.c ****     return index;
 11629              		.loc 1 118 11 is_stmt 1 view .LVU3988
 11630              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11631              		.loc 1 118 23 is_stmt 0 view .LVU3989
 11632 4100 4D89C4   		mov	r12, r8	# tmp647, index
 11633 4103 49C1EC06 		shr	r12, 6	# tmp647,
 11634              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11635              		.loc 1 118 12 view .LVU3990
 11636 4107 4B8B0CE7 		mov	rcx, QWORD PTR [r15+r12*8]	# *_32, *_32
 11637              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11638              		.loc 1 118 11 view .LVU3991
 11639 410b 4C0FA3C1 		bt	rcx, r8	# *_32, index
 11640 410f 731F     		jnc	.L773	#,
 118:sieve_extend.c ****     return index;
 11641              		.loc 1 118 60 is_stmt 1 view .LVU3992
 11642              	.LVL669:
 11643              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11644              		.loc 1 118 65 is_stmt 0 view .LVU3993
 11645 4111 4D8D4107 		lea	r8, 7[r9]	# index,
 11646              	.LVL670:
 118:sieve_extend.c ****     return index;
 11647              		.loc 1 118 11 is_stmt 1 view .LVU3994
 11648              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11649              		.loc 1 118 23 is_stmt 0 view .LVU3995
GAS LISTING /tmp/ccRwwoRx.s 			page 314


 11650 4115 4D89C1   		mov	r9, r8	# tmp651, index
 11651 4118 49C1E906 		shr	r9, 6	# tmp651,
 11652              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11653              		.loc 1 118 12 view .LVU3996
 11654 411c 4B8B2CCF 		mov	rbp, QWORD PTR [r15+r9*8]	# *_32, *_32
 11655              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 11656              		.loc 1 118 11 view .LVU3997
 11657 4120 4C0FA3C5 		bt	rbp, r8	# *_32, index
 11658 4124 0F8249FF 		jc	.L774	#,
 11658      FFFF
 11659              	.LVL671:
 11660 412a 660F1F44 		.p2align 4
 11660      0000
 11661              		.p2align 3
 11662              	.L773:
 119:sieve_extend.c **** }
 11663              		.loc 1 119 5 is_stmt 1 view .LVU3998
 119:sieve_extend.c **** }
 11664              		.loc 1 119 5 is_stmt 0 view .LVU3999
 11665              	.LBE584:
 11666              	.LBE585:
 896:sieve_extend.c ****     } 
 11667              		.loc 1 896 9 is_stmt 1 view .LVU4000
 11668              	.LBB586:
 11669              	.LBI586:
 806:sieve_extend.c ****     counter_t prime = prime_start;
 11670              		.loc 1 806 13 view .LVU4001
 11671              	.LBB587:
 807:sieve_extend.c ****     counter_t start = 0;
 11672              		.loc 1 807 5 view .LVU4002
 808:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 11673              		.loc 1 808 5 view .LVU4003
 809:sieve_extend.c **** 
 11674              		.loc 1 809 5 view .LVU4004
 11675              	# sieve_extend.c:809:     counter_t step  = prime * 2 + 1;
 809:sieve_extend.c **** 
 11676              		.loc 1 809 15 is_stmt 0 view .LVU4005
 11677 4130 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 11677      01
 11678              	.LVL672:
 811:sieve_extend.c ****     
 11679              		.loc 1 811 5 is_stmt 1 view .LVU4006
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11680              		.loc 1 813 5 view .LVU4007
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11681              		.loc 1 813 11 view .LVU4008
 11682              	# sieve_extend.c:813:     while (prime*step <= block_stop) {
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11683              		.loc 1 813 17 is_stmt 0 view .LVU4009
 11684 4135 4D89C5   		mov	r13, r8	# tmp496, index
 11685 4138 4D0FAFEA 		imul	r13, r10	# tmp496, step
 11686              	# sieve_extend.c:813:     while (prime*step <= block_stop) {
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11687              		.loc 1 813 11 view .LVU4010
 11688 413c 4C392C24 		cmp	QWORD PTR [rsp], r13	# %sfp, tmp496
GAS LISTING /tmp/ccRwwoRx.s 			page 315


 11689 4140 0F829D02 		jb	.L793	#,
 11689      0000
 11690              	.LBB588:
 11691              	.LBB589:
 11692              	.LBB590:
 11693              	.LBB591:
 11694              	.LBB592:
 11695              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11696              		.loc 1 168 20 view .LVU4011
 11697 4146 488B1424 		mov	rdx, QWORD PTR [rsp]	# block_stop, %sfp
 11698              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 11699              		.loc 1 188 29 view .LVU4012
 11700 414a 48C7C6FF 		mov	rsi, -1	# tmp1055,
 11700      FFFFFF
 11701 4151 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, block_start
 11701      10
 11702              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11703              		.loc 1 168 20 view .LVU4013
 11704 4156 4889D7   		mov	rdi, rdx	# range_stop_word, block_stop
 11705              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 11706              		.loc 1 188 29 view .LVU4014
 11707 4159 F7D2     		not	edx	# tmp498
 11708              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11709              		.loc 1 168 20 view .LVU4015
 11710 415b 48C1EF06 		shr	rdi, 6	# range_stop_word,
 11711              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 11712              		.loc 1 188 29 view .LVU4016
 11713 415f C4E2EBF7 		shrx	rax, rsi, rdx	# _398, tmp1055, tmp498
 11713      C6
 11714              	# sieve_extend.c:168:    const counter_t range_stop_word = wordindex(range_stop);
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11715              		.loc 1 168 20 view .LVU4017
 11716 4164 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, range_stop_word
 11716      18
 11717              	# sieve_extend.c:182:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11718              		.loc 1 182 41 view .LVU4018
 11719 4169 498D1CFF 		lea	rbx, [r15+rdi*8]	# range_stop_ptr,
 11720              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 11721              		.loc 1 188 29 view .LVU4019
 11722 416d 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, _398
 11722      08
 11723              	.LVL673:
 11724 4172 66662E0F 		.p2align 4
 11724      1F840000 
 11724      0000000F 
 11724      1F00
 11725              		.p2align 3
 11726              	.L792:
 188:sieve_extend.c ****    }
GAS LISTING /tmp/ccRwwoRx.s 			page 316


 11727              		.loc 1 188 29 view .LVU4020
 11728              	.LBE592:
 11729              	.LBE591:
 11730              	.LBE590:
 11731              	.LBE589:
 11732              	.LBE588:
 814:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11733              		.loc 1 814 9 is_stmt 1 view .LVU4021
 11734              	# sieve_extend.c:814:         if likely(block_start >= (prime + 1)) 
 814:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11735              		.loc 1 814 12 is_stmt 0 view .LVU4022
 11736 4180 488B4424 		mov	rax, QWORD PTR 16[rsp]	# block_start, %sfp
 11736      10
 11737 4185 498D6801 		lea	rbp, 1[r8]	# _292,
 11738 4189 4839E8   		cmp	rax, rbp	# block_start, _292
 11739 418c 0F82BE04 		jb	.L778	#,
 11739      0000
 815:sieve_extend.c ****         else 
 11740              		.loc 1 815 13 is_stmt 1 view .LVU4023
 11741              	# sieve_extend.c:815:             start = block_start + prime + prime - ((block_start + prime) % st
 815:sieve_extend.c ****         else 
 11742              		.loc 1 815 33 is_stmt 0 view .LVU4024
 11743 4192 4C01C0   		add	rax, r8	# _296, index
 11744              	# sieve_extend.c:815:             start = block_start + prime + prime - ((block_start + prime) % st
 815:sieve_extend.c ****         else 
 11745              		.loc 1 815 74 view .LVU4025
 11746 4195 31D2     		xor	edx, edx	# tmp503
 11747              	# sieve_extend.c:815:             start = block_start + prime + prime - ((block_start + prime) % st
 815:sieve_extend.c ****         else 
 11748              		.loc 1 815 41 view .LVU4026
 11749 4197 4A8D3400 		lea	rsi, [rax+r8]	# tmp501,
 11750              	# sieve_extend.c:815:             start = block_start + prime + prime - ((block_start + prime) % st
 815:sieve_extend.c ****         else 
 11751              		.loc 1 815 74 view .LVU4027
 11752 419b 49F7F2   		div	r10	# step
 11753              	# sieve_extend.c:815:             start = block_start + prime + prime - ((block_start + prime) % st
 815:sieve_extend.c ****         else 
 11754              		.loc 1 815 19 view .LVU4028
 11755 419e 4829D6   		sub	rsi, rdx	# index, tmp503
 11756              	.LVL674:
 11757              	.L779:
 819:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 11758              		.loc 1 819 9 is_stmt 1 view .LVU4029
 11759 41a1 4989EB   		mov	r11, rbp	# tmp506, _292
 11760 41a4 49C1EB06 		shr	r11, 6	# tmp506,
 11761 41a8 49C1E303 		sal	r11, 3	# _777,
 11762              	# sieve_extend.c:819:         if (step < VECTORSTEP_FASTER) {
 819:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 11763              		.loc 1 819 12 is_stmt 0 view .LVU4030
 11764 41ac 4C391500 		cmp	QWORD PTR global_VECTORSTEP_FASTER[rip], r10	# global_VECTORSTEP_FASTER, step
 11764      000000
 11765 41b3 4F8D241F 		lea	r12, [r15+r11]	# _778,
 11766 41b7 0F87A303 		ja	.L1095	#,
 11766      0000
 824:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 11767              		.loc 1 824 13 is_stmt 1 view .LVU4031
 11768              	.LVL675:
GAS LISTING /tmp/ccRwwoRx.s 			page 317


 11769              	.LBB603:
 11770              	.LBI588:
 352:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 11771              		.loc 1 352 20 view .LVU4032
 11772              	.LBB601:
 353:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11773              		.loc 1 353 5 view .LVU4033
 354:sieve_extend.c **** 
 11774              		.loc 1 354 5 view .LVU4034
 11775              	# sieve_extend.c:354:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 354:sieve_extend.c **** 
 11776              		.loc 1 354 74 is_stmt 0 view .LVU4035
 11777 41bd 4D89D5   		mov	r13, r10	# tmp516, step
 11778 41c0 49C1E506 		sal	r13, 6	# tmp516,
 11779              	# sieve_extend.c:354:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 354:sieve_extend.c **** 
 11780              		.loc 1 354 21 view .LVU4036
 11781 41c4 4901F5   		add	r13, rsi	# range_stop_unique, index
 11782              	.LVL676:
 11783              	.LBB599:
 358:sieve_extend.c ****         #if __APPLE__
 11784              		.loc 1 358 10 is_stmt 1 view .LVU4037
 358:sieve_extend.c ****         #if __APPLE__
 11785              		.loc 1 358 50 view .LVU4038
 11786              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
 11787              		.loc 1 358 5 is_stmt 0 view .LVU4039
 11788 41c7 4C39EE   		cmp	rsi, r13	# index, range_stop_unique
 11789 41ca 0F83C501 		jnb	.L791	#,
 11789      0000
 11790              	.LBB596:
 11791              	.LBB593:
 11792              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 11793              		.loc 1 170 135 view .LVU4040
 11794 41d0 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# range_stop_word, %sfp
 11794      18
 11795              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 11796              		.loc 1 170 112 view .LVU4041
 11797 41d5 4F8D0492 		lea	r8, [r10+r10*4]	# tmp525,
 11798              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11799              		.loc 1 175 44 view .LVU4042
 11800 41d9 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _366,
 11800      00000000 
 11801              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 11802              		.loc 1 170 135 view .LVU4043
 11803 41e1 4C89F1   		mov	rcx, r14	# tmp527, range_stop_word
 11804 41e4 4C29C1   		sub	rcx, r8	# tmp527, tmp525
 11805              	# sieve_extend.c:170:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 170:sieve_extend.c **** 
 11806              		.loc 1 170 53 view .LVU4044
 11807 41e7 4D39C6   		cmp	r14, r8	# range_stop_word, tmp525
 11808 41ea 4D8D0CCF 		lea	r9, [r15+rcx*8]	# tmp529,
 11809 41ee 4D89D6   		mov	r14, r10	# _806, step
GAS LISTING /tmp/ccRwwoRx.s 			page 318


 11810 41f1 4D0F46CF 		cmovbe	r9, r15	# _96,, fast_loop_ptr
 11811 41f5 49C1E003 		sal	r8, 3	# tmp533,
 11812 41f9 49C1E604 		sal	r14, 4	# _806,
 11813              	.LVL677:
 11814 41fd 0F1F00   		.p2align 4
 11815              		.p2align 3
 11816              	.L790:
 170:sieve_extend.c **** 
 11817              		.loc 1 170 53 view .LVU4045
 11818              	.LBE593:
 11819              	.LBE596:
 362:sieve_extend.c ****         #endif
 11820              		.loc 1 362 13 is_stmt 1 view .LVU4046
 11821 4200 4889F0   		mov	rax, rsi	# tmp536, index
 11822 4203 BF010000 		mov	edi, 1	# tmp1065,
 11822      00
 11823 4208 48C1E806 		shr	rax, 6	# tmp536,
 11824 420c C4E2C9F7 		shlx	rcx, rdi, rsi	# _351, tmp1065, index
 11824      CF
 11825              	.LVL678:
 11826              	.LBB597:
 11827              	.LBI591:
 167:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 11828              		.loc 1 167 20 view .LVU4047
 11829              	.LBB594:
 168:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11830              		.loc 1 168 4 view .LVU4048
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11831              		.loc 1 169 4 view .LVU4049
 11832              	# sieve_extend.c:169:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 169:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11833              		.loc 1 169 78 is_stmt 0 view .LVU4050
 11834 4211 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11835              	.LVL679:
 170:sieve_extend.c **** 
 11836              		.loc 1 170 4 is_stmt 1 view .LVU4051
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11837              		.loc 1 174 10 view .LVU4052
 11838 4215 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 11839 4218 0F830201 		jnb	.L785	#,
 11839      0000
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11840              		.loc 1 174 10 is_stmt 0 view .LVU4053
 11841 421e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.515,
 11842              	.L786:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11843              		.loc 1 175 8 is_stmt 1 view .LVU4054
 11844              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11845              		.loc 1 175 19 is_stmt 0 view .LVU4055
 11846 4222 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11847              		.loc 1 175 35 is_stmt 1 view .LVU4056
 11848              	.LVL680:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11849              		.loc 1 176 8 view .LVU4057
 11850              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 319


 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11851              		.loc 1 176 19 is_stmt 0 view .LVU4058
 11852 4225 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11853              		.loc 1 176 35 is_stmt 1 view .LVU4059
 11854              	.LVL681:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11855              		.loc 1 177 8 view .LVU4060
 11856              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11857              		.loc 1 177 19 is_stmt 0 view .LVU4061
 11858 4229 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11859              		.loc 1 177 35 is_stmt 1 view .LVU4062
 11860              	.LVL682:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11861              		.loc 1 178 8 view .LVU4063
 11862              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11863              		.loc 1 178 19 is_stmt 0 view .LVU4064
 11864 422c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11865              		.loc 1 178 35 is_stmt 1 view .LVU4065
 11866              	.LVL683:
 179:sieve_extend.c ****    }
 11867              		.loc 1 179 8 view .LVU4066
 11868 4230 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 11869              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11870              		.loc 1 179 19 is_stmt 0 view .LVU4067
 11871 4233 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 11872              		.loc 1 179 35 is_stmt 1 view .LVU4068
 11873 4237 4C01C0   		add	rax, r8	# index_ptr, tmp533
 11874              	.LVL684:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11875              		.loc 1 174 10 view .LVU4069
 11876 423a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11877 423d 0F86DD00 		jbe	.L785	#,
 11877      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11878              		.loc 1 175 8 view .LVU4070
 11879              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11880              		.loc 1 175 19 is_stmt 0 view .LVU4071
 11881 4243 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11882              		.loc 1 175 35 is_stmt 1 view .LVU4072
 11883              	.LVL685:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11884              		.loc 1 176 8 view .LVU4073
 11885              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11886              		.loc 1 176 19 is_stmt 0 view .LVU4074
 11887 4246 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11888              		.loc 1 176 35 is_stmt 1 view .LVU4075
GAS LISTING /tmp/ccRwwoRx.s 			page 320


 11889              	.LVL686:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11890              		.loc 1 177 8 view .LVU4076
 11891              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11892              		.loc 1 177 19 is_stmt 0 view .LVU4077
 11893 424a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11894              		.loc 1 177 35 is_stmt 1 view .LVU4078
 11895              	.LVL687:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11896              		.loc 1 178 8 view .LVU4079
 11897              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11898              		.loc 1 178 19 is_stmt 0 view .LVU4080
 11899 424d 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11900              		.loc 1 178 35 is_stmt 1 view .LVU4081
 11901              	.LVL688:
 179:sieve_extend.c ****    }
 11902              		.loc 1 179 8 view .LVU4082
 11903 4251 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 11904              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11905              		.loc 1 179 19 is_stmt 0 view .LVU4083
 11906 4254 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 11907              		.loc 1 179 35 is_stmt 1 view .LVU4084
 11908 4258 4C01C0   		add	rax, r8	# index_ptr, tmp533
 11909              	.LVL689:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11910              		.loc 1 174 10 view .LVU4085
 11911 425b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11912 425e 0F86BC00 		jbe	.L785	#,
 11912      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11913              		.loc 1 175 8 view .LVU4086
 11914              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11915              		.loc 1 175 19 is_stmt 0 view .LVU4087
 11916 4264 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11917              		.loc 1 175 35 is_stmt 1 view .LVU4088
 11918              	.LVL690:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11919              		.loc 1 176 8 view .LVU4089
 11920              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11921              		.loc 1 176 19 is_stmt 0 view .LVU4090
 11922 4267 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11923              		.loc 1 176 35 is_stmt 1 view .LVU4091
 11924              	.LVL691:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11925              		.loc 1 177 8 view .LVU4092
 11926              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 321


 11927              		.loc 1 177 19 is_stmt 0 view .LVU4093
 11928 426b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11929              		.loc 1 177 35 is_stmt 1 view .LVU4094
 11930              	.LVL692:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11931              		.loc 1 178 8 view .LVU4095
 11932              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11933              		.loc 1 178 19 is_stmt 0 view .LVU4096
 11934 426e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11935              		.loc 1 178 35 is_stmt 1 view .LVU4097
 11936              	.LVL693:
 179:sieve_extend.c ****    }
 11937              		.loc 1 179 8 view .LVU4098
 11938 4272 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 11939              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11940              		.loc 1 179 19 is_stmt 0 view .LVU4099
 11941 4275 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 11942              		.loc 1 179 35 is_stmt 1 view .LVU4100
 11943 4279 4C01C0   		add	rax, r8	# index_ptr, tmp533
 11944              	.LVL694:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11945              		.loc 1 174 10 view .LVU4101
 11946 427c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11947 427f 0F869B00 		jbe	.L785	#,
 11947      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11948              		.loc 1 175 8 view .LVU4102
 11949              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11950              		.loc 1 175 19 is_stmt 0 view .LVU4103
 11951 4285 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11952              		.loc 1 175 35 is_stmt 1 view .LVU4104
 11953              	.LVL695:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11954              		.loc 1 176 8 view .LVU4105
 11955              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11956              		.loc 1 176 19 is_stmt 0 view .LVU4106
 11957 4288 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11958              		.loc 1 176 35 is_stmt 1 view .LVU4107
 11959              	.LVL696:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11960              		.loc 1 177 8 view .LVU4108
 11961              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11962              		.loc 1 177 19 is_stmt 0 view .LVU4109
 11963 428c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11964              		.loc 1 177 35 is_stmt 1 view .LVU4110
 11965              	.LVL697:
GAS LISTING /tmp/ccRwwoRx.s 			page 322


 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11966              		.loc 1 178 8 view .LVU4111
 11967              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11968              		.loc 1 178 19 is_stmt 0 view .LVU4112
 11969 428f 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11970              		.loc 1 178 35 is_stmt 1 view .LVU4113
 11971              	.LVL698:
 179:sieve_extend.c ****    }
 11972              		.loc 1 179 8 view .LVU4114
 11973 4293 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 11974              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 11975              		.loc 1 179 19 is_stmt 0 view .LVU4115
 11976 4296 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 11977              		.loc 1 179 35 is_stmt 1 view .LVU4116
 11978 429a 4C01C0   		add	rax, r8	# index_ptr, tmp533
 11979              	.LVL699:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11980              		.loc 1 174 10 view .LVU4117
 11981 429d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11982 42a0 767E     		jbe	.L785	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11983              		.loc 1 175 8 view .LVU4118
 11984              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11985              		.loc 1 175 19 is_stmt 0 view .LVU4119
 11986 42a2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11987              		.loc 1 175 35 is_stmt 1 view .LVU4120
 11988              	.LVL700:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11989              		.loc 1 176 8 view .LVU4121
 11990              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11991              		.loc 1 176 19 is_stmt 0 view .LVU4122
 11992 42a5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11993              		.loc 1 176 35 is_stmt 1 view .LVU4123
 11994              	.LVL701:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11995              		.loc 1 177 8 view .LVU4124
 11996              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11997              		.loc 1 177 19 is_stmt 0 view .LVU4125
 11998 42a9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11999              		.loc 1 177 35 is_stmt 1 view .LVU4126
 12000              	.LVL702:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12001              		.loc 1 178 8 view .LVU4127
 12002              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12003              		.loc 1 178 19 is_stmt 0 view .LVU4128
 12004 42ac 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
GAS LISTING /tmp/ccRwwoRx.s 			page 323


 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12005              		.loc 1 178 35 is_stmt 1 view .LVU4129
 12006              	.LVL703:
 179:sieve_extend.c ****    }
 12007              		.loc 1 179 8 view .LVU4130
 12008 42b0 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 12009              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 12010              		.loc 1 179 19 is_stmt 0 view .LVU4131
 12011 42b3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 12012              		.loc 1 179 35 is_stmt 1 view .LVU4132
 12013 42b7 4C01C0   		add	rax, r8	# index_ptr, tmp533
 12014              	.LVL704:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12015              		.loc 1 174 10 view .LVU4133
 12016 42ba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12017 42bd 7661     		jbe	.L785	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12018              		.loc 1 175 8 view .LVU4134
 12019              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12020              		.loc 1 175 19 is_stmt 0 view .LVU4135
 12021 42bf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12022              		.loc 1 175 35 is_stmt 1 view .LVU4136
 12023              	.LVL705:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12024              		.loc 1 176 8 view .LVU4137
 12025              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12026              		.loc 1 176 19 is_stmt 0 view .LVU4138
 12027 42c2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12028              		.loc 1 176 35 is_stmt 1 view .LVU4139
 12029              	.LVL706:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12030              		.loc 1 177 8 view .LVU4140
 12031              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12032              		.loc 1 177 19 is_stmt 0 view .LVU4141
 12033 42c6 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12034              		.loc 1 177 35 is_stmt 1 view .LVU4142
 12035              	.LVL707:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12036              		.loc 1 178 8 view .LVU4143
 12037              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12038              		.loc 1 178 19 is_stmt 0 view .LVU4144
 12039 42c9 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12040              		.loc 1 178 35 is_stmt 1 view .LVU4145
 12041              	.LVL708:
 179:sieve_extend.c ****    }
 12042              		.loc 1 179 8 view .LVU4146
 12043 42cd 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
GAS LISTING /tmp/ccRwwoRx.s 			page 324


 12044              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 12045              		.loc 1 179 19 is_stmt 0 view .LVU4147
 12046 42d0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 12047              		.loc 1 179 35 is_stmt 1 view .LVU4148
 12048 42d4 4C01C0   		add	rax, r8	# index_ptr, tmp533
 12049              	.LVL709:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12050              		.loc 1 174 10 view .LVU4149
 12051 42d7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12052 42da 7644     		jbe	.L785	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12053              		.loc 1 175 8 view .LVU4150
 12054              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12055              		.loc 1 175 19 is_stmt 0 view .LVU4151
 12056 42dc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12057              		.loc 1 175 35 is_stmt 1 view .LVU4152
 12058              	.LVL710:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12059              		.loc 1 176 8 view .LVU4153
 12060              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12061              		.loc 1 176 19 is_stmt 0 view .LVU4154
 12062 42df 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12063              		.loc 1 176 35 is_stmt 1 view .LVU4155
 12064              	.LVL711:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12065              		.loc 1 177 8 view .LVU4156
 12066              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12067              		.loc 1 177 19 is_stmt 0 view .LVU4157
 12068 42e3 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12069              		.loc 1 177 35 is_stmt 1 view .LVU4158
 12070              	.LVL712:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12071              		.loc 1 178 8 view .LVU4159
 12072              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12073              		.loc 1 178 19 is_stmt 0 view .LVU4160
 12074 42e6 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12075              		.loc 1 178 35 is_stmt 1 view .LVU4161
 12076              	.LVL713:
 179:sieve_extend.c ****    }
 12077              		.loc 1 179 8 view .LVU4162
 12078 42ea 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 12079              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 12080              		.loc 1 179 19 is_stmt 0 view .LVU4163
 12081 42ed 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 12082              		.loc 1 179 35 is_stmt 1 view .LVU4164
GAS LISTING /tmp/ccRwwoRx.s 			page 325


 12083 42f1 4C01C0   		add	rax, r8	# index_ptr, tmp533
 12084              	.LVL714:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12085              		.loc 1 174 10 view .LVU4165
 12086 42f4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12087 42f7 7627     		jbe	.L785	#,
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12088              		.loc 1 175 8 view .LVU4166
 12089              	# sieve_extend.c:175:        *index_ptr |= mask;        index_ptr+=step;
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12090              		.loc 1 175 19 is_stmt 0 view .LVU4167
 12091 42f9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_507, offset: 0B], _351
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12092              		.loc 1 175 35 is_stmt 1 view .LVU4168
 12093              	.LVL715:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12094              		.loc 1 176 8 view .LVU4169
 12095              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12096              		.loc 1 176 19 is_stmt 0 view .LVU4170
 12097 42fc 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_507, index: _366, offset: 0B], _351
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12098              		.loc 1 176 35 is_stmt 1 view .LVU4171
 12099              	.LVL716:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12100              		.loc 1 177 8 view .LVU4172
 12101              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12102              		.loc 1 177 19 is_stmt 0 view .LVU4173
 12103 4300 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _797, offset: 0B], _351
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12104              		.loc 1 177 35 is_stmt 1 view .LVU4174
 12105              	.LVL717:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12106              		.loc 1 178 8 view .LVU4175
 12107              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12108              		.loc 1 178 19 is_stmt 0 view .LVU4176
 12109 4303 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _797, index: _366, offset: 0B], _351
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12110              		.loc 1 178 35 is_stmt 1 view .LVU4177
 12111              	.LVL718:
 179:sieve_extend.c ****    }
 12112              		.loc 1 179 8 view .LVU4178
 12113 4307 4C01C7   		add	rdi, r8	# ivtmp.515, tmp533
 12114              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****    }
 12115              		.loc 1 179 19 is_stmt 0 view .LVU4179
 12116 430a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_507, index: _366, step: 4, offset: 0B], _351
 179:sieve_extend.c ****    }
 12117              		.loc 1 179 35 is_stmt 1 view .LVU4180
 12118 430e 4C01C0   		add	rax, r8	# index_ptr, tmp533
 12119              	.LVL719:
 174:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12120              		.loc 1 174 10 view .LVU4181
 12121 4311 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12122 4314 0F8708FF 		ja	.L786	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 326


 12122      FFFF
 12123 431a 660F1F44 		.p2align 4
 12123      0000
 12124              		.p2align 3
 12125              	.L785:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12126              		.loc 1 182 4 view .LVU4182
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12127              		.loc 1 183 4 view .LVU4183
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12128              		.loc 1 183 10 view .LVU4184
 12129 4320 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12130 4323 765B     		jbe	.L787	#,
 12131              	.L788:
 184:sieve_extend.c ****    }
 12132              		.loc 1 184 8 view .LVU4185
 12133              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12134              		.loc 1 184 19 is_stmt 0 view .LVU4186
 12135 4325 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12136              		.loc 1 184 34 is_stmt 1 view .LVU4187
 12137              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12138              		.loc 1 184 43 is_stmt 0 view .LVU4188
 12139 4328 4801D0   		add	rax, rdx	# index_ptr, _366
 12140              	.LVL720:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12141              		.loc 1 183 10 is_stmt 1 view .LVU4189
 12142 432b 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12143 432e 7650     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12144              		.loc 1 184 8 view .LVU4190
 12145              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12146              		.loc 1 184 19 is_stmt 0 view .LVU4191
 12147 4330 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12148              		.loc 1 184 34 is_stmt 1 view .LVU4192
 12149              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12150              		.loc 1 184 43 is_stmt 0 view .LVU4193
 12151 4333 4801D0   		add	rax, rdx	# index_ptr, _366
 12152              	.LVL721:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12153              		.loc 1 183 10 is_stmt 1 view .LVU4194
 12154 4336 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12155 4339 7645     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12156              		.loc 1 184 8 view .LVU4195
 12157              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12158              		.loc 1 184 19 is_stmt 0 view .LVU4196
 12159 433b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12160              		.loc 1 184 34 is_stmt 1 view .LVU4197
 12161              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
GAS LISTING /tmp/ccRwwoRx.s 			page 327


 184:sieve_extend.c ****    }
 12162              		.loc 1 184 43 is_stmt 0 view .LVU4198
 12163 433e 4801D0   		add	rax, rdx	# index_ptr, _366
 12164              	.LVL722:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12165              		.loc 1 183 10 is_stmt 1 view .LVU4199
 12166 4341 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12167 4344 763A     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12168              		.loc 1 184 8 view .LVU4200
 12169              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12170              		.loc 1 184 19 is_stmt 0 view .LVU4201
 12171 4346 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12172              		.loc 1 184 34 is_stmt 1 view .LVU4202
 12173              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12174              		.loc 1 184 43 is_stmt 0 view .LVU4203
 12175 4349 4801D0   		add	rax, rdx	# index_ptr, _366
 12176              	.LVL723:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12177              		.loc 1 183 10 is_stmt 1 view .LVU4204
 12178 434c 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12179 434f 762F     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12180              		.loc 1 184 8 view .LVU4205
 12181              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12182              		.loc 1 184 19 is_stmt 0 view .LVU4206
 12183 4351 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12184              		.loc 1 184 34 is_stmt 1 view .LVU4207
 12185              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12186              		.loc 1 184 43 is_stmt 0 view .LVU4208
 12187 4354 4801D0   		add	rax, rdx	# index_ptr, _366
 12188              	.LVL724:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12189              		.loc 1 183 10 is_stmt 1 view .LVU4209
 12190 4357 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12191 435a 7624     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12192              		.loc 1 184 8 view .LVU4210
 12193              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12194              		.loc 1 184 19 is_stmt 0 view .LVU4211
 12195 435c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12196              		.loc 1 184 34 is_stmt 1 view .LVU4212
 12197              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12198              		.loc 1 184 43 is_stmt 0 view .LVU4213
 12199 435f 4801D0   		add	rax, rdx	# index_ptr, _366
 12200              	.LVL725:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12201              		.loc 1 183 10 is_stmt 1 view .LVU4214
GAS LISTING /tmp/ccRwwoRx.s 			page 328


 12202 4362 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12203 4365 7619     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12204              		.loc 1 184 8 view .LVU4215
 12205              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12206              		.loc 1 184 19 is_stmt 0 view .LVU4216
 12207 4367 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12208              		.loc 1 184 34 is_stmt 1 view .LVU4217
 12209              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12210              		.loc 1 184 43 is_stmt 0 view .LVU4218
 12211 436a 4801D0   		add	rax, rdx	# index_ptr, _366
 12212              	.LVL726:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12213              		.loc 1 183 10 is_stmt 1 view .LVU4219
 12214 436d 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12215 4370 760E     		jbe	.L787	#,
 184:sieve_extend.c ****    }
 12216              		.loc 1 184 8 view .LVU4220
 12217              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12218              		.loc 1 184 19 is_stmt 0 view .LVU4221
 12219 4372 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _351
 184:sieve_extend.c ****    }
 12220              		.loc 1 184 34 is_stmt 1 view .LVU4222
 12221              	# sieve_extend.c:184:        *index_ptr |= mask;       index_ptr+=step;
 184:sieve_extend.c ****    }
 12222              		.loc 1 184 43 is_stmt 0 view .LVU4223
 12223 4375 4801D0   		add	rax, rdx	# index_ptr, _366
 12224              	.LVL727:
 183:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12225              		.loc 1 183 10 is_stmt 1 view .LVU4224
 12226 4378 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12227 437b 77A8     		ja	.L788	#,
 12228 437d 0F1F00   		.p2align 4
 12229              		.p2align 3
 12230              	.L787:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12231              		.loc 1 187 4 view .LVU4225
 12232              	# sieve_extend.c:187:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12233              		.loc 1 187 7 is_stmt 0 view .LVU4226
 12234 4380 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12235 4383 0F84C701 		je	.L1096	#,
 12235      0000
 12236              	.LVL728:
 12237              	.L789:
 187:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12238              		.loc 1 187 7 view .LVU4227
 12239              	.LBE594:
 12240              	.LBE597:
 358:sieve_extend.c ****         #if __APPLE__
 12241              		.loc 1 358 77 is_stmt 1 view .LVU4228
 12242              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
GAS LISTING /tmp/ccRwwoRx.s 			page 329


 12243              		.loc 1 358 83 is_stmt 0 view .LVU4229
 12244 4389 4C01D6   		add	rsi, r10	# index, step
 12245              	.LVL729:
 358:sieve_extend.c ****         #if __APPLE__
 12246              		.loc 1 358 50 is_stmt 1 view .LVU4230
 12247              	# sieve_extend.c:358:     for (register counter_t index = range_start; index < range_stop_unique; i
 358:sieve_extend.c ****         #if __APPLE__
 12248              		.loc 1 358 5 is_stmt 0 view .LVU4231
 12249 438c 4939F5   		cmp	r13, rsi	# range_stop_unique, index
 12250 438f 0F876BFE 		ja	.L790	#,
 12250      FFFF
 12251              	.L791:
 12252              	.LVL730:
 358:sieve_extend.c ****         #if __APPLE__
 12253              		.loc 1 358 5 view .LVU4232
 12254              	.LBE599:
 12255              	.LBE601:
 12256              	.LBE603:
 825:sieve_extend.c ****         }
 12257              		.loc 1 825 13 is_stmt 1 view .LVU4233
 12258              	.LBB604:
 12259              	.LBI604:
 123:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 12260              		.loc 1 123 25 view .LVU4234
 12261              	.LBB605:
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12262              		.loc 1 124 4 view .LVU4235
 12263              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 12264              		.loc 1 126 90 is_stmt 0 view .LVU4236
 12265 4395 498B3424 		mov	rsi, QWORD PTR [r12]	# MEM[(uint64_t *)_778], MEM[(uint64_t *)_778]
 12266              	# sieve_extend.c:124:    const bitshift_t index_bit  = bitindex_calc(index);
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12267              		.loc 1 124 21 view .LVU4237
 12268 4399 4989EA   		mov	r10, rbp	# index_bit, _292
 12269              	.LVL731:
 124:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12270              		.loc 1 124 21 view .LVU4238
 12271 439c 4183E23F 		and	r10d, 63	# index_bit,
 12272              	.LVL732:
 125:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 12273              		.loc 1 125 4 is_stmt 1 view .LVU4239
 126:sieve_extend.c ****    index += distance;
 12274              		.loc 1 126 4 view .LVU4240
 12275              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 12276              		.loc 1 126 90 is_stmt 0 view .LVU4241
 12277 43a0 C462ABF7 		shrx	r12, rsi, r10	# tmp518, MEM[(uint64_t *)_778], index_bit
 12277      E6
 12278              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 12279              		.loc 1 126 65 view .LVU4242
 12280 43a5 49F7D4   		not	r12	# tmp520
 12281              	# sieve_extend.c:126:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 126:sieve_extend.c ****    index += distance;
 12282              		.loc 1 126 24 view .LVU4243
 12283 43a8 F34D0FBC 		tzcnt	r13, r12	# distance, tmp520
GAS LISTING /tmp/ccRwwoRx.s 			page 330


 12283      EC
 12284              	.LVL733:
 127:sieve_extend.c ****    distance += index_bit;
 12285              		.loc 1 127 4 is_stmt 1 view .LVU4244
 12286              	# sieve_extend.c:127:    index += distance;
 127:sieve_extend.c ****    distance += index_bit;
 12287              		.loc 1 127 10 is_stmt 0 view .LVU4245
 12288 43ad 4E8D442D 		lea	r8, 0[rbp+r13]	# index,
 12288      00
 12289              	.LVL734:
 128:sieve_extend.c **** 
 12290              		.loc 1 128 4 is_stmt 1 view .LVU4246
 130:sieve_extend.c ****        index_word++;
 12291              		.loc 1 130 4 view .LVU4247
 130:sieve_extend.c ****        index_word++;
 12292              		.loc 1 130 10 view .LVU4248
 12293              	# sieve_extend.c:128:    distance += index_bit;
 128:sieve_extend.c **** 
 12294              		.loc 1 128 13 is_stmt 0 view .LVU4249
 12295 43b2 4D01D5   		add	r13, r10	# distance, index_bit
 12296              	.LVL735:
 12297              	# sieve_extend.c:130:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 130:sieve_extend.c ****        index_word++;
 12298              		.loc 1 130 10 view .LVU4250
 12299 43b5 4983FD40 		cmp	r13, 64	# distance,
 12300 43b9 0F84A102 		je	.L1097	#,
 12300      0000
 12301              	.LVL736:
 12302              	.L781:
 130:sieve_extend.c ****        index_word++;
 12303              		.loc 1 130 10 view .LVU4251
 12304              	.LBE605:
 12305              	.LBE604:
 828:sieve_extend.c ****         step  = prime * 2 + 1;
 12306              		.loc 1 828 9 is_stmt 1 view .LVU4252
 829:sieve_extend.c ****     }
 12307              		.loc 1 829 9 view .LVU4253
 12308              	# sieve_extend.c:829:         step  = prime * 2 + 1;
 829:sieve_extend.c ****     }
 12309              		.loc 1 829 15 is_stmt 0 view .LVU4254
 12310 43bf 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 12310      01
 12311              	.LVL737:
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12312              		.loc 1 813 11 is_stmt 1 view .LVU4255
 12313              	# sieve_extend.c:813:     while (prime*step <= block_stop) {
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12314              		.loc 1 813 17 is_stmt 0 view .LVU4256
 12315 43c4 4C89C6   		mov	rsi, r8	# tmp544, index
 12316 43c7 490FAFF2 		imul	rsi, r10	# tmp544, step
 12317              	# sieve_extend.c:813:     while (prime*step <= block_stop) {
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12318              		.loc 1 813 11 view .LVU4257
 12319 43cb 48393424 		cmp	QWORD PTR [rsp], rsi	# %sfp, tmp544
 12320 43cf 0F83ABFD 		jnb	.L792	#,
 12320      FFFF
 12321 43d5 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# <retval>, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 331


 12321      28
 12322 43da 4C8B7424 		mov	r14, QWORD PTR 16[rsp]	# block_start, %sfp
 12322      10
 12323 43df 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_91->bits
 12324              	.LVL738:
 12325              	.L793:
 813:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12326              		.loc 1 813 11 view .LVU4258
 12327              	.LBE587:
 12328              	.LBE586:
 12329              	.LBE581:
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12330              		.loc 1 893 91 is_stmt 1 view .LVU4259
 12331              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12332              		.loc 1 893 103 is_stmt 0 view .LVU4260
 12333 43e3 4C8B4424 		mov	r8, QWORD PTR 56[rsp]	# blocksize, %sfp
 12333      38
 12334              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12335              		.loc 1 893 128 view .LVU4261
 12336 43e8 4C8B2424 		mov	r12, QWORD PTR [rsp]	# block_stop, %sfp
 12337              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12338              		.loc 1 893 103 view .LVU4262
 12339 43ec 4D01C6   		add	r14, r8	# block_start, blocksize
 12340              	.LVL739:
 12341              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12342              		.loc 1 893 128 view .LVU4263
 12343 43ef 4D01C4   		add	r12, r8	# block_stop, blocksize
 12344              	.LVL740:
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12345              		.loc 1 893 63 is_stmt 1 view .LVU4264
 12346              	# sieve_extend.c:893:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 893:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12347              		.loc 1 893 5 is_stmt 0 view .LVU4265
 12348 43f2 4C39F2   		cmp	rdx, r14	# _8, block_start
 12349 43f5 0F8355FC 		jnb	.L776	#,
 12349      FFFF
 12350              	.LBE580:
 12351              	# sieve_extend.c:900: }
 900:sieve_extend.c **** 
 12352              		.loc 1 900 1 view .LVU4266
 12353 43fb 488B4424 		mov	rax, QWORD PTR 40[rsp]	#, %sfp
 12353      28
 12354 4400 488D6424 		lea	rsp, 88[rsp]	#,
 12354      58
 12355              		.cfi_remember_state
 12356              		.cfi_def_cfa_offset 56
 12357 4405 5B       		pop	rbx	#
 12358              		.cfi_def_cfa_offset 48
 12359 4406 5D       		pop	rbp	#
 12360              		.cfi_def_cfa_offset 40
 12361 4407 415C     		pop	r12	#
 12362              		.cfi_def_cfa_offset 32
 12363              	.LVL741:
GAS LISTING /tmp/ccRwwoRx.s 			page 332


 900:sieve_extend.c **** 
 12364              		.loc 1 900 1 view .LVU4267
 12365 4409 415D     		pop	r13	#
 12366              		.cfi_def_cfa_offset 24
 12367 440b 415E     		pop	r14	#
 12368              		.cfi_def_cfa_offset 16
 12369              	.LVL742:
 900:sieve_extend.c **** 
 12370              		.loc 1 900 1 view .LVU4268
 12371 440d 415F     		pop	r15	#
 12372              		.cfi_def_cfa_offset 8
 12373              	.LVL743:
 900:sieve_extend.c **** 
 12374              		.loc 1 900 1 view .LVU4269
 12375 440f C3       		ret	
 12376              	.LVL744:
 12377              	.L1092:
 12378              		.cfi_restore_state
 12379              	.LBB616:
 12380              	.LBB564:
 12381              	.LBB557:
 12382              	.LBB547:
 12383              	.LBB525:
 205:sieve_extend.c ****        return;
 12384              		.loc 1 205 8 is_stmt 1 view .LVU4270
 12385              	# sieve_extend.c:205:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
 205:sieve_extend.c ****        return;
 12386              		.loc 1 205 75 is_stmt 0 view .LVU4271
 12387 4410 48237424 		and	rsi, QWORD PTR 64[rsp]	# tmp413, %sfp
 12387      40
 12388              	# sieve_extend.c:205:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
 205:sieve_extend.c ****        return;
 12389              		.loc 1 205 37 view .LVU4272
 12390 4415 4809D6   		or	rsi, rdx	# tmp414, pretmp_736
 12391 4418 498933   		mov	QWORD PTR [r11], rsi	# MEM[(uint64_t *)_735], tmp414
 206:sieve_extend.c ****     }
 12392              		.loc 1 206 8 is_stmt 1 view .LVU4273
 12393 441b E947F2FF 		jmp	.L739	#
 12393      FF
 12394              	.LVL745:
 12395              	.L746:
 206:sieve_extend.c ****     }
 12396              		.loc 1 206 8 is_stmt 0 view .LVU4274
 12397              	.LBE525:
 12398              	.LBE547:
 12399              	.LBB548:
 12400              	.LBB545:
 12401              	.LBB542:
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12402              		.loc 1 236 54 is_stmt 1 view .LVU4275
 12403              	# sieve_extend.c:236:         for (register counter_t index = range_start; index <= range_stop;) {
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12404              		.loc 1 236 9 is_stmt 0 view .LVU4276
 12405 4420 4939ED   		cmp	r13, rbp	# _67, index
 12406 4423 0F823EF2 		jb	.L739	#,
 12406      FFFF
 12407 4429 4989EE   		mov	r14, rbp	# index, index
GAS LISTING /tmp/ccRwwoRx.s 			page 333


 12408              	.LVL746:
 12409              	.LBB543:
 12410              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12411              		.loc 1 241 25 view .LVU4277
 12412 442c 41B80100 		mov	r8d, 1	# tmp439,
 12412      0000
 12413              	.LVL747:
 12414 4432 66662E0F 		.p2align 4
 12414      1F840000 
 12414      0000000F 
 12414      1F00
 12415              		.p2align 3
 12416              	.L750:
 237:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12417              		.loc 1 237 13 is_stmt 1 view .LVU4278
 12418              	# sieve_extend.c:237:             register counter_t index_word = wordindex(index);
 237:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12419              		.loc 1 237 32 is_stmt 0 view .LVU4279
 12420 4440 4C89F1   		mov	rcx, r14	# index_word, index
 12421              	# sieve_extend.c:238:             register bitword_t mask = SAFE_ZERO;
 238:sieve_extend.c ****             #pragma GCC ivdep
 12422              		.loc 1 238 32 view .LVU4280
 12423 4443 4531C9   		xor	r9d, r9d	# mask
 12424              	# sieve_extend.c:237:             register counter_t index_word = wordindex(index);
 237:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12425              		.loc 1 237 32 view .LVU4281
 12426 4446 48C1E906 		shr	rcx, 6	# index_word,
 12427              	.LVL748:
 238:sieve_extend.c ****             #pragma GCC ivdep
 12428              		.loc 1 238 13 is_stmt 1 view .LVU4282
 12429              	.L749:
 241:sieve_extend.c ****                 index += step;
 12430              		.loc 1 241 17 view .LVU4283
 12431              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12432              		.loc 1 241 25 is_stmt 0 view .LVU4284
 12433 444a C44289F7 		shlx	r10, r8, r14	# tmp438, tmp439, index
 12433      D0
 12434              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12435              		.loc 1 242 23 view .LVU4285
 12436 444f 4D01E6   		add	r14, r12	# index, step
 12437              	.LVL749:
 12438              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12439              		.loc 1 243 36 view .LVU4286
 12440 4452 4C89F7   		mov	rdi, r14	# tmp440, index
 12441              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12442              		.loc 1 241 22 view .LVU4287
 12443 4455 4D09D1   		or	r9, r10	# mask, tmp438
 12444              	.LVL750:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12445              		.loc 1 242 17 is_stmt 1 view .LVU4288
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12446              		.loc 1 243 21 view .LVU4289
GAS LISTING /tmp/ccRwwoRx.s 			page 334


 12447              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12448              		.loc 1 243 36 is_stmt 0 view .LVU4290
 12449 4458 48C1EF06 		shr	rdi, 6	# tmp440,
 12450              	.LVL751:
 12451              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12452              		.loc 1 243 13 view .LVU4291
 12453 445c 4839F9   		cmp	rcx, rdi	# index_word, tmp440
 12454 445f 0F85AB00 		jne	.L1005	#,
 12454      0000
 241:sieve_extend.c ****                 index += step;
 12455              		.loc 1 241 17 is_stmt 1 view .LVU4292
 12456              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12457              		.loc 1 241 25 is_stmt 0 view .LVU4293
 12458 4465 C44289F7 		shlx	r11, r8, r14	# tmp723, tmp439, index
 12458      D8
 12459              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12460              		.loc 1 242 23 view .LVU4294
 12461 446a 4D01E6   		add	r14, r12	# index, step
 12462              	.LVL752:
 12463              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12464              		.loc 1 243 36 view .LVU4295
 12465 446d 4C89F2   		mov	rdx, r14	# tmp724, index
 12466              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12467              		.loc 1 241 22 view .LVU4296
 12468 4470 4D09D9   		or	r9, r11	# mask, tmp723
 12469              	.LVL753:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12470              		.loc 1 242 17 is_stmt 1 view .LVU4297
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12471              		.loc 1 243 21 view .LVU4298
 12472              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12473              		.loc 1 243 36 is_stmt 0 view .LVU4299
 12474 4473 48C1EA06 		shr	rdx, 6	# tmp724,
 12475              	.LVL754:
 12476              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12477              		.loc 1 243 13 view .LVU4300
 12478 4477 4839D1   		cmp	rcx, rdx	# index_word, tmp724
 12479 447a 0F859000 		jne	.L1005	#,
 12479      0000
 241:sieve_extend.c ****                 index += step;
 12480              		.loc 1 241 17 is_stmt 1 view .LVU4301
 12481              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12482              		.loc 1 241 25 is_stmt 0 view .LVU4302
 12483 4480 C4C289F7 		shlx	rax, r8, r14	# tmp725, tmp439, index
 12483      C0
 12484              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12485              		.loc 1 242 23 view .LVU4303
GAS LISTING /tmp/ccRwwoRx.s 			page 335


 12486 4485 4D01E6   		add	r14, r12	# index, step
 12487              	.LVL755:
 12488              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12489              		.loc 1 243 36 view .LVU4304
 12490 4488 4C89F6   		mov	rsi, r14	# tmp726, index
 12491              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12492              		.loc 1 241 22 view .LVU4305
 12493 448b 4909C1   		or	r9, rax	# mask, tmp725
 12494              	.LVL756:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12495              		.loc 1 242 17 is_stmt 1 view .LVU4306
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12496              		.loc 1 243 21 view .LVU4307
 12497              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12498              		.loc 1 243 36 is_stmt 0 view .LVU4308
 12499 448e 48C1EE06 		shr	rsi, 6	# tmp726,
 12500              	.LVL757:
 12501              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12502              		.loc 1 243 13 view .LVU4309
 12503 4492 4839F1   		cmp	rcx, rsi	# index_word, tmp726
 12504 4495 7579     		jne	.L1005	#,
 241:sieve_extend.c ****                 index += step;
 12505              		.loc 1 241 17 is_stmt 1 view .LVU4310
 12506              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12507              		.loc 1 241 25 is_stmt 0 view .LVU4311
 12508 4497 C44289F7 		shlx	r10, r8, r14	# tmp727, tmp439, index
 12508      D0
 12509              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12510              		.loc 1 242 23 view .LVU4312
 12511 449c 4D01E6   		add	r14, r12	# index, step
 12512              	.LVL758:
 12513              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12514              		.loc 1 243 36 view .LVU4313
 12515 449f 4C89F7   		mov	rdi, r14	# tmp728, index
 12516              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12517              		.loc 1 241 22 view .LVU4314
 12518 44a2 4D09D1   		or	r9, r10	# mask, tmp727
 12519              	.LVL759:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12520              		.loc 1 242 17 is_stmt 1 view .LVU4315
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12521              		.loc 1 243 21 view .LVU4316
 12522              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12523              		.loc 1 243 36 is_stmt 0 view .LVU4317
 12524 44a5 48C1EF06 		shr	rdi, 6	# tmp728,
 12525              	.LVL760:
 12526              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccRwwoRx.s 			page 336


 12527              		.loc 1 243 13 view .LVU4318
 12528 44a9 4839F9   		cmp	rcx, rdi	# index_word, tmp728
 12529 44ac 7562     		jne	.L1005	#,
 241:sieve_extend.c ****                 index += step;
 12530              		.loc 1 241 17 is_stmt 1 view .LVU4319
 12531              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12532              		.loc 1 241 25 is_stmt 0 view .LVU4320
 12533 44ae C44289F7 		shlx	r11, r8, r14	# tmp729, tmp439, index
 12533      D8
 12534              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12535              		.loc 1 242 23 view .LVU4321
 12536 44b3 4D01E6   		add	r14, r12	# index, step
 12537              	.LVL761:
 12538              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12539              		.loc 1 243 36 view .LVU4322
 12540 44b6 4C89F2   		mov	rdx, r14	# tmp730, index
 12541              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12542              		.loc 1 241 22 view .LVU4323
 12543 44b9 4D09D9   		or	r9, r11	# mask, tmp729
 12544              	.LVL762:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12545              		.loc 1 242 17 is_stmt 1 view .LVU4324
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12546              		.loc 1 243 21 view .LVU4325
 12547              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12548              		.loc 1 243 36 is_stmt 0 view .LVU4326
 12549 44bc 48C1EA06 		shr	rdx, 6	# tmp730,
 12550              	.LVL763:
 12551              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12552              		.loc 1 243 13 view .LVU4327
 12553 44c0 4839D1   		cmp	rcx, rdx	# index_word, tmp730
 12554 44c3 754B     		jne	.L1005	#,
 241:sieve_extend.c ****                 index += step;
 12555              		.loc 1 241 17 is_stmt 1 view .LVU4328
 12556              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12557              		.loc 1 241 25 is_stmt 0 view .LVU4329
 12558 44c5 C4C289F7 		shlx	rax, r8, r14	# tmp731, tmp439, index
 12558      C0
 12559              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12560              		.loc 1 242 23 view .LVU4330
 12561 44ca 4D01E6   		add	r14, r12	# index, step
 12562              	.LVL764:
 12563              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12564              		.loc 1 243 36 view .LVU4331
 12565 44cd 4C89F6   		mov	rsi, r14	# tmp732, index
 12566              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12567              		.loc 1 241 22 view .LVU4332
GAS LISTING /tmp/ccRwwoRx.s 			page 337


 12568 44d0 4909C1   		or	r9, rax	# mask, tmp731
 12569              	.LVL765:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12570              		.loc 1 242 17 is_stmt 1 view .LVU4333
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12571              		.loc 1 243 21 view .LVU4334
 12572              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12573              		.loc 1 243 36 is_stmt 0 view .LVU4335
 12574 44d3 48C1EE06 		shr	rsi, 6	# tmp732,
 12575              	.LVL766:
 12576              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12577              		.loc 1 243 13 view .LVU4336
 12578 44d7 4839F1   		cmp	rcx, rsi	# index_word, tmp732
 12579 44da 7534     		jne	.L1005	#,
 241:sieve_extend.c ****                 index += step;
 12580              		.loc 1 241 17 is_stmt 1 view .LVU4337
 12581              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12582              		.loc 1 241 25 is_stmt 0 view .LVU4338
 12583 44dc C44289F7 		shlx	r10, r8, r14	# tmp733, tmp439, index
 12583      D0
 12584              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12585              		.loc 1 242 23 view .LVU4339
 12586 44e1 4D01E6   		add	r14, r12	# index, step
 12587              	.LVL767:
 12588              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12589              		.loc 1 243 36 view .LVU4340
 12590 44e4 4C89F7   		mov	rdi, r14	# tmp734, index
 12591              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12592              		.loc 1 241 22 view .LVU4341
 12593 44e7 4D09D1   		or	r9, r10	# mask, tmp733
 12594              	.LVL768:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12595              		.loc 1 242 17 is_stmt 1 view .LVU4342
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12596              		.loc 1 243 21 view .LVU4343
 12597              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12598              		.loc 1 243 36 is_stmt 0 view .LVU4344
 12599 44ea 48C1EF06 		shr	rdi, 6	# tmp734,
 12600              	.LVL769:
 12601              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12602              		.loc 1 243 13 view .LVU4345
 12603 44ee 4839F9   		cmp	rcx, rdi	# index_word, tmp734
 12604 44f1 751D     		jne	.L1005	#,
 241:sieve_extend.c ****                 index += step;
 12605              		.loc 1 241 17 is_stmt 1 view .LVU4346
 12606              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12607              		.loc 1 241 25 is_stmt 0 view .LVU4347
 12608 44f3 C44289F7 		shlx	r11, r8, r14	# tmp735, tmp439, index
GAS LISTING /tmp/ccRwwoRx.s 			page 338


 12608      D8
 12609              	# sieve_extend.c:242:                 index += step;
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12610              		.loc 1 242 23 view .LVU4348
 12611 44f8 4D01E6   		add	r14, r12	# index, step
 12612              	.LVL770:
 12613              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12614              		.loc 1 243 36 view .LVU4349
 12615 44fb 4C89F2   		mov	rdx, r14	# tmp736, index
 12616              	# sieve_extend.c:241:                 mask |= markmask(index);
 241:sieve_extend.c ****                 index += step;
 12617              		.loc 1 241 22 view .LVU4350
 12618 44fe 4D09D9   		or	r9, r11	# mask, tmp735
 12619              	.LVL771:
 242:sieve_extend.c ****             } while (index_word == wordindex(index));
 12620              		.loc 1 242 17 is_stmt 1 view .LVU4351
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12621              		.loc 1 243 21 view .LVU4352
 12622              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12623              		.loc 1 243 36 is_stmt 0 view .LVU4353
 12624 4501 48C1EA06 		shr	rdx, 6	# tmp736,
 12625              	.LVL772:
 12626              	# sieve_extend.c:243:             } while (index_word == wordindex(index));
 243:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12627              		.loc 1 243 13 view .LVU4354
 12628 4505 4839D1   		cmp	rcx, rdx	# index_word, tmp736
 12629 4508 0F843CFF 		je	.L749	#,
 12629      FFFF
 12630 450e 6690     		.p2align 4
 12631              		.p2align 3
 12632              	.L1005:
 246:sieve_extend.c ****         }
 12633              		.loc 1 246 13 is_stmt 1 view .LVU4355
 12634              	# sieve_extend.c:246:             bitstorage[index_word] |= mask;
 246:sieve_extend.c ****         }
 12635              		.loc 1 246 36 is_stmt 0 view .LVU4356
 12636 4510 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_168, mask
 246:sieve_extend.c ****         }
 12637              		.loc 1 246 36 view .LVU4357
 12638              	.LBE543:
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12639              		.loc 1 236 54 is_stmt 1 view .LVU4358
 12640              	# sieve_extend.c:236:         for (register counter_t index = range_start; index <= range_stop;) {
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12641              		.loc 1 236 9 is_stmt 0 view .LVU4359
 12642 4514 4D39F5   		cmp	r13, r14	# _67, index
 12643 4517 0F8323FF 		jnb	.L750	#,
 12643      FFFF
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12644              		.loc 1 236 9 view .LVU4360
 12645 451d E945F1FF 		jmp	.L739	#
 12645      FF
 12646              	.LVL773:
 12647              	.L734:
 236:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccRwwoRx.s 			page 339


 12648              		.loc 1 236 9 view .LVU4361
 12649              	.LBE542:
 12650              	.LBE545:
 12651              	.LBE548:
 12652              	.LBB549:
 12653              	.LBB511:
 803:sieve_extend.c **** }
 12654              		.loc 1 803 37 is_stmt 1 view .LVU4362
 12655 4522 E869D8FF 		call	extendSieve_aligned	#
 12655      FF
 12656              	.LVL774:
 803:sieve_extend.c **** }
 12657              		.loc 1 803 37 is_stmt 0 view .LVU4363
 12658 4527 4C897424 		mov	QWORD PTR 32[rsp], r14	# %sfp, patternsize_bits
 12658      20
 12659              		.p2align 4,,3
 12660 452c E91CF1FF 		jmp	.L731	#
 12660      FF
 12661              	.LVL775:
 12662              	.L1091:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12663              		.loc 1 801 37 is_stmt 1 view .LVU4364
 12664 4531 E8DADDFF 		call	extendSieve_shiftleft	#
 12664      FF
 12665              	.LVL776:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12666              		.loc 1 801 37 is_stmt 0 view .LVU4365
 12667 4536 4C897424 		mov	QWORD PTR 32[rsp], r14	# %sfp, patternsize_bits
 12667      20
 12668 453b E90DF1FF 		jmp	.L731	#
 12668      FF
 12669              	.LVL777:
 12670              	.L772:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12671              		.loc 1 801 37 view .LVU4366
 12672              	.LBE511:
 12673              	.LBE549:
 12674              	.LBE557:
 12675              	.LBE564:
 12676              	.LBE616:
 12677              	.LBB617:
 12678              	.LBB574:
 803:sieve_extend.c **** }
 12679              		.loc 1 803 37 is_stmt 1 view .LVU4367
 12680 4540 E84BD8FF 		call	extendSieve_aligned	#
 12680      FF
 12681              	.LVL778:
 803:sieve_extend.c **** }
 12682              		.loc 1 803 37 is_stmt 0 view .LVU4368
 12683              		.p2align 4,,3
 12684 4545 E9E8FAFF 		jmp	.L770	#
 12684      FF
 12685              	.LVL779:
 12686 454a 660F1F44 		.p2align 4,,7
 12686      0000
 12687              		.p2align 3
 12688              	.L1096:
GAS LISTING /tmp/ccRwwoRx.s 			page 340


 803:sieve_extend.c **** }
 12689              		.loc 1 803 37 view .LVU4369
 12690              	.LBE574:
 12691              	.LBE617:
 12692              	.LBB618:
 12693              	.LBB615:
 12694              	.LBB614:
 12695              	.LBB613:
 12696              	.LBB607:
 12697              	.LBB602:
 12698              	.LBB600:
 12699              	.LBB598:
 12700              	.LBB595:
 188:sieve_extend.c ****    }
 12701              		.loc 1 188 7 is_stmt 1 view .LVU4370
 12702              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 12703              		.loc 1 188 27 is_stmt 0 view .LVU4371
 12704 4550 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp538, %sfp
 12704      08
 12705              	.LVL780:
 12706              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 12707              		.loc 1 188 18 view .LVU4372
 12708 4555 48090B   		or	QWORD PTR [rbx], rcx	# *index_ptr_505, tmp538
 12709 4558 E92CFEFF 		jmp	.L789	#
 12709      FF
 12710              	.LVL781:
 12711 455d 0F1F00   		.p2align 4,,7
 12712              		.p2align 3
 12713              	.L1095:
 188:sieve_extend.c ****    }
 12714              		.loc 1 188 18 view .LVU4373
 12715              	.LBE595:
 12716              	.LBE598:
 12717              	.LBE600:
 12718              	.LBE602:
 12719              	.LBE607:
 820:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 12720              		.loc 1 820 13 is_stmt 1 view .LVU4374
 12721 4560 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 12722 4564 4C89D2   		mov	rdx, r10	#, step
 12723 4567 4C89FF   		mov	rdi, r15	#, _96
 12724 456a E871CDFF 		call	setBitsTrue_largeRange_vector	#
 12724      FF
 12725              	.LVL782:
 821:sieve_extend.c ****         }
 12726              		.loc 1 821 13 view .LVU4375
 12727              	.LBB608:
 12728              	.LBI608:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 12729              		.loc 1 117 25 view .LVU4376
 12730              	.LBB609:
 118:sieve_extend.c ****     return index;
 12731              		.loc 1 118 5 view .LVU4377
 118:sieve_extend.c ****     return index;
 12732              		.loc 1 118 11 view .LVU4378
GAS LISTING /tmp/ccRwwoRx.s 			page 341


 12733              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12734              		.loc 1 118 12 is_stmt 0 view .LVU4379
 12735 456f 498B1424 		mov	rdx, QWORD PTR [r12]	# MEM[(uint64_t *)_778], MEM[(uint64_t *)_778]
 12736              	.LBE609:
 12737              	.LBE608:
 12738              	# sieve_extend.c:814:         if likely(block_start >= (prime + 1)) 
 814:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 12739              		.loc 1 814 12 view .LVU4380
 12740 4573 4989E8   		mov	r8, rbp	# index, _292
 12741              	.LBB611:
 12742              	.LBB610:
 12743              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12744              		.loc 1 118 11 view .LVU4381
 12745 4576 480FA3EA 		bt	rdx, rbp	# MEM[(uint64_t *)_778], _292
 12746 457a 0F833FFE 		jnc	.L781	#,
 12746      FFFF
 12747              	.LVL783:
 12748              	.L782:
 118:sieve_extend.c ****     return index;
 12749              		.loc 1 118 60 is_stmt 1 view .LVU4382
 12750              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12751              		.loc 1 118 65 is_stmt 0 view .LVU4383
 12752 4580 4D8D4801 		lea	r9, 1[r8]	# tmp552,
 12753              	.LVL784:
 12754              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12755              		.loc 1 118 23 view .LVU4384
 12756 4584 4D89CE   		mov	r14, r9	# tmp511, index
 12757              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12758              		.loc 1 118 65 view .LVU4385
 12759 4587 4D89C8   		mov	r8, r9	# index, tmp552
 118:sieve_extend.c ****     return index;
 12760              		.loc 1 118 11 is_stmt 1 view .LVU4386
 12761              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12762              		.loc 1 118 23 is_stmt 0 view .LVU4387
 12763 458a 49C1EE06 		shr	r14, 6	# tmp511,
 12764              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12765              		.loc 1 118 12 view .LVU4388
 12766 458e 4B8B0CF7 		mov	rcx, QWORD PTR [r15+r14*8]	# *_309, *_309
 12767              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12768              		.loc 1 118 11 view .LVU4389
 12769 4592 4C0FA3C9 		bt	rcx, r9	# *_309, index
 12770 4596 0F8323FE 		jnc	.L781	#,
 12770      FFFF
 118:sieve_extend.c ****     return index;
 12771              		.loc 1 118 60 is_stmt 1 view .LVU4390
 12772              	.LVL785:
 12773              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12774              		.loc 1 118 65 is_stmt 0 view .LVU4391
GAS LISTING /tmp/ccRwwoRx.s 			page 342


 12775 459c 4983C001 		add	r8, 1	# index,
 12776              	.LVL786:
 118:sieve_extend.c ****     return index;
 12777              		.loc 1 118 11 is_stmt 1 view .LVU4392
 12778              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12779              		.loc 1 118 23 is_stmt 0 view .LVU4393
 12780 45a0 4C89C0   		mov	rax, r8	# tmp593, index
 12781 45a3 48C1E806 		shr	rax, 6	# tmp593,
 12782              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12783              		.loc 1 118 12 view .LVU4394
 12784 45a7 498B3CC7 		mov	rdi, QWORD PTR [r15+rax*8]	# *_309, *_309
 12785              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12786              		.loc 1 118 11 view .LVU4395
 12787 45ab 4C0FA3C7 		bt	rdi, r8	# *_309, index
 12788 45af 0F830AFE 		jnc	.L781	#,
 12788      FFFF
 118:sieve_extend.c ****     return index;
 12789              		.loc 1 118 60 is_stmt 1 view .LVU4396
 12790              	.LVL787:
 12791              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12792              		.loc 1 118 65 is_stmt 0 view .LVU4397
 12793 45b5 4D8D4102 		lea	r8, 2[r9]	# index,
 12794              	.LVL788:
 118:sieve_extend.c ****     return index;
 12795              		.loc 1 118 11 is_stmt 1 view .LVU4398
 12796              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12797              		.loc 1 118 23 is_stmt 0 view .LVU4399
 12798 45b9 4D89C2   		mov	r10, r8	# tmp597, index
 12799 45bc 49C1EA06 		shr	r10, 6	# tmp597,
 12800              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12801              		.loc 1 118 12 view .LVU4400
 12802 45c0 4B8B34D7 		mov	rsi, QWORD PTR [r15+r10*8]	# *_309, *_309
 12803              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12804              		.loc 1 118 11 view .LVU4401
 12805 45c4 4C0FA3C6 		bt	rsi, r8	# *_309, index
 12806 45c8 0F83F1FD 		jnc	.L781	#,
 12806      FFFF
 118:sieve_extend.c ****     return index;
 12807              		.loc 1 118 60 is_stmt 1 view .LVU4402
 12808              	.LVL789:
 12809              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12810              		.loc 1 118 65 is_stmt 0 view .LVU4403
 12811 45ce 4D8D4103 		lea	r8, 3[r9]	# index,
 12812              	.LVL790:
 118:sieve_extend.c ****     return index;
 12813              		.loc 1 118 11 is_stmt 1 view .LVU4404
 12814              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12815              		.loc 1 118 23 is_stmt 0 view .LVU4405
GAS LISTING /tmp/ccRwwoRx.s 			page 343


 12816 45d2 4D89C4   		mov	r12, r8	# tmp601, index
 12817 45d5 49C1EC06 		shr	r12, 6	# tmp601,
 12818              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12819              		.loc 1 118 12 view .LVU4406
 12820 45d9 4F8B2CE7 		mov	r13, QWORD PTR [r15+r12*8]	# *_309, *_309
 12821              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12822              		.loc 1 118 11 view .LVU4407
 12823 45dd 4D0FA3C5 		bt	r13, r8	# *_309, index
 12824 45e1 0F83D8FD 		jnc	.L781	#,
 12824      FFFF
 118:sieve_extend.c ****     return index;
 12825              		.loc 1 118 60 is_stmt 1 view .LVU4408
 12826              	.LVL791:
 12827              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12828              		.loc 1 118 65 is_stmt 0 view .LVU4409
 12829 45e7 4D8D4104 		lea	r8, 4[r9]	# index,
 12830              	.LVL792:
 118:sieve_extend.c ****     return index;
 12831              		.loc 1 118 11 is_stmt 1 view .LVU4410
 12832              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12833              		.loc 1 118 23 is_stmt 0 view .LVU4411
 12834 45eb 4C89C5   		mov	rbp, r8	# tmp605, index
 12835 45ee 48C1ED06 		shr	rbp, 6	# tmp605,
 12836              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12837              		.loc 1 118 12 view .LVU4412
 12838 45f2 4D8B1CEF 		mov	r11, QWORD PTR [r15+rbp*8]	# *_309, *_309
 12839              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12840              		.loc 1 118 11 view .LVU4413
 12841 45f6 4D0FA3C3 		bt	r11, r8	# *_309, index
 12842 45fa 0F83BFFD 		jnc	.L781	#,
 12842      FFFF
 118:sieve_extend.c ****     return index;
 12843              		.loc 1 118 60 is_stmt 1 view .LVU4414
 12844              	.LVL793:
 12845              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12846              		.loc 1 118 65 is_stmt 0 view .LVU4415
 12847 4600 4D8D4105 		lea	r8, 5[r9]	# index,
 12848              	.LVL794:
 118:sieve_extend.c ****     return index;
 12849              		.loc 1 118 11 is_stmt 1 view .LVU4416
 12850              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12851              		.loc 1 118 23 is_stmt 0 view .LVU4417
 12852 4604 4C89C2   		mov	rdx, r8	# tmp609, index
 12853 4607 48C1EA06 		shr	rdx, 6	# tmp609,
 12854              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12855              		.loc 1 118 12 view .LVU4418
 12856 460b 4D8B34D7 		mov	r14, QWORD PTR [r15+rdx*8]	# *_309, *_309
 12857              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccRwwoRx.s 			page 344


 118:sieve_extend.c ****     return index;
 12858              		.loc 1 118 11 view .LVU4419
 12859 460f 4D0FA3C6 		bt	r14, r8	# *_309, index
 12860 4613 0F83A6FD 		jnc	.L781	#,
 12860      FFFF
 118:sieve_extend.c ****     return index;
 12861              		.loc 1 118 60 is_stmt 1 view .LVU4420
 12862              	.LVL795:
 12863              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12864              		.loc 1 118 65 is_stmt 0 view .LVU4421
 12865 4619 4D8D4106 		lea	r8, 6[r9]	# index,
 12866              	.LVL796:
 118:sieve_extend.c ****     return index;
 12867              		.loc 1 118 11 is_stmt 1 view .LVU4422
 12868              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12869              		.loc 1 118 23 is_stmt 0 view .LVU4423
 12870 461d 4C89C1   		mov	rcx, r8	# tmp613, index
 12871 4620 48C1E906 		shr	rcx, 6	# tmp613,
 12872              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12873              		.loc 1 118 12 view .LVU4424
 12874 4624 498B04CF 		mov	rax, QWORD PTR [r15+rcx*8]	# *_309, *_309
 12875              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12876              		.loc 1 118 11 view .LVU4425
 12877 4628 4C0FA3C0 		bt	rax, r8	# *_309, index
 12878 462c 0F838DFD 		jnc	.L781	#,
 12878      FFFF
 118:sieve_extend.c ****     return index;
 12879              		.loc 1 118 60 is_stmt 1 view .LVU4426
 12880              	.LVL797:
 12881              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12882              		.loc 1 118 65 is_stmt 0 view .LVU4427
 12883 4632 4D8D4107 		lea	r8, 7[r9]	# index,
 12884              	.LVL798:
 118:sieve_extend.c ****     return index;
 12885              		.loc 1 118 11 is_stmt 1 view .LVU4428
 12886              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12887              		.loc 1 118 23 is_stmt 0 view .LVU4429
 12888 4636 4D89C1   		mov	r9, r8	# tmp617, index
 12889 4639 49C1E906 		shr	r9, 6	# tmp617,
 12890              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12891              		.loc 1 118 12 view .LVU4430
 12892 463d 4B8B3CCF 		mov	rdi, QWORD PTR [r15+r9*8]	# *_309, *_309
 12893              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 12894              		.loc 1 118 11 view .LVU4431
 12895 4641 4C0FA3C7 		bt	rdi, r8	# *_309, index
 12896 4645 0F8235FF 		jc	.L782	#,
 12896      FFFF
 12897 464b E96FFDFF 		jmp	.L781	#
 12897      FF
GAS LISTING /tmp/ccRwwoRx.s 			page 345


 12898              	.LVL799:
 12899              		.p2align 4,,7
 12900              		.p2align 3
 12901              	.L778:
 118:sieve_extend.c ****     return index;
 12902              		.loc 1 118 11 view .LVU4432
 12903              	.LBE610:
 12904              	.LBE611:
 817:sieve_extend.c **** 
 12905              		.loc 1 817 13 is_stmt 1 view .LVU4433
 12906              	# sieve_extend.c:817:             start = prime * prime * 2 + prime * 2;
 817:sieve_extend.c **** 
 12907              		.loc 1 817 19 is_stmt 0 view .LVU4434
 12908 4650 4C0FAFC5 		imul	r8, rbp	# tmp505, _292
 12909 4654 4B8D3400 		lea	rsi, [r8+r8]	# index,
 12910              	.LVL800:
 817:sieve_extend.c **** 
 12911              		.loc 1 817 19 view .LVU4435
 12912 4658 E944FBFF 		jmp	.L779	#
 12912      FF
 12913              	.LVL801:
 12914 465d 0F1F00   		.p2align 4,,7
 12915              		.p2align 3
 12916              	.L1097:
 12917              	.LBB612:
 12918              	.LBB606:
 131:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 12919              		.loc 1 131 8 is_stmt 1 view .LVU4436
 132:sieve_extend.c ****        index += distance;
 12920              		.loc 1 132 8 view .LVU4437
 12921              	# sieve_extend.c:132:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 132:sieve_extend.c ****        index += distance;
 12922              		.loc 1 132 48 is_stmt 0 view .LVU4438
 12923 4660 4B8B6C1F 		mov	rbp, QWORD PTR 8[r15+r11]	# *_334, *_334
 12923      08
 12924              	.LVL802:
 132:sieve_extend.c ****        index += distance;
 12925              		.loc 1 132 48 view .LVU4439
 12926 4665 48F7D5   		not	rbp	# tmp539
 12927              	.LVL803:
 133:sieve_extend.c ****    }
 12928              		.loc 1 133 8 is_stmt 1 view .LVU4440
 12929              	# sieve_extend.c:132:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 132:sieve_extend.c ****        index += distance;
 12930              		.loc 1 132 17 is_stmt 0 view .LVU4441
 12931 4668 F34C0FBC 		tzcnt	r11, rbp	# distance, tmp539
 12931      DD
 12932              	.LVL804:
 12933              	# sieve_extend.c:133:        index += distance;
 133:sieve_extend.c ****    }
 12934              		.loc 1 133 14 view .LVU4442
 12935 466d 4D01D8   		add	r8, r11	# index, distance
 12936              	.LVL805:
 130:sieve_extend.c ****        index_word++;
 12937              		.loc 1 130 10 is_stmt 1 view .LVU4443
 12938 4670 E94AFDFF 		jmp	.L781	#
 12938      FF
GAS LISTING /tmp/ccRwwoRx.s 			page 346


 12939              	.LVL806:
 12940              		.p2align 4,,7
 12941 4675 0F1F00   		.p2align 3
 12942              	.L1093:
 130:sieve_extend.c ****        index_word++;
 12943              		.loc 1 130 10 is_stmt 0 view .LVU4444
 12944              	.LBE606:
 12945              	.LBE612:
 12946              	.LBE613:
 12947              	.LBE614:
 12948              	.LBE615:
 12949              	.LBE618:
 12950              	.LBB619:
 12951              	.LBB565:
 12952              	.LBB558:
 12953              	.LBB550:
 12954              	.LBB546:
 12955              	.LBB544:
 12956              	.LBB541:
 12957              	.LBB540:
 12958              	.LBB536:
 188:sieve_extend.c ****    }
 12959              		.loc 1 188 7 is_stmt 1 view .LVU4445
 12960              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 12961              		.loc 1 188 27 is_stmt 0 view .LVU4446
 12962 4678 48235424 		and	rdx, QWORD PTR 64[rsp]	# tmp462, %sfp
 12962      40
 12963              	.LVL807:
 12964              	# sieve_extend.c:188:       *index_ptr |= (mask & chopmask(range_stop));
 188:sieve_extend.c ****    }
 12965              		.loc 1 188 18 view .LVU4447
 12966 467d 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_534, tmp462
 12967 4680 E934F9FF 		jmp	.L756	#
 12967      FF
 12968              	.LVL808:
 12969              	.L1090:
 188:sieve_extend.c ****    }
 12970              		.loc 1 188 18 view .LVU4448
 12971              	.LBE536:
 12972              	.LBE540:
 12973              	.LBE541:
 12974              	.LBE544:
 12975              	.LBE546:
 12976              	.LBE550:
 12977              	.LBB551:
 12978              	.LBB512:
 793:sieve_extend.c ****         return; // rapid exit for small sizes
 12979              		.loc 1 793 9 is_stmt 1 view .LVU4449
 12980 4685 4D89C6   		mov	r14, r8	# patternsize_bits, patternsize_bits
 12981 4688 4C89E9   		mov	rcx, r13	#, _67
 12982 468b 4C89C2   		mov	rdx, r8	#, patternsize_bits
 12983 468e 4C89C6   		mov	rsi, r8	#, patternsize_bits
 12984 4691 4C89FF   		mov	rdi, r15	#, _96
 12985 4694 E867B9FF 		call	extendSieve_smallSize	#
 12985      FF
 12986              	.LVL809:
GAS LISTING /tmp/ccRwwoRx.s 			page 347


 794:sieve_extend.c ****     }
 12987              		.loc 1 794 9 view .LVU4450
 12988 4699 4C897424 		mov	QWORD PTR 32[rsp], r14	# %sfp, patternsize_bits
 12988      20
 12989 469e E9AAEFFF 		jmp	.L731	#
 12989      FF
 12990              	.LVL810:
 12991              	.L1094:
 794:sieve_extend.c ****     }
 12992              		.loc 1 794 9 is_stmt 0 view .LVU4451
 12993              	.LBE512:
 12994              	.LBE551:
 12995              	.LBE558:
 12996              	.LBE565:
 12997              	.LBE619:
 12998              	.LBB620:
 12999              	.LBB575:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13000              		.loc 1 801 37 is_stmt 1 view .LVU4452
 13001 46a3 E868DCFF 		call	extendSieve_shiftleft	#
 13001      FF
 13002              	.LVL811:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13003              		.loc 1 801 37 is_stmt 0 view .LVU4453
 13004              		.p2align 4,,3
 13005 46a8 E985F9FF 		jmp	.L770	#
 13005      FF
 13006              	.LVL812:
 13007              	.L1084:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13008              		.loc 1 801 37 view .LVU4454
 13009 46ad 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# <retval>, %sfp
 13009      28
 13010              	.LVL813:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13011              		.loc 1 801 37 view .LVU4455
 13012 46b2 89C8     		mov	eax, ecx	# tmp979, prime
 13013 46b4 48894C24 		mov	QWORD PTR 64[rsp], rcx	# %sfp, prime
 13013      40
 13014 46b9 BF010000 		mov	edi, 1	# tmp403,
 13014      00
 13015 46be 48C1E906 		shr	rcx, 6	# tmp404,
 13016 46c2 C462F9F7 		shlx	r10, rdi, rax	# prephitmp_716, tmp403, tmp979
 13016      D7
 13017 46c7 4C8B6D08 		mov	r13, QWORD PTR 8[rbp]	# prephitmp_814, sieve_91->bits
 13018              	.LVL814:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13019              		.loc 1 801 37 view .LVU4456
 13020 46cb 4D8D04CF 		lea	r8, [r15+rcx*8]	# prephitmp_714,
 13021 46cf 488B1424 		mov	rdx, QWORD PTR [rsp]	# patternsize_bits, %sfp
 13022 46d3 4C895424 		mov	QWORD PTR 48[rsp], r10	# %sfp, prephitmp_716
 13022      30
 13023 46d8 4C896C24 		mov	QWORD PTR 8[rsp], r13	# %sfp, prephitmp_814
 13023      08
 13024              	.LVL815:
 801:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 13025              		.loc 1 801 37 view .LVU4457
GAS LISTING /tmp/ccRwwoRx.s 			page 348


 13026              	.LBE575:
 13027              	.LBE620:
 13028              	.LBB621:
 13029              	.LBB566:
 13030              	.LBB559:
 13031              	# sieve_extend.c:863:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 863:sieve_extend.c **** 
 13032              		.loc 1 863 12 view .LVU4458
 13033 46dd 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 13033      18
 13034              	.LVL816:
 863:sieve_extend.c **** 
 13035              		.loc 1 863 12 view .LVU4459
 13036 46e2 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, prephitmp_714
 13036      20
 13037 46e7 E912F9FF 		jmp	.L730	#
 13037      FF
 13038              	.LVL817:
 13039              	.L796:
 13040              	.LBB552:
 13041              	.LBB526:
 13042              	# sieve_extend.c:197: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 197:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 13043              		.loc 1 197 21 view .LVU4460
 13044 46ec B9010000 		mov	ecx, 1	# pattern,
 13044      00
 13045 46f1 E91AF4FF 		jmp	.L736	#
 13045      FF
 13046              	.LVL818:
 13047              	.L1082:
 197:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 13048              		.loc 1 197 21 view .LVU4461
 13049              	.LBE526:
 13050              	.LBE552:
 13051              	.LBE559:
 13052              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 13053              		.loc 1 852 5 view .LVU4462
 13054 46f6 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, _96
 13054      20
 13055              	# sieve_extend.c:848:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 848:sieve_extend.c **** 
 13056              		.loc 1 848 18 view .LVU4463
 13057 46fb 31D2     		xor	edx, edx	# block$pattern_size
 13058              	# sieve_extend.c:843:     register counter_t prime   = 0;
 843:sieve_extend.c ****     counter_t patternsize_bits = 1;
 13059              		.loc 1 843 24 view .LVU4464
 13060 46fd 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 13060      40000000 
 13060      00
 13061              	# sieve_extend.c:848:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 848:sieve_extend.c **** 
 13062              		.loc 1 848 18 view .LVU4465
 13063 4706 31F6     		xor	esi, esi	# block$pattern_start
 13064              	# sieve_extend.c:852:     for (;range_stop < block_stop;) {
 852:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 13065              		.loc 1 852 5 view .LVU4466
GAS LISTING /tmp/ccRwwoRx.s 			page 349


 13066 4708 48C74424 		mov	QWORD PTR 48[rsp], 1	# %sfp,
 13066      30010000 
 13066      00
 13067 4711 E9B4F2FF 		jmp	.L723	#
 13067      FF
 13068              	.LBE566:
 13069              	.LBE621:
 13070              		.cfi_endproc
 13071              	.LFE79:
 13073 4716 662E0F1F 		.p2align 4
 13073      84000000 
 13073      0000
 13075              	tune_benchmark:
 13076              	.LVL819:
 13077              	.LFB87:
1026:sieve_extend.c **** 
1027:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 13078              		.loc 1 1027 94 is_stmt 1 view -0
 13079              		.cfi_startproc
 13080              		.loc 1 1027 94 is_stmt 0 view .LVU4468
 13081 4720 4154     		push	r12	#
 13082              		.cfi_def_cfa_offset 16
 13083              		.cfi_offset 12, -16
 13084 4722 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 13085              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1028:sieve_extend.c ****     counter_t passes = 0;
1029:sieve_extend.c ****     double elapsed_time = 0;
1030:sieve_extend.c ****     struct timespec start_time,end_time;
1031:sieve_extend.c ****     struct sieve_t *sieve;
1032:sieve_extend.c **** 
1033:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 13086              		.loc 1 1033 44 view .LVU4469
 13087 4725 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 13088              	.LVL820:
 13089              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 13090              		.loc 1 1027 94 view .LVU4470
 13091 4729 55       		push	rbp	#
 13092              		.cfi_def_cfa_offset 24
 13093              		.cfi_offset 6, -24
 13094              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 13095              		.loc 1 1033 44 view .LVU4471
 13096 472a 48C1E705 		sal	rdi, 5	# tmp115,
 13097              	# sieve_extend.c:1028:     counter_t passes = 0;
1028:sieve_extend.c ****     counter_t passes = 0;
 13098              		.loc 1 1028 15 view .LVU4472
 13099 472e 4531E4   		xor	r12d, r12d	# passes
 13100              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 13101              		.loc 1 1027 94 view .LVU4473
 13102 4731 53       		push	rbx	#
 13103              		.cfi_def_cfa_offset 32
 13104              		.cfi_offset 3, -32
 13105              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 13106              		.loc 1 1033 44 view .LVU4474
 13107 4732 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 13108              	# sieve_extend.c:1037:     clock_gettime(CLOCK_MONOTONIC,&start_time);
GAS LISTING /tmp/ccRwwoRx.s 			page 350


1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1035:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1036:sieve_extend.c **** 
1037:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 13109              		.loc 1 1037 5 view .LVU4475
 13110 4736 BF010000 		mov	edi, 1	#,
 13110      00
 13111              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 13112              		.loc 1 1027 94 view .LVU4476
 13113 473b 488D6424 		lea	rsp, -48[rsp]	#,
 13113      D0
 13114              		.cfi_def_cfa_offset 80
 13115              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 13116              		.loc 1 1034 30 view .LVU4477
 13117 4740 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 13118              	# sieve_extend.c:1037:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 13119              		.loc 1 1037 5 view .LVU4478
 13120 4744 4889E6   		mov	rsi, rsp	# tmp119,
 13121              	.LVL821:
 13122              	# sieve_extend.c:1035:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1035:sieve_extend.c **** 
 13123              		.loc 1 1035 30 view .LVU4479
 13124 4747 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 13125              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 13126              		.loc 1 1027 94 view .LVU4480
 13127 474b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 13127      25280000 
 13127      00
 13128 4754 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7292, tmp160
 13128      28
 13129 4759 31C0     		xor	eax, eax	# tmp160
1028:sieve_extend.c ****     double elapsed_time = 0;
 13130              		.loc 1 1028 5 is_stmt 1 view .LVU4481
 13131              	.LVL822:
1029:sieve_extend.c ****     struct timespec start_time,end_time;
 13132              		.loc 1 1029 5 view .LVU4482
1030:sieve_extend.c ****     struct sieve_t *sieve;
 13133              		.loc 1 1030 5 view .LVU4483
1031:sieve_extend.c **** 
 13134              		.loc 1 1031 5 view .LVU4484
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 13135              		.loc 1 1033 5 view .LVU4485
 13136              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 13137              		.loc 1 1033 29 is_stmt 0 view .LVU4486
 13138 475b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 13139              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1034:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 13140              		.loc 1 1034 30 view .LVU4487
 13141 475f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 13141      000000
 13142              	# sieve_extend.c:1035:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1035:sieve_extend.c **** 
 13143              		.loc 1 1035 30 view .LVU4488
GAS LISTING /tmp/ccRwwoRx.s 			page 351


 13144 4766 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 13144      000000
 13145              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 13146              		.loc 1 1033 29 view .LVU4489
 13147 476d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 13147      000000
1034:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 13148              		.loc 1 1034 5 is_stmt 1 view .LVU4490
1035:sieve_extend.c **** 
 13149              		.loc 1 1035 5 view .LVU4491
 13150              		.loc 1 1037 5 view .LVU4492
 13151 4774 E8000000 		call	clock_gettime@PLT	#
 13151      00
 13152              	.LVL823:
1038:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 13153              		.loc 1 1038 5 view .LVU4493
 13154              		.loc 1 1038 11 view .LVU4494
 13155 4779 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 13156 477d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 13156      40
 13157 4782 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 13157      00000000 
 13158 478a 7676     		jbe	.L1099	#,
 13159 478c E99E0000 		jmp	.L1100	#
 13159      00
 13160              	.LVL824:
 13161              		.p2align 4,,7
 13162 4791 0F1F8000 		.p2align 3
 13162      000000
 13163              	.L1103:
1039:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13164              		.loc 1 1039 9 view .LVU4495
 13165              	# sieve_extend.c:1039:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
 13166              		.loc 1 1039 17 is_stmt 0 view .LVU4496
 13167 4798 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 13168              	# sieve_extend.c:1041:         passes++;
1040:sieve_extend.c ****         sieve_delete(sieve);
1041:sieve_extend.c ****         passes++;
 13169              		.loc 1 1041 15 view .LVU4497
 13170 479c 4983C401 		add	r12, 1	# passes,
 13171              	.LVL825:
 13172              	# sieve_extend.c:1039:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1039:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13173              		.loc 1 1039 17 view .LVU4498
 13174 47a0 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 13175 47a3 E898EDFF 		call	sieve_shake	#
 13175      FF
 13176              	.LVL826:
 13177              	.LBB622:
 13178              	.LBB623:
 13179              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 13180              		.loc 1 112 5 view .LVU4499
 13181 47a8 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitstorage
 13182              	.LBE623:
 13183              	.LBE622:
GAS LISTING /tmp/ccRwwoRx.s 			page 352


 13184              	# sieve_extend.c:1039:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuni
1039:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13185              		.loc 1 1039 17 view .LVU4500
 13186 47ab 4889C5   		mov	rbp, rax	# sieve, tmp151
 13187              	.LVL827:
1040:sieve_extend.c ****         sieve_delete(sieve);
 13188              		.loc 1 1040 9 is_stmt 1 view .LVU4501
 13189              	.LBB625:
 13190              	.LBI622:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 13191              		.loc 1 111 13 view .LVU4502
 13192              	.LBB624:
 112:sieve_extend.c ****     free(sieve);
 13193              		.loc 1 112 5 view .LVU4503
 13194 47ae E8000000 		call	free@PLT	#
 13194      00
 13195              	.LVL828:
 113:sieve_extend.c **** }
 13196              		.loc 1 113 5 view .LVU4504
 13197 47b3 4889EF   		mov	rdi, rbp	#, sieve
 13198 47b6 E8000000 		call	free@PLT	#
 13198      00
 13199              	.LVL829:
 113:sieve_extend.c **** }
 13200              		.loc 1 113 5 is_stmt 0 view .LVU4505
 13201              	.LBE624:
 13202              	.LBE625:
 13203              		.loc 1 1041 9 is_stmt 1 view .LVU4506
1042:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 13204              		.loc 1 1042 9 view .LVU4507
 13205 47bb 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 13205      10
 13206 47c0 BF010000 		mov	edi, 1	#,
 13206      00
 13207 47c5 E8000000 		call	clock_gettime@PLT	#
 13207      00
 13208              	.LVL830:
1043:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 13209              		.loc 1 1043 9 view .LVU4508
 13210              	# sieve_extend.c:1043:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 13211              		.loc 1 1043 58 is_stmt 0 view .LVU4509
 13212 47ca C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 13212      442418
 13213              	# sieve_extend.c:1043:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 13214              		.loc 1 1043 64 view .LVU4510
 13215 47d1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 13215      0C24
 13216              	# sieve_extend.c:1043:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 13217              		.loc 1 1043 104 view .LVU4511
 13218 47d7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 13218      5C2408
 13219              	# sieve_extend.c:1043:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 13220              		.loc 1 1043 40 view .LVU4512
 13221 47de C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 13221      542410
 13222 47e5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 13222      05000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 353


 13222      00
 13223 47ee C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 13223      1D000000 
 13223      00
 13224              	# sieve_extend.c:1043:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 13225              		.loc 1 1043 22 view .LVU4513
 13226 47f7 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 13227              	.LVL831:
1038:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13228              		.loc 1 1038 11 is_stmt 1 view .LVU4514
 13229 47fb C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 13229      40
 13230 4800 7706     		ja	.L1114	#,
 13231              	.LVL832:
 13232              	.L1099:
 13233              	# sieve_extend.c:1038:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1038:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13234              		.loc 1 1038 79 is_stmt 0 discriminator 1 view .LVU4515
 13235 4802 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 13236 4806 7790     		ja	.L1103	#,
 13237              	.L1114:
1038:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13238              		.loc 1 1038 79 discriminator 1 view .LVU4516
 13239 4808 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 13239      F4
 13240 480d 4D85E4   		test	r12, r12	# passes
 13241 4810 7919     		jns	.L1105	#,
1038:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13242              		.loc 1 1038 79 discriminator 1 view .LVU4517
 13243 4812 4C89E6   		mov	rsi, r12	# tmp135, passes
 13244 4815 4D89E1   		mov	r9, r12	# tmp136, passes
 13245 4818 48D1EE   		shr	rsi	# tmp135
 13246 481b 4183E101 		and	r9d, 1	# tmp136,
 13247 481f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 13248 4822 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 13248      EE
 13249 4827 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 13250              	.L1105:
1038:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13251              		.loc 1 1038 79 discriminator 1 view .LVU4518
 13252 482b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 13253              	.LVL833:
 13254              	.L1100:
1044:sieve_extend.c ****     }
1045:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 13255              		.loc 1 1045 5 is_stmt 1 view .LVU4519
 13256              	# sieve_extend.c:1045:     tuning_result[tuning_result_index].passes = passes;
 13257              		.loc 1 1045 47 is_stmt 0 view .LVU4520
 13258 482f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1046:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 13259              		.loc 1 1046 5 is_stmt 1 view .LVU4521
 13260              	# sieve_extend.c:1046:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 13261              		.loc 1 1046 53 is_stmt 0 view .LVU4522
 13262 4833 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 13262      50
1047:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 13263              		.loc 1 1047 5 is_stmt 1 view .LVU4523
GAS LISTING /tmp/ccRwwoRx.s 			page 354


 13264              	# sieve_extend.c:1047:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 13265              		.loc 1 1047 44 is_stmt 0 view .LVU4524
 13266 4838 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 13266      58
 13267              	# sieve_extend.c:1048: }
1048:sieve_extend.c **** }
 13268              		.loc 1 1048 1 view .LVU4525
 13269 483d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7292
 13269      28
 13270 4842 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 13270      25280000 
 13270      00
 13271 484b 750A     		jne	.L1115	#,
 13272 484d 488D6424 		lea	rsp, 48[rsp]	#,
 13272      30
 13273              		.cfi_remember_state
 13274              		.cfi_def_cfa_offset 32
 13275 4852 5B       		pop	rbx	#
 13276              		.cfi_def_cfa_offset 24
 13277 4853 5D       		pop	rbp	#
 13278              		.cfi_def_cfa_offset 16
 13279 4854 415C     		pop	r12	#
 13280              		.cfi_def_cfa_offset 8
 13281 4856 C3       		ret	
 13282              	.L1115:
 13283              		.cfi_restore_state
 13284 4857 E8000000 		call	__stack_chk_fail@PLT	#
 13284      00
 13285              	.LVL834:
 13286              		.cfi_endproc
 13287              	.LFE87:
 13289 485c 0F1F4000 		.p2align 4
 13290              		.globl	shiftvec
 13292              	shiftvec:
 13293              	.LVL835:
 13294              	.LFB70:
 530:sieve_extend.c ****     int i = 0;
 13295              		.loc 1 530 1 is_stmt 1 view -0
 13296              		.cfi_startproc
 530:sieve_extend.c ****     int i = 0;
 13297              		.loc 1 530 1 is_stmt 0 view .LVU4527
 13298 4860 F30F1EFA 		endbr64	
 531:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 13299              		.loc 1 531 5 is_stmt 1 view .LVU4528
 13300              	.LVL836:
 533:sieve_extend.c ****     {
 13301              		.loc 1 533 5 view .LVU4529
 533:sieve_extend.c ****     {
 13302              		.loc 1 533 12 view .LVU4530
 13303              	# sieve_extend.c:533:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 533:sieve_extend.c ****     {
 13304              		.loc 1 533 5 is_stmt 0 view .LVU4531
 13305 4864 83FA04   		cmp	edx, 4	# size,
 13306 4867 0F8E9D03 		jle	.L1161	#,
 13306      0000
 13307 486d 41BB4000 		mov	r11d, 64	# tmp130,
 13307      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 355


 13308 4873 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 13309 4877 4489D8   		mov	eax, r11d	# _4, tmp130
 13310 487a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 13311 487e 29C8     		sub	eax, ecx	# _4, shift
 13312              	.LBB626:
 13313              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13314              		.loc 1 536 25 view .LVU4532
 13315 4880 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114, off
 13315      1655
 13316              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13317              		.loc 1 536 34 view .LVU4533
 13318 4886 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.626_114, offset: 0B]
 13319 488a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 13319      C0
 13320 488f 41C1E802 		shr	r8d, 2	# _25,
 13321 4893 41B90100 		mov	r9d, 1	# ivtmp.623,
 13321      0000
 13322              	.LBE626:
 13323              	.LBB627:
 13324              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13325              		.loc 1 538 34 view .LVU4534
 13326 4899 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.613, vect__102.612, _4
 13327              	.LBE627:
 13328              	.LBB628:
 13329              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13330              		.loc 1 536 34 view .LVU4535
 13331 489d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.617, tmp269, shift
 13332 48a1 458D5001 		lea	r10d, 1[r8]	# tmp164,
 13333 48a5 4589C3   		mov	r11d, r8d	# tmp169, _25
 13334              	.LBE628:
 13335              	.LBB629:
 13336              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13337              		.loc 1 538 22 view .LVU4536
 13338 48a8 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.618, vect__57.613, vect__104.617
 13339 48ac 4183E307 		and	r11d, 7	# tmp169,
 13340              	.LVL837:
 538:sieve_extend.c ****     }
 13341              		.loc 1 538 22 view .LVU4537
 13342              	.LBE629:
 13343              	.LBB630:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13344              		.loc 1 535 25 is_stmt 1 view .LVU4538
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13345              		.loc 1 536 13 view .LVU4539
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13346              		.loc 1 535 32 view .LVU4540
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13347              		.loc 1 535 25 view .LVU4541
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13348              		.loc 1 536 13 view .LVU4542
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13349              		.loc 1 535 32 view .LVU4543
GAS LISTING /tmp/ccRwwoRx.s 			page 356


 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13350              		.loc 1 535 25 view .LVU4544
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13351              		.loc 1 536 13 view .LVU4545
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13352              		.loc 1 535 32 view .LVU4546
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13353              		.loc 1 535 25 view .LVU4547
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13354              		.loc 1 536 13 view .LVU4548
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13355              		.loc 1 535 32 view .LVU4549
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13356              		.loc 1 535 25 view .LVU4550
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13357              		.loc 1 535 25 is_stmt 0 view .LVU4551
 13358              	.LBE630:
 13359              	.LBB631:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13360              		.loc 1 537 25 is_stmt 1 view .LVU4552
 538:sieve_extend.c ****     }
 13361              		.loc 1 538 13 view .LVU4553
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13362              		.loc 1 537 32 view .LVU4554
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13363              		.loc 1 537 25 view .LVU4555
 538:sieve_extend.c ****     }
 13364              		.loc 1 538 13 view .LVU4556
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13365              		.loc 1 537 32 view .LVU4557
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13366              		.loc 1 537 25 view .LVU4558
 538:sieve_extend.c ****     }
 13367              		.loc 1 538 13 view .LVU4559
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13368              		.loc 1 537 32 view .LVU4560
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13369              		.loc 1 537 25 view .LVU4561
 538:sieve_extend.c ****     }
 13370              		.loc 1 538 13 view .LVU4562
 13371 48b0 4183FA01 		cmp	r10d, 1	# tmp164,
 13372 48b4 B8200000 		mov	eax, 32	# ivtmp.626,
 13372      00
 13373              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13374              		.loc 1 538 22 is_stmt 0 view .LVU4563
 13375 48b9 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect__58
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13376              		.loc 1 537 32 is_stmt 1 view .LVU4564
 13377              	.LVL838:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13378              		.loc 1 537 25 view .LVU4565
 13379              	.LBE631:
 533:sieve_extend.c ****     {
 13380              		.loc 1 533 24 view .LVU4566
 533:sieve_extend.c ****     {
 13381              		.loc 1 533 12 view .LVU4567
GAS LISTING /tmp/ccRwwoRx.s 			page 357


 13382 48bd 0F866002 		jbe	.L1159	#,
 13382      0000
 13383 48c3 4585DB   		test	r11d, r11d	# tmp169
 13384 48c6 0F841E01 		je	.L1119	#,
 13384      0000
 13385 48cc 4183FB01 		cmp	r11d, 1	# tmp169,
 13386 48d0 0F84E500 		je	.L1146	#,
 13386      0000
 13387 48d6 4183FB02 		cmp	r11d, 2	# tmp169,
 13388 48da 0F84B600 		je	.L1147	#,
 13388      0000
 13389 48e0 4183FB03 		cmp	r11d, 3	# tmp169,
 13390 48e4 0F848700 		je	.L1148	#,
 13390      0000
 13391 48ea 4183FB04 		cmp	r11d, 4	# tmp169,
 13392 48ee 745B     		je	.L1149	#,
 13393 48f0 4183FB05 		cmp	r11d, 5	# tmp169,
 13394 48f4 7430     		je	.L1150	#,
 13395 48f6 4183FB06 		cmp	r11d, 6	# tmp169,
 13396 48fa 0F85DC02 		jne	.L1162	#,
 13396      0000
 13397              	.L1151:
 13398              	.LVL839:
 13399              	.LBB632:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13400              		.loc 1 535 25 view .LVU4568
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13401              		.loc 1 536 13 view .LVU4569
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13402              		.loc 1 535 32 view .LVU4570
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13403              		.loc 1 535 25 view .LVU4571
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13404              		.loc 1 536 13 view .LVU4572
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13405              		.loc 1 535 32 view .LVU4573
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13406              		.loc 1 535 25 view .LVU4574
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13407              		.loc 1 536 13 view .LVU4575
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13408              		.loc 1 535 32 view .LVU4576
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13409              		.loc 1 535 25 view .LVU4577
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13410              		.loc 1 536 13 view .LVU4578
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13411              		.loc 1 535 32 view .LVU4579
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13412              		.loc 1 535 25 view .LVU4580
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13413              		.loc 1 535 25 is_stmt 0 view .LVU4581
 13414              	.LBE632:
 13415              	.LBB633:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13416              		.loc 1 537 25 is_stmt 1 view .LVU4582
 538:sieve_extend.c ****     }
GAS LISTING /tmp/ccRwwoRx.s 			page 358


 13417              		.loc 1 538 13 view .LVU4583
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13418              		.loc 1 537 32 view .LVU4584
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13419              		.loc 1 537 25 view .LVU4585
 538:sieve_extend.c ****     }
 13420              		.loc 1 538 13 view .LVU4586
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13421              		.loc 1 537 32 view .LVU4587
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13422              		.loc 1 537 25 view .LVU4588
 538:sieve_extend.c ****     }
 13423              		.loc 1 538 13 view .LVU4589
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13424              		.loc 1 537 32 view .LVU4590
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13425              		.loc 1 537 25 view .LVU4591
 538:sieve_extend.c ****     }
 13426              		.loc 1 538 13 view .LVU4592
 13427              	.LBE633:
 13428              	.LBB634:
 13429              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13430              		.loc 1 536 25 is_stmt 0 view .LVU4593
 13431 4900 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114
 13431      240655
 13432 4907 4183C101 		add	r9d, 1	# ivtmp.623,
 13433              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13434              		.loc 1 536 34 view .LVU4594
 13435 490b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.626_114, offset: 
 13435      06
 13436              	.LBE634:
 13437              	.LBB635:
 13438              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13439              		.loc 1 538 34 view .LVU4595
 13440 4910 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.613, vect__102.612, _4
 13441              	.LBE635:
 13442              	.LBB636:
 13443              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13444              		.loc 1 536 34 view .LVU4596
 13445 4914 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.617, tmp279, shift
 13446              	.LBE636:
 13447              	.LBB637:
 13448              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13449              		.loc 1 538 22 view .LVU4597
 13450 4918 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.618, vect__57.613, vect__104.617
 13450      D7
 13451 491d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect
 13451      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13452              		.loc 1 537 32 is_stmt 1 view .LVU4598
 13453              	.LVL840:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccRwwoRx.s 			page 359


 13454              		.loc 1 537 25 view .LVU4599
 13455              	.LBE637:
 533:sieve_extend.c ****     {
 13456              		.loc 1 533 24 view .LVU4600
 533:sieve_extend.c ****     {
 13457              		.loc 1 533 12 view .LVU4601
 13458 4922 4883C020 		add	rax, 32	# ivtmp.626,
 13459              	.L1150:
 13460              	.LVL841:
 13461              	.LBB638:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13462              		.loc 1 535 25 view .LVU4602
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13463              		.loc 1 536 13 view .LVU4603
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13464              		.loc 1 535 32 view .LVU4604
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13465              		.loc 1 535 25 view .LVU4605
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13466              		.loc 1 536 13 view .LVU4606
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13467              		.loc 1 535 32 view .LVU4607
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13468              		.loc 1 535 25 view .LVU4608
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13469              		.loc 1 536 13 view .LVU4609
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13470              		.loc 1 535 32 view .LVU4610
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13471              		.loc 1 535 25 view .LVU4611
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13472              		.loc 1 536 13 view .LVU4612
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13473              		.loc 1 535 32 view .LVU4613
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13474              		.loc 1 535 25 view .LVU4614
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13475              		.loc 1 535 25 is_stmt 0 view .LVU4615
 13476              	.LBE638:
 13477              	.LBB639:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13478              		.loc 1 537 25 is_stmt 1 view .LVU4616
 538:sieve_extend.c ****     }
 13479              		.loc 1 538 13 view .LVU4617
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13480              		.loc 1 537 32 view .LVU4618
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13481              		.loc 1 537 25 view .LVU4619
 538:sieve_extend.c ****     }
 13482              		.loc 1 538 13 view .LVU4620
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13483              		.loc 1 537 32 view .LVU4621
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13484              		.loc 1 537 25 view .LVU4622
 538:sieve_extend.c ****     }
 13485              		.loc 1 538 13 view .LVU4623
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccRwwoRx.s 			page 360


 13486              		.loc 1 537 32 view .LVU4624
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13487              		.loc 1 537 25 view .LVU4625
 538:sieve_extend.c ****     }
 13488              		.loc 1 538 13 view .LVU4626
 13489              	.LBE639:
 13490              	.LBB640:
 13491              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13492              		.loc 1 536 25 is_stmt 0 view .LVU4627
 13493 4926 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114,
 13493      2C0655
 13494 492d 4183C101 		add	r9d, 1	# ivtmp.623,
 13495              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13496              		.loc 1 536 34 view .LVU4628
 13497 4931 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.626_114, offset: 0
 13497      06
 13498              	.LBE640:
 13499              	.LBB641:
 13500              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13501              		.loc 1 538 34 view .LVU4629
 13502 4936 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.613, vect__102.612, _4
 13503              	.LBE641:
 13504              	.LBB642:
 13505              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13506              		.loc 1 536 34 view .LVU4630
 13507 493a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.617, tmp280, shift
 13508              	.LBE642:
 13509              	.LBB643:
 13510              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13511              		.loc 1 538 22 view .LVU4631
 13512 493e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.618, vect__57.613, vect__104.617
 13513 4942 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect
 13513      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13514              		.loc 1 537 32 is_stmt 1 view .LVU4632
 13515              	.LVL842:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13516              		.loc 1 537 25 view .LVU4633
 13517              	.LBE643:
 533:sieve_extend.c ****     {
 13518              		.loc 1 533 24 view .LVU4634
 533:sieve_extend.c ****     {
 13519              		.loc 1 533 12 view .LVU4635
 13520 4947 4883C020 		add	rax, 32	# ivtmp.626,
 13521              	.L1149:
 13522              	.LVL843:
 13523              	.LBB644:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13524              		.loc 1 535 25 view .LVU4636
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13525              		.loc 1 536 13 view .LVU4637
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 361


 13526              		.loc 1 535 32 view .LVU4638
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13527              		.loc 1 535 25 view .LVU4639
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13528              		.loc 1 536 13 view .LVU4640
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13529              		.loc 1 535 32 view .LVU4641
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13530              		.loc 1 535 25 view .LVU4642
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13531              		.loc 1 536 13 view .LVU4643
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13532              		.loc 1 535 32 view .LVU4644
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13533              		.loc 1 535 25 view .LVU4645
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13534              		.loc 1 536 13 view .LVU4646
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13535              		.loc 1 535 32 view .LVU4647
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13536              		.loc 1 535 25 view .LVU4648
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13537              		.loc 1 535 25 is_stmt 0 view .LVU4649
 13538              	.LBE644:
 13539              	.LBB645:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13540              		.loc 1 537 25 is_stmt 1 view .LVU4650
 538:sieve_extend.c ****     }
 13541              		.loc 1 538 13 view .LVU4651
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13542              		.loc 1 537 32 view .LVU4652
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13543              		.loc 1 537 25 view .LVU4653
 538:sieve_extend.c ****     }
 13544              		.loc 1 538 13 view .LVU4654
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13545              		.loc 1 537 32 view .LVU4655
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13546              		.loc 1 537 25 view .LVU4656
 538:sieve_extend.c ****     }
 13547              		.loc 1 538 13 view .LVU4657
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13548              		.loc 1 537 32 view .LVU4658
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13549              		.loc 1 537 25 view .LVU4659
 538:sieve_extend.c ****     }
 13550              		.loc 1 538 13 view .LVU4660
 13551              	.LBE645:
 13552              	.LBB646:
 13553              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13554              		.loc 1 536 25 is_stmt 0 view .LVU4661
 13555 494b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114,
 13555      040655
 13556 4952 4183C101 		add	r9d, 1	# ivtmp.623,
 13557              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccRwwoRx.s 			page 362


 13558              		.loc 1 536 34 view .LVU4662
 13559 4956 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.626_114, offset: 
 13559      06
 13560              	.LBE646:
 13561              	.LBB647:
 13562              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13563              		.loc 1 538 34 view .LVU4663
 13564 495b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.613, vect__102.612, _4
 13565              	.LBE647:
 13566              	.LBB648:
 13567              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13568              		.loc 1 536 34 view .LVU4664
 13569 495f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.617, tmp281, shift
 13570              	.LBE648:
 13571              	.LBB649:
 13572              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13573              		.loc 1 538 22 view .LVU4665
 13574 4963 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.618, vect__57.613, vect__104.617
 13574      E3
 13575 4968 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vec
 13575      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13576              		.loc 1 537 32 is_stmt 1 view .LVU4666
 13577              	.LVL844:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13578              		.loc 1 537 25 view .LVU4667
 13579              	.LBE649:
 533:sieve_extend.c ****     {
 13580              		.loc 1 533 24 view .LVU4668
 533:sieve_extend.c ****     {
 13581              		.loc 1 533 12 view .LVU4669
 13582 496d 4883C020 		add	rax, 32	# ivtmp.626,
 13583              	.L1148:
 13584              	.LVL845:
 13585              	.LBB650:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13586              		.loc 1 535 25 view .LVU4670
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13587              		.loc 1 536 13 view .LVU4671
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13588              		.loc 1 535 32 view .LVU4672
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13589              		.loc 1 535 25 view .LVU4673
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13590              		.loc 1 536 13 view .LVU4674
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13591              		.loc 1 535 32 view .LVU4675
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13592              		.loc 1 535 25 view .LVU4676
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13593              		.loc 1 536 13 view .LVU4677
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13594              		.loc 1 535 32 view .LVU4678
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 363


 13595              		.loc 1 535 25 view .LVU4679
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13596              		.loc 1 536 13 view .LVU4680
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13597              		.loc 1 535 32 view .LVU4681
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13598              		.loc 1 535 25 view .LVU4682
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13599              		.loc 1 535 25 is_stmt 0 view .LVU4683
 13600              	.LBE650:
 13601              	.LBB651:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13602              		.loc 1 537 25 is_stmt 1 view .LVU4684
 538:sieve_extend.c ****     }
 13603              		.loc 1 538 13 view .LVU4685
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13604              		.loc 1 537 32 view .LVU4686
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13605              		.loc 1 537 25 view .LVU4687
 538:sieve_extend.c ****     }
 13606              		.loc 1 538 13 view .LVU4688
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13607              		.loc 1 537 32 view .LVU4689
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13608              		.loc 1 537 25 view .LVU4690
 538:sieve_extend.c ****     }
 13609              		.loc 1 538 13 view .LVU4691
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13610              		.loc 1 537 32 view .LVU4692
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13611              		.loc 1 537 25 view .LVU4693
 538:sieve_extend.c ****     }
 13612              		.loc 1 538 13 view .LVU4694
 13613              	.LBE651:
 13614              	.LBB652:
 13615              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13616              		.loc 1 536 25 is_stmt 0 view .LVU4695
 13617 4971 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114
 13617      2C0655
 13618 4978 4183C101 		add	r9d, 1	# ivtmp.623,
 13619              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13620              		.loc 1 536 34 view .LVU4696
 13621 497c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.626_114, offset: 
 13621      06
 13622              	.LBE652:
 13623              	.LBB653:
 13624              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13625              		.loc 1 538 34 view .LVU4697
 13626 4981 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.613, vect__102.612, _4
 13627              	.LBE653:
 13628              	.LBB654:
 13629              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13630              		.loc 1 536 34 view .LVU4698
GAS LISTING /tmp/ccRwwoRx.s 			page 364


 13631 4985 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.617, tmp282, shift
 13632              	.LBE654:
 13633              	.LBB655:
 13634              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13635              		.loc 1 538 22 view .LVU4699
 13636 4989 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.618, vect__57.613, vect__104.617
 13637 498d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect
 13637      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13638              		.loc 1 537 32 is_stmt 1 view .LVU4700
 13639              	.LVL846:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13640              		.loc 1 537 25 view .LVU4701
 13641              	.LBE655:
 533:sieve_extend.c ****     {
 13642              		.loc 1 533 24 view .LVU4702
 533:sieve_extend.c ****     {
 13643              		.loc 1 533 12 view .LVU4703
 13644 4992 4883C020 		add	rax, 32	# ivtmp.626,
 13645              	.L1147:
 13646              	.LVL847:
 13647              	.LBB656:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13648              		.loc 1 535 25 view .LVU4704
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13649              		.loc 1 536 13 view .LVU4705
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13650              		.loc 1 535 32 view .LVU4706
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13651              		.loc 1 535 25 view .LVU4707
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13652              		.loc 1 536 13 view .LVU4708
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13653              		.loc 1 535 32 view .LVU4709
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13654              		.loc 1 535 25 view .LVU4710
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13655              		.loc 1 536 13 view .LVU4711
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13656              		.loc 1 535 32 view .LVU4712
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13657              		.loc 1 535 25 view .LVU4713
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13658              		.loc 1 536 13 view .LVU4714
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13659              		.loc 1 535 32 view .LVU4715
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13660              		.loc 1 535 25 view .LVU4716
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13661              		.loc 1 535 25 is_stmt 0 view .LVU4717
 13662              	.LBE656:
 13663              	.LBB657:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13664              		.loc 1 537 25 is_stmt 1 view .LVU4718
 538:sieve_extend.c ****     }
 13665              		.loc 1 538 13 view .LVU4719
GAS LISTING /tmp/ccRwwoRx.s 			page 365


 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13666              		.loc 1 537 32 view .LVU4720
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13667              		.loc 1 537 25 view .LVU4721
 538:sieve_extend.c ****     }
 13668              		.loc 1 538 13 view .LVU4722
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13669              		.loc 1 537 32 view .LVU4723
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13670              		.loc 1 537 25 view .LVU4724
 538:sieve_extend.c ****     }
 13671              		.loc 1 538 13 view .LVU4725
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13672              		.loc 1 537 32 view .LVU4726
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13673              		.loc 1 537 25 view .LVU4727
 538:sieve_extend.c ****     }
 13674              		.loc 1 538 13 view .LVU4728
 13675              	.LBE657:
 13676              	.LBB658:
 13677              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13678              		.loc 1 536 25 is_stmt 0 view .LVU4729
 13679 4996 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114,
 13679      240655
 13680 499d 4183C101 		add	r9d, 1	# ivtmp.623,
 13681              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13682              		.loc 1 536 34 view .LVU4730
 13683 49a1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.626_114, offset: 0
 13683      06
 13684              	.LBE658:
 13685              	.LBB659:
 13686              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13687              		.loc 1 538 34 view .LVU4731
 13688 49a6 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.613, vect__102.612, _4
 13689              	.LBE659:
 13690              	.LBB660:
 13691              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13692              		.loc 1 536 34 view .LVU4732
 13693 49aa C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.617, tmp283, shift
 13694              	.LBE660:
 13695              	.LBB661:
 13696              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13697              		.loc 1 538 22 view .LVU4733
 13698 49ae C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.618, vect__57.613, vect__104.617
 13699 49b2 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect
 13699      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13700              		.loc 1 537 32 is_stmt 1 view .LVU4734
 13701              	.LVL848:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13702              		.loc 1 537 25 view .LVU4735
 13703              	.LBE661:
GAS LISTING /tmp/ccRwwoRx.s 			page 366


 533:sieve_extend.c ****     {
 13704              		.loc 1 533 24 view .LVU4736
 533:sieve_extend.c ****     {
 13705              		.loc 1 533 12 view .LVU4737
 13706 49b7 4883C020 		add	rax, 32	# ivtmp.626,
 13707              	.L1146:
 13708              	.LVL849:
 13709              	.LBB662:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13710              		.loc 1 535 25 view .LVU4738
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13711              		.loc 1 536 13 view .LVU4739
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13712              		.loc 1 535 32 view .LVU4740
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13713              		.loc 1 535 25 view .LVU4741
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13714              		.loc 1 536 13 view .LVU4742
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13715              		.loc 1 535 32 view .LVU4743
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13716              		.loc 1 535 25 view .LVU4744
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13717              		.loc 1 536 13 view .LVU4745
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13718              		.loc 1 535 32 view .LVU4746
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13719              		.loc 1 535 25 view .LVU4747
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13720              		.loc 1 536 13 view .LVU4748
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13721              		.loc 1 535 32 view .LVU4749
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13722              		.loc 1 535 25 view .LVU4750
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13723              		.loc 1 535 25 is_stmt 0 view .LVU4751
 13724              	.LBE662:
 13725              	.LBB663:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13726              		.loc 1 537 25 is_stmt 1 view .LVU4752
 538:sieve_extend.c ****     }
 13727              		.loc 1 538 13 view .LVU4753
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13728              		.loc 1 537 32 view .LVU4754
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13729              		.loc 1 537 25 view .LVU4755
 538:sieve_extend.c ****     }
 13730              		.loc 1 538 13 view .LVU4756
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13731              		.loc 1 537 32 view .LVU4757
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13732              		.loc 1 537 25 view .LVU4758
 538:sieve_extend.c ****     }
 13733              		.loc 1 538 13 view .LVU4759
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13734              		.loc 1 537 32 view .LVU4760
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccRwwoRx.s 			page 367


 13735              		.loc 1 537 25 view .LVU4761
 538:sieve_extend.c ****     }
 13736              		.loc 1 538 13 view .LVU4762
 13737              	.LBE663:
 13738              	.LBB664:
 13739              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13740              		.loc 1 536 25 is_stmt 0 view .LVU4763
 13741 49bb C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114,
 13741      0C0655
 13742 49c2 4183C101 		add	r9d, 1	# ivtmp.623,
 13743              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13744              		.loc 1 536 34 view .LVU4764
 13745 49c6 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.626_114, offset: 
 13745      06
 13746              	.LBE664:
 13747              	.LBB665:
 13748              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13749              		.loc 1 538 34 view .LVU4765
 13750 49cb C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.613, vect__102.612, _4
 13751              	.LBE665:
 13752              	.LBB666:
 13753              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13754              		.loc 1 536 34 view .LVU4766
 13755 49cf C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.617, tmp284, shift
 13756              	.LBE666:
 13757              	.LBB667:
 13758              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13759              		.loc 1 538 22 view .LVU4767
 13760 49d3 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.618, vect__57.613, vect__104.617
 13760      EC
 13761 49d8 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vec
 13761      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13762              		.loc 1 537 32 is_stmt 1 view .LVU4768
 13763              	.LVL850:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13764              		.loc 1 537 25 view .LVU4769
 13765              	.LBE667:
 533:sieve_extend.c ****     {
 13766              		.loc 1 533 24 view .LVU4770
 533:sieve_extend.c ****     {
 13767              		.loc 1 533 12 view .LVU4771
 13768 49dd 4883C020 		add	rax, 32	# ivtmp.626,
 13769 49e1 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.623
 13770 49e4 0F863901 		jbe	.L1159	#,
 13770      0000
 13771              	.L1119:
 13772              	.LVL851:
 13773              	.LBB668:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13774              		.loc 1 535 25 view .LVU4772
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccRwwoRx.s 			page 368


 13775              		.loc 1 536 13 view .LVU4773
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13776              		.loc 1 535 32 view .LVU4774
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13777              		.loc 1 535 25 view .LVU4775
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13778              		.loc 1 536 13 view .LVU4776
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13779              		.loc 1 535 32 view .LVU4777
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13780              		.loc 1 535 25 view .LVU4778
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13781              		.loc 1 536 13 view .LVU4779
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13782              		.loc 1 535 32 view .LVU4780
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13783              		.loc 1 535 25 view .LVU4781
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13784              		.loc 1 536 13 view .LVU4782
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13785              		.loc 1 535 32 view .LVU4783
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13786              		.loc 1 535 25 view .LVU4784
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13787              		.loc 1 535 25 is_stmt 0 view .LVU4785
 13788              	.LBE668:
 13789              	.LBB669:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13790              		.loc 1 537 25 is_stmt 1 view .LVU4786
 538:sieve_extend.c ****     }
 13791              		.loc 1 538 13 view .LVU4787
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13792              		.loc 1 537 32 view .LVU4788
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13793              		.loc 1 537 25 view .LVU4789
 538:sieve_extend.c ****     }
 13794              		.loc 1 538 13 view .LVU4790
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13795              		.loc 1 537 32 view .LVU4791
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13796              		.loc 1 537 25 view .LVU4792
 538:sieve_extend.c ****     }
 13797              		.loc 1 538 13 view .LVU4793
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13798              		.loc 1 537 32 view .LVU4794
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13799              		.loc 1 537 25 view .LVU4795
 538:sieve_extend.c ****     }
 13800              		.loc 1 538 13 view .LVU4796
 13801              	.LBE669:
 13802              	.LBB670:
 13803              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13804              		.loc 1 536 25 is_stmt 0 view .LVU4797
 13805 49ea C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114
 13805      340655
 13806 49f1 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_11
GAS LISTING /tmp/ccRwwoRx.s 			page 369


 13806      74062055 
 13807              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13808              		.loc 1 536 34 view .LVU4798
 13809 49f9 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.626_114, offset: 0
 13809      06
 13810              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13811              		.loc 1 536 25 view .LVU4799
 13812 49fe C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_1
 13812      54064055 
 13813              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13814              		.loc 1 536 34 view .LVU4800
 13815 4a06 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.626_114, offset:
 13815      0620
 13816 4a0c 4183C108 		add	r9d, 8	# ivtmp.623,
 13817              	.LBE670:
 13818              	.LBB671:
 13819              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13820              		.loc 1 538 34 view .LVU4801
 13821 4a10 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.613, vect__102.612, _4
 13822 4a14 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.613, vect__102.612, _4
 13823              	.LBE671:
 13824              	.LBB672:
 13825              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13826              		.loc 1 536 34 view .LVU4802
 13827 4a18 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.617, tmp270, shift
 13828 4a1c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.617, tmp271, shift
 13829 4a20 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.626_114, offset
 13829      0640
 13830              	.LBE672:
 13831              	.LBB673:
 13832              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13833              		.loc 1 538 22 view .LVU4803
 13834 4a26 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.618, vect__57.613, vect__104.617
 13835              	.LBE673:
 13836              	.LBB674:
 13837              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13838              		.loc 1 536 34 view .LVU4804
 13839 4a2a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.626_114, offset
 13839      06800000 
 13839      00
 13840              	.LBE674:
 13841              	.LBB675:
 13842              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13843              		.loc 1 538 22 view .LVU4805
 13844 4a33 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.618, vect__57.613, vect__104.617
 13844      C8
 13845              	.LBE675:
 13846              	.LBB676:
 13847              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 370


 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13848              		.loc 1 536 25 view .LVU4806
 13849 4a38 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_1
 13849      7C066055 
 13850 4a40 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_1
 13850      BC068000 
 13850      000055
 13851              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13852              		.loc 1 536 34 view .LVU4807
 13853 4a4b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.626_114, offset:
 13853      0660
 13854              	.LBE676:
 13855              	.LBB677:
 13856              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13857              		.loc 1 538 34 view .LVU4808
 13858 4a51 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.613, vect__102.612, _4
 13859              	.LBE677:
 13860              	.LBB678:
 13861              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13862              		.loc 1 536 34 view .LVU4809
 13863 4a55 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.617, tmp272, shift
 13864              	.LBE678:
 13865              	.LBB679:
 13866              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13867              		.loc 1 538 34 view .LVU4810
 13868 4a59 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.613, vect__102.612, _4
 13869              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13870              		.loc 1 538 22 view .LVU4811
 13871 4a5d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect
 13871      07
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13872              		.loc 1 537 32 is_stmt 1 view .LVU4812
 13873              	.LVL852:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13874              		.loc 1 537 25 view .LVU4813
 13875              	.LBE679:
 533:sieve_extend.c ****     {
 13876              		.loc 1 533 24 view .LVU4814
 533:sieve_extend.c ****     {
 13877              		.loc 1 533 12 view .LVU4815
 13878              	.LBB680:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13879              		.loc 1 535 25 view .LVU4816
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13880              		.loc 1 536 13 view .LVU4817
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13881              		.loc 1 535 32 view .LVU4818
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13882              		.loc 1 535 25 view .LVU4819
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13883              		.loc 1 536 13 view .LVU4820
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 371


 13884              		.loc 1 535 32 view .LVU4821
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13885              		.loc 1 535 25 view .LVU4822
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13886              		.loc 1 536 13 view .LVU4823
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13887              		.loc 1 535 32 view .LVU4824
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13888              		.loc 1 535 25 view .LVU4825
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13889              		.loc 1 536 13 view .LVU4826
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13890              		.loc 1 535 32 view .LVU4827
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13891              		.loc 1 535 25 view .LVU4828
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13892              		.loc 1 535 25 is_stmt 0 view .LVU4829
 13893              	.LBE680:
 13894              	.LBB681:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13895              		.loc 1 537 25 is_stmt 1 view .LVU4830
 538:sieve_extend.c ****     }
 13896              		.loc 1 538 13 view .LVU4831
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13897              		.loc 1 537 32 view .LVU4832
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13898              		.loc 1 537 25 view .LVU4833
 538:sieve_extend.c ****     }
 13899              		.loc 1 538 13 view .LVU4834
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13900              		.loc 1 537 32 view .LVU4835
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13901              		.loc 1 537 25 view .LVU4836
 538:sieve_extend.c ****     }
 13902              		.loc 1 538 13 view .LVU4837
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13903              		.loc 1 537 32 view .LVU4838
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13904              		.loc 1 537 25 view .LVU4839
 538:sieve_extend.c ****     }
 13905              		.loc 1 538 13 view .LVU4840
 13906              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13907              		.loc 1 538 22 is_stmt 0 view .LVU4841
 13908 4a62 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.618, vect__57.613, vect__104.617
 13908      F5
 13909              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13910              		.loc 1 538 34 view .LVU4842
 13911 4a67 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.613, vect__102.612, _4
 13912              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13913              		.loc 1 538 22 view .LVU4843
 13914 4a6b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], ve
 13914      0720
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13915              		.loc 1 537 32 is_stmt 1 view .LVU4844
GAS LISTING /tmp/ccRwwoRx.s 			page 372


 13916              	.LVL853:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13917              		.loc 1 537 25 view .LVU4845
 13918              	.LBE681:
 533:sieve_extend.c ****     {
 13919              		.loc 1 533 24 view .LVU4846
 533:sieve_extend.c ****     {
 13920              		.loc 1 533 12 view .LVU4847
 13921              	.LBB682:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13922              		.loc 1 535 25 view .LVU4848
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13923              		.loc 1 536 13 view .LVU4849
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13924              		.loc 1 535 32 view .LVU4850
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13925              		.loc 1 535 25 view .LVU4851
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13926              		.loc 1 536 13 view .LVU4852
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13927              		.loc 1 535 32 view .LVU4853
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13928              		.loc 1 535 25 view .LVU4854
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13929              		.loc 1 536 13 view .LVU4855
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13930              		.loc 1 535 32 view .LVU4856
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13931              		.loc 1 535 25 view .LVU4857
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13932              		.loc 1 536 13 view .LVU4858
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13933              		.loc 1 535 32 view .LVU4859
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13934              		.loc 1 535 25 view .LVU4860
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13935              		.loc 1 535 25 is_stmt 0 view .LVU4861
 13936              	.LBE682:
 13937              	.LBB683:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13938              		.loc 1 537 25 is_stmt 1 view .LVU4862
 538:sieve_extend.c ****     }
 13939              		.loc 1 538 13 view .LVU4863
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13940              		.loc 1 537 32 view .LVU4864
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13941              		.loc 1 537 25 view .LVU4865
 538:sieve_extend.c ****     }
 13942              		.loc 1 538 13 view .LVU4866
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13943              		.loc 1 537 32 view .LVU4867
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13944              		.loc 1 537 25 view .LVU4868
 538:sieve_extend.c ****     }
 13945              		.loc 1 538 13 view .LVU4869
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13946              		.loc 1 537 32 view .LVU4870
GAS LISTING /tmp/ccRwwoRx.s 			page 373


 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13947              		.loc 1 537 25 view .LVU4871
 538:sieve_extend.c ****     }
 13948              		.loc 1 538 13 view .LVU4872
 13949              	.LBE683:
 13950              	.LBB684:
 13951              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13952              		.loc 1 536 25 is_stmt 0 view .LVU4873
 13953 4a71 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_
 13953      9C06A000 
 13953      000055
 13954              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13955              		.loc 1 536 34 view .LVU4874
 13956 4a7c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.617, tmp273, shift
 13957 4a80 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.617, tmp274, shift
 13958 4a84 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.626_114, offse
 13958      06A00000 
 13958      00
 13959              	.LBE684:
 13960              	.LBB685:
 13961              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13962              		.loc 1 538 22 view .LVU4875
 13963 4a8d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.618, vect__57.613, vect__104.617
 13964              	.LBE685:
 13965              	.LBB686:
 13966              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13967              		.loc 1 536 34 view .LVU4876
 13968 4a91 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.626_114, offset
 13968      06E00000 
 13968      00
 13969              	.LBE686:
 13970              	.LBB687:
 13971              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13972              		.loc 1 538 22 view .LVU4877
 13973 4a9a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.618, vect__57.613, vect__104.617
 13973      D1
 13974              	.LBE687:
 13975              	.LBB688:
 13976              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13977              		.loc 1 536 25 view .LVU4878
 13978 4a9f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_1
 13978      9406C000 
 13978      000055
 13979 4aaa C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_1
 13979      8406E000 
 13979      000055
 13980              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13981              		.loc 1 536 34 view .LVU4879
 13982 4ab5 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.626_114, offset
 13982      06C00000 
GAS LISTING /tmp/ccRwwoRx.s 			page 374


 13982      00
 13983              	.LBE688:
 13984              	.LBB689:
 13985              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 13986              		.loc 1 538 22 view .LVU4880
 13987 4abe C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], v
 13987      0740
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13988              		.loc 1 537 32 is_stmt 1 view .LVU4881
 13989              	.LVL854:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13990              		.loc 1 537 25 view .LVU4882
 13991              	.LBE689:
 533:sieve_extend.c ****     {
 13992              		.loc 1 533 24 view .LVU4883
 533:sieve_extend.c ****     {
 13993              		.loc 1 533 12 view .LVU4884
 13994              	.LBB690:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13995              		.loc 1 535 25 view .LVU4885
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13996              		.loc 1 536 13 view .LVU4886
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13997              		.loc 1 535 32 view .LVU4887
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13998              		.loc 1 535 25 view .LVU4888
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13999              		.loc 1 536 13 view .LVU4889
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14000              		.loc 1 535 32 view .LVU4890
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14001              		.loc 1 535 25 view .LVU4891
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14002              		.loc 1 536 13 view .LVU4892
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14003              		.loc 1 535 32 view .LVU4893
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14004              		.loc 1 535 25 view .LVU4894
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14005              		.loc 1 536 13 view .LVU4895
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14006              		.loc 1 535 32 view .LVU4896
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14007              		.loc 1 535 25 view .LVU4897
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14008              		.loc 1 535 25 is_stmt 0 view .LVU4898
 14009              	.LBE690:
 14010              	.LBB691:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14011              		.loc 1 537 25 is_stmt 1 view .LVU4899
 538:sieve_extend.c ****     }
 14012              		.loc 1 538 13 view .LVU4900
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14013              		.loc 1 537 32 view .LVU4901
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14014              		.loc 1 537 25 view .LVU4902
GAS LISTING /tmp/ccRwwoRx.s 			page 375


 538:sieve_extend.c ****     }
 14015              		.loc 1 538 13 view .LVU4903
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14016              		.loc 1 537 32 view .LVU4904
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14017              		.loc 1 537 25 view .LVU4905
 538:sieve_extend.c ****     }
 14018              		.loc 1 538 13 view .LVU4906
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14019              		.loc 1 537 32 view .LVU4907
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14020              		.loc 1 537 25 view .LVU4908
 538:sieve_extend.c ****     }
 14021              		.loc 1 538 13 view .LVU4909
 14022              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14023              		.loc 1 538 34 is_stmt 0 view .LVU4910
 14024 4ac4 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.613, vect__102.612, _4
 14025              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14026              		.loc 1 538 22 view .LVU4911
 14027 4ac8 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], ve
 14027      0760
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14028              		.loc 1 537 32 is_stmt 1 view .LVU4912
 14029              	.LVL855:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14030              		.loc 1 537 25 view .LVU4913
 14031              	.LBE691:
 533:sieve_extend.c ****     {
 14032              		.loc 1 533 24 view .LVU4914
 533:sieve_extend.c ****     {
 14033              		.loc 1 533 12 view .LVU4915
 14034              	.LBB692:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14035              		.loc 1 535 25 view .LVU4916
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14036              		.loc 1 536 13 view .LVU4917
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14037              		.loc 1 535 32 view .LVU4918
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14038              		.loc 1 535 25 view .LVU4919
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14039              		.loc 1 536 13 view .LVU4920
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14040              		.loc 1 535 32 view .LVU4921
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14041              		.loc 1 535 25 view .LVU4922
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14042              		.loc 1 536 13 view .LVU4923
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14043              		.loc 1 535 32 view .LVU4924
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14044              		.loc 1 535 25 view .LVU4925
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14045              		.loc 1 536 13 view .LVU4926
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 376


 14046              		.loc 1 535 32 view .LVU4927
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14047              		.loc 1 535 25 view .LVU4928
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14048              		.loc 1 535 25 is_stmt 0 view .LVU4929
 14049              	.LBE692:
 14050              	.LBB693:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14051              		.loc 1 537 25 is_stmt 1 view .LVU4930
 538:sieve_extend.c ****     }
 14052              		.loc 1 538 13 view .LVU4931
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14053              		.loc 1 537 32 view .LVU4932
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14054              		.loc 1 537 25 view .LVU4933
 538:sieve_extend.c ****     }
 14055              		.loc 1 538 13 view .LVU4934
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14056              		.loc 1 537 32 view .LVU4935
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14057              		.loc 1 537 25 view .LVU4936
 538:sieve_extend.c ****     }
 14058              		.loc 1 538 13 view .LVU4937
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14059              		.loc 1 537 32 view .LVU4938
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14060              		.loc 1 537 25 view .LVU4939
 538:sieve_extend.c ****     }
 14061              		.loc 1 538 13 view .LVU4940
 14062              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14063              		.loc 1 538 22 is_stmt 0 view .LVU4941
 14064 4ace C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], 
 14064      07800000 
 14064      00
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14065              		.loc 1 537 32 is_stmt 1 view .LVU4942
 14066              	.LVL856:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14067              		.loc 1 537 25 view .LVU4943
 14068              	.LBE693:
 533:sieve_extend.c ****     {
 14069              		.loc 1 533 24 view .LVU4944
 533:sieve_extend.c ****     {
 14070              		.loc 1 533 12 view .LVU4945
 14071              	.LBB694:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14072              		.loc 1 535 25 view .LVU4946
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14073              		.loc 1 536 13 view .LVU4947
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14074              		.loc 1 535 32 view .LVU4948
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14075              		.loc 1 535 25 view .LVU4949
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14076              		.loc 1 536 13 view .LVU4950
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccRwwoRx.s 			page 377


 14077              		.loc 1 535 32 view .LVU4951
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14078              		.loc 1 535 25 view .LVU4952
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14079              		.loc 1 536 13 view .LVU4953
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14080              		.loc 1 535 32 view .LVU4954
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14081              		.loc 1 535 25 view .LVU4955
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14082              		.loc 1 536 13 view .LVU4956
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14083              		.loc 1 535 32 view .LVU4957
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14084              		.loc 1 535 25 view .LVU4958
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14085              		.loc 1 535 25 is_stmt 0 view .LVU4959
 14086              	.LBE694:
 14087              	.LBB695:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14088              		.loc 1 537 25 is_stmt 1 view .LVU4960
 538:sieve_extend.c ****     }
 14089              		.loc 1 538 13 view .LVU4961
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14090              		.loc 1 537 32 view .LVU4962
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14091              		.loc 1 537 25 view .LVU4963
 538:sieve_extend.c ****     }
 14092              		.loc 1 538 13 view .LVU4964
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14093              		.loc 1 537 32 view .LVU4965
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14094              		.loc 1 537 25 view .LVU4966
 538:sieve_extend.c ****     }
 14095              		.loc 1 538 13 view .LVU4967
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14096              		.loc 1 537 32 view .LVU4968
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14097              		.loc 1 537 25 view .LVU4969
 538:sieve_extend.c ****     }
 14098              		.loc 1 538 13 view .LVU4970
 14099              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14100              		.loc 1 538 34 is_stmt 0 view .LVU4971
 14101 4ad7 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.613, vect__102.612, _4
 14102              	.LBE695:
 14103              	.LBB696:
 14104              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14105              		.loc 1 536 34 view .LVU4972
 14106 4adb C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.617, tmp275, shift
 14107              	.LBE696:
 14108              	.LBB697:
 14109              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14110              		.loc 1 538 34 view .LVU4973
 14111 4adf C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.613, vect__102.612, _4
GAS LISTING /tmp/ccRwwoRx.s 			page 378


 14112              	.LBE697:
 14113              	.LBB698:
 14114              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14115              		.loc 1 536 34 view .LVU4974
 14116 4ae3 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.617, tmp276, shift
 14117 4ae7 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.617, tmp277, shift
 14118              	.LBE698:
 14119              	.LBB699:
 14120              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14121              		.loc 1 538 22 view .LVU4975
 14122 4aeb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.618, vect__57.613, vect__104.617
 14122      FE
 14123 4af0 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.618, vect__57.613, vect__104.617
 14124 4af4 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], 
 14124      07A00000 
 14124      00
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14125              		.loc 1 537 32 is_stmt 1 view .LVU4976
 14126              	.LVL857:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14127              		.loc 1 537 25 view .LVU4977
 14128              	.LBE699:
 533:sieve_extend.c ****     {
 14129              		.loc 1 533 24 view .LVU4978
 533:sieve_extend.c ****     {
 14130              		.loc 1 533 12 view .LVU4979
 14131              	.LBB700:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14132              		.loc 1 535 25 view .LVU4980
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14133              		.loc 1 536 13 view .LVU4981
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14134              		.loc 1 535 32 view .LVU4982
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14135              		.loc 1 535 25 view .LVU4983
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14136              		.loc 1 536 13 view .LVU4984
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14137              		.loc 1 535 32 view .LVU4985
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14138              		.loc 1 535 25 view .LVU4986
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14139              		.loc 1 536 13 view .LVU4987
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14140              		.loc 1 535 32 view .LVU4988
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14141              		.loc 1 535 25 view .LVU4989
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14142              		.loc 1 536 13 view .LVU4990
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14143              		.loc 1 535 32 view .LVU4991
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14144              		.loc 1 535 25 view .LVU4992
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14145              		.loc 1 535 25 is_stmt 0 view .LVU4993
GAS LISTING /tmp/ccRwwoRx.s 			page 379


 14146              	.LBE700:
 14147              	.LBB701:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14148              		.loc 1 537 25 is_stmt 1 view .LVU4994
 538:sieve_extend.c ****     }
 14149              		.loc 1 538 13 view .LVU4995
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14150              		.loc 1 537 32 view .LVU4996
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14151              		.loc 1 537 25 view .LVU4997
 538:sieve_extend.c ****     }
 14152              		.loc 1 538 13 view .LVU4998
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14153              		.loc 1 537 32 view .LVU4999
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14154              		.loc 1 537 25 view .LVU5000
 538:sieve_extend.c ****     }
 14155              		.loc 1 538 13 view .LVU5001
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14156              		.loc 1 537 32 view .LVU5002
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14157              		.loc 1 537 25 view .LVU5003
 538:sieve_extend.c ****     }
 14158              		.loc 1 538 13 view .LVU5004
 14159              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14160              		.loc 1 538 22 is_stmt 0 view .LVU5005
 14161 4afd C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.618, vect__57.613, vect__104.617
 14161      DA
 14162 4b02 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], v
 14162      07C00000 
 14162      00
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14163              		.loc 1 537 32 is_stmt 1 view .LVU5006
 14164              	.LVL858:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14165              		.loc 1 537 25 view .LVU5007
 14166              	.LBE701:
 533:sieve_extend.c ****     {
 14167              		.loc 1 533 24 view .LVU5008
 533:sieve_extend.c ****     {
 14168              		.loc 1 533 12 view .LVU5009
 14169              	.LBB702:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14170              		.loc 1 535 25 view .LVU5010
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14171              		.loc 1 536 13 view .LVU5011
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14172              		.loc 1 535 32 view .LVU5012
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14173              		.loc 1 535 25 view .LVU5013
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14174              		.loc 1 536 13 view .LVU5014
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14175              		.loc 1 535 32 view .LVU5015
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14176              		.loc 1 535 25 view .LVU5016
GAS LISTING /tmp/ccRwwoRx.s 			page 380


 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14177              		.loc 1 536 13 view .LVU5017
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14178              		.loc 1 535 32 view .LVU5018
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14179              		.loc 1 535 25 view .LVU5019
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14180              		.loc 1 536 13 view .LVU5020
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14181              		.loc 1 535 32 view .LVU5021
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14182              		.loc 1 535 25 view .LVU5022
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14183              		.loc 1 535 25 is_stmt 0 view .LVU5023
 14184              	.LBE702:
 14185              	.LBB703:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14186              		.loc 1 537 25 is_stmt 1 view .LVU5024
 538:sieve_extend.c ****     }
 14187              		.loc 1 538 13 view .LVU5025
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14188              		.loc 1 537 32 view .LVU5026
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14189              		.loc 1 537 25 view .LVU5027
 538:sieve_extend.c ****     }
 14190              		.loc 1 538 13 view .LVU5028
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14191              		.loc 1 537 32 view .LVU5029
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14192              		.loc 1 537 25 view .LVU5030
 538:sieve_extend.c ****     }
 14193              		.loc 1 538 13 view .LVU5031
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14194              		.loc 1 537 32 view .LVU5032
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14195              		.loc 1 537 25 view .LVU5033
 538:sieve_extend.c ****     }
 14196              		.loc 1 538 13 view .LVU5034
 14197              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14198              		.loc 1 538 22 is_stmt 0 view .LVU5035
 14199 4b0b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], 
 14199      07E00000 
 14199      00
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14200              		.loc 1 537 32 is_stmt 1 view .LVU5036
 14201              	.LVL859:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14202              		.loc 1 537 25 view .LVU5037
 14203              	.LBE703:
 533:sieve_extend.c ****     {
 14204              		.loc 1 533 24 view .LVU5038
 533:sieve_extend.c ****     {
 14205              		.loc 1 533 12 view .LVU5039
 14206 4b14 48050001 		add	rax, 256	# ivtmp.626,
 14206      0000
 14207 4b1a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.623
GAS LISTING /tmp/ccRwwoRx.s 			page 381


 14208 4b1d 0F87C7FE 		ja	.L1119	#,
 14208      FFFF
 14209              	.L1159:
 14210 4b23 4589C3   		mov	r11d, r8d	# _25, _25
 14211 4b26 428D0495 		lea	eax, 0[0+r10*4]	# i,
 14211      00000000 
 14212 4b2e 4983C301 		add	r11, 1	# tmp140,
 14213 4b32 49C1E305 		sal	r11, 5	# _105,
 14214 4b36 4C01DF   		add	rdi, r11	# dst, _105
 14215 4b39 4C01DE   		add	rsi, r11	# src, _105
 14216 4b3c C5F877   		vzeroupper
 14217              	.LVL860:
 14218              	.L1120:
 540:sieve_extend.c ****     {
 14219              		.loc 1 540 12 view .LVU5040
 14220              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14221              		.loc 1 540 5 is_stmt 0 view .LVU5041
 14222 4b3f 39C2     		cmp	edx, eax	# size, i
 14223 4b41 0F8E9400 		jle	.L1163	#,
 14223      0000
 14224              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14225              		.loc 1 542 35 view .LVU5042
 14226 4b47 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 14227 4b4b 41B84000 		mov	r8d, 64	# tmp142,
 14227      0000
 14228              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14229              		.loc 1 542 23 view .LVU5043
 14230 4b51 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 14230      0E
 14231 4b56 4129C8   		sub	r8d, ecx	# _97, shift
 542:sieve_extend.c ****     }    
 14232              		.loc 1 542 9 is_stmt 1 view .LVU5044
 14233              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14234              		.loc 1 542 43 is_stmt 0 view .LVU5045
 14235 4b59 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 14235      DA
 14236              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14237              		.loc 1 542 32 view .LVU5046
 14238 4b5e 4D09D9   		or	r9, r11	# tmp146, tmp145
 14239 4b61 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 540:sieve_extend.c ****     {
 14240              		.loc 1 540 22 is_stmt 1 view .LVU5047
 14241              	.LVL861:
 540:sieve_extend.c ****     {
 14242              		.loc 1 540 12 view .LVU5048
 14243              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14244              		.loc 1 540 22 is_stmt 0 view .LVU5049
 14245 4b64 448D4801 		lea	r9d, 1[rax]	# i,
 14246              	.LVL862:
 14247              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
GAS LISTING /tmp/ccRwwoRx.s 			page 382


 14248              		.loc 1 540 5 view .LVU5050
 14249 4b68 4439CA   		cmp	edx, r9d	# size, i
 14250 4b6b 7E6D     		jle	.L1160	#,
 542:sieve_extend.c ****     }    
 14251              		.loc 1 542 9 is_stmt 1 view .LVU5051
 14252              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14253              		.loc 1 542 35 is_stmt 0 view .LVU5052
 14254 4b6d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 14255              	.LVL863:
 14256              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14257              		.loc 1 542 23 view .LVU5053
 14258 4b71 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 14258      D2
 14259              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14260              		.loc 1 542 43 view .LVU5054
 14261 4b76 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 14261      D9
 14262              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14263              		.loc 1 542 32 view .LVU5055
 14264 4b7b 4D09DA   		or	r10, r11	# tmp150, tmp149
 14265 4b7e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 540:sieve_extend.c ****     {
 14266              		.loc 1 540 22 is_stmt 1 view .LVU5056
 14267              	.LVL864:
 540:sieve_extend.c ****     {
 14268              		.loc 1 540 12 view .LVU5057
 14269              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14270              		.loc 1 540 22 is_stmt 0 view .LVU5058
 14271 4b82 448D5002 		lea	r10d, 2[rax]	# i,
 14272              	.LVL865:
 14273              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14274              		.loc 1 540 5 view .LVU5059
 14275 4b86 4439D2   		cmp	edx, r10d	# size, i
 14276 4b89 7E4F     		jle	.L1160	#,
 542:sieve_extend.c ****     }    
 14277              		.loc 1 542 9 is_stmt 1 view .LVU5060
 14278              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14279              		.loc 1 542 35 is_stmt 0 view .LVU5061
 14280 4b8b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 14281              	.LVL866:
 14282              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14283              		.loc 1 542 23 view .LVU5062
 14284 4b8f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 14284      C9
 14285              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14286              		.loc 1 542 43 view .LVU5063
 14287 4b94 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 14287      DA
GAS LISTING /tmp/ccRwwoRx.s 			page 383


 14288              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14289              		.loc 1 542 32 view .LVU5064
 14290 4b99 4D09D9   		or	r9, r11	# tmp154, tmp153
 14291 4b9c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 540:sieve_extend.c ****     {
 14292              		.loc 1 540 22 is_stmt 1 view .LVU5065
 14293              	.LVL867:
 540:sieve_extend.c ****     {
 14294              		.loc 1 540 12 view .LVU5066
 14295              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14296              		.loc 1 540 22 is_stmt 0 view .LVU5067
 14297 4ba0 448D4803 		lea	r9d, 3[rax]	# i,
 14298              	.LVL868:
 14299              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14300              		.loc 1 540 5 view .LVU5068
 14301 4ba4 4439CA   		cmp	edx, r9d	# size, i
 14302 4ba7 7E31     		jle	.L1160	#,
 542:sieve_extend.c ****     }    
 14303              		.loc 1 542 9 is_stmt 1 view .LVU5069
 14304              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14305              		.loc 1 542 35 is_stmt 0 view .LVU5070
 14306 4ba9 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 14307              	.LVL869:
 14308              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14309              		.loc 1 540 22 view .LVU5071
 14310 4bad 83C004   		add	eax, 4	# i,
 14311              	.LVL870:
 14312              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14313              		.loc 1 542 23 view .LVU5072
 14314 4bb0 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 14314      D2
 14315              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14316              		.loc 1 542 43 view .LVU5073
 14317 4bb5 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 14317      D9
 14318              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14319              		.loc 1 542 32 view .LVU5074
 14320 4bba 4D09DA   		or	r10, r11	# tmp158, tmp157
 14321              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14322              		.loc 1 540 5 view .LVU5075
 14323 4bbd 39C2     		cmp	edx, eax	# size, i
 14324              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14325              		.loc 1 542 32 view .LVU5076
 14326 4bbf 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 540:sieve_extend.c ****     {
 14327              		.loc 1 540 22 is_stmt 1 view .LVU5077
 14328              	.LVL871:
GAS LISTING /tmp/ccRwwoRx.s 			page 384


 540:sieve_extend.c ****     {
 14329              		.loc 1 540 12 view .LVU5078
 14330              	# sieve_extend.c:540:     for (; i < size; ++i,++src,++dst)
 540:sieve_extend.c ****     {
 14331              		.loc 1 540 5 is_stmt 0 view .LVU5079
 14332 4bc3 7E15     		jle	.L1160	#,
 542:sieve_extend.c ****     }    
 14333              		.loc 1 542 9 is_stmt 1 discriminator 2 view .LVU5080
 14334              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14335              		.loc 1 542 43 is_stmt 0 discriminator 2 view .LVU5081
 14336 4bc5 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 14337              	.LVL872:
 14338              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14339              		.loc 1 542 23 discriminator 2 view .LVU5082
 14340 4bc9 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 14340      C9
 14341              	.LVL873:
 14342              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14343              		.loc 1 542 43 discriminator 2 view .LVU5083
 14344 4bce C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 14344      F2
 14345              	.LVL874:
 14346              	# sieve_extend.c:542:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 542:sieve_extend.c ****     }    
 14347              		.loc 1 542 32 discriminator 2 view .LVU5084
 14348 4bd3 4809F1   		or	rcx, rsi	# tmp163, tmp160
 14349 4bd6 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 540:sieve_extend.c ****     {
 14350              		.loc 1 540 22 is_stmt 1 discriminator 2 view .LVU5085
 14351              	.LVL875:
 540:sieve_extend.c ****     {
 14352              		.loc 1 540 12 discriminator 2 view .LVU5086
 14353              	.L1160:
 14354              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 14355              		.loc 1 544 1 is_stmt 0 view .LVU5087
 14356 4bda C3       		ret	
 14357              	.LVL876:
 14358              	.L1163:
 544:sieve_extend.c **** 
 14359              		.loc 1 544 1 view .LVU5088
 14360 4bdb C3       		ret	
 14361              	.LVL877:
 14362              	.L1162:
 14363              	.LBB704:
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14364              		.loc 1 535 25 is_stmt 1 view .LVU5089
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14365              		.loc 1 536 13 view .LVU5090
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14366              		.loc 1 535 32 view .LVU5091
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14367              		.loc 1 535 25 view .LVU5092
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccRwwoRx.s 			page 385


 14368              		.loc 1 536 13 view .LVU5093
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14369              		.loc 1 535 32 view .LVU5094
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14370              		.loc 1 535 25 view .LVU5095
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14371              		.loc 1 536 13 view .LVU5096
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14372              		.loc 1 535 32 view .LVU5097
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14373              		.loc 1 535 25 view .LVU5098
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14374              		.loc 1 536 13 view .LVU5099
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14375              		.loc 1 535 32 view .LVU5100
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14376              		.loc 1 535 25 view .LVU5101
 535:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 14377              		.loc 1 535 25 is_stmt 0 view .LVU5102
 14378              	.LBE704:
 14379              	.LBB705:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14380              		.loc 1 537 25 is_stmt 1 view .LVU5103
 538:sieve_extend.c ****     }
 14381              		.loc 1 538 13 view .LVU5104
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14382              		.loc 1 537 32 view .LVU5105
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14383              		.loc 1 537 25 view .LVU5106
 538:sieve_extend.c ****     }
 14384              		.loc 1 538 13 view .LVU5107
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14385              		.loc 1 537 32 view .LVU5108
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14386              		.loc 1 537 25 view .LVU5109
 538:sieve_extend.c ****     }
 14387              		.loc 1 538 13 view .LVU5110
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14388              		.loc 1 537 32 view .LVU5111
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14389              		.loc 1 537 25 view .LVU5112
 538:sieve_extend.c ****     }
 14390              		.loc 1 538 13 view .LVU5113
 14391              	.LBE705:
 14392              	.LBB706:
 14393              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14394              		.loc 1 536 25 is_stmt 0 view .LVU5114
 14395 4bdc C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.612, MEM[base: src_35(D), index: ivtmp.626_114, o
 14395      7E2055
 14396 4be3 41B90200 		mov	r9d, 2	# ivtmp.623,
 14396      0000
 14397              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14398              		.loc 1 536 34 view .LVU5115
 14399 4be9 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.626_114, offset: 0B]
 14399      20
GAS LISTING /tmp/ccRwwoRx.s 			page 386


 14400 4bee B8400000 		mov	eax, 64	# ivtmp.626,
 14400      00
 14401              	.LBE706:
 14402              	.LBB707:
 14403              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14404              		.loc 1 538 34 view .LVU5116
 14405 4bf3 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.613, vect__102.612, _4
 14406              	.LBE707:
 14407              	.LBB708:
 14408              	# sieve_extend.c:536:             *(dst+j) = (*(src+j))<<shift;
 536:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 14409              		.loc 1 536 34 view .LVU5117
 14410 4bf7 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.617, tmp278, shift
 14411              	.LBE708:
 14412              	.LBB709:
 14413              	# sieve_extend.c:538:             *(dst+j) |= (*(src+1)>>(64-shift));
 538:sieve_extend.c ****     }
 14414              		.loc 1 538 22 view .LVU5118
 14415 4bfb C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.618, vect__57.613, vect__104.617
 14415      DA
 14416 4c00 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.626_114, offset: 0B], vect_
 14416      20
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14417              		.loc 1 537 32 is_stmt 1 view .LVU5119
 14418              	.LVL878:
 537:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 14419              		.loc 1 537 25 view .LVU5120
 14420              	.LBE709:
 533:sieve_extend.c ****     {
 14421              		.loc 1 533 24 view .LVU5121
 533:sieve_extend.c ****     {
 14422              		.loc 1 533 12 view .LVU5122
 14423 4c05 E9F6FCFF 		jmp	.L1151	#
 14423      FF
 14424              	.LVL879:
 14425              	.L1161:
 14426              	# sieve_extend.c:531:     int i = 0;
 531:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 14427              		.loc 1 531 9 is_stmt 0 view .LVU5123
 14428 4c0a 31C0     		xor	eax, eax	# i
 14429 4c0c E92EFFFF 		jmp	.L1120	#
 14429      FF
 14430              		.cfi_endproc
 14431              	.LFE70:
 14433              		.section	.rodata.str1.8,"aMS",@progbits,1
 14434              		.align 8
 14435              	.LC9:
 14436 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 14436      6C743A20 
 14436      53696576 
 14436      6573697A 
 14436      6520256A 
 14437 0055 000000   		.align 8
 14438              	.LC10:
 14439 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 14439      616C6964 
GAS LISTING /tmp/ccRwwoRx.s 			page 387


 14439      20726573 
 14439      756C742E 
 14439      20536965 
 14440              		.section	.rodata.str1.1
 14441              	.LC11:
 14442 0023 44656570 		.string	"DeepAnalyzing"
 14442      416E616C 
 14442      797A696E 
 14442      6700
 14443              		.section	.rodata.str1.8
 14444 00bb 00000000 		.align 8
 14444      00
 14445              	.LC12:
 14446 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 14446      65722025 
 14446      6A752028 
 14446      256A7529 
 14446      20776173 
 14447              		.align 8
 14448              	.LC13:
 14449 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 14449      65722025 
 14449      6A752028 
 14449      256A7529 
 14449      20776173 
 14450              		.text
 14451 4c11 66662E0F 		.p2align 4
 14451      1F840000 
 14451      0000000F 
 14451      1F4000
 14452              		.globl	validatePrimeCount
 14454              	validatePrimeCount:
 14455              	.LVL880:
 14456              	.LFB84:
 963:sieve_extend.c **** 
 14457              		.loc 1 963 72 is_stmt 1 view -0
 14458              		.cfi_startproc
 963:sieve_extend.c **** 
 14459              		.loc 1 963 72 is_stmt 0 view .LVU5125
 14460 4c20 F30F1EFA 		endbr64	
 965:sieve_extend.c ****     counter_t valid_primes = 0;
 14461              		.loc 1 965 5 is_stmt 1 view .LVU5126
 14462              	# sieve_extend.c:963: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 963:sieve_extend.c **** 
 14463              		.loc 1 963 72 is_stmt 0 view .LVU5127
 14464 4c24 4157     		push	r15	#
 14465              		.cfi_def_cfa_offset 16
 14466              		.cfi_offset 15, -16
 14467 4c26 4156     		push	r14	#
 14468              		.cfi_def_cfa_offset 24
 14469              		.cfi_offset 14, -24
 14470 4c28 4155     		push	r13	#
 14471              		.cfi_def_cfa_offset 32
 14472              		.cfi_offset 13, -32
 14473 4c2a 4154     		push	r12	#
 14474              		.cfi_def_cfa_offset 40
 14475              		.cfi_offset 12, -40
GAS LISTING /tmp/ccRwwoRx.s 			page 388


 14476 4c2c 55       		push	rbp	#
 14477              		.cfi_def_cfa_offset 48
 14478              		.cfi_offset 6, -48
 14479 4c2d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 14480 4c30 53       		push	rbx	#
 14481              		.cfi_def_cfa_offset 56
 14482              		.cfi_offset 3, -56
 14483 4c31 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 14484 4c33 488D6424 		lea	rsp, -56[rsp]	#,
 14484      C8
 14485              		.cfi_def_cfa_offset 112
 14486              	# sieve_extend.c:965:     counter_t primecount = count_primes(sieve);
 965:sieve_extend.c ****     counter_t valid_primes = 0;
 14487              		.loc 1 965 28 view .LVU5128
 14488 4c38 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 14489 4c3b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 14490              	.LVL881:
 14491              	.LBB731:
 14492              	.LBI731:
 934:sieve_extend.c ****     counter_t primeCount = 1;
 14493              		.loc 1 934 18 is_stmt 1 view .LVU5129
 14494              	.LBB732:
 14495              	.LBB733:
 936:sieve_extend.c ****     return primeCount;
 14496              		.loc 1 936 30 view .LVU5130
 14497 4c3f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 14498              	# sieve_extend.c:936:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 936:sieve_extend.c ****     return primeCount;
 14499              		.loc 1 936 5 is_stmt 0 view .LVU5131
 14500 4c43 4883FF01 		cmp	rdi, 1	# _25,
 14501 4c47 0F860B05 		jbe	.L1165	#,
 14501      0000
 14502              	# sieve_extend.c:936:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 936:sieve_extend.c ****     return primeCount;
 14503              		.loc 1 936 20 view .LVU5132
 14504 4c4d B8010000 		mov	eax, 1	# factor,
 14504      00
 14505              	.LBE733:
 14506              	# sieve_extend.c:935:     counter_t primeCount = 1;
 935:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 14507              		.loc 1 935 15 view .LVU5133
 14508 4c52 41B80100 		mov	r8d, 1	# primeCount,
 14508      0000
 14509              	.LVL882:
 14510 4c58 0F1F8400 		.p2align 4
 14510      00000000 
 14511              		.p2align 3
 14512              	.L1168:
 14513              	.LBB736:
 936:sieve_extend.c ****     return primeCount;
 14514              		.loc 1 936 106 is_stmt 1 view .LVU5134
 14515              	# sieve_extend.c:936:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 936:sieve_extend.c ****     return primeCount;
 14516              		.loc 1 936 116 is_stmt 0 view .LVU5135
 14517 4c60 4983C001 		add	r8, 1	# primeCount,
 14518              	.LVL883:
 936:sieve_extend.c ****     return primeCount;
GAS LISTING /tmp/ccRwwoRx.s 			page 389


 14519              		.loc 1 936 52 is_stmt 1 view .LVU5136
 14520              	# sieve_extend.c:936:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 936:sieve_extend.c ****     return primeCount;
 14521              		.loc 1 936 61 is_stmt 0 view .LVU5137
 14522 4c64 4883C001 		add	rax, 1	# factor,
 14523              	.LVL884:
 14524              	.L1312:
 14525              	.LBB734:
 14526              	.LBI734:
 117:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 14527              		.loc 1 117 25 is_stmt 1 view .LVU5138
 14528              	.LBB735:
 118:sieve_extend.c ****     return index;
 14529              		.loc 1 118 5 view .LVU5139
 118:sieve_extend.c ****     return index;
 14530              		.loc 1 118 11 view .LVU5140
 14531              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14532              		.loc 1 118 23 is_stmt 0 view .LVU5141
 14533 4c68 4889C1   		mov	rcx, rax	# tmp162, factor
 14534 4c6b 48C1E906 		shr	rcx, 6	# tmp162,
 14535              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14536              		.loc 1 118 12 view .LVU5142
 14537 4c6f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 14538              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14539              		.loc 1 118 11 view .LVU5143
 14540 4c73 490FA3C3 		bt	r11, rax	# *_106, factor
 14541 4c77 0F83A300 		jnc	.L1166	#,
 14541      0000
 118:sieve_extend.c ****     return index;
 14542              		.loc 1 118 60 is_stmt 1 view .LVU5144
 14543              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14544              		.loc 1 118 65 is_stmt 0 view .LVU5145
 14545 4c7d 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 14546              	.LVL885:
 14547              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14548              		.loc 1 118 23 view .LVU5146
 14549 4c81 4D89EE   		mov	r14, r13	# tmp167, factor
 14550              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14551              		.loc 1 118 65 view .LVU5147
 14552 4c84 4C89E8   		mov	rax, r13	# factor, tmp235
 118:sieve_extend.c ****     return index;
 14553              		.loc 1 118 11 is_stmt 1 view .LVU5148
 14554              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14555              		.loc 1 118 23 is_stmt 0 view .LVU5149
 14556 4c87 49C1EE06 		shr	r14, 6	# tmp167,
 14557              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14558              		.loc 1 118 12 view .LVU5150
 14559 4c8b 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
 14560              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccRwwoRx.s 			page 390


 118:sieve_extend.c ****     return index;
 14561              		.loc 1 118 11 view .LVU5151
 14562 4c8f 4D0FA3EF 		bt	r15, r13	# *_35, factor
 14563 4c93 0F838700 		jnc	.L1166	#,
 14563      0000
 118:sieve_extend.c ****     return index;
 14564              		.loc 1 118 60 is_stmt 1 view .LVU5152
 14565              	.LVL886:
 14566              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14567              		.loc 1 118 65 is_stmt 0 view .LVU5153
 14568 4c99 4883C001 		add	rax, 1	# factor,
 14569              	.LVL887:
 118:sieve_extend.c ****     return index;
 14570              		.loc 1 118 11 is_stmt 1 view .LVU5154
 14571              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14572              		.loc 1 118 23 is_stmt 0 view .LVU5155
 14573 4c9d 4989C4   		mov	r12, rax	# tmp279, factor
 14574 4ca0 49C1EC06 		shr	r12, 6	# tmp279,
 14575              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14576              		.loc 1 118 12 view .LVU5156
 14577 4ca4 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 14578              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14579              		.loc 1 118 11 view .LVU5157
 14580 4ca8 480FA3C6 		bt	rsi, rax	# *_35, factor
 14581 4cac 7372     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14582              		.loc 1 118 60 is_stmt 1 view .LVU5158
 14583              	.LVL888:
 14584              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14585              		.loc 1 118 65 is_stmt 0 view .LVU5159
 14586 4cae 498D4502 		lea	rax, 2[r13]	# factor,
 14587              	.LVL889:
 118:sieve_extend.c ****     return index;
 14588              		.loc 1 118 11 is_stmt 1 view .LVU5160
 14589              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14590              		.loc 1 118 23 is_stmt 0 view .LVU5161
 14591 4cb2 4989C2   		mov	r10, rax	# tmp283, factor
 14592 4cb5 49C1EA06 		shr	r10, 6	# tmp283,
 14593              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14594              		.loc 1 118 12 view .LVU5162
 14595 4cb9 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 14596              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14597              		.loc 1 118 11 view .LVU5163
 14598 4cbd 480FA3C1 		bt	rcx, rax	# *_35, factor
 14599 4cc1 735D     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14600              		.loc 1 118 60 is_stmt 1 view .LVU5164
 14601              	.LVL890:
 14602              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccRwwoRx.s 			page 391


 118:sieve_extend.c ****     return index;
 14603              		.loc 1 118 65 is_stmt 0 view .LVU5165
 14604 4cc3 498D4503 		lea	rax, 3[r13]	# factor,
 14605              	.LVL891:
 118:sieve_extend.c ****     return index;
 14606              		.loc 1 118 11 is_stmt 1 view .LVU5166
 14607              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14608              		.loc 1 118 23 is_stmt 0 view .LVU5167
 14609 4cc7 4989C3   		mov	r11, rax	# tmp287, factor
 14610 4cca 49C1EB06 		shr	r11, 6	# tmp287,
 14611              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14612              		.loc 1 118 12 view .LVU5168
 14613 4cce 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 14614              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14615              		.loc 1 118 11 view .LVU5169
 14616 4cd2 490FA3C6 		bt	r14, rax	# *_35, factor
 14617 4cd6 7348     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14618              		.loc 1 118 60 is_stmt 1 view .LVU5170
 14619              	.LVL892:
 14620              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14621              		.loc 1 118 65 is_stmt 0 view .LVU5171
 14622 4cd8 498D4504 		lea	rax, 4[r13]	# factor,
 14623              	.LVL893:
 118:sieve_extend.c ****     return index;
 14624              		.loc 1 118 11 is_stmt 1 view .LVU5172
 14625              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14626              		.loc 1 118 23 is_stmt 0 view .LVU5173
 14627 4cdc 4989C7   		mov	r15, rax	# tmp291, factor
 14628 4cdf 49C1EF06 		shr	r15, 6	# tmp291,
 14629              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14630              		.loc 1 118 12 view .LVU5174
 14631 4ce3 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 14632              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14633              		.loc 1 118 11 view .LVU5175
 14634 4ce7 490FA3C4 		bt	r12, rax	# *_35, factor
 14635 4ceb 7333     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14636              		.loc 1 118 60 is_stmt 1 view .LVU5176
 14637              	.LVL894:
 14638              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14639              		.loc 1 118 65 is_stmt 0 view .LVU5177
 14640 4ced 498D4505 		lea	rax, 5[r13]	# factor,
 14641              	.LVL895:
 118:sieve_extend.c ****     return index;
 14642              		.loc 1 118 11 is_stmt 1 view .LVU5178
 14643              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14644              		.loc 1 118 23 is_stmt 0 view .LVU5179
GAS LISTING /tmp/ccRwwoRx.s 			page 392


 14645 4cf1 4889C6   		mov	rsi, rax	# tmp295, factor
 14646 4cf4 48C1EE06 		shr	rsi, 6	# tmp295,
 14647              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14648              		.loc 1 118 12 view .LVU5180
 14649 4cf8 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 14650              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14651              		.loc 1 118 11 view .LVU5181
 14652 4cfc 490FA3C2 		bt	r10, rax	# *_35, factor
 14653 4d00 731E     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14654              		.loc 1 118 60 is_stmt 1 view .LVU5182
 14655              	.LVL896:
 14656              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14657              		.loc 1 118 65 is_stmt 0 view .LVU5183
 14658 4d02 498D4506 		lea	rax, 6[r13]	# factor,
 14659              	.LVL897:
 118:sieve_extend.c ****     return index;
 14660              		.loc 1 118 11 is_stmt 1 view .LVU5184
 14661              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14662              		.loc 1 118 23 is_stmt 0 view .LVU5185
 14663 4d06 4889C1   		mov	rcx, rax	# tmp299, factor
 14664 4d09 48C1E906 		shr	rcx, 6	# tmp299,
 14665              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14666              		.loc 1 118 12 view .LVU5186
 14667 4d0d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 14668              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14669              		.loc 1 118 11 view .LVU5187
 14670 4d11 490FA3C3 		bt	r11, rax	# *_35, factor
 14671 4d15 7309     		jnc	.L1166	#,
 118:sieve_extend.c ****     return index;
 14672              		.loc 1 118 60 is_stmt 1 view .LVU5188
 14673              	.LVL898:
 14674              	# sieve_extend.c:118:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 118:sieve_extend.c ****     return index;
 14675              		.loc 1 118 65 is_stmt 0 view .LVU5189
 14676 4d17 498D4507 		lea	rax, 7[r13]	# factor,
 14677              	.LVL899:
 118:sieve_extend.c ****     return index;
 14678              		.loc 1 118 11 is_stmt 1 view .LVU5190
 14679 4d1b E948FFFF 		jmp	.L1312	#
 14679      FF
 14680              		.p2align 4,,7
 14681              		.p2align 3
 14682              	.L1166:
 14683              	.LVL900:
 118:sieve_extend.c ****     return index;
 14684              		.loc 1 118 11 is_stmt 0 view .LVU5191
 14685              	.LBE735:
 14686              	.LBE734:
 936:sieve_extend.c ****     return primeCount;
 14687              		.loc 1 936 30 is_stmt 1 view .LVU5192
GAS LISTING /tmp/ccRwwoRx.s 			page 393


 14688              	# sieve_extend.c:936:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 936:sieve_extend.c ****     return primeCount;
 14689              		.loc 1 936 5 is_stmt 0 view .LVU5193
 14690 4d20 4839C7   		cmp	rdi, rax	# _25, factor
 14691 4d23 0F8737FF 		ja	.L1168	#,
 14691      FFFF
 936:sieve_extend.c ****     return primeCount;
 14692              		.loc 1 936 5 view .LVU5194
 14693              	.LBE736:
 937:sieve_extend.c **** }
 14694              		.loc 1 937 5 is_stmt 1 view .LVU5195
 14695              	.LVL901:
 937:sieve_extend.c **** }
 14696              		.loc 1 937 5 is_stmt 0 view .LVU5196
 14697              	.LBE732:
 14698              	.LBE731:
 966:sieve_extend.c ****     switch(sieve->size) {
 14699              		.loc 1 966 5 is_stmt 1 view .LVU5197
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14700              		.loc 1 967 5 view .LVU5198
 14701 4d29 83FB03   		cmp	ebx, 3	# option_verboselevel,
 14702 4d2c 0F9FC2   		setg	dl	#, tmp172
 14703 4d2f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 14703      860100
 14704 4d36 0F843406 		je	.L1169	#,
 14704      0000
 14705 4d3c 0F86D402 		jbe	.L1313	#,
 14705      0000
 14706 4d42 4981F900 		cmp	r9, 100000000	# pretmp_201,
 14706      E1F505
 14707 4d49 0F84E005 		je	.L1177	#,
 14707      0000
 14708 4d4f 90       		.p2align 4,,4
 14709 4d50 0F863A03 		jbe	.L1314	#,
 14709      0000
 14710 4d56 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 14710      CA9A3B
 14711 4d5d 0F85F105 		jne	.L1175	#,
 14711      0000
 14712 4d63 4981F82E 		cmp	r8, 50847534	# primeCount,
 14712      DF0703
 14713              	# sieve_extend.c:976:         case 1000000000:    valid_primes = 50847534; break;
 976:sieve_extend.c ****         default:            valid_primes= 0;
 14714              		.loc 1 976 42 is_stmt 0 view .LVU5199
 14715 4d6a B92EDF07 		mov	ecx, 50847534	# valid_primes,
 14715      03
 14716 4d6f 410F94C5 		sete	r13b	#, tmp189
 14717 4d73 4421EA   		and	edx, r13d	# _253, tmp189
 14718 4d76 4981F82E 		cmp	r8, 50847534	# primeCount,
 14718      DF0703
 14719 4d7d 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 14720 4d81 410F95C4 		setne	r12b	#, _135
 976:sieve_extend.c ****         default:            valid_primes= 0;
 14721              		.loc 1 976 29 is_stmt 1 view .LVU5200
 14722              	.LVL902:
 976:sieve_extend.c ****         default:            valid_primes= 0;
 14723              		.loc 1 976 54 view .LVU5201
GAS LISTING /tmp/ccRwwoRx.s 			page 394


 14724 4d85 66662E0F 		.p2align 4
 14724      1F840000 
 14724      000000
 14725              		.p2align 3
 14726              	.L1182:
 980:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 14727              		.loc 1 980 5 view .LVU5202
 981:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 14728              		.loc 1 981 5 view .LVU5203
 14729              	# sieve_extend.c:981:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 981:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 14730              		.loc 1 981 8 is_stmt 0 view .LVU5204
 14731 4d90 84D2     		test	dl, dl	# _253
 14732 4d92 0F841704 		je	.L1183	#,
 14732      0000
 981:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 14733              		.loc 1 981 45 is_stmt 1 discriminator 1 view .LVU5205
 14734              	.LVL903:
 14735              	.LBB738:
 14736              	.LBI738:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14737              		.loc 3 105 1 discriminator 1 view .LVU5206
 14738              	.LBB739:
 14739              		.loc 3 107 3 discriminator 1 view .LVU5207
 14740              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14741              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5208
 14742 4d98 4C89CA   		mov	rdx, r9	#, pretmp_201
 14743 4d9b 488D3500 		lea	rsi, .LC9[rip]	#,
 14743      000000
 14744 4da2 BF010000 		mov	edi, 1	#,
 14744      00
 14745 4da7 31C0     		xor	eax, eax	#
 14746 4da9 E8000000 		call	__printf_chk@PLT	#
 14746      00
 14747              	.LVL904:
 14748              		.loc 3 107 10 discriminator 1 view .LVU5209
 14749              	.LBE739:
 14750              	.LBE738:
 982:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14751              		.loc 1 982 5 is_stmt 1 discriminator 1 view .LVU5210
 14752              	.L1184:
 986:sieve_extend.c ****     return (valid);
 14753              		.loc 1 986 5 view .LVU5211
 14754              	# sieve_extend.c:986:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 986:sieve_extend.c ****     return (valid);
 14755              		.loc 1 986 8 is_stmt 0 view .LVU5212
 14756 4dae 83FB01   		cmp	ebx, 1	# option_verboselevel,
 14757 4db1 0F8E4C02 		jle	.L1164	#,
 14757      0000
 14758 4db7 4584E4   		test	r12b, r12b	# _135
 14759 4dba 0F844302 		je	.L1164	#,
 14759      0000
 14760              	.L1186:
 986:sieve_extend.c ****     return (valid);
 14761              		.loc 1 986 45 is_stmt 1 discriminator 1 view .LVU5213
 14762              	.LBB740:
 14763              	.LBI740:
GAS LISTING /tmp/ccRwwoRx.s 			page 395


 940:sieve_extend.c ****     printf("DeepAnalyzing\n");
 14764              		.loc 1 940 13 discriminator 1 view .LVU5214
 14765              	.LVL905:
 14766              	.LBB741:
 941:sieve_extend.c ****     counter_t warn_prime = 0;
 14767              		.loc 1 941 5 discriminator 1 view .LVU5215
 14768              	.LBB742:
 14769              	.LBI742:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14770              		.loc 3 105 1 discriminator 1 view .LVU5216
 14771              	.LBB743:
 14772              		.loc 3 107 3 discriminator 1 view .LVU5217
 14773              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14774              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5218
 14775 4dc0 488D3D00 		lea	rdi, .LC11[rip]	#,
 14775      000000
 14776 4dc7 E8000000 		call	puts@PLT	#
 14776      00
 14777              	.LVL906:
 14778              		.loc 3 107 10 discriminator 1 view .LVU5219
 14779              	.LBE743:
 14780              	.LBE742:
 942:sieve_extend.c ****     counter_t warn_nonprime = 0;
 14781              		.loc 1 942 5 is_stmt 1 discriminator 1 view .LVU5220
 943:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 14782              		.loc 1 943 5 discriminator 1 view .LVU5221
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14783              		.loc 1 944 5 discriminator 1 view .LVU5222
 14784              	.LBB744:
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14785              		.loc 1 944 10 discriminator 1 view .LVU5223
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14786              		.loc 1 944 31 discriminator 1 view .LVU5224
 14787              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14788              		.loc 1 944 44 is_stmt 0 discriminator 1 view .LVU5225
 14789 4dcc 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 14790              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14791              		.loc 1 944 5 discriminator 1 view .LVU5226
 14792 4dd0 4883FF01 		cmp	rdi, 1	# _137,
 14793 4dd4 0F862902 		jbe	.L1164	#,
 14793      0000
 14794              	.LBB745:
 14795              	.LBB746:
 14796              	.LBB747:
 14797              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14798              		.loc 3 107 10 view .LVU5227
 14799 4dda 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 14799      24
 14800              	.LBE747:
 14801              	.LBE746:
 14802              	.LBE745:
 14803              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14804              		.loc 1 944 5 view .LVU5228
 14805 4ddf 41BE0200 		mov	r14d, 2	# ivtmp.659,
GAS LISTING /tmp/ccRwwoRx.s 			page 396


 14805      0000
 14806 4de5 41BC0300 		mov	r12d, 3	# ivtmp.657,
 14806      0000
 14807              	.LBE744:
 14808              	# sieve_extend.c:942:     counter_t warn_prime = 0;
 942:sieve_extend.c ****     counter_t warn_nonprime = 0;
 14809              		.loc 1 942 15 view .LVU5229
 14810 4deb 4531C0   		xor	r8d, r8d	# warn_prime
 14811              	# sieve_extend.c:943:     counter_t warn_nonprime = 0;
 943:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 14812              		.loc 1 943 15 view .LVU5230
 14813 4dee 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 14813      18000000 
 14813      00
 14814              	.LBB766:
 14815              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 14816              		.loc 1 944 20 view .LVU5231
 14817 4df7 41BF0100 		mov	r15d, 1	# prime,
 14817      0000
 14818              	.LBB754:
 14819              	.LBB751:
 14820              	.LBB748:
 14821              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14822              		.loc 3 107 10 view .LVU5232
 14823 4dfd 4989ED   		mov	r13, rbp	# sieve, sieve
 14824              	.LVL907:
 14825              		.p2align 4
 14826              		.p2align 3
 14827              	.L1195:
 14828              		.loc 3 107 10 view .LVU5233
 14829              	.LBE748:
 14830              	.LBE751:
 14831              	.LBE754:
 945:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14832              		.loc 1 945 9 is_stmt 1 view .LVU5234
 14833              	# sieve_extend.c:945:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 945:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14834              		.loc 1 945 31 is_stmt 0 view .LVU5235
 14835 4e00 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 14836              	# sieve_extend.c:945:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 945:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14837              		.loc 1 945 32 view .LVU5236
 14838 4e04 4C89FB   		mov	rbx, r15	# tmp198, prime
 14839 4e07 48C1EB06 		shr	rbx, 6	# tmp198,
 14840              	# sieve_extend.c:945:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 945:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14841              		.loc 1 945 73 view .LVU5237
 14842 4e0b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 14842      00
 14843 4e10 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 14843      C9
 14844              	# sieve_extend.c:945:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 945:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14845              		.loc 1 945 12 view .LVU5238
 14846 4e15 83E101   		and	ecx, 1	# c,
 14847 4e18 0F84BA02 		je	.L1187	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 397


 14847      0000
 14848              	.LVL908:
 14849              	.LBB755:
 14850              	.LBB756:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14851              		.loc 1 954 32 is_stmt 1 view .LVU5239
 14852              	.LBE756:
 14853              	# sieve_extend.c:953:             counter_t c_prime = 0;
 953:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 14854              		.loc 1 953 23 is_stmt 0 view .LVU5240
 14855 4e1e 31ED     		xor	ebp, ebp	# c_prime
 14856              	.LBB757:
 14857              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14858              		.loc 1 954 13 view .LVU5241
 14859 4e20 4885FF   		test	rdi, rdi	# _137
 14860 4e23 BE030000 		mov	esi, 3	# ivtmp.649,
 14860      00
 14861 4e28 0F84E003 		je	.L1302	#,
 14861      0000
 14862 4e2e 4989FB   		mov	r11, rdi	# tmp231, _137
 14863 4e31 4929CB   		sub	r11, rcx	# tmp231, c
 14864 4e34 4183E303 		and	r11d, 3	# tmp231,
 14865 4e38 4D89DA   		mov	r10, r11	# tmp232, tmp231
 14866 4e3b 0F84BF00 		je	.L1188	#,
 14866      0000
 14867              	.LVL909:
 955:sieve_extend.c ****             }
 14868              		.loc 1 955 17 is_stmt 1 view .LVU5242
 14869              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14870              		.loc 1 955 48 is_stmt 0 view .LVU5243
 14871 4e41 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 14872 4e45 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.659
 14873 4e48 7411     		je	.L1242	#,
 14874              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14875              		.loc 1 955 33 view .LVU5244
 14876 4e4a 31D2     		xor	edx, edx	# tmp241
 14877 4e4c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.657
 14878 4e4f 48F7F6   		div	rsi	# ivtmp.649
 14879              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14880              		.loc 1 955 82 view .LVU5245
 14881 4e52 31ED     		xor	ebp, ebp	# c_prime
 955:sieve_extend.c ****             }
 14882              		.loc 1 955 82 view .LVU5246
 14883 4e54 4885D2   		test	rdx, rdx	# tmp241
 14884 4e57 400F94C5 		sete	bpl	#, c_prime
 14885              	.LVL910:
 14886              	.L1242:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14887              		.loc 1 954 68 is_stmt 1 view .LVU5247
 14888              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14889              		.loc 1 954 69 is_stmt 0 view .LVU5248
 14890 4e5b 4883C101 		add	rcx, 1	# c,
GAS LISTING /tmp/ccRwwoRx.s 			page 398


 14891              	.LVL911:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14892              		.loc 1 954 32 is_stmt 1 view .LVU5249
 14893              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14894              		.loc 1 954 13 is_stmt 0 view .LVU5250
 14895 4e5f 4839F9   		cmp	rcx, rdi	# c, _137
 14896 4e62 0F877801 		ja	.L1194	#,
 14896      0000
 14897              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14898              		.loc 1 954 51 view .LVU5251
 14899 4e68 4989C9   		mov	r9, rcx	# tmp244, c
 14900 4e6b BE050000 		mov	esi, 5	# ivtmp.649,
 14900      00
 14901 4e70 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 14902              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14903              		.loc 1 954 47 view .LVU5252
 14904 4e74 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.657
 14905 4e77 0F876301 		ja	.L1194	#,
 14905      0000
 14906 4e7d 4983FA01 		cmp	r10, 1	# tmp232,
 14907 4e81 747D     		je	.L1188	#,
 14908 4e83 4983FA02 		cmp	r10, 2	# tmp232,
 14909 4e87 7438     		je	.L1273	#,
 955:sieve_extend.c ****             }
 14910              		.loc 1 955 17 is_stmt 1 view .LVU5253
 14911              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14912              		.loc 1 955 48 is_stmt 0 view .LVU5254
 14913 4e89 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 14914 4e8d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.659
 14915 4e90 7417     		je	.L1244	#,
 14916              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14917              		.loc 1 955 33 view .LVU5255
 14918 4e92 31D2     		xor	edx, edx	# tmp247
 14919 4e94 4C89E0   		mov	rax, r12	# tmp248, ivtmp.657
 14920 4e97 48F7F6   		div	rsi	# ivtmp.649
 14921              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14922              		.loc 1 955 20 view .LVU5256
 14923 4e9a 4885D2   		test	rdx, rdx	# tmp247
 14924 4e9d 410F94C3 		sete	r11b	#, tmp249
 14925              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14926              		.loc 1 955 82 view .LVU5257
 14927 4ea1 4180FB01 		cmp	r11b, 1	# tmp249,
 14928 4ea5 4883DDFF 		sbb	rbp, -1	# c_prime,
 14929              	.LVL912:
 14930              	.L1244:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14931              		.loc 1 954 68 is_stmt 1 view .LVU5258
 14932              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14933              		.loc 1 954 69 is_stmt 0 view .LVU5259
GAS LISTING /tmp/ccRwwoRx.s 			page 399


 14934 4ea9 4883C101 		add	rcx, 1	# c,
 14935              	.LVL913:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14936              		.loc 1 954 32 is_stmt 1 view .LVU5260
 14937 4ead 4883C602 		add	rsi, 2	# ivtmp.649,
 14938              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14939              		.loc 1 954 51 is_stmt 0 view .LVU5261
 14940 4eb1 4989CA   		mov	r10, rcx	# tmp250, c
 14941 4eb4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 14942              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14943              		.loc 1 954 47 view .LVU5262
 14944 4eb8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.657
 14945 4ebb 0F871F01 		ja	.L1194	#,
 14945      0000
 14946              	.L1273:
 955:sieve_extend.c ****             }
 14947              		.loc 1 955 17 is_stmt 1 view .LVU5263
 14948              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14949              		.loc 1 955 48 is_stmt 0 view .LVU5264
 14950 4ec1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 14951 4ec5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.659
 14952 4ec8 7415     		je	.L1247	#,
 14953              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14954              		.loc 1 955 33 view .LVU5265
 14955 4eca 31D2     		xor	edx, edx	# tmp253
 14956 4ecc 4C89E0   		mov	rax, r12	# tmp254, ivtmp.657
 14957 4ecf 48F7F6   		div	rsi	# ivtmp.649
 14958              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14959              		.loc 1 955 20 view .LVU5266
 14960 4ed2 4885D2   		test	rdx, rdx	# tmp253
 14961 4ed5 0F94C3   		sete	bl	#, tmp255
 14962              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14963              		.loc 1 955 82 view .LVU5267
 14964 4ed8 80FB01   		cmp	bl, 1	# tmp255,
 14965 4edb 4883DDFF 		sbb	rbp, -1	# c_prime,
 14966              	.LVL914:
 14967              	.L1247:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14968              		.loc 1 954 68 is_stmt 1 view .LVU5268
 14969              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14970              		.loc 1 954 69 is_stmt 0 view .LVU5269
 14971 4edf 4883C101 		add	rcx, 1	# c,
 14972              	.LVL915:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14973              		.loc 1 954 32 is_stmt 1 view .LVU5270
 14974 4ee3 4883C602 		add	rsi, 2	# ivtmp.649,
 14975              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14976              		.loc 1 954 51 is_stmt 0 view .LVU5271
 14977 4ee7 4989CB   		mov	r11, rcx	# tmp256, c
GAS LISTING /tmp/ccRwwoRx.s 			page 400


 14978 4eea 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 14979              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 14980              		.loc 1 954 47 view .LVU5272
 14981 4eee 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.657
 14982 4ef1 0F87E900 		ja	.L1194	#,
 14982      0000
 14983              	.LVL916:
 14984 4ef7 660F1F84 		.p2align 4
 14984      00000000 
 14984      00
 14985              		.p2align 3
 14986              	.L1188:
 955:sieve_extend.c ****             }
 14987              		.loc 1 955 17 is_stmt 1 view .LVU5273
 14988              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14989              		.loc 1 955 48 is_stmt 0 view .LVU5274
 14990 4f00 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 14991 4f04 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.659
 14992 4f07 7417     		je	.L1193	#,
 14993              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14994              		.loc 1 955 33 view .LVU5275
 14995 4f09 31D2     		xor	edx, edx	# tmp214
 14996 4f0b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.657
 14997 4f0e 48F7F6   		div	rsi	# ivtmp.649
 14998              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 14999              		.loc 1 955 20 view .LVU5276
 15000 4f11 4885D2   		test	rdx, rdx	# tmp214
 15001 4f14 410F94C1 		sete	r9b	#, tmp217
 15002              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15003              		.loc 1 955 82 view .LVU5277
 15004 4f18 4180F901 		cmp	r9b, 1	# tmp217,
 15005 4f1c 4883DDFF 		sbb	rbp, -1	# c_prime,
 15006              	.LVL917:
 15007              	.L1193:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15008              		.loc 1 954 68 is_stmt 1 view .LVU5278
 15009              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15010              		.loc 1 954 69 is_stmt 0 view .LVU5279
 15011 4f20 4883C101 		add	rcx, 1	# tmp234,
 15012              	.LVL918:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15013              		.loc 1 954 32 is_stmt 1 view .LVU5280
 15014              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15015              		.loc 1 954 13 is_stmt 0 view .LVU5281
 15016 4f24 4839F9   		cmp	rcx, rdi	# tmp234, _137
 15017 4f27 0F87B300 		ja	.L1194	#,
 15017      0000
 15018              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15019              		.loc 1 954 51 view .LVU5282
GAS LISTING /tmp/ccRwwoRx.s 			page 401


 15020 4f2d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 15021 4f30 4883C602 		add	rsi, 2	# tmp233,
 15022 4f34 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 15023              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15024              		.loc 1 954 47 view .LVU5283
 15025 4f38 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.657
 15026 4f3b 0F879F00 		ja	.L1194	#,
 15026      0000
 955:sieve_extend.c ****             }
 15027              		.loc 1 955 17 is_stmt 1 view .LVU5284
 15028              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15029              		.loc 1 955 48 is_stmt 0 view .LVU5285
 15030 4f41 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 15031 4f45 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.659
 15032 4f48 7417     		je	.L1251	#,
 15033              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15034              		.loc 1 955 33 view .LVU5286
 15035 4f4a 31D2     		xor	edx, edx	# tmp259
 15036 4f4c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.657
 15037 4f4f 48F7F6   		div	rsi	# tmp233
 15038              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15039              		.loc 1 955 20 view .LVU5287
 15040 4f52 4885D2   		test	rdx, rdx	# tmp259
 15041 4f55 410F94C2 		sete	r10b	#, tmp261
 15042              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15043              		.loc 1 955 82 view .LVU5288
 15044 4f59 4180FA01 		cmp	r10b, 1	# tmp261,
 15045 4f5d 4883DDFF 		sbb	rbp, -1	# c_prime,
 15046              	.LVL919:
 15047              	.L1251:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15048              		.loc 1 954 68 is_stmt 1 view .LVU5289
 15049              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15050              		.loc 1 954 69 is_stmt 0 view .LVU5290
 15051 4f61 4C8D4901 		lea	r9, 1[rcx]	# c,
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15052              		.loc 1 954 32 is_stmt 1 view .LVU5291
 15053 4f65 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.649,
 15054              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15055              		.loc 1 954 51 is_stmt 0 view .LVU5292
 15056 4f69 4D89CB   		mov	r11, r9	# tmp264, c
 15057 4f6c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 15058              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15059              		.loc 1 954 47 view .LVU5293
 15060 4f70 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.657
 15061 4f73 776B     		ja	.L1194	#,
 955:sieve_extend.c ****             }
 15062              		.loc 1 955 17 is_stmt 1 view .LVU5294
 15063              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/ccRwwoRx.s 			page 402


 955:sieve_extend.c ****             }
 15064              		.loc 1 955 48 is_stmt 0 view .LVU5295
 15065 4f75 4D01C9   		add	r9, r9	# tmp265
 15066 4f78 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.659
 15067 4f7b 7417     		je	.L1253	#,
 15068              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15069              		.loc 1 955 33 view .LVU5296
 15070 4f7d 31D2     		xor	edx, edx	# tmp267
 15071 4f7f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.657
 15072 4f82 48F7F3   		div	rbx	# ivtmp.649
 15073              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15074              		.loc 1 955 20 view .LVU5297
 15075 4f85 4885D2   		test	rdx, rdx	# tmp267
 15076 4f88 410F94C2 		sete	r10b	#, tmp269
 15077              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15078              		.loc 1 955 82 view .LVU5298
 15079 4f8c 4180FA01 		cmp	r10b, 1	# tmp269,
 15080 4f90 4883DDFF 		sbb	rbp, -1	# c_prime,
 15081              	.LVL920:
 15082              	.L1253:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15083              		.loc 1 954 68 is_stmt 1 view .LVU5299
 15084              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15085              		.loc 1 954 69 is_stmt 0 view .LVU5300
 15086 4f94 4C8D4902 		lea	r9, 2[rcx]	# c,
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15087              		.loc 1 954 32 is_stmt 1 view .LVU5301
 15088 4f98 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.649,
 15089              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15090              		.loc 1 954 51 is_stmt 0 view .LVU5302
 15091 4f9c 4D89CB   		mov	r11, r9	# tmp272, c
 15092 4f9f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 15093              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15094              		.loc 1 954 47 view .LVU5303
 15095 4fa3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.657
 15096 4fa6 7738     		ja	.L1194	#,
 955:sieve_extend.c ****             }
 15097              		.loc 1 955 17 is_stmt 1 view .LVU5304
 15098              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15099              		.loc 1 955 48 is_stmt 0 view .LVU5305
 15100 4fa8 4D01C9   		add	r9, r9	# tmp273
 15101 4fab 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.659
 15102 4fae 7417     		je	.L1255	#,
 15103              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15104              		.loc 1 955 33 view .LVU5306
 15105 4fb0 31D2     		xor	edx, edx	# tmp275
 15106 4fb2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.657
 15107 4fb5 48F7F3   		div	rbx	# ivtmp.649
 15108              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/ccRwwoRx.s 			page 403


 955:sieve_extend.c ****             }
 15109              		.loc 1 955 20 view .LVU5307
 15110 4fb8 4885D2   		test	rdx, rdx	# tmp275
 15111 4fbb 410F94C2 		sete	r10b	#, tmp277
 15112              	# sieve_extend.c:955:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 955:sieve_extend.c ****             }
 15113              		.loc 1 955 82 view .LVU5308
 15114 4fbf 4180FA01 		cmp	r10b, 1	# tmp277,
 15115 4fc3 4883DDFF 		sbb	rbp, -1	# c_prime,
 15116              	.LVL921:
 15117              	.L1255:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15118              		.loc 1 954 68 is_stmt 1 view .LVU5309
 15119              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15120              		.loc 1 954 69 is_stmt 0 view .LVU5310
 15121 4fc7 4883C103 		add	rcx, 3	# c,
 15122              	.LVL922:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15123              		.loc 1 954 32 is_stmt 1 view .LVU5311
 15124 4fcb 4883C606 		add	rsi, 6	# ivtmp.649,
 15125              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15126              		.loc 1 954 51 is_stmt 0 view .LVU5312
 15127 4fcf 4989C9   		mov	r9, rcx	# tmp278, c
 15128 4fd2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 15129              	# sieve_extend.c:954:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15130              		.loc 1 954 47 view .LVU5313
 15131 4fd6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.657
 15132 4fd9 0F8621FF 		jbe	.L1188	#,
 15132      FFFF
 15133              	.LVL923:
 15134 4fdf 90       		.p2align 4
 15135              		.p2align 3
 15136              	.L1194:
 954:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 15137              		.loc 1 954 47 view .LVU5314
 15138              	.LBE757:
 957:sieve_extend.c ****         }
 15139              		.loc 1 957 13 is_stmt 1 view .LVU5315
 15140              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15141              		.loc 1 957 16 is_stmt 0 view .LVU5316
 15142 4fe0 4885ED   		test	rbp, rbp	# c_prime
 15143 4fe3 0F840C02 		je	.L1315	#,
 15143      0000
 15144              	.LVL924:
 15145              	.L1191:
 957:sieve_extend.c ****         }
 15146              		.loc 1 957 16 view .LVU5317
 15147              	.LBE755:
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15148              		.loc 1 944 52 is_stmt 1 view .LVU5318
 15149              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15150              		.loc 1 944 57 is_stmt 0 view .LVU5319
GAS LISTING /tmp/ccRwwoRx.s 			page 404


 15151 4fe9 4983C701 		add	r15, 1	# prime,
 15152              	.LVL925:
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15153              		.loc 1 944 31 is_stmt 1 view .LVU5320
 15154 4fed 4983C402 		add	r12, 2	# ivtmp.657,
 15155 4ff1 4983C602 		add	r14, 2	# ivtmp.659,
 15156              	# sieve_extend.c:944:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15157              		.loc 1 944 5 is_stmt 0 view .LVU5321
 15158 4ff5 4939FF   		cmp	r15, rdi	# prime, _137
 15159 4ff8 0F8202FE 		jb	.L1195	#,
 15159      FFFF
 15160              	.LVL926:
 15161              	.L1304:
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15162              		.loc 1 944 5 view .LVU5322
 15163 4ffe 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 15163      24
 15164              	.LVL927:
 15165              	.L1164:
 944:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 15166              		.loc 1 944 5 view .LVU5323
 15167              	.LBE766:
 15168              	.LBE741:
 15169              	.LBE740:
 15170              	# sieve_extend.c:988: }
 988:sieve_extend.c **** 
 15171              		.loc 1 988 1 view .LVU5324
 15172 5003 488D6424 		lea	rsp, 56[rsp]	#,
 15172      38
 15173              		.cfi_remember_state
 15174              		.cfi_def_cfa_offset 56
 15175 5008 4489E8   		mov	eax, r13d	#, <retval>
 15176 500b 5B       		pop	rbx	#
 15177              		.cfi_def_cfa_offset 48
 15178 500c 5D       		pop	rbp	#
 15179              		.cfi_def_cfa_offset 40
 15180 500d 415C     		pop	r12	#
 15181              		.cfi_def_cfa_offset 32
 15182 500f 415D     		pop	r13	#
 15183              		.cfi_def_cfa_offset 24
 15184 5011 415E     		pop	r14	#
 15185              		.cfi_def_cfa_offset 16
 15186 5013 415F     		pop	r15	#
 15187              		.cfi_def_cfa_offset 8
 15188 5015 C3       		ret	
 15189              	.LVL928:
 15190              	.L1313:
 15191              		.cfi_restore_state
 15192              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15193              		.loc 1 967 5 view .LVU5325
 15194 5016 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 15194      030000
 15195 501d 0F84E502 		je	.L1171	#,
 15195      0000
 15196 5023 7633     		jbe	.L1316	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 405


 15197 5025 4981F910 		cmp	r9, 10000	# pretmp_201,
 15197      270000
 15198 502c 0F852203 		jne	.L1175	#,
 15198      0000
 15199 5032 4981F8CD 		cmp	r8, 1229	# primeCount,
 15199      040000
 15200              	# sieve_extend.c:971:         case 10000:         valid_primes = 1229;     break;
 971:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 15201              		.loc 1 971 42 view .LVU5326
 15202 5039 B9CD0400 		mov	ecx, 1229	# valid_primes,
 15202      00
 15203 503e 400F94C6 		sete	sil	#, tmp179
 15204 5042 21F2     		and	edx, esi	# _253, tmp179
 15205 5044 4981F8CD 		cmp	r8, 1229	# primeCount,
 15205      040000
 15206 504b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 15207 504f 410F95C4 		setne	r12b	#, _135
 971:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 15208              		.loc 1 971 29 is_stmt 1 view .LVU5327
 15209              	.LVL929:
 971:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 15210              		.loc 1 971 54 view .LVU5328
 15211              	# sieve_extend.c:971:         case 10000:         valid_primes = 1229;     break;
 971:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 15212              		.loc 1 971 9 is_stmt 0 view .LVU5329
 15213 5053 E938FDFF 		jmp	.L1182	#
 15213      FF
 15214              	.LVL930:
 15215              	.L1316:
 15216              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15217              		.loc 1 967 5 view .LVU5330
 15218 5058 4983F90A 		cmp	r9, 10	# pretmp_201,
 15219 505c 0F841902 		je	.L1173	#,
 15219      0000
 15220 5062 4983F964 		cmp	r9, 100	# pretmp_201,
 15221 5066 0F85E802 		jne	.L1175	#,
 15221      0000
 15222 506c 4983F819 		cmp	r8, 25	# primeCount,
 15223 5070 0F94C1   		sete	cl	#, tmp173
 15224 5073 21CA     		and	edx, ecx	# _253, tmp173
 15225 5075 4983F819 		cmp	r8, 25	# primeCount,
 15226 5079 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 15227 507d 410F95C4 		setne	r12b	#, _135
 15228              	# sieve_extend.c:969:         case 100:           valid_primes = 25;       break;
 969:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 15229              		.loc 1 969 42 view .LVU5331
 15230 5081 B9190000 		mov	ecx, 25	# valid_primes,
 15230      00
 15231 5086 E905FDFF 		jmp	.L1182	#
 15231      FF
 15232 508b 0F1F4400 		.p2align 4,,7
 15232      00
 15233              		.p2align 3
 15234              	.L1314:
 15235              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
GAS LISTING /tmp/ccRwwoRx.s 			page 406


 15236              		.loc 1 967 5 view .LVU5332
 15237 5090 4981F940 		cmp	r9, 1000000	# pretmp_201,
 15237      420F00
 15238 5097 0F84B701 		je	.L1179	#,
 15238      0000
 15239 509d 4981F980 		cmp	r9, 10000000	# pretmp_201,
 15239      969800
 15240 50a4 0F85AA02 		jne	.L1175	#,
 15240      0000
 15241 50aa 4981F803 		cmp	r8, 664579	# primeCount,
 15241      240A00
 15242              	# sieve_extend.c:974:         case 10000000:      valid_primes = 664579;   break;
 974:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 15243              		.loc 1 974 42 view .LVU5333
 15244 50b1 B903240A 		mov	ecx, 664579	# valid_primes,
 15244      00
 15245 50b6 410F94C7 		sete	r15b	#, tmp185
 15246 50ba 4421FA   		and	edx, r15d	# _253, tmp185
 15247 50bd 4981F803 		cmp	r8, 664579	# primeCount,
 15247      240A00
 15248 50c4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 15249 50c8 410F95C4 		setne	r12b	#, _135
 974:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 15250              		.loc 1 974 29 is_stmt 1 view .LVU5334
 15251              	.LVL931:
 974:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 15252              		.loc 1 974 54 view .LVU5335
 15253              	# sieve_extend.c:974:         case 10000000:      valid_primes = 664579;   break;
 974:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 15254              		.loc 1 974 9 is_stmt 0 view .LVU5336
 15255 50cc E9BFFCFF 		jmp	.L1182	#
 15255      FF
 15256              	.LVL932:
 15257              		.p2align 4,,7
 15258 50d1 0F1F8000 		.p2align 3
 15258      000000
 15259              	.L1187:
 15260              	.LBB771:
 15261              	.LBB769:
 15262              	.LBB767:
 15263              	.LBB764:
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15264              		.loc 1 946 32 is_stmt 1 view .LVU5337
 15265              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15266              		.loc 1 946 13 is_stmt 0 view .LVU5338
 15267 50d8 4885FF   		test	rdi, rdi	# _137
 15268 50db 0F841DFF 		je	.L1304	#,
 15268      FFFF
 15269              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15270              		.loc 1 946 27 view .LVU5339
 15271 50e1 BB010000 		mov	ebx, 1	# c,
 15271      00
 15272 50e6 EB20     		jmp	.L1192	#
 15273              	.LVL933:
 15274              		.p2align 4,,7
GAS LISTING /tmp/ccRwwoRx.s 			page 407


 15275              		.p2align 3
 15276              	.L1201:
 15277              	# sieve_extend.c:948:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 948:sieve_extend.c ****                 }
 15278              		.loc 1 948 35 view .LVU5340
 15279 50e8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 15280              	.LVL934:
 15281              	.L1190:
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15282              		.loc 1 946 68 is_stmt 1 view .LVU5341
 15283              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15284              		.loc 1 946 69 is_stmt 0 view .LVU5342
 15285 50eb 4883C301 		add	rbx, 1	# c,
 15286              	.LVL935:
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15287              		.loc 1 946 32 is_stmt 1 view .LVU5343
 15288              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15289              		.loc 1 946 13 is_stmt 0 view .LVU5344
 15290 50ef 4839FB   		cmp	rbx, rdi	# c, _137
 15291 50f2 0F87F1FE 		ja	.L1191	#,
 15291      FFFF
 15292              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15293              		.loc 1 946 51 view .LVU5345
 15294 50f8 4989DB   		mov	r11, rbx	# tmp209, c
 15295 50fb 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 15296              	# sieve_extend.c:946:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 946:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 15297              		.loc 1 946 47 view .LVU5346
 15298 50ff 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.657
 15299 5102 0F87E1FE 		ja	.L1191	#,
 15299      FFFF
 15300              	.LVL936:
 15301              	.L1192:
 947:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 15302              		.loc 1 947 17 is_stmt 1 view .LVU5347
 15303 5108 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 15304 510c 31D2     		xor	edx, edx	# tmp204
 15305 510e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.657
 15306              	# sieve_extend.c:947:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 947:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 15307              		.loc 1 947 39 is_stmt 0 view .LVU5348
 15308 5111 488D7501 		lea	rsi, 1[rbp]	# _55,
 15309 5115 48F7F6   		div	rsi	# _55
 15310              	# sieve_extend.c:947:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 947:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 15311              		.loc 1 947 48 view .LVU5349
 15312 5118 4885D2   		test	rdx, rdx	# tmp204
 15313 511b 75CE     		jne	.L1190	#,
 947:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 15314              		.loc 1 947 48 view .LVU5350
 15315 511d 4939EE   		cmp	r14, rbp	# ivtmp.659, _218
 15316 5120 74C9     		je	.L1190	#,
 948:sieve_extend.c ****                 }
 15317              		.loc 1 948 21 is_stmt 1 view .LVU5351
GAS LISTING /tmp/ccRwwoRx.s 			page 408


 15318              	# sieve_extend.c:948:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 948:sieve_extend.c ****                 }
 15319              		.loc 1 948 24 is_stmt 0 view .LVU5352
 15320 5122 4983F81D 		cmp	r8, 29	# warn_prime,
 15321              	# sieve_extend.c:948:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 948:sieve_extend.c ****                 }
 15322              		.loc 1 948 35 view .LVU5353
 15323 5126 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 15324              	.LVL937:
 15325              	# sieve_extend.c:948:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 948:sieve_extend.c ****                 }
 15326              		.loc 1 948 24 view .LVU5354
 15327 512a 77BC     		ja	.L1201	#,
 948:sieve_extend.c ****                 }
 15328              		.loc 1 948 44 is_stmt 1 view .LVU5355
 15329              	.LVL938:
 15330              	.LBB752:
 15331              	.LBI746:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15332              		.loc 3 105 1 view .LVU5356
 15333              	.LBB749:
 15334              		.loc 3 107 3 view .LVU5357
 15335              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15336              		.loc 3 107 10 is_stmt 0 view .LVU5358
 15337 512c 4989F0   		mov	r8, rsi	#, _55
 15338 512f 4989C1   		mov	r9, rax	#, tmp203
 15339 5132 BF010000 		mov	edi, 1	#,
 15339      00
 15340 5137 4C89F9   		mov	rcx, r15	#, prime
 15341 513a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.657
 15342 513e 4C89E2   		mov	rdx, r12	#, ivtmp.657
 15343 5141 488D3500 		lea	rsi, .LC12[rip]	#,
 15343      000000
 15344 5148 31C0     		xor	eax, eax	#
 15345 514a E8000000 		call	__printf_chk@PLT	#
 15345      00
 15346              	.LVL939:
 15347 514f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 15348              	.LBE749:
 15349              	.LBE752:
 15350              	# sieve_extend.c:948:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 948:sieve_extend.c ****                 }
 15351              		.loc 1 948 35 view .LVU5359
 15352 5153 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 15353              	.LBB753:
 15354              	.LBB750:
 15355              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15356              		.loc 3 107 10 view .LVU5360
 15357 5156 EB93     		jmp	.L1190	#
 15358              	.LVL940:
 15359              	.L1165:
 15360              		.loc 3 107 10 view .LVU5361
 15361              	.LBE750:
 15362              	.LBE753:
 15363              	.LBE764:
 15364              	.LBE767:
 15365              	.LBE769:
GAS LISTING /tmp/ccRwwoRx.s 			page 409


 15366              	.LBE771:
 15367              	.LBB772:
 15368              	.LBB737:
 937:sieve_extend.c **** }
 15369              		.loc 1 937 5 is_stmt 1 view .LVU5362
 937:sieve_extend.c **** }
 15370              		.loc 1 937 5 is_stmt 0 view .LVU5363
 15371              	.LBE737:
 15372              	.LBE772:
 966:sieve_extend.c ****     switch(sieve->size) {
 15373              		.loc 1 966 5 is_stmt 1 view .LVU5364
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15374              		.loc 1 967 5 view .LVU5365
 15375 5158 4531ED   		xor	r13d, r13d	# <retval>
 15376 515b 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 15376      860100
 15377 5162 41BC0100 		mov	r12d, 1	# _135,
 15377      0000
 15378 5168 41B80100 		mov	r8d, 1	# primeCount,
 15378      0000
 15379 516e 0F842202 		je	.L1204	#,
 15379      0000
 15380 5174 0F872201 		ja	.L1196	#,
 15380      0000
 15381 517a 4983F964 		cmp	r9, 100	# pretmp_201,
 15382 517e B9190000 		mov	ecx, 25	# valid_primes,
 15382      00
 15383 5183 742A     		je	.L1183	#,
 15384              		.p2align 4,,2
 15385 5185 0F863F01 		jbe	.L1317	#,
 15385      0000
 15386 518b 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 15386      030000
 15387              	# sieve_extend.c:970:         case 1000:          valid_primes = 168;      break;
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15388              		.loc 1 970 42 is_stmt 0 view .LVU5366
 15389 5192 B9A80000 		mov	ecx, 168	# valid_primes,
 15389      00
 15390              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15391              		.loc 1 967 5 view .LVU5367
 15392 5197 7416     		je	.L1183	#,
 15393 5199 4981F910 		cmp	r9, 10000	# pretmp_201,
 15393      270000
 15394 51a0 B9CD0400 		mov	ecx, 1229	# tmp223,
 15394      00
 15395 51a5 41BA0000 		mov	r10d, 0	# tmp224,
 15395      0000
 15396 51ab 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 15397              	.LVL941:
 15398              	.L1183:
 982:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 15399              		.loc 1 982 5 is_stmt 1 view .LVU5368
 15400              	# sieve_extend.c:982:     if (!valid && option_verboselevel >= 1) {
 982:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 15401              		.loc 1 982 8 is_stmt 0 view .LVU5369
 15402 51af 85DB     		test	ebx, ebx	# option_verboselevel
GAS LISTING /tmp/ccRwwoRx.s 			page 410


 15403 51b1 0F8EF7FB 		jle	.L1184	#,
 15403      FFFF
 15404 51b7 4584E4   		test	r12b, r12b	# _135
 15405 51ba 0F84EEFB 		je	.L1184	#,
 15405      FFFF
 983:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 15406              		.loc 1 983 9 is_stmt 1 view .LVU5370
 15407              	.LVL942:
 15408              	.LBB773:
 15409              	.LBI773:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15410              		.loc 3 105 1 view .LVU5371
 15411              	.LBB774:
 15412              		.loc 3 107 3 view .LVU5372
 15413              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15414              		.loc 3 107 10 is_stmt 0 view .LVU5373
 15415 51c0 31C0     		xor	eax, eax	#
 15416 51c2 4C89CA   		mov	rdx, r9	#, pretmp_201
 15417 51c5 488D3500 		lea	rsi, .LC10[rip]	#,
 15417      000000
 15418 51cc BF010000 		mov	edi, 1	#,
 15418      00
 15419 51d1 E8000000 		call	__printf_chk@PLT	#
 15419      00
 15420              	.LVL943:
 15421              		.loc 3 107 10 view .LVU5374
 15422              	.LBE774:
 15423              	.LBE773:
 984:sieve_extend.c ****     }
 15424              		.loc 1 984 9 is_stmt 1 view .LVU5375
 15425              	# sieve_extend.c:984:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 984:sieve_extend.c ****     }
 15426              		.loc 1 984 12 is_stmt 0 view .LVU5376
 15427 51d6 83FB01   		cmp	ebx, 1	# option_verboselevel,
 15428 51d9 0F8424FE 		je	.L1164	#,
 15428      FFFF
 984:sieve_extend.c ****     }
 15429              		.loc 1 984 49 is_stmt 1 discriminator 1 view .LVU5377
 15430 51df 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 15431 51e3 BA640000 		mov	edx, 100	#,
 15431      00
 15432 51e8 4889EF   		mov	rdi, rbp	#, sieve
 15433 51eb E8B0E1FF 		call	show_primes.isra.0	#
 15433      FF
 15434              	.LVL944:
 986:sieve_extend.c ****     return (valid);
 15435              		.loc 1 986 5 discriminator 1 view .LVU5378
 15436 51f0 E9CBFBFF 		jmp	.L1186	#
 15436      FF
 15437              	.LVL945:
 15438              	.L1315:
 15439              	.LBB775:
 15440              	.LBB770:
 15441              	.LBB768:
 15442              	.LBB765:
 15443              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
GAS LISTING /tmp/ccRwwoRx.s 			page 411


 15444              		.loc 1 957 44 is_stmt 0 view .LVU5379
 15445 51f5 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 15445      18
 15446              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15447              		.loc 1 957 28 view .LVU5380
 15448 51fa 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 15449              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15450              		.loc 1 957 44 view .LVU5381
 15451 51fe 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 15452              	.LVL946:
 15453              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15454              		.loc 1 957 28 view .LVU5382
 15455 5202 761D     		jbe	.L1199	#,
 15456              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15457              		.loc 1 957 44 view .LVU5383
 15458 5204 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 15458      18
 15459 5209 E9DBFDFF 		jmp	.L1191	#
 15459      FF
 15460              	.LVL947:
 15461              	.L1302:
 957:sieve_extend.c ****         }
 15462              		.loc 1 957 44 view .LVU5384
 15463 520e 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 15463      18
 15464              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15465              		.loc 1 957 28 view .LVU5385
 15466 5213 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 15467              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15468              		.loc 1 957 44 view .LVU5386
 15469 5217 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 15470              	.LVL948:
 15471              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15472              		.loc 1 957 28 view .LVU5387
 15473 521b 0F87DDFD 		ja	.L1304	#,
 15473      FFFF
 15474              	.LVL949:
 15475              	.L1199:
 15476              	.LBB758:
 15477              	.LBB759:
 15478              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15479              		.loc 3 107 10 view .LVU5388
 15480 5221 BF010000 		mov	edi, 1	#,
 15480      00
 15481              	.LBE759:
 15482              	.LBE758:
 15483              	# sieve_extend.c:957:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 957:sieve_extend.c ****         }
 15484              		.loc 1 957 53 view .LVU5389
 15485 5226 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
GAS LISTING /tmp/ccRwwoRx.s 			page 412


 15485      01
 15486              	.LBB762:
 15487              	.LBB760:
 15488              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15489              		.loc 3 107 10 view .LVU5390
 15490 522b 4C89F9   		mov	rcx, r15	#, prime
 15491 522e 488D3500 		lea	rsi, .LC13[rip]	#,
 15491      000000
 15492 5235 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 15492      28
 15493              	.LBE760:
 15494              	.LBE762:
 957:sieve_extend.c ****         }
 15495              		.loc 1 957 53 is_stmt 1 view .LVU5391
 15496              	.LVL950:
 15497              	.LBB763:
 15498              	.LBI758:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15499              		.loc 3 105 1 view .LVU5392
 15500              	.LBB761:
 15501              		.loc 3 107 3 view .LVU5393
 15502              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15503              		.loc 3 107 10 is_stmt 0 view .LVU5394
 15504 523a 31C0     		xor	eax, eax	#
 15505 523c E8000000 		call	__printf_chk@PLT	#
 15505      00
 15506              	.LVL951:
 15507              		.loc 3 107 10 view .LVU5395
 15508 5241 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 15509 5245 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 15509      28
 15510 524a 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 15510      18
 15511 524f E995FDFF 		jmp	.L1191	#
 15511      FF
 15512              	.LVL952:
 15513              	.L1179:
 15514              		.loc 3 107 10 view .LVU5396
 15515 5254 4981F8A2 		cmp	r8, 78498	# primeCount,
 15515      320100
 15516              	.LBE761:
 15517              	.LBE763:
 15518              	.LBE765:
 15519              	.LBE768:
 15520              	.LBE770:
 15521              	.LBE775:
 15522              	# sieve_extend.c:973:         case 1000000:       valid_primes = 78498;    break;
 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15523              		.loc 1 973 42 view .LVU5397
 15524 525b B9A23201 		mov	ecx, 78498	# valid_primes,
 15524      00
 15525 5260 410F94C6 		sete	r14b	#, tmp183
 15526 5264 4421F2   		and	edx, r14d	# _253, tmp183
 15527 5267 4981F8A2 		cmp	r8, 78498	# primeCount,
 15527      320100
 15528 526e 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 15529 5272 410F95C4 		setne	r12b	#, _135
GAS LISTING /tmp/ccRwwoRx.s 			page 413


 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15530              		.loc 1 973 29 is_stmt 1 view .LVU5398
 15531              	.LVL953:
 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15532              		.loc 1 973 54 view .LVU5399
 15533              	# sieve_extend.c:973:         case 1000000:       valid_primes = 78498;    break;
 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15534              		.loc 1 973 9 is_stmt 0 view .LVU5400
 15535 5276 E915FBFF 		jmp	.L1182	#
 15535      FF
 15536              	.LVL954:
 15537              	.L1173:
 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15538              		.loc 1 973 9 view .LVU5401
 15539 527b 4983F804 		cmp	r8, 4	# primeCount,
 15540              	# sieve_extend.c:968:         case 10:            valid_primes = 4;        break;
 968:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 15541              		.loc 1 968 42 view .LVU5402
 15542 527f B9040000 		mov	ecx, 4	# valid_primes,
 15542      00
 15543 5284 410F94C2 		sete	r10b	#, tmp175
 15544 5288 4421D2   		and	edx, r10d	# _253, tmp175
 15545 528b 4983F804 		cmp	r8, 4	# primeCount,
 15546 528f 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 15547 5293 410F95C4 		setne	r12b	#, _135
 15548 5297 E9F4FAFF 		jmp	.L1182	#
 15548      FF
 15549              	.LVL955:
 15550              	.L1196:
 15551              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15552              		.loc 1 967 5 view .LVU5403
 15553 529c 4981F900 		cmp	r9, 100000000	# pretmp_201,
 15553      E1F505
 15554              	# sieve_extend.c:975:         case 100000000:     valid_primes = 5761455;  break;
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15555              		.loc 1 975 42 view .LVU5404
 15556 52a3 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 15556      00
 15557              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15558              		.loc 1 967 5 view .LVU5405
 15559 52a8 0F8401FF 		je	.L1183	#,
 15559      FFFF
 15560 52ae 762C     		jbe	.L1318	#,
 15561 52b0 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 15561      CA9A3B
 15562 52b7 B92EDF07 		mov	ecx, 50847534	# tmp227,
 15562      03
 15563 52bc B8000000 		mov	eax, 0	# tmp228,
 15563      00
 15564 52c1 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 15565 52c5 E9E5FEFF 		jmp	.L1183	#
 15565      FF
 15566              	.L1317:
 15567 52ca 31C9     		xor	ecx, ecx	# valid_primes
 15568 52cc 4983F90A 		cmp	r9, 10	# pretmp_201,
GAS LISTING /tmp/ccRwwoRx.s 			page 414


 15569 52d0 0F94C1   		sete	cl	#, valid_primes
 15570 52d3 48C1E102 		sal	rcx, 2	# valid_primes,
 15571 52d7 E9D3FEFF 		jmp	.L1183	#
 15571      FF
 15572              	.L1318:
 15573 52dc 4981F940 		cmp	r9, 1000000	# pretmp_201,
 15573      420F00
 15574              	# sieve_extend.c:973:         case 1000000:       valid_primes = 78498;    break;
 973:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 15575              		.loc 1 973 42 view .LVU5406
 15576 52e3 B9A23201 		mov	ecx, 78498	# valid_primes,
 15576      00
 15577              	# sieve_extend.c:967:     switch(sieve->size) {
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15578              		.loc 1 967 5 view .LVU5407
 15579 52e8 0F84C1FE 		je	.L1183	#,
 15579      FFFF
 15580 52ee 4981F980 		cmp	r9, 10000000	# pretmp_201,
 15580      969800
 15581 52f5 B903240A 		mov	ecx, 664579	# tmp225,
 15581      00
 15582 52fa BE000000 		mov	esi, 0	# tmp226,
 15582      00
 15583 52ff 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 15584 5303 E9A7FEFF 		jmp	.L1183	#
 15584      FF
 15585              	.LVL956:
 15586              	.L1171:
 967:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 15587              		.loc 1 967 5 view .LVU5408
 15588 5308 4981F8A8 		cmp	r8, 168	# primeCount,
 15588      000000
 15589              	# sieve_extend.c:970:         case 1000:          valid_primes = 168;      break;
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15590              		.loc 1 970 42 view .LVU5409
 15591 530f B9A80000 		mov	ecx, 168	# valid_primes,
 15591      00
 15592 5314 410F94C4 		sete	r12b	#, tmp177
 15593 5318 4421E2   		and	edx, r12d	# _253, tmp177
 15594 531b 4981F8A8 		cmp	r8, 168	# primeCount,
 15594      000000
 15595 5322 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 15596 5326 410F95C4 		setne	r12b	#, _135
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15597              		.loc 1 970 29 is_stmt 1 view .LVU5410
 15598              	.LVL957:
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15599              		.loc 1 970 54 view .LVU5411
 15600              	# sieve_extend.c:970:         case 1000:          valid_primes = 168;      break;
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15601              		.loc 1 970 9 is_stmt 0 view .LVU5412
 15602 532a E961FAFF 		jmp	.L1182	#
 15602      FF
 15603              	.LVL958:
 15604              	.L1177:
 970:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 15605              		.loc 1 970 9 view .LVU5413
GAS LISTING /tmp/ccRwwoRx.s 			page 415


 15606 532f 4981F8AF 		cmp	r8, 5761455	# primeCount,
 15606      E95700
 15607              	# sieve_extend.c:975:         case 100000000:     valid_primes = 5761455;  break;
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15608              		.loc 1 975 42 view .LVU5414
 15609 5336 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 15609      00
 15610 533b 0F94C0   		sete	al	#, tmp187
 15611 533e 21C2     		and	edx, eax	# _253, tmp187
 15612 5340 4981F8AF 		cmp	r8, 5761455	# primeCount,
 15612      E95700
 15613 5347 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 15614 534b 410F95C4 		setne	r12b	#, _135
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15615              		.loc 1 975 29 is_stmt 1 view .LVU5415
 15616              	.LVL959:
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15617              		.loc 1 975 54 view .LVU5416
 15618              	# sieve_extend.c:975:         case 100000000:     valid_primes = 5761455;  break;
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15619              		.loc 1 975 9 is_stmt 0 view .LVU5417
 15620 534f E93CFAFF 		jmp	.L1182	#
 15620      FF
 15621              	.LVL960:
 15622              	.L1175:
 975:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 15623              		.loc 1 975 9 view .LVU5418
 15624 5354 4D85C0   		test	r8, r8	# primeCount
 15625 5357 410F94C3 		sete	r11b	#, tmp191
 15626 535b 4421DA   		and	edx, r11d	# _253, tmp191
 15627 535e 4D85C0   		test	r8, r8	# primeCount
 15628 5361 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 15629 5365 410F95C4 		setne	r12b	#, _135
 977:sieve_extend.c ****     }
 15630              		.loc 1 977 29 is_stmt 1 view .LVU5419
 15631              	# sieve_extend.c:977:         default:            valid_primes= 0;
 977:sieve_extend.c ****     }
 15632              		.loc 1 977 41 is_stmt 0 view .LVU5420
 15633 5369 31C9     		xor	ecx, ecx	# valid_primes
 15634 536b E920FAFF 		jmp	.L1182	#
 15634      FF
 15635              	.L1169:
 977:sieve_extend.c ****     }
 15636              		.loc 1 977 41 view .LVU5421
 15637 5370 4981F878 		cmp	r8, 9592	# primeCount,
 15637      250000
 15638              	# sieve_extend.c:972:         case 100000:        valid_primes = 9592;     break;
 972:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 15639              		.loc 1 972 42 view .LVU5422
 15640 5377 B9782500 		mov	ecx, 9592	# valid_primes,
 15640      00
 15641 537c 400F94C7 		sete	dil	#, tmp181
 15642 5380 21FA     		and	edx, edi	# _253, tmp181
 15643 5382 4981F878 		cmp	r8, 9592	# primeCount,
 15643      250000
 15644 5389 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 15645 538d 410F95C4 		setne	r12b	#, _135
GAS LISTING /tmp/ccRwwoRx.s 			page 416


 972:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 15646              		.loc 1 972 29 is_stmt 1 view .LVU5423
 15647              	.LVL961:
 972:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 15648              		.loc 1 972 54 view .LVU5424
 15649              	# sieve_extend.c:972:         case 100000:        valid_primes = 9592;     break;
 972:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 15650              		.loc 1 972 9 is_stmt 0 view .LVU5425
 15651 5391 E9FAF9FF 		jmp	.L1182	#
 15651      FF
 15652              	.LVL962:
 15653              	.L1204:
 15654              	# sieve_extend.c:972:         case 100000:        valid_primes = 9592;     break;
 972:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 15655              		.loc 1 972 42 view .LVU5426
 15656 5396 B9782500 		mov	ecx, 9592	# valid_primes,
 15656      00
 15657 539b E90FFEFF 		jmp	.L1183	#
 15657      FF
 15658              		.cfi_endproc
 15659              	.LFE84:
 15661              		.section	.rodata.str1.8
 15662 0145 000000   		.align 8
 15663              	.LC14:
 15664 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 15664      653A2025 
 15664      73205B6F 
 15664      7074696F 
 15664      6E735D20 
 15665              		.section	.rodata.str1.1
 15666              	.LC15:
 15667 0031 4F707469 		.string	"Options:\n"
 15667      6F6E733A 
 15667      0A00
 15668              		.section	.rodata.str1.8
 15669 0167 00       		.align 8
 15670              	.LC16:
 15671 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 15671      76657262 
 15671      6F736520 
 15671      3C6C6576 
 15671      656C3E20 
 15672 01a3 00000000 		.align 8
 15672      00
 15673              	.LC17:
 15674 01a8 20202020 		.string	"                     1 - show phase progress\n"
 15674      20202020 
 15674      20202020 
 15674      20202020 
 15674      20202020 
 15675 01d6 0000     		.align 8
 15676              	.LC18:
 15677 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 15677      20202020 
 15677      20202020 
 15677      20202020 
 15677      20202020 
GAS LISTING /tmp/ccRwwoRx.s 			page 417


 15678 0219 00000000 		.align 8
 15678      000000
 15679              	.LC19:
 15680 0220 20202020 		.string	"                     3 - show actual work\n"
 15680      20202020 
 15680      20202020 
 15680      20202020 
 15680      20202020 
 15681 024b 00000000 		.align 8
 15681      00
 15682              	.LC20:
 15683 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 15683      63686563 
 15683      6B202020 
 15683      20202020 
 15683      20202020 
 15684 028d 000000   		.align 8
 15685              	.LC21:
 15686 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 15686      73686F77 
 15686      203C6D61 
 15686      78696D75 
 15686      6D3E2020 
 15687 02ce 0000     		.align 8
 15688              	.LC22:
 15689 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 15689      74756E65 
 15689      20203C6C 
 15689      6576656C 
 15689      3E202020 
 15690 031d 000000   		.align 8
 15691              	.LC23:
 15692 0320 20202020 		.string	"                     1 - fast tuning\n"
 15692      20202020 
 15692      20202020 
 15692      20202020 
 15692      20202020 
 15693 0346 0000     		.align 8
 15694              	.LC24:
 15695 0348 20202020 		.string	"                     2 - refined tuning\n"
 15695      20202020 
 15695      20202020 
 15695      20202020 
 15695      20202020 
 15696 0371 00000000 		.align 8
 15696      000000
 15697              	.LC25:
 15698 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 15698      20202020 
 15698      20202020 
 15698      20202020 
 15698      20202020 
 15699              		.text
 15700              		.p2align 4
 15701              		.globl	usage
 15703              	usage:
 15704              	.LVL963:
GAS LISTING /tmp/ccRwwoRx.s 			page 418


 15705              	.LFB85:
 990:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 15706              		.loc 1 990 24 is_stmt 1 view -0
 15707              		.cfi_startproc
 990:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 15708              		.loc 1 990 24 is_stmt 0 view .LVU5428
 15709 53a0 F30F1EFA 		endbr64	
 15710 53a4 50       		push	rax	#
 15711              		.cfi_def_cfa_offset 16
 15712 53a5 58       		pop	rax	#
 15713              		.cfi_def_cfa_offset 8
 991:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 15714              		.loc 1 991 5 is_stmt 1 view .LVU5429
 15715              	.LVL964:
 15716              	.LBB776:
 15717              	.LBI776:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15718              		.loc 3 98 1 view .LVU5430
 15719              	.LBB777:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15720              		.loc 3 100 3 view .LVU5431
 15721              	.LBE777:
 15722              	.LBE776:
 15723              	# sieve_extend.c:990: void usage(char *name) {
 990:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 15724              		.loc 1 990 24 is_stmt 0 view .LVU5432
 15725 53a6 488D6424 		lea	rsp, -8[rsp]	#,
 15725      F8
 15726              		.cfi_def_cfa_offset 16
 15727              	# sieve_extend.c:990: void usage(char *name) {
 990:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 15728              		.loc 1 990 24 view .LVU5433
 15729 53ab 4889F9   		mov	rcx, rdi	# name, tmp107
 15730              	.LBB779:
 15731              	.LBB778:
 15732              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15733              		.loc 3 100 10 view .LVU5434
 15734 53ae 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 15734      000000
 15735              	.LVL965:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15736              		.loc 3 100 10 view .LVU5435
 15737 53b5 488D1500 		lea	rdx, .LC14[rip]	#,
 15737      000000
 15738 53bc BE010000 		mov	esi, 1	#,
 15738      00
 15739 53c1 31C0     		xor	eax, eax	#
 15740 53c3 E8000000 		call	__fprintf_chk@PLT	#
 15740      00
 15741              	.LVL966:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15742              		.loc 3 100 10 view .LVU5436
 15743              	.LBE778:
 15744              	.LBE779:
 992:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 15745              		.loc 1 992 5 is_stmt 1 view .LVU5437
GAS LISTING /tmp/ccRwwoRx.s 			page 419


 15746              	.LBB780:
 15747              	.LBI780:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15748              		.loc 3 98 1 view .LVU5438
 15749              	.LBB781:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15750              		.loc 3 100 3 view .LVU5439
 15751              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15752              		.loc 3 100 10 is_stmt 0 view .LVU5440
 15753 53c8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15753      000000
 15754 53cf BA090000 		mov	edx, 9	#,
 15754      00
 15755 53d4 BE010000 		mov	esi, 1	#,
 15755      00
 15756 53d9 488D3D00 		lea	rdi, .LC15[rip]	#,
 15756      000000
 15757 53e0 E8000000 		call	fwrite@PLT	#
 15757      00
 15758              	.LVL967:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15759              		.loc 3 100 10 view .LVU5441
 15760              	.LBE781:
 15761              	.LBE780:
 993:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 15762              		.loc 1 993 5 is_stmt 1 view .LVU5442
 15763              	.LBB782:
 15764              	.LBI782:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15765              		.loc 3 98 1 view .LVU5443
 15766              	.LBB783:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15767              		.loc 3 100 3 view .LVU5444
 15768              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15769              		.loc 3 100 10 is_stmt 0 view .LVU5445
 15770 53e5 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15770      000000
 15771 53ec BA3A0000 		mov	edx, 58	#,
 15771      00
 15772 53f1 BE010000 		mov	esi, 1	#,
 15772      00
 15773 53f6 488D3D00 		lea	rdi, .LC16[rip]	#,
 15773      000000
 15774 53fd E8000000 		call	fwrite@PLT	#
 15774      00
 15775              	.LVL968:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15776              		.loc 3 100 10 view .LVU5446
 15777              	.LBE783:
 15778              	.LBE782:
 994:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 15779              		.loc 1 994 5 is_stmt 1 view .LVU5447
 15780              	.LBB784:
 15781              	.LBI784:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccRwwoRx.s 			page 420


 15782              		.loc 3 98 1 view .LVU5448
 15783              	.LBB785:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15784              		.loc 3 100 3 view .LVU5449
 15785              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15786              		.loc 3 100 10 is_stmt 0 view .LVU5450
 15787 5402 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15787      000000
 15788 5409 BA2D0000 		mov	edx, 45	#,
 15788      00
 15789 540e BE010000 		mov	esi, 1	#,
 15789      00
 15790 5413 488D3D00 		lea	rdi, .LC17[rip]	#,
 15790      000000
 15791 541a E8000000 		call	fwrite@PLT	#
 15791      00
 15792              	.LVL969:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15793              		.loc 3 100 10 view .LVU5451
 15794              	.LBE785:
 15795              	.LBE784:
 995:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 15796              		.loc 1 995 5 is_stmt 1 view .LVU5452
 15797              	.LBB786:
 15798              	.LBI786:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15799              		.loc 3 98 1 view .LVU5453
 15800              	.LBB787:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15801              		.loc 3 100 3 view .LVU5454
 15802              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15803              		.loc 3 100 10 is_stmt 0 view .LVU5455
 15804 541f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15804      000000
 15805 5426 BA400000 		mov	edx, 64	#,
 15805      00
 15806 542b BE010000 		mov	esi, 1	#,
 15806      00
 15807 5430 488D3D00 		lea	rdi, .LC18[rip]	#,
 15807      000000
 15808 5437 E8000000 		call	fwrite@PLT	#
 15808      00
 15809              	.LVL970:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15810              		.loc 3 100 10 view .LVU5456
 15811              	.LBE787:
 15812              	.LBE786:
 996:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 15813              		.loc 1 996 5 is_stmt 1 view .LVU5457
 15814              	.LBB788:
 15815              	.LBI788:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15816              		.loc 3 98 1 view .LVU5458
 15817              	.LBB789:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccRwwoRx.s 			page 421


 15818              		.loc 3 100 3 view .LVU5459
 15819              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15820              		.loc 3 100 10 is_stmt 0 view .LVU5460
 15821 543c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15821      000000
 15822 5443 BA2A0000 		mov	edx, 42	#,
 15822      00
 15823 5448 BE010000 		mov	esi, 1	#,
 15823      00
 15824 544d 488D3D00 		lea	rdi, .LC19[rip]	#,
 15824      000000
 15825 5454 E8000000 		call	fwrite@PLT	#
 15825      00
 15826              	.LVL971:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15827              		.loc 3 100 10 view .LVU5461
 15828              	.LBE789:
 15829              	.LBE788:
 997:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 15830              		.loc 1 997 5 is_stmt 1 view .LVU5462
 15831              	.LBB790:
 15832              	.LBI790:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15833              		.loc 3 98 1 view .LVU5463
 15834              	.LBB791:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15835              		.loc 3 100 3 view .LVU5464
 15836              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15837              		.loc 3 100 10 is_stmt 0 view .LVU5465
 15838 5459 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15838      000000
 15839 5460 BA3C0000 		mov	edx, 60	#,
 15839      00
 15840 5465 BE010000 		mov	esi, 1	#,
 15840      00
 15841 546a 488D3D00 		lea	rdi, .LC20[rip]	#,
 15841      000000
 15842 5471 E8000000 		call	fwrite@PLT	#
 15842      00
 15843              	.LVL972:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15844              		.loc 3 100 10 view .LVU5466
 15845              	.LBE791:
 15846              	.LBE790:
 998:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 15847              		.loc 1 998 5 is_stmt 1 view .LVU5467
 15848              	.LBB792:
 15849              	.LBI792:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15850              		.loc 3 98 1 view .LVU5468
 15851              	.LBB793:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15852              		.loc 3 100 3 view .LVU5469
 15853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccRwwoRx.s 			page 422


 15854              		.loc 3 100 10 is_stmt 0 view .LVU5470
 15855 5476 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15855      000000
 15856 547d BA3D0000 		mov	edx, 61	#,
 15856      00
 15857 5482 BE010000 		mov	esi, 1	#,
 15857      00
 15858 5487 488D3D00 		lea	rdi, .LC21[rip]	#,
 15858      000000
 15859 548e E8000000 		call	fwrite@PLT	#
 15859      00
 15860              	.LVL973:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15861              		.loc 3 100 10 view .LVU5471
 15862              	.LBE793:
 15863              	.LBE792:
 999:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 15864              		.loc 1 999 5 is_stmt 1 view .LVU5472
 15865              	.LBB794:
 15866              	.LBI794:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15867              		.loc 3 98 1 view .LVU5473
 15868              	.LBB795:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15869              		.loc 3 100 3 view .LVU5474
 15870              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15871              		.loc 3 100 10 is_stmt 0 view .LVU5475
 15872 5493 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15872      000000
 15873 549a BA4C0000 		mov	edx, 76	#,
 15873      00
 15874 549f BE010000 		mov	esi, 1	#,
 15874      00
 15875 54a4 488D3D00 		lea	rdi, .LC22[rip]	#,
 15875      000000
 15876 54ab E8000000 		call	fwrite@PLT	#
 15876      00
 15877              	.LVL974:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15878              		.loc 3 100 10 view .LVU5476
 15879              	.LBE795:
 15880              	.LBE794:
1000:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 15881              		.loc 1 1000 5 is_stmt 1 view .LVU5477
 15882              	.LBB796:
 15883              	.LBI796:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15884              		.loc 3 98 1 view .LVU5478
 15885              	.LBB797:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15886              		.loc 3 100 3 view .LVU5479
 15887              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15888              		.loc 3 100 10 is_stmt 0 view .LVU5480
 15889 54b0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15889      000000
GAS LISTING /tmp/ccRwwoRx.s 			page 423


 15890 54b7 BA250000 		mov	edx, 37	#,
 15890      00
 15891 54bc BE010000 		mov	esi, 1	#,
 15891      00
 15892 54c1 488D3D00 		lea	rdi, .LC23[rip]	#,
 15892      000000
 15893 54c8 E8000000 		call	fwrite@PLT	#
 15893      00
 15894              	.LVL975:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15895              		.loc 3 100 10 view .LVU5481
 15896              	.LBE797:
 15897              	.LBE796:
1001:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 15898              		.loc 1 1001 5 is_stmt 1 view .LVU5482
 15899              	.LBB798:
 15900              	.LBI798:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15901              		.loc 3 98 1 view .LVU5483
 15902              	.LBB799:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15903              		.loc 3 100 3 view .LVU5484
 15904              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15905              		.loc 3 100 10 is_stmt 0 view .LVU5485
 15906 54cd 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15906      000000
 15907 54d4 BA280000 		mov	edx, 40	#,
 15907      00
 15908 54d9 BE010000 		mov	esi, 1	#,
 15908      00
 15909 54de 488D3D00 		lea	rdi, .LC24[rip]	#,
 15909      000000
 15910 54e5 E8000000 		call	fwrite@PLT	#
 15910      00
 15911              	.LVL976:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15912              		.loc 3 100 10 view .LVU5486
 15913              	.LBE799:
 15914              	.LBE798:
1002:sieve_extend.c ****     exit(1);
 15915              		.loc 1 1002 5 is_stmt 1 view .LVU5487
 15916              	.LBB800:
 15917              	.LBI800:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15918              		.loc 3 98 1 view .LVU5488
 15919              	.LBB801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15920              		.loc 3 100 3 view .LVU5489
 15921              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15922              		.loc 3 100 10 is_stmt 0 view .LVU5490
 15923 54ea 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 15923      000000
 15924 54f1 488D3D00 		lea	rdi, .LC25[rip]	#,
 15924      000000
 15925 54f8 BA350000 		mov	edx, 53	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 424


 15925      00
 15926 54fd BE010000 		mov	esi, 1	#,
 15926      00
 15927 5502 E8000000 		call	fwrite@PLT	#
 15927      00
 15928              	.LVL977:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 15929              		.loc 3 100 10 view .LVU5491
 15930              	.LBE801:
 15931              	.LBE800:
1003:sieve_extend.c **** }
 15932              		.loc 1 1003 5 is_stmt 1 view .LVU5492
 15933 5507 BF010000 		mov	edi, 1	#,
 15933      00
 15934 550c E8000000 		call	exit@PLT	#
 15934      00
 15935              	.LVL978:
 15936              		.cfi_endproc
 15937              	.LFE85:
 15939              		.section	.rodata.str1.1
 15940              	.LC26:
 15941 003b 256400   		.string	"%d"
 15942              	.LC27:
 15943 003e 2C253033 		.string	",%03d"
 15943      6400
 15944              		.text
 15945 5511 66662E0F 		.p2align 4
 15945      1F840000 
 15945      0000000F 
 15945      1F4000
 15946              		.globl	printfcomma2
 15948              	printfcomma2:
 15949              	.LVL979:
 15950              	.LFB90:
1049:sieve_extend.c **** 
1050:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1051:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1052:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1053:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1054:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1055:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1056:sieve_extend.c **** }
1057:sieve_extend.c **** 
1058:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1059:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1060:sieve_extend.c **** 
1061:sieve_extend.c ****     double best_avg = 0;
1062:sieve_extend.c ****     best_blocksize_bits = 0;
1063:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1064:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1065:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1066:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1067:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1068:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1069:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1070:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1071:sieve_extend.c ****     double sample_duration = default_sample_duration;
GAS LISTING /tmp/ccRwwoRx.s 			page 425


1072:sieve_extend.c **** 
1073:sieve_extend.c ****     // determines the size of the resultset
1074:sieve_extend.c ****     switch (tune_level) {
1075:sieve_extend.c ****         case 1:
1076:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1077:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1078:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1079:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1080:sieve_extend.c ****             sample_max = 8;
1081:sieve_extend.c ****             sample_duration = 0.1;
1082:sieve_extend.c ****             break;
1083:sieve_extend.c ****         case 2:
1084:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1085:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1086:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1087:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1088:sieve_extend.c ****             sample_max = 8;
1089:sieve_extend.c ****             sample_duration = 0.2;
1090:sieve_extend.c ****             break;
1091:sieve_extend.c ****         case 3:
1092:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1093:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1094:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1095:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1096:sieve_extend.c ****             sample_max = 8;
1097:sieve_extend.c ****             sample_duration = 0.2;
1098:sieve_extend.c ****             break;
1099:sieve_extend.c ****     }
1100:sieve_extend.c ****     
1101:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
1102:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
1103:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1104:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1105:sieve_extend.c ****     counter_t tuning_results=0;
1106:sieve_extend.c ****     counter_t tuning_result_index=0;
1107:sieve_extend.c ****     
1108:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counter/2; smallstep_faster 
1109:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
1110:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
1111:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1112:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1113:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1114:sieve_extend.c **** 
1115:sieve_extend.c ****                         // set variables
1116:sieve_extend.c ****                         tuning_results++;
1117:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1118:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1119:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1120:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1121:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1122:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1123:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1124:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1125:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1126:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1127:sieve_extend.c **** 
1128:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
GAS LISTING /tmp/ccRwwoRx.s 			page 426


1129:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1130:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1131:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1132:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1133:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1134:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1135:sieve_extend.c ****                         }
1136:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1137:sieve_extend.c ****                         tuning_result_index++;
1138:sieve_extend.c ****                     }
1139:sieve_extend.c ****                 }
1140:sieve_extend.c ****             }
1141:sieve_extend.c ****         }
1142:sieve_extend.c ****     }
1143:sieve_extend.c ****     if (option_verboselevel >= 2) {
1144:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
1145:sieve_extend.c ****         printf("Best options\n");
1146:sieve_extend.c ****     }
1147:sieve_extend.c ****     counter_t step=0;
1148:sieve_extend.c ****     while (tuning_results>4) {
1149:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1150:sieve_extend.c ****         step++;
1151:sieve_extend.c ****         if (option_verboselevel >= 2) {
1152:sieve_extend.c ****             tuning_result_index = 0;
1153:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1154:sieve_extend.c ****             if (option_verboselevel >= 3) {
1155:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1156:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1157:sieve_extend.c ****                 }
1158:sieve_extend.c ****             }
1159:sieve_extend.c ****         }
1160:sieve_extend.c **** 
1161:sieve_extend.c ****         tuning_results = tuning_results / 2;
1162:sieve_extend.c **** 
1163:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1164:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1165:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1166:sieve_extend.c ****         }
1167:sieve_extend.c ****         
1168:sieve_extend.c ****     }
1169:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1170:sieve_extend.c ****     if (option_verboselevel >= 1) {
1171:sieve_extend.c ****         tuning_result_index = 0;
1172:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1173:sieve_extend.c ****     }
1174:sieve_extend.c **** 
1175:sieve_extend.c ****     free(tuning_result);
1176:sieve_extend.c ****     return best_result;
1177:sieve_extend.c **** }
1178:sieve_extend.c **** 
1179:sieve_extend.c **** void printfcomma2 (int n) {
 15951              		.loc 1 1179 27 view -0
 15952              		.cfi_startproc
 15953              		.loc 1 1179 27 is_stmt 0 view .LVU5494
 15954 5520 F30F1EFA 		endbr64	
1180:sieve_extend.c ****     if (n < 1000) {
 15955              		.loc 1 1180 5 is_stmt 1 view .LVU5495
GAS LISTING /tmp/ccRwwoRx.s 			page 427


 15956              	# sieve_extend.c:1179: void printfcomma2 (int n) {
1179:sieve_extend.c ****     if (n < 1000) {
 15957              		.loc 1 1179 27 is_stmt 0 view .LVU5496
 15958 5524 4154     		push	r12	#
 15959              		.cfi_def_cfa_offset 16
 15960              		.cfi_offset 12, -16
 15961              	.LBB812:
 15962              	.LBB813:
 15963              	.LBB814:
 15964              	.LBB815:
 15965              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15966              		.loc 3 107 10 view .LVU5497
 15967 5526 89FA     		mov	edx, edi	#, n
 15968              	.LBE815:
 15969              	.LBE814:
 15970              	.LBE813:
 15971              	.LBE812:
 15972              	# sieve_extend.c:1179: void printfcomma2 (int n) {
1179:sieve_extend.c ****     if (n < 1000) {
 15973              		.loc 1 1179 27 view .LVU5498
 15974 5528 4189FC   		mov	r12d, edi	# n, tmp99
 15975 552b 53       		push	rbx	#
 15976              		.cfi_def_cfa_offset 24
 15977              		.cfi_offset 3, -24
 15978              	.LBB819:
 15979              	.LBB818:
 15980              	.LBB817:
 15981              	.LBB816:
 15982              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15983              		.loc 3 107 10 view .LVU5499
 15984 552c 488D3500 		lea	rsi, .LC26[rip]	#,
 15984      000000
 15985              	.LBE816:
 15986              	.LBE817:
 15987              	.LBE818:
 15988              	.LBE819:
 15989              	# sieve_extend.c:1179: void printfcomma2 (int n) {
1179:sieve_extend.c ****     if (n < 1000) {
 15990              		.loc 1 1179 27 view .LVU5500
 15991 5533 488D6424 		lea	rsp, -8[rsp]	#,
 15991      F8
 15992              		.cfi_def_cfa_offset 32
 15993              	# sieve_extend.c:1180:     if (n < 1000) {
 15994              		.loc 1 1180 8 view .LVU5501
 15995 5538 81FFE703 		cmp	edi, 999	# n,
 15995      0000
 15996 553e 7E2E     		jle	.L1324	#,
1181:sieve_extend.c ****         printf ("%d", n);
1182:sieve_extend.c ****         return;
1183:sieve_extend.c ****     }
1184:sieve_extend.c ****     printfcomma2 (n/1000);
 15997              		.loc 1 1184 5 is_stmt 1 view .LVU5502
 15998 5540 4863DF   		movsx	rbx, edi	# n, n
 15999 5543 89F8     		mov	eax, edi	# tmp90, n
 16000 5545 4869DBD3 		imul	rbx, rbx, 274877907	# tmp87, n,
 16000      4D6210
 16001 554c C1F81F   		sar	eax, 31	# tmp90,
GAS LISTING /tmp/ccRwwoRx.s 			page 428


 16002 554f 48C1FB26 		sar	rbx, 38	# tmp89,
 16003 5553 29C3     		sub	ebx, eax	# tmp85, tmp90
 16004 5555 89DF     		mov	edi, ebx	#, tmp85
 16005              	.LVL980:
 16006              		.loc 1 1184 5 is_stmt 0 view .LVU5503
 16007 5557 E8000000 		call	printfcomma2	#
 16007      00
 16008              	.LVL981:
1185:sieve_extend.c ****     printf (",%03d", n%1000);
 16009              		.loc 1 1185 5 is_stmt 1 view .LVU5504
 16010              	.LBB820:
 16011              	.LBI820:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16012              		.loc 3 105 1 view .LVU5505
 16013              	.LBB821:
 16014              		.loc 3 107 3 view .LVU5506
 16015              	.LBE821:
 16016              	.LBE820:
 16017              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
 16018              		.loc 1 1185 5 is_stmt 0 view .LVU5507
 16019 555c 69CBE803 		imul	ecx, ebx, 1000	# tmp97, tmp85,
 16019      0000
 16020 5562 4489E2   		mov	edx, r12d	# n, n
 16021              	.LBB826:
 16022              	.LBB822:
 16023              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16024              		.loc 3 107 10 view .LVU5508
 16025 5565 488D3500 		lea	rsi, .LC27[rip]	#,
 16025      000000
 16026              	.LBE822:
 16027              	.LBE826:
 16028              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
 16029              		.loc 1 1185 5 view .LVU5509
 16030 556c 29CA     		sub	edx, ecx	# n, tmp97
 16031              	.LVL982:
 16032              	.L1324:
 16033              	# sieve_extend.c:1186: }
1186:sieve_extend.c **** }
 16034              		.loc 1 1186 1 view .LVU5510
 16035 556e 488D6424 		lea	rsp, 8[rsp]	#,
 16035      08
 16036              		.cfi_def_cfa_offset 24
 16037              	.LBB827:
 16038              	.LBB823:
 16039              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16040              		.loc 3 107 10 view .LVU5511
 16041 5573 BF010000 		mov	edi, 1	#,
 16041      00
 16042              	.LBE823:
 16043              	.LBE827:
 16044              	# sieve_extend.c:1186: }
 16045              		.loc 1 1186 1 view .LVU5512
 16046 5578 5B       		pop	rbx	#
 16047              		.cfi_def_cfa_offset 16
 16048              	.LBB828:
 16049              	.LBB824:
 16050              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccRwwoRx.s 			page 429


 16051              		.loc 3 107 10 view .LVU5513
 16052 5579 31C0     		xor	eax, eax	#
 16053              	.LBE824:
 16054              	.LBE828:
 16055              	# sieve_extend.c:1186: }
 16056              		.loc 1 1186 1 view .LVU5514
 16057 557b 415C     		pop	r12	#
 16058              		.cfi_def_cfa_offset 8
 16059              	.LVL983:
 16060              	.LBB829:
 16061              	.LBB825:
 16062              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16063              		.loc 3 107 10 view .LVU5515
 16064 557d E9000000 		jmp	__printf_chk@PLT	#
 16064      00
 16065              	.LVL984:
 16066              	.LBE825:
 16067              	.LBE829:
 16068              		.cfi_endproc
 16069              	.LFE90:
 16071 5582 66662E0F 		.p2align 4
 16071      1F840000 
 16071      0000000F 
 16071      1F00
 16072              		.globl	printfcomma
 16074              	printfcomma:
 16075              	.LVL985:
 16076              	.LFB91:
1187:sieve_extend.c **** 
1188:sieve_extend.c **** void printfcomma (int n) {
 16077              		.loc 1 1188 26 is_stmt 1 view -0
 16078              		.cfi_startproc
 16079              		.loc 1 1188 26 is_stmt 0 view .LVU5517
 16080 5590 F30F1EFA 		endbr64	
1189:sieve_extend.c ****     if (n < 0) {
 16081              		.loc 1 1189 5 is_stmt 1 view .LVU5518
 16082              	# sieve_extend.c:1188: void printfcomma (int n) {
1188:sieve_extend.c ****     if (n < 0) {
 16083              		.loc 1 1188 26 is_stmt 0 view .LVU5519
 16084 5594 4157     		push	r15	#
 16085              		.cfi_def_cfa_offset 16
 16086              		.cfi_offset 15, -16
 16087 5596 4156     		push	r14	#
 16088              		.cfi_def_cfa_offset 24
 16089              		.cfi_offset 14, -24
 16090 5598 4155     		push	r13	#
 16091              		.cfi_def_cfa_offset 32
 16092              		.cfi_offset 13, -32
 16093 559a 4154     		push	r12	#
 16094              		.cfi_def_cfa_offset 40
 16095              		.cfi_offset 12, -40
 16096 559c 4189FC   		mov	r12d, edi	# n, tmp159
 16097 559f 55       		push	rbp	#
 16098              		.cfi_def_cfa_offset 48
 16099              		.cfi_offset 6, -48
 16100 55a0 53       		push	rbx	#
 16101              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccRwwoRx.s 			page 430


 16102              		.cfi_offset 3, -56
 16103 55a1 488D6424 		lea	rsp, -8[rsp]	#,
 16103      F8
 16104              		.cfi_def_cfa_offset 64
 16105              	# sieve_extend.c:1189:     if (n < 0) {
 16106              		.loc 1 1189 8 view .LVU5520
 16107 55a6 85FF     		test	edi, edi	# n
 16108 55a8 0F880A01 		js	.L1334	#,
 16108      0000
 16109              	.LVL986:
 16110              	.L1326:
1190:sieve_extend.c ****         printf ("-");
1191:sieve_extend.c ****         n = -n;
1192:sieve_extend.c ****     }
1193:sieve_extend.c ****     printfcomma2 (n);
 16111              		.loc 1 1193 5 is_stmt 1 view .LVU5521
 16112              	.LBB882:
 16113              	.LBI882:
1179:sieve_extend.c ****     if (n < 1000) {
 16114              		.loc 1 1179 6 view .LVU5522
 16115              	.LBB883:
1180:sieve_extend.c ****         printf ("%d", n);
 16116              		.loc 1 1180 5 view .LVU5523
 16117              	# sieve_extend.c:1180:     if (n < 1000) {
1180:sieve_extend.c ****         printf ("%d", n);
 16118              		.loc 1 1180 8 is_stmt 0 view .LVU5524
 16119 55ae 4181FCE7 		cmp	r12d, 999	# n,
 16119      030000
 16120              	.LBB884:
 16121              	.LBB885:
 16122              	.LBB886:
 16123              	.LBB887:
 16124              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16125              		.loc 3 107 10 view .LVU5525
 16126 55b5 4489E2   		mov	edx, r12d	#, n
 16127 55b8 488D3500 		lea	rsi, .LC26[rip]	#,
 16127      000000
 16128              	.LBE887:
 16129              	.LBE886:
 16130              	.LBE885:
 16131              	.LBE884:
 16132              	# sieve_extend.c:1180:     if (n < 1000) {
1180:sieve_extend.c ****         printf ("%d", n);
 16133              		.loc 1 1180 8 view .LVU5526
 16134 55bf 0F8EBF00 		jle	.L1333	#,
 16134      0000
 16135              	.LVL987:
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16136              		.loc 1 1184 5 is_stmt 1 view .LVU5527
 16137 55c5 4489E3   		mov	ebx, r12d	# n, n
 16138 55c8 4C69EBD3 		imul	r13, rbx, 274877907	# tmp90, n,
 16138      4D6210
 16139 55cf 49C1ED26 		shr	r13, 38	# _8,
 16140              	.LVL988:
 16141              	.LBB888:
 16142              	.LBI888:
1179:sieve_extend.c ****     if (n < 1000) {
GAS LISTING /tmp/ccRwwoRx.s 			page 431


 16143              		.loc 1 1179 6 view .LVU5528
 16144              	.LBB889:
1180:sieve_extend.c ****         printf ("%d", n);
 16145              		.loc 1 1180 5 view .LVU5529
 16146              	# sieve_extend.c:1180:     if (n < 1000) {
1180:sieve_extend.c ****         printf ("%d", n);
 16147              		.loc 1 1180 8 is_stmt 0 view .LVU5530
 16148 55d3 4181FC3F 		cmp	r12d, 999999	# n,
 16148      420F00
 16149 55da 0F8EC000 		jle	.L1335	#,
 16149      0000
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16150              		.loc 1 1184 5 is_stmt 1 view .LVU5531
 16151 55e0 4489ED   		mov	ebp, r13d	# _8, _8
 16152 55e3 4C69F5D3 		imul	r14, rbp, 274877907	# tmp98, _8,
 16152      4D6210
 16153 55ea 49C1EE26 		shr	r14, 38	# _10,
 16154              	.LVL989:
 16155              	.LBB890:
 16156              	.LBI890:
1179:sieve_extend.c ****     if (n < 1000) {
 16157              		.loc 1 1179 6 view .LVU5532
 16158              	.LBB891:
1180:sieve_extend.c ****         printf ("%d", n);
 16159              		.loc 1 1180 5 view .LVU5533
 16160              	# sieve_extend.c:1180:     if (n < 1000) {
1180:sieve_extend.c ****         printf ("%d", n);
 16161              		.loc 1 1180 8 is_stmt 0 view .LVU5534
 16162 55ee 4181FCFF 		cmp	r12d, 999999999	# n,
 16162      C99A3B
 16163 55f5 0F8ED500 		jle	.L1336	#,
 16163      0000
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16164              		.loc 1 1184 5 is_stmt 1 view .LVU5535
 16165              	.LVL990:
 16166              	.LBB892:
 16167              	.LBI892:
1179:sieve_extend.c ****     if (n < 1000) {
 16168              		.loc 1 1179 6 view .LVU5536
 16169              	.LBE892:
 16170              	.LBE891:
 16171              	.LBE890:
 16172              	.LBE889:
 16173              	.LBE888:
 16174              	.LBE883:
 16175              	.LBE882:
1180:sieve_extend.c ****         printf ("%d", n);
 16176              		.loc 1 1180 5 view .LVU5537
 16177              	.LBB958:
 16178              	.LBB953:
 16179              	.LBB940:
 16180              	.LBB937:
 16181              	.LBB925:
 16182              	.LBB923:
 16183              	.LBB909:
 16184              	.LBB893:
 16185              	.LBI893:
GAS LISTING /tmp/ccRwwoRx.s 			page 432


1179:sieve_extend.c ****     if (n < 1000) {
 16186              		.loc 1 1179 6 view .LVU5538
 16187              	.LBB894:
1181:sieve_extend.c ****         return;
 16188              		.loc 1 1181 9 view .LVU5539
 16189              	.LBB895:
 16190              	.LBI895:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16191              		.loc 3 105 1 view .LVU5540
 16192              	.LBB896:
 16193              		.loc 3 107 3 view .LVU5541
 16194              	.LBE896:
 16195              	.LBE895:
 16196              	.LBE894:
 16197              	.LBE893:
 16198              	.LBE909:
 16199              	# sieve_extend.c:1184:     printfcomma2 (n/1000);
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16200              		.loc 1 1184 5 is_stmt 0 view .LVU5542
 16201 55fb 4589F7   		mov	r15d, r14d	# _10, _10
 16202              	.LBB910:
 16203              	.LBB906:
 16204              	.LBB903:
 16205              	.LBB900:
 16206              	.LBB897:
 16207              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16208              		.loc 3 107 10 view .LVU5543
 16209 55fe 488D3500 		lea	rsi, .LC26[rip]	#,
 16209      000000
 16210              	.LBE897:
 16211              	.LBE900:
 16212              	.LBE903:
 16213              	.LBE906:
 16214              	.LBE910:
 16215              	# sieve_extend.c:1184:     printfcomma2 (n/1000);
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16216              		.loc 1 1184 5 view .LVU5544
 16217 5605 4D69FFD3 		imul	r15, r15, 274877907	# tmp107, _10,
 16217      4D6210
 16218              	.LBB911:
 16219              	.LBB907:
 16220              	.LBB904:
 16221              	.LBB901:
 16222              	.LBB898:
 16223              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16224              		.loc 3 107 10 view .LVU5545
 16225 560c BF010000 		mov	edi, 1	#,
 16225      00
 16226 5611 31C0     		xor	eax, eax	#
 16227              	.LBE898:
 16228              	.LBE901:
 16229              	.LBE904:
 16230              	.LBE907:
 16231              	.LBE911:
 16232              	# sieve_extend.c:1184:     printfcomma2 (n/1000);
1184:sieve_extend.c ****     printf (",%03d", n%1000);
 16233              		.loc 1 1184 5 view .LVU5546
GAS LISTING /tmp/ccRwwoRx.s 			page 433


 16234 5613 49C1EF26 		shr	r15, 38	# tmp105,
 16235              	.LBB912:
 16236              	.LBB908:
 16237              	.LBB905:
 16238              	.LBB902:
 16239              	.LBB899:
 16240              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16241              		.loc 3 107 10 view .LVU5547
 16242 5617 4489FA   		mov	edx, r15d	#, tmp105
 16243              	.LVL991:
 16244              		.loc 3 107 10 view .LVU5548
 16245 561a E8000000 		call	__printf_chk@PLT	#
 16245      00
 16246              	.LVL992:
 16247              		.loc 3 107 10 view .LVU5549
 16248              	.LBE899:
 16249              	.LBE902:
1182:sieve_extend.c ****     }
 16250              		.loc 1 1182 9 is_stmt 1 view .LVU5550
1182:sieve_extend.c ****     }
 16251              		.loc 1 1182 9 is_stmt 0 view .LVU5551
 16252              	.LBE905:
 16253              	.LBE908:
 16254              	.LBE912:
1185:sieve_extend.c **** }
 16255              		.loc 1 1185 5 is_stmt 1 view .LVU5552
 16256              	.LBB913:
 16257              	.LBI913:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16258              		.loc 3 105 1 view .LVU5553
 16259              	.LBB914:
 16260              		.loc 3 107 3 view .LVU5554
 16261              	.LBE914:
 16262              	.LBE913:
 16263              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16264              		.loc 1 1185 5 is_stmt 0 view .LVU5555
 16265 561f 4169C7E8 		imul	eax, r15d, 1000	# tmp119, tmp105,
 16265      030000
 16266 5626 4489F2   		mov	edx, r14d	# _10, _10
 16267              	.LBB917:
 16268              	.LBB915:
 16269              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16270              		.loc 3 107 10 view .LVU5556
 16271 5629 488D3500 		lea	rsi, .LC27[rip]	#,
 16271      000000
 16272 5630 BF010000 		mov	edi, 1	#,
 16272      00
 16273              	.LBE915:
 16274              	.LBE917:
 16275              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16276              		.loc 1 1185 5 view .LVU5557
 16277 5635 29C2     		sub	edx, eax	# _10, tmp119
 16278              	.LBB918:
 16279              	.LBB916:
 16280              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccRwwoRx.s 			page 434


 16281              		.loc 3 107 10 view .LVU5558
 16282 5637 31C0     		xor	eax, eax	#
 16283 5639 E8000000 		call	__printf_chk@PLT	#
 16283      00
 16284              	.LVL993:
 16285              	.L1331:
 16286              		.loc 3 107 10 view .LVU5559
 16287              	.LBE916:
 16288              	.LBE918:
 16289              	.LBE923:
 16290              	.LBE925:
1185:sieve_extend.c **** }
 16291              		.loc 1 1185 5 is_stmt 1 view .LVU5560
 16292              	.LBB926:
 16293              	.LBI926:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16294              		.loc 3 105 1 view .LVU5561
 16295              	.LBB927:
 16296              		.loc 3 107 3 view .LVU5562
 16297              	.LBE927:
 16298              	.LBE926:
 16299              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16300              		.loc 1 1185 5 is_stmt 0 view .LVU5563
 16301 563e 4869D5D3 		imul	rdx, rbp, 274877907	# tmp131, _8,
 16301      4D6210
 16302              	.LBB930:
 16303              	.LBB928:
 16304              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16305              		.loc 3 107 10 view .LVU5564
 16306 5645 488D3500 		lea	rsi, .LC27[rip]	#,
 16306      000000
 16307 564c BF010000 		mov	edi, 1	#,
 16307      00
 16308 5651 31C0     		xor	eax, eax	#
 16309              	.LBE928:
 16310              	.LBE930:
 16311              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16312              		.loc 1 1185 5 view .LVU5565
 16313 5653 48C1EA26 		shr	rdx, 38	# tmp129,
 16314 5657 69CAE803 		imul	ecx, edx, 1000	# tmp133, tmp129,
 16314      0000
 16315 565d 4489EA   		mov	edx, r13d	# _8, _8
 16316 5660 29CA     		sub	edx, ecx	# _8, tmp133
 16317              	.LBB931:
 16318              	.LBB929:
 16319              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16320              		.loc 3 107 10 view .LVU5566
 16321 5662 E8000000 		call	__printf_chk@PLT	#
 16321      00
 16322              	.LVL994:
 16323              	.L1329:
 16324              		.loc 3 107 10 view .LVU5567
 16325              	.LBE929:
 16326              	.LBE931:
 16327              	.LBE937:
GAS LISTING /tmp/ccRwwoRx.s 			page 435


 16328              	.LBE940:
1185:sieve_extend.c **** }
 16329              		.loc 1 1185 5 is_stmt 1 view .LVU5568
 16330              	.LBB941:
 16331              	.LBI941:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16332              		.loc 3 105 1 view .LVU5569
 16333              	.LBB942:
 16334              		.loc 3 107 3 view .LVU5570
 16335              	.LBE942:
 16336              	.LBE941:
 16337              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16338              		.loc 1 1185 5 is_stmt 0 view .LVU5571
 16339 5667 4869F3D3 		imul	rsi, rbx, 274877907	# tmp145, n,
 16339      4D6210
 16340 566e 4489E2   		mov	edx, r12d	# n, n
 16341 5671 48C1EE26 		shr	rsi, 38	# tmp143,
 16342 5675 69FEE803 		imul	edi, esi, 1000	# tmp147, tmp143,
 16342      0000
 16343              	.LBB947:
 16344              	.LBB943:
 16345              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16346              		.loc 3 107 10 view .LVU5572
 16347 567b 488D3500 		lea	rsi, .LC27[rip]	#,
 16347      000000
 16348              	.LBE943:
 16349              	.LBE947:
 16350              	# sieve_extend.c:1185:     printf (",%03d", n%1000);
1185:sieve_extend.c **** }
 16351              		.loc 1 1185 5 view .LVU5573
 16352 5682 29FA     		sub	edx, edi	# n, tmp147
 16353              	.LVL995:
 16354              	.L1333:
1185:sieve_extend.c **** }
 16355              		.loc 1 1185 5 view .LVU5574
 16356              	.LBE953:
 16357              	.LBE958:
 16358              	# sieve_extend.c:1194: }
1194:sieve_extend.c **** }
 16359              		.loc 1 1194 1 view .LVU5575
 16360 5684 488D6424 		lea	rsp, 8[rsp]	#,
 16360      08
 16361              		.cfi_remember_state
 16362              		.cfi_def_cfa_offset 56
 16363              	.LBB959:
 16364              	.LBB954:
 16365              	.LBB948:
 16366              	.LBB944:
 16367              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16368              		.loc 3 107 10 view .LVU5576
 16369 5689 BF010000 		mov	edi, 1	#,
 16369      00
 16370              	.LBE944:
 16371              	.LBE948:
 16372              	.LBE954:
 16373              	.LBE959:
GAS LISTING /tmp/ccRwwoRx.s 			page 436


 16374              	# sieve_extend.c:1194: }
 16375              		.loc 1 1194 1 view .LVU5577
 16376 568e 5B       		pop	rbx	#
 16377              		.cfi_def_cfa_offset 48
 16378              	.LBB960:
 16379              	.LBB955:
 16380              	.LBB949:
 16381              	.LBB945:
 16382              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16383              		.loc 3 107 10 view .LVU5578
 16384 568f 31C0     		xor	eax, eax	#
 16385              	.LBE945:
 16386              	.LBE949:
 16387              	.LBE955:
 16388              	.LBE960:
 16389              	# sieve_extend.c:1194: }
 16390              		.loc 1 1194 1 view .LVU5579
 16391 5691 5D       		pop	rbp	#
 16392              		.cfi_def_cfa_offset 40
 16393 5692 415C     		pop	r12	#
 16394              		.cfi_def_cfa_offset 32
 16395              	.LVL996:
 16396              		.loc 1 1194 1 view .LVU5580
 16397 5694 415D     		pop	r13	#
 16398              		.cfi_def_cfa_offset 24
 16399 5696 415E     		pop	r14	#
 16400              		.cfi_def_cfa_offset 16
 16401 5698 415F     		pop	r15	#
 16402              		.cfi_def_cfa_offset 8
 16403              	.LBB961:
 16404              	.LBB956:
 16405              	.LBB950:
 16406              	.LBB946:
 16407              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16408              		.loc 3 107 10 view .LVU5581
 16409 569a E9000000 		jmp	__printf_chk@PLT	#
 16409      00
 16410              	.LVL997:
 16411 569f 90       		.p2align 4,,7
 16412              		.p2align 3
 16413              	.L1335:
 16414              		.cfi_restore_state
 16415              		.loc 3 107 10 view .LVU5582
 16416              	.LBE946:
 16417              	.LBE950:
 16418              	.LBB951:
 16419              	.LBB938:
 16420              	.LBB932:
 16421              	.LBI932:
1179:sieve_extend.c ****     if (n < 1000) {
 16422              		.loc 1 1179 6 is_stmt 1 view .LVU5583
 16423              	.LBB933:
1181:sieve_extend.c ****         return;
 16424              		.loc 1 1181 9 view .LVU5584
 16425              	.LBB934:
 16426              	.LBI934:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccRwwoRx.s 			page 437


 16427              		.loc 3 105 1 view .LVU5585
 16428              	.LBB935:
 16429              		.loc 3 107 3 view .LVU5586
 16430              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16431              		.loc 3 107 10 is_stmt 0 view .LVU5587
 16432 56a0 4489EA   		mov	edx, r13d	#, _8
 16433              	.LVL998:
 16434              		.loc 3 107 10 view .LVU5588
 16435 56a3 488D3500 		lea	rsi, .LC26[rip]	#,
 16435      000000
 16436 56aa BF010000 		mov	edi, 1	#,
 16436      00
 16437 56af 31C0     		xor	eax, eax	#
 16438 56b1 E8000000 		call	__printf_chk@PLT	#
 16438      00
 16439              	.LVL999:
 16440              		.loc 3 107 10 view .LVU5589
 16441              	.LBE935:
 16442              	.LBE934:
1182:sieve_extend.c ****     }
 16443              		.loc 1 1182 9 is_stmt 1 view .LVU5590
 16444 56b6 EBAF     		jmp	.L1329	#
 16445              	.LVL1000:
 16446              		.p2align 4,,7
 16447              		.p2align 3
 16448              	.L1334:
1182:sieve_extend.c ****     }
 16449              		.loc 1 1182 9 is_stmt 0 view .LVU5591
 16450              	.LBE933:
 16451              	.LBE932:
 16452              	.LBE938:
 16453              	.LBE951:
 16454              	.LBE956:
 16455              	.LBE961:
1190:sieve_extend.c ****         n = -n;
 16456              		.loc 1 1190 9 is_stmt 1 view .LVU5592
 16457              	.LBB962:
 16458              	.LBI962:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16459              		.loc 3 105 1 view .LVU5593
 16460              	.LBB963:
 16461              		.loc 3 107 3 view .LVU5594
 16462              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16463              		.loc 3 107 10 is_stmt 0 view .LVU5595
 16464 56b8 BF2D0000 		mov	edi, 45	#,
 16464      00
 16465              	.LVL1001:
 16466              		.loc 3 107 10 view .LVU5596
 16467              	.LBE963:
 16468              	.LBE962:
 16469              	# sieve_extend.c:1191:         n = -n;
1191:sieve_extend.c ****     }
 16470              		.loc 1 1191 11 view .LVU5597
 16471 56bd 41F7DC   		neg	r12d	# n
 16472              	.LVL1002:
 16473              	.LBB965:
 16474              	.LBB964:
GAS LISTING /tmp/ccRwwoRx.s 			page 438


 16475              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16476              		.loc 3 107 10 view .LVU5598
 16477 56c0 E8000000 		call	putchar@PLT	#
 16477      00
 16478              	.LVL1003:
 16479              		.loc 3 107 10 view .LVU5599
 16480              	.LBE964:
 16481              	.LBE965:
1191:sieve_extend.c ****     }
 16482              		.loc 1 1191 9 is_stmt 1 view .LVU5600
1191:sieve_extend.c ****     }
 16483              		.loc 1 1191 9 is_stmt 0 view .LVU5601
 16484 56c5 E9E4FEFF 		jmp	.L1326	#
 16484      FF
 16485              	.LVL1004:
 16486 56ca 660F1F44 		.p2align 4,,7
 16486      0000
 16487              		.p2align 3
 16488              	.L1336:
 16489              	.LBB966:
 16490              	.LBB957:
 16491              	.LBB952:
 16492              	.LBB939:
 16493              	.LBB936:
 16494              	.LBB924:
 16495              	.LBB919:
 16496              	.LBI919:
1179:sieve_extend.c ****     if (n < 1000) {
 16497              		.loc 1 1179 6 is_stmt 1 view .LVU5602
 16498              	.LBB920:
1181:sieve_extend.c ****         return;
 16499              		.loc 1 1181 9 view .LVU5603
 16500              	.LBB921:
 16501              	.LBI921:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16502              		.loc 3 105 1 view .LVU5604
 16503              	.LBB922:
 16504              		.loc 3 107 3 view .LVU5605
 16505              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16506              		.loc 3 107 10 is_stmt 0 view .LVU5606
 16507 56d0 4489F2   		mov	edx, r14d	#, _10
 16508              	.LVL1005:
 16509              		.loc 3 107 10 view .LVU5607
 16510 56d3 488D3500 		lea	rsi, .LC26[rip]	#,
 16510      000000
 16511 56da BF010000 		mov	edi, 1	#,
 16511      00
 16512 56df 31C0     		xor	eax, eax	#
 16513 56e1 E8000000 		call	__printf_chk@PLT	#
 16513      00
 16514              	.LVL1006:
 16515              		.loc 3 107 10 view .LVU5608
 16516              	.LBE922:
 16517              	.LBE921:
1182:sieve_extend.c ****     }
 16518              		.loc 1 1182 9 is_stmt 1 view .LVU5609
 16519 56e6 E953FFFF 		jmp	.L1331	#
GAS LISTING /tmp/ccRwwoRx.s 			page 439


 16519      FF
 16520              	.LBE920:
 16521              	.LBE919:
 16522              	.LBE924:
 16523              	.LBE936:
 16524              	.LBE939:
 16525              	.LBE952:
 16526              	.LBE957:
 16527              	.LBE966:
 16528              		.cfi_endproc
 16529              	.LFE91:
 16531 56eb 0F1F4400 		.p2align 4
 16531      00
 16532              		.globl	benchmark
 16534              	benchmark:
 16535              	.LVL1007:
 16536              	.LFB92:
1195:sieve_extend.c **** 
1196:sieve_extend.c **** int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bitword_t* bitstorage, cou
 16537              		.loc 1 1196 113 view -0
 16538              		.cfi_startproc
 16539              		.loc 1 1196 113 is_stmt 0 view .LVU5611
 16540 56f0 F30F1EFA 		endbr64	
 16541 56f4 4157     		push	r15	#
 16542              		.cfi_def_cfa_offset 16
 16543              		.cfi_offset 15, -16
 16544 56f6 4156     		push	r14	#
 16545              		.cfi_def_cfa_offset 24
 16546              		.cfi_offset 14, -24
 16547 56f8 4155     		push	r13	#
 16548              		.cfi_def_cfa_offset 32
 16549              		.cfi_offset 13, -32
 16550 56fa 4989D5   		mov	r13, rdx	# max, tmp138
 16551 56fd 4154     		push	r12	#
 16552              		.cfi_def_cfa_offset 40
 16553              		.cfi_offset 12, -40
 16554              	# sieve_extend.c:1198:     int passes = 0;
1197:sieve_extend.c ****     struct timespec start_time,end_time;
1198:sieve_extend.c ****     int passes = 0;
 16555              		.loc 1 1198 9 view .LVU5612
 16556 56ff 4531E4   		xor	r12d, r12d	# <retval>
 16557              	# sieve_extend.c:1196: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1196:sieve_extend.c ****     struct timespec start_time,end_time;
 16558              		.loc 1 1196 113 view .LVU5613
 16559 5702 55       		push	rbp	#
 16560              		.cfi_def_cfa_offset 48
 16561              		.cfi_offset 6, -48
 16562 5703 4889F5   		mov	rbp, rsi	# bitstorage, tmp137
 16563 5706 53       		push	rbx	#
 16564              		.cfi_def_cfa_offset 56
 16565              		.cfi_offset 3, -56
 16566 5707 4889FB   		mov	rbx, rdi	# function, tmp136
 16567              	# sieve_extend.c:1200:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1199:sieve_extend.c ****     double elapsed_time = 0;
1200:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16568              		.loc 1 1200 5 view .LVU5614
 16569 570a BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 440


 16569      00
 16570              	.LVL1008:
 16571              	# sieve_extend.c:1196: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1196:sieve_extend.c ****     struct timespec start_time,end_time;
 16572              		.loc 1 1196 113 view .LVU5615
 16573 570f 488D6424 		lea	rsp, -72[rsp]	#,
 16573      B8
 16574              		.cfi_def_cfa_offset 128
 16575              	# sieve_extend.c:1196: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1196:sieve_extend.c ****     struct timespec start_time,end_time;
 16576              		.loc 1 1196 113 view .LVU5616
 16577 5714 C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, tmp135
 16577      2408
 16578              	# sieve_extend.c:1200:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16579              		.loc 1 1200 5 view .LVU5617
 16580 571a 488D7424 		lea	rsi, 16[rsp]	# tmp99,
 16580      10
 16581              	.LVL1009:
 16582              	# sieve_extend.c:1196: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1196:sieve_extend.c ****     struct timespec start_time,end_time;
 16583              		.loc 1 1196 113 view .LVU5618
 16584 571f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp139, MEM[(<address-space-1> long unsigned int *)40B]
 16584      25280000 
 16584      00
 16585 5728 48894424 		mov	QWORD PTR 56[rsp], rax	# D.7497, tmp139
 16585      38
 16586 572d 31C0     		xor	eax, eax	# tmp139
1197:sieve_extend.c ****     int passes = 0;
 16587              		.loc 1 1197 5 is_stmt 1 view .LVU5619
1198:sieve_extend.c ****     double elapsed_time = 0;
 16588              		.loc 1 1198 5 view .LVU5620
 16589              	.LVL1010:
1199:sieve_extend.c ****     double elapsed_time = 0;
 16590              		.loc 1 1199 5 view .LVU5621
 16591              		.loc 1 1200 5 view .LVU5622
 16592 572f E8000000 		call	clock_gettime@PLT	#
 16592      00
 16593              	.LVL1011:
1201:sieve_extend.c ****     while (elapsed_time <= max_time) {
 16594              		.loc 1 1201 5 view .LVU5623
 16595              		.loc 1 1201 11 view .LVU5624
 16596 5734 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# max_time, %sfp
 16596      2408
 16597 573a C5F92F2D 		vcomisd	xmm5, QWORD PTR .LC6[rip]	# max_time,
 16597      00000000 
 16598 5742 0F827801 		jb	.L1337	#,
 16598      0000
 16599 5748 4C8D7424 		lea	r14, 32[rsp]	# tmp111,
 16599      20
 16600              	.LVL1012:
 16601              	.L1340:
1202:sieve_extend.c ****         function(bitstorage, max);
 16602              		.loc 1 1202 9 view .LVU5625
 16603 574d 4C89EE   		mov	rsi, r13	#, max
 16604 5750 4889EF   		mov	rdi, rbp	#, bitstorage
 16605 5753 FFD3     		call	rbx	# function
 16606              	.LVL1013:
GAS LISTING /tmp/ccRwwoRx.s 			page 441


1203:sieve_extend.c ****         passes++;
 16607              		.loc 1 1203 9 view .LVU5626
 16608              	# sieve_extend.c:1204:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1204:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16609              		.loc 1 1204 9 is_stmt 0 view .LVU5627
 16610 5755 4C89F6   		mov	rsi, r14	#, tmp111
 16611 5758 BF010000 		mov	edi, 1	#,
 16611      00
 16612 575d E8000000 		call	clock_gettime@PLT	#
 16612      00
 16613              	.LVL1014:
 16614              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
1205:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16615              		.loc 1 1205 58 view .LVU5628
 16616 5762 C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 40[rsp]	# tmp102, end_time.tv_nsec
 16616      442428
 16617              	# sieve_extend.c:1203:         passes++;
1203:sieve_extend.c ****         passes++;
 16618              		.loc 1 1203 15 view .LVU5629
 16619 5769 458D7C24 		lea	r15d, 1[r12]	# tmp113,
 16619      01
 16620              	.LVL1015:
 16621              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16622              		.loc 1 1205 64 view .LVU5630
 16623 576e C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR 16[rsp]	# tmp103, start_time.tv_sec
 16623      4C2410
 16624              	# sieve_extend.c:1203:         passes++;
1203:sieve_extend.c ****         passes++;
 16625              		.loc 1 1203 15 view .LVU5631
 16626 5775 4589FC   		mov	r12d, r15d	# <retval>, tmp113
1204:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16627              		.loc 1 1204 9 is_stmt 1 view .LVU5632
 16628              		.loc 1 1205 9 view .LVU5633
 16629              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16630              		.loc 1 1205 104 is_stmt 0 view .LVU5634
 16631 5778 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 24[rsp]	# tmp105, start_time.tv_nsec
 16631      5C2418
 16632              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16633              		.loc 1 1205 40 view .LVU5635
 16634 577f C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp106, end_time.tv_sec
 16634      542420
 16635              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16636              		.loc 1 1201 11 view .LVU5636
 16637 5786 C5FB1064 		vmovsd	xmm4, QWORD PTR 8[rsp]	# max_time, %sfp
 16637      2408
 16638 578c C4E2F9BB 		vfmsub231sd	xmm1, xmm0, QWORD PTR .LC8[rip]	# _30, tmp102,
 16638      0D000000 
 16638      00
 16639 5795 C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _19, tmp106,
 16639      1D000000 
 16639      00
 16640              	.LVL1016:
1201:sieve_extend.c ****         function(bitstorage, max);
 16641              		.loc 1 1201 11 is_stmt 1 view .LVU5637
 16642              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16643              		.loc 1 1205 22 is_stmt 0 view .LVU5638
GAS LISTING /tmp/ccRwwoRx.s 			page 442


 16644 579e C5E358F1 		vaddsd	xmm6, xmm3, xmm1	# elapsed_time, _19, _30
 16645              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16646              		.loc 1 1201 11 view .LVU5639
 16647 57a2 C5F92FE6 		vcomisd	xmm4, xmm6	# max_time, elapsed_time
 16648 57a6 0F821401 		jb	.L1337	#,
 16648      0000
 16649              	.LVL1017:
1202:sieve_extend.c ****         passes++;
 16650              		.loc 1 1202 9 is_stmt 1 view .LVU5640
 16651 57ac 4C89EE   		mov	rsi, r13	#, max
 16652 57af 4889EF   		mov	rdi, rbp	#, bitstorage
 16653 57b2 FFD3     		call	rbx	# function
 16654              	.LVL1018:
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16655              		.loc 1 1203 9 view .LVU5641
 16656              	# sieve_extend.c:1204:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16657              		.loc 1 1204 9 is_stmt 0 view .LVU5642
 16658 57b4 4C89F6   		mov	rsi, r14	#, tmp111
 16659 57b7 BF010000 		mov	edi, 1	#,
 16659      00
 16660 57bc E8000000 		call	clock_gettime@PLT	#
 16660      00
 16661              	.LVL1019:
 16662              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16663              		.loc 1 1205 58 view .LVU5643
 16664 57c1 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, QWORD PTR 40[rsp]	# tmp114, end_time.tv_nsec
 16664      7C2428
 16665              	# sieve_extend.c:1203:         passes++;
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16666              		.loc 1 1203 15 view .LVU5644
 16667 57c8 4183C401 		add	r12d, 1	# <retval>,
 16668              	.LVL1020:
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16669              		.loc 1 1204 9 is_stmt 1 view .LVU5645
 16670              		.loc 1 1205 9 view .LVU5646
 16671              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16672              		.loc 1 1205 64 is_stmt 0 view .LVU5647
 16673 57cc C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 16[rsp]	# tmp115, start_time.tv_sec
 16673      442410
 16674              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16675              		.loc 1 1205 104 view .LVU5648
 16676 57d3 C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 24[rsp]	# tmp117, start_time.tv_nsec
 16676      4C2418
 16677              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16678              		.loc 1 1205 40 view .LVU5649
 16679 57da C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 32[rsp]	# tmp118, end_time.tv_sec
 16679      542420
 16680              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16681              		.loc 1 1201 11 view .LVU5650
 16682 57e1 C57B1064 		vmovsd	xmm12, QWORD PTR 8[rsp]	# max_time, %sfp
 16682      2408
 16683 57e7 C462C1BB 		vfmsub231sd	xmm8, xmm7, QWORD PTR .LC8[rip]	# _30, tmp114,
 16683      05000000 
 16683      00
GAS LISTING /tmp/ccRwwoRx.s 			page 443


 16684 57f0 C462A99D 		vfnmadd132sd	xmm9, xmm10, QWORD PTR .LC8[rip]	# _19, tmp118,
 16684      0D000000 
 16684      00
 16685              	.LVL1021:
1201:sieve_extend.c ****         function(bitstorage, max);
 16686              		.loc 1 1201 11 is_stmt 1 view .LVU5651
 16687              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16688              		.loc 1 1205 22 is_stmt 0 view .LVU5652
 16689 57f9 C4413358 		vaddsd	xmm11, xmm9, xmm8	# elapsed_time, _19, _30
 16689      D8
 16690              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16691              		.loc 1 1201 11 view .LVU5653
 16692 57fe C441792F 		vcomisd	xmm12, xmm11	# max_time, elapsed_time
 16692      E3
 16693 5803 0F82B700 		jb	.L1337	#,
 16693      0000
 16694              	.LVL1022:
1202:sieve_extend.c ****         passes++;
 16695              		.loc 1 1202 9 is_stmt 1 view .LVU5654
 16696 5809 4C89EE   		mov	rsi, r13	#, max
 16697 580c 4889EF   		mov	rdi, rbp	#, bitstorage
 16698 580f FFD3     		call	rbx	# function
 16699              	.LVL1023:
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16700              		.loc 1 1203 9 view .LVU5655
 16701              	# sieve_extend.c:1204:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16702              		.loc 1 1204 9 is_stmt 0 view .LVU5656
 16703 5811 4C89F6   		mov	rsi, r14	#, tmp111
 16704 5814 BF010000 		mov	edi, 1	#,
 16704      00
 16705 5819 E8000000 		call	clock_gettime@PLT	#
 16705      00
 16706              	.LVL1024:
 16707              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16708              		.loc 1 1205 58 view .LVU5657
 16709 581e C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 40[rsp]	# tmp121, end_time.tv_nsec
 16709      6C2428
 16710              	# sieve_extend.c:1203:         passes++;
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16711              		.loc 1 1203 15 view .LVU5658
 16712 5825 458D6702 		lea	r12d, 2[r15]	# <retval>,
 16713              	.LVL1025:
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16714              		.loc 1 1204 9 is_stmt 1 view .LVU5659
 16715              		.loc 1 1205 9 view .LVU5660
 16716              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16717              		.loc 1 1205 64 is_stmt 0 view .LVU5661
 16718 5829 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 16[rsp]	# tmp122, start_time.tv_sec
 16718      742410
 16719              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16720              		.loc 1 1205 104 view .LVU5662
 16721 5830 C461832A 		vcvtsi2sd	xmm15, xmm15, QWORD PTR 24[rsp]	# tmp124, start_time.tv_nsec
 16721      7C2418
 16722              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16723              		.loc 1 1205 40 view .LVU5663
GAS LISTING /tmp/ccRwwoRx.s 			page 444


 16724 5837 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 32[rsp]	# tmp125, end_time.tv_sec
 16724      6C2420
 16725              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16726              		.loc 1 1201 11 view .LVU5664
 16727 583e C5FB104C 		vmovsd	xmm1, QWORD PTR 8[rsp]	# max_time, %sfp
 16727      2408
 16728 5844 C46291BB 		vfmsub231sd	xmm14, xmm13, QWORD PTR .LC8[rip]	# _30, tmp121,
 16728      35000000 
 16728      00
 16729 584d C462D19D 		vfnmadd132sd	xmm15, xmm5, QWORD PTR .LC8[rip]	# _19, tmp125,
 16729      3D000000 
 16729      00
 16730              	.LVL1026:
1201:sieve_extend.c ****         function(bitstorage, max);
 16731              		.loc 1 1201 11 is_stmt 1 view .LVU5665
 16732              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16733              		.loc 1 1205 22 is_stmt 0 view .LVU5666
 16734 5856 C4C10358 		vaddsd	xmm0, xmm15, xmm14	# elapsed_time, _19, _30
 16734      C6
 16735              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16736              		.loc 1 1201 11 view .LVU5667
 16737 585b C5F92FC8 		vcomisd	xmm1, xmm0	# max_time, elapsed_time
 16738 585f 725F     		jb	.L1337	#,
 16739              	.LVL1027:
1202:sieve_extend.c ****         passes++;
 16740              		.loc 1 1202 9 is_stmt 1 view .LVU5668
 16741 5861 4C89EE   		mov	rsi, r13	#, max
 16742 5864 4889EF   		mov	rdi, rbp	#, bitstorage
 16743 5867 FFD3     		call	rbx	# function
 16744              	.LVL1028:
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16745              		.loc 1 1203 9 view .LVU5669
 16746              	# sieve_extend.c:1204:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16747              		.loc 1 1204 9 is_stmt 0 view .LVU5670
 16748 5869 4C89F6   		mov	rsi, r14	#, tmp111
 16749 586c BF010000 		mov	edi, 1	#,
 16749      00
 16750 5871 E8000000 		call	clock_gettime@PLT	#
 16750      00
 16751              	.LVL1029:
 16752              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16753              		.loc 1 1205 58 view .LVU5671
 16754 5876 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 40[rsp]	# tmp128, end_time.tv_nsec
 16754      5C2428
 16755              	# sieve_extend.c:1203:         passes++;
1203:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 16756              		.loc 1 1203 15 view .LVU5672
 16757 587d 458D6703 		lea	r12d, 3[r15]	# <retval>,
 16758              	.LVL1030:
1204:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16759              		.loc 1 1204 9 is_stmt 1 view .LVU5673
 16760              		.loc 1 1205 9 view .LVU5674
 16761              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16762              		.loc 1 1205 64 is_stmt 0 view .LVU5675
GAS LISTING /tmp/ccRwwoRx.s 			page 445


 16763 5881 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 16[rsp]	# tmp129, start_time.tv_sec
 16763      742410
 16764              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16765              		.loc 1 1205 104 view .LVU5676
 16766 5888 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 24[rsp]	# tmp131, start_time.tv_nsec
 16766      642418
 16767              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16768              		.loc 1 1205 40 view .LVU5677
 16769 588f C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp132, end_time.tv_sec
 16769      542420
 16770              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16771              		.loc 1 1201 11 view .LVU5678
 16772 5896 C57B1044 		vmovsd	xmm8, QWORD PTR 8[rsp]	# max_time, %sfp
 16772      2408
 16773 589c C4E2E1BB 		vfmsub231sd	xmm6, xmm3, QWORD PTR .LC8[rip]	# _30, tmp128,
 16773      35000000 
 16773      00
 16774 58a5 C4E2E99D 		vfnmadd132sd	xmm4, xmm2, QWORD PTR .LC8[rip]	# _19, tmp132,
 16774      25000000 
 16774      00
 16775              	.LVL1031:
1201:sieve_extend.c ****         function(bitstorage, max);
 16776              		.loc 1 1201 11 is_stmt 1 view .LVU5679
 16777              	# sieve_extend.c:1205:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16778              		.loc 1 1205 22 is_stmt 0 view .LVU5680
 16779 58ae C5DB58FE 		vaddsd	xmm7, xmm4, xmm6	# elapsed_time, _19, _30
 16780              	# sieve_extend.c:1201:     while (elapsed_time <= max_time) {
1201:sieve_extend.c ****         function(bitstorage, max);
 16781              		.loc 1 1201 11 view .LVU5681
 16782 58b2 C5792FC7 		vcomisd	xmm8, xmm7	# max_time, elapsed_time
 16783 58b6 0F8391FE 		jnb	.L1340	#,
 16783      FFFF
 16784              	.LVL1032:
 16785 58bc 0F1F4000 		.p2align 4
 16786              		.p2align 3
 16787              	.L1337:
 16788              	# sieve_extend.c:1208: }
1206:sieve_extend.c ****     }
1207:sieve_extend.c ****     return passes;
1208:sieve_extend.c **** }
 16789              		.loc 1 1208 1 view .LVU5682
 16790 58c0 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp140, D.7497
 16790      38
 16791 58c5 64483304 		xor	rax, QWORD PTR fs:40	# tmp140, MEM[(<address-space-1> long unsigned int *)40B]
 16791      25280000 
 16791      00
 16792 58ce 7513     		jne	.L1353	#,
 16793 58d0 488D6424 		lea	rsp, 72[rsp]	#,
 16793      48
 16794              		.cfi_remember_state
 16795              		.cfi_def_cfa_offset 56
 16796 58d5 4489E0   		mov	eax, r12d	#, <retval>
 16797 58d8 5B       		pop	rbx	#
 16798              		.cfi_def_cfa_offset 48
 16799              	.LVL1033:
 16800              		.loc 1 1208 1 view .LVU5683
GAS LISTING /tmp/ccRwwoRx.s 			page 446


 16801 58d9 5D       		pop	rbp	#
 16802              		.cfi_def_cfa_offset 40
 16803              	.LVL1034:
 16804              		.loc 1 1208 1 view .LVU5684
 16805 58da 415C     		pop	r12	#
 16806              		.cfi_def_cfa_offset 32
 16807 58dc 415D     		pop	r13	#
 16808              		.cfi_def_cfa_offset 24
 16809              	.LVL1035:
 16810              		.loc 1 1208 1 view .LVU5685
 16811 58de 415E     		pop	r14	#
 16812              		.cfi_def_cfa_offset 16
 16813 58e0 415F     		pop	r15	#
 16814              		.cfi_def_cfa_offset 8
 16815 58e2 C3       		ret	
 16816              	.LVL1036:
 16817              	.L1353:
 16818              		.cfi_restore_state
 16819              		.loc 1 1208 1 view .LVU5686
 16820 58e3 E8000000 		call	__stack_chk_fail@PLT	#
 16820      00
 16821              	.LVL1037:
 16822              		.cfi_endproc
 16823              	.LFE92:
 16825 58e8 0F1F8400 		.p2align 4
 16825      00000000 
 16826              		.globl	test
 16828              	test:
 16829              	.LVL1038:
 16830              	.LFB93:
1209:sieve_extend.c **** 
1210:sieve_extend.c **** void test(bitword_t* __restrict bitstorage, counter_t max) {
 16831              		.loc 1 1210 60 is_stmt 1 view -0
 16832              		.cfi_startproc
 16833              		.loc 1 1210 60 is_stmt 0 view .LVU5688
 16834 58f0 F30F1EFA 		endbr64	
 16835              	.LBB968:
1211:sieve_extend.c ****     //#pragma GCC unroll 16
1212:sieve_extend.c ****     #pragma GCC ivdep 
1213:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
 16836              		.loc 1 1213 10 is_stmt 1 view .LVU5689
 16837              	.LVL1039:
 16838              		.loc 1 1213 25 view .LVU5690
 16839              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
 16840              		.loc 1 1213 5 is_stmt 0 view .LVU5691
 16841 58f4 4885F6   		test	rsi, rsi	# max
 16842 58f7 0F846901 		je	.L1396	#,
 16842      0000
 16843 58fd 4889F1   		mov	rcx, rsi	# tmp97, max
 16844              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
 16845              		.loc 1 1213 20 view .LVU5692
 16846 5900 31C0     		xor	eax, eax	# x
 16847 5902 83E107   		and	ecx, 7	# tmp97,
 16848              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
1214:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16849              		.loc 1 1214 36 view .LVU5693
 16850 5905 BA010000 		mov	edx, 1	# tmp92,
GAS LISTING /tmp/ccRwwoRx.s 			page 447


 16850      00
 16851 590a 0F84AD00 		je	.L1356	#,
 16851      0000
 16852 5910 4883F901 		cmp	rcx, 1	# tmp97,
 16853 5914 0F848600 		je	.L1381	#,
 16853      0000
 16854 591a 4883F902 		cmp	rcx, 2	# tmp97,
 16855 591e 746C     		je	.L1382	#,
 16856 5920 4883F903 		cmp	rcx, 3	# tmp97,
 16857 5924 7452     		je	.L1383	#,
 16858 5926 4883F904 		cmp	rcx, 4	# tmp97,
 16859 592a 7438     		je	.L1384	#,
 16860 592c 4883F905 		cmp	rcx, 5	# tmp97,
 16861 5930 741E     		je	.L1385	#,
 16862 5932 4883F906 		cmp	rcx, 6	# tmp97,
 16863 5936 0F852C01 		jne	.L1397	#,
 16863      0000
 16864              	.LVL1040:
 16865              	.L1386:
 16866              		.loc 1 1214 9 is_stmt 1 view .LVU5694
 16867              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16868              		.loc 1 1214 20 is_stmt 0 view .LVU5695
 16869 593c 4989C1   		mov	r9, rax	# tmp122, x
 16870              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16871              		.loc 1 1214 36 view .LVU5696
 16872 593f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 16872      C2
 16873              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16874              		.loc 1 1214 20 view .LVU5697
 16875 5944 49C1E906 		shr	r9, 6	# tmp122,
 16876              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16877              		.loc 1 1213 33 view .LVU5698
 16878 5948 4883C001 		add	rax, 1	# x,
 16879              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16880              		.loc 1 1214 36 view .LVU5699
 16881 594c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_4, tmp123
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16882              		.loc 1 1213 32 is_stmt 1 view .LVU5700
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16883              		.loc 1 1213 25 view .LVU5701
 16884              	.L1385:
 16885              		.loc 1 1214 9 view .LVU5702
 16886              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16887              		.loc 1 1214 20 is_stmt 0 view .LVU5703
 16888 5950 4989C2   		mov	r10, rax	# tmp124, x
 16889              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16890              		.loc 1 1214 36 view .LVU5704
 16891 5953 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 16891      DA
 16892              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16893              		.loc 1 1214 20 view .LVU5705
 16894 5958 49C1EA06 		shr	r10, 6	# tmp124,
 16895              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16896              		.loc 1 1213 33 view .LVU5706
 16897 595c 4883C001 		add	rax, 1	# x,
GAS LISTING /tmp/ccRwwoRx.s 			page 448


 16898              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16899              		.loc 1 1214 36 view .LVU5707
 16900 5960 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp125
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16901              		.loc 1 1213 32 is_stmt 1 view .LVU5708
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16902              		.loc 1 1213 25 view .LVU5709
 16903              	.L1384:
 16904              		.loc 1 1214 9 view .LVU5710
 16905              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16906              		.loc 1 1214 20 is_stmt 0 view .LVU5711
 16907 5964 4889C1   		mov	rcx, rax	# tmp126, x
 16908              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16909              		.loc 1 1214 36 view .LVU5712
 16910 5967 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 16910      CA
 16911              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16912              		.loc 1 1214 20 view .LVU5713
 16913 596c 48C1E906 		shr	rcx, 6	# tmp126,
 16914              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16915              		.loc 1 1213 33 view .LVU5714
 16916 5970 4883C001 		add	rax, 1	# x,
 16917              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16918              		.loc 1 1214 36 view .LVU5715
 16919 5974 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_4, tmp127
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16920              		.loc 1 1213 32 is_stmt 1 view .LVU5716
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16921              		.loc 1 1213 25 view .LVU5717
 16922              	.L1383:
 16923              		.loc 1 1214 9 view .LVU5718
 16924              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16925              		.loc 1 1214 20 is_stmt 0 view .LVU5719
 16926 5978 4989C2   		mov	r10, rax	# tmp128, x
 16927              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16928              		.loc 1 1214 36 view .LVU5720
 16929 597b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 16929      C2
 16930              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16931              		.loc 1 1214 20 view .LVU5721
 16932 5980 49C1EA06 		shr	r10, 6	# tmp128,
 16933              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16934              		.loc 1 1213 33 view .LVU5722
 16935 5984 4883C001 		add	rax, 1	# x,
 16936              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16937              		.loc 1 1214 36 view .LVU5723
 16938 5988 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_4, tmp129
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16939              		.loc 1 1213 32 is_stmt 1 view .LVU5724
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16940              		.loc 1 1213 25 view .LVU5725
 16941              	.L1382:
 16942              		.loc 1 1214 9 view .LVU5726
 16943              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16944              		.loc 1 1214 20 is_stmt 0 view .LVU5727
GAS LISTING /tmp/ccRwwoRx.s 			page 449


 16945 598c 4989C3   		mov	r11, rax	# tmp130, x
 16946              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16947              		.loc 1 1214 36 view .LVU5728
 16948 598f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 16948      CA
 16949              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16950              		.loc 1 1214 20 view .LVU5729
 16951 5994 49C1EB06 		shr	r11, 6	# tmp130,
 16952              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16953              		.loc 1 1213 33 view .LVU5730
 16954 5998 4883C001 		add	rax, 1	# x,
 16955              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16956              		.loc 1 1214 36 view .LVU5731
 16957 599c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp131
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16958              		.loc 1 1213 32 is_stmt 1 view .LVU5732
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16959              		.loc 1 1213 25 view .LVU5733
 16960              	.L1381:
 16961              		.loc 1 1214 9 view .LVU5734
 16962              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16963              		.loc 1 1214 20 is_stmt 0 view .LVU5735
 16964 59a0 4989C1   		mov	r9, rax	# tmp132, x
 16965              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16966              		.loc 1 1214 36 view .LVU5736
 16967 59a3 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 16967      D2
 16968              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16969              		.loc 1 1214 20 view .LVU5737
 16970 59a8 49C1E906 		shr	r9, 6	# tmp132,
 16971              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16972              		.loc 1 1213 33 view .LVU5738
 16973 59ac 4883C001 		add	rax, 1	# x,
 16974              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16975              		.loc 1 1214 36 view .LVU5739
 16976 59b0 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp133
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16977              		.loc 1 1213 32 is_stmt 1 view .LVU5740
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16978              		.loc 1 1213 25 view .LVU5741
 16979              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16980              		.loc 1 1213 5 is_stmt 0 view .LVU5742
 16981 59b4 4839C6   		cmp	rsi, rax	# max, x
 16982 59b7 0F84BD00 		je	.L1398	#,
 16982      0000
 16983              	.L1356:
 16984              		.loc 1 1214 9 is_stmt 1 discriminator 3 view .LVU5743
 16985              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16986              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5744
 16987 59bd 488D4801 		lea	rcx, 1[rax]	# tmp98,
 16988              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16989              		.loc 1 1214 20 discriminator 3 view .LVU5745
 16990 59c1 4989C3   		mov	r11, rax	# tmp90, x
GAS LISTING /tmp/ccRwwoRx.s 			page 450


 16991 59c4 49C1EB06 		shr	r11, 6	# tmp90,
 16992 59c8 4989C9   		mov	r9, rcx	# tmp100, tmp98
 16993 59cb 49C1E906 		shr	r9, 6	# tmp100,
 16994              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 16995              		.loc 1 1214 36 discriminator 3 view .LVU5746
 16996 59cf C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 16996      C2
 16997 59d4 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 16997      D2
 16998 59d9 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_4, tmp93
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 16999              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5747
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17000              		.loc 1 1213 25 discriminator 3 view .LVU5748
 17001              		.loc 1 1214 9 discriminator 3 view .LVU5749
 17002              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17003              		.loc 1 1214 36 is_stmt 0 discriminator 3 view .LVU5750
 17004 59dd 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp101
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17005              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5751
 17006              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17007              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5752
 17008 59e1 4C8D5802 		lea	r11, 2[rax]	# x,
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17009              		.loc 1 1213 25 is_stmt 1 discriminator 3 view .LVU5753
 17010              		.loc 1 1214 9 discriminator 3 view .LVU5754
 17011              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17012              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5755
 17013 59e5 4C8D4803 		lea	r9, 3[rax]	# x,
 17014              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17015              		.loc 1 1214 20 discriminator 3 view .LVU5756
 17016 59e9 4D89D8   		mov	r8, r11	# tmp103, x
 17017 59ec 49C1E806 		shr	r8, 6	# tmp103,
 17018 59f0 4D89CA   		mov	r10, r9	# tmp106, x
 17019 59f3 49C1EA06 		shr	r10, 6	# tmp106,
 17020              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17021              		.loc 1 1214 36 discriminator 3 view .LVU5757
 17022 59f7 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 17022      CA
 17023 59fc C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 17023      DA
 17024 5a01 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_4, tmp104
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17025              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5758
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17026              		.loc 1 1213 25 discriminator 3 view .LVU5759
 17027              		.loc 1 1214 9 discriminator 3 view .LVU5760
 17028              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17029              		.loc 1 1214 36 is_stmt 0 discriminator 3 view .LVU5761
 17030 5a05 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp107
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17031              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5762
 17032              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17033              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5763
GAS LISTING /tmp/ccRwwoRx.s 			page 451


 17034 5a09 488D4804 		lea	rcx, 4[rax]	# x,
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17035              		.loc 1 1213 25 is_stmt 1 discriminator 3 view .LVU5764
 17036              		.loc 1 1214 9 discriminator 3 view .LVU5765
 17037              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17038              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5766
 17039 5a0d 4C8D5005 		lea	r10, 5[rax]	# x,
 17040              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17041              		.loc 1 1214 20 discriminator 3 view .LVU5767
 17042 5a11 4989C8   		mov	r8, rcx	# tmp109, x
 17043 5a14 49C1E806 		shr	r8, 6	# tmp109,
 17044 5a18 4D89D3   		mov	r11, r10	# tmp112, x
 17045 5a1b 49C1EB06 		shr	r11, 6	# tmp112,
 17046              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17047              		.loc 1 1214 36 discriminator 3 view .LVU5768
 17048 5a1f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 17048      CA
 17049 5a24 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 17049      CA
 17050 5a29 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_4, tmp110
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17051              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5769
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17052              		.loc 1 1213 25 discriminator 3 view .LVU5770
 17053              		.loc 1 1214 9 discriminator 3 view .LVU5771
 17054              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17055              		.loc 1 1214 36 is_stmt 0 discriminator 3 view .LVU5772
 17056 5a2d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp113
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17057              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5773
 17058              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17059              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5774
 17060 5a31 4C8D4806 		lea	r9, 6[rax]	# x,
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17061              		.loc 1 1213 25 is_stmt 1 discriminator 3 view .LVU5775
 17062              		.loc 1 1214 9 discriminator 3 view .LVU5776
 17063              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17064              		.loc 1 1213 33 is_stmt 0 discriminator 3 view .LVU5777
 17065 5a35 4C8D5807 		lea	r11, 7[rax]	# x,
 17066              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17067              		.loc 1 1214 20 discriminator 3 view .LVU5778
 17068 5a39 4D89C8   		mov	r8, r9	# tmp115, x
 17069              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17070              		.loc 1 1214 36 discriminator 3 view .LVU5779
 17071 5a3c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 17071      D2
 17072              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17073              		.loc 1 1213 33 discriminator 3 view .LVU5780
 17074 5a41 4883C008 		add	rax, 8	# x,
 17075              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17076              		.loc 1 1214 20 discriminator 3 view .LVU5781
 17077 5a45 49C1E806 		shr	r8, 6	# tmp115,
 17078 5a49 4D89D9   		mov	r9, r11	# tmp118, x
GAS LISTING /tmp/ccRwwoRx.s 			page 452


 17079 5a4c 49C1E906 		shr	r9, 6	# tmp118,
 17080              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17081              		.loc 1 1213 5 discriminator 3 view .LVU5782
 17082 5a50 4839C6   		cmp	rsi, rax	# max, x
 17083              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17084              		.loc 1 1214 36 discriminator 3 view .LVU5783
 17085 5a53 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 17085      CA
 17086 5a58 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_4, tmp116
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17087              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5784
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17088              		.loc 1 1213 25 discriminator 3 view .LVU5785
 17089              		.loc 1 1214 9 discriminator 3 view .LVU5786
 17090              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
 17091              		.loc 1 1214 36 is_stmt 0 discriminator 3 view .LVU5787
 17092 5a5c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_4, tmp119
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17093              		.loc 1 1213 32 is_stmt 1 discriminator 3 view .LVU5788
 17094              	.LVL1041:
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17095              		.loc 1 1213 25 discriminator 3 view .LVU5789
 17096              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17097              		.loc 1 1213 5 is_stmt 0 discriminator 3 view .LVU5790
 17098 5a60 0F8557FF 		jne	.L1356	#,
 17098      FFFF
 17099              	.LVL1042:
 17100              	.L1396:
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17101              		.loc 1 1213 5 discriminator 3 view .LVU5791
 17102              	.LBE968:
 17103              	# sieve_extend.c:1216: }
1215:sieve_extend.c ****     }
1216:sieve_extend.c **** }
 17104              		.loc 1 1216 1 view .LVU5792
 17105 5a66 C3       		ret	
 17106              	.LVL1043:
 17107              		.p2align 4,,7
 17108 5a67 90       		.p2align 3
 17109              	.L1397:
 17110              	.LBB969:
1214:sieve_extend.c ****     }
 17111              		.loc 1 1214 9 is_stmt 1 view .LVU5793
 17112              	# sieve_extend.c:1214:         bitstorage[wordindex(x)] = markmask(x);
1214:sieve_extend.c ****     }
 17113              		.loc 1 1214 36 is_stmt 0 view .LVU5794
 17114 5a68 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_4,
 17114      01000000 
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17115              		.loc 1 1213 32 is_stmt 1 view .LVU5795
 17116              	.LVL1044:
 17117              	# sieve_extend.c:1213:     for (counter_t x=0; x<max; x++) {
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17118              		.loc 1 1213 33 is_stmt 0 view .LVU5796
 17119 5a70 B8010000 		mov	eax, 1	# x,
GAS LISTING /tmp/ccRwwoRx.s 			page 453


 17119      00
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17120              		.loc 1 1213 25 is_stmt 1 view .LVU5797
 17121 5a75 E9C2FEFF 		jmp	.L1386	#
 17121      FF
 17122              	.L1398:
1213:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 17123              		.loc 1 1213 25 is_stmt 0 view .LVU5798
 17124 5a7a C3       		ret	
 17125              	.LBE969:
 17126              		.cfi_endproc
 17127              	.LFE93:
 17129 5a7b 0F1F4400 		.p2align 4
 17129      00
 17130              		.globl	test2
 17132              	test2:
 17133              	.LFB107:
 17134              		.cfi_startproc
 17135 5a80 F30F1EFA 		endbr64	
 17136 5a84 4885F6   		test	rsi, rsi	# max
 17137 5a87 0F846901 		je	.L1441	#,
 17137      0000
 17138 5a8d 4889F1   		mov	rcx, rsi	# tmp97, max
 17139 5a90 31C0     		xor	eax, eax	# x
 17140 5a92 83E107   		and	ecx, 7	# tmp97,
 17141 5a95 BA010000 		mov	edx, 1	# tmp92,
 17141      00
 17142 5a9a 0F84AD00 		je	.L1401	#,
 17142      0000
 17143 5aa0 4883F901 		cmp	rcx, 1	# tmp97,
 17144 5aa4 0F848600 		je	.L1426	#,
 17144      0000
 17145 5aaa 4883F902 		cmp	rcx, 2	# tmp97,
 17146 5aae 746C     		je	.L1427	#,
 17147 5ab0 4883F903 		cmp	rcx, 3	# tmp97,
 17148 5ab4 7452     		je	.L1428	#,
 17149 5ab6 4883F904 		cmp	rcx, 4	# tmp97,
 17150 5aba 7438     		je	.L1429	#,
 17151 5abc 4883F905 		cmp	rcx, 5	# tmp97,
 17152 5ac0 741E     		je	.L1430	#,
 17153 5ac2 4883F906 		cmp	rcx, 6	# tmp97,
 17154 5ac6 0F852C01 		jne	.L1442	#,
 17154      0000
 17155              	.L1431:
 17156 5acc 4989C1   		mov	r9, rax	# tmp122, x
 17157 5acf C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 17157      C2
 17158 5ad4 49C1E906 		shr	r9, 6	# tmp122,
 17159 5ad8 4883C001 		add	rax, 1	# x,
 17160 5adc 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_9, tmp123
 17161              	.L1430:
 17162 5ae0 4989C2   		mov	r10, rax	# tmp124, x
 17163 5ae3 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 17163      DA
 17164 5ae8 49C1EA06 		shr	r10, 6	# tmp124,
 17165 5aec 4883C001 		add	rax, 1	# x,
 17166 5af0 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp125
GAS LISTING /tmp/ccRwwoRx.s 			page 454


 17167              	.L1429:
 17168 5af4 4889C1   		mov	rcx, rax	# tmp126, x
 17169 5af7 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 17169      CA
 17170 5afc 48C1E906 		shr	rcx, 6	# tmp126,
 17171 5b00 4883C001 		add	rax, 1	# x,
 17172 5b04 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_9, tmp127
 17173              	.L1428:
 17174 5b08 4989C2   		mov	r10, rax	# tmp128, x
 17175 5b0b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 17175      C2
 17176 5b10 49C1EA06 		shr	r10, 6	# tmp128,
 17177 5b14 4883C001 		add	rax, 1	# x,
 17178 5b18 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_9, tmp129
 17179              	.L1427:
 17180 5b1c 4989C3   		mov	r11, rax	# tmp130, x
 17181 5b1f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 17181      CA
 17182 5b24 49C1EB06 		shr	r11, 6	# tmp130,
 17183 5b28 4883C001 		add	rax, 1	# x,
 17184 5b2c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp131
 17185              	.L1426:
 17186 5b30 4989C1   		mov	r9, rax	# tmp132, x
 17187 5b33 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 17187      D2
 17188 5b38 49C1E906 		shr	r9, 6	# tmp132,
 17189 5b3c 4883C001 		add	rax, 1	# x,
 17190 5b40 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp133
 17191 5b44 4839C6   		cmp	rsi, rax	# max, x
 17192 5b47 0F84BD00 		je	.L1443	#,
 17192      0000
 17193              	.L1401:
 17194 5b4d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 17195 5b51 4989C3   		mov	r11, rax	# tmp90, x
 17196 5b54 49C1EB06 		shr	r11, 6	# tmp90,
 17197 5b58 4989C9   		mov	r9, rcx	# tmp100, tmp98
 17198 5b5b 49C1E906 		shr	r9, 6	# tmp100,
 17199 5b5f C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 17199      C2
 17200 5b64 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 17200      D2
 17201 5b69 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_9, tmp93
 17202 5b6d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp101
 17203 5b71 4C8D5802 		lea	r11, 2[rax]	# x,
 17204 5b75 4C8D4803 		lea	r9, 3[rax]	# x,
 17205 5b79 4D89D8   		mov	r8, r11	# tmp103, x
 17206 5b7c 49C1E806 		shr	r8, 6	# tmp103,
 17207 5b80 4D89CA   		mov	r10, r9	# tmp106, x
 17208 5b83 49C1EA06 		shr	r10, 6	# tmp106,
 17209 5b87 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 17209      CA
 17210 5b8c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 17210      DA
 17211 5b91 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_9, tmp104
 17212 5b95 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp107
 17213 5b99 488D4804 		lea	rcx, 4[rax]	# x,
 17214 5b9d 4C8D5005 		lea	r10, 5[rax]	# x,
GAS LISTING /tmp/ccRwwoRx.s 			page 455


 17215 5ba1 4989C8   		mov	r8, rcx	# tmp109, x
 17216 5ba4 49C1E806 		shr	r8, 6	# tmp109,
 17217 5ba8 4D89D3   		mov	r11, r10	# tmp112, x
 17218 5bab 49C1EB06 		shr	r11, 6	# tmp112,
 17219 5baf C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 17219      CA
 17220 5bb4 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 17220      CA
 17221 5bb9 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_9, tmp110
 17222 5bbd 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp113
 17223 5bc1 4C8D4806 		lea	r9, 6[rax]	# x,
 17224 5bc5 4C8D5807 		lea	r11, 7[rax]	# x,
 17225 5bc9 4D89C8   		mov	r8, r9	# tmp115, x
 17226 5bcc C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 17226      D2
 17227 5bd1 4883C008 		add	rax, 8	# x,
 17228 5bd5 49C1E806 		shr	r8, 6	# tmp115,
 17229 5bd9 4D89D9   		mov	r9, r11	# tmp118, x
 17230 5bdc 49C1E906 		shr	r9, 6	# tmp118,
 17231 5be0 4839C6   		cmp	rsi, rax	# max, x
 17232 5be3 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 17232      CA
 17233 5be8 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_9, tmp116
 17234 5bec 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_9, tmp119
 17235 5bf0 0F8557FF 		jne	.L1401	#,
 17235      FFFF
 17236              	.L1441:
 17237 5bf6 C3       		ret	
 17238              		.p2align 4,,7
 17239 5bf7 90       		.p2align 3
 17240              	.L1442:
 17241 5bf8 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_9,
 17241      01000000 
 17242 5c00 B8010000 		mov	eax, 1	# x,
 17242      00
 17243 5c05 E9C2FEFF 		jmp	.L1431	#
 17243      FF
 17244              	.L1443:
 17245 5c0a C3       		ret	
 17246              		.cfi_endproc
 17247              	.LFE107:
 17249 5c0b 0F1F4400 		.p2align 4
 17249      00
 17250              		.globl	test3
 17252              	test3:
 17253              	.LVL1045:
 17254              	.LFB95:
1217:sieve_extend.c **** 
1218:sieve_extend.c **** void test2(bitword_t* __restrict bitstorage, counter_t max) {
1219:sieve_extend.c ****     //#pragma GCC unroll 16
1220:sieve_extend.c ****     #pragma GCC ivdep 
1221:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
1222:sieve_extend.c ****         *(bitstorage+wordindex(x)) = markmask(x);
1223:sieve_extend.c ****     }
1224:sieve_extend.c **** }
1225:sieve_extend.c **** 
1226:sieve_extend.c **** void test3(bitword_t* __restrict bitstorage, counter_t max) {
GAS LISTING /tmp/ccRwwoRx.s 			page 456


 17255              		.loc 1 1226 61 is_stmt 1 view -0
 17256              		.cfi_startproc
 17257              		.loc 1 1226 61 is_stmt 0 view .LVU5800
 17258 5c10 F30F1EFA 		endbr64	
1227:sieve_extend.c ****     for (register counter_t x=0; x<max; ) {
 17259              		.loc 1 1227 5 is_stmt 1 view .LVU5801
 17260              	.LBB970:
 17261              		.loc 1 1227 10 view .LVU5802
 17262              	.LVL1046:
 17263              		.loc 1 1227 34 view .LVU5803
 17264              	# sieve_extend.c:1227:     for (register counter_t x=0; x<max; ) {
 17265              		.loc 1 1227 5 is_stmt 0 view .LVU5804
 17266 5c14 4885F6   		test	rsi, rsi	# max
 17267 5c17 0F840401 		je	.L1468	#,
 17267      0000
 17268              	# sieve_extend.c:1227:     for (register counter_t x=0; x<max; ) {
 17269              		.loc 1 1227 29 view .LVU5805
 17270 5c1d 31C0     		xor	eax, eax	# x
 17271              	.LBB971:
 17272              	# sieve_extend.c:1233:             mask |= markmask(x);
1228:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
1229:sieve_extend.c ****         register counter_t index_word = wordstart(x);
1230:sieve_extend.c **** 
1231:sieve_extend.c ****         #pragma GCC ivdep
1232:sieve_extend.c ****         do {
1233:sieve_extend.c ****             mask |= markmask(x);
 17273              		.loc 1 1233 21 view .LVU5806
 17274 5c1f 41BA0100 		mov	r10d, 1	# tmp95,
 17274      0000
 17275              	.LVL1047:
 17276 5c25 66662E0F 		.p2align 4
 17276      1F840000 
 17276      000000
 17277              		.p2align 3
 17278              	.L1447:
1228:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17279              		.loc 1 1228 9 is_stmt 1 view .LVU5807
1229:sieve_extend.c **** 
 17280              		.loc 1 1229 9 view .LVU5808
 17281              	# sieve_extend.c:1229:         register counter_t index_word = wordstart(x);
1229:sieve_extend.c **** 
 17282              		.loc 1 1229 28 is_stmt 0 view .LVU5809
 17283 5c30 4989C0   		mov	r8, rax	# index_word, x
 17284              	# sieve_extend.c:1228:         register bitword_t mask = SAFE_ZERO;
1228:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17285              		.loc 1 1228 28 view .LVU5810
 17286 5c33 31C9     		xor	ecx, ecx	# mask
 17287              	# sieve_extend.c:1229:         register counter_t index_word = wordstart(x);
1229:sieve_extend.c **** 
 17288              		.loc 1 1229 28 view .LVU5811
 17289 5c35 4983E0C0 		and	r8, -64	# index_word,
 17290              	.LVL1048:
 17291              	.L1446:
 17292              		.loc 1 1233 13 is_stmt 1 discriminator 1 view .LVU5812
 17293              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17294              		.loc 1 1234 14 is_stmt 0 discriminator 1 view .LVU5813
GAS LISTING /tmp/ccRwwoRx.s 			page 457


 17295 5c39 4C8D4801 		lea	r9, 1[rax]	# tmp98,
 17296              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17297              		.loc 1 1233 21 discriminator 1 view .LVU5814
 17298 5c3d C4C2F9F7 		shlx	rdx, r10, rax	# tmp94, tmp95, x
 17298      D2
 17299              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
1235:sieve_extend.c ****         } while(wordstart(x)==index_word);
 17300              		.loc 1 1235 17 discriminator 1 view .LVU5815
 17301 5c42 4D89CB   		mov	r11, r9	# tmp96, x
 17302              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17303              		.loc 1 1233 18 discriminator 1 view .LVU5816
 17304 5c45 4809D1   		or	rcx, rdx	# mask, tmp94
 17305              	.LVL1049:
1234:sieve_extend.c ****             x++;
 17306              		.loc 1 1234 13 is_stmt 1 discriminator 1 view .LVU5817
 17307              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17308              		.loc 1 1235 17 is_stmt 0 discriminator 1 view .LVU5818
 17309 5c48 4983E3C0 		and	r11, -64	# tmp96,
 17310              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17311              		.loc 1 1234 14 discriminator 1 view .LVU5819
 17312 5c4c 4C89C8   		mov	rax, r9	# x, tmp98
 17313              	.LVL1050:
 17314              		.loc 1 1235 16 is_stmt 1 discriminator 1 view .LVU5820
 17315              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17316              		.loc 1 1235 9 is_stmt 0 discriminator 1 view .LVU5821
 17317 5c4f 4D39C3   		cmp	r11, r8	# tmp96, index_word
 17318 5c52 0F85B800 		jne	.L1467	#,
 17318      0000
1233:sieve_extend.c ****             x++;
 17319              		.loc 1 1233 13 is_stmt 1 view .LVU5822
 17320              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17321              		.loc 1 1234 14 is_stmt 0 view .LVU5823
 17322 5c58 4883C001 		add	rax, 1	# x,
 17323              	.LVL1051:
 17324              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17325              		.loc 1 1233 21 view .LVU5824
 17326 5c5c C4C2B1F7 		shlx	rdx, r10, r9	# tmp99, tmp95, x
 17326      D2
 17327              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17328              		.loc 1 1235 17 view .LVU5825
 17329 5c61 4989C3   		mov	r11, rax	# tmp100, x
 17330              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17331              		.loc 1 1233 18 view .LVU5826
 17332 5c64 4809D1   		or	rcx, rdx	# mask, tmp99
 17333              	.LVL1052:
1234:sieve_extend.c ****             x++;
 17334              		.loc 1 1234 13 is_stmt 1 view .LVU5827
 17335              		.loc 1 1235 16 view .LVU5828
 17336              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17337              		.loc 1 1235 17 is_stmt 0 view .LVU5829
 17338 5c67 4983E3C0 		and	r11, -64	# tmp100,
GAS LISTING /tmp/ccRwwoRx.s 			page 458


 17339              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17340              		.loc 1 1235 9 view .LVU5830
 17341 5c6b 4D39C3   		cmp	r11, r8	# tmp100, index_word
 17342 5c6e 0F859C00 		jne	.L1467	#,
 17342      0000
1233:sieve_extend.c ****             x++;
 17343              		.loc 1 1233 13 is_stmt 1 view .LVU5831
 17344              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17345              		.loc 1 1233 21 is_stmt 0 view .LVU5832
 17346 5c74 C4C2F9F7 		shlx	rax, r10, rax	# tmp101, tmp95, x
 17346      C2
 17347              	.LVL1053:
 17348              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17349              		.loc 1 1233 18 view .LVU5833
 17350 5c79 4809C1   		or	rcx, rax	# mask, tmp101
 17351              	.LVL1054:
1234:sieve_extend.c ****             x++;
 17352              		.loc 1 1234 13 is_stmt 1 view .LVU5834
 17353              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17354              		.loc 1 1234 14 is_stmt 0 view .LVU5835
 17355 5c7c 498D4102 		lea	rax, 2[r9]	# x,
 17356              	.LVL1055:
 17357              		.loc 1 1235 16 is_stmt 1 view .LVU5836
 17358              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17359              		.loc 1 1235 17 is_stmt 0 view .LVU5837
 17360 5c80 4889C2   		mov	rdx, rax	# tmp102, x
 17361 5c83 4883E2C0 		and	rdx, -64	# tmp102,
 17362              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17363              		.loc 1 1235 9 view .LVU5838
 17364 5c87 4C39C2   		cmp	rdx, r8	# tmp102, index_word
 17365 5c8a 0F858000 		jne	.L1467	#,
 17365      0000
1233:sieve_extend.c ****             x++;
 17366              		.loc 1 1233 13 is_stmt 1 view .LVU5839
 17367              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17368              		.loc 1 1233 21 is_stmt 0 view .LVU5840
 17369 5c90 C442F9F7 		shlx	r11, r10, rax	# tmp103, tmp95, x
 17369      DA
 17370              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17371              		.loc 1 1234 14 view .LVU5841
 17372 5c95 498D4103 		lea	rax, 3[r9]	# x,
 17373              	.LVL1056:
 17374              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17375              		.loc 1 1235 17 view .LVU5842
 17376 5c99 4889C2   		mov	rdx, rax	# tmp104, x
 17377              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17378              		.loc 1 1233 18 view .LVU5843
 17379 5c9c 4C09D9   		or	rcx, r11	# mask, tmp103
 17380              	.LVL1057:
1234:sieve_extend.c ****             x++;
 17381              		.loc 1 1234 13 is_stmt 1 view .LVU5844
GAS LISTING /tmp/ccRwwoRx.s 			page 459


 17382              		.loc 1 1235 16 view .LVU5845
 17383              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17384              		.loc 1 1235 17 is_stmt 0 view .LVU5846
 17385 5c9f 4883E2C0 		and	rdx, -64	# tmp104,
 17386              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17387              		.loc 1 1235 9 view .LVU5847
 17388 5ca3 4C39C2   		cmp	rdx, r8	# tmp104, index_word
 17389 5ca6 7568     		jne	.L1467	#,
1233:sieve_extend.c ****             x++;
 17390              		.loc 1 1233 13 is_stmt 1 view .LVU5848
 17391              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17392              		.loc 1 1233 21 is_stmt 0 view .LVU5849
 17393 5ca8 C4C2F9F7 		shlx	rax, r10, rax	# tmp105, tmp95, x
 17393      C2
 17394              	.LVL1058:
 17395              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17396              		.loc 1 1233 18 view .LVU5850
 17397 5cad 4809C1   		or	rcx, rax	# mask, tmp105
 17398              	.LVL1059:
1234:sieve_extend.c ****             x++;
 17399              		.loc 1 1234 13 is_stmt 1 view .LVU5851
 17400              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17401              		.loc 1 1234 14 is_stmt 0 view .LVU5852
 17402 5cb0 498D4104 		lea	rax, 4[r9]	# x,
 17403              	.LVL1060:
 17404              		.loc 1 1235 16 is_stmt 1 view .LVU5853
 17405              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17406              		.loc 1 1235 17 is_stmt 0 view .LVU5854
 17407 5cb4 4989C3   		mov	r11, rax	# tmp106, x
 17408 5cb7 4983E3C0 		and	r11, -64	# tmp106,
 17409              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17410              		.loc 1 1235 9 view .LVU5855
 17411 5cbb 4D39C3   		cmp	r11, r8	# tmp106, index_word
 17412 5cbe 7550     		jne	.L1467	#,
1233:sieve_extend.c ****             x++;
 17413              		.loc 1 1233 13 is_stmt 1 view .LVU5856
 17414              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17415              		.loc 1 1233 21 is_stmt 0 view .LVU5857
 17416 5cc0 C4C2F9F7 		shlx	rdx, r10, rax	# tmp107, tmp95, x
 17416      D2
 17417              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17418              		.loc 1 1234 14 view .LVU5858
 17419 5cc5 498D4105 		lea	rax, 5[r9]	# x,
 17420              	.LVL1061:
 17421              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17422              		.loc 1 1235 17 view .LVU5859
 17423 5cc9 4989C3   		mov	r11, rax	# tmp108, x
 17424              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17425              		.loc 1 1233 18 view .LVU5860
 17426 5ccc 4809D1   		or	rcx, rdx	# mask, tmp107
 17427              	.LVL1062:
GAS LISTING /tmp/ccRwwoRx.s 			page 460


1234:sieve_extend.c ****             x++;
 17428              		.loc 1 1234 13 is_stmt 1 view .LVU5861
 17429              		.loc 1 1235 16 view .LVU5862
 17430              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17431              		.loc 1 1235 17 is_stmt 0 view .LVU5863
 17432 5ccf 4983E3C0 		and	r11, -64	# tmp108,
 17433              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17434              		.loc 1 1235 9 view .LVU5864
 17435 5cd3 4D39C3   		cmp	r11, r8	# tmp108, index_word
 17436 5cd6 7538     		jne	.L1467	#,
1233:sieve_extend.c ****             x++;
 17437              		.loc 1 1233 13 is_stmt 1 view .LVU5865
 17438              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17439              		.loc 1 1233 21 is_stmt 0 view .LVU5866
 17440 5cd8 C4C2F9F7 		shlx	rax, r10, rax	# tmp109, tmp95, x
 17440      C2
 17441              	.LVL1063:
 17442              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17443              		.loc 1 1233 18 view .LVU5867
 17444 5cdd 4809C1   		or	rcx, rax	# mask, tmp109
 17445              	.LVL1064:
1234:sieve_extend.c ****             x++;
 17446              		.loc 1 1234 13 is_stmt 1 view .LVU5868
 17447              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17448              		.loc 1 1234 14 is_stmt 0 view .LVU5869
 17449 5ce0 498D4106 		lea	rax, 6[r9]	# x,
 17450              	.LVL1065:
 17451              		.loc 1 1235 16 is_stmt 1 view .LVU5870
 17452              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17453              		.loc 1 1235 17 is_stmt 0 view .LVU5871
 17454 5ce4 4889C2   		mov	rdx, rax	# tmp110, x
 17455 5ce7 4883E2C0 		and	rdx, -64	# tmp110,
 17456              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17457              		.loc 1 1235 9 view .LVU5872
 17458 5ceb 4C39C2   		cmp	rdx, r8	# tmp110, index_word
 17459 5cee 7520     		jne	.L1467	#,
1233:sieve_extend.c ****             x++;
 17460              		.loc 1 1233 13 is_stmt 1 view .LVU5873
 17461              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
 17462              		.loc 1 1233 21 is_stmt 0 view .LVU5874
 17463 5cf0 C442F9F7 		shlx	r11, r10, rax	# tmp111, tmp95, x
 17463      DA
 17464              	# sieve_extend.c:1234:             x++;
1234:sieve_extend.c ****             x++;
 17465              		.loc 1 1234 14 view .LVU5875
 17466 5cf5 498D4107 		lea	rax, 7[r9]	# x,
 17467              	.LVL1066:
 17468              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17469              		.loc 1 1235 17 view .LVU5876
 17470 5cf9 4989C1   		mov	r9, rax	# tmp112, x
 17471              	.LVL1067:
 17472              	# sieve_extend.c:1233:             mask |= markmask(x);
1233:sieve_extend.c ****             x++;
GAS LISTING /tmp/ccRwwoRx.s 			page 461


 17473              		.loc 1 1233 18 view .LVU5877
 17474 5cfc 4C09D9   		or	rcx, r11	# mask, tmp111
 17475              	.LVL1068:
1234:sieve_extend.c ****             x++;
 17476              		.loc 1 1234 13 is_stmt 1 view .LVU5878
 17477              		.loc 1 1235 16 view .LVU5879
 17478              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17479              		.loc 1 1235 17 is_stmt 0 view .LVU5880
 17480 5cff 4983E1C0 		and	r9, -64	# tmp112,
 17481              	# sieve_extend.c:1235:         } while(wordstart(x)==index_word);
 17482              		.loc 1 1235 9 view .LVU5881
 17483 5d03 4D39C1   		cmp	r9, r8	# tmp112, index_word
 17484 5d06 0F842DFF 		je	.L1446	#,
 17484      FFFF
 17485 5d0c 0F1F4000 		.p2align 4
 17486              		.p2align 3
 17487              	.L1467:
1236:sieve_extend.c ****         bitstorage[wordindex(index_word)] = mask;
 17488              		.loc 1 1236 9 is_stmt 1 view .LVU5882
 17489              	# sieve_extend.c:1236:         bitstorage[wordindex(index_word)] = mask;
 17490              		.loc 1 1236 20 is_stmt 0 view .LVU5883
 17491 5d10 49C1E806 		shr	r8, 6	# tmp97,
 17492              	.LVL1069:
 17493              		.loc 1 1236 20 view .LVU5884
 17494              	.LBE971:
 17495              	# sieve_extend.c:1227:     for (register counter_t x=0; x<max; ) {
1227:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17496              		.loc 1 1227 5 view .LVU5885
 17497 5d14 4839C6   		cmp	rsi, rax	# max, x
 17498              	.LBB972:
 17499              	# sieve_extend.c:1236:         bitstorage[wordindex(index_word)] = mask;
 17500              		.loc 1 1236 43 view .LVU5886
 17501 5d17 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_6, mask
 17502              		.loc 1 1236 43 view .LVU5887
 17503              	.LBE972:
1227:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17504              		.loc 1 1227 34 is_stmt 1 view .LVU5888
 17505              	# sieve_extend.c:1227:     for (register counter_t x=0; x<max; ) {
1227:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17506              		.loc 1 1227 5 is_stmt 0 view .LVU5889
 17507 5d1b 0F870FFF 		ja	.L1447	#,
 17507      FFFF
 17508              	.LVL1070:
 17509              	.L1468:
1227:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 17510              		.loc 1 1227 5 view .LVU5890
 17511              	.LBE970:
 17512              	# sieve_extend.c:1238: }
1237:sieve_extend.c ****     }
1238:sieve_extend.c **** }
 17513              		.loc 1 1238 1 view .LVU5891
 17514 5d21 C3       		ret	
 17515              		.cfi_endproc
 17516              	.LFE95:
 17518 5d22 66662E0F 		.p2align 4
 17518      1F840000 
 17518      0000000F 
GAS LISTING /tmp/ccRwwoRx.s 			page 462


 17518      1F00
 17519              		.globl	testshuffle_vector
 17521              	testshuffle_vector:
 17522              	.LVL1071:
 17523              	.LFB96:
1239:sieve_extend.c **** 
1240:sieve_extend.c **** //void test4(bitword_t* __restrict bitstorage, counter_t max) {
1241:sieve_extend.c **** //    bitvector_t* bitvector = (bitvector_t*) bitstorage;
1242:sieve_extend.c **** //    for (register int x=0; x<max; ) {
1243:sieve_extend.c **** //        register bitvector_t mask = {};
1244:sieve_extend.c **** //        register counter_t index_vector = vectorstart(x);
1245:sieve_extend.c **** //        register counter_t index_word = wordindex(x);
1246:sieve_extend.c **** //        register word = wordindex(x);
1247:sieve_extend.c **** //        #pragma GCC ivdep
1248:sieve_extend.c **** //        do {
1249:sieve_extend.c **** //            mask[word[] |= markmask(x);
1250:sieve_extend.c **** //            x++;
1251:sieve_extend.c **** //            word =
1252:sieve_extend.c **** //        } while(wordstart(x)==index_word);
1253:sieve_extend.c **** //        bitvector[wordindex(index_word)] = mask;
1254:sieve_extend.c **** //    }
1255:sieve_extend.c **** //}
1256:sieve_extend.c **** 
1257:sieve_extend.c **** void testshuffle_vector(bitword_t* __restrict bitstorage, counter_t max) {
 17524              		.loc 1 1257 74 is_stmt 1 view -0
 17525              		.cfi_startproc
 17526              		.loc 1 1257 74 is_stmt 0 view .LVU5893
 17527 5d30 F30F1EFA 		endbr64	
1258:sieve_extend.c ****     
1259:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
 17528              		.loc 1 1259 5 is_stmt 1 view .LVU5894
 17529              	.LVL1072:
1260:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*)bitstorage;
 17530              		.loc 1 1260 5 view .LVU5895
1261:sieve_extend.c ****     
1262:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 17531              		.loc 1 1262 5 view .LVU5896
 17532              	.LBB973:
 17533              		.loc 1 1262 10 view .LVU5897
 17534              		.loc 1 1262 25 view .LVU5898
 17535              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 17536              		.loc 1 1262 5 is_stmt 0 view .LVU5899
 17537 5d34 4883FE01 		cmp	rsi, 1	# max,
 17538 5d38 0F86C300 		jbe	.L1470	#,
 17538      0000
 17539              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
1263:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17540              		.loc 1 1263 39 view .LVU5900
 17541 5d3e 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 17542              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17543              		.loc 1 1262 5 view .LVU5901
 17544 5d42 4883FE15 		cmp	rsi, 21	# max,
 17545              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17546              		.loc 1 1263 42 view .LVU5902
 17547 5d46 B9010000 		mov	ecx, 1	# tmp134,
 17547      00
GAS LISTING /tmp/ccRwwoRx.s 			page 463


 17548              		.loc 1 1263 9 is_stmt 1 view .LVU5903
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17549              		.loc 1 1262 44 view .LVU5904
 17550              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17551              		.loc 1 1262 45 is_stmt 0 view .LVU5905
 17552 5d4b B8150000 		mov	eax, 21	# i,
 17552      00
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17553              		.loc 1 1262 25 is_stmt 1 view .LVU5906
 17554              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17555              		.loc 1 1262 5 is_stmt 0 view .LVU5907
 17556 5d50 0F86AB00 		jbe	.L1470	#,
 17556      0000
 17557              	.L1471:
 17558              		.loc 1 1263 9 is_stmt 1 discriminator 3 view .LVU5908
 17559              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17560              		.loc 1 1263 39 is_stmt 0 discriminator 3 view .LVU5909
 17561 5d56 4889C2   		mov	rdx, rax	# tmp169, i
 17562              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17563              		.loc 1 1262 45 discriminator 3 view .LVU5910
 17564 5d59 4C8D4814 		lea	r9, 20[rax]	# tmp167,
 17565              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17566              		.loc 1 1263 39 discriminator 3 view .LVU5911
 17567 5d5d 48C1EA06 		shr	rdx, 6	# tmp169,
 17568              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17569              		.loc 1 1263 42 discriminator 3 view .LVU5912
 17570 5d61 C462F9F7 		shlx	r8, rcx, rax	# tmp172, tmp134, i
 17570      C1
 17571              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17572              		.loc 1 1263 39 discriminator 3 view .LVU5913
 17573 5d66 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp172
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17574              		.loc 1 1262 44 is_stmt 1 discriminator 3 view .LVU5914
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17575              		.loc 1 1262 25 discriminator 3 view .LVU5915
 17576              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17577              		.loc 1 1262 5 is_stmt 0 discriminator 3 view .LVU5916
 17578 5d6a 4981F9FF 		cmp	r9, 511	# tmp167,
 17578      010000
 17579 5d71 0F878A00 		ja	.L1470	#,
 17579      0000
 17580 5d77 4C39CE   		cmp	rsi, r9	# max, tmp167
 17581 5d7a 0F868100 		jbe	.L1470	#,
 17581      0000
 17582              		.loc 1 1263 9 is_stmt 1 view .LVU5917
 17583              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17584              		.loc 1 1263 39 is_stmt 0 view .LVU5918
 17585 5d80 4D89CA   		mov	r10, r9	# tmp210, tmp167
 17586              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17587              		.loc 1 1262 45 view .LVU5919
 17588 5d83 488D5028 		lea	rdx, 40[rax]	# i,
 17589              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccRwwoRx.s 			page 464


 17590              		.loc 1 1263 39 view .LVU5920
 17591 5d87 49C1EA06 		shr	r10, 6	# tmp210,
 17592              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17593              		.loc 1 1263 42 view .LVU5921
 17594 5d8b C462B1F7 		shlx	r11, rcx, r9	# tmp213, tmp134, tmp167
 17594      D9
 17595              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17596              		.loc 1 1263 39 view .LVU5922
 17597 5d90 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_3, tmp213
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17598              		.loc 1 1262 44 is_stmt 1 view .LVU5923
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17599              		.loc 1 1262 25 view .LVU5924
 17600              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17601              		.loc 1 1262 5 is_stmt 0 view .LVU5925
 17602 5d94 4839D6   		cmp	rsi, rdx	# max, i
 17603 5d97 7668     		jbe	.L1470	#,
 17604              		.loc 1 1263 9 is_stmt 1 view .LVU5926
 17605              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17606              		.loc 1 1263 39 is_stmt 0 view .LVU5927
 17607 5d99 4989D0   		mov	r8, rdx	# tmp217, i
 17608              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17609              		.loc 1 1262 45 view .LVU5928
 17610 5d9c 4C8D503C 		lea	r10, 60[rax]	# i,
 17611              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17612              		.loc 1 1263 39 view .LVU5929
 17613 5da0 49C1E806 		shr	r8, 6	# tmp217,
 17614              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17615              		.loc 1 1263 42 view .LVU5930
 17616 5da4 C462E9F7 		shlx	r9, rcx, rdx	# tmp220, tmp134, i
 17616      C9
 17617              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17618              		.loc 1 1263 39 view .LVU5931
 17619 5da9 4E090CC7 		or	QWORD PTR [rdi+r8*8], r9	# *_3, tmp220
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17620              		.loc 1 1262 44 is_stmt 1 view .LVU5932
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17621              		.loc 1 1262 25 view .LVU5933
 17622              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17623              		.loc 1 1262 5 is_stmt 0 view .LVU5934
 17624 5dad 4C39D6   		cmp	rsi, r10	# max, i
 17625 5db0 764F     		jbe	.L1470	#,
 17626              		.loc 1 1263 9 is_stmt 1 view .LVU5935
 17627              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17628              		.loc 1 1263 39 is_stmt 0 view .LVU5936
 17629 5db2 4D89D3   		mov	r11, r10	# tmp224, i
 17630              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17631              		.loc 1 1262 45 view .LVU5937
 17632 5db5 4C8D4850 		lea	r9, 80[rax]	# i,
 17633              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17634              		.loc 1 1263 39 view .LVU5938
 17635 5db9 49C1EB06 		shr	r11, 6	# tmp224,
 17636              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccRwwoRx.s 			page 465


 17637              		.loc 1 1263 42 view .LVU5939
 17638 5dbd C4E2A9F7 		shlx	rdx, rcx, r10	# tmp227, tmp134, i
 17638      D1
 17639              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17640              		.loc 1 1263 39 view .LVU5940
 17641 5dc2 4A0914DF 		or	QWORD PTR [rdi+r11*8], rdx	# *_3, tmp227
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17642              		.loc 1 1262 44 is_stmt 1 view .LVU5941
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17643              		.loc 1 1262 25 view .LVU5942
 17644              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17645              		.loc 1 1262 5 is_stmt 0 view .LVU5943
 17646 5dc6 4C39CE   		cmp	rsi, r9	# max, i
 17647 5dc9 7636     		jbe	.L1470	#,
 17648              		.loc 1 1263 9 is_stmt 1 view .LVU5944
 17649              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17650              		.loc 1 1263 39 is_stmt 0 view .LVU5945
 17651 5dcb 4D89C8   		mov	r8, r9	# tmp231, i
 17652              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17653              		.loc 1 1262 45 view .LVU5946
 17654 5dce 4C8D5864 		lea	r11, 100[rax]	# i,
 17655              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17656              		.loc 1 1263 39 view .LVU5947
 17657 5dd2 49C1E806 		shr	r8, 6	# tmp231,
 17658              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17659              		.loc 1 1263 42 view .LVU5948
 17660 5dd6 C462B1F7 		shlx	r10, rcx, r9	# tmp234, tmp134, i
 17660      D1
 17661              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17662              		.loc 1 1263 39 view .LVU5949
 17663 5ddb 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_3, tmp234
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17664              		.loc 1 1262 44 is_stmt 1 view .LVU5950
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17665              		.loc 1 1262 25 view .LVU5951
 17666              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17667              		.loc 1 1262 5 is_stmt 0 view .LVU5952
 17668 5ddf 4C39DE   		cmp	rsi, r11	# max, i
 17669 5de2 761D     		jbe	.L1470	#,
 17670              		.loc 1 1263 9 is_stmt 1 view .LVU5953
 17671              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17672              		.loc 1 1263 39 is_stmt 0 view .LVU5954
 17673 5de4 4D89D9   		mov	r9, r11	# tmp238, i
 17674              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17675              		.loc 1 1262 45 view .LVU5955
 17676 5de7 4883C078 		add	rax, 120	# i,
 17677              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17678              		.loc 1 1263 39 view .LVU5956
 17679 5deb 49C1E906 		shr	r9, 6	# tmp238,
 17680              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17681              		.loc 1 1263 42 view .LVU5957
 17682 5def C4E2A1F7 		shlx	rdx, rcx, r11	# tmp241, tmp134, i
 17682      D1
GAS LISTING /tmp/ccRwwoRx.s 			page 466


 17683              	# sieve_extend.c:1263:         bitstorage_word[wordindex(i)] |= markmask(i);
 17684              		.loc 1 1263 39 view .LVU5958
 17685 5df4 4A0914CF 		or	QWORD PTR [rdi+r9*8], rdx	# *_3, tmp241
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17686              		.loc 1 1262 44 is_stmt 1 view .LVU5959
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17687              		.loc 1 1262 25 view .LVU5960
 17688              	# sieve_extend.c:1262:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17689              		.loc 1 1262 5 is_stmt 0 view .LVU5961
 17690 5df8 4839C6   		cmp	rsi, rax	# max, i
 17691 5dfb 0F8755FF 		ja	.L1471	#,
 17691      FFFF
 17692              	.LVL1073:
 17693              	.L1470:
1262:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 17694              		.loc 1 1262 5 view .LVU5962
 17695              	.LBE973:
1264:sieve_extend.c ****     }
1265:sieve_extend.c **** 
1266:sieve_extend.c ****     counter_t source_start = 66+64;
 17696              		.loc 1 1266 5 is_stmt 1 view .LVU5963
1267:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 17697              		.loc 1 1267 5 view .LVU5964
1268:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
 17698              		.loc 1 1268 5 view .LVU5965
1269:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 17699              		.loc 1 1269 5 view .LVU5966
 17700              	# sieve_extend.c:1269:     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_star
 17701              		.loc 1 1269 49 is_stmt 0 view .LVU5967
 17702 5e01 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitstorage_29(D) + 16B],
 17702      0C
1270:sieve_extend.c **** 
1271:sieve_extend.c **** 
1272:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 17703              		.loc 1 1272 5 is_stmt 1 view .LVU5968
 17704              	.LVL1074:
1273:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
 17705              		.loc 1 1273 5 view .LVU5969
1274:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 17706              		.loc 1 1274 5 view .LVU5970
1275:sieve_extend.c ****     
1276:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 17707              		.loc 1 1276 5 view .LVU5971
1277:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 17708              		.loc 1 1277 5 view .LVU5972
1278:sieve_extend.c **** 
1279:sieve_extend.c **** //    if (delta_bit) ....
1280:sieve_extend.c **** 
1281:sieve_extend.c ****     const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 17709              		.loc 1 1281 5 view .LVU5973
1282:sieve_extend.c ****     const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 17710              		.loc 1 1282 5 view .LVU5974
1283:sieve_extend.c ****     const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
 17711              		.loc 1 1283 5 view .LVU5975
1284:sieve_extend.c ****     const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_flipped, sh
 17712              		.loc 1 1284 5 view .LVU5976
GAS LISTING /tmp/ccRwwoRx.s 			page 467


1285:sieve_extend.c **** 
1286:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
 17713              		.loc 1 1286 5 view .LVU5977
 17714              	.LBB974:
 17715              		.loc 1 1286 10 view .LVU5978
 17716              		.loc 1 1286 37 view .LVU5979
 17717 5e06 488D7760 		lea	rsi, 96[rdi]	# ivtmp.732,
 17718              	.LVL1075:
 17719              		.loc 1 1286 37 is_stmt 0 view .LVU5980
 17720 5e0a C57D6F47 		vmovdqa	ymm8, YMMWORD PTR 32[rdi]	# D__lsm1.706, MEM[(bitvector_t *)bitstorage_29(D) + 32B]
 17720      20
 17721              	# sieve_extend.c:1286:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 17722              		.loc 1 1286 20 view .LVU5981
 17723 5e0f B8030000 		mov	eax, 3	# copy_vector,
 17723      00
 17724 5e14 C57D6F67 		vmovdqa	ymm12, YMMWORD PTR 64[rdi]	# D__lsm2.707, MEM[(bitvector_t *)bitstorage_29(D) + 64B]
 17724      40
 17725 5e19 C5FD6F27 		vmovdqa	ymm4, YMMWORD PTR [rdi]	# D__lsm0.705, MEM[(bitvector_t *)bitstorage_29(D)]
 17726              	.LVL1076:
 17727              	.L1473:
 17728              	.LBB975:
1287:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17729              		.loc 1 1287 9 is_stmt 1 discriminator 3 view .LVU5982
1288:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17730              		.loc 1 1288 9 discriminator 3 view .LVU5983
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17731              		.loc 1 1289 9 discriminator 3 view .LVU5984
1290:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17732              		.loc 1 1290 9 discriminator 3 view .LVU5985
1291:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17733              		.loc 1 1291 9 discriminator 3 view .LVU5986
 17734              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17735              		.loc 1 1289 29 is_stmt 0 discriminator 3 view .LVU5987
 17736 5e1d C4C35D46 		vperm2i128	ymm3, ymm4, ymm8, 33	# tmp140, D__lsm0.705, D__lsm1.706,
 17736      D821
 17737 5e23 C4C33D46 		vperm2i128	ymm7, ymm8, ymm12, 33	# tmp146, D__lsm1.706, D__lsm2.707,
 17737      FC21
 17738 5e29 C4E3650F 		vpalignr	ymm2, ymm3, ymm4, 8	# tmp141, tmp140, D__lsm0.705,
 17738      D408
 17739              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17740              		.loc 1 1290 21 discriminator 3 view .LVU5988
 17741 5e2f C5D573F3 		vpsllq	ymm5, ymm3, 10	# dest2, tmp140,
 17741      0A
 17742              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17743              		.loc 1 1289 21 discriminator 3 view .LVU5989
 17744 5e34 C5DD73D2 		vpsrlq	ymm4, ymm2, 54	# dest1, tmp141,
 17744      36
 17745              	.LVL1077:
 17746              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17747              		.loc 1 1291 48 discriminator 3 view .LVU5990
 17748 5e39 C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# D__lsm0.705, dest1, dest2
 17749              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17750              		.loc 1 1290 21 discriminator 3 view .LVU5991
GAS LISTING /tmp/ccRwwoRx.s 			page 468


 17751 5e3d C5B573F7 		vpsllq	ymm9, ymm7, 10	# dest2, tmp146,
 17751      0A
 17752              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17753              		.loc 1 1289 29 discriminator 3 view .LVU5992
 17754 5e42 C4C3450F 		vpalignr	ymm1, ymm7, ymm8, 8	# tmp147, tmp146, D__lsm1.706,
 17754      C808
 17755 5e48 C4631D46 		vperm2i128	ymm11, ymm12, ymm6, 33	# tmp152, D__lsm2.707, D__lsm0.705,
 17755      DE21
 17756              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17757              		.loc 1 1289 21 discriminator 3 view .LVU5993
 17758 5e4e C5BD73D1 		vpsrlq	ymm8, ymm1, 54	# dest1, tmp147,
 17758      36
 17759              	.LVL1078:
 17760              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17761              		.loc 1 1289 29 discriminator 3 view .LVU5994
 17762 5e53 C4C3250F 		vpalignr	ymm0, ymm11, ymm12, 8	# tmp153, tmp152, D__lsm2.707,
 17762      C408
 17763              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17764              		.loc 1 1291 48 discriminator 3 view .LVU5995
 17765 5e59 C4413DEB 		vpor	ymm10, ymm8, ymm9	# D__lsm1.706, dest1, dest2
 17765      D1
 17766              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17767              		.loc 1 1289 21 discriminator 3 view .LVU5996
 17768 5e5e C59D73D0 		vpsrlq	ymm12, ymm0, 54	# dest1, tmp153,
 17768      36
 17769              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17770              		.loc 1 1290 21 discriminator 3 view .LVU5997
 17771 5e63 C4C11573 		vpsllq	ymm13, ymm11, 10	# dest2, tmp152,
 17771      F30A
 17772              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17773              		.loc 1 1289 29 discriminator 3 view .LVU5998
 17774 5e69 C4434D46 		vperm2i128	ymm15, ymm6, ymm10, 33	# tmp181, D__lsm0.705, D__lsm1.706,
 17774      FA21
 17775              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17776              		.loc 1 1291 48 discriminator 3 view .LVU5999
 17777 5e6f C4411DEB 		vpor	ymm14, ymm12, ymm13	# D__lsm2.707, dest1, dest2
 17777      F5
 17778              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17779              		.loc 1 1290 21 discriminator 3 view .LVU6000
 17780 5e74 C4C15D73 		vpsllq	ymm4, ymm15, 10	# dest2, tmp181,
 17780      F70A
 17781              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17782              		.loc 1 1291 40 discriminator 3 view .LVU6001
 17783 5e7a C5FD7F36 		vmovdqa	YMMWORD PTR [rsi], ymm6	# MEM[base: _134, offset: 0B], D__lsm0.705
 17784              	.LBE975:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17785              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6002
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17786              		.loc 1 1286 37 discriminator 3 view .LVU6003
 17787              	.LBB976:
GAS LISTING /tmp/ccRwwoRx.s 			page 469


1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17788              		.loc 1 1287 9 discriminator 3 view .LVU6004
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17789              		.loc 1 1288 9 discriminator 3 view .LVU6005
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17790              		.loc 1 1289 9 discriminator 3 view .LVU6006
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17791              		.loc 1 1290 9 discriminator 3 view .LVU6007
 17792              		.loc 1 1291 9 discriminator 3 view .LVU6008
 17793              	.LBE976:
 17794              	# sieve_extend.c:1286:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17795              		.loc 1 1286 65 is_stmt 0 discriminator 3 view .LVU6009
 17796 5e7e 4883C009 		add	rax, 9	# copy_vector,
 17797              	.LBB977:
 17798              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17799              		.loc 1 1289 29 discriminator 3 view .LVU6010
 17800 5e82 C4E3050F 		vpalignr	ymm3, ymm15, ymm6, 8	# tmp182, tmp181, D__lsm0.705,
 17800      DE08
 17801 5e88 C4C32D46 		vperm2i128	ymm6, ymm10, ymm14, 33	# tmp186, D__lsm1.706, D__lsm2.707,
 17801      F621
 17802              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17803              		.loc 1 1289 21 discriminator 3 view .LVU6011
 17804 5e8e C5ED73D3 		vpsrlq	ymm2, ymm3, 54	# dest1, tmp182,
 17804      36
 17805              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17806              		.loc 1 1289 29 discriminator 3 view .LVU6012
 17807 5e93 C4C34D0F 		vpalignr	ymm7, ymm6, ymm10, 8	# tmp187, tmp186, D__lsm1.706,
 17807      FA08
 17808              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17809              		.loc 1 1291 48 discriminator 3 view .LVU6013
 17810 5e99 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# D__lsm0.705, dest1, dest2
 17811              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17812              		.loc 1 1289 21 discriminator 3 view .LVU6014
 17813 5e9d C5F573D7 		vpsrlq	ymm1, ymm7, 54	# dest1, tmp187,
 17813      36
 17814              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17815              		.loc 1 1290 21 discriminator 3 view .LVU6015
 17816 5ea2 C5BD73F6 		vpsllq	ymm8, ymm6, 10	# dest2, tmp186,
 17816      0A
 17817 5ea7 488D8EC0 		lea	rcx, 192[rsi]	# ivtmp.732,
 17817      000000
 17818              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17819              		.loc 1 1291 40 discriminator 3 view .LVU6016
 17820 5eae C57D7F56 		vmovdqa	YMMWORD PTR 32[rsi], ymm10	# MEM[base: _134, offset: 32B], D__lsm1.706
 17820      20
 17821              	.LBE977:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17822              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6017
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17823              		.loc 1 1286 37 discriminator 3 view .LVU6018
 17824              	.LBB978:
GAS LISTING /tmp/ccRwwoRx.s 			page 470


1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17825              		.loc 1 1287 9 discriminator 3 view .LVU6019
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17826              		.loc 1 1288 9 discriminator 3 view .LVU6020
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17827              		.loc 1 1289 9 discriminator 3 view .LVU6021
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17828              		.loc 1 1290 9 discriminator 3 view .LVU6022
 17829              		.loc 1 1291 9 discriminator 3 view .LVU6023
 17830              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17831              		.loc 1 1291 48 is_stmt 0 discriminator 3 view .LVU6024
 17832 5eb3 C44175EB 		vpor	ymm9, ymm1, ymm8	# D__lsm1.706, dest1, dest2
 17832      C8
 17833              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17834              		.loc 1 1289 29 discriminator 3 view .LVU6025
 17835 5eb8 C4630D46 		vperm2i128	ymm10, ymm14, ymm5, 33	# tmp191, D__lsm2.707, D__lsm0.705,
 17835      D521
 17836 5ebe 4881C620 		add	rsi, 288	# ivtmp.732,
 17836      010000
 17837              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17838              		.loc 1 1291 40 discriminator 3 view .LVU6026
 17839 5ec5 C57D7FB6 		vmovdqa	YMMWORD PTR -224[rsi], ymm14	# MEM[base: _134, offset: 64B], D__lsm2.707
 17839      20FFFFFF 
 17840              	.LBE978:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17841              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6027
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17842              		.loc 1 1286 37 discriminator 3 view .LVU6028
 17843              	.LBB979:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17844              		.loc 1 1287 9 discriminator 3 view .LVU6029
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17845              		.loc 1 1288 9 discriminator 3 view .LVU6030
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17846              		.loc 1 1289 9 discriminator 3 view .LVU6031
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17847              		.loc 1 1290 9 discriminator 3 view .LVU6032
 17848              		.loc 1 1291 9 discriminator 3 view .LVU6033
 17849              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17850              		.loc 1 1290 21 is_stmt 0 discriminator 3 view .LVU6034
 17851 5ecd C4C11D73 		vpsllq	ymm12, ymm10, 10	# dest2, tmp191,
 17851      F20A
 17852              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17853              		.loc 1 1289 29 discriminator 3 view .LVU6035
 17854 5ed3 C4432D0F 		vpalignr	ymm11, ymm10, ymm14, 8	# tmp192, tmp191, D__lsm2.707,
 17854      DE08
 17855 5ed9 C4435546 		vperm2i128	ymm14, ymm5, ymm9, 33	# tmp198, D__lsm0.705, D__lsm1.706,
 17855      F121
 17856              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17857              		.loc 1 1289 21 discriminator 3 view .LVU6036
 17858 5edf C4C17D73 		vpsrlq	ymm0, ymm11, 54	# dest1, tmp192,
 17858      D336
 17859              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
GAS LISTING /tmp/ccRwwoRx.s 			page 471


1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17860              		.loc 1 1289 29 discriminator 3 view .LVU6037
 17861 5ee5 C4630D0F 		vpalignr	ymm15, ymm14, ymm5, 8	# tmp199, tmp198, D__lsm0.705,
 17861      FD08
 17862              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17863              		.loc 1 1291 48 discriminator 3 view .LVU6038
 17864 5eeb C4417DEB 		vpor	ymm13, ymm0, ymm12	# D__lsm2.707, dest1, dest2
 17864      EC
 17865              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17866              		.loc 1 1289 21 discriminator 3 view .LVU6039
 17867 5ef0 C4C16D73 		vpsrlq	ymm2, ymm15, 54	# dest1, tmp199,
 17867      D736
 17868              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17869              		.loc 1 1291 40 discriminator 3 view .LVU6040
 17870 5ef6 C5FD7FAE 		vmovdqa	YMMWORD PTR -192[rsi], ymm5	# MEM[base: _134, offset: 0B], D__lsm0.705
 17870      40FFFFFF 
 17871              	.LBE979:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17872              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6041
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17873              		.loc 1 1286 37 discriminator 3 view .LVU6042
 17874              	.LBB980:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17875              		.loc 1 1287 9 discriminator 3 view .LVU6043
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17876              		.loc 1 1288 9 discriminator 3 view .LVU6044
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17877              		.loc 1 1289 9 discriminator 3 view .LVU6045
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17878              		.loc 1 1290 9 discriminator 3 view .LVU6046
 17879              		.loc 1 1291 9 discriminator 3 view .LVU6047
 17880              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17881              		.loc 1 1290 21 is_stmt 0 discriminator 3 view .LVU6048
 17882 5efe C4C16573 		vpsllq	ymm3, ymm14, 10	# dest2, tmp198,
 17882      F60A
 17883              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17884              		.loc 1 1289 29 discriminator 3 view .LVU6049
 17885 5f04 C4C33546 		vperm2i128	ymm5, ymm9, ymm13, 33	# tmp202, D__lsm1.706, D__lsm2.707,
 17885      ED21
 17886              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17887              		.loc 1 1291 48 discriminator 3 view .LVU6050
 17888 5f0a C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# D__lsm0.705, dest1, dest2
 17889              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17890              		.loc 1 1291 40 discriminator 3 view .LVU6051
 17891 5f0e C57D7F8E 		vmovdqa	YMMWORD PTR -160[rsi], ymm9	# MEM[base: _134, offset: 32B], D__lsm1.706
 17891      60FFFFFF 
 17892              	.LBE980:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17893              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6052
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17894              		.loc 1 1286 37 discriminator 3 view .LVU6053
 17895              	.LBB981:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17896              		.loc 1 1287 9 discriminator 3 view .LVU6054
GAS LISTING /tmp/ccRwwoRx.s 			page 472


1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17897              		.loc 1 1288 9 discriminator 3 view .LVU6055
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17898              		.loc 1 1289 9 discriminator 3 view .LVU6056
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17899              		.loc 1 1290 9 discriminator 3 view .LVU6057
 17900              		.loc 1 1291 9 discriminator 3 view .LVU6058
 17901              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17902              		.loc 1 1290 21 is_stmt 0 discriminator 3 view .LVU6059
 17903 5f16 C5F573F5 		vpsllq	ymm1, ymm5, 10	# dest2, tmp202,
 17903      0A
 17904              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17905              		.loc 1 1289 29 discriminator 3 view .LVU6060
 17906 5f1b C4C3550F 		vpalignr	ymm6, ymm5, ymm9, 8	# tmp203, tmp202, D__lsm1.706,
 17906      F108
 17907 5f21 C4631546 		vperm2i128	ymm9, ymm13, ymm4, 33	# tmp206, D__lsm2.707, D__lsm0.705,
 17907      CC21
 17908              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17909              		.loc 1 1289 21 discriminator 3 view .LVU6061
 17910 5f27 C5C573D6 		vpsrlq	ymm7, ymm6, 54	# dest1, tmp203,
 17910      36
 17911              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17912              		.loc 1 1289 29 discriminator 3 view .LVU6062
 17913 5f2c C443350F 		vpalignr	ymm10, ymm9, ymm13, 8	# tmp207, tmp206, D__lsm2.707,
 17913      D508
 17914              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17915              		.loc 1 1290 21 discriminator 3 view .LVU6063
 17916 5f32 C4C17D73 		vpsllq	ymm0, ymm9, 10	# dest2, tmp206,
 17916      F10A
 17917              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17918              		.loc 1 1289 21 discriminator 3 view .LVU6064
 17919 5f38 C4C12573 		vpsrlq	ymm11, ymm10, 54	# dest1, tmp207,
 17919      D236
 17920              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17921              		.loc 1 1291 40 discriminator 3 view .LVU6065
 17922 5f3e C57D7F6E 		vmovdqa	YMMWORD PTR -128[rsi], ymm13	# MEM[base: _134, offset: 64B], D__lsm2.707
 17922      80
 17923              	.LBE981:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17924              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6066
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17925              		.loc 1 1286 37 discriminator 3 view .LVU6067
 17926              	.LBB982:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17927              		.loc 1 1287 9 discriminator 3 view .LVU6068
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17928              		.loc 1 1288 9 discriminator 3 view .LVU6069
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17929              		.loc 1 1289 9 discriminator 3 view .LVU6070
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17930              		.loc 1 1290 9 discriminator 3 view .LVU6071
GAS LISTING /tmp/ccRwwoRx.s 			page 473


 17931              		.loc 1 1291 9 discriminator 3 view .LVU6072
 17932              	.LVL1079:
 17933              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17934              		.loc 1 1291 48 is_stmt 0 discriminator 3 view .LVU6073
 17935 5f43 C545EBC1 		vpor	ymm8, ymm7, ymm1	# D__lsm1.706, dest1, dest2
 17936              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17937              		.loc 1 1291 40 discriminator 3 view .LVU6074
 17938 5f47 C5FD7F66 		vmovdqa	YMMWORD PTR -96[rsi], ymm4	# MEM[base: _134, offset: 0B], D__lsm0.705
 17938      A0
 17939              	.LBE982:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17940              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6075
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17941              		.loc 1 1286 37 discriminator 3 view .LVU6076
 17942              	.LBB983:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17943              		.loc 1 1287 9 discriminator 3 view .LVU6077
 17944              	.LVL1080:
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17945              		.loc 1 1288 9 discriminator 3 view .LVU6078
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17946              		.loc 1 1289 9 discriminator 3 view .LVU6079
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17947              		.loc 1 1290 9 discriminator 3 view .LVU6080
 17948              		.loc 1 1291 9 discriminator 3 view .LVU6081
 17949              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17950              		.loc 1 1291 48 is_stmt 0 discriminator 3 view .LVU6082
 17951 5f4c C525EBE0 		vpor	ymm12, ymm11, ymm0	# D__lsm2.707, dest1, dest2
 17952              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17953              		.loc 1 1291 40 discriminator 3 view .LVU6083
 17954 5f50 C57D7F41 		vmovdqa	YMMWORD PTR 32[rcx], ymm8	# MEM[base: _134, offset: 32B], D__lsm1.706
 17954      20
 17955              	.LBE983:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17956              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6084
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17957              		.loc 1 1286 37 discriminator 3 view .LVU6085
 17958              	.LBB984:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17959              		.loc 1 1287 9 discriminator 3 view .LVU6086
 17960              	.LVL1081:
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17961              		.loc 1 1288 9 discriminator 3 view .LVU6087
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17962              		.loc 1 1289 9 discriminator 3 view .LVU6088
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17963              		.loc 1 1290 9 discriminator 3 view .LVU6089
 17964              		.loc 1 1291 9 discriminator 3 view .LVU6090
 17965              		.loc 1 1291 9 is_stmt 0 discriminator 3 view .LVU6091
 17966 5f55 483D8F01 		cmp	rax, 399	# copy_vector,
 17966      0000
 17967              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 17968              		.loc 1 1291 40 discriminator 3 view .LVU6092
 17969 5f5b C57D7F61 		vmovdqa	YMMWORD PTR 64[rcx], ymm12	# MEM[base: _134, offset: 64B], D__lsm2.707
 17969      40
 17970              	.LBE984:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
GAS LISTING /tmp/ccRwwoRx.s 			page 474


 17971              		.loc 1 1286 54 is_stmt 1 discriminator 3 view .LVU6093
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 17972              		.loc 1 1286 37 discriminator 3 view .LVU6094
 17973 5f60 0F85B7FE 		jne	.L1473	#,
 17973      FFFF
 17974 5f66 4C8D8780 		lea	r8, 12672[rdi]	# ivtmp.717,
 17974      310000
 17975 5f6d 488DBFA0 		lea	rdi, 12704[rdi]	# _24,
 17975      310000
 17976              	.LVL1082:
 17977 5f74 66662E0F 		.p2align 4
 17977      1F840000 
 17977      00000090 
 17978              		.p2align 3
 17979              	.L1474:
 17980              	.LBB985:
1287:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 17981              		.loc 1 1287 9 view .LVU6095
1288:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 17982              		.loc 1 1288 9 view .LVU6096
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17983              		.loc 1 1289 9 view .LVU6097
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17984              		.loc 1 1290 9 view .LVU6098
 17985              		.loc 1 1291 9 view .LVU6099
 17986              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17987              		.loc 1 1290 29 is_stmt 0 view .LVU6100
 17988 5f80 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r8]	# tmp247, MEM[base: _102, offset: 0B]
 17988      28
 17989 5f85 4983C020 		add	r8, 32	# ivtmp.717,
 17990              	.LVL1083:
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17991              		.loc 1 1290 29 view .LVU6101
 17992 5f89 C4431546 		vperm2i128	ymm14, ymm13, YMMWORD PTR [r8], 33	# tmp158, tmp247, MEM[base: _102, offset: 32B],
 17992      3021
 17993              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 17994              		.loc 1 1289 29 view .LVU6102
 17995 5f8f C4C30D0F 		vpalignr	ymm2, ymm14, YMMWORD PTR -32[r8], 8	# tmp162, tmp158, MEM[base: _102, offset: 0B],
 17995      50E008
 17996              	# sieve_extend.c:1290:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1290:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 17997              		.loc 1 1290 21 view .LVU6103
 17998 5f96 C4C10573 		vpsllq	ymm15, ymm14, 10	# dest2, tmp158,
 17998      F60A
 17999              	# sieve_extend.c:1289:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1289:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 18000              		.loc 1 1289 21 view .LVU6104
 18001 5f9c C5E573D2 		vpsrlq	ymm3, ymm2, 54	# dest1, tmp162,
 18001      36
 18002              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 18003              		.loc 1 1291 48 view .LVU6105
 18004 5fa1 C585EBE3 		vpor	ymm4, ymm15, ymm3	# tmp164, dest2, dest1
 18005              	# sieve_extend.c:1291:         bitstorage_vector[copy_vector] = dest1 | dest2;
 18006              		.loc 1 1291 40 view .LVU6106
 18007 5fa5 C4C17D7F 		vmovdqa	YMMWORD PTR 64[r8], ymm4	# MEM[base: _84, offset: 12768B], tmp164
GAS LISTING /tmp/ccRwwoRx.s 			page 475


 18007      6040
 18008              	.LBE985:
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 18009              		.loc 1 1286 54 is_stmt 1 view .LVU6107
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 18010              		.loc 1 1286 37 view .LVU6108
 18011              	# sieve_extend.c:1286:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1286:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 18012              		.loc 1 1286 5 is_stmt 0 view .LVU6109
 18013 5fab 4C39C7   		cmp	rdi, r8	# _24, ivtmp.717
 18014 5fae 75D0     		jne	.L1474	#,
 18015 5fb0 C5F877   		vzeroupper
 18016              	.LBE974:
 18017              	# sieve_extend.c:1293: }
1292:sieve_extend.c ****     }
1293:sieve_extend.c **** }
 18018              		.loc 1 1293 1 view .LVU6110
 18019 5fb3 C3       		ret	
 18020              		.cfi_endproc
 18021              	.LFE96:
 18023 5fb4 66662E0F 		.p2align 4
 18023      1F840000 
 18023      00000090 
 18024              		.globl	testshuffle_vector2
 18026              	testshuffle_vector2:
 18027              	.LFB109:
 18028              		.cfi_startproc
 18029 5fc0 F30F1EFA 		endbr64	
 18030 5fc4 E967FDFF 		jmp	testshuffle_vector	#
 18030      FF
 18031              		.cfi_endproc
 18032              	.LFE109:
 18034 5fc9 0F1F8000 		.p2align 4
 18034      000000
 18035              		.globl	testshuffle_word
 18037              	testshuffle_word:
 18038              	.LVL1084:
 18039              	.LFB98:
1294:sieve_extend.c **** 
1295:sieve_extend.c **** void testshuffle_vector2(bitword_t* __restrict bitstorage, counter_t max) {
1296:sieve_extend.c ****     
1297:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
1298:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*)bitstorage;
1299:sieve_extend.c **** 
1300:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1301:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
1302:sieve_extend.c ****     }
1303:sieve_extend.c **** 
1304:sieve_extend.c ****     counter_t source_start = 66+64;
1305:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
1306:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
1307:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
1308:sieve_extend.c **** 
1309:sieve_extend.c **** 
1310:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
1311:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
1312:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
GAS LISTING /tmp/ccRwwoRx.s 			page 476


1313:sieve_extend.c ****     
1314:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
1315:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
1316:sieve_extend.c **** 
1317:sieve_extend.c **** //    if (delta_bit) ....
1318:sieve_extend.c **** 
1319:sieve_extend.c ****     register const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
1320:sieve_extend.c ****     register const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
1321:sieve_extend.c ****     register const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
1322:sieve_extend.c ****     register const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_fl
1323:sieve_extend.c **** 
1324:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
1325:sieve_extend.c ****         register bitvector_t source0 = bitstorage_vector[source_vector];
1326:sieve_extend.c ****         register bitvector_t source1 = bitstorage_vector[source_vector+1];
1327:sieve_extend.c ****         bitstorage_vector[copy_vector] = (__builtin_shuffle(source0,source1,shuffle1) >> shift_flip
1328:sieve_extend.c ****     }
1329:sieve_extend.c **** }
1330:sieve_extend.c **** 
1331:sieve_extend.c **** void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
 18040              		.loc 1 1331 72 is_stmt 1 view -0
 18041              		.cfi_startproc
 18042              		.loc 1 1331 72 is_stmt 0 view .LVU6112
 18043 5fd0 F30F1EFA 		endbr64	
1332:sieve_extend.c ****     
1333:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
 18044              		.loc 1 1333 5 is_stmt 1 view .LVU6113
 18045              	.LVL1085:
1334:sieve_extend.c **** 
1335:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 18046              		.loc 1 1335 5 view .LVU6114
 18047              	.LBB986:
 18048              		.loc 1 1335 10 view .LVU6115
 18049              		.loc 1 1335 25 view .LVU6116
 18050              	.LBE986:
 18051              	# sieve_extend.c:1331: void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
1331:sieve_extend.c ****     
 18052              		.loc 1 1331 72 is_stmt 0 view .LVU6117
 18053 5fd4 4157     		push	r15	#
 18054              		.cfi_def_cfa_offset 16
 18055              		.cfi_offset 15, -16
 18056              	.LBB987:
 18057              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 18058              		.loc 1 1335 5 view .LVU6118
 18059 5fd6 4883FE01 		cmp	rsi, 1	# max,
 18060              	.LBE987:
 18061              	# sieve_extend.c:1331: void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
1331:sieve_extend.c ****     
 18062              		.loc 1 1331 72 view .LVU6119
 18063 5fda 4156     		push	r14	#
 18064              		.cfi_def_cfa_offset 24
 18065              		.cfi_offset 14, -24
 18066 5fdc 4155     		push	r13	#
 18067              		.cfi_def_cfa_offset 32
 18068              		.cfi_offset 13, -32
 18069 5fde 4154     		push	r12	#
 18070              		.cfi_def_cfa_offset 40
 18071              		.cfi_offset 12, -40
GAS LISTING /tmp/ccRwwoRx.s 			page 477


 18072 5fe0 55       		push	rbp	#
 18073              		.cfi_def_cfa_offset 48
 18074              		.cfi_offset 6, -48
 18075 5fe1 53       		push	rbx	#
 18076              		.cfi_def_cfa_offset 56
 18077              		.cfi_offset 3, -56
 18078              	.LBB988:
 18079              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 18080              		.loc 1 1335 5 view .LVU6120
 18081 5fe2 0F86C300 		jbe	.L1502	#,
 18081      0000
 18082              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
1336:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18083              		.loc 1 1336 39 view .LVU6121
 18084 5fe8 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 18085              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18086              		.loc 1 1335 5 view .LVU6122
 18087 5fec 4883FE15 		cmp	rsi, 21	# max,
 18088              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18089              		.loc 1 1336 42 view .LVU6123
 18090 5ff0 B9010000 		mov	ecx, 1	# tmp185,
 18090      00
 18091              		.loc 1 1336 9 is_stmt 1 view .LVU6124
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18092              		.loc 1 1335 42 view .LVU6125
 18093              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18094              		.loc 1 1335 43 is_stmt 0 view .LVU6126
 18095 5ff5 B8150000 		mov	eax, 21	# i,
 18095      00
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18096              		.loc 1 1335 25 is_stmt 1 view .LVU6127
 18097              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18098              		.loc 1 1335 5 is_stmt 0 view .LVU6128
 18099 5ffa 0F86AB00 		jbe	.L1502	#,
 18099      0000
 18100              	.L1503:
 18101              		.loc 1 1336 9 is_stmt 1 discriminator 3 view .LVU6129
 18102              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18103              		.loc 1 1336 39 is_stmt 0 discriminator 3 view .LVU6130
 18104 6000 4889C2   		mov	rdx, rax	# tmp248, i
 18105              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18106              		.loc 1 1335 43 discriminator 3 view .LVU6131
 18107 6003 488D5814 		lea	rbx, 20[rax]	# tmp246,
 18108              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18109              		.loc 1 1336 39 discriminator 3 view .LVU6132
 18110 6007 48C1EA06 		shr	rdx, 6	# tmp248,
 18111              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18112              		.loc 1 1336 42 discriminator 3 view .LVU6133
 18113 600b C462F9F7 		shlx	r8, rcx, rax	# tmp251, tmp185, i
 18113      C1
 18114              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18115              		.loc 1 1336 39 discriminator 3 view .LVU6134
 18116 6010 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp251
GAS LISTING /tmp/ccRwwoRx.s 			page 478


1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18117              		.loc 1 1335 42 is_stmt 1 discriminator 3 view .LVU6135
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18118              		.loc 1 1335 25 discriminator 3 view .LVU6136
 18119              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18120              		.loc 1 1335 5 is_stmt 0 discriminator 3 view .LVU6137
 18121 6014 4881FBFF 		cmp	rbx, 511	# tmp246,
 18121      010000
 18122 601b 0F878A00 		ja	.L1502	#,
 18122      0000
 18123 6021 4839DE   		cmp	rsi, rbx	# max, tmp246
 18124 6024 0F868100 		jbe	.L1502	#,
 18124      0000
 18125              		.loc 1 1336 9 is_stmt 1 view .LVU6138
 18126              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18127              		.loc 1 1336 39 is_stmt 0 view .LVU6139
 18128 602a 4889DD   		mov	rbp, rbx	# tmp255, tmp246
 18129              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18130              		.loc 1 1335 43 view .LVU6140
 18131 602d 4C8D5028 		lea	r10, 40[rax]	# i,
 18132              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18133              		.loc 1 1336 39 view .LVU6141
 18134 6031 48C1ED06 		shr	rbp, 6	# tmp255,
 18135              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18136              		.loc 1 1336 42 view .LVU6142
 18137 6035 C462E1F7 		shlx	r9, rcx, rbx	# tmp258, tmp185, tmp246
 18137      C9
 18138              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18139              		.loc 1 1336 39 view .LVU6143
 18140 603a 4C090CEF 		or	QWORD PTR [rdi+rbp*8], r9	# *_3, tmp258
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18141              		.loc 1 1335 42 is_stmt 1 view .LVU6144
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18142              		.loc 1 1335 25 view .LVU6145
 18143              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18144              		.loc 1 1335 5 is_stmt 0 view .LVU6146
 18145 603e 4C39D6   		cmp	rsi, r10	# max, i
 18146 6041 7668     		jbe	.L1502	#,
 18147              		.loc 1 1336 9 is_stmt 1 view .LVU6147
 18148              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18149              		.loc 1 1336 39 is_stmt 0 view .LVU6148
 18150 6043 4D89D3   		mov	r11, r10	# tmp262, i
 18151              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18152              		.loc 1 1335 43 view .LVU6149
 18153 6046 4C8D683C 		lea	r13, 60[rax]	# i,
 18154              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18155              		.loc 1 1336 39 view .LVU6150
 18156 604a 49C1EB06 		shr	r11, 6	# tmp262,
 18157              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18158              		.loc 1 1336 42 view .LVU6151
 18159 604e C462A9F7 		shlx	r12, rcx, r10	# tmp265, tmp185, i
 18159      E1
 18160              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccRwwoRx.s 			page 479


 18161              		.loc 1 1336 39 view .LVU6152
 18162 6053 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_3, tmp265
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18163              		.loc 1 1335 42 is_stmt 1 view .LVU6153
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18164              		.loc 1 1335 25 view .LVU6154
 18165              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18166              		.loc 1 1335 5 is_stmt 0 view .LVU6155
 18167 6057 4C39EE   		cmp	rsi, r13	# max, i
 18168 605a 764F     		jbe	.L1502	#,
 18169              		.loc 1 1336 9 is_stmt 1 view .LVU6156
 18170              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18171              		.loc 1 1336 39 is_stmt 0 view .LVU6157
 18172 605c 4D89EE   		mov	r14, r13	# tmp269, i
 18173              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18174              		.loc 1 1335 43 view .LVU6158
 18175 605f 488D5050 		lea	rdx, 80[rax]	# i,
 18176              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18177              		.loc 1 1336 39 view .LVU6159
 18178 6063 49C1EE06 		shr	r14, 6	# tmp269,
 18179              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18180              		.loc 1 1336 42 view .LVU6160
 18181 6067 C46291F7 		shlx	r15, rcx, r13	# tmp272, tmp185, i
 18181      F9
 18182              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18183              		.loc 1 1336 39 view .LVU6161
 18184 606c 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_3, tmp272
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18185              		.loc 1 1335 42 is_stmt 1 view .LVU6162
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18186              		.loc 1 1335 25 view .LVU6163
 18187              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18188              		.loc 1 1335 5 is_stmt 0 view .LVU6164
 18189 6070 4839D6   		cmp	rsi, rdx	# max, i
 18190 6073 7636     		jbe	.L1502	#,
 18191              		.loc 1 1336 9 is_stmt 1 view .LVU6165
 18192              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18193              		.loc 1 1336 39 is_stmt 0 view .LVU6166
 18194 6075 4989D0   		mov	r8, rdx	# tmp276, i
 18195              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18196              		.loc 1 1335 43 view .LVU6167
 18197 6078 488D6864 		lea	rbp, 100[rax]	# i,
 18198              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18199              		.loc 1 1336 39 view .LVU6168
 18200 607c 49C1E806 		shr	r8, 6	# tmp276,
 18201              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18202              		.loc 1 1336 42 view .LVU6169
 18203 6080 C4E2E9F7 		shlx	rbx, rcx, rdx	# tmp279, tmp185, i
 18203      D9
 18204              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18205              		.loc 1 1336 39 view .LVU6170
 18206 6085 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_3, tmp279
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccRwwoRx.s 			page 480


 18207              		.loc 1 1335 42 is_stmt 1 view .LVU6171
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18208              		.loc 1 1335 25 view .LVU6172
 18209              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18210              		.loc 1 1335 5 is_stmt 0 view .LVU6173
 18211 6089 4839EE   		cmp	rsi, rbp	# max, i
 18212 608c 761D     		jbe	.L1502	#,
 18213              		.loc 1 1336 9 is_stmt 1 view .LVU6174
 18214              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18215              		.loc 1 1336 39 is_stmt 0 view .LVU6175
 18216 608e 4989E9   		mov	r9, rbp	# tmp283, i
 18217              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18218              		.loc 1 1335 43 view .LVU6176
 18219 6091 4883C078 		add	rax, 120	# i,
 18220              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18221              		.loc 1 1336 39 view .LVU6177
 18222 6095 49C1E906 		shr	r9, 6	# tmp283,
 18223              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18224              		.loc 1 1336 42 view .LVU6178
 18225 6099 C462D1F7 		shlx	r10, rcx, rbp	# tmp286, tmp185, i
 18225      D1
 18226              	# sieve_extend.c:1336:         bitstorage_word[wordindex(i)] |= markmask(i);
 18227              		.loc 1 1336 39 view .LVU6179
 18228 609e 4E0914CF 		or	QWORD PTR [rdi+r9*8], r10	# *_3, tmp286
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18229              		.loc 1 1335 42 is_stmt 1 view .LVU6180
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18230              		.loc 1 1335 25 view .LVU6181
 18231              	# sieve_extend.c:1335:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18232              		.loc 1 1335 5 is_stmt 0 view .LVU6182
 18233 60a2 4839C6   		cmp	rsi, rax	# max, i
 18234 60a5 0F8755FF 		ja	.L1503	#,
 18234      FFFF
 18235              	.LVL1086:
 18236              	.L1502:
1335:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 18237              		.loc 1 1335 5 view .LVU6183
 18238              	.LBE988:
1337:sieve_extend.c ****     }
1338:sieve_extend.c **** 
1339:sieve_extend.c ****     counter_t source_start = 66+64;
 18239              		.loc 1 1339 5 is_stmt 1 view .LVU6184
1340:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 18240              		.loc 1 1340 5 view .LVU6185
1341:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
 18241              		.loc 1 1341 5 view .LVU6186
1342:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 18242              		.loc 1 1342 5 view .LVU6187
 18243 60ab 488B4738 		mov	rax, QWORD PTR 56[rdi]	# D__lsm1.760, MEM[(uint64_t *)bitstorage_57(D) + 56B]
 18244              	# sieve_extend.c:1342:     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_star
 18245              		.loc 1 1342 49 is_stmt 0 view .LVU6188
 18246 60af 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitstorage_57(D) + 16B],
 18246      0C
1343:sieve_extend.c **** 
GAS LISTING /tmp/ccRwwoRx.s 			page 481


1344:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 18247              		.loc 1 1344 5 is_stmt 1 view .LVU6189
 18248              	.LVL1087:
1345:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 18249              		.loc 1 1345 5 view .LVU6190
1346:sieve_extend.c ****     
1347:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 18250              		.loc 1 1347 5 view .LVU6191
1348:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 18251              		.loc 1 1348 5 view .LVU6192
1349:sieve_extend.c **** 
1350:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++) {
 18252              		.loc 1 1350 5 view .LVU6193
 18253              	.LBB989:
 18254              		.loc 1 1350 10 view .LVU6194
 18255              		.loc 1 1350 37 view .LVU6195
 18256 60b4 488B4F18 		mov	rcx, QWORD PTR 24[rdi]	# D__lsm0.759, MEM[(uint64_t *)bitstorage_57(D) + 24B]
 18257 60b8 4C8B7758 		mov	r14, QWORD PTR 88[rdi]	# D__lsm2.761, MEM[(uint64_t *)bitstorage_57(D) + 88B]
 18258 60bc 4C8B6F10 		mov	r13, QWORD PTR 16[rdi]	# D__lsm0.747, MEM[(uint64_t *)bitstorage_57(D) + 16B]
 18259 60c0 4C8B6730 		mov	r12, QWORD PTR 48[rdi]	# D__lsm1.748, MEM[(uint64_t *)bitstorage_57(D) + 48B]
 18260 60c4 488B7750 		mov	rsi, QWORD PTR 80[rdi]	# D__lsm2.749, MEM[(uint64_t *)bitstorage_57(D) + 80B]
 18261              	.LVL1088:
 18262              		.loc 1 1350 37 is_stmt 0 view .LVU6196
 18263 60c8 488B6F08 		mov	rbp, QWORD PTR 8[rdi]	# D__lsm0.751, MEM[(uint64_t *)bitstorage_57(D) + 8B]
 18264 60cc 488B5F28 		mov	rbx, QWORD PTR 40[rdi]	# D__lsm1.752, MEM[(uint64_t *)bitstorage_57(D) + 40B]
 18265 60d0 488B5748 		mov	rdx, QWORD PTR 72[rdi]	# D__lsm2.753, MEM[(uint64_t *)bitstorage_57(D) + 72B]
 18266 60d4 4C8B1F   		mov	r11, QWORD PTR [rdi]	# D__lsm0.755, *bitstorage_57(D)
 18267 60d7 4C8B5720 		mov	r10, QWORD PTR 32[rdi]	# D__lsm1.756, MEM[(uint64_t *)bitstorage_57(D) + 32B]
 18268 60db 4C8B4F40 		mov	r9, QWORD PTR 64[rdi]	# D__lsm2.757, MEM[(uint64_t *)bitstorage_57(D) + 64B]
 18269 60df 48894424 		mov	QWORD PTR -16[rsp], rax	# %sfp, D__lsm1.760
 18269      F0
 18270 60e4 488D4718 		lea	rax, 24[rdi]	# ivtmp.785,
 18271 60e8 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, D__lsm0.759
 18271      E8
 18272              	# sieve_extend.c:1350:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 18273              		.loc 1 1350 20 view .LVU6197
 18274 60ed 48C74424 		mov	QWORD PTR -32[rsp], 3	# %sfp,
 18274      E0030000 
 18274      00
 18275 60f6 4C897424 		mov	QWORD PTR -8[rsp], r14	# %sfp, D__lsm2.761
 18275      F8
 18276              	.LVL1089:
 18277              	.L1505:
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18278              		.loc 1 1351 9 is_stmt 1 discriminator 3 view .LVU6198
 18279              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
 18280              		.loc 1 1351 80 is_stmt 0 discriminator 3 view .LVU6199
 18281 60fb 41BF3600 		mov	r15d, 54	# tmp312,
 18281      0000
 18282 6101 C4E283F7 		shrx	rcx, QWORD PTR -32[rax], r15	# tmp190, MEM[base: _352, offset: -32B], tmp312
 18282      48E0
 18283              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
1354:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18284              		.loc 1 1354 140 discriminator 3 view .LVU6200
 18285 6107 4C8B7C24 		mov	r15, QWORD PTR -24[rsp]	# D__lsm0.759, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 482


 18285      E8
 18286              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18287              		.loc 1 1351 140 discriminator 3 view .LVU6201
 18288 610c 4D89D8   		mov	r8, r11	# tmp192, D__lsm0.755
 18289 610f 49C1E00A 		sal	r8, 10	# tmp192,
 18290              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18291              		.loc 1 1352 140 discriminator 3 view .LVU6202
 18292 6113 4989EE   		mov	r14, rbp	# tmp194, D__lsm0.751
 18293              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18294              		.loc 1 1353 80 discriminator 3 view .LVU6203
 18295 6116 48C1ED36 		shr	rbp, 54	# tmp195,
 18296              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18297              		.loc 1 1351 102 discriminator 3 view .LVU6204
 18298 611a 4C09C1   		or	rcx, r8	# _24, tmp192
 18299              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18300              		.loc 1 1354 140 discriminator 3 view .LVU6205
 18301 611d 49C1E70A 		sal	r15, 10	# D__lsm0.759,
 18302              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18303              		.loc 1 1353 140 discriminator 3 view .LVU6206
 18304 6121 4D89E8   		mov	r8, r13	# tmp196, D__lsm0.747
 18305              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18306              		.loc 1 1354 80 discriminator 3 view .LVU6207
 18307 6124 49C1ED36 		shr	r13, 54	# tmp197,
 18308              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18309              		.loc 1 1353 140 discriminator 3 view .LVU6208
 18310 6128 49C1E00A 		sal	r8, 10	# tmp196,
 18311              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18312              		.loc 1 1354 102 discriminator 3 view .LVU6209
 18313 612c 4D09EF   		or	r15, r13	# _51, tmp197
 18314              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18315              		.loc 1 1351 140 discriminator 3 view .LVU6210
 18316 612f 4D89D5   		mov	r13, r10	# tmp201, D__lsm1.756
 18317              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18318              		.loc 1 1353 102 discriminator 3 view .LVU6211
 18319 6132 4909E8   		or	r8, rbp	# _42, tmp195
 18320              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18321              		.loc 1 1352 80 discriminator 3 view .LVU6212
 18322 6135 49C1EA36 		shr	r10, 54	# D__lsm1.756,
 18323 6139 49C1EB36 		shr	r11, 54	# tmp193,
 18324 613d 4C89D5   		mov	rbp, r10	# tmp202, D__lsm1.756
 18325              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18326              		.loc 1 1351 140 discriminator 3 view .LVU6213
 18327 6140 49C1E50A 		sal	r13, 10	# tmp201,
 18328              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18329              		.loc 1 1352 140 discriminator 3 view .LVU6214
 18330 6144 4989DA   		mov	r10, rbx	# tmp203, D__lsm1.752
GAS LISTING /tmp/ccRwwoRx.s 			page 483


 18331 6147 49C1E20A 		sal	r10, 10	# tmp203,
 18332 614b 49C1E60A 		sal	r14, 10	# tmp194,
 18333              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18334              		.loc 1 1352 102 discriminator 3 view .LVU6215
 18335 614f 4C09D5   		or	rbp, r10	# D__lsm0.751, tmp203
 18336              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18337              		.loc 1 1354 140 discriminator 3 view .LVU6216
 18338 6152 4C8B5424 		mov	r10, QWORD PTR -16[rsp]	# D__lsm1.760, %sfp
 18338      F0
 18339              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18340              		.loc 1 1352 102 discriminator 3 view .LVU6217
 18341 6157 4D09DE   		or	r14, r11	# _33, tmp193
 18342              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18343              		.loc 1 1351 42 discriminator 3 view .LVU6218
 18344 615a 48894848 		mov	QWORD PTR 72[rax], rcx	# MEM[base: _352, offset: 72B], _24
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18345              		.loc 1 1352 9 is_stmt 1 discriminator 3 view .LVU6219
 18346              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18347              		.loc 1 1351 80 is_stmt 0 discriminator 3 view .LVU6220
 18348 615e 41BB3600 		mov	r11d, 54	# tmp317,
 18348      0000
 18349 6164 C462A3F7 		shrx	r11, QWORD PTR [rax], r11	# tmp199, MEM[base: _352, offset: 0B], tmp317
 18349      18
 18350              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18351              		.loc 1 1352 42 discriminator 3 view .LVU6221
 18352 6169 4C897050 		mov	QWORD PTR 80[rax], r14	# MEM[base: _352, offset: 80B], _33
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18353              		.loc 1 1353 9 is_stmt 1 discriminator 3 view .LVU6222
 18354              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18355              		.loc 1 1354 140 is_stmt 0 discriminator 3 view .LVU6223
 18356 616d 49C1E20A 		sal	r10, 10	# D__lsm1.760,
 18357              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18358              		.loc 1 1351 102 discriminator 3 view .LVU6224
 18359 6171 4D09EB   		or	r11, r13	# D__lsm0.755, tmp201
 18360              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18361              		.loc 1 1353 42 discriminator 3 view .LVU6225
 18362 6174 4C894058 		mov	QWORD PTR 88[rax], r8	# MEM[base: _352, offset: 88B], _42
 18363              		.loc 1 1354 9 is_stmt 1 discriminator 3 view .LVU6226
 18364              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18365              		.loc 1 1353 80 is_stmt 0 discriminator 3 view .LVU6227
 18366 6178 4989DD   		mov	r13, rbx	# D__lsm1.752, D__lsm1.752
 18367 617b 49C1ED36 		shr	r13, 54	# D__lsm1.752,
 18368              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18369              		.loc 1 1353 140 discriminator 3 view .LVU6228
 18370 617f 4C89E3   		mov	rbx, r12	# tmp205, D__lsm1.748
 18371 6182 48C1E30A 		sal	rbx, 10	# tmp205,
 18372              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18373              		.loc 1 1354 80 discriminator 3 view .LVU6229
GAS LISTING /tmp/ccRwwoRx.s 			page 484


 18374 6186 49C1EC36 		shr	r12, 54	# tmp206,
 18375              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18376              		.loc 1 1353 102 discriminator 3 view .LVU6230
 18377 618a 4909DD   		or	r13, rbx	# D__lsm0.747, tmp205
 18378              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18379              		.loc 1 1351 140 discriminator 3 view .LVU6231
 18380 618d 4C89CB   		mov	rbx, r9	# tmp210, D__lsm2.757
 18381              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18382              		.loc 1 1354 102 discriminator 3 view .LVU6232
 18383 6190 4D09D4   		or	r12, r10	# tmp206, tmp207
 18384              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18385              		.loc 1 1351 140 discriminator 3 view .LVU6233
 18386 6193 48C1E30A 		sal	rbx, 10	# tmp210,
 18387              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18388              		.loc 1 1352 80 discriminator 3 view .LVU6234
 18389 6197 49C1E936 		shr	r9, 54	# D__lsm2.757,
 18390              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18391              		.loc 1 1354 42 discriminator 3 view .LVU6235
 18392 619b 4C89A080 		mov	QWORD PTR 128[rax], r12	# MEM[base: _352, offset: 128B], D__lsm0.759
 18392      000000
 18393              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18394              		.loc 1 1354 102 discriminator 3 view .LVU6236
 18395 61a2 4C896424 		mov	QWORD PTR -24[rsp], r12	# %sfp, D__lsm0.759
 18395      E8
 18396              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18397              		.loc 1 1351 80 discriminator 3 view .LVU6237
 18398 61a7 41BC3600 		mov	r12d, 54	# tmp326,
 18398      0000
 18399 61ad C4629BF7 		shrx	r10, QWORD PTR 32[rax], r12	# tmp208, MEM[base: _352, offset: 32B], tmp326
 18399      5020
 18400              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18401              		.loc 1 1351 102 discriminator 3 view .LVU6238
 18402 61b3 4909DA   		or	r10, rbx	# D__lsm1.756, tmp210
 18403              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18404              		.loc 1 1352 80 discriminator 3 view .LVU6239
 18405 61b6 4C89CB   		mov	rbx, r9	# tmp211, D__lsm2.757
 18406              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18407              		.loc 1 1352 140 discriminator 3 view .LVU6240
 18408 61b9 4989D1   		mov	r9, rdx	# tmp212, D__lsm2.753
 18409 61bc 49C1E10A 		sal	r9, 10	# tmp212,
 18410              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18411              		.loc 1 1353 80 discriminator 3 view .LVU6241
 18412 61c0 4989D4   		mov	r12, rdx	# D__lsm2.753, D__lsm2.753
 18413              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18414              		.loc 1 1352 102 discriminator 3 view .LVU6242
 18415 61c3 4C09CB   		or	rbx, r9	# D__lsm1.752, tmp212
 18416              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
GAS LISTING /tmp/ccRwwoRx.s 			page 485


1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18417              		.loc 1 1353 140 discriminator 3 view .LVU6243
 18418 61c6 4889F2   		mov	rdx, rsi	# tmp214, D__lsm2.749
 18419              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18420              		.loc 1 1354 140 discriminator 3 view .LVU6244
 18421 61c9 4C8B4C24 		mov	r9, QWORD PTR -8[rsp]	# D__lsm2.761, %sfp
 18421      F8
 18422              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18423              		.loc 1 1353 80 discriminator 3 view .LVU6245
 18424 61ce 49C1EC36 		shr	r12, 54	# D__lsm2.753,
 18425              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18426              		.loc 1 1353 140 discriminator 3 view .LVU6246
 18427 61d2 48C1E20A 		sal	rdx, 10	# tmp214,
 18428              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18429              		.loc 1 1354 140 discriminator 3 view .LVU6247
 18430 61d6 49C1E10A 		sal	r9, 10	# D__lsm2.761,
 18431              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18432              		.loc 1 1353 102 discriminator 3 view .LVU6248
 18433 61da 4909D4   		or	r12, rdx	# D__lsm1.748, tmp214
 18434              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18435              		.loc 1 1354 80 discriminator 3 view .LVU6249
 18436 61dd 48C1EE36 		shr	rsi, 54	# tmp215,
 18437              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18438              		.loc 1 1351 140 discriminator 3 view .LVU6250
 18439 61e1 4889CA   		mov	rdx, rcx	# tmp219, _24
 18440              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18441              		.loc 1 1354 42 discriminator 3 view .LVU6251
 18442 61e4 4C897860 		mov	QWORD PTR 96[rax], r15	# MEM[base: _352, offset: 96B], _51
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18443              		.loc 1 1350 54 is_stmt 1 discriminator 3 view .LVU6252
 18444              	.LVL1090:
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18445              		.loc 1 1350 37 discriminator 3 view .LVU6253
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18446              		.loc 1 1351 9 discriminator 3 view .LVU6254
 18447              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18448              		.loc 1 1354 102 is_stmt 0 discriminator 3 view .LVU6255
 18449 61e8 4C09CE   		or	rsi, r9	# tmp215, tmp216
 18450              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18451              		.loc 1 1351 140 discriminator 3 view .LVU6256
 18452 61eb 48C1E20A 		sal	rdx, 10	# tmp219,
 18453              	# sieve_extend.c:1350:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18454              		.loc 1 1350 65 discriminator 3 view .LVU6257
 18455 61ef 48834424 		add	QWORD PTR -32[rsp], 4	# %sfp,
 18455      E004
 18456              	.LVL1091:
 18457              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18458              		.loc 1 1354 42 discriminator 3 view .LVU6258
 18459 61f5 4889B0A0 		mov	QWORD PTR 160[rax], rsi	# MEM[base: _352, offset: 160B], D__lsm1.760
 18459      000000
 18460 61fc 4883E880 		sub	rax, -128	# ivtmp.785,
GAS LISTING /tmp/ccRwwoRx.s 			page 486


 18461              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18462              		.loc 1 1354 102 discriminator 3 view .LVU6259
 18463 6200 48897424 		mov	QWORD PTR -16[rsp], rsi	# %sfp, D__lsm1.760
 18463      F0
 18464              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18465              		.loc 1 1351 80 discriminator 3 view .LVU6260
 18466 6205 BE360000 		mov	esi, 54	# tmp335,
 18466      00
 18467 620a C462CBF7 		shrx	r9, QWORD PTR -64[rax], rsi	# tmp217, MEM[base: _352, offset: 64B], tmp335
 18467      48C0
 18468              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18469              		.loc 1 1351 102 discriminator 3 view .LVU6261
 18470 6210 4909D1   		or	r9, rdx	# D__lsm2.757, tmp219
 18471              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18472              		.loc 1 1352 140 discriminator 3 view .LVU6262
 18473 6213 4C89F2   		mov	rdx, r14	# tmp221, _33
 18474              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18475              		.loc 1 1353 140 discriminator 3 view .LVU6263
 18476 6216 4C89C6   		mov	rsi, r8	# tmp223, _42
 18477              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18478              		.loc 1 1352 80 discriminator 3 view .LVU6264
 18479 6219 48C1E936 		shr	rcx, 54	# tmp220,
 18480              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18481              		.loc 1 1352 140 discriminator 3 view .LVU6265
 18482 621d 48C1E20A 		sal	rdx, 10	# tmp221,
 18483              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18484              		.loc 1 1353 80 discriminator 3 view .LVU6266
 18485 6221 49C1EE36 		shr	r14, 54	# tmp222,
 18486              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18487              		.loc 1 1352 102 discriminator 3 view .LVU6267
 18488 6225 4809CA   		or	rdx, rcx	# D__lsm2.753, tmp220
 18489              	# sieve_extend.c:1350:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18490              		.loc 1 1350 65 discriminator 3 view .LVU6268
 18491 6228 488B4C24 		mov	rcx, QWORD PTR -32[rsp]	# copy_vector, %sfp
 18491      E0
 18492              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18493              		.loc 1 1353 140 discriminator 3 view .LVU6269
 18494 622d 48C1E60A 		sal	rsi, 10	# tmp223,
 18495              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18496              		.loc 1 1354 140 discriminator 3 view .LVU6270
 18497 6231 49C1E70A 		sal	r15, 10	# tmp225,
 18498              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18499              		.loc 1 1353 102 discriminator 3 view .LVU6271
 18500 6235 4C09F6   		or	rsi, r14	# D__lsm2.749, tmp222
 18501              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18502              		.loc 1 1354 80 discriminator 3 view .LVU6272
GAS LISTING /tmp/ccRwwoRx.s 			page 487


 18503 6238 49C1E836 		shr	r8, 54	# tmp224,
 18504              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18505              		.loc 1 1351 42 discriminator 3 view .LVU6273
 18506 623c 4C8958E8 		mov	QWORD PTR -24[rax], r11	# MEM[base: _352, offset: 104B], D__lsm0.755
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18507              		.loc 1 1352 9 is_stmt 1 discriminator 3 view .LVU6274
 18508              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18509              		.loc 1 1354 102 is_stmt 0 discriminator 3 view .LVU6275
 18510 6240 4D09F8   		or	r8, r15	# tmp224, tmp225
 18511              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18512              		.loc 1 1352 42 discriminator 3 view .LVU6276
 18513 6243 488968F0 		mov	QWORD PTR -16[rax], rbp	# MEM[base: _352, offset: 112B], D__lsm0.751
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18514              		.loc 1 1353 9 is_stmt 1 discriminator 3 view .LVU6277
 18515              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18516              		.loc 1 1353 42 is_stmt 0 discriminator 3 view .LVU6278
 18517 6247 4C8968F8 		mov	QWORD PTR -8[rax], r13	# MEM[base: _352, offset: 120B], D__lsm0.747
 18518              		.loc 1 1354 9 is_stmt 1 discriminator 3 view .LVU6279
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18519              		.loc 1 1350 54 discriminator 3 view .LVU6280
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18520              		.loc 1 1350 37 discriminator 3 view .LVU6281
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18521              		.loc 1 1351 9 discriminator 3 view .LVU6282
 18522              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18523              		.loc 1 1351 42 is_stmt 0 discriminator 3 view .LVU6283
 18524 624b 4C895008 		mov	QWORD PTR 8[rax], r10	# MEM[base: _352, offset: 136B], D__lsm1.756
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18525              		.loc 1 1352 9 is_stmt 1 discriminator 3 view .LVU6284
 18526              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18527              		.loc 1 1352 42 is_stmt 0 discriminator 3 view .LVU6285
 18528 624f 48895810 		mov	QWORD PTR 16[rax], rbx	# MEM[base: _352, offset: 144B], D__lsm1.752
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18529              		.loc 1 1353 9 is_stmt 1 discriminator 3 view .LVU6286
 18530              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18531              		.loc 1 1353 42 is_stmt 0 discriminator 3 view .LVU6287
 18532 6253 4C896018 		mov	QWORD PTR 24[rax], r12	# MEM[base: _352, offset: 152B], D__lsm1.748
 18533              		.loc 1 1354 9 is_stmt 1 discriminator 3 view .LVU6288
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18534              		.loc 1 1350 54 discriminator 3 view .LVU6289
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18535              		.loc 1 1350 37 discriminator 3 view .LVU6290
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18536              		.loc 1 1351 9 discriminator 3 view .LVU6291
 18537              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18538              		.loc 1 1351 42 is_stmt 0 discriminator 3 view .LVU6292
 18539 6257 4C894828 		mov	QWORD PTR 40[rax], r9	# MEM[base: _352, offset: 168B], D__lsm2.757
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18540              		.loc 1 1352 9 is_stmt 1 discriminator 3 view .LVU6293
 18541              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
GAS LISTING /tmp/ccRwwoRx.s 			page 488


1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18542              		.loc 1 1352 42 is_stmt 0 discriminator 3 view .LVU6294
 18543 625b 48895030 		mov	QWORD PTR 48[rax], rdx	# MEM[base: _352, offset: 176B], D__lsm2.753
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18544              		.loc 1 1353 9 is_stmt 1 discriminator 3 view .LVU6295
 18545              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18546              		.loc 1 1353 42 is_stmt 0 discriminator 3 view .LVU6296
 18547 625f 48897038 		mov	QWORD PTR 56[rax], rsi	# MEM[base: _352, offset: 184B], D__lsm2.749
 18548              		.loc 1 1354 9 is_stmt 1 discriminator 3 view .LVU6297
 18549              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18550              		.loc 1 1354 42 is_stmt 0 discriminator 3 view .LVU6298
 18551 6263 4C894040 		mov	QWORD PTR 64[rax], r8	# MEM[base: _352, offset: 192B], D__lsm2.761
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18552              		.loc 1 1350 54 is_stmt 1 discriminator 3 view .LVU6299
 18553              	.LVL1092:
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18554              		.loc 1 1350 37 discriminator 3 view .LVU6300
 18555 6267 4881F98F 		cmp	rcx, 399	# copy_vector,
 18555      010000
 18556              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18557              		.loc 1 1354 102 is_stmt 0 discriminator 3 view .LVU6301
 18558 626e 4C894424 		mov	QWORD PTR -8[rsp], r8	# %sfp, D__lsm2.761
 18558      F8
 18559 6273 0F8582FE 		jne	.L1505	#,
 18559      FFFF
 18560 6279 488D8780 		lea	rax, 12672[rdi]	# ivtmp.771,
 18560      310000
 18561 6280 4C8DB7E0 		lea	r14, 12768[rdi]	# ivtmp.772,
 18561      310000
 18562 6287 4881C7A0 		add	rdi, 12704	# _224,
 18562      310000
 18563              	.LVL1093:
 18564 628e 6690     		.p2align 4
 18565              		.p2align 3
 18566              	.L1506:
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18567              		.loc 1 1351 9 is_stmt 1 view .LVU6302
 18568              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18569              		.loc 1 1351 140 is_stmt 0 view .LVU6303
 18570 6290 41B80A00 		mov	r8d, 10	# tmp343,
 18570      0000
 18571              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18572              		.loc 1 1351 80 view .LVU6304
 18573 6296 41BF3600 		mov	r15d, 54	# tmp344,
 18573      0000
 18574              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18575              		.loc 1 1351 140 view .LVU6305
 18576 629c C462B9F7 		shlx	r11, QWORD PTR [rax], r8	# tmp226, MEM[base: _232, offset: 0B], tmp343
 18576      18
 18577              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18578              		.loc 1 1351 80 view .LVU6306
 18579 62a1 C4E283F7 		shrx	rbp, QWORD PTR -8[rax], r15	# tmp228, MEM[base: _232, offset: -8B], tmp344
GAS LISTING /tmp/ccRwwoRx.s 			page 489


 18579      68F8
 18580              	# sieve_extend.c:1351:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1351:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 18581              		.loc 1 1351 102 view .LVU6307
 18582 62a7 4909EB   		or	r11, rbp	# tmp230, tmp228
 18583 62aa 4883C020 		add	rax, 32	# ivtmp.771,
 18584 62ae 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _231, offset: 0B], tmp230
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18585              		.loc 1 1352 9 is_stmt 1 view .LVU6308
 18586              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18587              		.loc 1 1352 140 is_stmt 0 view .LVU6309
 18588 62b1 C462B9F7 		shlx	r13, QWORD PTR -24[rax], r8	# tmp231, MEM[base: _232, offset: 8B], tmp345
 18588      68E8
 18589              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18590              		.loc 1 1352 80 view .LVU6310
 18591 62b7 C46283F7 		shrx	r10, QWORD PTR -32[rax], r15	# tmp233, MEM[base: _232, offset: 0B], tmp346
 18591      50E0
 18592              	# sieve_extend.c:1352:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1352:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 18593              		.loc 1 1352 102 view .LVU6311
 18594 62bd 4D09D5   		or	r13, r10	# tmp235, tmp233
 18595 62c0 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _231, offset: 8B], tmp235
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18596              		.loc 1 1353 9 is_stmt 1 view .LVU6312
 18597              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18598              		.loc 1 1353 140 is_stmt 0 view .LVU6313
 18599 62c4 C4E2B9F7 		shlx	rbx, QWORD PTR -16[rax], r8	# tmp236, MEM[base: _232, offset: 16B], tmp347
 18599      58F0
 18600              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18601              		.loc 1 1353 80 view .LVU6314
 18602 62ca C46283F7 		shrx	r12, QWORD PTR -24[rax], r15	# tmp238, MEM[base: _232, offset: 8B], tmp348
 18602      60E8
 18603              	# sieve_extend.c:1353:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1353:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 18604              		.loc 1 1353 102 view .LVU6315
 18605 62d0 4C09E3   		or	rbx, r12	# tmp240, tmp238
 18606 62d3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _231, offset: 16B], tmp240
 18607              		.loc 1 1354 9 is_stmt 1 view .LVU6316
 18608              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18609              		.loc 1 1354 80 is_stmt 0 view .LVU6317
 18610 62d7 C46283F7 		shrx	r9, QWORD PTR -16[rax], r15	# tmp241, MEM[base: _232, offset: 16B], tmp349
 18610      48F0
 18611              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18612              		.loc 1 1354 140 view .LVU6318
 18613 62dd C4E2B9F7 		shlx	rdx, QWORD PTR -8[rax], r8	# tmp243, MEM[base: _232, offset: 24B], tmp350
 18613      50F8
 18614              	# sieve_extend.c:1354:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 18615              		.loc 1 1354 102 view .LVU6319
 18616 62e3 4909D1   		or	r9, rdx	# tmp245, tmp243
 18617 62e6 4D894E18 		mov	QWORD PTR 24[r14], r9	# MEM[base: _231, offset: 24B], tmp245
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18618              		.loc 1 1350 54 is_stmt 1 view .LVU6320
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
GAS LISTING /tmp/ccRwwoRx.s 			page 490


 18619              		.loc 1 1350 37 view .LVU6321
 18620 62ea 4983C620 		add	r14, 32	# ivtmp.772,
 18621              	# sieve_extend.c:1350:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1350:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 18622              		.loc 1 1350 5 is_stmt 0 view .LVU6322
 18623 62ee 4839C7   		cmp	rdi, rax	# _224, ivtmp.771
 18624 62f1 759D     		jne	.L1506	#,
 18625              	.LBE989:
 18626              	# sieve_extend.c:1356: }
1355:sieve_extend.c ****     }
1356:sieve_extend.c **** }
 18627              		.loc 1 1356 1 view .LVU6323
 18628 62f3 5B       		pop	rbx	#
 18629              		.cfi_def_cfa_offset 48
 18630 62f4 5D       		pop	rbp	#
 18631              		.cfi_def_cfa_offset 40
 18632 62f5 415C     		pop	r12	#
 18633              		.cfi_def_cfa_offset 32
 18634 62f7 415D     		pop	r13	#
 18635              		.cfi_def_cfa_offset 24
 18636 62f9 415E     		pop	r14	#
 18637              		.cfi_def_cfa_offset 16
 18638 62fb 415F     		pop	r15	#
 18639              		.cfi_def_cfa_offset 8
 18640 62fd C3       		ret	
 18641              		.cfi_endproc
 18642              	.LFE98:
 18644              		.section	.rodata.str1.1
 18645              	.LC29:
 18646 0044 5573696E 		.string	"Using Pointers"
 18646      6720506F 
 18646      696E7465 
 18646      727300
 18647              	.LC30:
 18648 0053 2D2D6865 		.string	"--help"
 18648      6C7000
 18649              	.LC31:
 18650 005a 2D2D7665 		.string	"--verbose"
 18650      72626F73 
 18650      6500
 18651              	.LC32:
 18652 0064 4E6F2076 		.string	"No verbose level specified\n"
 18652      6572626F 
 18652      7365206C 
 18652      6576656C 
 18652      20737065 
 18653              		.section	.rodata.str1.8
 18654 03ae 0000     		.align 8
 18655              	.LC33:
 18656 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 18656      723A2049 
 18656      6E76616C 
 18656      6964206D 
 18656      65617375 
 18657              		.section	.rodata.str1.1
 18658              	.LC34:
 18659 0080 56657262 		.string	"Verbose level set to %d\n"
GAS LISTING /tmp/ccRwwoRx.s 			page 491


 18659      6F736520 
 18659      6C657665 
 18659      6C207365 
 18659      7420746F 
 18660              	.LC35:
 18661 0099 2D2D6368 		.string	"--check"
 18661      65636B00 
 18662              	.LC36:
 18663 00a1 2D2D7475 		.string	"--tune"
 18663      6E6500
 18664              	.LC37:
 18665 00a8 4E6F2074 		.string	"No tune level specified\n"
 18665      756E6520 
 18665      6C657665 
 18665      6C207370 
 18665      65636966 
 18666              		.section	.rodata.str1.8
 18667 03d5 000000   		.align 8
 18668              	.LC38:
 18669 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 18669      723A2049 
 18669      6E76616C 
 18669      69642074 
 18669      756E6520 
 18670              		.section	.rodata.str1.1
 18671              	.LC39:
 18672 00c1 54756E65 		.string	"Tune level set to %d\n"
 18672      206C6576 
 18672      656C2073 
 18672      65742074 
 18672      6F202564 
 18673              	.LC40:
 18674 00d7 2D2D7368 		.string	"--show"
 18674      6F7700
 18675              	.LC41:
 18676 00de 4E6F2073 		.string	"No show maximum specified\n"
 18676      686F7720 
 18676      6D617869 
 18676      6D756D20 
 18676      73706563 
 18677              	.LC42:
 18678 00f9 256A7500 		.string	"%ju"
 18679              		.section	.rodata.str1.8
 18680 03f7 00       		.align 8
 18681              	.LC43:
 18682 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 18682      723A2049 
 18682      6E76616C 
 18682      69642073 
 18682      686F7720 
 18683              		.section	.rodata.str1.1
 18684              	.LC44:
 18685 00fd 53686F77 		.string	"Show maximum set to %ju\n"
 18685      206D6178 
 18685      696D756D 
 18685      20736574 
 18685      20746F20 
GAS LISTING /tmp/ccRwwoRx.s 			page 492


 18686              	.LC45:
 18687 0116 496E7661 		.string	"Invalid size %s\n"
 18687      6C696420 
 18687      73697A65 
 18687      2025730A 
 18687      00
 18688              	.LC46:
 18689 0127 56616C69 		.string	"Validating... "
 18689      64617469 
 18689      6E672E2E 
 18689      2E2000
 18690              	.LC47:
 18691 0136 2E2E2E43 		.string	"...Checking size %ju ..."
 18691      6865636B 
 18691      696E6720 
 18691      73697A65 
 18691      20256A75 
 18692              	.LC48:
 18693 014f 2E626C6F 		.string	".blocksize %ju-"
 18693      636B7369 
 18693      7A652025 
 18693      6A752D00 
 18694              	.LC49:
 18695 015f 76616C69 		.string	"valid;"
 18695      643B00
 18696              	.LC50:
 18697 0166 2E2E2E56 		.string	"...Valid algorithm"
 18697      616C6964 
 18697      20616C67 
 18697      6F726974 
 18697      686D00
 18698              	.LC51:
 18699 0179 54756E69 		.string	"Tuning..."
 18699      6E672E2E 
 18699      2E00
 18700              	.LC52:
 18701 0183 2E283E29 		.string	".(>)"
 18701      00
 18702              		.section	.rodata.str1.8
 18703 0419 00000000 		.align 8
 18703      000000
 18704              	.LC53:
 18705 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 18705      6B73697A 
 18705      655F6269 
 18705      74732025 
 18705      31306A75 
 18706              		.section	.rodata.str1.1
 18707              	.LC54:
 18708 0188 2E2E2E2E 		.string	"...."
 18708      00
 18709              		.section	.rodata.str1.8
 18710 04a7 00       		.align 8
 18711              	.LC55:
 18712 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 18712      72657375 
 18712      6C74732E 
GAS LISTING /tmp/ccRwwoRx.s 			page 493


 18712      20496E69 
 18712      74616C20 
 18713              		.section	.rodata.str1.1
 18714              	.LC56:
 18715 018d 42657374 		.string	"Best options"
 18715      206F7074 
 18715      696F6E73 
 18715      00
 18716              	.LC57:
 18717 019a 28256A75 		.string	"(%ju) "
 18717      292000
 18718              	.LC58:
 18719 01a1 2E2E2E00 		.string	"..."
 18720              	.LC59:
 18721 01a5 2E426573 		.string	".Best result:"
 18721      74207265 
 18721      73756C74 
 18721      3A00
 18722              		.section	.rodata.str1.8
 18723 050f 00       		.align 8
 18724              	.LC60:
 18725 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 18725      686D6172 
 18725      6B696E67 
 18725      2E2E2E20 
 18725      77697468 
 18726 0547 00       		.align 8
 18727              	.LC62:
 18728 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 18728      65727661 
 18728      6E64616D 
 18728      5F657874 
 18728      656E643B 
 18729 058a 00000000 		.align 8
 18729      0000
 18730              	.LC63:
 18731 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 18731      6573202D 
 18731      20706572 
 18731      20352073 
 18731      65636F6E 
 18732              		.section	.rodata.str1.1
 18733              	.LC64:
 18734 01b3 53686F77 		.string	"Show result set:"
 18734      20726573 
 18734      756C7420 
 18734      7365743A 
 18734      00
 18735              		.section	.text.startup,"ax",@progbits
 18736              		.p2align 4
 18737              		.globl	main
 18739              	main:
 18740              	.LVL1094:
 18741              	.LFB99:
1357:sieve_extend.c **** int main(int argc, char *argv[]) {
 18742              		.loc 1 1357 34 is_stmt 1 view -0
 18743              		.cfi_startproc
GAS LISTING /tmp/ccRwwoRx.s 			page 494


 18744              		.loc 1 1357 34 is_stmt 0 view .LVU6325
 18745 0000 F30F1EFA 		endbr64	
 18746 0004 4157     		push	r15	#
 18747              		.cfi_def_cfa_offset 16
 18748              		.cfi_offset 15, -16
 18749 0006 4156     		push	r14	#
 18750              		.cfi_def_cfa_offset 24
 18751              		.cfi_offset 14, -24
 18752 0008 4155     		push	r13	#
 18753              		.cfi_def_cfa_offset 32
 18754              		.cfi_offset 13, -32
 18755 000a 4154     		push	r12	#
 18756              		.cfi_def_cfa_offset 40
 18757              		.cfi_offset 12, -40
 18758 000c 55       		push	rbp	#
 18759              		.cfi_def_cfa_offset 48
 18760              		.cfi_offset 6, -48
 18761 000d 53       		push	rbx	#
 18762              		.cfi_def_cfa_offset 56
 18763              		.cfi_offset 3, -56
 18764 000e 488DA424 		lea	rsp, -248[rsp]	#,
 18764      08FFFFFF 
 18765              		.cfi_def_cfa_offset 304
 18766              	# sieve_extend.c:1357: int main(int argc, char *argv[]) {
 18767              		.loc 1 1357 34 view .LVU6326
 18768 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 18768      25280000 
 18768      00
 18769 001f 48898424 		mov	QWORD PTR 232[rsp], rax	# D.7751, tmp571
 18769      E8000000 
 18770 0027 31C0     		xor	eax, eax	# tmp571
1358:sieve_extend.c ****     
1359:sieve_extend.c **** //     struct sieve_t* sieve = sieve_create(1000000);
1360:sieve_extend.c **** //     bitvector_t* bitstorage = (bitvector_t*)sieve->bitstorage;
1361:sieve_extend.c **** 
1362:sieve_extend.c **** //     int passes1 = benchmark(1, testshuffle_vector , sieve->bitstorage, 500000);
1363:sieve_extend.c **** //     int passes2 = benchmark(1, testshuffle_vector2, sieve->bitstorage, 500000);
1364:sieve_extend.c **** //     // int passes3 = benchmark(1, test3, sieve->bitstorage, 500000);
1365:sieve_extend.c **** 
1366:sieve_extend.c **** //     // testshuffle(bitstorage,1000000);
1367:sieve_extend.c **** // //    dump_bitstorage((bitword_t *)bitstorage,20);
1368:sieve_extend.c **** 
1369:sieve_extend.c **** //     sieve_delete(sieve);
1370:sieve_extend.c **** //     printf("Passes1:"); printfcomma2(passes1);printf("\n");
1371:sieve_extend.c **** //     printf("Passes2:"); printfcomma2(passes2);printf("\n");
1372:sieve_extend.c **** //     // printf("Passes3:"); printfcomma2(passes3);printf("\n");
1373:sieve_extend.c **** //     exit(0);
1374:sieve_extend.c ****     
1375:sieve_extend.c ****     
1376:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 18771              		.loc 1 1376 5 is_stmt 1 view .LVU6327
 18772              	# sieve_extend.c:1376:     counter_t option_maxFactor  = default_sieve_limit;
 18773              		.loc 1 1376 15 is_stmt 0 view .LVU6328
 18774 0029 48C78424 		mov	QWORD PTR 176[rsp], 1000000	# option_maxFactor,
 18774      B0000000 
 18774      40420F00 
1377:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
GAS LISTING /tmp/ccRwwoRx.s 			page 495


 18775              		.loc 1 1377 5 is_stmt 1 view .LVU6329
 18776              	.LBB1098:
 18777              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1378:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1379:sieve_extend.c ****     int option_check = default_check_level;
1380:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1381:sieve_extend.c **** 
1382:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 18778              		.loc 1 1382 5 is_stmt 0 view .LVU6330
 18779 0035 83FF01   		cmp	edi, 1	# argc,
 18780              	.LBE1098:
 18781              	# sieve_extend.c:1377:     counter_t option_showMaxFactor = default_showMaxFactor;
1377:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18782              		.loc 1 1377 15 view .LVU6331
 18783 0038 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 18783      B8000000 
 18783      00000000 
1378:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18784              		.loc 1 1378 5 is_stmt 1 view .LVU6332
 18785              	# sieve_extend.c:1378:     int option_verboselevel = default_verbose_level;
1378:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18786              		.loc 1 1378 9 is_stmt 0 view .LVU6333
 18787 0044 C78424A8 		mov	DWORD PTR 168[rsp], 2	# option_verboselevel,
 18787      00000002 
 18787      000000
1379:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 18788              		.loc 1 1379 5 is_stmt 1 view .LVU6334
 18789              	.LVL1095:
1380:sieve_extend.c **** 
 18790              		.loc 1 1380 5 view .LVU6335
 18791              	# sieve_extend.c:1380:     int option_tunelevel = default_tune_level;
1380:sieve_extend.c **** 
 18792              		.loc 1 1380 9 is_stmt 0 view .LVU6336
 18793 004f C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 18793      00000000 
 18793      000000
 18794              		.loc 1 1382 5 is_stmt 1 view .LVU6337
 18795              	.LBB1123:
 18796              		.loc 1 1382 10 view .LVU6338
 18797              	.LVL1096:
 18798              		.loc 1 1382 21 view .LVU6339
 18799              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
 18800              		.loc 1 1382 5 is_stmt 0 view .LVU6340
 18801 005a 0F8E2C05 		jle	.L1554	#,
 18801      0000
 18802 0060 89FD     		mov	ebp, edi	# argc, tmp527
 18803 0062 4989F4   		mov	r12, rsi	# argv, tmp528
 18804              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
 18805              		.loc 1 1382 14 view .LVU6341
 18806 0065 BB010000 		mov	ebx, 1	# arg,
 18806      00
 18807 006a 4C8D2D00 		lea	r13, .LC30[rip]	# tmp467,
 18807      000000
 18808              	# sieve_extend.c:1384:         else if (strcmp(argv[arg], "--verbose")==0) {
1383:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1384:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18809              		.loc 1 1384 18 view .LVU6342
GAS LISTING /tmp/ccRwwoRx.s 			page 496


 18810 0071 4C8D3500 		lea	r14, .LC31[rip]	# tmp482,
 18810      000000
 18811 0078 EB66     		jmp	.L1537	#
 18812              	.LVL1097:
 18813 007a 660F1F44 		.p2align 4,,7
 18813      0000
 18814              		.p2align 3
 18815              	.L1673:
1385:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18816              		.loc 1 1385 13 is_stmt 1 view .LVU6343
 18817              	# sieve_extend.c:1385:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 18818              		.loc 1 1385 16 is_stmt 0 view .LVU6344
 18819 0080 83C301   		add	ebx, 1	# arg,
 18820              	.LVL1098:
 18821              		.loc 1 1385 16 view .LVU6345
 18822 0083 39DD     		cmp	ebp, ebx	# argc, arg
 18823 0085 0F8E2B0F 		jle	.L1671	#,
 18823      0000
1386:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18824              		.loc 1 1386 13 is_stmt 1 view .LVU6346
 18825              	# sieve_extend.c:1386:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18826              		.loc 1 1386 28 is_stmt 0 view .LVU6347
 18827 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 18827      08
 18828              	# sieve_extend.c:1386:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18829              		.loc 1 1386 17 view .LVU6348
 18830 0090 488D9424 		lea	rdx, 168[rsp]	# tmp303,
 18830      A8000000 
 18831 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 18832 009b 31C0     		xor	eax, eax	#
 18833 009d 488D3500 		lea	rsi, .LC26[rip]	#,
 18833      000000
 18834 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 18834      00
 18835              	.LVL1099:
 18836              	# sieve_extend.c:1386:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18837              		.loc 1 1386 16 view .LVU6349
 18838 00a9 83F801   		cmp	eax, 1	# tmp529,
 18839 00ac 0F850C05 		jne	.L1543	#,
 18839      0000
 18840              	# sieve_extend.c:1386:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18841              		.loc 1 1386 91 discriminator 1 view .LVU6350
 18842 00b2 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.16_19, option_verboselevel
 18842      000000
 18843              	# sieve_extend.c:1386:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18844              		.loc 1 1386 68 discriminator 1 view .LVU6351
 18845 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 18846 00bc 0F8FFC04 		jg	.L1543	#,
 18846      0000
1387:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1388:sieve_extend.c ****             }
1389:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 18847              		.loc 1 1389 13 is_stmt 1 view .LVU6352
 18848              	.LVL1100:
 18849              	.LBB1099:
 18850              	.LBI1099:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccRwwoRx.s 			page 497


 18851              		.loc 3 105 1 view .LVU6353
 18852              	.LBB1100:
 18853              		.loc 3 107 3 view .LVU6354
 18854              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18855              		.loc 3 107 10 is_stmt 0 view .LVU6355
 18856 00c2 488D3500 		lea	rsi, .LC34[rip]	#,
 18856      000000
 18857 00c9 BF010000 		mov	edi, 1	#,
 18857      00
 18858 00ce 31C0     		xor	eax, eax	#
 18859 00d0 E8000000 		call	__printf_chk@PLT	#
 18859      00
 18860              	.LVL1101:
 18861              	.L1545:
 18862              		.loc 3 107 10 view .LVU6356
 18863              	.LBE1100:
 18864              	.LBE1099:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18865              		.loc 1 1382 33 is_stmt 1 discriminator 2 view .LVU6357
 18866              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18867              		.loc 1 1382 36 is_stmt 0 discriminator 2 view .LVU6358
 18868 00d5 83C301   		add	ebx, 1	# arg,
 18869              	.LVL1102:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18870              		.loc 1 1382 21 is_stmt 1 discriminator 2 view .LVU6359
 18871              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18872              		.loc 1 1382 5 is_stmt 0 discriminator 2 view .LVU6360
 18873 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 18874 00da 0F8E0001 		jle	.L1672	#,
 18874      0000
 18875              	.LVL1103:
 18876              	.L1537:
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18877              		.loc 1 1383 9 is_stmt 1 view .LVU6361
 18878              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18879              		.loc 1 1383 24 is_stmt 0 view .LVU6362
 18880 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 18881              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18882              		.loc 1 1383 13 view .LVU6363
 18883 00e3 41B90700 		mov	r9d, 7	# tmp292,
 18883      0000
 18884              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18885              		.loc 1 1383 24 view .LVU6364
 18886 00e9 48C1E003 		sal	rax, 3	# _2,
 18887              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18888              		.loc 1 1383 13 view .LVU6365
 18889 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp467
 18890              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18891              		.loc 1 1383 24 view .LVU6366
 18892 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
GAS LISTING /tmp/ccRwwoRx.s 			page 498


 18893              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18894              		.loc 1 1383 13 view .LVU6367
 18895 00f4 4C89C9   		mov	rcx, r9	# tmp493, tmp292
 18896 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 18897 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 18898 00fd F3A6     		repz cmpsb
 18899 00ff 0F97C2   		seta	dl	#, tmp293
 18900 0102 80DA00   		sbb	dl, 0	# _5
 18901              	# sieve_extend.c:1383:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1383:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18902              		.loc 1 1383 12 view .LVU6368
 18903 0105 84D2     		test	dl, dl	# _5
 18904 0107 0F84CE04 		je	.L1669	#,
 18904      0000
1384:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18905              		.loc 1 1384 14 is_stmt 1 view .LVU6369
 18906              	# sieve_extend.c:1384:         else if (strcmp(argv[arg], "--verbose")==0) {
1384:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18907              		.loc 1 1384 18 is_stmt 0 view .LVU6370
 18908 010d B90A0000 		mov	ecx, 10	# tmp298,
 18908      00
 18909 0112 4C89C6   		mov	rsi, r8	# _4, _4
 18910 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp482
 18911 0118 F3A6     		repz cmpsb
 18912 011a 410F97C2 		seta	r10b	#, tmp299
 18913 011e 4180DA00 		sbb	r10b, 0	# _11
 18914              	# sieve_extend.c:1384:         else if (strcmp(argv[arg], "--verbose")==0) {
1384:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18915              		.loc 1 1384 17 view .LVU6371
 18916 0122 4584D2   		test	r10b, r10b	# _11
 18917 0125 0F8455FF 		je	.L1673	#,
 18917      FFFF
1390:sieve_extend.c ****         } 
1391:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18918              		.loc 1 1391 14 is_stmt 1 view .LVU6372
 18919              	# sieve_extend.c:1391:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18920              		.loc 1 1391 18 is_stmt 0 view .LVU6373
 18921 012b B9080000 		mov	ecx, 8	# tmp308,
 18921      00
 18922 0130 4C89C6   		mov	rsi, r8	# _4, _4
 18923 0133 488D3D00 		lea	rdi, .LC35[rip]	# tmp307,
 18923      000000
 18924 013a F3A6     		repz cmpsb
 18925 013c 410F97C3 		seta	r11b	#, tmp309
 18926 0140 4180DB00 		sbb	r11b, 0	# _23
 18927              	# sieve_extend.c:1391:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18928              		.loc 1 1391 17 view .LVU6374
 18929 0144 4584DB   		test	r11b, r11b	# _23
 18930 0147 748C     		je	.L1545	#,
1392:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18931              		.loc 1 1392 14 is_stmt 1 view .LVU6375
 18932              	# sieve_extend.c:1392:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18933              		.loc 1 1392 18 is_stmt 0 view .LVU6376
 18934 0149 4C89C6   		mov	rsi, r8	# _4, _4
 18935 014c 488D3D00 		lea	rdi, .LC36[rip]	# tmp313,
 18935      000000
GAS LISTING /tmp/ccRwwoRx.s 			page 499


 18936 0153 4C89C9   		mov	rcx, r9	# tmp499, tmp292
 18937 0156 F3A6     		repz cmpsb
 18938 0158 0F97C2   		seta	dl	#, tmp315
 18939 015b 80DA00   		sbb	dl, 0	# _24
 18940              	# sieve_extend.c:1392:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18941              		.loc 1 1392 17 view .LVU6377
 18942 015e 84D2     		test	dl, dl	# _24
 18943 0160 0F855A01 		jne	.L1546	#,
 18943      0000
 18944              		.loc 1 1392 52 is_stmt 1 discriminator 1 view .LVU6378
 18945              	# sieve_extend.c:1392:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18946              		.loc 1 1392 68 is_stmt 0 discriminator 1 view .LVU6379
 18947 0166 C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 18947      00000000 
 18947      000000
1393:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 18948              		.loc 1 1393 13 is_stmt 1 discriminator 1 view .LVU6380
 18949              	# sieve_extend.c:1393:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 18950              		.loc 1 1393 16 is_stmt 0 discriminator 1 view .LVU6381
 18951 0171 83C301   		add	ebx, 1	# arg,
 18952              	.LVL1104:
 18953              		.loc 1 1393 16 discriminator 1 view .LVU6382
 18954 0174 39DD     		cmp	ebp, ebx	# argc, arg
 18955 0176 0F8E7A0E 		jle	.L1674	#,
 18955      0000
1394:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18956              		.loc 1 1394 13 is_stmt 1 view .LVU6383
 18957              	# sieve_extend.c:1394:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18958              		.loc 1 1394 28 is_stmt 0 view .LVU6384
 18959 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 18959      08
 18960              	# sieve_extend.c:1394:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18961              		.loc 1 1394 17 view .LVU6385
 18962 0181 488D9424 		lea	rdx, 172[rsp]	# tmp319,
 18962      AC000000 
 18963 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 18964 018c 31C0     		xor	eax, eax	#
 18965 018e 488D3500 		lea	rsi, .LC26[rip]	#,
 18965      000000
 18966 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 18966      00
 18967              	.LVL1105:
 18968              	# sieve_extend.c:1394:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18969              		.loc 1 1394 16 view .LVU6386
 18970 019a 83F801   		cmp	eax, 1	# tmp530,
 18971 019d 0F85350E 		jne	.L1548	#,
 18971      0000
 18972              	# sieve_extend.c:1394:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18973              		.loc 1 1394 85 discriminator 1 view .LVU6387
 18974 01a3 8B9424AC 		mov	edx, DWORD PTR 172[rsp]	# option_tunelevel.20_32, option_tunelevel
 18974      000000
 18975              	# sieve_extend.c:1394:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18976              		.loc 1 1394 65 discriminator 1 view .LVU6388
 18977 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 18978 01ad 0F8F250E 		jg	.L1548	#,
 18978      0000
1395:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
GAS LISTING /tmp/ccRwwoRx.s 			page 500


1396:sieve_extend.c ****             }
1397:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 18979              		.loc 1 1397 13 is_stmt 1 view .LVU6389
 18980              	.LVL1106:
 18981              	.LBB1101:
 18982              	.LBI1101:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18983              		.loc 3 105 1 view .LVU6390
 18984              	.LBB1102:
 18985              		.loc 3 107 3 view .LVU6391
 18986              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18987              		.loc 3 107 10 is_stmt 0 view .LVU6392
 18988 01b3 31C0     		xor	eax, eax	#
 18989 01b5 488D3500 		lea	rsi, .LC39[rip]	#,
 18989      000000
 18990 01bc BF010000 		mov	edi, 1	#,
 18990      00
 18991              	.LBE1102:
 18992              	.LBE1101:
 18993              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18994              		.loc 1 1382 36 view .LVU6393
 18995 01c1 83C301   		add	ebx, 1	# arg,
 18996              	.LVL1107:
 18997              	.LBB1104:
 18998              	.LBB1103:
 18999              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19000              		.loc 3 107 10 view .LVU6394
 19001 01c4 E8000000 		call	__printf_chk@PLT	#
 19001      00
 19002              	.LVL1108:
 19003              		.loc 3 107 10 view .LVU6395
 19004              	.LBE1103:
 19005              	.LBE1104:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19006              		.loc 1 1382 33 is_stmt 1 view .LVU6396
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19007              		.loc 1 1382 21 view .LVU6397
 19008              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19009              		.loc 1 1382 5 is_stmt 0 view .LVU6398
 19010 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 19011 01cb 0F8F0FFF 		jg	.L1537	#,
 19011      FFFF
 19012 01d1 66662E0F 		.p2align 4
 19012      1F840000 
 19012      0000000F 
 19012      1F4000
 19013              		.p2align 3
 19014              	.L1672:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19015              		.loc 1 1382 5 view .LVU6399
 19016              	.LBE1123:
1398:sieve_extend.c ****         }
1399:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1400:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1401:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
GAS LISTING /tmp/ccRwwoRx.s 			page 501


1402:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1403:sieve_extend.c ****             }
1404:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1405:sieve_extend.c ****         }
1406:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1407:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1408:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1409:sieve_extend.c ****         }
1410:sieve_extend.c ****     }
1411:sieve_extend.c **** 
1412:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 19017              		.loc 1 1412 5 is_stmt 1 view .LVU6400
1413:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
1414:sieve_extend.c ****         printf("\nResult set:\n");
1415:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1416:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
1417:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1418:sieve_extend.c ****         else printf("The sieve is VALID\n");
1419:sieve_extend.c ****         sieve_delete(sieve);
1420:sieve_extend.c ****         exit(0);
1421:sieve_extend.c ****     }
1422:sieve_extend.c **** 
1423:sieve_extend.c ****     struct timespec start_time,end_time;
 19018              		.loc 1 1423 5 view .LVU6401
1424:sieve_extend.c **** 
1425:sieve_extend.c ****     if (option_verboselevel >=1) {
 19019              		.loc 1 1425 5 view .LVU6402
 19020              	# sieve_extend.c:1425:     if (option_verboselevel >=1) {
 19021              		.loc 1 1425 8 is_stmt 0 view .LVU6403
 19022 01e0 8BAC24A8 		mov	ebp, DWORD PTR 168[rsp]	#, option_verboselevel
 19022      000000
 19023              	.LVL1109:
 19024              		.loc 1 1425 8 view .LVU6404
 19025 01e7 85ED     		test	ebp, ebp	#
 19026 01e9 0F8F9D03 		jg	.L1554	#,
 19026      0000
 19027              	.LVL1110:
 19028              	.L1555:
1426:sieve_extend.c ****         #if __APPLE__
1427:sieve_extend.c ****             printf("Apple detected. Using arrays instead of pointers\n");
1428:sieve_extend.c ****         #else
1429:sieve_extend.c ****             printf("Using Pointers\n");
1430:sieve_extend.c ****         #endif
1431:sieve_extend.c ****     }
1432:sieve_extend.c ****         
1433:sieve_extend.c ****     if (option_check) {
1434:sieve_extend.c ****         // Count the number of primes and validate the result
1435:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
1436:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19029              		.loc 1 1436 9 is_stmt 1 view .LVU6405
 19030              	# sieve_extend.c:1436:         if (option_verboselevel >= 2) printf("\n");
 19031              		.loc 1 1436 12 is_stmt 0 view .LVU6406
 19032 01ef 83BC24A8 		cmp	DWORD PTR 168[rsp], 1	# option_verboselevel,
 19032      00000001 
 19033 01f7 7E0A     		jle	.L1556	#,
 19034              		.loc 1 1436 39 is_stmt 1 view .LVU6407
 19035              	.LVL1111:
GAS LISTING /tmp/ccRwwoRx.s 			page 502


 19036              	.LBB1124:
 19037              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19038              		.loc 3 105 1 view .LVU6408
 19039              	.LBB1125:
 19040              		.loc 3 107 3 view .LVU6409
 19041              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19042              		.loc 3 107 10 is_stmt 0 view .LVU6410
 19043 01f9 BF0A0000 		mov	edi, 10	#,
 19043      00
 19044 01fe E8000000 		call	putchar@PLT	#
 19044      00
 19045              	.LVL1112:
 19046              	.L1556:
 19047              		.loc 3 107 10 view .LVU6411
 19048              	.LBE1125:
 19049              	.LBE1124:
 19050              	.LBB1126:
 19051              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19052              		.loc 1 1382 14 view .LVU6412
 19053 0203 C7442428 		mov	DWORD PTR 40[rsp], 5	# %sfp,
 19053      05000000 
 19054 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 19054      0000
 19055              	.LBE1126:
 19056              	.LBB1127:
 19057              	.LBB1128:
 19058              	.LBB1129:
 19059              	.LBB1130:
 19060              	.LBB1131:
 19061              	.LBB1132:
 19062              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19063              		.loc 3 107 10 view .LVU6413
 19064 0211 4C8D3500 		lea	r14, .LC48[rip]	# tmp481,
 19064      000000
 19065              	.L1563:
 19066              	.LVL1113:
 19067              		.loc 3 107 10 view .LVU6414
 19068              	.LBE1132:
 19069              	.LBE1131:
 19070              	.LBE1130:
 19071              	.LBE1129:
1437:sieve_extend.c **** 
1438:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1439:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; sieveSize_check *=10) {
1440:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19072              		.loc 1 1440 13 is_stmt 1 view .LVU6415
 19073              	# sieve_extend.c:1440:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19074              		.loc 1 1440 37 is_stmt 0 view .LVU6416
 19075 0218 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 19075      000000
 19076              	# sieve_extend.c:1440:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19077              		.loc 1 1440 16 view .LVU6417
 19078 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 19079 0222 7E1D     		jle	.L1557	#,
 19080              		.loc 1 1440 43 is_stmt 1 view .LVU6418
GAS LISTING /tmp/ccRwwoRx.s 			page 503


 19081              	.LVL1114:
 19082              	.LBB1148:
 19083              	.LBI1148:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19084              		.loc 3 105 1 view .LVU6419
 19085              	.LBB1149:
 19086              		.loc 3 107 3 view .LVU6420
 19087              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19088              		.loc 3 107 10 is_stmt 0 view .LVU6421
 19089 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 19090 0227 488D3500 		lea	rsi, .LC47[rip]	#,
 19090      000000
 19091 022e BF010000 		mov	edi, 1	#,
 19091      00
 19092 0233 31C0     		xor	eax, eax	#
 19093 0235 E8000000 		call	__printf_chk@PLT	#
 19093      00
 19094              	.LVL1115:
 19095 023a 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 19095      000000
 19096              	.LVL1116:
 19097              	.L1557:
 19098              		.loc 3 107 10 view .LVU6422
 19099              	.LBE1149:
 19100              	.LBE1148:
 19101              	.LBE1128:
 19102              	.LBE1127:
 19103              	.LBB1158:
 19104              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19105              		.loc 1 1382 14 view .LVU6423
 19106 0241 41BC0500 		mov	r12d, 5	# ivtmp_69,
 19106      0000
 19107 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 19107      00
 19108 024c EB56     		jmp	.L1561	#
 19109              	.LVL1117:
 19110 024e 6690     		.p2align 4,,7
 19111              		.p2align 3
 19112              	.L1558:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19113              		.loc 1 1382 14 view .LVU6424
 19114              	.LBE1158:
 19115              	.LBB1159:
 19116              	.LBB1155:
 19117              	.LBB1150:
 19118              	.LBB1143:
1441:sieve_extend.c ****             struct sieve_t *sieve_check;
1442:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1443:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1444:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 19119              		.loc 1 1444 17 is_stmt 1 view .LVU6425
 19120              	# sieve_extend.c:1444:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 19121              		.loc 1 1444 31 is_stmt 0 view .LVU6426
 19122 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 19123 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 19124 0256 E8000000 		call	sieve_shake	#
GAS LISTING /tmp/ccRwwoRx.s 			page 504


 19124      00
 19125              	.LVL1118:
 19126              	# sieve_extend.c:1445:                 int valid = validatePrimeCount(sieve_check,option_verboselev
1445:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 19127              		.loc 1 1445 29 view .LVU6427
 19128 025b 8BB424A8 		mov	esi, DWORD PTR 168[rsp]	#, option_verboselevel
 19128      000000
 19129              	# sieve_extend.c:1444:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
1444:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 19130              		.loc 1 1444 31 view .LVU6428
 19131 0262 4989C7   		mov	r15, rax	# sieve_check, tmp533
 19132              	.LVL1119:
 19133              		.loc 1 1445 17 is_stmt 1 view .LVU6429
 19134              	# sieve_extend.c:1445:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 19135              		.loc 1 1445 29 is_stmt 0 view .LVU6430
 19136 0265 4889C7   		mov	rdi, rax	#, sieve_check
 19137 0268 E8000000 		call	validatePrimeCount	#
 19137      00
 19138              	.LVL1120:
 19139              	.LBB1134:
 19140              	.LBB1135:
 19141              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 19142              		.loc 1 112 5 view .LVU6431
 19143 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_check_130->bitstorage
 19144              	.LBE1135:
 19145              	.LBE1134:
 19146              	# sieve_extend.c:1445:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 19147              		.loc 1 1445 29 view .LVU6432
 19148 0270 89C3     		mov	ebx, eax	# valid, tmp534
 19149              	.LVL1121:
1446:sieve_extend.c ****                 sieve_delete(sieve_check);
 19150              		.loc 1 1446 17 is_stmt 1 view .LVU6433
 19151              	.LBB1137:
 19152              	.LBI1134:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 19153              		.loc 1 111 13 view .LVU6434
 19154              	.LBB1136:
 112:sieve_extend.c ****     free(sieve);
 19155              		.loc 1 112 5 view .LVU6435
 19156 0272 E8000000 		call	free@PLT	#
 19156      00
 19157              	.LVL1122:
 113:sieve_extend.c **** }
 19158              		.loc 1 113 5 view .LVU6436
 19159 0277 4C89FF   		mov	rdi, r15	#, sieve_check
 19160 027a E8000000 		call	free@PLT	#
 19160      00
 19161              	.LVL1123:
 113:sieve_extend.c **** }
 19162              		.loc 1 113 5 is_stmt 0 view .LVU6437
 19163              	.LBE1136:
 19164              	.LBE1137:
1447:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 19165              		.loc 1 1447 17 is_stmt 1 view .LVU6438
 19166              	# sieve_extend.c:1447:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19167              		.loc 1 1447 20 is_stmt 0 view .LVU6439
GAS LISTING /tmp/ccRwwoRx.s 			page 505


 19168 027f 85DB     		test	ebx, ebx	# valid
 19169 0281 0F84D902 		je	.L1599	#,
 19169      0000
 19170              		.loc 1 1447 44 is_stmt 1 discriminator 2 view .LVU6440
 19171              	# sieve_extend.c:1447:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19172              		.loc 1 1447 68 is_stmt 0 discriminator 2 view .LVU6441
 19173 0287 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 19173      000000
 19174              	# sieve_extend.c:1447:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19175              		.loc 1 1447 47 discriminator 2 view .LVU6442
 19176 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 19177 0291 0F8FE900 		jg	.L1675	#,
 19177      0000
 19178              	.LBE1143:
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19179              		.loc 1 1442 75 is_stmt 1 discriminator 2 view .LVU6443
 19180              	# sieve_extend.c:1442:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19181              		.loc 1 1442 90 is_stmt 0 discriminator 2 view .LVU6444
 19182 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 19183              	.LVL1124:
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19184              		.loc 1 1442 49 is_stmt 1 discriminator 2 view .LVU6445
 19185              	# sieve_extend.c:1442:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19186              		.loc 1 1442 13 is_stmt 0 discriminator 2 view .LVU6446
 19187 029a 4183EC01 		sub	r12d, 1	# ivtmp_69,
 19188 029e 0F840301 		je	.L1676	#,
 19188      0000
 19189              	.LVL1125:
 19190              	.L1561:
 19191              	.LBB1144:
1443:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 19192              		.loc 1 1443 17 is_stmt 1 view .LVU6447
 19193              	# sieve_extend.c:1443:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1443:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 19194              		.loc 1 1443 20 is_stmt 0 view .LVU6448
 19195 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 19196 02a7 7EA7     		jle	.L1558	#,
1443:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 19197              		.loc 1 1443 47 is_stmt 1 view .LVU6449
 19198              	.LVL1126:
 19199              	.LBB1138:
 19200              	.LBI1131:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19201              		.loc 3 105 1 view .LVU6450
 19202              	.LBB1133:
 19203              		.loc 3 107 3 view .LVU6451
 19204              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19205              		.loc 3 107 10 is_stmt 0 view .LVU6452
 19206 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 19207 02ac 4C89F6   		mov	rsi, r14	#, tmp481
 19208 02af BF010000 		mov	edi, 1	#,
 19208      00
 19209 02b4 31C0     		xor	eax, eax	#
 19210 02b6 E8000000 		call	__printf_chk@PLT	#
 19210      00
GAS LISTING /tmp/ccRwwoRx.s 			page 506


 19211              	.LVL1127:
 19212 02bb EB93     		jmp	.L1558	#
 19213              	.LVL1128:
 19214 02bd 0F1F00   		.p2align 4,,7
 19215              		.p2align 3
 19216              	.L1546:
 19217              		.loc 3 107 10 view .LVU6453
 19218              	.LBE1133:
 19219              	.LBE1138:
 19220              	.LBE1144:
 19221              	.LBE1150:
 19222              	.LBE1155:
 19223              	.LBE1159:
 19224              	.LBB1160:
1399:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19225              		.loc 1 1399 14 is_stmt 1 view .LVU6454
 19226              	# sieve_extend.c:1399:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1399:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19227              		.loc 1 1399 18 is_stmt 0 view .LVU6455
 19228 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 19229 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 19230 02c6 488D3D00 		lea	rdi, .LC40[rip]	# tmp323,
 19230      000000
 19231 02cd F3A6     		repz cmpsb
 19232 02cf 410F97C1 		seta	r9b	#, tmp325
 19233 02d3 4180D900 		sbb	r9b, 0	# _36
 19234              	# sieve_extend.c:1399:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1399:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19235              		.loc 1 1399 17 view .LVU6456
 19236 02d7 4584C9   		test	r9b, r9b	# _36
 19237 02da 756C     		jne	.L1550	#,
1399:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19238              		.loc 1 1399 52 is_stmt 1 discriminator 1 view .LVU6457
 19239              	# sieve_extend.c:1399:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1399:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19240              		.loc 1 1399 72 is_stmt 0 discriminator 1 view .LVU6458
 19241 02dc 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 19241      B8000000 
 19241      00000000 
1400:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19242              		.loc 1 1400 13 is_stmt 1 discriminator 1 view .LVU6459
 19243              	# sieve_extend.c:1400:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1400:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19244              		.loc 1 1400 16 is_stmt 0 discriminator 1 view .LVU6460
 19245 02e8 83C301   		add	ebx, 1	# arg,
 19246              	.LVL1129:
1400:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19247              		.loc 1 1400 16 discriminator 1 view .LVU6461
 19248 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 19249 02ed 0F8E2E0D 		jle	.L1677	#,
 19249      0000
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19250              		.loc 1 1401 13 is_stmt 1 view .LVU6462
 19251              	# sieve_extend.c:1401:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19252              		.loc 1 1401 28 is_stmt 0 view .LVU6463
 19253 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
GAS LISTING /tmp/ccRwwoRx.s 			page 507


 19253      08
 19254              	# sieve_extend.c:1401:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19255              		.loc 1 1401 17 view .LVU6464
 19256 02f8 488D9424 		lea	rdx, 184[rsp]	# tmp329,
 19256      B8000000 
 19257 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 19258 0303 31C0     		xor	eax, eax	#
 19259 0305 488D3500 		lea	rsi, .LC42[rip]	#,
 19259      000000
 19260 030c E8000000 		call	__isoc99_sscanf@PLT	#
 19260      00
 19261              	.LVL1130:
 19262              	# sieve_extend.c:1401:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19263              		.loc 1 1401 16 view .LVU6465
 19264 0311 83F801   		cmp	eax, 1	# tmp531,
 19265 0314 0F85CD0C 		jne	.L1552	#,
 19265      0000
 19266              	# sieve_extend.c:1401:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19267              		.loc 1 1401 106 discriminator 1 view .LVU6466
 19268 031a 488B9424 		mov	rdx, QWORD PTR 184[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 19268      B8000000 
 19269              	# sieve_extend.c:1401:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1401:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19270              		.loc 1 1401 82 discriminator 1 view .LVU6467
 19271 0322 483B9424 		cmp	rdx, QWORD PTR 176[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 19271      B0000000 
 19272 032a 0F87B70C 		ja	.L1552	#,
 19272      0000
1404:sieve_extend.c ****         }
 19273              		.loc 1 1404 13 is_stmt 1 view .LVU6468
 19274              	.LVL1131:
 19275              	.LBB1105:
 19276              	.LBI1105:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19277              		.loc 3 105 1 view .LVU6469
 19278              	.LBB1106:
 19279              		.loc 3 107 3 view .LVU6470
 19280              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19281              		.loc 3 107 10 is_stmt 0 view .LVU6471
 19282 0330 488D3500 		lea	rsi, .LC44[rip]	#,
 19282      000000
 19283 0337 BF010000 		mov	edi, 1	#,
 19283      00
 19284 033c 31C0     		xor	eax, eax	#
 19285 033e E8000000 		call	__printf_chk@PLT	#
 19285      00
 19286              	.LVL1132:
 19287 0343 E98DFDFF 		jmp	.L1545	#
 19287      FF
 19288              	.LVL1133:
 19289              		.p2align 4,,7
 19290              		.p2align 3
 19291              	.L1550:
 19292              		.loc 3 107 10 view .LVU6472
GAS LISTING /tmp/ccRwwoRx.s 			page 508


 19293              	.LBE1106:
 19294              	.LBE1105:
1406:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19295              		.loc 1 1406 14 is_stmt 1 view .LVU6473
 19296              	# sieve_extend.c:1406:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1406:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19297              		.loc 1 1406 18 is_stmt 0 view .LVU6474
 19298 0348 31C0     		xor	eax, eax	#
 19299 034a 488D9424 		lea	rdx, 176[rsp]	# tmp331,
 19299      B0000000 
 19300 0352 488D3500 		lea	rsi, .LC42[rip]	#,
 19300      000000
 19301 0359 4C89C7   		mov	rdi, r8	#, _4
 19302 035c E8000000 		call	__isoc99_sscanf@PLT	#
 19302      00
 19303              	.LVL1134:
 19304              	# sieve_extend.c:1406:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1406:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19305              		.loc 1 1406 17 view .LVU6475
 19306 0361 83F801   		cmp	eax, 1	# tmp532,
 19307 0364 0F846BFD 		je	.L1545	#,
 19307      FFFF
1407:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 19308              		.loc 1 1407 13 is_stmt 1 view .LVU6476
 19309              	.LVL1135:
 19310              	.LBB1107:
 19311              	.LBI1107:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19312              		.loc 3 98 1 view .LVU6477
 19313              	.LBB1108:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19314              		.loc 3 100 3 view .LVU6478
 19315              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19316              		.loc 3 100 10 is_stmt 0 view .LVU6479
 19317 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 19318 036d 488D1500 		lea	rdx, .LC45[rip]	#,
 19318      000000
 19319 0374 E94F0200 		jmp	.L1668	#
 19319      00
 19320              	.LVL1136:
 19321 0379 0F1F8000 		.p2align 4,,7
 19321      000000
 19322              		.p2align 3
 19323              	.L1675:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19324              		.loc 3 100 10 view .LVU6480
 19325              	.LBE1108:
 19326              	.LBE1107:
 19327              	.LBE1160:
 19328              	.LBB1161:
 19329              	.LBB1156:
 19330              	.LBB1151:
 19331              	.LBB1145:
 19332              		.loc 1 1447 74 is_stmt 1 view .LVU6481
 19333              	.LBB1139:
 19334              	.LBI1139:
GAS LISTING /tmp/ccRwwoRx.s 			page 509


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19335              		.loc 3 105 1 view .LVU6482
 19336              	.LBB1140:
 19337              		.loc 3 107 3 view .LVU6483
 19338              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19339              		.loc 3 107 10 is_stmt 0 view .LVU6484
 19340 0380 31C0     		xor	eax, eax	#
 19341 0382 488D3500 		lea	rsi, .LC49[rip]	#,
 19341      000000
 19342 0389 BF010000 		mov	edi, 1	#,
 19342      00
 19343              	.LBE1140:
 19344              	.LBE1139:
 19345              	.LBE1145:
 19346              	# sieve_extend.c:1442:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19347              		.loc 1 1442 90 view .LVU6485
 19348 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 19349              	.LVL1137:
 19350              	.LBB1146:
 19351              	.LBB1142:
 19352              	.LBB1141:
 19353              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19354              		.loc 3 107 10 view .LVU6486
 19355 0391 E8000000 		call	__printf_chk@PLT	#
 19355      00
 19356              	.LVL1138:
 19357 0396 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 19357      000000
 19358              	.LVL1139:
 19359              		.loc 3 107 10 view .LVU6487
 19360              	.LBE1141:
 19361              	.LBE1142:
 19362              	.LBE1146:
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19363              		.loc 1 1442 75 is_stmt 1 view .LVU6488
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19364              		.loc 1 1442 49 view .LVU6489
 19365              	# sieve_extend.c:1442:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19366              		.loc 1 1442 13 is_stmt 0 view .LVU6490
 19367 039d 4183EC01 		sub	r12d, 1	# ivtmp_69,
 19368 03a1 0F85FDFE 		jne	.L1561	#,
 19368      FFFF
 19369              	.L1676:
1442:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19370              		.loc 1 1442 13 view .LVU6491
 19371              	.LBE1151:
1448:sieve_extend.c ****             }
1449:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19372              		.loc 1 1449 13 is_stmt 1 view .LVU6492
 19373              	# sieve_extend.c:1449:             if (option_verboselevel >= 2) printf("\n");
 19374              		.loc 1 1449 16 is_stmt 0 view .LVU6493
 19375 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
 19376 03aa 7E0A     		jle	.L1562	#,
 19377              		.loc 1 1449 43 is_stmt 1 view .LVU6494
 19378              	.LVL1140:
GAS LISTING /tmp/ccRwwoRx.s 			page 510


 19379              	.LBB1152:
 19380              	.LBI1152:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19381              		.loc 3 105 1 view .LVU6495
 19382              	.LBB1153:
 19383              		.loc 3 107 3 view .LVU6496
 19384              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19385              		.loc 3 107 10 is_stmt 0 view .LVU6497
 19386 03ac BF0A0000 		mov	edi, 10	#,
 19386      00
 19387 03b1 E8000000 		call	putchar@PLT	#
 19387      00
 19388              	.LVL1141:
 19389              	.L1562:
 19390              		.loc 3 107 10 view .LVU6498
 19391              	.LBE1153:
 19392              	.LBE1152:
 19393              	.LBE1156:
1439:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19394              		.loc 1 1439 75 is_stmt 1 discriminator 2 view .LVU6499
 19395              	# sieve_extend.c:1439:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1439:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19396              		.loc 1 1439 91 is_stmt 0 discriminator 2 view .LVU6500
 19397 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 19397      00
 19398              	.LVL1142:
1439:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19399              		.loc 1 1439 91 discriminator 2 view .LVU6501
 19400 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 19401              	.LVL1143:
1439:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19402              		.loc 1 1439 47 is_stmt 1 discriminator 2 view .LVU6502
 19403              	# sieve_extend.c:1439:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1439:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19404              		.loc 1 1439 9 is_stmt 0 discriminator 2 view .LVU6503
 19405 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 19405      01
 19406 03c3 0F854FFE 		jne	.L1563	#,
 19406      FFFF
 19407              	.LBE1161:
1450:sieve_extend.c ****         }
1451:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19408              		.loc 1 1451 9 is_stmt 1 view .LVU6504
 19409              	# sieve_extend.c:1451:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19410              		.loc 1 1451 12 is_stmt 0 view .LVU6505
 19411 03c9 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19411      00000000 
 19412 03d1 0F8FCC09 		jg	.L1678	#,
 19412      0000
1452:sieve_extend.c ****     }
1453:sieve_extend.c ****     
1454:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19413              		.loc 1 1454 5 is_stmt 1 view .LVU6506
 19414              	.LVL1144:
1455:sieve_extend.c ****     if (option_tunelevel) {
 19415              		.loc 1 1455 5 view .LVU6507
 19416              	# sieve_extend.c:1455:     if (option_tunelevel) {
GAS LISTING /tmp/ccRwwoRx.s 			page 511


 19417              		.loc 1 1455 9 is_stmt 0 view .LVU6508
 19418 03d7 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_405, option_tunelevel
 19418      AC000000 
 19419              	# sieve_extend.c:1454:     counter_t best_blocksize_bits = default_blocksize;
1454:sieve_extend.c ****     if (option_tunelevel) {
 19420              		.loc 1 1454 15 view .LVU6509
 19421 03df 41BC0000 		mov	r12d, 262144	# best_result$blocksize_bits,
 19421      0400
 19422              	# sieve_extend.c:1455:     if (option_tunelevel) {
 19423              		.loc 1 1455 8 view .LVU6510
 19424 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.41_405
 19425 03e8 0F85B802 		jne	.L1679	#,
 19425      0000
 19426              	.LVL1145:
 19427              	.L1592:
 19428              	.LBB1162:
1456:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1457:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1458:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1459:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1460:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1461:sieve_extend.c ****     }
1462:sieve_extend.c **** 
1463:sieve_extend.c ****     double max_time = default_sieve_duration;
1464:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1465:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1466:sieve_extend.c ****         counter_t passes = 0;
 19429              		.loc 1 1466 9 is_stmt 1 view .LVU6511
1467:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19430              		.loc 1 1467 9 view .LVU6512
1468:sieve_extend.c ****         double elapsed_time = 0;
 19431              		.loc 1 1468 9 view .LVU6513
1469:sieve_extend.c ****         struct sieve_t *sieve;
 19432              		.loc 1 1469 9 view .LVU6514
1470:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19433              		.loc 1 1470 9 view .LVU6515
 19434 03ee 488DB424 		lea	rsi, 192[rsp]	# tmp440,
 19434      C0000000 
 19435 03f6 BF010000 		mov	edi, 1	#,
 19435      00
 19436 03fb E8000000 		call	clock_gettime@PLT	#
 19436      00
 19437              	.LVL1146:
1471:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19438              		.loc 1 1471 9 view .LVU6516
 19439              		.loc 1 1471 15 view .LVU6517
 19440              	# sieve_extend.c:1466:         counter_t passes = 0;
1466:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19441              		.loc 1 1466 19 is_stmt 0 view .LVU6518
 19442 0400 4531FF   		xor	r15d, r15d	# passes
 19443 0403 4C8DAC24 		lea	r13, 208[rsp]	# tmp464,
 19443      D0000000 
 19444              	.LVL1147:
 19445              	.L1593:
1472:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19446              		.loc 1 1472 13 is_stmt 1 view .LVU6519
 19447              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
GAS LISTING /tmp/ccRwwoRx.s 			page 512


 19448              		.loc 1 1472 21 is_stmt 0 view .LVU6520
 19449 040b 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 19449      B0000000 
 19450 0413 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 19451              	# sieve_extend.c:1474:             passes++;
1473:sieve_extend.c ****             sieve_delete(sieve);
1474:sieve_extend.c ****             passes++;
 19452              		.loc 1 1474 19 view .LVU6521
 19453 0416 4983C701 		add	r15, 1	# passes,
 19454              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1472:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19455              		.loc 1 1472 21 view .LVU6522
 19456 041a E8000000 		call	sieve_shake	#
 19456      00
 19457              	.LVL1148:
 19458              	.LBB1163:
 19459              	.LBB1164:
 19460              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 19461              		.loc 1 112 5 view .LVU6523
 19462 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitstorage
 19463              	.LBE1164:
 19464              	.LBE1163:
 19465              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1472:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19466              		.loc 1 1472 21 view .LVU6524
 19467 0422 4989C6   		mov	r14, rax	# sieve, tmp536
 19468              	.LVL1149:
1473:sieve_extend.c ****             sieve_delete(sieve);
 19469              		.loc 1 1473 13 is_stmt 1 view .LVU6525
 19470              	.LBB1168:
 19471              	.LBI1163:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 19472              		.loc 1 111 13 view .LVU6526
 19473              	.LBB1165:
 112:sieve_extend.c ****     free(sieve);
 19474              		.loc 1 112 5 view .LVU6527
 19475 0425 E8000000 		call	free@PLT	#
 19475      00
 19476              	.LVL1150:
 113:sieve_extend.c **** }
 19477              		.loc 1 113 5 view .LVU6528
 19478 042a 4C89F7   		mov	rdi, r14	#, sieve
 19479 042d E8000000 		call	free@PLT	#
 19479      00
 19480              	.LVL1151:
 113:sieve_extend.c **** }
 19481              		.loc 1 113 5 is_stmt 0 view .LVU6529
 19482              	.LBE1165:
 19483              	.LBE1168:
 19484              		.loc 1 1474 13 is_stmt 1 view .LVU6530
1475:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19485              		.loc 1 1475 13 view .LVU6531
 19486 0432 4C89EE   		mov	rsi, r13	#, tmp464
 19487 0435 BF010000 		mov	edi, 1	#,
 19487      00
 19488 043a E8000000 		call	clock_gettime@PLT	#
GAS LISTING /tmp/ccRwwoRx.s 			page 513


 19488      00
 19489              	.LVL1152:
1476:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19490              		.loc 1 1476 13 view .LVU6532
 19491              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19492              		.loc 1 1476 62 is_stmt 0 view .LVU6533
 19493 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 216[rsp]	# tmp443, end_time.tv_nsec
 19493      AC24D800 
 19493      0000
 19494              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19495              		.loc 1 1476 68 view .LVU6534
 19496 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 192[rsp]	# tmp444, start_time.tv_sec
 19496      9424C000 
 19496      0000
 19497              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19498              		.loc 1 1476 108 view .LVU6535
 19499 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 200[rsp]	# tmp446, start_time.tv_nsec
 19499      8424C800 
 19499      0000
 19500              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19501              		.loc 1 1476 44 view .LVU6536
 19502 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 208[rsp]	# tmp447, end_time.tv_sec
 19502      8C24D000 
 19502      0000
 19503              	# sieve_extend.c:1471:         while (elapsed_time <= max_time) {
1471:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19504              		.loc 1 1471 15 view .LVU6537
 19505 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC61[rip]	# tmp649,
 19505      00000000 
 19506 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _305, tmp444,
 19506      2D000000 
 19506      00
 19507 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _306, tmp447,
 19507      05000000 
 19507      00
 19508              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19509              		.loc 1 1476 26 view .LVU6538
 19510 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _305, _306
 19510      C0
 19511              	.LVL1153:
1471:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19512              		.loc 1 1471 15 is_stmt 1 view .LVU6539
 19513 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp649, elapsed_time
 19514 048a 0F828500 		jb	.L1665	#,
 19514      0000
 19515              	.LVL1154:
1472:sieve_extend.c ****             sieve_delete(sieve);
 19516              		.loc 1 1472 13 view .LVU6540
 19517              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1472:sieve_extend.c ****             sieve_delete(sieve);
 19518              		.loc 1 1472 21 is_stmt 0 view .LVU6541
 19519 0490 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 19519      B0000000 
 19520 0498 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 19521              	# sieve_extend.c:1474:             passes++;
1474:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19522              		.loc 1 1474 19 view .LVU6542
GAS LISTING /tmp/ccRwwoRx.s 			page 514


 19523 049b 4983C701 		add	r15, 1	# passes,
 19524              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1472:sieve_extend.c ****             sieve_delete(sieve);
 19525              		.loc 1 1472 21 view .LVU6543
 19526 049f E8000000 		call	sieve_shake	#
 19526      00
 19527              	.LVL1155:
 19528              	.LBB1169:
 19529              	.LBB1166:
 19530              	# sieve_extend.c:112:     free(sieve->bitstorage);
 112:sieve_extend.c ****     free(sieve);
 19531              		.loc 1 112 5 view .LVU6544
 19532 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitstorage
 19533              	.LBE1166:
 19534              	.LBE1169:
 19535              	# sieve_extend.c:1472:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1472:sieve_extend.c ****             sieve_delete(sieve);
 19536              		.loc 1 1472 21 view .LVU6545
 19537 04a7 4889C5   		mov	rbp, rax	# sieve, tmp538
1473:sieve_extend.c ****             passes++;
 19538              		.loc 1 1473 13 is_stmt 1 view .LVU6546
 19539              	.LVL1156:
 19540              	.LBB1170:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 19541              		.loc 1 111 13 view .LVU6547
 19542              	.LBB1167:
 112:sieve_extend.c ****     free(sieve);
 19543              		.loc 1 112 5 view .LVU6548
 19544 04aa E8000000 		call	free@PLT	#
 19544      00
 19545              	.LVL1157:
 113:sieve_extend.c **** }
 19546              		.loc 1 113 5 view .LVU6549
 19547 04af 4889EF   		mov	rdi, rbp	#, sieve
 19548 04b2 E8000000 		call	free@PLT	#
 19548      00
 19549              	.LVL1158:
 113:sieve_extend.c **** }
 19550              		.loc 1 113 5 is_stmt 0 view .LVU6550
 19551              	.LBE1167:
 19552              	.LBE1170:
1474:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 19553              		.loc 1 1474 13 is_stmt 1 view .LVU6551
1475:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 19554              		.loc 1 1475 13 view .LVU6552
 19555 04b7 4C89EE   		mov	rsi, r13	#, tmp464
 19556 04ba BF010000 		mov	edi, 1	#,
 19556      00
 19557 04bf E8000000 		call	clock_gettime@PLT	#
 19557      00
 19558              	.LVL1159:
 19559              		.loc 1 1476 13 view .LVU6553
 19560              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19561              		.loc 1 1476 62 is_stmt 0 view .LVU6554
 19562 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 216[rsp]	# tmp521, end_time.tv_nsec
 19562      9C24D800 
 19562      0000
GAS LISTING /tmp/ccRwwoRx.s 			page 515


 19563              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19564              		.loc 1 1476 68 view .LVU6555
 19565 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 192[rsp]	# tmp522, start_time.tv_sec
 19565      A424C000 
 19565      0000
 19566              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19567              		.loc 1 1476 108 view .LVU6556
 19568 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 200[rsp]	# tmp524, start_time.tv_nsec
 19568      AC24C800 
 19568      0000
 19569              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19570              		.loc 1 1476 44 view .LVU6557
 19571 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 208[rsp]	# tmp525, end_time.tv_sec
 19571      B424D000 
 19571      0000
 19572              	# sieve_extend.c:1471:         while (elapsed_time <= max_time) {
1471:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19573              		.loc 1 1471 15 view .LVU6558
 19574 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC61[rip]	# tmp656,
 19574      00000000 
 19575 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _305, tmp522,
 19575      1D000000 
 19575      00
 19576 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _306, tmp525,
 19576      2D000000 
 19576      00
 19577              	# sieve_extend.c:1476:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 19578              		.loc 1 1476 26 view .LVU6559
 19579 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _305, _306
 19579      C5
 19580              	.LVL1160:
1471:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 19581              		.loc 1 1471 15 is_stmt 1 view .LVU6560
 19582 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp656, elapsed_time
 19583 050f 0F83F6FE 		jnb	.L1593	#,
 19583      FFFF
 19584              	.L1665:
1477:sieve_extend.c ****         }
1478:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 19585              		.loc 1 1478 9 view .LVU6561
 19586              	.LVL1161:
 19587              	.LBB1171:
 19588              	.LBI1171:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19589              		.loc 3 105 1 view .LVU6562
 19590              	.LBB1172:
 19591              		.loc 3 107 3 view .LVU6563
 19592              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19593              		.loc 3 107 10 is_stmt 0 view .LVU6564
 19594 0515 4C89FA   		mov	rdx, r15	#, passes
 19595 0518 488D3500 		lea	rsi, .LC62[rip]	#,
 19595      000000
 19596 051f BF010000 		mov	edi, 1	#,
 19596      00
 19597 0524 B8010000 		mov	eax, 1	#,
 19597      00
 19598 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
GAS LISTING /tmp/ccRwwoRx.s 			page 516


 19598      2428
 19599 052f E8000000 		call	__printf_chk@PLT	#
 19599      00
 19600              	.LVL1162:
 19601              		.loc 3 107 10 view .LVU6565
 19602              	.LBE1172:
 19603              	.LBE1171:
1479:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 19604              		.loc 1 1479 9 is_stmt 1 view .LVU6566
 19605              	# sieve_extend.c:1479:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 19606              		.loc 1 1479 12 is_stmt 0 view .LVU6567
 19607 0534 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19607      00000000 
 19608 053c 0F8FF500 		jg	.L1680	#,
 19608      0000
 19609              	.LVL1163:
 19610              	.L1591:
 19611              		.loc 1 1479 12 view .LVU6568
 19612              	.LBE1162:
1480:sieve_extend.c ****     }
1481:sieve_extend.c ****     
1482:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 19613              		.loc 1 1482 5 is_stmt 1 view .LVU6569
 19614              	# sieve_extend.c:1482:     if (option_showMaxFactor > 0) {
 19615              		.loc 1 1482 8 is_stmt 0 view .LVU6570
 19616 0542 4883BC24 		cmp	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 19616      B8000000 
 19616      00
 19617 054b 0F859300 		jne	.L1681	#,
 19617      0000
 19618 0551 66662E0F 		.p2align 4
 19618      1F840000 
 19618      0000000F 
 19618      1F4000
 19619              		.p2align 3
 19620              	.L1599:
 19621              	.LBB1179:
 19622              	.LBB1157:
 19623              	.LBB1154:
 19624              	.LBB1147:
1447:sieve_extend.c ****             }
 19625              		.loc 1 1447 29 is_stmt 1 discriminator 1 view .LVU6571
 19626              	.LBE1147:
 19627              	.LBE1154:
 19628              	.LBE1157:
 19629              	.LBE1179:
 19630              	# sieve_extend.c:1489: }
1483:sieve_extend.c ****         printf("Show result set:\n");
1484:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
1485:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1486:sieve_extend.c ****         sieve_delete(sieve);
1487:sieve_extend.c ****         printf("\n");
1488:sieve_extend.c ****     }
1489:sieve_extend.c **** }
 19631              		.loc 1 1489 1 is_stmt 0 discriminator 1 view .LVU6572
 19632 0560 488B8424 		mov	rax, QWORD PTR 232[rsp]	# tmp572, D.7751
 19632      E8000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 517


 19633 0568 64483304 		xor	rax, QWORD PTR fs:40	# tmp572, MEM[(<address-space-1> long unsigned int *)40B]
 19633      25280000 
 19633      00
 19634 0571 0F85A50A 		jne	.L1682	#,
 19634      0000
 19635              	# sieve_extend.c:1489: }
 19636              		.loc 1 1489 1 view .LVU6573
 19637 0577 488DA424 		lea	rsp, 248[rsp]	#,
 19637      F8000000 
 19638              		.cfi_remember_state
 19639              		.cfi_def_cfa_offset 56
 19640 057f 31C0     		xor	eax, eax	#
 19641 0581 5B       		pop	rbx	#
 19642              		.cfi_def_cfa_offset 48
 19643 0582 5D       		pop	rbp	#
 19644              		.cfi_def_cfa_offset 40
 19645 0583 415C     		pop	r12	#
 19646              		.cfi_def_cfa_offset 32
 19647 0585 415D     		pop	r13	#
 19648              		.cfi_def_cfa_offset 24
 19649 0587 415E     		pop	r14	#
 19650              		.cfi_def_cfa_offset 16
 19651 0589 415F     		pop	r15	#
 19652              		.cfi_def_cfa_offset 8
 19653 058b C3       		ret	
 19654              	.L1554:
 19655              		.cfi_restore_state
1429:sieve_extend.c ****         #endif
 19656              		.loc 1 1429 13 is_stmt 1 view .LVU6574
 19657              	.LVL1164:
 19658              	.LBB1180:
 19659              	.LBI1180:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19660              		.loc 3 105 1 view .LVU6575
 19661              	.LBB1181:
 19662              		.loc 3 107 3 view .LVU6576
 19663              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19664              		.loc 3 107 10 is_stmt 0 view .LVU6577
 19665 058c 488D3D00 		lea	rdi, .LC29[rip]	#,
 19665      000000
 19666 0593 E8000000 		call	puts@PLT	#
 19666      00
 19667              	.LVL1165:
 19668              		.loc 3 107 10 view .LVU6578
 19669              	.LBE1181:
 19670              	.LBE1180:
1433:sieve_extend.c ****         // Count the number of primes and validate the result
 19671              		.loc 1 1433 5 is_stmt 1 view .LVU6579
1435:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19672              		.loc 1 1435 9 view .LVU6580
 19673              	# sieve_extend.c:1435:         if (option_verboselevel >= 1) printf("Validating... ");
1435:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19674              		.loc 1 1435 12 is_stmt 0 view .LVU6581
 19675 0598 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19675      00000000 
 19676 05a0 0F8E49FC 		jle	.L1555	#,
 19676      FFFF
GAS LISTING /tmp/ccRwwoRx.s 			page 518


1435:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19677              		.loc 1 1435 39 is_stmt 1 view .LVU6582
 19678              	.LVL1166:
 19679              	.LBB1182:
 19680              	.LBI1182:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19681              		.loc 3 105 1 view .LVU6583
 19682              	.LBB1183:
 19683              		.loc 3 107 3 view .LVU6584
 19684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19685              		.loc 3 107 10 is_stmt 0 view .LVU6585
 19686 05a6 488D3500 		lea	rsi, .LC46[rip]	#,
 19686      000000
 19687 05ad BF010000 		mov	edi, 1	#,
 19687      00
 19688 05b2 31C0     		xor	eax, eax	#
 19689 05b4 E8000000 		call	__printf_chk@PLT	#
 19689      00
 19690              	.LVL1167:
 19691 05b9 E931FCFF 		jmp	.L1555	#
 19691      FF
 19692              	.LVL1168:
 19693              	.L1543:
 19694              		.loc 3 107 10 view .LVU6586
 19695              	.LBE1183:
 19696              	.LBE1182:
 19697              	.LBB1184:
1387:sieve_extend.c ****             }
 19698              		.loc 1 1387 17 is_stmt 1 view .LVU6587
 19699              	.LBB1109:
 19700              	.LBI1109:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19701              		.loc 3 98 1 view .LVU6588
 19702              	.LBB1110:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19703              		.loc 3 100 3 view .LVU6589
 19704              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19705              		.loc 3 100 10 is_stmt 0 view .LVU6590
 19706 05be 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 19707 05c1 488D1500 		lea	rdx, .LC33[rip]	#,
 19707      000000
 19708              	.LVL1169:
 19709              	.L1668:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19710              		.loc 3 100 10 view .LVU6591
 19711              	.LBE1110:
 19712              	.LBE1109:
 19713              	.LBB1111:
 19714              	.LBB1112:
 19715 05c8 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 19715      000000
 19716 05cf BE010000 		mov	esi, 1	#,
 19716      00
 19717 05d4 31C0     		xor	eax, eax	#
 19718 05d6 E8000000 		call	__fprintf_chk@PLT	#
 19718      00
GAS LISTING /tmp/ccRwwoRx.s 			page 519


 19719              	.LVL1170:
 19720              	.L1669:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19721              		.loc 3 100 10 view .LVU6592
 19722              	.LBE1112:
 19723              	.LBE1111:
1395:sieve_extend.c ****             }
 19724              		.loc 1 1395 80 is_stmt 1 view .LVU6593
 19725 05db 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19726 05df E8000000 		call	usage	#
 19726      00
 19727              	.LVL1171:
 19728              	.L1681:
1395:sieve_extend.c ****             }
 19729              		.loc 1 1395 80 is_stmt 0 view .LVU6594
 19730              	.LBE1184:
 19731              	.LBB1185:
1483:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 19732              		.loc 1 1483 9 is_stmt 1 view .LVU6595
 19733              	.LBB1186:
 19734              	.LBI1186:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19735              		.loc 3 105 1 view .LVU6596
 19736              	.LBB1187:
 19737              		.loc 3 107 3 view .LVU6597
 19738              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19739              		.loc 3 107 10 is_stmt 0 view .LVU6598
 19740 05e4 488D3D00 		lea	rdi, .LC64[rip]	#,
 19740      000000
 19741 05eb E8000000 		call	puts@PLT	#
 19741      00
 19742              	.LVL1172:
 19743              		.loc 3 107 10 view .LVU6599
 19744              	.LBE1187:
 19745              	.LBE1186:
1484:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 19746              		.loc 1 1484 9 is_stmt 1 view .LVU6600
 19747              	# sieve_extend.c:1484:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1484:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 19748              		.loc 1 1484 33 is_stmt 0 view .LVU6601
 19749 05f0 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	# option_maxFactor.52_94, option_maxFactor
 19749      B0000000 
 19750 05f8 4889FE   		mov	rsi, rdi	#, option_maxFactor.52_94
 19751 05fb E8000000 		call	sieve_shake	#
 19751      00
 19752              	.LVL1173:
 19753              	# sieve_extend.c:1485:         show_primes(sieve, option_showMaxFactor);
1485:sieve_extend.c ****         sieve_delete(sieve);
 19754              		.loc 1 1485 9 view .LVU6602
 19755 0600 488B9424 		mov	rdx, QWORD PTR 184[rsp]	#, option_showMaxFactor
 19755      B8000000 
 19756              	# sieve_extend.c:1484:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1484:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 19757              		.loc 1 1484 33 view .LVU6603
 19758 0608 4989C4   		mov	r12, rax	# sieve, tmp537
 19759              	.LVL1174:
1485:sieve_extend.c ****         sieve_delete(sieve);
GAS LISTING /tmp/ccRwwoRx.s 			page 520


 19760              		.loc 1 1485 9 is_stmt 1 view .LVU6604
 19761 060b 488D7008 		lea	rsi, 8[rax]	# tmp462,
 19762 060f 4889C7   		mov	rdi, rax	#, sieve
 19763 0612 E8000000 		call	show_primes.isra.0	#
 19763      00
 19764              	.LVL1175:
1486:sieve_extend.c ****         printf("\n");
 19765              		.loc 1 1486 9 view .LVU6605
 19766              	.LBB1188:
 19767              	.LBI1188:
 111:sieve_extend.c ****     free(sieve->bitstorage);
 19768              		.loc 1 111 13 view .LVU6606
 19769              	.LBB1189:
 112:sieve_extend.c ****     free(sieve);
 19770              		.loc 1 112 5 view .LVU6607
 19771 0617 498B3C24 		mov	rdi, QWORD PTR [r12]	#, sieve_153->bitstorage
 19772 061b E8000000 		call	free@PLT	#
 19772      00
 19773              	.LVL1176:
 113:sieve_extend.c **** }
 19774              		.loc 1 113 5 view .LVU6608
 19775 0620 4C89E7   		mov	rdi, r12	#, sieve
 19776 0623 E8000000 		call	free@PLT	#
 19776      00
 19777              	.LVL1177:
 113:sieve_extend.c **** }
 19778              		.loc 1 113 5 is_stmt 0 view .LVU6609
 19779              	.LBE1189:
 19780              	.LBE1188:
1487:sieve_extend.c ****     }
 19781              		.loc 1 1487 9 is_stmt 1 view .LVU6610
 19782              	.LBB1190:
 19783              	.LBI1190:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19784              		.loc 3 105 1 view .LVU6611
 19785              	.LBB1191:
 19786              		.loc 3 107 3 view .LVU6612
 19787              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19788              		.loc 3 107 10 is_stmt 0 view .LVU6613
 19789 0628 BF0A0000 		mov	edi, 10	#,
 19789      00
 19790 062d E8000000 		call	putchar@PLT	#
 19790      00
 19791              	.LVL1178:
 19792 0632 E929FFFF 		jmp	.L1599	#
 19792      FF
 19793              	.LVL1179:
 19794              	.L1680:
 19795              		.loc 3 107 10 view .LVU6614
 19796              	.LBE1191:
 19797              	.LBE1190:
 19798              	.LBE1185:
 19799              	.LBB1192:
1479:sieve_extend.c ****     }
 19800              		.loc 1 1479 39 is_stmt 1 discriminator 1 view .LVU6615
 19801              	.LBB1173:
 19802              	.LBI1173:
GAS LISTING /tmp/ccRwwoRx.s 			page 521


 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19803              		.loc 3 105 1 discriminator 1 view .LVU6616
 19804              	.LBB1174:
 19805              		.loc 3 107 3 discriminator 1 view .LVU6617
 19806              	.LBE1174:
 19807              	.LBE1173:
 19808              	# sieve_extend.c:1479:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1479:sieve_extend.c ****     }
 19809              		.loc 1 1479 39 is_stmt 0 discriminator 1 view .LVU6618
 19810 0637 C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp450, passes
 19810      C7
 19811 063c 4D85FF   		test	r15, r15	# passes
 19812 063f C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
 19812      2428
 19813 0645 7919     		jns	.L1596	#,
 19814 0647 4C89F9   		mov	rcx, r15	# tmp452, passes
 19815 064a 4D89FA   		mov	r10, r15	# tmp453, passes
 19816 064d 48D1E9   		shr	rcx	# tmp452
 19817 0650 4183E201 		and	r10d, 1	# tmp453,
 19818 0654 4C09D1   		or	rcx, r10	# tmp517, tmp453
 19819 0657 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp451, tmp517
 19819      F9
 19820 065c C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp450, tmp451, tmp451
 19821              	.L1596:
1479:sieve_extend.c ****     }
 19822              		.loc 1 1479 39 discriminator 1 view .LVU6619
 19823 0660 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp454, tmp450, elapsed_time
 19824              	# sieve_extend.c:1479:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1479:sieve_extend.c ****     }
 19825              		.loc 1 1479 95 discriminator 1 view .LVU6620
 19826 0664 4B8D14BF 		lea	rdx, [r15+r15*4]	# tmp455,
 19827              	# sieve_extend.c:1479:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1479:sieve_extend.c ****     }
 19828              		.loc 1 1479 39 discriminator 1 view .LVU6621
 19829 0668 4885D2   		test	rdx, rdx	# tmp455
 19830 066b C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rdx	# tmp456, tmp455
 19830      DA
 19831 0670 7915     		jns	.L1598	#,
 19832 0672 4989D3   		mov	r11, rdx	# tmp458, tmp455
 19833 0675 83E201   		and	edx, 1	# tmp459,
 19834 0678 49D1EB   		shr	r11	# tmp458
 19835 067b 4909D3   		or	r11, rdx	# tmp518, tmp459
 19836 067e C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r11	# tmp457, tmp518
 19836      E3
 19837 0683 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp456, tmp457, tmp457
 19838              	.L1598:
 19839 0687 C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp460, tmp456, elapsed_time
 19840              	.LBB1176:
 19841              	.LBB1175:
 19842              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19843              		.loc 3 107 10 discriminator 1 view .LVU6622
 19844 068b 488D3500 		lea	rsi, .LC63[rip]	#,
 19844      000000
 19845 0692 BF010000 		mov	edi, 1	#,
 19845      00
 19846 0697 B8020000 		mov	eax, 2	#,
 19846      00
GAS LISTING /tmp/ccRwwoRx.s 			page 522


 19847 069c E8000000 		call	__printf_chk@PLT	#
 19847      00
 19848              	.LVL1180:
 19849 06a1 E99CFEFF 		jmp	.L1591	#
 19849      FF
 19850              	.LVL1181:
 19851              	.L1679:
 19852              		.loc 3 107 10 discriminator 1 view .LVU6623
 19853              	.LBE1175:
 19854              	.LBE1176:
 19855              	.LBE1192:
 19856              	.LBB1193:
1456:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19857              		.loc 1 1456 9 is_stmt 1 view .LVU6624
 19858              	# sieve_extend.c:1456:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1456:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19859              		.loc 1 1456 44 is_stmt 0 view .LVU6625
 19860 06a6 448B9424 		mov	r10d, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 19860      A8000000 
 19861 06ae 4183E801 		sub	r8d, 1	#,
 19862 06b2 4C8B9C24 		mov	r11, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 19862      B0000000 
 19863 06ba 4183F802 		cmp	r8d, 2	# _215,
 19864 06be 44895424 		mov	DWORD PTR 104[rsp], r10d	# %sfp, option_verboselevel.42_64
 19864      68
 19865 06c3 4C899C24 		mov	QWORD PTR 136[rsp], r11	# %sfp, option_maxFactor.43_65
 19865      88000000 
 19866              	.LVL1182:
 19867              	.LBB1194:
 19868              	.LBI1194:
1058:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19869              		.loc 1 1058 27 is_stmt 1 view .LVU6626
 19870              	.LBB1195:
1059:sieve_extend.c **** 
 19871              		.loc 1 1059 5 view .LVU6627
1061:sieve_extend.c ****     best_blocksize_bits = 0;
 19872              		.loc 1 1061 5 view .LVU6628
1062:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19873              		.loc 1 1062 5 view .LVU6629
1063:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19874              		.loc 1 1063 5 view .LVU6630
1064:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19875              		.loc 1 1064 5 view .LVU6631
1065:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19876              		.loc 1 1065 5 view .LVU6632
1066:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19877              		.loc 1 1066 5 view .LVU6633
1067:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 19878              		.loc 1 1067 5 view .LVU6634
1068:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19879              		.loc 1 1068 5 view .LVU6635
1069:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19880              		.loc 1 1069 5 view .LVU6636
1070:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19881              		.loc 1 1070 5 view .LVU6637
1071:sieve_extend.c **** 
 19882              		.loc 1 1071 5 view .LVU6638
GAS LISTING /tmp/ccRwwoRx.s 			page 523


1074:sieve_extend.c ****         case 1:
 19883              		.loc 1 1074 5 view .LVU6639
 19884 06cb 0F86EA07 		jbe	.L1600	#,
 19884      0000
 19885 06d1 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC28[rip]	# sample_duration,
 19885      00000000 
 19886 06d9 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 19886      78050000 
 19886      00
 19887 06e2 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 19887      70800000 
 19887      00
 19888 06eb 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 19888      90000000 
 19888      20000000 
 19889 06f7 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 19889      98000000 
 19889      04000000 
 19890 0703 C5FB11B4 		vmovsd	QWORD PTR 128[rsp], xmm6	# %sfp, sample_duration
 19890      24800000 
 19890      00
 19891              	.LVL1183:
 19892              	.L1568:
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19893              		.loc 1 1103 5 view .LVU6640
 19894              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19895              		.loc 1 1103 33 is_stmt 0 view .LVU6641
 19896 070c B8400000 		mov	eax, 64	# tmp350,
 19896      00
 19897 0711 31D2     		xor	edx, edx	# tmp349
 19898 0713 48F7B424 		div	QWORD PTR 152[rsp]	# %sfp
 19898      98000000 
 19899              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19900              		.loc 1 1103 254 view .LVU6642
 19901 071b 31D2     		xor	edx, edx	# tmp357
 19902              	# sieve_extend.c:1105:     counter_t tuning_results=0;
1105:sieve_extend.c ****     counter_t tuning_result_index=0;
 19903              		.loc 1 1105 15 view .LVU6643
 19904 071d 4531FF   		xor	r15d, r15d	# tuning_results
 19905              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19906              		.loc 1 1103 83 view .LVU6644
 19907 0720 488D7801 		lea	rdi, 1[rax]	# _232,
 19908              	.LVL1184:
1104:sieve_extend.c ****     counter_t tuning_results=0;
 19909              		.loc 1 1104 5 is_stmt 1 view .LVU6645
 19910              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19911              		.loc 1 1103 254 is_stmt 0 view .LVU6646
 19912 0724 B8001000 		mov	eax, 4096	# tmp358,
 19912      00
 19913 0729 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 19913      70
 19914              	.LVL1185:
 19915              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
GAS LISTING /tmp/ccRwwoRx.s 			page 524


1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19916              		.loc 1 1103 148 view .LVU6647
 19917 072e 31D2     		xor	edx, edx	# tmp367
 19918              	# sieve_extend.c:1104:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1104:sieve_extend.c ****     counter_t tuning_results=0;
 19919              		.loc 1 1104 41 view .LVU6648
 19920 0730 480FAFC7 		imul	rax, rdi	# tmp363, _232
 19921              	.LVL1186:
1104:sieve_extend.c ****     counter_t tuning_results=0;
 19922              		.loc 1 1104 41 view .LVU6649
 19923 0734 480FAFF8 		imul	rdi, rax	# tmp364, tmp363
 19924              	.LVL1187:
 19925              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19926              		.loc 1 1103 148 view .LVU6650
 19927 0738 B8000100 		mov	eax, 256	# tmp368,
 19927      00
 19928 073d 48F7B424 		div	QWORD PTR 144[rsp]	# %sfp
 19928      90000000 
 19929              	# sieve_extend.c:1103:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1103:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19930              		.loc 1 1103 201 view .LVU6651
 19931 0745 4883C001 		add	rax, 1	# tmp373,
 19932              	# sieve_extend.c:1104:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1104:sieve_extend.c ****     counter_t tuning_results=0;
 19933              		.loc 1 1104 41 view .LVU6652
 19934 0749 480FAFF8 		imul	rdi, rax	# tmp374, tmp373
 19935 074d 48C1E708 		sal	rdi, 8	# tmp374,
 19936 0751 E8000000 		call	malloc@PLT	#
 19936      00
 19937              	.LVL1188:
 19938              	# sieve_extend.c:1061:     double best_avg = 0;
1061:sieve_extend.c ****     best_blocksize_bits = 0;
 19939              		.loc 1 1061 12 view .LVU6653
 19940 0756 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 19941              	# sieve_extend.c:1104:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1104:sieve_extend.c ****     counter_t tuning_results=0;
 19942              		.loc 1 1104 41 view .LVU6654
 19943 075a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, tmp535
 19943      40
 19944              	.LVL1189:
1105:sieve_extend.c ****     counter_t tuning_result_index=0;
 19945              		.loc 1 1105 5 is_stmt 1 view .LVU6655
1106:sieve_extend.c ****     
 19946              		.loc 1 1106 5 view .LVU6656
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 19947              		.loc 1 1108 5 view .LVU6657
 19948              	.LBB1196:
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 19949              		.loc 1 1108 10 view .LVU6658
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 19950              		.loc 1 1108 42 view .LVU6659
 19951              	.LBE1196:
 19952              	# sieve_extend.c:1065:     counter_t best_vectorstep_faster = 0;
1065:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19953              		.loc 1 1065 15 is_stmt 0 view .LVU6660
 19954 075f 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
GAS LISTING /tmp/ccRwwoRx.s 			page 525


 19954      60000000 
 19954      00
 19955              	# sieve_extend.c:1064:     counter_t best_mediumstep_faster = 0;
1064:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19956              		.loc 1 1064 15 view .LVU6661
 19957 0768 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 19957      58000000 
 19957      00
 19958              	# sieve_extend.c:1063:     counter_t best_smallstep_faster = 0;
1063:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19959              		.loc 1 1063 15 view .LVU6662
 19960 0771 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
 19960      50000000 
 19960      00
 19961              	# sieve_extend.c:1062:     best_blocksize_bits = 0;
1062:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19962              		.loc 1 1062 25 view .LVU6663
 19963 077a 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 19963      48000000 
 19963      00
 19964              	.LBB1226:
 19965              	# sieve_extend.c:1108:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 19966              		.loc 1 1108 20 view .LVU6664
 19967 0783 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 19967      30000000 
 19967      00
 19968              	.LBE1226:
 19969              	# sieve_extend.c:1061:     double best_avg = 0;
1061:sieve_extend.c ****     best_blocksize_bits = 0;
 19970              		.loc 1 1061 12 view .LVU6665
 19971 078c C5FB114C 		vmovsd	QWORD PTR 56[rsp], xmm1	# %sfp, best_avg
 19971      2438
 19972              	.LVL1190:
 19973              	.L1570:
 19974              	.LBB1227:
 19975              	.LBB1197:
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 19976              		.loc 1 1109 62 is_stmt 1 view .LVU6666
 19977              	.LBB1198:
 19978              	.LBB1199:
 19979              	# sieve_extend.c:1111:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 19980              		.loc 1 1111 32 is_stmt 0 view .LVU6667
 19981 0792 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 19981      30
 19982 0797 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, smallstep_faster
 19982      28
 19983              	.LVL1191:
 19984 079c 0F1F4000 		.p2align 4
 19985              		.p2align 3
 19986              	.L1582:
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 19987              		.loc 1 1111 32 view .LVU6668
 19988              	.LBE1199:
1110:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19989              		.loc 1 1110 67 is_stmt 1 view .LVU6669
GAS LISTING /tmp/ccRwwoRx.s 			page 526


 19990              	.LBB1222:
 19991              	# sieve_extend.c:1111:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 19992              		.loc 1 1111 32 is_stmt 0 view .LVU6670
 19993 07a0 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 19993      28
 19994              	.LVL1192:
 19995 07a5 66662E0F 		.p2align 4
 19995      1F840000 
 19995      000000
 19996              		.p2align 3
 19997              	.L1580:
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 19998              		.loc 1 1111 50 is_stmt 1 view .LVU6671
 19999              	.LBB1200:
 20000              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20001              		.loc 1 1112 36 is_stmt 0 view .LVU6672
 20002 07b0 C744246C 		mov	DWORD PTR 108[rsp], 6	# %sfp,
 20002      06000000 
 20003              	.LBE1200:
 20004              	# sieve_extend.c:1111:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20005              		.loc 1 1111 32 view .LVU6673
 20006 07b8 41BC0001 		mov	r12d, 256	# blocksize_kb,
 20006      0000
 20007              	.LVL1193:
 20008 07be 6690     		.p2align 4
 20009              		.p2align 3
 20010              	.L1578:
 20011              	.LBB1220:
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20012              		.loc 1 1112 49 is_stmt 1 view .LVU6674
 20013 07c0 4F8D147F 		lea	r10, [r15+r15*2]	# tmp401,
 20014              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20015              		.loc 1 1112 134 is_stmt 0 view .LVU6675
 20016 07c4 4C89E3   		mov	rbx, r12	# ivtmp.823, blocksize_kb
 20017 07c7 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# tuning_result, %sfp
 20017      40
 20018              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20019              		.loc 1 1112 36 view .LVU6676
 20020 07cc 31ED     		xor	ebp, ebp	# free_bits
 20021 07ce 49C1E205 		sal	r10, 5	# tmp402,
 20022              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20023              		.loc 1 1112 134 view .LVU6677
 20024 07d2 48C1E30D 		sal	rbx, 13	# ivtmp.823,
 20025 07d6 4F8D2C13 		lea	r13, [r11+r10]	# ivtmp.822,
 20026 07da EB4F     		jmp	.L1576	#
 20027              	.LVL1194:
 20028 07dc 0F1F4000 		.p2align 4,,7
 20029              		.p2align 3
 20030              	.L1573:
 20031              	.LBB1201:
1129:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
GAS LISTING /tmp/ccRwwoRx.s 			page 527


 20032              		.loc 1 1129 29 is_stmt 1 view .LVU6678
1130:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20033              		.loc 1 1130 29 view .LVU6679
1131:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 20034              		.loc 1 1131 29 view .LVU6680
1132:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 20035              		.loc 1 1132 29 view .LVU6681
1133:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 20036              		.loc 1 1133 29 view .LVU6682
1134:sieve_extend.c ****                         }
 20037              		.loc 1 1134 29 view .LVU6683
 20038              	# sieve_extend.c:1134:                             if (option_verboselevel >=2) { printf(".(>)"); t
1134:sieve_extend.c ****                         }
 20039              		.loc 1 1134 32 is_stmt 0 view .LVU6684
 20040 07e0 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 20040      01
 20041 07e5 0F8F0504 		jg	.L1683	#,
 20041      0000
1134:sieve_extend.c ****                         }
 20042              		.loc 1 1134 32 view .LVU6685
 20043 07eb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 20043      28
 20044 07f0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 20044      30
 20045 07f5 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 20045      60
 20046              	# sieve_extend.c:1129:                             best_avg = tuning_result[tuning_result_index].av
1129:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20047              		.loc 1 1129 38 view .LVU6686
 20048 07fa C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 20048      2438
 20049 0800 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, mediumstep_faster
 20049      58
 20050              	# sieve_extend.c:1130:                             best_blocksize_bits = blocksize_bits;
1130:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20051              		.loc 1 1130 49 view .LVU6687
 20052 0805 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.823
 20052      48
 20053 080a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, smallstep_faster
 20053      50
 20054              	.LVL1195:
 20055              	.L1571:
1137:sieve_extend.c ****                     }
 20056              		.loc 1 1137 25 is_stmt 1 view .LVU6688
1137:sieve_extend.c ****                     }
 20057              		.loc 1 1137 25 is_stmt 0 view .LVU6689
 20058              	.LBE1201:
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20059              		.loc 1 1112 141 is_stmt 1 view .LVU6690
 20060              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20061              		.loc 1 1112 151 is_stmt 0 view .LVU6691
 20062 080f 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# freebits_steps, %sfp
 20062      70
 20063 0814 4983C560 		add	r13, 96	# ivtmp.822,
 20064 0818 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 20065              	.LVL1196:
GAS LISTING /tmp/ccRwwoRx.s 			page 528


1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20066              		.loc 1 1112 49 is_stmt 1 view .LVU6692
 20067 081b 4829D3   		sub	rbx, rdx	# ivtmp.823, freebits_steps
 20068              	.LVL1197:
 20069              	# sieve_extend.c:1112:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1112:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20070              		.loc 1 1112 21 is_stmt 0 view .LVU6693
 20071 081e 4881FDFF 		cmp	rbp, 4095	# free_bits,
 20071      0F0000
 20072 0825 0F87ED00 		ja	.L1572	#,
 20072      0000
 20073              	.LVL1198:
 20074              	.L1576:
 20075              	.LBB1218:
1113:sieve_extend.c **** 
 20076              		.loc 1 1113 25 is_stmt 1 view .LVU6694
1116:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20077              		.loc 1 1116 25 view .LVU6695
 20078              	# sieve_extend.c:1123:                         tuning_result[tuning_result_index].smallstep_faster 
1123:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20079              		.loc 1 1123 77 is_stmt 0 view .LVU6696
 20080 082b 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 20080      30
 20081 0830 4C89FE   		mov	rsi, r15	# tuning_results, tuning_results
 20082              	# sieve_extend.c:1117:                         tuning_result[tuning_result_index].maxints = maxints
1117:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20083              		.loc 1 1117 68 view .LVU6697
 20084 0833 488B8C24 		mov	rcx, QWORD PTR 136[rsp]	# option_maxFactor.43_65, %sfp
 20084      88000000 
 20085              	# sieve_extend.c:1116:                         tuning_results++;
1116:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20086              		.loc 1 1116 39 view .LVU6698
 20087 083b 4983C701 		add	r15, 1	# tuning_results,
 20088              	.LVL1199:
1117:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20089              		.loc 1 1117 25 is_stmt 1 view .LVU6699
 20090              	# sieve_extend.c:1119:                         tuning_result[tuning_result_index].sample_max = samp
1119:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20091              		.loc 1 1119 71 is_stmt 0 view .LVU6700
 20092 083f 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# sample_max, %sfp
 20092      78
 20093              	# sieve_extend.c:1124:                         tuning_result[tuning_result_index].mediumstep_faster
1124:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20094              		.loc 1 1124 78 view .LVU6701
 20095 0844 488B4424 		mov	rax, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 20095      28
 20096              	# sieve_extend.c:1123:                         tuning_result[tuning_result_index].smallstep_faster 
1123:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20097              		.loc 1 1123 77 view .LVU6702
 20098 0849 49897D20 		mov	QWORD PTR 32[r13], rdi	# MEM[base: _520, offset: 32B], smallstep_faster
 20099              	# sieve_extend.c:1126:                         tune_benchmark(tuning_result, tuning_result_index);
1126:sieve_extend.c **** 
 20100              		.loc 1 1126 25 view .LVU6703
 20101 084d 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 20101      40
 20102              	# sieve_extend.c:1118:                         tuning_result[tuning_result_index].sample_duration =
1118:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
GAS LISTING /tmp/ccRwwoRx.s 			page 529


 20103              		.loc 1 1118 76 view .LVU6704
 20104 0852 C5FB10A4 		vmovsd	xmm4, QWORD PTR 128[rsp]	# sample_duration, %sfp
 20104      24800000 
 20104      00
 20105              	# sieve_extend.c:1117:                         tuning_result[tuning_result_index].maxints = maxints
1117:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20106              		.loc 1 1117 68 view .LVU6705
 20107 085b 49894D00 		mov	QWORD PTR 0[r13], rcx	# MEM[base: _520, offset: 0B], option_maxFactor.43_65
1118:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20108              		.loc 1 1118 25 is_stmt 1 view .LVU6706
 20109              	# sieve_extend.c:1119:                         tuning_result[tuning_result_index].sample_max = samp
1119:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20110              		.loc 1 1119 71 is_stmt 0 view .LVU6707
 20111 085f 4D894D38 		mov	QWORD PTR 56[r13], r9	# MEM[base: _520, offset: 56B], sample_max
 20112              	# sieve_extend.c:1120:                         tuning_result[tuning_result_index].blocksize_kb = bl
1120:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20113              		.loc 1 1120 73 view .LVU6708
 20114 0863 4D896510 		mov	QWORD PTR 16[r13], r12	# MEM[base: _520, offset: 16B], blocksize_kb
 20115              	# sieve_extend.c:1121:                         tuning_result[tuning_result_index].free_bits = free_
1121:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20116              		.loc 1 1121 70 view .LVU6709
 20117 0867 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _520, offset: 24B], free_bits
 20118              	# sieve_extend.c:1122:                         tuning_result[tuning_result_index].blocksize_bits = 
1122:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20119              		.loc 1 1122 75 view .LVU6710
 20120 086b 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _520, offset: 8B], ivtmp.823
 20121              	# sieve_extend.c:1124:                         tuning_result[tuning_result_index].mediumstep_faster
1124:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20122              		.loc 1 1124 78 view .LVU6711
 20123 086f 49894528 		mov	QWORD PTR 40[r13], rax	# MEM[base: _520, offset: 40B], mediumstep_faster
 20124              	# sieve_extend.c:1125:                         tuning_result[tuning_result_index].vectorstep_faster
1125:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20125              		.loc 1 1125 78 view .LVU6712
 20126 0873 4D897530 		mov	QWORD PTR 48[r13], r14	# MEM[base: _520, offset: 48B], vectorstep_faster
 20127              	# sieve_extend.c:1118:                         tuning_result[tuning_result_index].sample_duration =
1118:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20128              		.loc 1 1118 76 view .LVU6713
 20129 0877 C4C17B11 		vmovsd	QWORD PTR 64[r13], xmm4	# MEM[base: _520, offset: 64B], sample_duration
 20129      6540
1119:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20130              		.loc 1 1119 25 is_stmt 1 view .LVU6714
1120:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20131              		.loc 1 1120 25 view .LVU6715
1121:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20132              		.loc 1 1121 25 view .LVU6716
1122:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20133              		.loc 1 1122 25 view .LVU6717
1123:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20134              		.loc 1 1123 25 view .LVU6718
1124:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20135              		.loc 1 1124 25 view .LVU6719
1125:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20136              		.loc 1 1125 25 view .LVU6720
1126:sieve_extend.c **** 
 20137              		.loc 1 1126 25 view .LVU6721
 20138 087d E8000000 		call	tune_benchmark	#
 20138      00
GAS LISTING /tmp/ccRwwoRx.s 			page 530


 20139              	.LVL1200:
1128:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20140              		.loc 1 1128 25 view .LVU6722
 20141              	# sieve_extend.c:1128:                         if ( tuning_result[tuning_result_index].avg > best_a
1128:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20142              		.loc 1 1128 64 is_stmt 0 view .LVU6723
 20143 0882 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r13]	# _256, MEM[base: _520, offset: 88B]
 20143      5D58
 20144              	# sieve_extend.c:1128:                         if ( tuning_result[tuning_result_index].avg > best_a
1128:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20145              		.loc 1 1128 28 view .LVU6724
 20146 0888 C5F92F5C 		vcomisd	xmm3, QWORD PTR 56[rsp]	# _256, %sfp
 20146      2438
 20147 088e 0F874CFF 		ja	.L1573	#,
 20147      FFFF
 20148              	.L1574:
1136:sieve_extend.c ****                         tuning_result_index++;
 20149              		.loc 1 1136 25 is_stmt 1 view .LVU6725
 20150              	# sieve_extend.c:1136:                         if (option_verboselevel >= 3) { printf("...."); tuni
1136:sieve_extend.c ****                         tuning_result_index++;
 20151              		.loc 1 1136 28 is_stmt 0 view .LVU6726
 20152 0894 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 20152      02
 20153 0899 0F8E70FF 		jle	.L1571	#,
 20153      FFFF
1136:sieve_extend.c ****                         tuning_result_index++;
 20154              		.loc 1 1136 57 is_stmt 1 view .LVU6727
 20155              	.LVL1201:
 20156              	.LBB1202:
 20157              	.LBI1202:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20158              		.loc 3 105 1 view .LVU6728
 20159              	.LBB1203:
 20160              		.loc 3 107 3 view .LVU6729
 20161              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20162              		.loc 3 107 10 is_stmt 0 view .LVU6730
 20163 089f 488D3500 		lea	rsi, .LC54[rip]	#,
 20163      000000
 20164 08a6 BF010000 		mov	edi, 1	#,
 20164      00
 20165 08ab 31C0     		xor	eax, eax	#
 20166 08ad E8000000 		call	__printf_chk@PLT	#
 20166      00
 20167              	.LVL1202:
 20168              		.loc 3 107 10 view .LVU6731
 20169              	.LBE1203:
 20170              	.LBE1202:
1136:sieve_extend.c ****                         tuning_result_index++;
 20171              		.loc 1 1136 73 is_stmt 1 view .LVU6732
 20172              	.LBB1204:
 20173              	.LBI1204:
1050:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20174              		.loc 1 1050 20 view .LVU6733
 20175              	.LBB1205:
1051:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20176              		.loc 1 1051 5 view .LVU6734
 20177              	.LBB1206:
GAS LISTING /tmp/ccRwwoRx.s 			page 531


 20178              	.LBI1206:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20179              		.loc 3 105 1 view .LVU6735
 20180              	.LBB1207:
 20181              		.loc 3 107 3 view .LVU6736
 20182              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20183              		.loc 3 107 10 is_stmt 0 view .LVU6737
 20184 08b2 498B4538 		mov	rax, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 20185 08b6 BF010000 		mov	edi, 1	#,
 20185      00
 20186 08bb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 20186      4550
 20187 08c1 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 20188 08c5 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 20189 08c9 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[base: _520, offset: 56B]
 20189      18
 20190 08ce B8030000 		mov	eax, 3	#,
 20190      00
 20191 08d3 498B7548 		mov	rsi, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 20192 08d7 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _520, offset: 72B]
 20192      10
 20193 08dc 488D3500 		lea	rsi, .LC53[rip]	#,
 20193      000000
 20194 08e3 4D8B4530 		mov	r8, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 20195 08e7 4C894424 		mov	QWORD PTR 8[rsp], r8	#, MEM[base: _520, offset: 48B]
 20195      08
 20196 08ec 4D8B5528 		mov	r10, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 20197 08f0 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _520, offset: 40B]
 20198 08f4 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 20199 08f8 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 20200 08fc C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 20200      5558
 20201 0902 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 20201      4D40
 20202 0908 E8000000 		call	__printf_chk@PLT	#
 20202      00
 20203              	.LVL1203:
 20204              		.loc 3 107 10 view .LVU6738
 20205              	.LBE1207:
 20206              	.LBE1206:
 20207              	# sieve_extend.c:1056: }
1056:sieve_extend.c **** 
 20208              		.loc 1 1056 1 view .LVU6739
 20209 090d E9FDFEFF 		jmp	.L1571	#
 20209      FF
 20210              	.LVL1204:
 20211              		.p2align 4,,7
 20212 0912 660F1F44 		.p2align 3
 20212      0000
 20213              	.L1572:
1056:sieve_extend.c **** 
 20214              		.loc 1 1056 1 view .LVU6740
 20215              	.LBE1205:
 20216              	.LBE1204:
 20217              	.LBE1218:
 20218              	.LBE1220:
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
GAS LISTING /tmp/ccRwwoRx.s 			page 532


 20219              		.loc 1 1111 67 is_stmt 1 view .LVU6741
 20220              	# sieve_extend.c:1111:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20221              		.loc 1 1111 80 is_stmt 0 view .LVU6742
 20222 0918 49D1EC   		shr	r12	# blocksize_kb
 20223              	.LVL1205:
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20224              		.loc 1 1111 50 is_stmt 1 view .LVU6743
 20225              	# sieve_extend.c:1111:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1111:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20226              		.loc 1 1111 17 is_stmt 0 view .LVU6744
 20227 091b 836C246C 		sub	DWORD PTR 108[rsp], 1	# %sfp,
 20227      01
 20228 0920 0F859AFE 		jne	.L1578	#,
 20228      FFFF
 20229              	.LBE1222:
1110:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20230              		.loc 1 1110 109 is_stmt 1 view .LVU6745
 20231              	# sieve_extend.c:1110:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1110:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20232              		.loc 1 1110 127 is_stmt 0 view .LVU6746
 20233 0926 4C03B424 		add	r14, QWORD PTR 144[rsp]	# vectorstep_faster, %sfp
 20233      90000000 
 20234              	.LVL1206:
1110:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20235              		.loc 1 1110 67 is_stmt 1 view .LVU6747
 20236              	# sieve_extend.c:1110:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1110:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20237              		.loc 1 1110 13 is_stmt 0 view .LVU6748
 20238 092e 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 20238      010000
 20239 0935 0F8675FE 		jbe	.L1580	#,
 20239      FFFF
 20240              	.LBE1198:
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20241              		.loc 1 1109 102 is_stmt 1 view .LVU6749
 20242              	# sieve_extend.c:1109:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20243              		.loc 1 1109 120 is_stmt 0 view .LVU6750
 20244 093b 4C8BB424 		mov	r14, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 20244      98000000 
 20245              	.LVL1207:
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20246              		.loc 1 1109 120 view .LVU6751
 20247 0943 4C017424 		add	QWORD PTR 40[rsp], r14	# %sfp, smallstep_faster_steps
 20247      28
 20248              	.LVL1208:
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20249              		.loc 1 1109 120 view .LVU6752
 20250 0948 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 20250      28
 20251              	.LVL1209:
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20252              		.loc 1 1109 62 is_stmt 1 view .LVU6753
 20253              	# sieve_extend.c:1109:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1109:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 20254              		.loc 1 1109 9 is_stmt 0 view .LVU6754
GAS LISTING /tmp/ccRwwoRx.s 			page 533


 20255 094d 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 20256 0951 0F8649FE 		jbe	.L1582	#,
 20256      FFFF
 20257              	.LBE1197:
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 20258              		.loc 1 1108 83 is_stmt 1 view .LVU6755
 20259              	# sieve_extend.c:1108:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 20260              		.loc 1 1108 100 is_stmt 0 view .LVU6756
 20261 0957 488B9C24 		mov	rbx, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 20261      98000000 
 20262 095f 48015C24 		add	QWORD PTR 48[rsp], rbx	# %sfp, smallstep_faster_steps
 20262      30
 20263              	.LVL1210:
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 20264              		.loc 1 1108 100 view .LVU6757
 20265 0964 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 20265      30
 20266              	.LVL1211:
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 20267              		.loc 1 1108 42 is_stmt 1 view .LVU6758
 20268              	# sieve_extend.c:1108:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_count
1108:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 20269              		.loc 1 1108 5 is_stmt 0 view .LVU6759
 20270 0969 4983FD20 		cmp	r13, 32	# smallstep_faster,
 20271 096d 0F861FFE 		jbe	.L1570	#,
 20271      FFFF
 20272              	.LBE1227:
1143:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 20273              		.loc 1 1143 5 is_stmt 1 view .LVU6760
 20274              	# sieve_extend.c:1143:     if (option_verboselevel >= 2) {
1143:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 20275              		.loc 1 1143 8 is_stmt 0 view .LVU6761
 20276 0973 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 20276      01
 20277 0978 7E3A     		jle	.L1583	#,
1144:sieve_extend.c ****         printf("Best options\n");
 20278              		.loc 1 1144 9 is_stmt 1 view .LVU6762
 20279              	.LVL1212:
 20280              	.LBB1228:
 20281              	.LBI1228:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20282              		.loc 3 105 1 view .LVU6763
 20283              	.LBB1229:
 20284              		.loc 3 107 3 view .LVU6764
 20285              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20286              		.loc 3 107 10 is_stmt 0 view .LVU6765
 20287 097a 488B6C24 		mov	rbp, QWORD PTR 96[rsp]	# best_vectorstep_faster, %sfp
 20287      60
 20288              	.LVL1213:
 20289              		.loc 3 107 10 view .LVU6766
 20290 097f BF010000 		mov	edi, 1	#,
 20290      00
 20291 0984 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	#, %sfp
 20291      58
 20292 0989 4C89FA   		mov	rdx, r15	#, tuning_results
 20293 098c 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	#, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 534


 20293      50
 20294 0991 488D3500 		lea	rsi, .LC55[rip]	#,
 20294      000000
 20295 0998 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	#, %sfp
 20295      48
 20296 099d 31C0     		xor	eax, eax	#
 20297 099f 48892C24 		mov	QWORD PTR [rsp], rbp	#, best_vectorstep_faster
 20298 09a3 E8000000 		call	__printf_chk@PLT	#
 20298      00
 20299              	.LVL1214:
 20300              		.loc 3 107 10 view .LVU6767
 20301              	.LBE1229:
 20302              	.LBE1228:
1145:sieve_extend.c ****     }
 20303              		.loc 1 1145 9 is_stmt 1 view .LVU6768
 20304              	.LBB1230:
 20305              	.LBI1230:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20306              		.loc 3 105 1 view .LVU6769
 20307              	.LBB1231:
 20308              		.loc 3 107 3 view .LVU6770
 20309              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20310              		.loc 3 107 10 is_stmt 0 view .LVU6771
 20311 09a8 488D3D00 		lea	rdi, .LC56[rip]	#,
 20311      000000
 20312 09af E8000000 		call	puts@PLT	#
 20312      00
 20313              	.LVL1215:
 20314              	.L1583:
 20315              		.loc 3 107 10 view .LVU6772
 20316              	.LBE1231:
 20317              	.LBE1230:
 20318              	.LBB1232:
 20319              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20320              		.loc 1 1163 24 view .LVU6773
 20321 09b4 4531DB   		xor	r11d, r11d	# step
 20322              	.LBE1232:
 20323              	.LBB1233:
 20324              	# sieve_extend.c:1155:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20325              		.loc 1 1155 75 view .LVU6774
 20326 09b7 41BE0A00 		mov	r14d, 10	# tmp476,
 20326      0000
 20327 09bd 4C8B6C24 		mov	r13, QWORD PTR 120[rsp]	# sample_max, %sfp
 20327      78
 20328              	.LVL1216:
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20329              		.loc 1 1155 75 view .LVU6775
 20330 09c2 4C8B6424 		mov	r12, QWORD PTR 64[rsp]	# tuning_result, %sfp
 20330      40
 20331              	.LVL1217:
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20332              		.loc 1 1155 75 view .LVU6776
 20333 09c7 4C895C24 		mov	QWORD PTR 48[rsp], r11	# %sfp, step
 20333      30
 20334              	.LVL1218:
GAS LISTING /tmp/ccRwwoRx.s 			page 535


 20335              	.L1588:
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20336              		.loc 1 1155 75 view .LVU6777
 20337              	.LBE1233:
1148:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 20338              		.loc 1 1148 11 is_stmt 1 view .LVU6778
 20339 09cc 4983FF04 		cmp	r15, 4	# tuning_results,
 20340 09d0 0F862E04 		jbe	.L1684	#,
 20340      0000
1149:sieve_extend.c ****         step++;
 20341              		.loc 1 1149 9 view .LVU6779
 20342 09d6 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 20342      000000
 20343 09dd BA600000 		mov	edx, 96	#,
 20343      00
 20344 09e2 4C89FE   		mov	rsi, r15	#, tuning_results
 20345 09e5 4C89E7   		mov	rdi, r12	#, tuning_result
 20346 09e8 E8000000 		call	qsort@PLT	#
 20346      00
 20347              	.LVL1219:
1150:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20348              		.loc 1 1150 9 view .LVU6780
1151:sieve_extend.c ****             tuning_result_index = 0;
 20349              		.loc 1 1151 9 view .LVU6781
 20350              	# sieve_extend.c:1150:         step++;
1150:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20351              		.loc 1 1150 13 is_stmt 0 view .LVU6782
 20352 09ed 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 20352      3001
 20353              	.LVL1220:
 20354              	# sieve_extend.c:1151:         if (option_verboselevel >= 2) {
1151:sieve_extend.c ****             tuning_result_index = 0;
 20355              		.loc 1 1151 12 view .LVU6783
 20356 09f3 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 20356      01
 20357 09f8 0F8F8902 		jg	.L1584	#,
 20357      0000
 20358              	.L1586:
1161:sieve_extend.c **** 
 20359              		.loc 1 1161 9 is_stmt 1 view .LVU6784
 20360              	# sieve_extend.c:1161:         tuning_results = tuning_results / 2;
1161:sieve_extend.c **** 
 20361              		.loc 1 1161 24 is_stmt 0 view .LVU6785
 20362 09fe 49D1EF   		shr	r15	# tuning_results
 20363              	.LVL1221:
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20364              		.loc 1 1163 9 is_stmt 1 view .LVU6786
 20365              	.LBB1242:
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20366              		.loc 1 1163 14 view .LVU6787
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20367              		.loc 1 1163 29 view .LVU6788
 20368              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20369              		.loc 1 1163 24 is_stmt 0 view .LVU6789
 20370 0a01 31ED     		xor	ebp, ebp	# i
 20371 0a03 4D89FB   		mov	r11, r15	# tmp490, tuning_results
GAS LISTING /tmp/ccRwwoRx.s 			page 536


 20372 0a06 498D5C24 		lea	rbx, 56[r12]	# ivtmp.804,
 20372      38
 20373 0a0b 4183E307 		and	r11d, 7	# tmp490,
 20374 0a0f 0F84D300 		je	.L1585	#,
 20374      0000
 20375 0a15 4983FB01 		cmp	r11, 1	# tmp490,
 20376 0a19 0F84AA00 		je	.L1643	#,
 20376      0000
 20377 0a1f 4983FB02 		cmp	r11, 2	# tmp490,
 20378 0a23 0F848A00 		je	.L1644	#,
 20378      0000
 20379 0a29 4983FB03 		cmp	r11, 3	# tmp490,
 20380 0a2d 746E     		je	.L1645	#,
 20381 0a2f 4983FB04 		cmp	r11, 4	# tmp490,
 20382 0a33 7452     		je	.L1646	#,
 20383 0a35 4983FB05 		cmp	r11, 5	# tmp490,
 20384 0a39 7436     		je	.L1647	#,
 20385 0a3b 4983FB06 		cmp	r11, 6	# tmp490,
 20386 0a3f 741A     		je	.L1648	#,
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20387              		.loc 1 1164 13 is_stmt 1 view .LVU6790
 20388 0a41 31F6     		xor	esi, esi	#
 20389 0a43 4C89E7   		mov	rdi, r12	#, tuning_result
 20390 0a46 E8000000 		call	tune_benchmark	#
 20390      00
 20391              	.LVL1222:
1165:sieve_extend.c ****         }
 20392              		.loc 1 1165 13 view .LVU6791
 20393              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20394              		.loc 1 1163 48 is_stmt 0 view .LVU6792
 20395 0a4b BD010000 		mov	ebp, 1	# i,
 20395      00
 20396              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20397              		.loc 1 1165 41 view .LVU6793
 20398 0a50 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20399              		.loc 1 1163 47 is_stmt 1 view .LVU6794
 20400              	.LVL1223:
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20401              		.loc 1 1163 29 view .LVU6795
 20402 0a53 498D9C24 		lea	rbx, 152[r12]	# ivtmp.804,
 20402      98000000 
 20403              	.L1648:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20404              		.loc 1 1164 13 view .LVU6796
 20405 0a5b 4889EE   		mov	rsi, rbp	#, i
 20406 0a5e 4C89E7   		mov	rdi, r12	#, tuning_result
 20407 0a61 E8000000 		call	tune_benchmark	#
 20407      00
 20408              	.LVL1224:
1165:sieve_extend.c ****         }
 20409              		.loc 1 1165 13 view .LVU6797
 20410              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20411              		.loc 1 1163 48 is_stmt 0 view .LVU6798
GAS LISTING /tmp/ccRwwoRx.s 			page 537


 20412 0a66 4883C501 		add	rbp, 1	# i,
 20413              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20414              		.loc 1 1165 41 view .LVU6799
 20415 0a6a 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20416              		.loc 1 1163 47 is_stmt 1 view .LVU6800
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20417              		.loc 1 1163 29 view .LVU6801
 20418 0a6d 4883C360 		add	rbx, 96	# ivtmp.804,
 20419              	.L1647:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20420              		.loc 1 1164 13 view .LVU6802
 20421 0a71 4889EE   		mov	rsi, rbp	#, i
 20422 0a74 4C89E7   		mov	rdi, r12	#, tuning_result
 20423 0a77 E8000000 		call	tune_benchmark	#
 20423      00
 20424              	.LVL1225:
1165:sieve_extend.c ****         }
 20425              		.loc 1 1165 13 view .LVU6803
 20426              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20427              		.loc 1 1163 48 is_stmt 0 view .LVU6804
 20428 0a7c 4883C501 		add	rbp, 1	# i,
 20429              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20430              		.loc 1 1165 41 view .LVU6805
 20431 0a80 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20432              		.loc 1 1163 47 is_stmt 1 view .LVU6806
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20433              		.loc 1 1163 29 view .LVU6807
 20434 0a83 4883C360 		add	rbx, 96	# ivtmp.804,
 20435              	.L1646:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20436              		.loc 1 1164 13 view .LVU6808
 20437 0a87 4889EE   		mov	rsi, rbp	#, i
 20438 0a8a 4C89E7   		mov	rdi, r12	#, tuning_result
 20439 0a8d E8000000 		call	tune_benchmark	#
 20439      00
 20440              	.LVL1226:
1165:sieve_extend.c ****         }
 20441              		.loc 1 1165 13 view .LVU6809
 20442              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20443              		.loc 1 1163 48 is_stmt 0 view .LVU6810
 20444 0a92 4883C501 		add	rbp, 1	# i,
 20445              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20446              		.loc 1 1165 41 view .LVU6811
 20447 0a96 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20448              		.loc 1 1163 47 is_stmt 1 view .LVU6812
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20449              		.loc 1 1163 29 view .LVU6813
 20450 0a99 4883C360 		add	rbx, 96	# ivtmp.804,
 20451              	.L1645:
GAS LISTING /tmp/ccRwwoRx.s 			page 538


1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20452              		.loc 1 1164 13 view .LVU6814
 20453 0a9d 4889EE   		mov	rsi, rbp	#, i
 20454 0aa0 4C89E7   		mov	rdi, r12	#, tuning_result
 20455 0aa3 E8000000 		call	tune_benchmark	#
 20455      00
 20456              	.LVL1227:
1165:sieve_extend.c ****         }
 20457              		.loc 1 1165 13 view .LVU6815
 20458              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20459              		.loc 1 1163 48 is_stmt 0 view .LVU6816
 20460 0aa8 4883C501 		add	rbp, 1	# i,
 20461              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20462              		.loc 1 1165 41 view .LVU6817
 20463 0aac 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20464              		.loc 1 1163 47 is_stmt 1 view .LVU6818
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20465              		.loc 1 1163 29 view .LVU6819
 20466 0aaf 4883C360 		add	rbx, 96	# ivtmp.804,
 20467              	.L1644:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20468              		.loc 1 1164 13 view .LVU6820
 20469 0ab3 4889EE   		mov	rsi, rbp	#, i
 20470 0ab6 4C89E7   		mov	rdi, r12	#, tuning_result
 20471 0ab9 E8000000 		call	tune_benchmark	#
 20471      00
 20472              	.LVL1228:
1165:sieve_extend.c ****         }
 20473              		.loc 1 1165 13 view .LVU6821
 20474              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20475              		.loc 1 1163 48 is_stmt 0 view .LVU6822
 20476 0abe 4883C501 		add	rbp, 1	# i,
 20477              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20478              		.loc 1 1165 41 view .LVU6823
 20479 0ac2 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20480              		.loc 1 1163 47 is_stmt 1 view .LVU6824
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20481              		.loc 1 1163 29 view .LVU6825
 20482 0ac5 4883C360 		add	rbx, 96	# ivtmp.804,
 20483              	.L1643:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20484              		.loc 1 1164 13 view .LVU6826
 20485 0ac9 4889EE   		mov	rsi, rbp	#, i
 20486 0acc 4C89E7   		mov	rdi, r12	#, tuning_result
 20487              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20488              		.loc 1 1163 48 is_stmt 0 view .LVU6827
 20489 0acf 4883C501 		add	rbp, 1	# i,
 20490              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20491              		.loc 1 1164 13 view .LVU6828
GAS LISTING /tmp/ccRwwoRx.s 			page 539


 20492 0ad3 E8000000 		call	tune_benchmark	#
 20492      00
 20493              	.LVL1229:
1165:sieve_extend.c ****         }
 20494              		.loc 1 1165 13 is_stmt 1 view .LVU6829
 20495              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20496              		.loc 1 1165 41 is_stmt 0 view .LVU6830
 20497 0ad8 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20498              		.loc 1 1163 47 is_stmt 1 view .LVU6831
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20499              		.loc 1 1163 29 view .LVU6832
 20500 0adb 4883C360 		add	rbx, 96	# ivtmp.804,
 20501              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20502              		.loc 1 1163 9 is_stmt 0 view .LVU6833
 20503 0adf 4939EF   		cmp	r15, rbp	# tuning_results, i
 20504 0ae2 0F84E4FE 		je	.L1588	#,
 20504      FFFF
 20505              	.L1585:
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20506              		.loc 1 1164 13 is_stmt 1 view .LVU6834
 20507 0ae8 4889EE   		mov	rsi, rbp	#, i
 20508 0aeb 4C89E7   		mov	rdi, r12	#, tuning_result
 20509 0aee E8000000 		call	tune_benchmark	#
 20509      00
 20510              	.LVL1230:
1165:sieve_extend.c ****         }
 20511              		.loc 1 1165 13 view .LVU6835
 20512 0af3 488D7B60 		lea	rdi, 96[rbx]	# tmp492,
 20513              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20514              		.loc 1 1165 41 is_stmt 0 view .LVU6836
 20515 0af7 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20516              		.loc 1 1163 47 is_stmt 1 view .LVU6837
 20517 0afa 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp492
 20517      28
 20518              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20519              		.loc 1 1163 48 is_stmt 0 view .LVU6838
 20520 0aff 488D7501 		lea	rsi, 1[rbp]	# tmp491,
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20521              		.loc 1 1163 29 is_stmt 1 view .LVU6839
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20522              		.loc 1 1164 13 view .LVU6840
 20523 0b03 4C89E7   		mov	rdi, r12	#, tuning_result
 20524 0b06 E8000000 		call	tune_benchmark	#
 20524      00
 20525              	.LVL1231:
1165:sieve_extend.c ****         }
 20526              		.loc 1 1165 13 view .LVU6841
 20527              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20528              		.loc 1 1165 41 is_stmt 0 view .LVU6842
 20529 0b0b 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# tmp492, %sfp
GAS LISTING /tmp/ccRwwoRx.s 			page 540


 20529      28
 20530 0b10 488D83C0 		lea	rax, 192[rbx]	# ivtmp.804,
 20530      000000
 20531              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20532              		.loc 1 1163 48 view .LVU6843
 20533 0b17 488D7502 		lea	rsi, 2[rbp]	# i,
 20534              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20535              		.loc 1 1164 13 view .LVU6844
 20536 0b1b 4C89E7   		mov	rdi, r12	#, tuning_result
 20537 0b1e 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.804
 20537      28
 20538              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20539              		.loc 1 1165 41 view .LVU6845
 20540 0b23 4D0129   		add	QWORD PTR [r9], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20541              		.loc 1 1163 47 is_stmt 1 view .LVU6846
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20542              		.loc 1 1163 29 view .LVU6847
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20543              		.loc 1 1164 13 view .LVU6848
 20544 0b26 E8000000 		call	tune_benchmark	#
 20544      00
 20545              	.LVL1232:
1165:sieve_extend.c ****         }
 20546              		.loc 1 1165 13 view .LVU6849
 20547              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20548              		.loc 1 1165 41 is_stmt 0 view .LVU6850
 20549 0b2b 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20549      28
 20550 0b30 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.804,
 20550      010000
 20551 0b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.804
 20551      28
 20552              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20553              		.loc 1 1164 13 view .LVU6851
 20554 0b3c 4C89E7   		mov	rdi, r12	#, tuning_result
 20555              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20556              		.loc 1 1165 41 view .LVU6852
 20557 0b3f 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20558              		.loc 1 1163 47 is_stmt 1 view .LVU6853
 20559              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20560              		.loc 1 1163 48 is_stmt 0 view .LVU6854
 20561 0b42 488D7503 		lea	rsi, 3[rbp]	# i,
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20562              		.loc 1 1163 29 is_stmt 1 view .LVU6855
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20563              		.loc 1 1164 13 view .LVU6856
 20564 0b46 E8000000 		call	tune_benchmark	#
 20564      00
GAS LISTING /tmp/ccRwwoRx.s 			page 541


 20565              	.LVL1233:
1165:sieve_extend.c ****         }
 20566              		.loc 1 1165 13 view .LVU6857
 20567              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20568              		.loc 1 1165 41 is_stmt 0 view .LVU6858
 20569 0b4b 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20569      28
 20570 0b50 488D9380 		lea	rdx, 384[rbx]	# ivtmp.804,
 20570      010000
 20571              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20572              		.loc 1 1163 48 view .LVU6859
 20573 0b57 488D7504 		lea	rsi, 4[rbp]	# i,
 20574              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20575              		.loc 1 1164 13 view .LVU6860
 20576 0b5b 4C89E7   		mov	rdi, r12	#, tuning_result
 20577 0b5e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.804
 20577      28
 20578              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20579              		.loc 1 1165 41 view .LVU6861
 20580 0b63 4D012A   		add	QWORD PTR [r10], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20581              		.loc 1 1163 47 is_stmt 1 view .LVU6862
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20582              		.loc 1 1163 29 view .LVU6863
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20583              		.loc 1 1164 13 view .LVU6864
 20584 0b66 E8000000 		call	tune_benchmark	#
 20584      00
 20585              	.LVL1234:
1165:sieve_extend.c ****         }
 20586              		.loc 1 1165 13 view .LVU6865
 20587              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20588              		.loc 1 1165 41 is_stmt 0 view .LVU6866
 20589 0b6b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20589      28
 20590 0b70 4C8D9BE0 		lea	r11, 480[rbx]	# ivtmp.804,
 20590      010000
 20591              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20592              		.loc 1 1163 48 view .LVU6867
 20593 0b77 488D7505 		lea	rsi, 5[rbp]	# i,
 20594              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20595              		.loc 1 1164 13 view .LVU6868
 20596 0b7b 4C89E7   		mov	rdi, r12	#, tuning_result
 20597 0b7e 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.804
 20597      28
 20598              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20599              		.loc 1 1165 41 view .LVU6869
 20600 0b83 4C0129   		add	QWORD PTR [rcx], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccRwwoRx.s 			page 542


 20601              		.loc 1 1163 47 is_stmt 1 view .LVU6870
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20602              		.loc 1 1163 29 view .LVU6871
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20603              		.loc 1 1164 13 view .LVU6872
 20604 0b86 E8000000 		call	tune_benchmark	#
 20604      00
 20605              	.LVL1235:
1165:sieve_extend.c ****         }
 20606              		.loc 1 1165 13 view .LVU6873
 20607              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20608              		.loc 1 1165 41 is_stmt 0 view .LVU6874
 20609 0b8b 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20609      28
 20610 0b90 4C8D8B40 		lea	r9, 576[rbx]	# ivtmp.804,
 20610      020000
 20611 0b97 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.804
 20611      28
 20612              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20613              		.loc 1 1163 48 view .LVU6875
 20614 0b9c 488D7506 		lea	rsi, 6[rbp]	# i,
 20615              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20616              		.loc 1 1165 41 view .LVU6876
 20617 0ba0 4C012F   		add	QWORD PTR [rdi], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20618              		.loc 1 1163 47 is_stmt 1 view .LVU6877
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20619              		.loc 1 1163 29 view .LVU6878
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20620              		.loc 1 1164 13 view .LVU6879
 20621 0ba3 4C89E7   		mov	rdi, r12	#, tuning_result
 20622 0ba6 E8000000 		call	tune_benchmark	#
 20622      00
 20623              	.LVL1236:
1165:sieve_extend.c ****         }
 20624              		.loc 1 1165 13 view .LVU6880
 20625              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20626              		.loc 1 1165 41 is_stmt 0 view .LVU6881
 20627 0bab 488B4424 		mov	rax, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20627      28
 20628              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20629              		.loc 1 1163 48 view .LVU6882
 20630 0bb0 488D7507 		lea	rsi, 7[rbp]	# i,
 20631 0bb4 4C8D83A0 		lea	r8, 672[rbx]	# ivtmp.804,
 20631      020000
 20632              	# sieve_extend.c:1164:             tune_benchmark(tuning_result, i);
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20633              		.loc 1 1164 13 view .LVU6883
 20634 0bbb 4C89E7   		mov	rdi, r12	#, tuning_result
 20635 0bbe 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.804
 20635      28
 20636              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccRwwoRx.s 			page 543


1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20637              		.loc 1 1163 48 view .LVU6884
 20638 0bc3 4883C508 		add	rbp, 8	# i,
 20639              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20640              		.loc 1 1165 41 view .LVU6885
 20641 0bc7 4C0128   		add	QWORD PTR [rax], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20642              		.loc 1 1163 47 is_stmt 1 view .LVU6886
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20643              		.loc 1 1163 29 view .LVU6887
1164:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20644              		.loc 1 1164 13 view .LVU6888
 20645 0bca 4881C300 		add	rbx, 768	# ivtmp.804,
 20645      030000
 20646 0bd1 E8000000 		call	tune_benchmark	#
 20646      00
 20647              	.LVL1237:
1165:sieve_extend.c ****         }
 20648              		.loc 1 1165 13 view .LVU6889
 20649              	# sieve_extend.c:1165:             tuning_result[i].sample_max += sample_max;
1165:sieve_extend.c ****         }
 20650              		.loc 1 1165 41 is_stmt 0 view .LVU6890
 20651 0bd6 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.804, %sfp
 20651      28
 20652 0bdb 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20653              		.loc 1 1163 47 is_stmt 1 view .LVU6891
 20654              	.LVL1238:
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20655              		.loc 1 1163 29 view .LVU6892
 20656              	# sieve_extend.c:1163:         for (counter_t i=0; i<tuning_results; i++) {
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20657              		.loc 1 1163 9 is_stmt 0 view .LVU6893
 20658 0bde 4939EF   		cmp	r15, rbp	# tuning_results, i
 20659 0be1 0F8501FF 		jne	.L1585	#,
 20659      FFFF
 20660 0be7 E9E0FDFF 		jmp	.L1588	#
 20660      FF
 20661              	.LVL1239:
 20662 0bec 0F1F4000 		.p2align 4,,7
 20663              		.p2align 3
 20664              	.L1683:
1163:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20665              		.loc 1 1163 9 view .LVU6894
 20666              	.LBE1242:
 20667              	.LBB1243:
 20668              	.LBB1225:
 20669              	.LBB1224:
 20670              	.LBB1223:
 20671              	.LBB1221:
 20672              	.LBB1219:
 20673              	.LBB1208:
 20674              	.LBB1209:
 20675              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20676              		.loc 3 107 10 view .LVU6895
 20677 0bf0 488D3500 		lea	rsi, .LC52[rip]	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 544


 20677      000000
 20678 0bf7 BF010000 		mov	edi, 1	#,
 20678      00
 20679 0bfc C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 20679      2438
 20680              	.LBE1209:
 20681              	.LBE1208:
1134:sieve_extend.c ****                         }
 20682              		.loc 1 1134 60 is_stmt 1 view .LVU6896
 20683              	.LVL1240:
 20684              	.LBB1211:
 20685              	.LBI1208:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20686              		.loc 3 105 1 view .LVU6897
 20687              	.LBB1210:
 20688              		.loc 3 107 3 view .LVU6898
 20689              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20690              		.loc 3 107 10 is_stmt 0 view .LVU6899
 20691 0c02 31C0     		xor	eax, eax	#
 20692 0c04 E8000000 		call	__printf_chk@PLT	#
 20692      00
 20693              	.LVL1241:
 20694              		.loc 3 107 10 view .LVU6900
 20695              	.LBE1210:
 20696              	.LBE1211:
1134:sieve_extend.c ****                         }
 20697              		.loc 1 1134 76 is_stmt 1 view .LVU6901
 20698              	.LBB1212:
 20699              	.LBI1212:
1050:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20700              		.loc 1 1050 20 view .LVU6902
 20701              	.LBB1213:
1051:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20702              		.loc 1 1051 5 view .LVU6903
 20703              	.LBB1214:
 20704              	.LBI1214:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20705              		.loc 3 105 1 view .LVU6904
 20706              	.LBB1215:
 20707              		.loc 3 107 3 view .LVU6905
 20708              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20709              		.loc 3 107 10 is_stmt 0 view .LVU6906
 20710 0c09 4D8B4538 		mov	r8, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 20711 0c0d BF010000 		mov	edi, 1	#,
 20711      00
 20712 0c12 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 20713 0c16 488D3500 		lea	rsi, .LC53[rip]	#,
 20713      000000
 20714 0c1d C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 20714      4550
 20715 0c23 B8030000 		mov	eax, 3	#,
 20715      00
 20716 0c28 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 20717 0c2c 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _520, offset: 56B]
 20717      18
 20718 0c31 4D8B5548 		mov	r10, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 20719 0c35 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _520, offset: 72B]
GAS LISTING /tmp/ccRwwoRx.s 			page 545


 20719      10
 20720 0c3a 4D8B5D30 		mov	r11, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 20721 0c3e 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _520, offset: 48B]
 20721      08
 20722 0c43 4D8B4D28 		mov	r9, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 20723 0c47 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _520, offset: 40B]
 20724 0c4b 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 20725 0c4f 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 20726 0c53 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 20726      5558
 20727 0c59 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 20727      4D40
 20728 0c5f E8000000 		call	__printf_chk@PLT	#
 20728      00
 20729              	.LVL1242:
 20730              		.loc 3 107 10 view .LVU6907
 20731              	.LBE1215:
 20732              	.LBE1214:
 20733              	# sieve_extend.c:1056: }
1056:sieve_extend.c **** 
 20734              		.loc 1 1056 1 view .LVU6908
 20735 0c64 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 20735      28
 20736 0c69 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 20736      30
 20737 0c6e 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 20737      60
 20738              	.LBE1213:
 20739              	.LBE1212:
 20740              	# sieve_extend.c:1130:                             best_blocksize_bits = blocksize_bits;
1130:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20741              		.loc 1 1130 49 view .LVU6909
 20742 0c73 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.823
 20742      48
 20743              	.LBB1217:
 20744              	.LBB1216:
 20745              	# sieve_extend.c:1056: }
1056:sieve_extend.c **** 
 20746              		.loc 1 1056 1 view .LVU6910
 20747 0c78 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, mediumstep_faster
 20747      58
 20748 0c7d 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, smallstep_faster
 20748      50
 20749 0c82 E90DFCFF 		jmp	.L1574	#
 20749      FF
 20750              	.LVL1243:
 20751              	.L1584:
1056:sieve_extend.c **** 
 20752              		.loc 1 1056 1 view .LVU6911
 20753              	.LBE1216:
 20754              	.LBE1217:
 20755              	.LBE1219:
 20756              	.LBE1221:
 20757              	.LBE1223:
 20758              	.LBE1224:
 20759              	.LBE1225:
 20760              	.LBE1243:
GAS LISTING /tmp/ccRwwoRx.s 			page 546


1152:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 20761              		.loc 1 1152 13 is_stmt 1 view .LVU6912
1153:sieve_extend.c ****             if (option_verboselevel >= 3) {
 20762              		.loc 1 1153 13 view .LVU6913
 20763              	.LBB1244:
 20764              	.LBI1244:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20765              		.loc 3 105 1 view .LVU6914
 20766              	.LBB1245:
 20767              		.loc 3 107 3 view .LVU6915
 20768              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20769              		.loc 3 107 10 is_stmt 0 view .LVU6916
 20770 0c87 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 20770      30
 20771 0c8c 488D3500 		lea	rsi, .LC57[rip]	#,
 20771      000000
 20772 0c93 BF010000 		mov	edi, 1	#,
 20772      00
 20773 0c98 31C0     		xor	eax, eax	#
 20774 0c9a E8000000 		call	__printf_chk@PLT	#
 20774      00
 20775              	.LVL1244:
 20776              		.loc 3 107 10 view .LVU6917
 20777              	.LBE1245:
 20778              	.LBE1244:
1153:sieve_extend.c ****             if (option_verboselevel >= 3) {
 20779              		.loc 1 1153 47 is_stmt 1 view .LVU6918
 20780              	.LBB1246:
 20781              	.LBI1246:
1050:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20782              		.loc 1 1050 20 view .LVU6919
 20783              	.LBB1247:
1051:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20784              		.loc 1 1051 5 view .LVU6920
 20785              	.LBB1248:
 20786              	.LBI1248:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20787              		.loc 3 105 1 view .LVU6921
 20788              	.LBB1249:
 20789              		.loc 3 107 3 view .LVU6922
 20790              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20791              		.loc 3 107 10 is_stmt 0 view .LVU6923
 20792 0c9f 498B5C24 		mov	rbx, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struc
 20792      38
 20793 0ca4 488D3500 		lea	rsi, .LC53[rip]	#,
 20793      000000
 20794 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 20794      442450
 20795 0cb2 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 20795      10
 20796 0cb7 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 20796      08
 20797 0cbc 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 20797      18
 20798 0cc1 498B7C24 		mov	rdi, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 20798      48
 20799 0cc6 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
GAS LISTING /tmp/ccRwwoRx.s 			page 547


 20799      10
 20800 0ccb BF010000 		mov	edi, 1	#,
 20800      00
 20801 0cd0 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struct
 20801      30
 20802 0cd5 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 20802      08
 20803 0cda 498B4424 		mov	rax, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struc
 20803      28
 20804 0cdf 48890424 		mov	QWORD PTR [rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 20805 0ce3 B8030000 		mov	eax, 3	#,
 20805      00
 20806 0ce8 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 20806      20
 20807 0ced 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 20807      18
 20808 0cf2 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 20808      542458
 20809 0cf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 20809      4C2440
 20810 0d00 E8000000 		call	__printf_chk@PLT	#
 20810      00
 20811              	.LVL1245:
 20812              		.loc 3 107 10 view .LVU6924
 20813              	.LBE1249:
 20814              	.LBE1248:
 20815              	.LBE1247:
 20816              	.LBE1246:
1154:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20817              		.loc 1 1154 13 is_stmt 1 view .LVU6925
 20818              	# sieve_extend.c:1154:             if (option_verboselevel >= 3) {
1154:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 20819              		.loc 1 1154 16 is_stmt 0 view .LVU6926
 20820 0d05 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 20820      02
 20821 0d0a 0F84EEFC 		je	.L1586	#,
 20821      FFFF
 20822 0d10 498D5C24 		lea	rbx, 8[r12]	# ivtmp.810,
 20822      08
 20823              	.LBB1250:
 20824              	# sieve_extend.c:1155:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20825              		.loc 1 1155 32 view .LVU6927
 20826 0d15 31ED     		xor	ebp, ebp	# tuning_result_index
 20827              	.L1587:
 20828              	.LVL1246:
1156:sieve_extend.c ****                 }
 20829              		.loc 1 1156 21 is_stmt 1 view .LVU6928
 20830              	.LBB1234:
 20831              	.LBI1234:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20832              		.loc 3 105 1 view .LVU6929
 20833              	.LBB1235:
 20834              		.loc 3 107 3 view .LVU6930
 20835              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20836              		.loc 3 107 10 is_stmt 0 view .LVU6931
 20837 0d17 488D3500 		lea	rsi, .LC58[rip]	#,
GAS LISTING /tmp/ccRwwoRx.s 			page 548


 20837      000000
 20838 0d1e BF010000 		mov	edi, 1	#,
 20838      00
 20839 0d23 31C0     		xor	eax, eax	#
 20840              	.LBE1235:
 20841              	.LBE1234:
 20842              	# sieve_extend.c:1155:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20843              		.loc 1 1155 118 view .LVU6932
 20844 0d25 4883C501 		add	rbp, 1	# tuning_result_index,
 20845              	.LVL1247:
 20846              	.LBB1237:
 20847              	.LBB1236:
 20848              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20849              		.loc 3 107 10 view .LVU6933
 20850 0d29 E8000000 		call	__printf_chk@PLT	#
 20850      00
 20851              	.LVL1248:
 20852              		.loc 3 107 10 view .LVU6934
 20853              	.LBE1236:
 20854              	.LBE1237:
1156:sieve_extend.c ****                 }
 20855              		.loc 1 1156 36 is_stmt 1 view .LVU6935
 20856              	.LBB1238:
 20857              	.LBI1238:
1050:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20858              		.loc 1 1050 20 view .LVU6936
 20859              	.LBB1239:
1051:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20860              		.loc 1 1051 5 view .LVU6937
 20861              	.LBB1240:
 20862              	.LBI1240:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20863              		.loc 3 105 1 view .LVU6938
 20864              	.LBB1241:
 20865              		.loc 3 107 3 view .LVU6939
 20866              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20867              		.loc 3 107 10 is_stmt 0 view .LVU6940
 20868 0d2e 488B7330 		mov	rsi, QWORD PTR 48[rbx]	# MEM[base: _224, offset: 48B], MEM[base: _224, offset: 48B]
 20869 0d32 BF010000 		mov	edi, 1	#,
 20869      00
 20870 0d37 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _224, offset: 8B], MEM[base: _224, offset: 8B]
 20871 0d3b B8030000 		mov	eax, 3	#,
 20871      00
 20872 0d40 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _224, offset: 72B], MEM[base: _224, offset: 72B]
 20872      48
 20873 0d45 4883C360 		add	rbx, 96	# ivtmp.810,
 20874 0d49 48897424 		mov	QWORD PTR 24[rsp], rsi	#, MEM[base: _224, offset: 48B]
 20874      18
 20875 0d4e 488D3500 		lea	rsi, .LC53[rip]	#,
 20875      000000
 20876 0d55 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _224, offset: 64B], MEM[base: _224, offset: 64B]
 20877 0d59 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _224, offset: 64B]
 20877      10
 20878 0d5e 4C8B53C8 		mov	r10, QWORD PTR -56[rbx]	# MEM[base: _224, offset: 40B], MEM[base: _224, offset: 40B]
 20879 0d62 4C895424 		mov	QWORD PTR 8[rsp], r10	#, MEM[base: _224, offset: 40B]
 20879      08
GAS LISTING /tmp/ccRwwoRx.s 			page 549


 20880 0d67 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _224, offset: 32B], MEM[base: _224, offset: 32B]
 20881 0d6b 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _224, offset: 32B]
 20882 0d6f 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _224, offset: 24B]
 20883 0d73 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _224, offset: 16B]
 20884 0d77 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _224, offset: 0B]
 20885 0d7b C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _224, offset: 80B]
 20885      F0
 20886 0d80 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _224, offset: 56B]
 20886      D8
 20887 0d85 E8000000 		call	__printf_chk@PLT	#
 20887      00
 20888              	.LVL1249:
 20889              		.loc 3 107 10 view .LVU6941
 20890              	.LBE1241:
 20891              	.LBE1240:
 20892              	.LBE1239:
 20893              	.LBE1238:
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20894              		.loc 1 1155 99 is_stmt 1 view .LVU6942
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20895              		.loc 1 1155 55 view .LVU6943
 20896              	# sieve_extend.c:1155:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20897              		.loc 1 1155 75 is_stmt 0 view .LVU6944
 20898 0d8a 4983FF0A 		cmp	r15, 10	# tuning_results,
 20899 0d8e 4C89F1   		mov	rcx, r14	# tmp424, tmp476
 20900 0d91 490F46CF 		cmovbe	rcx, r15	# tuning_results,, tmp424
 20901              	# sieve_extend.c:1155:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20902              		.loc 1 1155 17 view .LVU6945
 20903 0d95 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp424
 20904 0d98 0F8279FF 		jb	.L1587	#,
 20904      FFFF
 20905 0d9e E95BFCFF 		jmp	.L1586	#
 20905      FF
 20906              	.LVL1250:
 20907              	.L1678:
1155:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20908              		.loc 1 1155 17 view .LVU6946
 20909              	.LBE1250:
 20910              	.LBE1195:
 20911              	.LBE1194:
 20912              	.LBE1193:
1451:sieve_extend.c ****     }
 20913              		.loc 1 1451 39 is_stmt 1 view .LVU6947
 20914              	.LBB1269:
 20915              	.LBI1269:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20916              		.loc 3 105 1 view .LVU6948
 20917              	.LBB1270:
 20918              		.loc 3 107 3 view .LVU6949
 20919              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20920              		.loc 3 107 10 is_stmt 0 view .LVU6950
 20921 0da3 488D3D00 		lea	rdi, .LC50[rip]	#,
 20921      000000
 20922              	.LBE1270:
 20923              	.LBE1269:
GAS LISTING /tmp/ccRwwoRx.s 			page 550


 20924              	# sieve_extend.c:1454:     counter_t best_blocksize_bits = default_blocksize;
1454:sieve_extend.c ****     if (option_tunelevel) {
 20925              		.loc 1 1454 15 view .LVU6951
 20926 0daa 41BC0000 		mov	r12d, 262144	# best_result$blocksize_bits,
 20926      0400
 20927              	.LBB1272:
 20928              	.LBB1271:
 20929              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20930              		.loc 3 107 10 view .LVU6952
 20931 0db0 E8000000 		call	puts@PLT	#
 20931      00
 20932              	.LVL1251:
 20933              		.loc 3 107 10 view .LVU6953
 20934              	.LBE1271:
 20935              	.LBE1272:
1454:sieve_extend.c ****     if (option_tunelevel) {
 20936              		.loc 1 1454 5 is_stmt 1 view .LVU6954
1455:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20937              		.loc 1 1455 5 view .LVU6955
 20938              	# sieve_extend.c:1455:     if (option_tunelevel) {
1455:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20939              		.loc 1 1455 9 is_stmt 0 view .LVU6956
 20940 0db5 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_63, option_tunelevel
 20940      AC000000 
 20941              	# sieve_extend.c:1455:     if (option_tunelevel) {
1455:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 20942              		.loc 1 1455 8 view .LVU6957
 20943 0dbd 4585C0   		test	r8d, r8d	# option_tunelevel.41_63
 20944 0dc0 0F858701 		jne	.L1685	#,
 20944      0000
 20945              	.LVL1252:
 20946              	.L1565:
 20947              	.LBB1273:
1465:sieve_extend.c ****         counter_t passes = 0;
 20948              		.loc 1 1465 9 is_stmt 1 view .LVU6958
 20949              	# sieve_extend.c:1465:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1465:sieve_extend.c ****         counter_t passes = 0;
 20950              		.loc 1 1465 12 is_stmt 0 view .LVU6959
 20951 0dc6 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 20951      00000000 
 20952 0dce 0F8E1AF6 		jle	.L1592	#,
 20952      FFFF
1465:sieve_extend.c ****         counter_t passes = 0;
 20953              		.loc 1 1465 39 is_stmt 1 discriminator 1 view .LVU6960
 20954              	.LVL1253:
 20955              	.LBB1177:
 20956              	.LBI1177:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20957              		.loc 3 105 1 discriminator 1 view .LVU6961
 20958              	.LBB1178:
 20959              		.loc 3 107 3 discriminator 1 view .LVU6962
 20960              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20961              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6963
 20962 0dd4 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 20962      000000
 20963 0ddb 4C89E2   		mov	rdx, r12	#, best_result$blocksize_bits
 20964 0dde 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
GAS LISTING /tmp/ccRwwoRx.s 			page 551


 20964      000000
 20965 0de5 488D3500 		lea	rsi, .LC60[rip]	#,
 20965      000000
 20966 0dec 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 20966      000000
 20967 0df3 BF010000 		mov	edi, 1	#,
 20967      00
 20968 0df8 31C0     		xor	eax, eax	#
 20969 0dfa E8000000 		call	__printf_chk@PLT	#
 20969      00
 20970              	.LVL1254:
 20971 0dff E9EAF5FF 		jmp	.L1592	#
 20971      FF
 20972              	.LVL1255:
 20973              	.L1684:
 20974              		.loc 3 107 10 discriminator 1 view .LVU6964
 20975              	.LBE1178:
 20976              	.LBE1177:
 20977              	.LBE1273:
 20978              	.LBB1274:
 20979              	.LBB1266:
 20980              	.LBB1263:
1169:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20981              		.loc 1 1169 5 is_stmt 1 view .LVU6965
 20982              	# sieve_extend.c:1169:     tuning_result_type best_result = tuning_result[0];
1169:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20983              		.loc 1 1169 24 is_stmt 0 view .LVU6966
 20984 0e04 4C8B7C24 		mov	r15, QWORD PTR 64[rsp]	# tuning_result, %sfp
 20984      40
 20985              	.LVL1256:
 20986              	# sieve_extend.c:1170:     if (option_verboselevel >= 1) {
1170:sieve_extend.c ****         tuning_result_index = 0;
 20987              		.loc 1 1170 8 view .LVU6967
 20988 0e09 837C2468 		cmp	DWORD PTR 104[rsp], 0	# %sfp,
 20988      00
 20989              	# sieve_extend.c:1169:     tuning_result_type best_result = tuning_result[0];
1169:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20990              		.loc 1 1169 24 view .LVU6968
 20991 0e0e 4D8B6708 		mov	r12, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 20992              	.LVL1257:
1169:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20993              		.loc 1 1169 24 view .LVU6969
 20994 0e12 4D8B7720 		mov	r14, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 20995 0e16 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 20996 0e1a 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1170:sieve_extend.c ****         tuning_result_index = 0;
 20997              		.loc 1 1170 5 is_stmt 1 view .LVU6970
 20998              	# sieve_extend.c:1170:     if (option_verboselevel >= 1) {
1170:sieve_extend.c ****         tuning_result_index = 0;
 20999              		.loc 1 1170 8 is_stmt 0 view .LVU6971
 21000 0e1e 7E6E     		jle	.L1590	#,
1171:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 21001              		.loc 1 1171 9 is_stmt 1 view .LVU6972
 21002              	.LVL1258:
1172:sieve_extend.c ****     }
 21003              		.loc 1 1172 9 view .LVU6973
 21004              	.LBB1251:
GAS LISTING /tmp/ccRwwoRx.s 			page 552


 21005              	.LBI1251:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21006              		.loc 3 105 1 view .LVU6974
 21007              	.LBB1252:
 21008              		.loc 3 107 3 view .LVU6975
 21009              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21010              		.loc 3 107 10 is_stmt 0 view .LVU6976
 21011 0e20 488D3500 		lea	rsi, .LC59[rip]	#,
 21011      000000
 21012 0e27 BF010000 		mov	edi, 1	#,
 21012      00
 21013 0e2c 31C0     		xor	eax, eax	#
 21014 0e2e E8000000 		call	__printf_chk@PLT	#
 21014      00
 21015              	.LVL1259:
 21016              		.loc 3 107 10 view .LVU6977
 21017              	.LBE1252:
 21018              	.LBE1251:
1172:sieve_extend.c ****     }
 21019              		.loc 1 1172 34 is_stmt 1 view .LVU6978
 21020              	.LBB1253:
 21021              	.LBI1253:
1050:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21022              		.loc 1 1050 20 view .LVU6979
 21023              	.LBB1254:
1051:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21024              		.loc 1 1051 5 view .LVU6980
 21025              	.LBB1255:
 21026              	.LBI1255:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21027              		.loc 3 105 1 view .LVU6981
 21028              	.LBB1256:
 21029              		.loc 3 107 3 view .LVU6982
 21030              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21031              		.loc 3 107 10 is_stmt 0 view .LVU6983
 21032 0e33 4D8B4F38 		mov	r9, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struct
 21033 0e37 BF010000 		mov	edi, 1	#,
 21033      00
 21034 0e3c C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 21034      4750
 21035 0e42 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 21036 0e46 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 21037 0e4a 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 21037      18
 21038 0e4f 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 21039 0e53 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 21039      10
 21040 0e58 B8030000 		mov	eax, 3	#,
 21040      00
 21041 0e5d 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struc
 21042 0e61 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 21042      08
 21043 0e66 488D3500 		lea	rsi, .LC53[rip]	#,
 21043      000000
 21044 0e6d 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struct
 21045 0e71 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 21046 0e75 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
GAS LISTING /tmp/ccRwwoRx.s 			page 553


 21047 0e79 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 21048 0e7d C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 21048      5758
 21049 0e83 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 21049      4F40
 21050 0e89 E8000000 		call	__printf_chk@PLT	#
 21050      00
 21051              	.LVL1260:
 21052              	.L1590:
 21053              		.loc 3 107 10 view .LVU6984
 21054              	.LBE1256:
 21055              	.LBE1255:
 21056              	.LBE1254:
 21057              	.LBE1253:
1175:sieve_extend.c ****     return best_result;
 21058              		.loc 1 1175 5 is_stmt 1 view .LVU6985
 21059 0e8e 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 21059      40
 21060 0e93 E8000000 		call	free@PLT	#
 21060      00
 21061              	.LVL1261:
1176:sieve_extend.c **** }
 21062              		.loc 1 1176 5 view .LVU6986
1176:sieve_extend.c **** }
 21063              		.loc 1 1176 5 is_stmt 0 view .LVU6987
 21064              	.LBE1263:
 21065              	.LBE1266:
1457:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21066              		.loc 1 1457 9 is_stmt 1 view .LVU6988
 21067              	# sieve_extend.c:1457:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1457:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21068              		.loc 1 1457 33 is_stmt 0 view .LVU6989
 21069 0e98 4C893500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r14	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 21069      000000
1458:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21070              		.loc 1 1458 9 is_stmt 1 view .LVU6990
 21071              	.LBE1274:
 21072              	# sieve_extend.c:1464:     if (best_blocksize_bits > 0) {
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21073              		.loc 1 1464 8 is_stmt 0 view .LVU6991
 21074 0e9f 4D85E4   		test	r12, r12	# best_result$blocksize_bits
 21075              	.LBB1275:
 21076              	# sieve_extend.c:1458:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1458:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21077              		.loc 1 1458 34 view .LVU6992
 21078 0ea2 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 21078      000000
1459:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21079              		.loc 1 1459 9 is_stmt 1 view .LVU6993
 21080              	# sieve_extend.c:1459:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1459:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21081              		.loc 1 1459 34 is_stmt 0 view .LVU6994
 21082 0ea9 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 21082      000000
1460:sieve_extend.c ****     }
 21083              		.loc 1 1460 9 is_stmt 1 view .LVU6995
 21084              	.LVL1262:
GAS LISTING /tmp/ccRwwoRx.s 			page 554


1460:sieve_extend.c ****     }
 21085              		.loc 1 1460 9 is_stmt 0 view .LVU6996
 21086              	.LBE1275:
1463:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 21087              		.loc 1 1463 5 is_stmt 1 view .LVU6997
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21088              		.loc 1 1464 5 view .LVU6998
 21089              	# sieve_extend.c:1464:     if (best_blocksize_bits > 0) {
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21090              		.loc 1 1464 8 is_stmt 0 view .LVU6999
 21091 0eb0 0F848CF6 		je	.L1591	#,
 21091      FFFF
 21092 0eb6 E90BFFFF 		jmp	.L1565	#
 21092      FF
 21093              	.LVL1263:
 21094              	.L1600:
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21095              		.loc 1 1464 8 view .LVU7000
 21096 0ebb 488D3D00 		lea	rdi, CSWTCH.124[rip]	# tmp339,
 21096      000000
 21097 0ec2 4C8D0D00 		lea	r9, CSWTCH.125[rip]	# tmp341,
 21097      000000
 21098 0ec9 488D2D00 		lea	rbp, CSWTCH.126[rip]	# tmp343,
 21098      000000
 21099              	.LVL1264:
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21100              		.loc 1 1464 8 view .LVU7001
 21101 0ed0 488D1D00 		lea	rbx, CSWTCH.127[rip]	# tmp345,
 21101      000000
 21102              	.LVL1265:
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21103              		.loc 1 1464 8 view .LVU7002
 21104 0ed7 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.124
 21105 0edb 4F8B34C1 		mov	r14, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.125
 21106 0edf 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.126
 21106      00
 21107              	.LVL1266:
1464:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21108              		.loc 1 1464 8 view .LVU7003
 21109 0ee4 C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.127
 21109      3CC3
 21110 0eea 48898C24 		mov	QWORD PTR 152[rsp], rcx	# %sfp, smallstep_faster_steps
 21110      98000000 
 21111 0ef2 4C89B424 		mov	QWORD PTR 144[rsp], r14	# %sfp, vectorstep_faster_steps
 21111      90000000 
 21112 0efa 4C897C24 		mov	QWORD PTR 112[rsp], r15	# %sfp, freebits_steps
 21112      70
 21113              	.LBB1276:
 21114              	# sieve_extend.c:1382:     for (int arg=1; arg < argc; arg++) {
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21115              		.loc 1 1382 14 view .LVU7004
 21116 0eff 48C74424 		mov	QWORD PTR 120[rsp], 8	# %sfp,
 21116      78080000 
 21116      00
 21117 0f08 C5FB11BC 		vmovsd	QWORD PTR 128[rsp], xmm7	# %sfp, sample_duration
 21117      24800000 
 21117      00
GAS LISTING /tmp/ccRwwoRx.s 			page 555


 21118              	.L1566:
 21119              	.LVL1267:
1382:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21120              		.loc 1 1382 14 view .LVU7005
 21121              	.LBE1276:
 21122              	.LBB1277:
 21123              	.LBB1267:
 21124              	.LBB1264:
1101:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 21125              		.loc 1 1101 5 is_stmt 1 view .LVU7006
 21126              	# sieve_extend.c:1101:     if (option_verboselevel >= 1) printf("Tuning..."); 
1101:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 21127              		.loc 1 1101 8 is_stmt 0 view .LVU7007
 21128 0f11 448B6C24 		mov	r13d, DWORD PTR 104[rsp]	# option_verboselevel.42_64, %sfp
 21128      68
 21129              	.LVL1268:
1101:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 21130              		.loc 1 1101 8 view .LVU7008
 21131 0f16 4585ED   		test	r13d, r13d	# option_verboselevel.42_64
 21132 0f19 0F8EEDF7 		jle	.L1568	#,
 21132      FFFF
1101:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 21133              		.loc 1 1101 35 is_stmt 1 view .LVU7009
 21134              	.LVL1269:
 21135              	.LBB1257:
 21136              	.LBI1257:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21137              		.loc 3 105 1 view .LVU7010
 21138              	.LBB1258:
 21139              		.loc 3 107 3 view .LVU7011
 21140              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21141              		.loc 3 107 10 is_stmt 0 view .LVU7012
 21142 0f1f 31C0     		xor	eax, eax	#
 21143 0f21 488D3500 		lea	rsi, .LC51[rip]	#,
 21143      000000
 21144 0f28 BF010000 		mov	edi, 1	#,
 21144      00
 21145              	.LBE1258:
 21146              	.LBE1257:
 21147              	# sieve_extend.c:1102:     if (option_verboselevel >= 2) printf("\n");
1102:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21148              		.loc 1 1102 8 view .LVU7013
 21149 0f2d 4489EB   		mov	ebx, r13d	# option_verboselevel.42_64, option_verboselevel.42_64
 21150              	.LBB1260:
 21151              	.LBB1259:
 21152              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21153              		.loc 3 107 10 view .LVU7014
 21154 0f30 E8000000 		call	__printf_chk@PLT	#
 21154      00
 21155              	.LVL1270:
 21156              		.loc 3 107 10 view .LVU7015
 21157              	.LBE1259:
 21158              	.LBE1260:
1102:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21159              		.loc 1 1102 5 is_stmt 1 view .LVU7016
 21160              	# sieve_extend.c:1102:     if (option_verboselevel >= 2) printf("\n");
1102:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
GAS LISTING /tmp/ccRwwoRx.s 			page 556


 21161              		.loc 1 1102 8 is_stmt 0 view .LVU7017
 21162 0f35 83EB01   		sub	ebx, 1	# option_verboselevel.42_64,
 21163 0f38 0F84CEF7 		je	.L1568	#,
 21163      FFFF
1102:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21164              		.loc 1 1102 35 is_stmt 1 view .LVU7018
 21165              	.LVL1271:
 21166              	.LBB1261:
 21167              	.LBI1261:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21168              		.loc 3 105 1 view .LVU7019
 21169              	.LBB1262:
 21170              		.loc 3 107 3 view .LVU7020
 21171              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21172              		.loc 3 107 10 is_stmt 0 view .LVU7021
 21173 0f3e BF0A0000 		mov	edi, 10	#,
 21173      00
 21174 0f43 E8000000 		call	putchar@PLT	#
 21174      00
 21175              	.LVL1272:
 21176 0f48 E9BFF7FF 		jmp	.L1568	#
 21176      FF
 21177              	.LVL1273:
 21178              	.L1685:
 21179              		.loc 3 107 10 view .LVU7022
 21180              	.LBE1262:
 21181              	.LBE1261:
 21182              	.LBE1264:
 21183              	.LBE1267:
1456:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21184              		.loc 1 1456 9 is_stmt 1 view .LVU7023
 21185              	# sieve_extend.c:1456:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1456:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21186              		.loc 1 1456 44 is_stmt 0 view .LVU7024
 21187 0f4d 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 21187      000000
 21188 0f54 4183E801 		sub	r8d, 1	#,
 21189 0f58 488BB424 		mov	rsi, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 21189      B0000000 
 21190 0f60 4183F802 		cmp	r8d, 2	# _215,
 21191 0f64 89542468 		mov	DWORD PTR 104[rsp], edx	# %sfp, option_verboselevel.42_64
 21192 0f68 4889B424 		mov	QWORD PTR 136[rsp], rsi	# %sfp, option_maxFactor.43_65
 21192      88000000 
 21193              	.LVL1274:
 21194              	.LBB1268:
1058:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 21195              		.loc 1 1058 27 is_stmt 1 view .LVU7025
 21196              	.LBB1265:
1059:sieve_extend.c **** 
 21197              		.loc 1 1059 5 view .LVU7026
1061:sieve_extend.c ****     best_blocksize_bits = 0;
 21198              		.loc 1 1061 5 view .LVU7027
1062:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 21199              		.loc 1 1062 5 view .LVU7028
1063:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 21200              		.loc 1 1063 5 view .LVU7029
1064:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
GAS LISTING /tmp/ccRwwoRx.s 			page 557


 21201              		.loc 1 1064 5 view .LVU7030
1065:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 21202              		.loc 1 1065 5 view .LVU7031
1066:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 21203              		.loc 1 1066 5 view .LVU7032
1067:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 21204              		.loc 1 1067 5 view .LVU7033
1068:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 21205              		.loc 1 1068 5 view .LVU7034
1069:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 21206              		.loc 1 1069 5 view .LVU7035
1070:sieve_extend.c ****     double sample_duration = default_sample_duration;
 21207              		.loc 1 1070 5 view .LVU7036
1071:sieve_extend.c **** 
 21208              		.loc 1 1071 5 view .LVU7037
1074:sieve_extend.c ****         case 1:
 21209              		.loc 1 1074 5 view .LVU7038
 21210 0f70 0F8645FF 		jbe	.L1600	#,
 21210      FFFF
 21211 0f76 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC28[rip]	# sample_duration,
 21211      00000000 
 21212 0f7e 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 21212      78050000 
 21212      00
 21213 0f87 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 21213      70800000 
 21213      00
 21214 0f90 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 21214      90000000 
 21214      20000000 
 21215 0f9c 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 21215      98000000 
 21215      04000000 
 21216 0fa8 C5FB1184 		vmovsd	QWORD PTR 128[rsp], xmm0	# %sfp, sample_duration
 21216      24800000 
 21216      00
 21217 0fb1 E95BFFFF 		jmp	.L1566	#
 21217      FF
 21218              	.LVL1275:
 21219              	.L1671:
1074:sieve_extend.c ****         case 1:
 21220              		.loc 1 1074 5 is_stmt 0 view .LVU7039
 21221              	.LBE1265:
 21222              	.LBE1268:
 21223              	.LBE1277:
 21224              	.LBB1278:
1385:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21225              		.loc 1 1385 34 is_stmt 1 discriminator 1 view .LVU7040
 21226              	.LBB1114:
 21227              	.LBI1114:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21228              		.loc 3 98 1 discriminator 1 view .LVU7041
 21229              	.LBB1115:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21230              		.loc 3 100 3 discriminator 1 view .LVU7042
 21231              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccRwwoRx.s 			page 558


 21232              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7043
 21233 0fb6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21233      000000
 21234 0fbd BA1B0000 		mov	edx, 27	#,
 21234      00
 21235 0fc2 BE010000 		mov	esi, 1	#,
 21235      00
 21236 0fc7 488D3D00 		lea	rdi, .LC32[rip]	#,
 21236      000000
 21237 0fce E8000000 		call	fwrite@PLT	#
 21237      00
 21238              	.LVL1276:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21239              		.loc 3 100 10 discriminator 1 view .LVU7044
 21240              	.LBE1115:
 21241              	.LBE1114:
1385:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21242              		.loc 1 1385 83 is_stmt 1 discriminator 1 view .LVU7045
 21243 0fd3 E903F6FF 		jmp	.L1669	#
 21243      FF
 21244              	.L1548:
1395:sieve_extend.c ****             }
 21245              		.loc 1 1395 17 view .LVU7046
 21246              	.LVL1277:
 21247              	.LBB1116:
 21248              	.LBI1111:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21249              		.loc 3 98 1 view .LVU7047
 21250              	.LBB1113:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21251              		.loc 3 100 3 view .LVU7048
 21252              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21253              		.loc 3 100 10 is_stmt 0 view .LVU7049
 21254 0fd8 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 21255 0fdb 488D1500 		lea	rdx, .LC38[rip]	#,
 21255      000000
 21256 0fe2 E9E1F5FF 		jmp	.L1668	#
 21256      FF
 21257              	.LVL1278:
 21258              	.L1552:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21259              		.loc 3 100 10 view .LVU7050
 21260              	.LBE1113:
 21261              	.LBE1116:
1402:sieve_extend.c ****             }
 21262              		.loc 1 1402 17 is_stmt 1 view .LVU7051
 21263              	.LBB1117:
 21264              	.LBI1117:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21265              		.loc 3 98 1 view .LVU7052
 21266              	.LBB1118:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21267              		.loc 3 100 3 view .LVU7053
 21268              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21269              		.loc 3 100 10 is_stmt 0 view .LVU7054
GAS LISTING /tmp/ccRwwoRx.s 			page 559


 21270 0fe7 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 21271 0fea 488D1500 		lea	rdx, .LC43[rip]	#,
 21271      000000
 21272 0ff1 E9D2F5FF 		jmp	.L1668	#
 21272      FF
 21273              	.LVL1279:
 21274              	.L1674:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21275              		.loc 3 100 10 view .LVU7055
 21276              	.LBE1118:
 21277              	.LBE1117:
1393:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21278              		.loc 1 1393 34 is_stmt 1 discriminator 1 view .LVU7056
 21279              	.LBB1119:
 21280              	.LBI1119:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21281              		.loc 3 98 1 discriminator 1 view .LVU7057
 21282              	.LBB1120:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21283              		.loc 3 100 3 discriminator 1 view .LVU7058
 21284              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21285              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7059
 21286 0ff6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21286      000000
 21287 0ffd 488D3D00 		lea	rdi, .LC37[rip]	#,
 21287      000000
 21288 1004 BA180000 		mov	edx, 24	#,
 21288      00
 21289 1009 BE010000 		mov	esi, 1	#,
 21289      00
 21290 100e E8000000 		call	fwrite@PLT	#
 21290      00
 21291              	.LVL1280:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21292              		.loc 3 100 10 discriminator 1 view .LVU7060
 21293              	.LBE1120:
 21294              	.LBE1119:
1393:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21295              		.loc 1 1393 80 is_stmt 1 discriminator 1 view .LVU7061
 21296 1013 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 21297 1017 E8000000 		call	usage	#
 21297      00
 21298              	.LVL1281:
 21299              	.L1682:
1393:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21300              		.loc 1 1393 80 is_stmt 0 discriminator 1 view .LVU7062
 21301              	.LBE1278:
 21302              	# sieve_extend.c:1489: }
 21303              		.loc 1 1489 1 view .LVU7063
 21304 101c E8000000 		call	__stack_chk_fail@PLT	#
 21304      00
 21305              	.LVL1282:
 21306              	.L1677:
 21307              	.LBB1279:
1400:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21308              		.loc 1 1400 34 is_stmt 1 discriminator 1 view .LVU7064
GAS LISTING /tmp/ccRwwoRx.s 			page 560


 21309              	.LBB1121:
 21310              	.LBI1121:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21311              		.loc 3 98 1 discriminator 1 view .LVU7065
 21312              	.LBB1122:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21313              		.loc 3 100 3 discriminator 1 view .LVU7066
 21314              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21315              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7067
 21316 1021 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21316      000000
 21317 1028 488D3D00 		lea	rdi, .LC41[rip]	#,
 21317      000000
 21318 102f BA1A0000 		mov	edx, 26	#,
 21318      00
 21319 1034 BE010000 		mov	esi, 1	#,
 21319      00
 21320 1039 E8000000 		call	fwrite@PLT	#
 21320      00
 21321              	.LVL1283:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21322              		.loc 3 100 10 discriminator 1 view .LVU7068
 21323              	.LBE1122:
 21324              	.LBE1121:
1400:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21325              		.loc 1 1400 82 is_stmt 1 discriminator 1 view .LVU7069
 21326 103e 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 21327 1042 E8000000 		call	usage	#
 21327      00
 21328              	.LVL1284:
 21329              	.LBE1279:
 21330              		.cfi_endproc
 21331              	.LFE99:
 21333              		.section	.rodata
 21334              		.align 16
 21337              	CSWTCH.127:
 21338 0000 9A999999 		.long	2576980378
 21339 0004 9999B93F 		.long	1069128089
 21340 0008 9A999999 		.long	2576980378
 21341 000c 9999C93F 		.long	1070176665
 21342 0010 9A999999 		.long	2576980378
 21343 0014 9999C93F 		.long	1070176665
 21344 0018 00000000 		.align 16
 21344      00000000 
 21347              	CSWTCH.126:
 21348 0020 00080000 		.quad	2048
 21348      00000000 
 21349 0028 00040000 		.quad	1024
 21349      00000000 
 21350 0030 40000000 		.quad	64
 21350      00000000 
 21351 0038 00000000 		.align 16
 21351      00000000 
 21354              	CSWTCH.125:
 21355 0040 20000000 		.quad	32
 21355      00000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 561


 21356 0048 10000000 		.quad	16
 21356      00000000 
 21357 0050 04000000 		.quad	4
 21357      00000000 
 21358 0058 00000000 		.align 16
 21358      00000000 
 21361              	CSWTCH.124:
 21362 0060 10000000 		.quad	16
 21362      00000000 
 21363 0068 08000000 		.quad	8
 21363      00000000 
 21364 0070 04000000 		.quad	4
 21364      00000000 
 21365              		.globl	global_VECTORSTEP_FASTER
 21366              		.data
 21367              		.align 8
 21370              	global_VECTORSTEP_FASTER:
 21371 0000 60000000 		.quad	96
 21371      00000000 
 21372              		.globl	global_MEDIUMSTEP_FASTER
 21373              		.bss
 21374              		.align 8
 21377              	global_MEDIUMSTEP_FASTER:
 21378 0000 00000000 		.zero	8
 21378      00000000 
 21379              		.globl	global_SMALLSTEP_FASTER
 21380              		.align 8
 21383              	global_SMALLSTEP_FASTER:
 21384 0008 00000000 		.zero	8
 21384      00000000 
 21385              		.section	.rodata.cst32,"aM",@progbits,32
 21386              		.align 32
 21387              	.LC0:
 21388 0000 00000000 		.quad	0
 21388      00000000 
 21389 0008 01000000 		.quad	1
 21389      00000000 
 21390 0010 02000000 		.quad	2
 21390      00000000 
 21391 0018 03000000 		.quad	3
 21391      00000000 
 21392              		.align 32
 21393              	.LC1:
 21394 0020 08000000 		.quad	8
 21394      00000000 
 21395 0028 08000000 		.quad	8
 21395      00000000 
 21396 0030 08000000 		.quad	8
 21396      00000000 
 21397 0038 08000000 		.quad	8
 21397      00000000 
 21398              		.align 32
 21399              	.LC2:
 21400 0040 04000000 		.quad	4
 21400      00000000 
 21401 0048 04000000 		.quad	4
 21401      00000000 
GAS LISTING /tmp/ccRwwoRx.s 			page 562


 21402 0050 04000000 		.quad	4
 21402      00000000 
 21403 0058 04000000 		.quad	4
 21403      00000000 
 21404              		.align 32
 21405              	.LC3:
 21406 0060 3F000000 		.long	63
 21407 0064 3F000000 		.long	63
 21408 0068 3F000000 		.long	63
 21409 006c 3F000000 		.long	63
 21410 0070 3F000000 		.long	63
 21411 0074 3F000000 		.long	63
 21412 0078 3F000000 		.long	63
 21413 007c 3F000000 		.long	63
 21414              		.section	.rodata.cst8,"aM",@progbits,8
 21415              		.align 8
 21416              	.LC6:
 21417 0000 00000000 		.long	0
 21418 0004 00000000 		.long	0
 21419              		.align 8
 21420              	.LC7:
 21421 0008 00000000 		.long	0
 21422 000c 0000F87F 		.long	2146959360
 21423              		.align 8
 21424              	.LC8:
 21425 0010 95D626E8 		.long	3894859413
 21426 0014 0B2E113E 		.long	1041313291
 21427              		.align 8
 21428              	.LC28:
 21429 0018 9A999999 		.long	2576980378
 21430 001c 9999B93F 		.long	1069128089
 21431              		.align 8
 21432              	.LC61:
 21433 0020 00000000 		.long	0
 21434 0024 00001440 		.long	1075052544
 21435              		.text
 21436              	.Letext0:
 21437              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 21438              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 21439              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 21440              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 21441              		.file 8 "/usr/include/stdio.h"
 21442              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 21443              		.file 10 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 21444              		.file 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 21445              		.file 12 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 21446              		.file 13 "/usr/include/stdint.h"
 21447              		.file 14 "/usr/include/time.h"
 21448              		.file 15 "/usr/include/math.h"
 21449              		.file 16 "/usr/include/stdlib.h"
 21450              		.file 17 "<built-in>"
 49701              		.section	.note.gnu.property,"a"
 49702              		.align 8
 49703 0000 04000000 		.long	 1f - 0f
 49704 0004 10000000 		.long	 4f - 1f
 49705 0008 05000000 		.long	 5
 49706              	0:
GAS LISTING /tmp/ccRwwoRx.s 			page 563


 49707 000c 474E5500 		.string	 "GNU"
 49708              	1:
 49709              		.align 8
 49710 0010 020000C0 		.long	 0xc0000002
 49711 0014 04000000 		.long	 3f - 2f
 49712              	2:
 49713 0018 03000000 		.long	 0x3
 49714              	3:
 49715 001c 00000000 		.align 8
 49716              	4:
GAS LISTING /tmp/ccRwwoRx.s 			page 564


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccRwwoRx.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccRwwoRx.s:21387  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccRwwoRx.s:21393  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccRwwoRx.s:21399  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccRwwoRx.s:21405  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccRwwoRx.s:1227   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccRwwoRx.s:3043   .text:00000000000012c0 compare_tuning_result
     /tmp/ccRwwoRx.s:3069   .text:00000000000012e0 setBitsTrue_largeRange_vector
     /tmp/ccRwwoRx.s:5004   .text:0000000000001d90 extendSieve_aligned
     /tmp/ccRwwoRx.s:5893   .text:0000000000002310 extendSieve_shiftleft
     /tmp/ccRwwoRx.s:8567   .text:00000000000033a0 show_primes.isra.0
     /tmp/ccRwwoRx.s:8562   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccRwwoRx.s:8560   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccRwwoRx.s:8974   .text:0000000000003540 sieve_shake
     /tmp/ccRwwoRx.s:21383  .bss:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccRwwoRx.s:21377  .bss:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccRwwoRx.s:21370  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccRwwoRx.s:13075  .text:0000000000004720 tune_benchmark
     /tmp/ccRwwoRx.s:21420  .rodata.cst8:0000000000000008 .LC7
     /tmp/ccRwwoRx.s:21424  .rodata.cst8:0000000000000010 .LC8
     /tmp/ccRwwoRx.s:13292  .text:0000000000004860 shiftvec
     /tmp/ccRwwoRx.s:14454  .text:0000000000004c20 validatePrimeCount
     /tmp/ccRwwoRx.s:14435  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccRwwoRx.s:14441  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccRwwoRx.s:14445  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccRwwoRx.s:14438  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccRwwoRx.s:14448  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccRwwoRx.s:15703  .text:00000000000053a0 usage
     /tmp/ccRwwoRx.s:15663  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccRwwoRx.s:15666  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccRwwoRx.s:15670  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccRwwoRx.s:15673  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccRwwoRx.s:15676  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccRwwoRx.s:15679  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccRwwoRx.s:15682  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccRwwoRx.s:15685  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccRwwoRx.s:15688  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccRwwoRx.s:15691  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccRwwoRx.s:15694  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccRwwoRx.s:15697  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccRwwoRx.s:15948  .text:0000000000005520 printfcomma2
     /tmp/ccRwwoRx.s:15940  .rodata.str1.1:000000000000003b .LC26
     /tmp/ccRwwoRx.s:15942  .rodata.str1.1:000000000000003e .LC27
     /tmp/ccRwwoRx.s:16074  .text:0000000000005590 printfcomma
     /tmp/ccRwwoRx.s:16534  .text:00000000000056f0 benchmark
     /tmp/ccRwwoRx.s:21416  .rodata.cst8:0000000000000000 .LC6
     /tmp/ccRwwoRx.s:16828  .text:00000000000058f0 test
     /tmp/ccRwwoRx.s:17132  .text:0000000000005a80 test2
     /tmp/ccRwwoRx.s:17252  .text:0000000000005c10 test3
     /tmp/ccRwwoRx.s:17521  .text:0000000000005d30 testshuffle_vector
     /tmp/ccRwwoRx.s:18026  .text:0000000000005fc0 testshuffle_vector2
     /tmp/ccRwwoRx.s:18037  .text:0000000000005fd0 testshuffle_word
     /tmp/ccRwwoRx.s:18739  .text.startup:0000000000000000 main
     /tmp/ccRwwoRx.s:18647  .rodata.str1.1:0000000000000053 .LC30
     /tmp/ccRwwoRx.s:18649  .rodata.str1.1:000000000000005a .LC31
GAS LISTING /tmp/ccRwwoRx.s 			page 565


     /tmp/ccRwwoRx.s:18658  .rodata.str1.1:0000000000000080 .LC34
     /tmp/ccRwwoRx.s:18660  .rodata.str1.1:0000000000000099 .LC35
     /tmp/ccRwwoRx.s:18662  .rodata.str1.1:00000000000000a1 .LC36
     /tmp/ccRwwoRx.s:18671  .rodata.str1.1:00000000000000c1 .LC39
     /tmp/ccRwwoRx.s:18692  .rodata.str1.1:000000000000014f .LC48
     /tmp/ccRwwoRx.s:18690  .rodata.str1.1:0000000000000136 .LC47
     /tmp/ccRwwoRx.s:18673  .rodata.str1.1:00000000000000d7 .LC40
     /tmp/ccRwwoRx.s:18677  .rodata.str1.1:00000000000000f9 .LC42
     /tmp/ccRwwoRx.s:18684  .rodata.str1.1:00000000000000fd .LC44
     /tmp/ccRwwoRx.s:18686  .rodata.str1.1:0000000000000116 .LC45
     /tmp/ccRwwoRx.s:18694  .rodata.str1.1:000000000000015f .LC49
     /tmp/ccRwwoRx.s:21432  .rodata.cst8:0000000000000020 .LC61
     /tmp/ccRwwoRx.s:18727  .rodata.str1.8:0000000000000548 .LC62
     /tmp/ccRwwoRx.s:18645  .rodata.str1.1:0000000000000044 .LC29
     /tmp/ccRwwoRx.s:18688  .rodata.str1.1:0000000000000127 .LC46
     /tmp/ccRwwoRx.s:18655  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/ccRwwoRx.s:18733  .rodata.str1.1:00000000000001b3 .LC64
     /tmp/ccRwwoRx.s:18730  .rodata.str1.8:0000000000000590 .LC63
     /tmp/ccRwwoRx.s:21428  .rodata.cst8:0000000000000018 .LC28
     /tmp/ccRwwoRx.s:18707  .rodata.str1.1:0000000000000188 .LC54
     /tmp/ccRwwoRx.s:18704  .rodata.str1.8:0000000000000420 .LC53
     /tmp/ccRwwoRx.s:18711  .rodata.str1.8:00000000000004a8 .LC55
     /tmp/ccRwwoRx.s:18714  .rodata.str1.1:000000000000018d .LC56
     /tmp/ccRwwoRx.s:18700  .rodata.str1.1:0000000000000183 .LC52
     /tmp/ccRwwoRx.s:18716  .rodata.str1.1:000000000000019a .LC57
     /tmp/ccRwwoRx.s:18718  .rodata.str1.1:00000000000001a1 .LC58
     /tmp/ccRwwoRx.s:18696  .rodata.str1.1:0000000000000166 .LC50
     /tmp/ccRwwoRx.s:18724  .rodata.str1.8:0000000000000510 .LC60
     /tmp/ccRwwoRx.s:18720  .rodata.str1.1:00000000000001a5 .LC59
     /tmp/ccRwwoRx.s:21361  .rodata:0000000000000060 CSWTCH.124
     /tmp/ccRwwoRx.s:21354  .rodata:0000000000000040 CSWTCH.125
     /tmp/ccRwwoRx.s:21347  .rodata:0000000000000020 CSWTCH.126
     /tmp/ccRwwoRx.s:21337  .rodata:0000000000000000 CSWTCH.127
     /tmp/ccRwwoRx.s:18698  .rodata.str1.1:0000000000000179 .LC51
     /tmp/ccRwwoRx.s:18651  .rodata.str1.1:0000000000000064 .LC32
     /tmp/ccRwwoRx.s:18668  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/ccRwwoRx.s:18681  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/ccRwwoRx.s:18664  .rodata.str1.1:00000000000000a8 .LC37
     /tmp/ccRwwoRx.s:18675  .rodata.str1.1:00000000000000de .LC41

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
GAS LISTING /tmp/ccRwwoRx.s 			page 566


